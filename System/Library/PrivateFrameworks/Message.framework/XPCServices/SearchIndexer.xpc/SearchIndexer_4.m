uint64_t (*SocketAddress.port.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int16 *v4;
  char v5;
  uint64_t v6;

  *(void *)(a1 + 16) = v1;
  v2 = *v1;
  v3 = (unint64_t)*v1 >> 62;
  if (v3)
  {
    if (v3 != 1)
    {
      v6 = 0;
      v5 = 1;
      goto LABEL_6;
    }
    v2 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  v4 = (unsigned __int16 *)(v2 + 18);
  v5 = 0;
  v6 = bswap32(*v4) >> 16;
LABEL_6:
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v5;
  return sub_10020C0AC;
}

uint64_t sub_10020C0AC(uint64_t a1)
{
  return SocketAddress.port.setter(*(void *)a1, *(unsigned char *)(a1 + 8));
}

BOOL sub_10020C0DC(uint64_t a1, uint64_t a2, size_t a3)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 96);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v5;
  v11[4] = v6;
  v11[5] = v7;
  uint64_t v12 = v8;
  sub_10020D33C((const char *)v11, a2, a3, &v13);
  swift_release();
  if (!v3) {
    return v13;
  }
  return v9;
}

uint64_t SocketAddress.withSockAddr<A>(_:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a3 >> 62)
  {
    if (a3 >> 62 == 1)
    {
      v19 = &v16;
      uint64_t v8 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v17 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      int v9 = *(_DWORD *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v10 = *(void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      __chkstk_darwin(a1);
      sub_10020DC8C();
      sub_10020C46C((uint64_t)sub_10020C54C, v4, v10, v8, v17, v9, a4);
      return swift_release();
    }
    else
    {
      v14 = memcpy(__dst, (const void *)((a3 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
      __chkstk_darwin(v14);
      sub_10020DC8C();
      sub_10020C564((uint64_t)sub_10020C54C, v4, a4);
      return swift_release();
    }
  }
  else
  {
    uint64_t v13 = *(void *)(a3 + 16);
    uint64_t v12 = *(void *)(a3 + 24);
    __chkstk_darwin(a1);
    v15[2] = a4;
    v15[3] = a1;
    v15[4] = a2;
    swift_retain();
    sub_10020C35C((uint64_t)sub_10020C54C, (uint64_t)v15, v13, v12, a4);
    return swift_release();
  }
}

uint64_t sub_10020C35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v10[0] = a3;
  v10[1] = a4;
  uint64_t v12 = a5;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  type metadata accessor for sockaddr_in(0);
  uint64_t v5 = sub_10000566C(qword_100710378);
  return sub_10020DCB4((uint64_t)v10, (uint64_t)sub_10020DC40, (uint64_t)v11, v6, v5, v7, (uint64_t)&protocol self-conformance witness table for Error, v8);
}

uint64_t sub_10020C46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  v16[0] = a3;
  v16[2] = a5;
  v16[1] = a4;
  int v17 = a6;
  uint64_t v13 = a7;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  type metadata accessor for sockaddr_in6(0);
  uint64_t v7 = sub_10000566C(qword_100710378);
  return sub_10020DCB4((uint64_t)v16, (uint64_t)sub_10020DC64, (uint64_t)v12, v8, v7, v9, (uint64_t)&protocol self-conformance witness table for Error, v10);
}

uint64_t sub_10020C54C()
{
  return sub_10020C650();
}

uint64_t sub_10020C564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  memcpy(__dst, v3, sizeof(__dst));
  uint64_t v14 = a3;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  type metadata accessor for sockaddr_un(0);
  uint64_t v8 = v7;
  uint64_t v9 = sub_10000566C(qword_100710378);
  return sub_10020D508((uint64_t)__dst, (uint64_t)sub_10020DC64, (uint64_t)v13, v8, v9, a3, (uint64_t)&protocol self-conformance witness table for Error, (uint64_t)&v11);
}

uint64_t sub_10020C650()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t SocketAddress.init(_:host:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4 = a2;
  char v5 = a1;
  unint64_t v6 = a1 >> 8;
  unint64_t v7 = a1 >> 16;
  unint64_t v8 = HIDWORD(a1);
  unint64_t v9 = a2 >> 8;
  unint64_t v10 = a2 >> 16;
  unint64_t v11 = a2 >> 24;
  unint64_t v12 = HIDWORD(a2);
  unint64_t v13 = a2 >> 40;
  unint64_t v15 = HIWORD(a2);
  unint64_t v16 = HIBYTE(a2);
  sub_10000566C(&qword_100710350);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v5;
  *(unsigned char *)(result + 17) = v6;
  *(_WORD *)(result + 18) = v7;
  *(_DWORD *)(result + 20) = v8;
  *(unsigned char *)(result + 24) = v4;
  *(unsigned char *)(result + 25) = v9;
  *(unsigned char *)(result + 26) = v10;
  *(unsigned char *)(result + 27) = v11;
  *(unsigned char *)(result + 28) = v12;
  *(unsigned char *)(result + 29) = v13;
  *(unsigned char *)(result + 30) = v15;
  *(unsigned char *)(result + 31) = v16;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  return result;
}

uint64_t SocketAddress.init(_:host:)(unint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  char v11 = a1;
  unint64_t v12 = a1 >> 8;
  unint64_t v13 = a1 >> 16;
  unint64_t v14 = HIDWORD(a1);
  sub_10000566C(&qword_100710348);
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v11;
  *(unsigned char *)(v15 + 17) = v12;
  *(_WORD *)(v15 + 18) = v13;
  *(_DWORD *)(v15 + 20) = v14;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(_DWORD *)(v15 + 40) = a4;
  *(void *)(v15 + 48) = a5;
  *(void *)(v15 + 56) = a6;
  return v15 | 0x4000000000000000;
}

unint64_t SocketAddress.init(unixDomainSocketPath:)(Swift::Int a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v4 = sub_1005E1E80();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0) {
      goto LABEL_6;
    }
    Swift::Int v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4 > 103)
  {
    swift_bridgeObjectRelease();
    sub_10020CA0C();
    sub_10020DD10();
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(void *)uint64_t v5 = 1;
    *(unsigned char *)(v5 + 24) = 2;
    return swift_willThrow();
  }
LABEL_6:
  Swift::Int v7 = sub_10020C958(a1, a2, (uint64_t)&off_1006CCA98);
  swift_bridgeObjectRelease();
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  memmove(&v14, (const void *)(v7 + 32), *(void *)(v7 + 16));
  swift_bridgeObjectRelease();
  sub_10000566C(&qword_100710340);
  uint64_t v8 = swift_allocObject();
  *(_WORD *)(v8 + 16) = 256;
  long long v9 = v15;
  *(_OWORD *)(v8 + 18) = v14;
  *(_OWORD *)(v8 + 34) = v9;
  long long v10 = v17;
  *(_OWORD *)(v8 + 50) = v16;
  long long v11 = v18;
  long long v12 = v19;
  uint64_t v13 = v20;
  *(_OWORD *)(v8 + 66) = v10;
  *(_OWORD *)(v8 + 82) = v11;
  *(_OWORD *)(v8 + 98) = v12;
  unint64_t result = v8 | 0x8000000000000000;
  *(void *)(v8 + 114) = v13;
  return result;
}

Swift::Int sub_10020C958(Swift::Int a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int result = sub_1005E1E80();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    Swift::Int result = HIBYTE(a2) & 0xF;
  }
  else
  {
    Swift::Int result = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (__OFADD__(v5, result))
  {
    __break(1u);
  }
  else
  {
    sub_1002325F4();
    uint64_t v9 = v7;
    swift_bridgeObjectRetain();
    sub_10031C290(a1, a2);
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_10031B984(v8);
    return v9;
  }
  return result;
}

unint64_t sub_10020CA0C()
{
  unint64_t result = qword_100710358;
  if (!qword_100710358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710358);
  }
  return result;
}

void *SocketAddress.init(ipAddress:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a3;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1005E2C50();
    swift_bridgeObjectRelease();
    if (!v3) {
      return (void *)v17[2];
    }
  }
  else
  {
    __chkstk_darwin(a1);
    Swift::Int v4 = v11;
    v11[2] = sub_10020D7E8;
    v11[3] = &v12;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = v7;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      sub_10020CBE8((const char *)v17, v6, (uint64_t *)&v16);
      if (v3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        Swift::Int v4 = v16;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if ((v7 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v7 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_1005E2D30();
      }
      Swift::Int v4 = (void *)sub_10020D788(v8, v9, (uint64_t (*)(void))sub_10020D808);
      swift_bridgeObjectRelease();
    }
  }
  return v4;
}

uint64_t sub_10020CBE8@<X0>(const char *a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  LODWORD(v12) = 0;
  sub_1001F5044(2, a1, &v12);
  if (!v3)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (!(a2 >> 16))
    {
      int v7 = v12;
      sub_10000566C(&qword_100710350);
      uint64_t result = swift_allocObject();
      *(_WORD *)(result + 16) = 512;
      *(_WORD *)(result + 18) = bswap32(a2) >> 16;
      *(_DWORD *)(result + 20) = v7;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0xE000000000000000;
      *a3 = result;
      return result;
    }
    __break(1u);
    goto LABEL_11;
  }
  swift_errorRelease();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  sub_1001F5044(30, a1, &v12);
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (a2 >> 16) {
    goto LABEL_12;
  }
  unsigned int v9 = bswap32(a2) >> 16;
  uint64_t v10 = v12;
  uint64_t v11 = v13;
  sub_10000566C(&qword_100710348);
  uint64_t result = swift_allocObject();
  *(_WORD *)(result + 16) = 7680;
  *(_WORD *)(result + 18) = v9;
  *(_DWORD *)(result + 20) = 0;
  *(void *)(result + 24) = v10;
  *(void *)(result + 32) = v11;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0xE000000000000000;
  *a3 = result | 0x4000000000000000;
  return result;
}

uint64_t SocketAddress.init(packedIPAddress:port:)(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  int v4 = a2;
  unint64_t v5 = HIDWORD(a2);
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
    goto LABEL_13;
  }
  int v6 = a3;
  unint64_t v7 = HIDWORD(a3);
  if (a3 - (BYTE6(a3) | (WORD2(a3) << 8)) < v5)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18[0] = a1;
  unint64_t v9 = HIWORD(a3);
  v18[1] = a2;
  int v19 = a3;
  __int16 v20 = WORD2(a3);
  char v21 = BYTE6(a3);
  uint64_t v22 = a2;
  unint64_t v23 = HIDWORD(a2);
  if (HIDWORD(a2) - a2 == 16)
  {
    long long v24 = 0uLL;
    if ((a4 & 0x8000000000000000) != 0)
    {
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
    }
    if (a4 >> 16) {
      goto LABEL_17;
    }
    unsigned int v14 = bswap32(a4) >> 16;
    sub_10020CFC8((uint64_t)v18, (uint64_t)&v24);
    long long v15 = v24;
    swift_release();
    sub_10000566C(&qword_100710348);
    uint64_t v16 = swift_allocObject();
    *(_WORD *)(v16 + 16) = 7680;
    *(_WORD *)(v16 + 18) = v14;
    *(_DWORD *)(v16 + 20) = 0;
    *(_OWORD *)(v16 + 24) = v15;
    *(_DWORD *)(v16 + 40) = 0;
    uint64_t result = v16 | 0x4000000000000000;
    *(void *)(v16 + 48) = 0;
    *(void *)(v16 + 56) = 0xE000000000000000;
  }
  else
  {
    if (HIDWORD(a2) - a2 == 4)
    {
      LOWORD(v24) = 512;
      *(void *)((char *)&v24 + 4) = 0;
      HIDWORD(v24) = 0;
      if ((a4 & 0x8000000000000000) == 0)
      {
        if (!(a4 >> 16))
        {
          WORD1(v24) = bswap32(a4) >> 16;
          sub_10020CFC8((uint64_t)v18, (uint64_t)&v24 + 4);
          int v10 = v24;
          int v11 = DWORD1(v24);
          uint64_t v12 = *((void *)&v24 + 1);
          swift_release();
          sub_10000566C(&qword_100710350);
          uint64_t result = swift_allocObject();
          *(_DWORD *)(result + 16) = v10;
          *(_DWORD *)(result + 20) = v11;
          *(void *)(result + 24) = v12;
          *(void *)(result + 32) = 0;
          *(void *)(result + 40) = 0xE000000000000000;
          return result;
        }
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    sub_10020D84C();
    sub_10020DD10();
    *(void *)uint64_t v17 = a1;
    *(_DWORD *)(v17 + 8) = v4;
    *(_DWORD *)(v17 + 12) = v5;
    *(_DWORD *)(v17 + 16) = v6;
    *(_WORD *)(v17 + 20) = v7;
    *(unsigned char *)(v17 + 22) = v9;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10020CFC8(uint64_t result, uint64_t a2)
{
  long long v6 = *(_OWORD *)result;
  long long v7 = *(_OWORD *)(result + 16);
  uint64_t v8 = *(void *)(result + 32);
  if (a2)
  {
    __chkstk_darwin(result);
    uint64_t result = sub_10020E544((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10020DC20);
    if ((result & 1) != 0 && v8 != *((void *)&v7 + 1))
    {
      uint64_t result = swift_beginAccess();
      if (v8 > *((uint64_t *)&v7 + 1))
      {
        uint64_t v3 = 0;
        unint64_t v4 = *(void *)(v6 + 24) + *((void *)&v7 + 1) + ((unint64_t)WORD2(v7) << 8) + BYTE6(v7);
        while (*((void *)&v7 + 1) + v3 >= DWORD2(v6)
             && *((void *)&v7 + 1) - DWORD2(v6) + v3 < (HIDWORD(v6) - DWORD2(v6)))
        {
          if (__OFADD__(v3, 1)) {
            goto LABEL_14;
          }
          *(unsigned char *)(a2 + v3) = *(unsigned char *)(v4 + v3);
          if (v8 - *((void *)&v7 + 1) == ++v3) {
            return result;
          }
        }
        __break(1u);
LABEL_14:
        __break(1u);
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t static SocketAddress.makeAddressResolvingHost(_:port:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v24 = 0;
  sub_1005E3230();
  long long v6 = (const char *)(sub_1005E1CE0() + 32);
  uint64_t v7 = sub_1005E1CE0();
  swift_bridgeObjectRelease();
  int v8 = getaddrinfo(v6, (const char *)(v7 + 32), 0, &v24);
  swift_release();
  swift_release();
  if (v8)
  {
    sub_10020CA0C();
    sub_10020DD10();
    *(void *)uint64_t v9 = a1;
    *(void *)(v9 + 8) = a2;
    *(void *)(v9 + 16) = a3;
    *(unsigned char *)(v9 + 24) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return a3;
  }
  int v10 = v24;
  if (v24)
  {
    ai_addr = v24->ai_addr;
    if (ai_addr)
    {
      int ai_family = v24->ai_family;
      if (ai_family == 30)
      {
        int v18 = *(_DWORD *)&ai_addr->sa_len;
        int v19 = *(_DWORD *)&ai_addr->sa_data[2];
        uint64_t v20 = *(void *)&ai_addr->sa_data[6];
        uint64_t v21 = *(void *)&ai_addr[1].sa_len;
        int v22 = *(_DWORD *)&ai_addr[1].sa_data[6];
        sub_10000566C(&qword_100710348);
        uint64_t v23 = swift_allocObject();
        *(_DWORD *)(v23 + 16) = v18;
        *(_DWORD *)(v23 + 20) = v19;
        *(void *)(v23 + 24) = v20;
        *(void *)(v23 + 32) = v21;
        *(_DWORD *)(v23 + 40) = v22;
        a3 = v23 | 0x4000000000000000;
        *(void *)(v23 + 48) = a1;
        *(void *)(v23 + 56) = a2;
        goto LABEL_12;
      }
      if (ai_family == 2)
      {
        int v13 = *(_DWORD *)&ai_addr->sa_len;
        int v14 = *(_DWORD *)&ai_addr->sa_data[2];
        sub_10000566C(&qword_100710350);
        a3 = swift_allocObject();
        uint64_t v15 = *(void *)&ai_addr->sa_data[6];
        *(_DWORD *)(a3 + 16) = v13;
        *(_DWORD *)(a3 + 20) = v14;
        *(void *)(a3 + 24) = v15;
        *(void *)(a3 + 32) = a1;
        *(void *)(a3 + 40) = a2;
LABEL_12:
        swift_bridgeObjectRetain();
        freeaddrinfo(v10);
        return a3;
      }
    }
  }
  sub_10020CA0C();
  sub_10020DD10();
  *(void *)(v16 + 8) = 0;
  *(void *)(v16 + 16) = 0;
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 24) = 2;
  swift_willThrow();
  if (v24) {
    freeaddrinfo(v24);
  }
  return a3;
}

uint64_t sub_10020D334()
{
  return SocketAddress.description.getter(*v0);
}

uint64_t sub_10020D33C@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, size_t a3@<X2>, BOOL *a4@<X8>)
{
  long long v5 = *(_OWORD *)(a2 + 34);
  v11[0] = *(_OWORD *)(a2 + 18);
  v11[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 66);
  long long v7 = *(_OWORD *)(a2 + 82);
  long long v8 = *(_OWORD *)(a2 + 98);
  uint64_t v9 = *(void *)(a2 + 114);
  v11[2] = *(_OWORD *)(a2 + 50);
  v11[3] = v6;
  void v11[4] = v7;
  v11[5] = v8;
  uint64_t v12 = v9;
  uint64_t result = strncmp(a1, (const char *)v11, a3);
  *a4 = result == 0;
  return result;
}

BOOL sub_10020D3D8(unint64_t *a1, unint64_t *a2)
{
  return static SocketAddress.== infix(_:_:)(*a1, *a2);
}

void SocketAddress.hash(into:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    uint64_t v3 = a2 & 0x3FFFFFFFFFFFFFFFLL;
    if (a2 >> 62 == 1)
    {
      sub_1005E3410(2uLL);
      sub_1005E3420(*(unsigned char *)(v3 + 17));
      sub_1005E3430(*(_WORD *)(v3 + 18));
      sub_1005E3440(*(_DWORD *)(v3 + 20));
      sub_1005E3440(*(_DWORD *)(v3 + 40));
      uint64_t v4 = *(void *)(v3 + 32);
      *(void *)&v11[0] = *(void *)(v3 + 24);
      *((void *)&v11[0] + 1) = v4;
    }
    else
    {
      sub_1005E3410(0);
      sub_1005E3420(*(unsigned char *)(v3 + 17));
      long long v5 = *(_OWORD *)(v3 + 34);
      long long v6 = *(_OWORD *)(v3 + 50);
      long long v7 = *(_OWORD *)(v3 + 66);
      long long v8 = *(_OWORD *)(v3 + 82);
      long long v9 = *(_OWORD *)(v3 + 98);
      v11[0] = *(_OWORD *)(v3 + 18);
      v11[1] = v5;
      uint64_t v10 = *(void *)(v3 + 114);
      v11[2] = v6;
      v11[3] = v7;
      void v11[4] = v8;
      v11[5] = v9;
      uint64_t v12 = v10;
      strnlen((const char *)v11, 0x68uLL);
    }
    sub_1005E3400();
  }
  else
  {
    sub_1005E3410(1uLL);
    sub_1005E3420(*(unsigned char *)(a2 + 17));
    sub_1005E3430(*(_WORD *)(a2 + 18));
    sub_1005E3440(*(_DWORD *)(a2 + 20));
  }
}

uint64_t sub_10020D508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = __chkstk_darwin(a1);
  int v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v12, v12 + *(void *)(*(void *)(v15 - 8) + 64), v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

Swift::Int SocketAddress.hashValue.getter(unint64_t a1)
{
  sub_1005E33F0();
  SocketAddress.hash(into:)((uint64_t)v3, a1);
  return sub_1005E3470();
}

Swift::Int sub_10020D644()
{
  return SocketAddress.hashValue.getter(*v0);
}

void sub_10020D64C(uint64_t a1)
{
  SocketAddress.hash(into:)(a1, *v1);
}

Swift::Int sub_10020D654()
{
  unint64_t v1 = *v0;
  sub_1005E33F0();
  SocketAddress.hash(into:)((uint64_t)v3, v1);
  return sub_1005E3470();
}

BOOL SocketAddress.isMulticast.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return 0;
    }
    return *(unsigned __int8 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == 255;
  }
  else
  {
    return (*(_DWORD *)(a1 + 20) & 0xF0) == 224;
  }
}

void *sub_10020D6D4(void *result, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if (!a2) {
      return _swiftEmptyArrayStorage;
    }
    int v3 = (int)result;
    uint64_t v4 = sub_1005E2150();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), v3, a2);
    return (void *)v4;
  }
  return result;
}

uint64_t sub_10020D744(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, void *a6)
{
  if (result)
  {
    uint64_t result = a3(result, a2 - result);
    if (v6) {
      *a6 = v6;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10020D788(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (!v3) {
    return v5;
  }
  return result;
}

void *sub_10020D7C8(void *__src, size_t __len, int a3, int a4, int a5, void *__dst)
{
  if (__src)
  {
    if ((__len & 0x8000000000000000) != 0) {
      __break(1u);
    }
    else {
      return memmove(__dst, __src, __len);
    }
  }
  return __src;
}

uint64_t sub_10020D7E8@<X0>(const char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10020CBE8(a1, *(void *)(v2 + 16), a2);
}

void *sub_10020D808@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_10020D84C()
{
  unint64_t result = qword_100710360;
  if (!qword_100710360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710360);
  }
  return result;
}

unint64_t sub_10020D89C()
{
  unint64_t result = qword_100710368;
  if (!qword_100710368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710368);
  }
  return result;
}

unint64_t sub_10020D8EC()
{
  unint64_t result = qword_100710370;
  if (!qword_100710370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710370);
  }
  return result;
}

uint64_t sub_10020D938(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SocketAddressError(uint64_t a1)
{
  return sub_10020D964(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_10020D964(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10020D938(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10020D938(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10020D964(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for Capability(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SocketAddressError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10020D964(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SocketAddressError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10020DAF0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10020DB08(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

void type metadata accessor for SocketAddressError()
{
}

void type metadata accessor for SocketAddressError.FailedToParseIPByteBuffer()
{
}

void *initializeWithTake for SearchKey(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t _s10SinglepartV4KindOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_10020DB9C(void *a1)
{
  return *a1 >> 62;
}

uint64_t *sub_10020DBA8(uint64_t *result, uint64_t a2)
{
  *__n128 result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

void type metadata accessor for SocketAddress()
{
}

void type metadata accessor for SocketAddress.IPv4Address()
{
}

void type metadata accessor for SocketAddress.IPv6Address()
{
}

void type metadata accessor for SocketAddress.UnixSocketAddress()
{
}

void *sub_10020DBEC(void *a1, size_t a2, uint64_t a3, int a4, int a5, void *a6)
{
  long long v6 = *(_OWORD *)(a3 + 16);
  v8[0] = *(_OWORD *)a3;
  v8[1] = v6;
  uint64_t v9 = *(void *)(a3 + 32);
  return sub_10020D7C8(a1, a2, (int)v8, a4, a5, a6);
}

void *sub_10020DC20(void *a1, size_t a2)
{
  return sub_10020DBEC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_10020DC40(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10020D744(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 16), a3);
}

uint64_t sub_10020DC64(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10020DC40(a1, a2, a3);
}

uint64_t sub_10020DC7C()
{
  return v0;
}

uint64_t sub_10020DC8C()
{
  return swift_retain();
}

uint64_t sub_10020DCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  return sub_10020D508(a1, a2, a3, v9, a5, v8, a7, (uint64_t)va);
}

void sub_10020DCD8(uint64_t a1, const void *a2)
{
  sub_10020BC14(30, a2, 0x2EuLL);
}

void sub_10020DCF4(uint64_t a1, const void *a2)
{
  sub_10020BC14(2, a2, 0x10uLL);
}

uint64_t sub_10020DD10()
{
  return swift_allocError();
}

const char *sub_10020DD3C(const char *result)
{
  if (result) {
    return (const char *)if_nametoindex(result);
  }
  __break(1u);
  return result;
}

uint64_t sub_10020DD6C(ifaddrs **a1)
{
  uint64_t result = getifaddrs(a1);
  if (result == -1)
  {
    uint64_t result = sub_1005E1050();
    int v3 = result;
    if (result == 4)
    {
      while (1)
      {
        uint64_t result = getifaddrs(a1);
        if (result != -1) {
          break;
        }
        uint64_t result = sub_1005E1050();
        if (result != 4)
        {
          int v3 = result;
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      if (v3 == 9 || v3 == 14)
      {
        __break(1u);
      }
      else
      {
        sub_1001F50C4();
        swift_allocError();
        strcpy(v5, "getifaddrs(_:)");
        v5[15] = -18;
        *((_DWORD *)v5 + 4) = v3;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_10020DE38()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t sub_10020DEA8()
{
  sub_10020DE38();
  return swift_deallocClassInstance();
}

uint64_t static System.coreCount.getter()
{
  return sysconf(58);
}

void **static System.enumerateInterfaces()()
{
  unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
  sub_10020E1B4(12);
  uint64_t v1 = (void **)&v5;
  sub_1005E20E0();
  long long v6 = 0;
  sub_10020DD6C(&v6);
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v6;
    if (v6)
    {
      type metadata accessor for NIONetworkInterface();
      int v3 = v2;
      do
      {
        sub_10020E330();
        if (sub_1002094BC((uint64_t)v7))
        {
          swift_retain();
          sub_1005E20A0();
          if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_10020E364();
          }
          sub_1005E2170();
          sub_1005E20E0();
          swift_release();
        }
        int v3 = v3->ifa_next;
      }
      while (v3);
    }
    uint64_t v1 = (void **)v5;
    freeifaddrs(v2);
  }
  return v1;
}

uint64_t *static System.enumerateDevices()()
{
  uint64_t v5 = sub_1005E2D00();
  uint64_t v1 = &v5;
  sub_1005E20E0();
  long long v6 = 0;
  sub_10020DD6C(&v6);
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v6;
    if (v6)
    {
      type metadata accessor for NIONetworkDevice.Backing();
      int v3 = v2;
      do
      {
        sub_10020E330();
        if (sub_10020A6FC((uint64_t)v7))
        {
          swift_retain();
          sub_1005E20A0();
          if (*(void *)(v5 + 16) >= *(void *)(v5 + 24) >> 1) {
            sub_10020E364();
          }
          sub_1005E2170();
          sub_1005E20E0();
          swift_release();
        }
        int v3 = v3->ifa_next;
      }
      while (v3);
    }
    uint64_t v1 = (uint64_t *)v5;
    freeifaddrs(v2);
  }
  return v1;
}

void *System.supportsUDPSegmentationOffload.unsafeMutableAddressor()
{
  return &static System.supportsUDPSegmentationOffload;
}

void *System.supportsUDPReceiveOffload.unsafeMutableAddressor()
{
  return &static System.supportsUDPReceiveOffload;
}

uint64_t sub_10020E1B4(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1005E2FB0();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1005E2D00();
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_10020E274()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Box()
{
  return sub_1000DAF2C();
}

ValueMetadata *type metadata accessor for System()
{
  return &type metadata for System;
}

uint64_t sub_10020E330()
{
  return swift_allocObject();
}

uint64_t sub_10020E364()
{
  return sub_1005E2110();
}

uint64_t sub_10020E388(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  if (v1 > 0xFFFFFFFFLL)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v2 = *(void *)(result + 32);
  if (v2 > 0xFFFFFFFFLL)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v3 = *(void *)(result + 16);
  if ((v3 | v1 | v2) < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v3 <= 0xFFFFFFFFLL)
  {
    uint64_t v4 = *(void *)result;
    uint64_t v5 = *(void *)(result + 24);
    uint64_t v6 = *(void *)result + 32;
    BOOL v7 = 1;
    uint64_t v8 = *(void *)(result + 40);
    uint64_t v9 = *(void *)(result + 32);
    BOOL v10 = 1;
    uint64_t result = *(void *)(result + 8);
    while (1)
    {
      if (v3 < v1 != v10 && result == v3) {
        return 1;
      }
      uint64_t result = result;
      unint64_t v12 = *(void *)(v4 + 16);
      if (result >= v12) {
        break;
      }
      uint64_t v13 = v6 + 16 * result;
      if (*(unsigned char *)(v13 + 8)) {
        goto LABEL_33;
      }
      uint64_t result = (v12 - 1) & (result + 1);
      BOOL v10 = result >= v1;
      if (HIDWORD(result)) {
        goto LABEL_24;
      }
      if (v8 < 0) {
        goto LABEL_25;
      }
      if (HIDWORD(v8)) {
        goto LABEL_26;
      }
      uint64_t v14 = *(void *)v13;
      if v9 == v8 && (((v8 < v2) ^ v7)) {
        return 1;
      }
      unint64_t v15 = *(void *)(v5 + 16);
      if (v9 >= v15) {
        goto LABEL_27;
      }
      uint64_t v16 = v5 + 32 + 16 * v9;
      if (*(unsigned char *)(v16 + 8)) {
        goto LABEL_34;
      }
      uint64_t v9 = (v15 - 1) & (v9 + 1);
      if (HIDWORD(v9)) {
        goto LABEL_28;
      }
      uint64_t v17 = *(void *)v16;
      BOOL v7 = v9 >= v2;
      if (v14 != v17) {
        return 0;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10020E4E4(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_10020E544(void (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3 = *(unsigned __int16 *)(v1 + 20);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 22);
  uint64_t v5 = (void *)(*(void *)v1 + 24);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  if (__OFSUB__(v8, v7))
  {
    __break(1u);
  }
  else
  {
    a1(&v9, *v5 + (v4 | (v3 << 8)) + v7, v8 - v7);
    return 0;
  }
  return result;
}

void sub_10020E5E8(uint64_t a1)
{
  sub_10000566C(&qword_100710410);
  uint64_t v2 = sub_1005E2DC0();
  *(void *)(v2 + 16) = 16;
  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 40) = 1;
  *(void *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 56) = 1;
  *(void *)(v2 + 64) = 0;
  *(unsigned char *)(v2 + 72) = 1;
  *(void *)(v2 + 80) = 0;
  *(unsigned char *)(v2 + 88) = 1;
  *(void *)(v2 + 96) = 0;
  *(unsigned char *)(v2 + 104) = 1;
  *(void *)(v2 + 112) = 0;
  *(unsigned char *)(v2 + 120) = 1;
  *(void *)(v2 + 128) = 0;
  *(unsigned char *)(v2 + 136) = 1;
  *(void *)(v2 + 144) = 0;
  *(unsigned char *)(v2 + 152) = 1;
  *(void *)(v2 + 160) = 0;
  *(unsigned char *)(v2 + 168) = 1;
  *(void *)(v2 + 176) = 0;
  *(unsigned char *)(v2 + 184) = 1;
  *(void *)(v2 + 192) = 0;
  *(unsigned char *)(v2 + 200) = 1;
  *(void *)(v2 + 208) = 0;
  *(unsigned char *)(v2 + 216) = 1;
  *(void *)(v2 + 224) = 0;
  *(unsigned char *)(v2 + 232) = 1;
  *(void *)(v2 + 240) = 0;
  *(unsigned char *)(v2 + 248) = 1;
  *(void *)(v2 + 256) = 0;
  *(unsigned char *)(v2 + 264) = 1;
  *(void *)(v2 + 272) = 0;
  *(unsigned char *)(v2 + 280) = 1;
  unint64_t v10 = 0;
  uint64_t v9 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + 8 * v4 + 32);
      uint64_t v6 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100338CAC();
        uint64_t v6 = v7;
      }
      if ((v10 & 0x8000000000000000) != 0) {
        break;
      }
      if (v10 >= *(void *)(v6 + 16)) {
        goto LABEL_13;
      }
      unint64_t v8 = v6 + 16 * v10;
      *(void *)(v8 + 32) = v5;
      *(unsigned char *)(v8 + 40) = 0;
      uint64_t v9 = v6;
      unint64_t v10 = (*(void *)(v6 + 16) - 1) & (v10 + 1);
      if (!v10) {
        sub_10020E7B4();
      }
      if (v3 == ++v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10020E788(uint64_t result, uint64_t a2)
{
  if ((unint64_t)result >= *(void *)(a2 + 16))
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2 + 16 * result;
    if ((*(unsigned char *)(v2 + 40) & 1) == 0) {
      return *(void *)(v2 + 32);
    }
  }
  __break(1u);
  return result;
}

void sub_10020E7B4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = 2 * *(void *)(*v0 + 16);
  if (v2 < 1) {
    goto LABEL_40;
  }
  uint64_t v3 = v0;
  uint64_t v4 = v0[1];
  unint64_t v5 = v0[2];
  v42 = _swiftEmptyArrayStorage;
  sub_1002124A4(0, v2, 0);
  uint64_t v6 = sub_10020E4E4(v4, v1);
  sub_10020EA9C(v6, v7, v8, v9);
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (*(void *)(v1 + 16) < v5)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v10 = swift_retain();
  sub_10020EA9C(v10, v1 + 32, 0, (2 * v5) | 1);
  uint64_t v11 = v42;
  uint64_t v12 = v42[2];
  uint64_t v13 = v2 - v12;
  if (v13 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v16 = v42[3] >> 1, v16 < v14))
  {
    if (v12 <= v14) {
      uint64_t v17 = v12 + v13;
    }
    else {
      uint64_t v17 = v12;
    }
    sub_1002124A4(isUniquelyReferenced_nonNull_native, v17, 1);
    uint64_t v11 = v42;
    uint64_t v16 = v42[3] >> 1;
  }
  uint64_t v18 = v11[2];
  uint64_t v19 = v16 - v18;
  uint64_t v20 = sub_100233E64((uint64_t)v39, (uint64_t)&v11[2 * v18 + 4], v16 - v18, v13, 0, 1);
  if (v20 < v13)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v20 < 1) {
    goto LABEL_16;
  }
  uint64_t v21 = v11[2];
  BOOL v22 = __OFADD__(v21, v20);
  uint64_t v23 = v21 + v20;
  if (v22)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v11[2] = v23;
LABEL_16:
  if (v20 != v19 || (uint64_t v24 = v39[0], v41 == v39[0]))
  {
LABEL_38:
    swift_release();
    v3[1] = 0;
    v3[2] = v12;
    *uint64_t v3 = (uint64_t)v11;
    return;
  }
  if ((v41 & 0x8000000000000000) == 0 && v41 < v39[0])
  {
    uint64_t v25 = v11[2];
    uint64_t v26 = v39[1];
    char v27 = v40;
    uint64_t v28 = v41 + 1;
    uint64_t v29 = 1 - v39[0];
    while (1)
    {
      unint64_t v30 = v11[3];
      int64_t v31 = v30 >> 1;
      uint64_t v32 = v25 + 1;
      if ((uint64_t)(v30 >> 1) < v25 + 1)
      {
        uint64_t v38 = v29;
        sub_1002124A4(v30 > 1, v25 + 1, 1);
        uint64_t v29 = v38;
        uint64_t v11 = v42;
        int64_t v31 = v42[3] >> 1;
      }
      if (v25 >= v31)
      {
        uint64_t v32 = v25;
        uint64_t v34 = v28;
      }
      else
      {
        uint64_t v33 = (uint64_t)&v11[2 * v25 + 4];
        *(void *)uint64_t v33 = v26;
        *(unsigned char *)(v33 + 8) = v27;
        if (v28 == v24) {
          goto LABEL_37;
        }
        if (v28 < 0 || v28 >= v24) {
          goto LABEL_46;
        }
        uint64_t v34 = v28 + 1;
        if (v32 < v31)
        {
          uint64_t v35 = (uint64_t)&v11[2 * v32 + 4];
          *(void *)uint64_t v35 = v26;
          *(unsigned char *)(v35 + 8) = v27;
          uint64_t v32 = v25 + 2;
          if (v34 == v24)
          {
LABEL_37:
            v11[2] = v32;
            goto LABEL_38;
          }
          uint64_t v36 = 0;
          v37 = &v11[2 * v25 + 9];
          while (v28 + v36 + 1 < v24)
          {
            if (v32 + v36 >= v31)
            {
              uint64_t v34 = v28 + v36 + 2;
              v32 += v36;
              goto LABEL_35;
            }
            *((void *)v37 - 1) = v26;
            unsigned char *v37 = v27;
            v37 += 16;
            ++v36;
            if (!(v29 + v28 + v36))
            {
              uint64_t v32 = v25 + v36 + 2;
              goto LABEL_37;
            }
          }
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
      }
LABEL_35:
      v11[2] = v32;
      uint64_t v25 = v32;
      uint64_t v28 = v34;
    }
  }
LABEL_48:
  __break(1u);
}

void sub_10020EA9C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  uint64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v13 = *(void *)(v7 + 24) >> 1, v13 < v9))
  {
    if (v8 <= v9) {
      uint64_t v14 = v8 + v6;
    }
    else {
      uint64_t v14 = v8;
    }
    sub_1002124A4(isUniquelyReferenced_nonNull_native, v14, 1);
    uint64_t v7 = *v4;
    uint64_t v13 = *(void *)(*v4 + 24) >> 1;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
LABEL_16:
      swift_unknownObjectRelease();
      *uint64_t v4 = v7;
      return;
    }
    __break(1u);
  }
  uint64_t v15 = *(void *)(v7 + 16);
  if (v13 - v15 < v6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  memcpy((void *)(v7 + 16 * v15 + 32), (const void *)(a2 + 16 * a3), 16 * v6);
  if (v6 <= 0) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v17 = __OFADD__(v16, v6);
  uint64_t v18 = v16 + v6;
  if (!v17)
  {
    *(void *)(v7 + 16) = v18;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

void sub_10020EBA8(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  BOOL v6 = v5 < v4;
  uint64_t v7 = v5 - v4;
  if (v6) {
    v7 += *(void *)(v3 + 16);
  }
  if (v7 < a1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
    if (!a1)
    {
LABEL_13:
      v1[1] = v4;
      return;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100338CAC();
      uint64_t v3 = v8;
    }
    while ((v4 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v4 >= *(void *)(v3 + 16)) {
        goto LABEL_15;
      }
      uint64_t v9 = v3 + 32 + 16 * v4;
      *(void *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 8) = 1;
      uint64_t v4 = (*(void *)(v3 + 16) - 1) & (v4 + 1);
      if (!--v2)
      {
        uint64_t *v1 = v3;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

void sub_10020EC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 > 0xFFFFFFFFLL)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (((a4 | a3) & 0x8000000000000000) == 0)
  {
    if (a4 > 0xFFFFFFFFLL) {
      goto LABEL_19;
    }
    if (a4 >= a3 && a3 == a4) {
      return;
    }
    uint64_t v7 = a2 + 32;
    unint64_t v8 = *(void *)(a2 + 16);
    LODWORD(v9) = a3;
    while (v9 < v8)
    {
      uint64_t v10 = v7 + 16 * v9;
      if (*(unsigned char *)(v10 + 8)) {
        goto LABEL_20;
      }
      uint64_t v9 = (v9 + 1) & (v8 - 1);
      if (HIDWORD(v9)) {
        goto LABEL_16;
      }
      sub_1005E3410(*(void *)v10);
      if (v9 == a4 && a4 < a3 != v9 >= a3) {
        return;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
}

uint64_t CommandEncodeBuffer.buffer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10020ED54(v1, a1);
}

uint64_t sub_10020ED54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t CommandEncodeBuffer.buffer.setter(uint64_t a1)
{
  return sub_10020EDB8(a1, v1);
}

uint64_t sub_10020EDB8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void CommandEncodeBuffer.init(buffer:options:encodedAtLeastOneCatenateElement:loggingMode:)(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  char v8 = BYTE4(a4);
  int v9 = a3;
  int v10 = a2;
  unint64_t v13 = HIDWORD(a2);
  unint64_t v14 = HIDWORD(a3);
  unint64_t v15 = HIWORD(a3);
  int v16 = a4 & 0x1010101;
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  *(unsigned char *)a7 = a6;
  *(unsigned char *)(a7 + 5) = v8 & 1;
  *(_DWORD *)(a7 + 1) = v16;
  *(void *)(a7 + 8) = a1;
  *(_DWORD *)(a7 + 16) = v10;
  *(_DWORD *)(a7 + 20) = v13;
  *(_DWORD *)(a7 + 24) = v9;
  *(_WORD *)(a7 + 28) = v14;
  *(unsigned char *)(a7 + 30) = v15;
  *(void *)(a7 + 32) = v17;
  *(void *)(a7 + 40) = v18;
  *(void *)(a7 + 48) = v19;
  *(unsigned char *)(a7 + 56) = a5;
}

void CommandEncodeBuffer.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *(unsigned int *)(v2 + 1) | ((unint64_t)*(unsigned __int8 *)(v2 + 5) << 32);
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 48);
  sub_1005E3420(*(unsigned char *)v2 & 1);
  EncodeBuffer.Mode.hash(into:)(a1, v4);
  swift_beginAccess();
  sub_10021035C();
  sub_1005E3400();
  sub_10020EC64(a1, v7, v5, v6);
  sub_1005E3420(*(unsigned char *)(v2 + 56) & 1);
}

uint64_t static CommandEncodeBuffer.__derived_struct_equals(_:_:)(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v23 = *a1;
  long long v24 = v2;
  long long v25 = a1[2];
  uint64_t v26 = *((void *)a1 + 6);
  long long v3 = a2[1];
  long long v18 = *a2;
  long long v19 = v3;
  long long v20 = a2[2];
  uint64_t v21 = *((void *)a2 + 6);
  if ((v23 & 1) != (v18 & 1)) {
    goto LABEL_2;
  }
  sub_10020FEDC((uint64_t)&v23 + 1, (uint64_t)v27);
  sub_10020FEDC((uint64_t)&v18 + 1, (uint64_t)v22);
  sub_10020FEDC((uint64_t)v27, (uint64_t)&v32);
  unint64_t v8 = v32 | ((unint64_t)v33 << 32);
  if ((v8 & 0x8000000000) != 0)
  {
    unsigned __int8 v33 = BYTE4(v8) & 0x7F;
    int v12 = BYTE1(v8);
    sub_10020FEDC((uint64_t)v22, (uint64_t)&v34);
    unint64_t v14 = v34 | ((unint64_t)v35 << 32);
    if ((v14 & 0x8000000000) != 0)
    {
      char v4 = 0;
      unsigned __int8 v35 = BYTE4(v14) & 0x7F;
      if ((v8 ^ v14)) {
        return v4 & 1;
      }
      int v13 = BYTE1(v34);
      goto LABEL_14;
    }
LABEL_2:
    char v4 = 0;
    return v4 & 1;
  }
  int v9 = BYTE1(v32);
  int v10 = BYTE2(v32);
  int v11 = HIBYTE(v32);
  int v12 = v33;
  sub_10020FEDC((uint64_t)v22, (uint64_t)&v34);
  if (((v34 | ((unint64_t)v35 << 32)) & 0x8000000000) != 0) {
    goto LABEL_2;
  }
  char v4 = 0;
  if (((v8 ^ v34) & 1) == 0
    && ((v9 ^ BYTE1(v34)) & 1) == 0
    && ((v10 ^ BYTE2(v34)) & 1) == 0
    && ((v11 ^ HIBYTE(v34)) & 1) == 0)
  {
    int v13 = v35;
LABEL_14:
    if ((v12 ^ v13)) {
      return v4 & 1;
    }
    if (static ByteBuffer.== infix(_:_:)(*((uint64_t *)&v23 + 1), v24, DWORD2(v24) | ((unint64_t)WORD6(v24) << 32) | ((unint64_t)BYTE14(v24) << 48), *((uint64_t *)&v18 + 1), v19, DWORD2(v19) | ((unint64_t)WORD6(v19) << 32) | ((unint64_t)BYTE14(v19) << 48)))
    {
      uint64_t v15 = v26 - *((void *)&v25 + 1);
      if (v26 < *((uint64_t *)&v25 + 1)) {
        v15 += *(void *)(v25 + 16);
      }
      uint64_t v16 = v21 - *((void *)&v20 + 1);
      if (v21 < *((uint64_t *)&v20 + 1)) {
        v16 += *(void *)(v20 + 16);
      }
      if (v15 == v16)
      {
        long long v28 = v25;
        uint64_t v29 = v26;
        long long v30 = v20;
        uint64_t v31 = v21;
        swift_retain();
        swift_retain();
        char v17 = sub_10020E388((uint64_t)&v28);
        swift_release();
        swift_release();
        if (v17)
        {
          char v4 = ((*((unsigned char *)a1 + 56) & 1) == 0) ^ *((unsigned char *)a2 + 56);
          return v4 & 1;
        }
      }
    }
    goto LABEL_2;
  }
  return v4 & 1;
}

Swift::Int CommandEncodeBuffer.hashValue.getter()
{
  sub_1005E33F0();
  unint64_t v1 = *(unsigned int *)(v0 + 1) | ((unint64_t)*(unsigned __int8 *)(v0 + 5) << 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_1005E3420(*(unsigned char *)v0 & 1);
  EncodeBuffer.Mode.hash(into:)((uint64_t)v6, v1);
  swift_beginAccess();
  sub_10021035C();
  sub_1005E3400();
  sub_10020EC64((uint64_t)v6, v5, v2, v3);
  sub_1005E3420(*(unsigned char *)(v0 + 56) & 1);
  return sub_1005E3470();
}

Swift::Int sub_10020F2CC()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  unint64_t v2 = *(unsigned int *)(v0 + 1) | ((unint64_t)*(unsigned __int8 *)(v0 + 5) << 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 48);
  Swift::UInt8 v7 = *(unsigned char *)(v0 + 56);
  sub_1005E33F0();
  sub_1005E3420(v1);
  EncodeBuffer.Mode.hash(into:)((uint64_t)v8, v2);
  swift_beginAccess();
  sub_1005E3400();
  sub_10020EC64((uint64_t)v8, v6, v3, v4);
  sub_1005E3420(v7);
  return sub_1005E3470();
}

unint64_t CommandEncodeBuffer.options.getter()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v8[0] = *(_OWORD *)v0;
  v8[1] = v1;
  _OWORD v8[2] = *(_OWORD *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 48);
  sub_10020FEDC((uint64_t)v8 + 1, (uint64_t)v10);
  unint64_t result = sub_10020FEDC((uint64_t)v10, (uint64_t)&v11);
  unint64_t v3 = v11 | (unint64_t)((uint64_t)v12 << 32);
  if ((v3 & 0x8000000000000000) != 0)
  {
    char v12 = BYTE4(v3) & 0x7F;
    __break(1u);
  }
  else
  {
    uint64_t v4 = &_mh_execute_header;
    if (!v12) {
      uint64_t v4 = 0;
    }
    uint64_t v5 = 0x1000000;
    if (!HIBYTE(v11)) {
      uint64_t v5 = 0;
    }
    uint64_t v6 = 0x10000;
    if (!BYTE2(v11)) {
      uint64_t v6 = 0;
    }
    uint64_t v7 = 256;
    if (!BYTE1(v11)) {
      uint64_t v7 = 0;
    }
    return v7 & 0xFFFFFFFFFFFFFFFELL | v11 & 1 | v6 | v5 | (unint64_t)v4;
  }
  return result;
}

uint64_t CommandEncodeBuffer.options.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = BYTE4(result) & 1;
  *(_DWORD *)(v1 + 1) = result & 0x1010101;
  return result;
}

uint64_t *(*CommandEncodeBuffer.options.modify(uint64_t *(*result)(uint64_t *result)))(uint64_t *result)
{
  *(void *)unint64_t result = v1;
  unint64_t v2 = *(unsigned int *)(v1 + 1) | (unint64_t)((uint64_t)*(char *)(v1 + 5) << 32);
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *((unsigned char *)result + 8) = *(_DWORD *)(v1 + 1) & 1;
    v3.i64[0] = 0xFFFFFFFFFFLL;
    v3.i64[1] = 0xFFFFFFFFFFLL;
    uint64x2_t v4 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v2), v3);
    int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1005F66B0));
    *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
    *(_DWORD *)((char *)result + 9) = vmovn_s16(v5).u32[0];
    return sub_10020F518;
  }
  return result;
}

uint64_t *sub_10020F518(uint64_t *result)
{
  uint64_t v1 = *result;
  int v2 = 256;
  if (!*((unsigned char *)result + 9)) {
    int v2 = 0;
  }
  int v3 = v2 | *((unsigned __int8 *)result + 8);
  int v4 = 0x10000;
  if (!*((unsigned char *)result + 10)) {
    int v4 = 0;
  }
  int v5 = 0x1000000;
  if (!*((unsigned char *)result + 11)) {
    int v5 = 0;
  }
  int v6 = v3 | v4 | v5;
  uint64_t v7 = &_mh_execute_header;
  if (!*((unsigned char *)result + 12)) {
    BYTE4(v7) = 0;
  }
  *(unsigned char *)(v1 + 5) = BYTE4(v7);
  *(_DWORD *)(v1 + 1) = v6;
  return result;
}

uint64_t CommandEncodeBuffer.init(buffer:capabilities:encodedAtLeastOneCatenateElement:loggingMode:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, Swift::OpaquePointer a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  int v9 = a3;
  int v10 = a2;
  unint64_t v23 = HIDWORD(a2);
  unint64_t v24 = HIDWORD(a3);
  unint64_t v25 = HIWORD(a3);
  swift_bridgeObjectRetain();
  *(NIOIMAPCore2::CommandEncodingOptions *)&uint64_t v12 = CommandEncodingOptions.init(capabilities:)(a4);
  char v13 = BYTE4(v12);
  int v14 = v12 & 0x1010101;
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a7 = a6;
  *(unsigned char *)(a7 + 5) = v13 & 1;
  *(_DWORD *)(a7 + 1) = v14;
  *(void *)(a7 + 8) = a1;
  *(_DWORD *)(a7 + 16) = v10;
  *(_DWORD *)(a7 + 20) = v23;
  *(_DWORD *)(a7 + 24) = v9;
  *(_WORD *)(a7 + 28) = v24;
  *(unsigned char *)(a7 + 30) = v25;
  *(void *)(a7 + 32) = v16;
  *(void *)(a7 + 40) = v18;
  *(void *)(a7 + 48) = v20;
  *(unsigned char *)(a7 + 56) = a5;
  return result;
}

unint64_t sub_10020F670(char a1, int64_t a2)
{
  LOBYTE(v3) = a1;
  if (qword_10070FB10 != -1) {
    goto LABEL_115;
  }
  while (1)
  {
    uint64_t v4 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
    LODWORD(v5) = dword_100761860;
    LOWORD(v6) = word_100761864;
    LODWORD(v7) = byte_100761866;
    swift_retain();
    unint64_t v8 = (unint64_t)&v76;
    uint64_t v9 = qword_100761858;
    sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
    char v76 = v3 & 1;
    char v78 = 0;
    unsigned int v77 = 257;
    uint64_t v79 = v4;
    uint64_t v80 = v9;
    unsigned int v81 = v5;
    unsigned __int16 v82 = (unsigned __int16)v6;
    unsigned __int8 v83 = v7;
    Swift::Int v84 = v10;
    uint64_t v85 = v11;
    int64_t v86 = v12;
    char v87 = 0;
    ((void (*)(char *))a2)(&v76);
    if (((v77 | (unint64_t)((uint64_t)v78 << 32)) & 0x8000000000000000) != 0)
    {
      unint64_t result = ByteBuffer.readSlice(length:)((HIDWORD(v80) - v80));
      if (!result)
      {
        __break(1u);
LABEL_9:
        unint64_t result = ByteBuffer.readSlice(length:)((HIDWORD(v80) - v14));
        if (!result) {
          goto LABEL_120;
        }
      }
      unint64_t v21 = result;
      BOOL v22 = 0;
      goto LABEL_11;
    }
    sub_100210EE4();
    int v14 = v80;
    if (v15) {
      goto LABEL_9;
    }
    uint64_t v16 = v13;
    BOOL v17 = __OFSUB__(v13, v80);
    unint64_t result = v13 - v80;
    if (v17) {
      goto LABEL_118;
    }
    unint64_t result = ByteBuffer.readSlice(length:)(result);
    if (!result) {
      goto LABEL_119;
    }
    unint64_t v21 = result;
    BOOL v22 = v16 != HIDWORD(v80);
LABEL_11:
    unint64_t v23 = HIDWORD(v19);
    if (HIDWORD(v19) < v19)
    {
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      return result;
    }
    if (v23 > v20 - (BYTE6(v20) | (WORD2(v20) << 8))) {
      goto LABEL_117;
    }
    v88[0] = v21;
    v88[1] = v19;
    int v89 = v20;
    __int16 v90 = WORD2(v20);
    char v91 = BYTE6(v20);
    uint64_t v92 = v19;
    unint64_t v93 = HIDWORD(v19);
    Swift::Int v24 = v23 - v19;
    Swift::Int v69 = 0;
    unint64_t v70 = 0xE000000000000000;
    swift_retain();
    sub_1005E1D10(v24);
    a2 = 0;
    sub_1001FF5EC((uint64_t)v88, &v69);
    swift_release();
    Swift::Int v3 = v69;
    LODWORD(v25) = v70;
    v75[0] = v69;
    v75[1] = v70;
    if (!v22) {
      break;
    }
LABEL_14:
    if (((v77 | (unint64_t)((uint64_t)v78 << 32)) & 0x8000000000000000) != 0)
    {
      sub_100210394();
      if (!v40 || v39 < a2) {
        goto LABEL_109;
      }
      int v42 = v83 | (v82 << 8);
      BOOL v40 = __CFADD__(v42, a2);
      unsigned int v43 = v42 + a2;
      if (v40) {
        goto LABEL_110;
      }
      uint64_t v44 = v79;
      if (HIBYTE(v43))
      {
        uint64_t v45 = sub_10021032C();
        ByteBuffer._copyIntoByteBufferWithSliceIndex0_slowPath(index:length:)(v45, v46, v47);
        sub_100210374();
        sub_10021034C();
      }
      else
      {
        LODWORD(v6) = v43 >> 8;
        LOBYTE(v8) = v43;
        LODWORD(v25) = v43 + v7;
        swift_retain();
        swift_release();
        LODWORD(v5) = 0;
        unsigned int v38 = v7;
      }
      int v56 = a2 + v7;
      if (__CFADD__(a2, v7)) {
        goto LABEL_111;
      }
      goto LABEL_58;
    }
    Swift::Int v3 = v84;
    uint64_t v25 = v85;
    a2 = v86;
    uint64_t v26 = v86 - v85;
    if (v86 < v85) {
      v26 += *(void *)(v84 + 16);
    }
    if (v26 <= 0)
    {
      sub_100210394();
      if (!v40 || v48 < a2) {
        goto LABEL_112;
      }
      int v50 = v83 | (v82 << 8);
      LODWORD(v8) = v50 + a2;
      if (__CFADD__(v50, a2)) {
        goto LABEL_113;
      }
      uint64_t v44 = v79;
      if (BYTE3(v8))
      {
        uint64_t v51 = sub_10021032C();
        ByteBuffer._copyIntoByteBufferWithSliceIndex0_slowPath(index:length:)(v51, v52, v53);
        sub_100210374();
        sub_10021034C();
      }
      else
      {
        LODWORD(v6) = v8 >> 8;
        LODWORD(v25) = v8 + v7;
        swift_retain();
        swift_release();
        LODWORD(v5) = 0;
        unsigned int v38 = v7;
      }
      int v56 = a2 + v7;
      if (__CFADD__(a2, v7)) {
        goto LABEL_114;
      }
LABEL_58:
      BOOL v55 = 0;
      LODWORD(v80) = v56;
      goto LABEL_59;
    }
    if (v86 == v85) {
      goto LABEL_100;
    }
    if (v85 < 0) {
      goto LABEL_101;
    }
    if (HIDWORD(v85)) {
      goto LABEL_102;
    }
    unint64_t v8 = sub_10020E788(v85 | 0x1FFFFFF00000000, v84);
    uint64_t v27 = a2 - v25;
    if (a2 < v25) {
      v27 += *(void *)(v3 + 16);
    }
    if (v27 < 1) {
      goto LABEL_103;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100338CAC();
      Swift::Int v3 = v28;
    }
    if ((unint64_t)v25 >= *(void *)(v3 + 16)) {
      goto LABEL_104;
    }
    Swift::Int v29 = v3 + 16 * v25;
    *(void *)(v29 + 32) = 0;
    *(unsigned char *)(v29 + 40) = 1;
    uint64_t v30 = (*(void *)(v3 + 16) - 1) & (v25 + 1);
    Swift::Int v84 = v3;
    uint64_t v85 = v30;
    int v31 = v80;
    a2 = v8 - v80;
    if (__OFSUB__(v8, v80)) {
      goto LABEL_105;
    }
    uint64_t v32 = HIDWORD(v80);
    if (HIDWORD(v80) < (unint64_t)a2 || HIDWORD(v80) - a2 < v80) {
      goto LABEL_106;
    }
    int v34 = v83 | (v82 << 8);
    Swift::UInt32 v35 = v34 + v80;
    if (__CFADD__(v34, v80)) {
      goto LABEL_107;
    }
    unint64_t v68 = v8;
    Swift::Int v3 = v79;
    if (HIBYTE(v35))
    {
      unint64_t v66 = v66 & 0xFF00000000000000 | v81 | ((unint64_t)v82 << 32) | ((unint64_t)v83 << 48);
      Swift::Int v3 = ByteBuffer._copyIntoByteBufferWithSliceIndex0_slowPath(index:length:)(v80, (int)v8 - (int)v80, v79);
      LODWORD(v5) = v36;
      LODWORD(v25) = v37;
      swift_release();
      sub_10021034C();
    }
    else
    {
      LODWORD(v25) = v35 + a2;
      LOWORD(v54) = (unsigned __int16)_UInt24.init(_:)(v35);
      LOWORD(v6) = v54;
      LODWORD(v8) = HIWORD(v54);
      swift_retain();
      swift_release();
      LODWORD(v5) = 0;
      unsigned int v38 = a2;
    }
    if (__CFADD__(v31, a2)) {
      goto LABEL_108;
    }
    LODWORD(v80) = v31 + a2;
    BOOL v55 = v68 != v32;
    uint64_t v44 = v3;
LABEL_59:
    if (v38 >= (unint64_t)v5)
    {
      unsigned int v57 = v8 | ((unsigned __int16)v6 << 8);
      if (v25 - v57 < v38) {
        goto LABEL_99;
      }
      BOOL v67 = v55;
      uint64_t v73 = 0;
      unint64_t v74 = 0xE000000000000000;
      Swift::Int v3 = v38 - (unint64_t)v5;
      swift_retain();
      sub_1005E1D10(v3);
      swift_beginAccess();
      LODWORD(v8) = 0;
      a2 = 0;
      v58 = (char *)(*(void *)(v44 + 24) + v57 + v5);
      uint64_t v7 = &v58[v3];
      uint64_t v5 = v73;
      int v6 = (void *)v74;
      while (1)
      {
        while (1)
        {
          int v71 = v8;
          unsigned __int8 v72 = a2;
          if ((_BYTE)a2) {
            break;
          }
          if (!v58 || v7 == v58)
          {
LABEL_94:
            swift_release();
            uint64_t v25 = (uint64_t)v75;
            v94._countAndFlagsBits = v5;
            v94._object = v6;
            sub_1005E1E30(v94);
            swift_bridgeObjectRelease();
            if (!v67)
            {
              swift_release();
              Swift::Int v3 = v75[0];
              goto LABEL_97;
            }
            goto LABEL_14;
          }
          int v59 = *v58++;
          v60 = (unsigned __int8 *)v58;
          int v61 = v59;
          if (v59 < 0)
          {
            LODWORD(v8) = v8 & 0xFFFFFF00 | v61;
            LODWORD(a2) = 8;
            goto LABEL_67;
          }
LABEL_92:
          LODWORD(v8) = v71;
          a2 = v72;
          Swift::Int v69 = v5;
          unint64_t v70 = (unint64_t)v6;
          sub_1005E1D60();
          uint64_t v5 = v69;
          int v6 = (void *)v70;
        }
        if ((v8 & 0x80) == 0)
        {
          sub_1002102E0();
          Swift::Int v3 = (Swift::Int)UnsafeExtractedAttachment.part.modify();
          sub_10035061C(0);
          ((void (*)(Swift::Int *, void))v3)(&v69, 0);
          goto LABEL_92;
        }
        if (!v58)
        {
LABEL_77:
          LODWORD(v3) = v8;
          goto LABEL_78;
        }
        v60 = (unsigned __int8 *)v58;
LABEL_67:
        if (v60 == (unsigned __int8 *)v7) {
          goto LABEL_77;
        }
        v58 = (char *)(v60 + 1);
        LODWORD(v3) = v8;
        while (1)
        {
          int v62 = *v60++;
          LODWORD(v3) = ((-255 << a2) - 1) & v3 | (v62 << a2);
          a2 = (a2 + 8);
          if (a2 >= 0x20u) {
            break;
          }
          ++v58;
          if (v60 == (unsigned __int8 *)v7)
          {
            unsigned __int8 v72 = a2;
            int v71 = v3;
            v58 = v7;
            if ((_BYTE)a2) {
              break;
            }
            goto LABEL_94;
          }
        }
LABEL_78:
        if ((v3 & 0xC0E0) == 0x80C0)
        {
          if ((v3 & 0x1E) == 0) {
            goto LABEL_90;
          }
          int v63 = 16;
        }
        else if ((v3 & 0xC0C0F0) == 0x8080E0)
        {
          if ((v3 & 0x200F) == 0 || (v3 & 0x200F) == 0x200D) {
            goto LABEL_90;
          }
          int v63 = 24;
        }
        else
        {
          if ((v3 & 0xC0C0C0F8) != 0x808080F0 || (v3 & 0x3007) == 0 || __rev16(v3 & 0x3007) > 0x400)
          {
LABEL_90:
            int v65 = sub_1005E3510();
            int v64 = 0;
            int v63 = 8 * v65;
            goto LABEL_91;
          }
          int v63 = 32;
        }
        int v64 = 1;
LABEL_91:
        unint64_t v8 = (unint64_t)v3 >> (v63 & 0x38);
        int v71 = v8;
        a2 = (a2 - v63);
        unsigned __int8 v72 = a2;
        if (v64) {
          goto LABEL_92;
        }
      }
    }
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    swift_once();
  }
  swift_release();
LABEL_97:
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_10020FEDC(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_10020FF3C()
{
  unint64_t result = qword_100710400;
  if (!qword_100710400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710400);
  }
  return result;
}

uint64_t destroy for EncodeBuffer()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CommandEncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 27) = *(_DWORD *)(a2 + 27);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CommandEncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(_DWORD *)(a2 + 1);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(_DWORD *)(a1 + 1) = v4;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for IMAPServer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CommandEncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandEncodeBuffer(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      int v6 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      int v2 = (const float *)(a1 + 1);
      uint32x4_t v3 = (uint32x4_t)vld1q_dup_f32(v2);
      int8x16_t v4 = vandq_s8((int8x16_t)vshlq_u32(v3, (uint32x4_t)xmmword_1005F68F0), (int8x16_t)xmmword_1005F6900);
      *(int8x8_t *)v4.i8 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      unsigned int v5 = v4.i32[0] | v4.i32[1] | (*(unsigned __int8 *)(a1 + 5) >> 1 << 28);
      if (v5 > 0x80000000) {
        int v6 = ~v5;
      }
      else {
        int v6 = -1;
      }
    }
  }
  else
  {
    int v6 = -1;
  }
  return (v6 + 1);
}

int8x8_t storeEnumTagSinglePayload for CommandEncodeBuffer(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    int8x8_t result = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 56) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(-a2);
      int8x16_t v5 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1005F6910), (int8x16_t)xmmword_1005F6940), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1005F6920), (int8x16_t)xmmword_1005F6930));
      int8x8_t result = vorr_s8(*(int8x8_t *)v5.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL));
      *(_DWORD *)(a1 + 1) = result.i32[0];
      *(unsigned char *)(a1 + 5) = (*(void *)&result | (32 * -a2) & 0x1E00000000uLL) >> 32;
      return result;
    }
    *(unsigned char *)(a1 + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandEncodeBuffer()
{
  return &type metadata for CommandEncodeBuffer;
}

unint64_t sub_1002102E0()
{
  unint64_t result = qword_100710408;
  if (!qword_100710408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710408);
  }
  return result;
}

uint64_t sub_10021032C()
{
  return v0;
}

uint64_t sub_10021035C()
{
  return *(void *)(v1 + 24) + (v0 | (v3 << 8)) + v2;
}

uint64_t sub_100210374()
{
  return swift_release();
}

uint64_t sub_1002103A8(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a5 + 16);
  if (!v5) {
    return 0;
  }
  for (i = (unsigned char *)(a5 + 56); ; i += 32)
  {
    uint64_t v11 = *((void *)i - 1);
    char v12 = *i;
    BOOL v13 = *((void *)i - 3) == a1 && *((void *)i - 2) == a2;
    if (!v13 && (sub_1005E3290() & 1) == 0) {
      goto LABEL_13;
    }
    if ((v12 & 1) == 0) {
      break;
    }
    if (a4) {
      return 1;
    }
LABEL_13:
    if (!--v5) {
      return 0;
    }
  }
  if ((a4 & 1) != 0 || (v11 ^ a3) >= 0x4000) {
    goto LABEL_13;
  }
  return 1;
}

uint64_t sub_100210458(Swift::UInt8 a1)
{
  v3.value = ByteBufferView._customContainsEquatableElement(_:)(a1).value;
  if (v3.value != 2) {
    return v3.value;
  }
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  if (v4 == v5) {
    return 0;
  }
  uint64_t v7 = *v1;
  uint64_t v8 = *((unsigned int *)v1 + 2);
  uint64_t v9 = *((unsigned __int16 *)v1 + 10);
  uint64_t v10 = *((unsigned __int8 *)v1 + 22);
  uint64_t v11 = (*((_DWORD *)v1 + 3) - v8);
  uint64_t v12 = v10 | (v9 << 8);
  uint64_t result = swift_beginAccess();
  uint64_t v13 = v4;
  while (v13 < v5)
  {
    if (v4 < v8) {
      goto LABEL_16;
    }
    if (v13 - v8 >= v11) {
      goto LABEL_17;
    }
    int v14 = *(unsigned __int8 *)(*(void *)(v7 + 24) + v12 + v13);
    uint64_t result = v14 == a1;
    if (v14 == a1 || v5 - 1 == v13++) {
      return result;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

void *CommandEncodingOptions.rfc3501.unsafeMutableAddressor()
{
  return &static CommandEncodingOptions.rfc3501;
}

uint64_t Activity.MailboxStatus.Info.isCheckingForNewMessages.getter(char a1)
{
  return a1 & 1;
}

uint64_t Activity.MailboxStatus.Info.isCheckingForNewMessages.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t Flags.deleted.getter(unint64_t a1)
{
  return (a1 >> 8) & 1;
}

uint64_t FlagsUpdate.deleted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

Swift::UInt32 (__swiftcall *Flags.deleted.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t Flags.answered.getter(unint64_t a1)
{
  return (a1 >> 16) & 1;
}

uint64_t FlagsUpdate.answered.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

Swift::UInt32 (__swiftcall *Flags.answered.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t Flags.draft.getter(unint64_t a1)
{
  return (a1 >> 24) & 1;
}

uint64_t FlagsUpdate.draft.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

Swift::UInt32 (__swiftcall *Flags.draft.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

NIOIMAPCore2::CommandEncodingOptions __swiftcall CommandEncodingOptions.init()()
{
  return (NIOIMAPCore2::CommandEncodingOptions)257;
}

NIOIMAPCore2::CommandEncodingOptions __swiftcall CommandEncodingOptions.init(useQuotedString:useSynchronizingLiteral:useNonSynchronizingLiteralPlus:useNonSynchronizingLiteralMinus:useBinaryLiteral:)(Swift::Bool useQuotedString, Swift::Bool useSynchronizingLiteral, Swift::Bool useNonSynchronizingLiteralPlus, Swift::Bool useNonSynchronizingLiteralMinus, Swift::Bool useBinaryLiteral)
{
  uint64_t v5 = &_mh_execute_header;
  if (!useBinaryLiteral) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 0x1000000;
  if (!useNonSynchronizingLiteralMinus) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x10000;
  if (!useNonSynchronizingLiteralPlus) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 256;
  if (!useSynchronizingLiteral) {
    uint64_t v8 = 0;
  }
  return (NIOIMAPCore2::CommandEncodingOptions)(v8 & 0xFFFFFFFFFFFFFFFELL | useQuotedString | v7 | v6 | (unint64_t)v5);
}

void CommandEncodingOptions.hash(into:)(uint64_t a1, uint64_t a2)
{
}

Swift::Int CommandEncodingOptions.hashValue.getter(uint64_t a1)
{
  sub_1005E33F0();
  CommandEncodingOptions.hash(into:)((uint64_t)v3, a1 & 0x101010101);
  return sub_1005E3470();
}

Swift::Int sub_1002106D8()
{
  uint64_t v1 = &_mh_execute_header;
  if (!v0[4]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x1000000;
  if (!v0[3]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[1]) {
    uint64_t v4 = 0;
  }
  return CommandEncodingOptions.hashValue.getter(v4 | *v0 | v3 | v2 | (unint64_t)v1);
}

void sub_100210730(uint64_t a1)
{
  uint64_t v2 = &_mh_execute_header;
  if (!v1[4]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x1000000;
  if (!v1[3]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x10000;
  if (!v1[2]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 256;
  if (!v1[1]) {
    uint64_t v5 = 0;
  }
  CommandEncodingOptions.hash(into:)(a1, v5 | *v1 | v4 | v3 | (unint64_t)v2);
}

Swift::Int sub_100210788()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  int v5 = v0[4];
  sub_1005E33F0();
  uint64_t v6 = &_mh_execute_header;
  if (!v5) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x1000000;
  if (!v4) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0x10000;
  if (!v3) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = 256;
  if (!v2) {
    uint64_t v9 = 0;
  }
  CommandEncodingOptions.hash(into:)((uint64_t)v11, v9 | v1 | v8 | v7 | (unint64_t)v6);
  return sub_1005E3470();
}

BOOL sub_100210828(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  int v3 = a1[1];
  int v4 = a1[2];
  int v5 = a1[3];
  uint64_t v6 = *a2;
  int v7 = a2[1];
  int v8 = a2[2];
  int v9 = a2[3];
  int v10 = a2[4];
  if (a1[4]) {
    uint64_t v11 = &_mh_execute_header;
  }
  else {
    uint64_t v11 = 0;
  }
  BOOL v12 = v5 == 0;
  uint64_t v13 = 0x1000000;
  if (v12) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = 0x1000000;
  }
  BOOL v12 = v4 == 0;
  uint64_t v15 = 0x10000;
  if (v12) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = 0x10000;
  }
  BOOL v12 = v3 == 0;
  uint64_t v17 = 256;
  if (v12) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = 256;
  }
  unint64_t v19 = v18 | v2 | v16 | v14 | (unint64_t)v11;
  if (v10) {
    uint64_t v20 = &_mh_execute_header;
  }
  else {
    uint64_t v20 = 0;
  }
  if (!v9) {
    uint64_t v13 = 0;
  }
  if (!v8) {
    uint64_t v15 = 0;
  }
  if (!v7) {
    uint64_t v17 = 0;
  }
  return static FlagDecoder.__derived_struct_equals(_:_:)(v19, v17 | v6 | v15 | v13 | (unint64_t)v20);
}

NIOIMAPCore2::CommandEncodingOptions __swiftcall CommandEncodingOptions.init(capabilities:)(Swift::OpaquePointer capabilities)
{
  if (qword_10070FCA0 != -1) {
    swift_once();
  }
  char v1 = sub_100210AB0((uint64_t)&static Capability.literalPlus);
  if (v1)
  {
    uint64_t v2 = 0;
  }
  else
  {
    if (qword_10070FCA8 != -1) {
      swift_once();
    }
    if (sub_100210AB0((uint64_t)&static Capability.literalMinus)) {
      uint64_t v2 = 0x1000000;
    }
    else {
      uint64_t v2 = 0;
    }
  }
  if (qword_10070FB70 != -1) {
    swift_once();
  }
  char v3 = sub_100210AB0((uint64_t)&static Capability.binary);
  swift_bridgeObjectRelease();
  int v4 = &_mh_execute_header;
  if ((v3 & 1) == 0) {
    int v4 = 0;
  }
  uint64_t v5 = 257;
  if (v1) {
    uint64_t v5 = 65793;
  }
  return (NIOIMAPCore2::CommandEncodingOptions)(v5 | v2 | (unint64_t)v4);
}

unint64_t sub_1002109F4()
{
  unint64_t result = qword_100710418;
  if (!qword_100710418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710418);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CommandEncodingOptions(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CommandEncodingOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[5])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for CommandEncodingOptions()
{
  return &type metadata for CommandEncodingOptions;
}

uint64_t sub_100210AB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  return sub_1002103A8(v3, v4, v5, v6, v1);
}

void sub_100210AD0(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v8[0] = a1;
      v8[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      ByteBuffer._setBytes(_:at:)((uint64_t)v8, (uint64_t)v8 + (HIBYTE(a2) & 0xF), a4);
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v6 = sub_1005E2D30();
      }
      sub_1001F5888(v6, v7, a4, &v9);
    }
  }
}

Swift::Int __swiftcall EncodeBuffer.writeString(_:)(Swift::String a1)
{
  uint64_t v2 = v1;
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  Swift::Int v5 = *(unsigned int *)(v2 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(countAndFlagsBits, (unint64_t)object, v2 + 8, v5);
  Swift::Int v7 = v6;
  char v9 = v8;
  Swift::Int result = swift_bridgeObjectRelease();
  if (v9)
  {
    v11._uint64_t countAndFlagsBits = countAndFlagsBits;
    v11._object = object;
    Swift::Int result = ByteBuffer._setStringSlowpath(_:at:)(v11, v5);
    Swift::Int v7 = result;
  }
  int v12 = *(_DWORD *)(v2 + 20);
  BOOL v13 = __CFADD__(v12, v7);
  int v14 = v12 + v7;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 + 20) = v14;
    return v7;
  }
  return result;
}

void EncodeBuffer.writeBytes<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  __chkstk_darwin(a1);
  if (*v2 == 1)
  {
    v16[2] = 91;
    void v16[3] = 0xE100000000000000;
    (*(void (**)(char *))(v7 + 16))((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v8 = *(void *)(sub_1005E2210() + 16);
    swift_bridgeObjectRelease();
    v16[1] = v8;
    v17._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v17);
    swift_bridgeObjectRelease();
    sub_1001F46CC();
    swift_bridgeObjectRetain();
    sub_10021333C();
    int v10 = v9;
    char v12 = v11;
    swift_bridgeObjectRelease();
    if (v12) {
      int v10 = sub_100213390();
    }
    swift_bridgeObjectRelease();
    int v13 = *((_DWORD *)v3 + 5);
    BOOL v14 = __CFADD__(v13, v10);
    int v15 = v13 + v10;
    if (v14) {
      __break(1u);
    }
    else {
      *((_DWORD *)v3 + 5) = v15;
    }
  }
  else
  {
    ByteBuffer.writeBytes<A>(_:)(v5, a2);
  }
}

Swift::Int __swiftcall EncodeBuffer.markStopPoint()()
{
  if (((*(unsigned int *)(v0 + 1) | (unint64_t)((uint64_t)*(char *)(v0 + 5) << 32)) & 0x8000000000000000) == 0) {
    sub_100210E34(*(unsigned int *)(v0 + 20));
  }
  return 0;
}

void sub_100210E34(uint64_t a1)
{
  unint64_t v3 = v1[2];
  uint64_t v4 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100338CAC();
    uint64_t v4 = v5;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v3 >= *(void *)(v4 + 16))
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v6 = v4 + 16 * v3;
  *(void *)(v6 + 32) = a1;
  *(unsigned char *)(v6 + 40) = 0;
  uint64_t *v1 = v4;
  uint64_t v7 = (*(void *)(v4 + 16) - 1) & (v3 + 1);
  v1[2] = v7;
  if (v1[1] == v7)
  {
    sub_10020E7B4();
  }
}

void sub_100210EE4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v3 - v2;
  if (v3 < v2) {
    v4 += *(void *)(v1 + 16);
  }
  if (v4 >= 1)
  {
    if (v3 == v2)
    {
      __break(1u);
    }
    else if ((v2 & 0x8000000000000000) == 0)
    {
      if (!HIDWORD(v2))
      {
        sub_10020E788(v2 | 0x1FFFFFF00000000, v1);
        sub_10020EBA8(1);
        return;
      }
      goto LABEL_11;
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

uint64_t static EncodeBuffer.__derived_struct_equals(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((*a1 ^ *a2)) {
    return 0;
  }
  sub_10020FEDC((uint64_t)(a1 + 1), (uint64_t)v22);
  sub_10020FEDC((uint64_t)(a2 + 1), (uint64_t)v21);
  sub_10020FEDC((uint64_t)v22, (uint64_t)&v24);
  unint64_t v5 = v24 | ((unint64_t)v25 << 32);
  if ((v5 & 0x8000000000) != 0)
  {
    unsigned __int8 v25 = BYTE4(v5) & 0x7F;
    int v9 = BYTE1(v5);
    sub_10020FEDC((uint64_t)v21, (uint64_t)&v26);
    unint64_t v11 = v26 | ((unint64_t)v27 << 32);
    if ((v11 & 0x8000000000) != 0)
    {
      uint64_t result = 0;
      unsigned __int8 v27 = BYTE4(v11) & 0x7F;
      if ((v5 ^ v11)) {
        return result;
      }
      int v10 = BYTE1(v26);
      goto LABEL_14;
    }
    return 0;
  }
  int v6 = BYTE1(v24);
  int v7 = BYTE2(v24);
  int v8 = HIBYTE(v24);
  int v9 = v25;
  sub_10020FEDC((uint64_t)v21, (uint64_t)&v26);
  if (((v26 | ((unint64_t)v27 << 32)) & 0x8000000000) != 0) {
    return 0;
  }
  uint64_t result = 0;
  if (((v5 ^ v26) & 1) != 0
    || ((v6 ^ BYTE1(v26)) & 1) != 0
    || ((v7 ^ BYTE2(v26)) & 1) != 0
    || ((v8 ^ HIBYTE(v26)) & 1) != 0)
  {
    return result;
  }
  int v10 = v27;
LABEL_14:
  if (((v9 ^ v10) & 1) == 0)
  {
    if (static ByteBuffer.== infix(_:_:)(*((void *)a1 + 1), *((void *)a1 + 2), *((unsigned int *)a1 + 6) | ((unint64_t)*((unsigned __int16 *)a1 + 14) << 32) | ((unint64_t)a1[30] << 48), *((void *)a2 + 1), *((void *)a2 + 2), *((unsigned int *)a2 + 6) | ((unint64_t)*((unsigned __int16 *)a2 + 14) << 32) | ((unint64_t)a2[30] << 48)))
    {
      uint64_t v13 = *((void *)a1 + 4);
      uint64_t v12 = *((void *)a1 + 5);
      uint64_t v14 = *((void *)a1 + 6);
      uint64_t v16 = *((void *)a2 + 4);
      uint64_t v15 = *((void *)a2 + 5);
      uint64_t v17 = *((void *)a2 + 6);
      uint64_t v18 = v14 - v12;
      if (v14 < v12) {
        v18 += *(void *)(v13 + 16);
      }
      uint64_t v19 = v17 - v15;
      if (v17 < v15) {
        v19 += *(void *)(v16 + 16);
      }
      if (v18 == v19)
      {
        v23[0] = v13;
        v23[1] = v12;
        v23[2] = v14;
        v23[3] = v16;
        v23[4] = v15;
        v23[5] = v17;
        swift_retain();
        swift_retain();
        char v20 = sub_10020E388((uint64_t)v23);
        swift_release();
        swift_release();
        if (v20) {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

void EncodeBuffer.nextChunk()()
{
}

void EncodeBuffer.Mode.hash(into:)(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x8000000000) != 0)
  {
    sub_1005E3410(1uLL);
    sub_1005E3420(a2 & 1);
    sub_1005E3420(BYTE1(a2) & 1);
  }
  else
  {
    sub_1005E3410(0);
    CommandEncodingOptions.hash(into:)(a1, a2 & 0x101010101);
  }
}

unint64_t static EncodeBuffer.Mode.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000) != 0)
  {
    unsigned int v4 = ((a1 & 0x100) == 0) ^ ((a2 & 0xFFFFFFFFFFuLL) >> 8) & 1;
    if (((a1 & 1) == 0) == (a2 & 1)) {
      unsigned int v4 = 0;
    }
    if ((a2 & 0x8000000000) != 0) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else if ((a2 & 0x8000000000) != 0)
  {
    return 0;
  }
  else
  {
    uint64_t v2 = a1 & 0xFFFFFFFFFFLL;
    return (((a1 & 1) == 0) ^ a2) & (((v2 & 0x100) == 0) ^ ((unsigned __int16)(a2 & 0x100) >> 8)) & (((v2 & 0x10000) == 0) ^ WORD1(a2)) & (((v2 & 0x1000000) == 0) ^ BYTE3(a2)) & (((v2 & (unint64_t)&_mh_execute_header) == 0) ^ ((a2 & 0xFFFFFFFFFFuLL) >> 32) & 1);
  }
}

Swift::Int EncodeBuffer.Mode.hashValue.getter(uint64_t a1)
{
  sub_1005E33F0();
  EncodeBuffer.Mode.hash(into:)((uint64_t)v3, a1 & 0xFFFFFFFFFFLL);
  return sub_1005E3470();
}

Swift::Int sub_1002112E4()
{
  return EncodeBuffer.Mode.hashValue.getter(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32));
}

void sub_1002112F4(uint64_t a1)
{
  EncodeBuffer.Mode.hash(into:)(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

Swift::Int sub_100211304()
{
  unint64_t v1 = *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
  sub_1005E33F0();
  EncodeBuffer.Mode.hash(into:)((uint64_t)v3, v1);
  return sub_1005E3470();
}

unint64_t sub_100211350(unsigned int *a1, unsigned int *a2)
{
  return static EncodeBuffer.Mode.__derived_enum_equals(_:_:)(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32));
}

uint64_t ConnectionStatus.Error.kind.getter()
{
  return *v0;
}

uint64_t EncodeBuffer.buffer.getter()
{
  return swift_retain();
}

uint64_t EncodeBuffer.buffer.setter()
{
  sub_1002132EC();
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = v3;
  *(_DWORD *)(v1 + 16) = v2;
  *(_DWORD *)(v1 + 20) = v4;
  *(_DWORD *)(v1 + 24) = v0;
  *(_WORD *)(v1 + 28) = v5;
  *(unsigned char *)(v1 + 30) = v6;
  return result;
}

uint64_t EncodeBuffer.stopPoints.getter()
{
  return swift_retain();
}

uint64_t EncodeBuffer.stopPoints.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_release();
  v3[4] = a1;
  v3[5] = a2;
  v3[6] = a3;
  return result;
}

void EncodeBuffer.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1005E3420(*(unsigned char *)v2 & 1);
  EncodeBuffer.Mode.hash(into:)(a1, *(unsigned int *)(v2 + 1) | ((unint64_t)*(unsigned __int8 *)(v2 + 5) << 32));
  sub_1001F969C();
  sub_1005E3400();
  sub_10020EC64(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

Swift::Int EncodeBuffer.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_1005E33F0();
  sub_1005E3420(*v0 & 1);
  EncodeBuffer.Mode.hash(into:)((uint64_t)v3, *(unsigned int *)(v1 + 1) | ((unint64_t)v1[5] << 32));
  sub_1001F969C();
  sub_1005E3400();
  sub_10020EC64((uint64_t)v3, *((void *)v1 + 4), *((void *)v1 + 5), *((void *)v1 + 6));
  return sub_1005E3470();
}

Swift::Int sub_1002115E0()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  unint64_t v2 = *(unsigned int *)(v0 + 1) | ((unint64_t)*(unsigned __int8 *)(v0 + 5) << 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 48);
  sub_1005E33F0();
  sub_1005E3420(v1);
  EncodeBuffer.Mode.hash(into:)((uint64_t)v7, v2);
  swift_beginAccess();
  sub_1005E3400();
  sub_10020EC64((uint64_t)v7, v6, v3, v4);
  return sub_1005E3470();
}

uint64_t sub_1002116BC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return static EncodeBuffer.__derived_struct_equals(_:_:)((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

void sub_100211718()
{
  sub_100213360();
  uint64_t v1 = v0;
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  sub_100213184();
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = sub_1002130D8();
  sub_10026F68C(v2);
  sub_1002132A0();
  if (v3)
  {
    sub_100213110();
    if (v3)
    {
      sub_10021312C();
      sub_100213248();
      sub_100213168(v4, v5);
      swift_release();
      sub_1002132D4();
      swift_release();
      sub_100213098(v1);
      sub_1002132AC();
      sub_100213378();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002117E0()
{
  sub_100213360();
  uint64_t v1 = v0;
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  sub_100213184();
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = (__n128 *)sub_1002130D8();
  sub_100288128(v2);
  sub_1002132A0();
  if (v3)
  {
    sub_100213110();
    if (v3)
    {
      sub_10021312C();
      sub_100213248();
      sub_100213168(v4, v5);
      swift_release();
      sub_1002132D4();
      swift_release();
      sub_100212E44(v1);
      sub_1002132AC();
      sub_100213378();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002118A8()
{
  sub_100213360();
  uint64_t v1 = v0;
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  sub_100213184();
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = sub_1002130D8();
  sub_10034EB88(v2);
  sub_1002132A0();
  if (v3)
  {
    sub_100213110();
    if (v3)
    {
      sub_10021312C();
      sub_100213248();
      sub_100213168(v4, v5);
      swift_release();
      sub_1002132D4();
      swift_release();
      sub_100212DA8(v1);
      sub_1002132AC();
      sub_100213378();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100211970()
{
  sub_1002132B8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  swift_retain();
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  sub_1002131E4();
  sub_1002A4994(v5, v3, v1);
  sub_1002132A0();
  if (v6)
  {
    sub_100213110();
    if (v6)
    {
      sub_1002131A8();
      sub_100213248();
      sub_100213168(v7, v8);
      swift_release();
      sub_1002132D4();
      swift_release();
      sub_100212D94(v5);
      swift_bridgeObjectRelease();
      sub_1002132AC();
      sub_100213284();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

#error "100211AB8: call analysis failed (funcsize=47)"

#error "100211BA4: call analysis failed (funcsize=95)"

#error "100211D3C: call analysis failed (funcsize=64)"

void sub_100211DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  sub_1002132B8();
  a35 = v36;
  a36 = v37;
  int64_t v39 = v38;
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  uint64_t v40 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  swift_retain();
  sub_10020E5E8((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(a13) = 0;
  BYTE5(a13) = 0;
  *(_DWORD *)((char *)&a13 + 1) = 65537;
  a14 = v40;
  sub_100213308();
  v39(&a13);
  sub_1002132A0();
  if (v41)
  {
    sub_100213110();
    if (v41)
    {
      a20 = a14;
      sub_100213260();
      swift_retain();
      sub_100213248();
      sub_100213168(v42, v43);
      swift_release();
      sub_1002132D4();
      swift_release();
      sub_1002132AC();
      sub_100213284();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t EncodeBuffer.Chunk.bytes.setter()
{
  sub_1002132EC();
  uint64_t result = swift_release();
  *(void *)uint64_t v1 = v3;
  *(_DWORD *)(v1 + 8) = v2;
  *(_DWORD *)(v1 + 12) = v4;
  *(_DWORD *)(v1 + 16) = v0;
  *(_WORD *)(v1 + 20) = v5;
  *(unsigned char *)(v1 + 22) = v6;
  return result;
}

uint64_t EncodeBuffer.Chunk.waitForContinuation.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return HIBYTE(a3) & 1;
}

uint64_t EncodeBuffer.Chunk.waitForContinuation.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 23) = result;
  return result;
}

Swift::UInt32 (__swiftcall *EncodeBuffer.Chunk.waitForContinuation.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

void EncodeBuffer.Chunk.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4 = HIBYTE(a4);
  sub_1001F969C();
  sub_100213324();
  sub_1005E3400();
  sub_1005E3420(v4 & 1);
}

uint64_t static EncodeBuffer.Chunk.__derived_struct_equals(_:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static ByteBuffer.== infix(_:_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, a4, a5, a6 & 0xFFFFFFFFFFFFFFLL) & (((a3 & 0x100000000000000) == 0) ^ HIBYTE(a6) & 1u);
}

Swift::Int EncodeBuffer.Chunk.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = HIBYTE(a3);
  sub_1005E33F0();
  sub_1001F969C();
  sub_100213324();
  sub_1005E3400();
  sub_1005E3420(v3 & 1);
  return sub_1005E3470();
}

Swift::Int sub_100212064()
{
  uint64_t v1 = 0x100000000000000;
  if (!*(unsigned char *)(v0 + 23)) {
    uint64_t v1 = 0;
  }
  return EncodeBuffer.Chunk.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int16 *)(v0 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 22) << 48) | v1);
}

void sub_100212094(uint64_t a1)
{
  uint64_t v2 = 0x100000000000000;
  if (!*(unsigned char *)(v1 + 23)) {
    uint64_t v2 = 0;
  }
  EncodeBuffer.Chunk.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int16 *)(v1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 22) << 48) | v2);
}

Swift::Int sub_1002120C4()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 23);
  sub_1005E33F0();
  swift_beginAccess();
  sub_1005E3400();
  sub_1005E3420(v1);
  return sub_1005E3470();
}

uint64_t sub_100212160(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0x100000000000000;
  if (*(unsigned char *)(a1 + 23)) {
    uint64_t v3 = 0x100000000000000;
  }
  else {
    uint64_t v3 = 0;
  }
  if (!*(unsigned char *)(a2 + 23)) {
    uint64_t v2 = 0;
  }
  return static EncodeBuffer.Chunk.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48) | v3, *(void *)a2, *(void *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48) | v2);
}

void EncodeBuffer.nextChunk(allowEmptyChunk:)(char a1)
{
  if (((*(unsigned int *)(v1 + 1) | (unint64_t)((uint64_t)*(char *)(v1 + 5) << 32)) & 0x8000000000000000) != 0)
  {
    if (ByteBuffer.readSlice(length:)((*(_DWORD *)(v1 + 20) - *(_DWORD *)(v1 + 16)))) {
      return;
    }
    __break(1u);
  }
  else
  {
    char v2 = a1;
    sub_100210EE4();
    uint64_t v4 = *(unsigned int *)(v1 + 16);
    if ((v5 & 1) == 0)
    {
      BOOL v6 = __OFSUB__(v3, v4);
      unint64_t v7 = v3 - v4;
      if (!v6)
      {
        if (ByteBuffer.readSlice(length:)(v7)) {
          return;
        }
        goto LABEL_14;
      }
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
  }
  int v8 = *(_DWORD *)(v1 + 20);
  if ((v2 & 1) == 0 && v8 == v4) {
    goto LABEL_13;
  }
  if (!ByteBuffer.readSlice(length:)((v8 - v4))) {
LABEL_15:
  }
    __break(1u);
}

void EncodeBuffer.writeBuffer(_:)()
{
  uint64_t v1 = v0;
  if (*v0 == 1)
  {
    v9._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v9);
    swift_bridgeObjectRelease();
    sub_1001F46CC();
    swift_bridgeObjectRetain();
    sub_10021333C();
    int v3 = v2;
    char v5 = v4;
    swift_bridgeObjectRelease();
    if (v5) {
      int v3 = sub_100213390();
    }
    swift_bridgeObjectRelease();
    int v6 = *((_DWORD *)v1 + 5);
    BOOL v7 = __CFADD__(v6, v3);
    int v8 = v6 + v3;
    if (v7) {
      __break(1u);
    }
    else {
      *((_DWORD *)v1 + 5) = v8;
    }
  }
  else
  {
    ByteBuffer.writeBuffer(_:)();
  }
}

Swift::Void __swiftcall EncodeBuffer.clear()()
{
  uint64_t v1 = v0;
  int v2 = (uint64_t *)(v0 + 32);
  swift_release();
  *int v2 = (uint64_t)_swiftEmptyArrayStorage;
  sub_1002124C4(0, 1, 1);
  uint64_t v3 = *v2;
  unint64_t v5 = *(void *)(*v2 + 16);
  unint64_t v4 = *(void *)(*v2 + 24);
  if (v5 >= v4 >> 1)
  {
    sub_1002124C4(v4 > 1, v5 + 1, 1);
    uint64_t v3 = *v2;
  }
  *(void *)(v3 + 16) = v5 + 1;
  uint64_t v6 = v3 + 16 * v5;
  *(void *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 40) = 1;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 32) = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v7 = *(void *)(v1 + 8);
    sub_1001F969C();
    *(void *)(v1 + 8) = ByteBuffer._Storage.allocateStorage(capacity:)(*(_DWORD *)(v7 + 16));
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + 8);
  sub_1001F969C();
  *(_DWORD *)(v1 + 24) = *(_DWORD *)(v8 + 16);
  *(_WORD *)(v1 + 28) = 0;
  *(unsigned char *)(v1 + 30) = 0;
  *(void *)(v1 + 16) = 0;
}

void sub_1002124A4(char a1, uint64_t a2, char a3)
{
  sub_100338EC8(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void sub_1002124C4(char a1, uint64_t a2, char a3)
{
  sub_100338EE0(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

unint64_t sub_1002124E8()
{
  unint64_t result = qword_100710420;
  if (!qword_100710420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710420);
  }
  return result;
}

unint64_t sub_100212538()
{
  unint64_t result = qword_100710428;
  if (!qword_100710428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710428);
  }
  return result;
}

unint64_t sub_100212588()
{
  unint64_t result = qword_100710430;
  if (!qword_100710430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710430);
  }
  return result;
}

uint64_t initializeWithCopy for EncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 27) = *(_DWORD *)(a2 + 27);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = *(_DWORD *)(a2 + 1);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(_DWORD *)(a1 + 1) = v4;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for EmailAddressGroup(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for EncodeBuffer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 1) = *(_DWORD *)(a2 + 1);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for EncodeBuffer(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      int v6 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      int v2 = (const float *)(a1 + 1);
      uint32x4_t v3 = (uint32x4_t)vld1q_dup_f32(v2);
      int8x16_t v4 = vandq_s8((int8x16_t)vshlq_u32(v3, (uint32x4_t)xmmword_1005F68F0), (int8x16_t)xmmword_1005F6900);
      *(int8x8_t *)v4.i8 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      unsigned int v5 = v4.i32[0] | v4.i32[1] | (*(unsigned __int8 *)(a1 + 5) >> 1 << 28);
      if (v5 > 0x80000000) {
        int v6 = ~v5;
      }
      else {
        int v6 = -1;
      }
    }
  }
  else
  {
    int v6 = -1;
  }
  return (v6 + 1);
}

int8x8_t storeEnumTagSinglePayload for EncodeBuffer(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    int8x8_t result = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(-a2);
      int8x16_t v5 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1005F6910), (int8x16_t)xmmword_1005F6940), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1005F6920), (int8x16_t)xmmword_1005F6930));
      int8x8_t result = vorr_s8(*(int8x8_t *)v5.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL));
      *(_DWORD *)(a1 + 1) = result.i32[0];
      *(unsigned char *)(a1 + 5) = (*(void *)&result | (32 * -a2) & 0x1E00000000uLL) >> 32;
      return result;
    }
    *(unsigned char *)(a1 + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EncodeBuffer()
{
}

uint64_t getEnumTagSinglePayload for EncodeBuffer.Mode(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 5))
    {
      int v6 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint32x4_t v3 = (uint32x4_t)vld1q_dup_f32((const float *)a1);
      int v2 = (unsigned __int8 *)(a1 + 4);
      int8x16_t v4 = vandq_s8((int8x16_t)vshlq_u32(v3, (uint32x4_t)xmmword_1005F68F0), (int8x16_t)xmmword_1005F6900);
      *(int8x8_t *)v4.i8 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      unsigned int v5 = v4.i32[0] | v4.i32[1] | (*v2 >> 1 << 28);
      if (v5 > 0x80000000) {
        int v6 = ~v5;
      }
      else {
        int v6 = -1;
      }
    }
  }
  else
  {
    int v6 = -1;
  }
  return (v6 + 1);
}

int8x8_t storeEnumTagSinglePayload for EncodeBuffer.Mode(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(a1 + 4) = 0;
    *(_DWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 5) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      uint64x2_t v3 = (uint64x2_t)vdupq_n_s64(-a2);
      int8x16_t v4 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v3, (uint64x2_t)xmmword_1005F6910), (int8x16_t)xmmword_1005F6940), vandq_s8((int8x16_t)vshlq_u64(v3, (uint64x2_t)xmmword_1005F6920), (int8x16_t)xmmword_1005F6930));
      int8x8_t result = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      *(_DWORD *)a1 = result.i32[0];
      *(unsigned char *)(a1 + 4) = (*(void *)&result | (32 * -a2) & 0x1E00000000uLL) >> 32;
      return result;
    }
    *(unsigned char *)(a1 + 5) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1002129E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4) >> 7;
}

uint64_t sub_1002129F0(uint64_t result)
{
  *(unsigned char *)(result + 4) &= ~0x80u;
  return result;
}

unsigned int *sub_100212A08(unsigned int *result, uint64_t a2)
{
  unint64_t v2 = (*result | ((unint64_t)*((unsigned __int8 *)result + 4) << 32)) & 0x101010101010101 | (a2 << 39);
  *result &= 0x1010101u;
  *((unsigned char *)result + 4) = BYTE4(v2);
  return result;
}

void type metadata accessor for EncodeBuffer.Mode()
{
}

uint64_t sub_100212A3C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  *(unsigned char *)(a1 + 23) = *(unsigned char *)(a2 + 23);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EncodeBuffer.Chunk(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(unsigned char *)(a1 + 23) = *(unsigned char *)(a2 + 23);
  return a1;
}

uint64_t assignWithTake for EncodeBuffer.Chunk(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(unsigned char *)(a1 + 23) = *(unsigned char *)(a2 + 23);
  return a1;
}

void type metadata accessor for EncodeBuffer.Chunk()
{
}

void sub_100212B70(char a1, uint64_t a2, char a3)
{
  sub_100338FD4(a1, a2, a3, *v3);
  *uint64x2_t v3 = v4;
}

void sub_100212B90()
{
  sub_100338FEC();
  *uint64_t v0 = v1;
}

void sub_100212BB0()
{
  sub_100339014();
  *uint64_t v0 = v1;
}

void sub_100212BD0()
{
  sub_10033903C();
  *uint64_t v0 = v1;
}

void sub_100212BF0()
{
  sub_100339100();
  *uint64_t v0 = v1;
}

void sub_100212C10()
{
  sub_100339318();
  *uint64_t v0 = v1;
}

void sub_100212C30()
{
  sub_100339470();
  *uint64_t v0 = v1;
}

void sub_100212C50()
{
  sub_100339498();
  *uint64_t v0 = v1;
}

void sub_100212C70()
{
  sub_1003394C0();
  *uint64_t v0 = v1;
}

void sub_100212C90()
{
  sub_1003395D4();
  *uint64_t v0 = v1;
}

void sub_100212CB0()
{
  sub_1003395FC();
  *uint64_t v0 = v1;
}

void sub_100212CD0()
{
  sub_1003396F4();
  *uint64_t v0 = v1;
}

void sub_100212CF0()
{
  sub_1003397C0();
  *uint64_t v0 = v1;
}

unint64_t sub_100212D10(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      int8x8_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100212D94(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_100212D10(result);
  }
  return result;
}

uint64_t sub_100212DA8(uint64_t a1)
{
  return a1;
}

void sub_100212DE0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >> 6 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10013B5E0(a2, a3);
  }
  else if (!(a5 >> 6))
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100212E44(uint64_t a1)
{
  sub_100212EB0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(_WORD *)(a1 + 176));
  return a1;
}

void sub_100212EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 a23)
{
  switch(a23 >> 12)
  {
    case 0:
    case 6:
    case 0xB:
    case 0xC:
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    case 5:
      sub_1000613BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23);
      break;
    case 7:
      sub_100212DE0(a1, a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_100213098(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002130D8()
{
  return v0;
}

uint64_t sub_10021312C()
{
  return swift_retain();
}

uint64_t sub_100213168(uint64_t a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  return sub_1001FF5EC((uint64_t)va1, (uint64_t *)va);
}

uint64_t sub_100213184()
{
  return swift_retain();
}

uint64_t sub_1002131A8()
{
  return swift_retain();
}

uint64_t sub_100213214(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,Swift::String a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_1001EDA24(a1, 0, 0, 46, 0, 0, 0, 0, (uint64_t)&a14, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void sub_100213248()
{
  sub_1005E1D10(v0);
}

uint64_t sub_1002132AC()
{
  return v0;
}

uint64_t sub_1002132D4()
{
  return swift_release();
}

void sub_10021333C()
{
  sub_100210AD0(v1, v0, v2, v3);
}

Swift::Int sub_100213390()
{
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v2);
}

Swift::Int InvalidFrame.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_1002133E4()
{
  return sub_1005E3470();
}

uint64_t LiteralSizeParsingError.hash(into:)()
{
  return sub_1005E3400();
}

uint64_t sub_10021345C()
{
  return LiteralSizeParsingError.hash(into:)();
}

unint64_t FramingResult.debugDescription.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 62)
  {
    case 1uLL:
      sub_1005E2C80(30);
      swift_bridgeObjectRelease();
      strcpy((char *)v10, "INCOMPLETE: ");
      v15._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v15);
      swift_bridgeObjectRelease();
      v16._object = (void *)0x80000001005E6210;
      v16._uint64_t countAndFlagsBits = 0xD000000000000010;
      sub_1005E1E30(v16);
      return v10[0];
    case 2uLL:
      v10[0] = 0;
      v10[1] = 0xE000000000000000;
      swift_retain();
      sub_1005E2C80(32);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000010;
      unint64_t v12 = 0x80000001005E61F0;
      sub_1001FCD38();
      uint64_t v5 = sub_100216F54();
      uint64_t v7 = v6;
      sub_100217048();
      v13._uint64_t countAndFlagsBits = v5;
      v13._object = v7;
      sub_1005E1E30(v13);
      swift_bridgeObjectRelease();
      v14._uint64_t countAndFlagsBits = 0x696E69616D657220;
      v14._object = (void *)0xEC000000203A676ELL;
      sub_1005E1E30(v14);
      v8._uint64_t countAndFlagsBits = sub_1005E3230();
      goto LABEL_6;
    case 3uLL:
      uint64_t v3 = 0x3A44494C41564E49;
      unint64_t v4 = 0xE900000000000020;
      goto LABEL_5;
    default:
      uint64_t v3 = 0x4554454C504D4F43;
      unint64_t v4 = 0xEA0000000000203ALL;
LABEL_5:
      unint64_t v11 = v3;
      unint64_t v12 = v4;
      sub_1001FCD38();
      v8._uint64_t countAndFlagsBits = sub_100216F54();
LABEL_6:
      sub_1005E1E30(v8);
      swift_bridgeObjectRelease();
      sub_100217048();
      return v11;
  }
}

uint64_t sub_1002136B0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((a3 >> 62) <= 3 && a3 >> 62 != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1002136C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((a3 >> 62) <= 3 && a3 >> 62 != 1) {
    return swift_release();
  }
  return result;
}

void FramingResult.hash(into:)(uint64_t a1, Swift::UInt a2, uint64_t a3, unint64_t a4, Swift::UInt64 a5)
{
  switch(a4 >> 62)
  {
    case 1uLL:
      sub_1005E3410(1uLL);
      sub_1005E3410(a2);
      break;
    case 2uLL:
      sub_1005E3410(2uLL);
      sub_1001FCD38();
      sub_100216FF0();
      sub_1005E3450(a5);
      break;
    case 3uLL:
      Swift::UInt v6 = 3;
      goto LABEL_5;
    default:
      Swift::UInt v6 = 0;
LABEL_5:
      sub_1005E3410(v6);
      sub_1001FCD38();
      sub_100216FF0();
      break;
  }
}

uint64_t static FramingResult.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t result = a7 >> 62 == 1 && a1 == a5;
      break;
    case 2uLL:
      if (a7 >> 62 != 2) {
        goto LABEL_14;
      }
      sub_100216ED8();
      sub_100216FA8();
      uint64_t result = v8 & (a4 == a8);
      break;
    case 3uLL:
      if (a7 >> 62 != 3) {
        goto LABEL_14;
      }
      goto LABEL_13;
    default:
      if (a7 >> 62)
      {
LABEL_14:
        uint64_t result = 0;
      }
      else
      {
LABEL_13:
        sub_100216ED8();
        sub_100216FA8();
        uint64_t result = v8 & 1;
      }
      break;
  }
  return result;
}

Swift::Int FramingResult.hashValue.getter()
{
  sub_10021707C();
  sub_10021701C();
  FramingResult.hash(into:)((uint64_t)v5, v3, v2, v1, v0);
  return sub_1005E3470();
}

void sub_1002138F4(uint64_t a1, Swift::UInt64 a2, uint64_t a3, unint64_t a4)
{
  switch(HIBYTE(a4))
  {
    case 1u:
      Swift::UInt v5 = 2;
      goto LABEL_6;
    case 2u:
      Swift::UInt v5 = 3;
      goto LABEL_6;
    case 3u:
      Swift::UInt v5 = 4;
LABEL_6:
      sub_1005E3410(v5);
      sub_1005E3450(a2);
      break;
    case 4u:
      sub_1005E3410(0);
      break;
    default:
      sub_1005E3410(1uLL);
      sub_1001FCD38();
      sub_1005E3400();
      break;
  }
}

uint64_t sub_1002139C8(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v6 = HIBYTE(a6);
  switch(HIBYTE(a3))
  {
    case 1u:
      if (v6 != 1) {
        goto LABEL_13;
      }
      return a1 == a4;
    case 2u:
      if (v6 != 2) {
        goto LABEL_13;
      }
      return a1 == a4;
    case 3u:
      if (v6 != 3) {
        goto LABEL_13;
      }
      return a1 == a4;
    case 4u:
      if (v6 != 4 || a5 | a4 || (a6 & 0xFFFFFFFFFFFFFFLL) != 0) {
        goto LABEL_13;
      }
      uint64_t result = 1;
      break;
    default:
      if (v6)
      {
LABEL_13:
        uint64_t result = 0;
      }
      else
      {
        sub_100215730(a1, a2, a3, 0);
        uint64_t v13 = sub_100217068();
        sub_100215730(v13, v14, v15, v16);
        BOOL v17 = static ByteBuffer.== infix(_:_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, a4, a5, a6 & 0xFFFFFFFFFFFFFFLL);
        uint64_t v18 = sub_100217068();
        sub_100215798(v18, v19, v20, v21);
        sub_100215798(a1, a2, a3, 0);
        uint64_t result = v17;
      }
      break;
  }
  return result;
}

Swift::Int sub_100213AF8(Swift::UInt64 a1, uint64_t a2, unint64_t a3)
{
  sub_10021701C();
  sub_1002138F4((uint64_t)v7, a1, a2, a3);
  return sub_1005E3470();
}

void sub_100213B50(uint64_t a1, Swift::UInt64 a2, Swift::UInt64 a3, unint64_t a4)
{
  switch(a4 >> 61)
  {
    case 1uLL:
      sub_1005E3410(2uLL);
      sub_1002138F4(a1, a2, a3, a4 & 0x1FFFFFFFFFFFFFFFLL);
      return;
    case 2uLL:
      sub_1005E3410(3uLL);
      sub_1005E3410(a2 & 1);
      sub_1005E3450(a3);
      return;
    case 3uLL:
      Swift::UInt64 v7 = a2 & 1;
      Swift::UInt v8 = 4;
      goto LABEL_8;
    case 4uLL:
      Swift::UInt v10 = 1;
      goto LABEL_10;
    default:
      Swift::UInt64 v7 = a2 & 1;
      Swift::UInt v8 = 0;
LABEL_8:
      sub_1005E3410(v8);
      Swift::UInt v10 = v7;
LABEL_10:
      sub_1005E3410(v10);
      return;
  }
}

uint64_t sub_100213C3C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  switch(a3 >> 61)
  {
    case 1uLL:
      if (a6 >> 61 != 1) {
        return 0;
      }
      uint64_t v12 = HIBYTE(a6) & 0x1F;
      switch(HIBYTE(a3) & 0x1F)
      {
        case 1:
          sub_100216F38();
          BOOL v16 = v12 == 1;
          return v16 && a1 == a4;
        case 2:
          sub_100216F38();
          BOOL v16 = v12 == 2;
          return v16 && a1 == a4;
        case 3:
          sub_100216F38();
          BOOL v16 = v12 == 3;
          return v16 && a1 == a4;
        case 4:
          if (v12 != 4 || a6 & 0xFFFFFFFFFFFFFFLL | a4 | a5)
          {
            sub_100216F38();
            return 0;
          }
          sub_100216F38();
          break;
        default:
          if (v12) {
            return 0;
          }
          sub_100215718(a4, a5, a6);
          sub_100215718(a1, a2, a3);
          BOOL v13 = static ByteBuffer.== infix(_:_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, a4, a5, a6 & 0xFFFFFFFFFFFFFFLL);
          sub_100215780(a4, a5, a6);
          sub_100216F38();
          return v13;
      }
      return 1;
    case 2uLL:
      if (a6 >> 61 != 2) {
        return 0;
      }
      return ((a4 ^ a1) & 1) == 0 && a2 == a5;
    case 3uLL:
      if (a6 >> 61 == 3) {
        return ((a4 ^ a1) & 1) == 0;
      }
      return 0;
    case 4uLL:
      return a6 >> 61 == 4 && !(a5 | a4) && a6 == 0x8000000000000000;
    default:
      if (a6 >> 61) {
        return 0;
      }
      return ((a4 ^ a1) & 1) == 0;
  }
}

Swift::Int sub_100213E28(Swift::UInt64 a1, Swift::UInt64 a2, unint64_t a3)
{
  sub_10021701C();
  switch(a3 >> 61)
  {
    case 1uLL:
      sub_1005E3410(2uLL);
      sub_1002138F4((uint64_t)v10, a1, a2, a3 & 0x1FFFFFFFFFFFFFFFLL);
      return sub_1005E3470();
    case 2uLL:
      sub_1005E3410(3uLL);
      sub_1005E3410(a1 & 1);
      sub_1005E3450(a2);
      return sub_1005E3470();
    case 3uLL:
      Swift::UInt64 v6 = a1 & 1;
      Swift::UInt v7 = 4;
      goto LABEL_6;
    case 4uLL:
      Swift::UInt v8 = 1;
      goto LABEL_8;
    default:
      Swift::UInt64 v6 = a1 & 1;
      Swift::UInt v7 = 0;
LABEL_6:
      sub_1005E3410(v7);
      Swift::UInt v8 = v6;
LABEL_8:
      sub_1005E3410(v8);
      return sub_1005E3470();
  }
}

Swift::Int sub_100213F2C(char a1)
{
  return sub_1005E3470();
}

Swift::Int sub_100213F6C()
{
  return FramingResult.hashValue.getter();
}

void sub_100213F78(uint64_t a1)
{
  FramingResult.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

Swift::Int sub_100213F84()
{
  Swift::UInt v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v4 = v0[2];
  Swift::UInt64 v3 = v0[3];
  sub_1005E33F0();
  FramingResult.hash(into:)((uint64_t)v6, v1, v2, v4, v3);
  return sub_1005E3470();
}

unint64_t sub_100213FE0()
{
  return FramingResult.debugDescription.getter(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_100213FEC(uint64_t a1, uint64_t a2)
{
  return static FramingResult.__derived_enum_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

Swift::Int sub_100214008()
{
  return sub_100213AF8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

void sub_100214014(uint64_t a1)
{
  sub_1002138F4(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

Swift::Int sub_100214020()
{
  Swift::UInt64 v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v3 = v0[2];
  sub_1005E33F0();
  sub_1002138F4((uint64_t)v5, v1, v2, v3);
  return sub_1005E3470();
}

uint64_t sub_100214078(uint64_t a1, uint64_t a2)
{
  return sub_1002139C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

Swift::Int sub_100214094()
{
  return sub_100213E28(*v0, v0[1], v0[2]);
}

void sub_1002140A0(uint64_t a1)
{
  sub_100213B50(a1, *v1, v1[1], v1[2]);
}

Swift::Int sub_1002140AC()
{
  Swift::UInt64 v2 = *v0;
  Swift::UInt64 v1 = v0[1];
  Swift::UInt64 v3 = v0[2];
  sub_1005E33F0();
  switch(v3 >> 61)
  {
    case 1uLL:
      sub_1005E3410(2uLL);
      sub_1002138F4((uint64_t)v8, v2, v1, v3 & 0x1FFFFFFFFFFFFFFFLL);
      return sub_1005E3470();
    case 2uLL:
      sub_1005E3410(3uLL);
      sub_1005E3410(v2 & 1);
      sub_1005E3450(v1);
      return sub_1005E3470();
    case 3uLL:
      Swift::UInt64 v4 = v2 & 1;
      Swift::UInt v5 = 4;
      goto LABEL_6;
    case 4uLL:
      Swift::UInt v6 = 1;
      goto LABEL_8;
    default:
      Swift::UInt64 v4 = v2 & 1;
      Swift::UInt v5 = 0;
LABEL_6:
      sub_1005E3410(v5);
      Swift::UInt v6 = v4;
LABEL_8:
      sub_1005E3410(v6);
      return sub_1005E3470();
  }
}

uint64_t sub_1002141B0(uint64_t a1, uint64_t a2)
{
  return sub_100213C3C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

Swift::Int sub_1002141CC()
{
  return sub_100213F2C(*v0);
}

uint64_t FramingParser.init(bufferSizeLimit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  uint64_t v4 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  int v5 = dword_100761860;
  __int16 v6 = word_100761864;
  char v7 = byte_100761866;
  *(void *)a2 = 1;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = qword_100761858;
  *(_DWORD *)(a2 + 48) = v5;
  *(_WORD *)(a2 + 52) = v6;
  *(unsigned char *)(a2 + 54) = v7;
  *(void *)(a2 + 56) = a1;
  return swift_retain();
}

void *FramingParser.appendAndFrameBuffer(_:)(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 12) == *(_DWORD *)(a1 + 8)) {
    return _swiftEmptyArrayStorage;
  }
  ByteBuffer.writeBuffer(_:)();
  return sub_1002142E8();
}

void *sub_1002142E8()
{
  Swift::UInt64 v1 = sub_100214460();
  Swift::UInt64 v2 = v1;
  uint64_t v3 = v1[2];
  if (v3
    && v1[4 * v3 + 2] >> 62 == 1
    && *(void *)(v0 + 56) < (uint64_t)(*(_DWORD *)(v0 + 44) - *(_DWORD *)(v0 + 40)))
  {
    swift_bridgeObjectRelease();
    sub_100215C60();
    swift_allocError();
    swift_willThrow();
    sub_100214428(v0);
  }
  else
  {
    unsigned int v4 = *(_DWORD *)(v0 + 40);
    if (v4 >= 0x3E9 && *(_DWORD *)(v0 + 44) >> 1 < v4) {
      ByteBuffer.discardReadBytes()();
    }
  }
  return v2;
}

void FramingParser.appendAndFrameBytes(_:)(uint64_t a1, uint64_t a2)
{
  if (a1 && a2 != a1)
  {
    ByteBuffer._setBytes(_:at:)(a1, a2, *(_DWORD *)(v2 + 44));
    int v3 = *(_DWORD *)(v2 + 44);
    BOOL v5 = __CFADD__(v3, v4);
    int v6 = v3 + v4;
    if (v5)
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(v2 + 44) = v6;
      sub_1002142E8();
    }
  }
}

uint64_t ServerResponseFramingParser.count.getter()
{
  return (*(_DWORD *)(v0 + 44) - *(_DWORD *)(v0 + 40));
}

BOOL sub_100214428(BOOL result)
{
  unsigned int v1 = *(_DWORD *)(result + 40);
  if (v1 >= 0x3E9 && *(_DWORD *)(result + 44) >> 1 < v1) {
    return ByteBuffer.discardReadBytes()();
  }
  return result;
}

void *sub_100214460()
{
  int v1 = *(_DWORD *)(v0 + 40);
  int v2 = *(_DWORD *)(v0 + 44);
  int v3 = _swiftEmptyArrayStorage;
  while (v2 != v1)
  {
    uint64_t v4 = sub_100214558();
    uint64_t v6 = v5;
    unint64_t v8 = v7;
    uint64_t v10 = v9;
    sub_1002136B0(v4, v5, v7);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100232600();
      int v3 = v13;
    }
    unint64_t v11 = v3[2];
    if (v11 >= v3[3] >> 1)
    {
      sub_100232600();
      int v3 = v14;
    }
    v3[2] = v11 + 1;
    uint64_t v12 = &v3[4 * v11];
    v12[4] = v4;
    v12[5] = v6;
    v12[6] = v8;
    v12[7] = v10;
    if (v8 >> 62 == 1) {
      break;
    }
    sub_1002136C8(v4, v6, v8);
    int v1 = *(_DWORD *)(v0 + 40);
    int v2 = *(_DWORD *)(v0 + 44);
  }
  return v3;
}

uint64_t sub_100214558()
{
  uint64_t v1 = v0;
  int64_t v2 = *(void *)(v0 + 24);
  unsigned int v3 = *(_DWORD *)(v0 + 40);
  unsigned int v4 = *(_DWORD *)(v1 + 44);
  int64_t v5 = v4 - v3;
  if (v2 < v5)
  {
    while (1)
    {
      uint64_t v6 = *(void *)v1;
      unint64_t v7 = *(void *)(v1 + 8);
      unint64_t v8 = *(void *)(v1 + 16);
      uint64_t v9 = v2 + v3;
      switch(v8 >> 61)
      {
        case 1uLL:
          sub_100215730(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), HIBYTE(v8) & 0x1F);
          uint64_t v26 = sub_100214A84(v6, v7, v8 & 0x1FFFFFFFFFFFFFFFLL);
          sub_100215780(v6, v7, v8);
          return v26;
        case 2uLL:
          sub_100214DA4(*(void *)v1 & 1, *(void *)(v1 + 8));
          int64_t v28 = *(void *)(v1 + 24);
          if (v28 <= 0) {
            return sub_100214E7C();
          }
          uint64_t v29 = ByteBuffer.readSlice(length:)(v28);
          *(void *)(v1 + 24) = 0;
          if (!v29) {
            goto LABEL_62;
          }
          if (v7 < (HIDWORD(v30) - v30)) {
            goto LABEL_61;
          }
          return v29;
        case 3uLL:
          if (v5 <= v2 || v9 < v3) {
            goto LABEL_58;
          }
          uint64_t v17 = *(unsigned __int8 *)(v1 + 54);
          uint64_t v18 = *(unsigned __int16 *)(v1 + 52);
          uint64_t v19 = *(void *)(v1 + 32);
          swift_beginAccess();
          int v20 = *(unsigned __int8 *)(*(void *)(v19 + 24) + (v17 | (v18 << 8)) + v3 + v2);
          int64_t v15 = v2 + 1;
          *(void *)(v1 + 24) = v2 + 1;
          if (v20 == 10 || v20 == 13)
          {
            uint64_t v27 = ByteBuffer.readSlice(length:)(v15);
            *(void *)(v1 + 24) = 0;
            if (!v27)
            {
              __break(1u);
LABEL_40:
              uint64_t v26 = HIBYTE(v25) & 0x1F;
              switch(v26)
              {
                case 1:
                case 2:
                  goto LABEL_41;
                case 3:
                  goto LABEL_37;
                case 4:
                  return v26;
                default:
                  if (HIDWORD(v24) == v24) {
                    uint64_t v26 = 4;
                  }
                  else {
                    uint64_t v26 = 3;
                  }
                  break;
              }
              return v26;
            }
            return v27;
          }
          if (v6) {
            goto LABEL_24;
          }
          if (v20 == 34) {
            goto LABEL_32;
          }
          if (v20 != 92) {
            goto LABEL_24;
          }
          *(_OWORD *)uint64_t v1 = xmmword_1005F6950;
          goto LABEL_25;
        case 4uLL:
          sub_1002149B8();
          uint64_t v27 = ByteBuffer.readSlice(length:)(*(void *)(v1 + 24));
          *(void *)(v1 + 24) = 0;
          if (v27) {
            return v27;
          }
          __break(1u);
          return sub_100214E7C();
        default:
          if (v5 <= v2 || v9 < v3)
          {
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
            goto LABEL_63;
          }
          uint64_t v11 = *(unsigned __int8 *)(v1 + 54);
          uint64_t v12 = *(unsigned __int16 *)(v1 + 52);
          uint64_t v13 = *(void *)(v1 + 32);
          swift_beginAccess();
          int v14 = *(unsigned __int8 *)(*(void *)(v13 + 24) + (v11 | (v12 << 8)) + v3 + v2);
          int64_t v15 = v2 + 1;
          *(void *)(v1 + 24) = v2 + 1;
          switch(v14)
          {
            case 10:
              if (v6) {
                goto LABEL_54;
              }
              if (__CFADD__(v3++, 1)) {
                goto LABEL_59;
              }
              if (v2 || v4 < v3) {
                goto LABEL_60;
              }
              int64_t v15 = 0;
              *(_DWORD *)(v1 + 40) = v3;
              *(void *)(v1 + 24) = 0;
LABEL_32:
              *(void *)uint64_t v1 = 1;
              *(void *)(v1 + 8) = 0;
              *(void *)(v1 + 16) = 0;
              break;
            case 34:
LABEL_24:
              *(void *)uint64_t v1 = 0;
              *(void *)(v1 + 8) = 0;
LABEL_25:
              uint64_t v22 = 0x6000000000000000;
              goto LABEL_26;
            case 123:
              *(void *)uint64_t v1 = 0;
              *(void *)(v1 + 8) = 0;
              uint64_t v22 = 0x2400000000000000;
LABEL_26:
              *(void *)(v1 + 16) = v22;
              break;
            case 13:
              sub_1002149B8();
              int64_t v15 = *(void *)(v1 + 24);
LABEL_54:
              uint64_t v27 = ByteBuffer.readSlice(length:)(v15);
              *(void *)(v1 + 24) = 0;
              if (v27) {
                return v27;
              }
LABEL_63:
              __break(1u);
              JUMPOUT(0x10021497CLL);
          }
          int64_t v5 = v4 - v3;
          int64_t v2 = v15;
          if (v15 >= v5) {
            goto LABEL_36;
          }
          break;
      }
    }
  }
LABEL_36:
  uint64_t v24 = *(void *)(v1 + 8);
  unint64_t v25 = *(void *)(v1 + 16);
  uint64_t v26 = 0;
  switch(v25 >> 61)
  {
    case 1uLL:
      goto LABEL_40;
    case 2uLL:
      uint64_t v26 = 1;
      break;
    case 3uLL:
LABEL_41:
      uint64_t v26 = 3;
      break;
    case 4uLL:
      return v26;
    default:
LABEL_37:
      uint64_t v26 = 2;
      break;
  }
  return v26;
}

uint64_t sub_1002149B8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(unsigned int *)(v0 + 40);
  if (v1 >= (*(_DWORD *)(v0 + 44) - v2))
  {
    uint64_t result = sub_100215780(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
    *(void *)uint64_t v0 = 0;
    *(void *)(v0 + 8) = 0;
    *(void *)(v0 + 16) = 0;
  }
  else if (v1 + v2 < v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(unsigned __int8 *)(v0 + 54);
    uint64_t v4 = *(unsigned __int16 *)(v0 + 52);
    uint64_t v5 = *(void *)(v0 + 32);
    swift_beginAccess();
    if (*(unsigned char *)(*(void *)(v5 + 24) + (v3 | (v4 << 8)) + v2 + v1) == 10) {
      *(void *)(v0 + 24) = v1 + 1;
    }
    uint64_t result = sub_100215780(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
    *(void *)(v0 + 8) = 0;
    *(void *)(v0 + 16) = 0;
    *(void *)uint64_t v0 = 1;
  }
  return result;
}

uint64_t sub_100214A84(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  switch(HIBYTE(a3))
  {
    case 1u:
      char v10 = sub_100216534(a1);
      goto LABEL_13;
    case 2u:
      uint64_t v11 = *(unsigned int *)(v3 + 40);
      uint64_t v12 = *(void *)(v3 + 24);
      uint64_t v13 = v11 + v12;
      if (__OFADD__(v11, v12))
      {
        __break(1u);
        goto LABEL_28;
      }
      if (v13 >= v11 && v12 < (*(_DWORD *)(v4 + 44) - v11))
      {
        uint64_t v14 = *(void *)(v4 + 32);
        uint64_t v15 = *(unsigned __int16 *)(v4 + 52);
        uint64_t v16 = *(unsigned __int8 *)(v4 + 54);
        swift_beginAccess();
        int v17 = *(unsigned __int8 *)(*(void *)(v14 + 24) + (v16 | (v15 << 8)) + v13);
        *(void *)(v4 + 24) = v12 + 1;
        if (v17 == 125)
        {
          sub_100215780(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16));
          *(void *)uint64_t v4 = a1;
          *(_OWORD *)(v4 + 8) = xmmword_1005F6960;
LABEL_9:
          char v10 = sub_100216798(a1);
LABEL_13:
          if ((v10 & 1) == 0)
          {
LABEL_14:
            uint64_t v20 = ByteBuffer.readSlice(length:)(*(void *)(v4 + 24));
            *(void *)(v4 + 24) = 0;
            if (v20) {
              return v20;
            }
LABEL_29:
            __break(1u);
            JUMPOUT(0x100214D68);
          }
          goto LABEL_17;
        }
        sub_100216990();
        swift_allocError();
        swift_willThrow();
        sub_100215780(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16));
        *(void *)(v4 + 8) = 0;
        *(void *)(v4 + 16) = 0;
        *(void *)uint64_t v4 = 1;
        uint64_t v18 = ByteBuffer.readSlice(length:)(*(void *)(v4 + 24));
        *(void *)(v4 + 24) = 0;
        if (v18)
        {
          uint64_t v19 = v18;
          swift_errorRelease();
          return v19;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
LABEL_17:
      unint64_t v22 = *(void *)(v4 + 16);
      uint64_t v19 = 0;
      switch(v22 >> 61)
      {
        case 1uLL:
          uint64_t v19 = HIBYTE(v22) & 0x1F;
          switch(v19)
          {
            case 1:
            case 2:
              goto LABEL_20;
            case 3:
              goto LABEL_18;
            case 4:
              return v19;
            default:
              if (HIDWORD(*(void *)(v4 + 8)) == *(void *)(v4 + 8)) {
                uint64_t v19 = 4;
              }
              else {
                uint64_t v19 = 3;
              }
              break;
          }
          break;
        case 2uLL:
          uint64_t v19 = 1;
          break;
        case 3uLL:
LABEL_20:
          uint64_t v19 = 3;
          break;
        case 4uLL:
          return v19;
        default:
LABEL_18:
          uint64_t v19 = 2;
          break;
      }
      return v19;
    case 3u:
      goto LABEL_9;
    case 4u:
      char v10 = sub_100215CAC();
      goto LABEL_13;
    default:
      uint64_t v8 = a3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v9 = swift_retain();
      char v21 = sub_100215E10(v9, a2, v8);
      sub_100215798(a1, a2, a3, 0);
      if (v21) {
        goto LABEL_17;
      }
      goto LABEL_14;
  }
}

uint64_t sub_100214DA4(uint64_t result, unint64_t a2)
{
  if ((result & 1) == 0)
  {
    uint64_t result = sub_100214F74();
    if ((result & 0x1FF) == 0xA)
    {
      int v5 = *(_DWORD *)(v2 + 40);
      BOOL v6 = __CFADD__(v5, 1);
      uint64_t v7 = (v5 + 1);
      if (v6)
      {
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
      unint64_t v4 = *(unsigned int *)(v2 + 44);
      if (v4 < v7)
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      *(_DWORD *)(v2 + 40) = v7;
    }
  }
  uint64_t v8 = (*(_DWORD *)(v2 + 44) - *(_DWORD *)(v2 + 40));
  uint64_t v7 = *(void *)(v2 + 24);
  BOOL v9 = __OFSUB__(v8, v7);
  unint64_t v4 = v8 - v7;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_14:
    *(void *)(v2 + 24) = v4 + v7;
    __break(1u);
    return result;
  }
  unint64_t v10 = a2 - v4;
  if (a2 <= v4)
  {
    *(void *)(v2 + 24) = v7 + a2;
    uint64_t result = sub_100215780(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16));
    *(void *)(v2 + 8) = 0;
    *(void *)(v2 + 16) = 0;
    *(void *)uint64_t v2 = 1;
  }
  else
  {
    *(void *)(v2 + 24) = v4 + v7;
    uint64_t result = sub_100215780(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16));
    *(void *)uint64_t v2 = 1;
    *(void *)(v2 + 8) = v10;
    *(void *)(v2 + 16) = 0x4000000000000000;
  }
  return result;
}

uint64_t sub_100214E7C()
{
  sub_100216A28(v0, (uint64_t)&v2);
  sub_100216A28(&v2, (uint64_t)&v3);
  uint64_t result = 0;
  switch(v4 >> 61)
  {
    case 1uLL:
      v4 &= 0x1FFFFFFFFFFFFFFFuLL;
      sub_100216A28(&v3, (uint64_t)&v5);
      sub_100216A28(&v5, (uint64_t)v6);
      uint64_t result = v9;
      switch(v9)
      {
        case 1u:
        case 2u:
          goto LABEL_5;
        case 3u:
          goto LABEL_2;
        case 4u:
          return result;
        default:
          if (v8 == v7) {
            uint64_t result = 4;
          }
          else {
            uint64_t result = 3;
          }
          break;
      }
      break;
    case 2uLL:
      uint64_t result = 1;
      break;
    case 3uLL:
LABEL_5:
      uint64_t result = 3;
      break;
    case 4uLL:
      return result;
    default:
LABEL_2:
      uint64_t result = 2;
      break;
  }
  return result;
}

uint64_t sub_100214F74()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(unsigned int *)(v0 + 40);
  uint64_t v3 = (*(_DWORD *)(v0 + 44) - v2);
  if (v1 >= v3)
  {
    int v4 = 0;
    return v4 | ((v1 >= v3) << 8);
  }
  if (v1 + v2 >= v2)
  {
    uint64_t v5 = *(unsigned __int8 *)(v0 + 54);
    uint64_t v6 = *(unsigned __int16 *)(v0 + 52);
    uint64_t v7 = *(void *)(v0 + 32);
    swift_beginAccess();
    int v4 = *(unsigned __int8 *)(*(void *)(v7 + 24) + (v5 | (v6 << 8)) + v2 + v1);
    return v4 | ((v1 >= v3) << 8);
  }
  __break(1u);
  return result;
}

void FramingParser.hash(into:)(uint64_t a1)
{
  sub_100213B50(a1, *v1, v1[1], v1[2]);
  sub_1005E3410(v1[3]);
  sub_1001FCD38();
  sub_1005E3400();
  sub_1005E3410(v1[7]);
}

BOOL static FramingParser.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return (sub_100213C3C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16)) & 1) != 0&& *(void *)(a1 + 24) == *(void *)(a2 + 24)&& static ByteBuffer.== infix(_:_:)(*(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned __int16 *)(a1 + 52) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 54) << 48), *(void *)(a2 + 32), *(void *)(a2 + 40), *(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned __int16 *)(a2 + 52) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 54) << 48))&& *(void *)(a1 + 56) == *(void *)(a2 + 56);
}

Swift::Int FramingParser.hashValue.getter()
{
  sub_1005E33F0();
  sub_100216A28((long long *)v0, (uint64_t)&v11);
  sub_100216A28(&v11, (uint64_t)&v12);
  switch(v14 >> 61)
  {
    case 1uLL:
      v14 &= 0x1FFFFFFFFFFFFFFFuLL;
      unint64_t v3 = v14;
      Swift::UInt64 v4 = v12;
      uint64_t v5 = v13;
      sub_1005E3410(2uLL);
      sub_1002138F4((uint64_t)v10, v4, v5, v3);
      goto LABEL_9;
    case 2uLL:
      v14 &= 0x1FFFFFFFFFFFFFFFuLL;
      Swift::UInt v6 = v12;
      Swift::UInt64 v7 = v13;
      sub_1005E3410(3uLL);
      sub_1005E3410(v6);
      sub_1005E3450(v7);
      goto LABEL_9;
    case 3uLL:
      sub_100217034(v14);
      Swift::UInt v2 = 4;
      goto LABEL_6;
    case 4uLL:
      Swift::UInt v8 = 1;
      goto LABEL_8;
    default:
      sub_100217034(v14);
      Swift::UInt v2 = 0;
LABEL_6:
      sub_1005E3410(v2);
      Swift::UInt v8 = v1;
LABEL_8:
      sub_1005E3410(v8);
LABEL_9:
      sub_1005E3410(*(void *)(v0 + 24));
      swift_beginAccess();
      sub_1005E3400();
      sub_1005E3410(*(void *)(v0 + 56));
      return sub_1005E3470();
  }
}

Swift::Int sub_1002152D0()
{
  return FramingParser.hashValue.getter();
}

Swift::Int sub_100215310()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  unint64_t v3 = v0[2];
  Swift::UInt v4 = v0[3];
  Swift::UInt v6 = v0[7];
  sub_1005E33F0();
  sub_100213B50((uint64_t)v7, v1, v2, v3);
  sub_1005E3410(v4);
  swift_beginAccess();
  sub_1005E3400();
  sub_1005E3410(v6);
  return sub_1005E3470();
}

unint64_t sub_1002153E4()
{
  unint64_t result = qword_100710438;
  if (!qword_100710438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710438);
  }
  return result;
}

unint64_t sub_100215434()
{
  unint64_t result = qword_100710440;
  if (!qword_100710440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710440);
  }
  return result;
}

unint64_t sub_100215484()
{
  unint64_t result = qword_100710448;
  if (!qword_100710448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710448);
  }
  return result;
}

unint64_t sub_1002154D4()
{
  unint64_t result = qword_100710450;
  if (!qword_100710450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710450);
  }
  return result;
}

void type metadata accessor for InvalidFrame()
{
}

void type metadata accessor for LiteralSizeParsingError()
{
}

uint64_t destroy for FramingResult(uint64_t a1)
{
  return sub_1002136C8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t *initializeWithCopy for FramingResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_1002136B0(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for FramingResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_1002136B0(*a2, v4, v5);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  unint64_t v9 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1002136C8(v7, v8, v9);
  return a1;
}

uint64_t *assignWithTake for FramingResult(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  unint64_t v4 = a1[2];
  long long v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_1002136C8(v3, v5, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FramingResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 32))
    {
      unsigned int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 23) >> 6) & 0xFFFFFF03 | (4 * (*(unsigned char *)(a1 + 23) & 0x3F))) ^ 0xFF;
      if (v2 >= 0xFC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for FramingResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)((-(char)a2 >> 2) - (a2 << 6)) << 56;
      *(void *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_1002156E4(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 62;
}

uint64_t sub_1002156F0(uint64_t result)
{
  *(void *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_100215700(uint64_t result, char a2)
{
  *(unsigned char *)(result + 23) = a2 << 6;
  return result;
}

void type metadata accessor for FramingResult()
{
}

uint64_t sub_100215718(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 61 == 1) {
    return sub_100215730(result, a2, a3, HIBYTE(a3) & 0x1F);
  }
  return result;
}

uint64_t sub_100215730(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for FramingParser(uint64_t a1)
{
  sub_100215780(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
  return swift_release();
}

uint64_t sub_100215780(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 61 == 1) {
    return sub_100215798(result, a2, a3, HIBYTE(a3) & 0x1F);
  }
  return result;
}

uint64_t sub_100215798(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4) {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for FramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  sub_100215718(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 51) = *(_DWORD *)(a2 + 51);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  sub_100215718(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  sub_100215780(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for ReturnOption(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FramingParser(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_100215780(v4, v5, v6);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FramingParser(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FramingParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for FramingParser()
{
}

uint64_t sub_100215A10(uint64_t a1)
{
  return sub_100215780(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t *sub_100215A20(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_100215718(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *sub_100215A6C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_100215718(*a2, v4, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  unint64_t v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_100215780(v6, v7, v8);
  return a1;
}

uint64_t *sub_100215AC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_100215780(v4, v6, v5);
  return a1;
}

uint64_t sub_100215B08(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x1C && *(unsigned char *)(a1 + 24))
    {
      unsigned int v2 = *(_DWORD *)a1 + 27;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 16) >> 59) >> 2) & 0xFFFFFFE7 | (8 * ((*(void *)(a1 + 16) >> 59) & 3))) ^ 0x1F;
      if (v2 >= 0x1B) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_100215B54(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1B)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 28;
    if (a3 >= 0x1C) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1C) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 3) & 3) - 4 * a2) << 59;
    }
  }
  return result;
}

uint64_t sub_100215BA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16) >> 61;
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_100215BC4(uint64_t result)
{
  *(void *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_100215BD4(uint64_t result, uint64_t a2)
{
  if (a2 < 4)
  {
    *(void *)(result + 16) = *(void *)(result + 16) & 0x7FFFFFFFFFFFFFFLL | (a2 << 61);
  }
  else
  {
    *(void *)__n128 result = (a2 - 4);
    *(_OWORD *)(result + 8) = xmmword_1005F6970;
  }
  return result;
}

void type metadata accessor for FramingParser.State()
{
}

unint64_t sub_100215C14()
{
  unint64_t result = qword_100710458;
  if (!qword_100710458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710458);
  }
  return result;
}

unint64_t sub_100215C60()
{
  unint64_t result = qword_100710460;
  if (!qword_100710460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710460);
  }
  return result;
}

uint64_t sub_100215CAC()
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(unsigned int *)(v0 + 40);
  if (v3 >= (*(_DWORD *)(v0 + 44) - v4)) {
    return 1;
  }
  if (v3 + v4 < v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(unsigned __int8 *)(v0 + 54);
    uint64_t v6 = *(unsigned __int16 *)(v0 + 52);
    uint64_t v7 = *(void *)(v0 + 32);
    swift_beginAccess();
    if (*(unsigned char *)(*(void *)(v7 + 24) + (v5 | (v6 << 8)) + v4 + v3) == 126) {
      *(void *)(v0 + 24) = v3 + 1;
    }
    if (qword_10070FB10 == -1) {
      goto LABEL_6;
    }
  }
  swift_once();
LABEL_6:
  uint64_t v8 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  unint64_t v9 = qword_100761858;
  unint64_t v10 = dword_100761860 | ((unint64_t)(unsigned __int16)word_100761864 << 32) | ((unint64_t)byte_100761866 << 48);
  uint64_t v11 = *(void *)v0;
  uint64_t v12 = *(void *)(v0 + 8);
  unint64_t v13 = *(void *)(v0 + 16);
  swift_retain_n();
  sub_100215780(v11, v12, v13);
  *(void *)uint64_t v0 = v8;
  *(void *)(v0 + 8) = v9;
  *(void *)(v0 + 16) = v10 | 0x2000000000000000;
  char v14 = sub_100215E10(v8, v9, v10);
  uint64_t result = swift_release();
  if (!v2) {
    return v14 & 1;
  }
  return result;
}

uint64_t sub_100215E10(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unsigned int v5 = a2;
  unint64_t v6 = HIDWORD(a2);
  uint64_t v65 = a1;
  unint64_t v66 = a2;
  unsigned int v67 = a3;
  unsigned __int16 v68 = WORD2(a3);
  unsigned __int8 v69 = BYTE6(a3);
  uint64_t v7 = *((unsigned int *)v3 + 10);
  uint64_t v8 = v3[3];
  uint64_t v9 = v7 + v8;
  if (__OFADD__(v7, v8))
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (v9 < v7 || (uint64_t v10 = (*((_DWORD *)v3 + 11) - v7), v8 >= v10))
  {
    swift_retain();
LABEL_18:
    unint64_t v25 = v67 | ((unint64_t)v68 << 32) | ((unint64_t)v69 << 48) | 0x2000000000000000;
    sub_100215780(*v3, v3[1], v3[2]);
    *uint64_t v3 = v65;
    v3[1] = v5 | (v6 << 32);
    uint64_t v14 = 1;
    v3[2] = v25;
    return v14;
  }
  int v63 = v3;
  uint64_t v11 = v3[4];
  unint64_t v12 = *((unsigned __int8 *)v3 + 54) | ((unint64_t)*((unsigned __int16 *)v3 + 26) << 8);
  swift_retain();
  swift_beginAccess();
  int v13 = *(unsigned __int8 *)(*(void *)(v11 + 24) + v12 + v9);
  uint64_t v14 = v8 + 1;
  if ((v13 - 58) >= 0xFFFFFFF6)
  {
    while (1)
    {
      char v70 = v13;
      ByteBuffer._setBytes(_:at:)((uint64_t)&v70, (uint64_t)v71, v6);
      unint64_t v6 = (HIDWORD(v66) + v27);
      if (__CFADD__(HIDWORD(v66), v27)) {
        break;
      }
      HIDWORD(v66) += v27;
      unsigned int v5 = v66;
      if ((v6 - v66) >= 0x15)
      {
        v63[3] = v14;
        uint64_t v14 = v67;
        unsigned __int16 v41 = v68;
        unsigned __int8 v42 = v69;
        sub_1002169DC();
        swift_allocError();
        *(void *)uint64_t v43 = v65;
        *(_DWORD *)(v43 + 8) = v5;
        *(_DWORD *)(v43 + 12) = v6;
        *(_DWORD *)(v43 + 16) = v14;
        *(_WORD *)(v43 + 20) = v41;
        *(unsigned char *)(v43 + 22) = v42;
        goto LABEL_88;
      }
      uint64_t v28 = v7 + v14;
      if (__OFADD__(v7, v14)) {
        goto LABEL_84;
      }
      if (v28 < v7 || v14 >= v10)
      {
        uint64_t v3 = v63;
        v63[3] = v14;
        goto LABEL_18;
      }
      int v13 = *(unsigned __int8 *)(*(void *)(v11 + 24) + v12 + v28);
      ++v14;
      if ((v13 - 58) < 0xFFFFFFF6) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
LABEL_5:
  v63[3] = v14;
  if (v13 == 43) {
    goto LABEL_8;
  }
  if (v13 != 125)
  {
    if (v13 != 45)
    {
      sub_100216990();
      swift_allocError();
LABEL_89:
      swift_willThrow();
      goto LABEL_90;
    }
LABEL_8:
    uint64_t v14 = v69;
    swift_beginAccess();
    swift_retain();
    uint64_t v15 = sub_1005E1D70();
    unint64_t v17 = v16;
    swift_release();
    uint64_t v18 = HIBYTE(v17) & 0xF;
    uint64_t v19 = v15 & 0xFFFFFFFFFFFFLL;
    if ((v17 & 0x2000000000000000) != 0) {
      uint64_t v20 = HIBYTE(v17) & 0xF;
    }
    else {
      uint64_t v20 = v15 & 0xFFFFFFFFFFFFLL;
    }
    if (v20)
    {
      if ((v17 & 0x1000000000000000) != 0)
      {
        uint64_t v22 = sub_1002368B8(v15, v17, 10);
        char v24 = v62;
        goto LABEL_61;
      }
      if ((v17 & 0x2000000000000000) == 0)
      {
        if ((v15 & 0x1000000000000000) != 0) {
          char v21 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          char v21 = (unsigned __int8 *)sub_1005E2D30();
        }
        uint64_t v22 = (uint64_t)sub_100236888(v21, v19);
        char v24 = v23 & 1;
LABEL_61:
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          sub_100215780(*v63, v63[1], v63[2]);
          *int v63 = v22;
          *(_OWORD *)(v63 + 1) = xmmword_1005F6980;
          char v48 = sub_10021667C(v22);
          if (!v4)
          {
            uint64_t v14 = v48 & 1;
            swift_release();
            return v14;
          }
LABEL_90:
          swift_release();
          return v14;
        }
        goto LABEL_87;
      }
      v64[0] = v15;
      v64[1] = v17 & 0xFFFFFFFFFFFFFFLL;
      if (v15 == 43)
      {
        if (v18)
        {
          if (v18 != 1 && (BYTE1(v15) - 48) <= 9u)
          {
            uint64_t v22 = (BYTE1(v15) - 48);
            if (v18 == 2) {
              goto LABEL_60;
            }
            if ((BYTE2(v15) - 48) <= 9u)
            {
              uint64_t v22 = 10 * (BYTE1(v15) - 48) + (BYTE2(v15) - 48);
              uint64_t v45 = v18 - 3;
              if (v45)
              {
                Swift::UInt32 v46 = (unsigned __int8 *)v64 + 3;
                while (1)
                {
                  unsigned int v47 = *v46 - 48;
                  if (v47 > 9) {
                    goto LABEL_57;
                  }
                  if (!is_mul_ok(v22, 0xAuLL)) {
                    goto LABEL_57;
                  }
                  BOOL v39 = __CFADD__(10 * v22, v47);
                  uint64_t v22 = 10 * v22 + v47;
                  if (v39) {
                    goto LABEL_57;
                  }
                  char v24 = 0;
                  ++v46;
                  if (!--v45) {
                    goto LABEL_61;
                  }
                }
              }
              goto LABEL_60;
            }
          }
          goto LABEL_57;
        }
      }
      else
      {
        if (v15 != 45)
        {
          if (v18 && (v15 - 48) <= 9u)
          {
            uint64_t v22 = (v15 - 48);
            if (v18 == 1) {
              goto LABEL_60;
            }
            if ((BYTE1(v15) - 48) <= 9u)
            {
              uint64_t v22 = 10 * (v15 - 48) + (BYTE1(v15) - 48);
              uint64_t v49 = v18 - 2;
              if (v49)
              {
                int v50 = (unsigned __int8 *)v64 + 2;
                while (1)
                {
                  unsigned int v51 = *v50 - 48;
                  if (v51 > 9) {
                    goto LABEL_57;
                  }
                  if (!is_mul_ok(v22, 0xAuLL)) {
                    goto LABEL_57;
                  }
                  BOOL v39 = __CFADD__(10 * v22, v51);
                  uint64_t v22 = 10 * v22 + v51;
                  if (v39) {
                    goto LABEL_57;
                  }
                  char v24 = 0;
                  ++v50;
                  if (!--v49) {
                    goto LABEL_61;
                  }
                }
              }
              goto LABEL_60;
            }
          }
LABEL_57:
          uint64_t v22 = 0;
LABEL_58:
          char v24 = 1;
          goto LABEL_61;
        }
        if (v18)
        {
          if (v18 != 1)
          {
            unsigned __int8 v38 = BYTE1(v15) - 48;
            if ((BYTE1(v15) - 48) <= 9u)
            {
              uint64_t v22 = 0;
              BOOL v39 = v38 == 0;
              unint64_t v40 = -(uint64_t)v38;
              if (!v39) {
                goto LABEL_58;
              }
              if (v18 == 2)
              {
                char v24 = 0;
                uint64_t v22 = v40;
                goto LABEL_61;
              }
              unsigned __int8 v52 = BYTE2(v15) - 48;
              if ((BYTE2(v15) - 48) <= 9u && is_mul_ok(v40, 0xAuLL))
              {
                unint64_t v53 = 10 * v40;
                uint64_t v22 = v53 - v52;
                if (v53 >= v52)
                {
                  uint64_t v54 = v18 - 3;
                  if (v54)
                  {
                    BOOL v55 = (unsigned __int8 *)v64 + 3;
                    while (1)
                    {
                      unsigned int v56 = *v55 - 48;
                      if (v56 > 9) {
                        goto LABEL_57;
                      }
                      if (!is_mul_ok(v22, 0xAuLL)) {
                        goto LABEL_57;
                      }
                      BOOL v39 = 10 * v22 >= (unint64_t)v56;
                      uint64_t v22 = 10 * v22 - v56;
                      if (!v39) {
                        goto LABEL_57;
                      }
                      char v24 = 0;
                      ++v55;
                      if (!--v54) {
                        goto LABEL_61;
                      }
                    }
                  }
LABEL_60:
                  char v24 = 0;
                  goto LABEL_61;
                }
              }
            }
          }
          goto LABEL_57;
        }
        __break(1u);
      }
      __break(1u);
    }
LABEL_86:
    swift_bridgeObjectRelease();
LABEL_87:
    uint64_t v57 = v65;
    uint64_t v14 = v67;
    unsigned __int16 v58 = v68;
    unsigned __int8 v59 = v69;
    sub_1002169DC();
    swift_allocError();
    unint64_t v60 = v66;
    *(void *)uint64_t v61 = v57;
    *(void *)(v61 + 8) = v60;
    *(_DWORD *)(v61 + 16) = v14;
    *(_WORD *)(v61 + 20) = v58;
    *(unsigned char *)(v61 + 22) = v59;
    goto LABEL_88;
  }
  uint64_t v14 = v67;
  unsigned __int16 v29 = v68;
  unsigned __int8 v30 = v69;
  swift_beginAccess();
  swift_retain();
  uint64_t v31 = sub_1005E1D70();
  unint64_t v33 = v32;
  swift_release();
  unint64_t v34 = sub_10031DFA0(v31, v33);
  if (v35)
  {
    sub_1002169DC();
    swift_allocError();
    *(void *)uint64_t v44 = v65;
    *(_DWORD *)(v44 + 8) = v5;
    *(_DWORD *)(v44 + 12) = v6;
    *(_DWORD *)(v44 + 16) = v14;
    *(_WORD *)(v44 + 20) = v29;
    *(unsigned char *)(v44 + 22) = v30;
LABEL_88:
    swift_retain();
    goto LABEL_89;
  }
  uint64_t v36 = v34;
  sub_100215780(*v63, v63[1], v63[2]);
  *int v63 = v36;
  *(_OWORD *)(v63 + 1) = xmmword_1005F6960;
  char v37 = sub_100216798(v36);
  swift_release();
  if (!v4) {
    return v37 & 1;
  }
  return v14;
}

uint64_t sub_100216534(uint64_t result)
{
  uint64_t v3 = *(unsigned int *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
  }
  else
  {
    if (v5 < v3 || v4 >= (*(_DWORD *)(v1 + 44) - v3)) {
      return 1;
    }
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(v1 + 32);
    uint64_t v8 = *(unsigned __int16 *)(v1 + 52);
    uint64_t v9 = *(unsigned __int8 *)(v1 + 54);
    swift_beginAccess();
    int v10 = *(unsigned __int8 *)(*(void *)(v7 + 24) + (v9 | (v8 << 8)) + v5);
    *(void *)(v1 + 24) = v4 + 1;
    switch(v10)
    {
      case '+':
LABEL_7:
        sub_100215780(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
        *(void *)uint64_t v1 = v6;
        *(_OWORD *)(v1 + 8) = xmmword_1005F6980;
        return 1;
      case '}':
        sub_100215780(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
        *(void *)uint64_t v1 = v6;
        *(_OWORD *)(v1 + 8) = xmmword_1005F6960;
        uint64_t result = sub_100216798(v6);
        if (!v2) {
          return result & 1;
        }
        break;
      case '-':
        goto LABEL_7;
      default:
        sub_100216990();
        swift_allocError();
        return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10021667C(uint64_t result)
{
  uint64_t v3 = *(unsigned int *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
  }
  else if (v5 < v3 || v4 >= (*(_DWORD *)(v1 + 44) - v3))
  {
    return 1;
  }
  else
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(v1 + 32);
    uint64_t v8 = *(unsigned __int16 *)(v1 + 52);
    uint64_t v9 = *(unsigned __int8 *)(v1 + 54);
    swift_beginAccess();
    int v10 = *(unsigned __int8 *)(*(void *)(v7 + 24) + (v9 | (v8 << 8)) + v5);
    *(void *)(v1 + 24) = v4 + 1;
    if (v10 == 125)
    {
      sub_100215780(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
      *(void *)uint64_t v1 = v6;
      *(_OWORD *)(v1 + 8) = xmmword_1005F6960;
      uint64_t result = sub_100216798(v6);
      if (!v2) {
        return result & 1;
      }
    }
    else
    {
      sub_100216990();
      swift_allocError();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_100216798(uint64_t result)
{
  uint64_t v2 = *(unsigned int *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
  }
  else if (v4 < v2 || v3 >= (*(_DWORD *)(v1 + 44) - v2))
  {
    return 1;
  }
  else
  {
    uint64_t v5 = result;
    uint64_t v6 = *(void *)(v1 + 32);
    uint64_t v7 = *(unsigned __int16 *)(v1 + 52);
    uint64_t v8 = *(unsigned __int8 *)(v1 + 54);
    swift_beginAccess();
    int v9 = *(unsigned __int8 *)(*(void *)(v6 + 24) + (v8 | (v7 << 8)) + v4);
    *(void *)(v1 + 24) = v3 + 1;
    if (v9 == 10)
    {
      sub_100215780(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
      uint64_t result = 0;
      *(void *)uint64_t v1 = 1;
      *(void *)(v1 + 8) = v5;
      *(void *)(v1 + 16) = 0x4000000000000000;
    }
    else if (v9 == 13)
    {
      sub_1002168B8(v5);
      return 0;
    }
    else
    {
      sub_100216990();
      swift_allocError();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1002168B8(uint64_t result)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(unsigned int *)(v1 + 40);
  if (v3 >= (*(_DWORD *)(v1 + 44) - v4))
  {
    uint64_t result = sub_100215780(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
    uint64_t v8 = 0;
LABEL_7:
    *(void *)uint64_t v1 = v8;
    *(void *)(v1 + 8) = v2;
    *(void *)(v1 + 16) = 0x4000000000000000;
    return result;
  }
  if (v3 + v4 >= v4)
  {
    uint64_t v5 = *(unsigned __int8 *)(v1 + 54);
    uint64_t v6 = *(unsigned __int16 *)(v1 + 52);
    uint64_t v7 = *(void *)(v1 + 32);
    swift_beginAccess();
    if (*(unsigned char *)(*(void *)(v7 + 24) + (v5 | (v6 << 8)) + v4 + v3) == 10) {
      *(void *)(v1 + 24) = v3 + 1;
    }
    uint64_t result = sub_100215780(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
    uint64_t v8 = 1;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_100216990()
{
  unint64_t result = qword_100710468;
  if (!qword_100710468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710468);
  }
  return result;
}

unint64_t sub_1002169DC()
{
  unint64_t result = qword_100710470;
  if (!qword_100710470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710470);
  }
  return result;
}

uint64_t sub_100216A28(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(void *)(a2 + 16) = *((void *)a1 + 2);
  *(_OWORD *)a2 = v2;
  return a2;
}

void type metadata accessor for FramingParser.QuotedState()
{
}

uint64_t sub_100216A54(uint64_t a1)
{
  return sub_100215798(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(unsigned char *)(a1 + 23));
}

uint64_t sub_100216A78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 23);
  int v7 = *(unsigned __int8 *)(a2 + 22);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_100215730(*(void *)a2, v4, v5 | (v8 << 32), v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 23) = v6;
  return a1;
}

uint64_t sub_100216AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 23);
  int v7 = *(unsigned __int8 *)(a2 + 22);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_100215730(*(void *)a2, v4, v5 | (v8 << 32), v6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  char v12 = *(unsigned char *)(a1 + 23);
  *(unsigned char *)(a1 + 23) = v6;
  sub_100215798(v9, v10, v11, v12);
  return a1;
}

uint64_t sub_100216B9C(uint64_t a1, long long *a2)
{
  char v3 = *((unsigned char *)a2 + 23);
  long long v4 = *a2;
  int v7 = *((_DWORD *)a2 + 4);
  uint64_t v5 = a2 + 1;
  int v6 = v7;
  LOWORD(v7) = *((_WORD *)v5 + 2);
  char v8 = *((unsigned char *)v5 + 6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  *(_OWORD *)a1 = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 20) = v7;
  *(unsigned char *)(a1 + 22) = v8;
  char v12 = *(unsigned char *)(a1 + 23);
  *(unsigned char *)(a1 + 23) = v3;
  sub_100215798(v9, v10, v11, v12);
  return a1;
}

uint64_t sub_100216C10(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 23);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100216C50(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 23) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100216C94(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 23) <= 3u) {
    return *(unsigned __int8 *)(a1 + 23);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_100216CAC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    LOBYTE(a2) = 4;
    *(_DWORD *)(result + 16) = 0;
  }
  *(unsigned char *)(result + 23) = a2;
  return result;
}

void type metadata accessor for FramingParser.LiteralHeaderState()
{
}

unsigned char *sub_100216CDC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100216DA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for LineFeedByteStrategy()
{
}

unint64_t sub_100216DE0()
{
  unint64_t result = qword_100710478;
  if (!qword_100710478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710478);
  }
  return result;
}

unint64_t sub_100216E30()
{
  unint64_t result = qword_100710480;
  if (!qword_100710480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710480);
  }
  return result;
}

unint64_t sub_100216E80()
{
  unint64_t result = qword_100710488;
  if (!qword_100710488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710488);
  }
  return result;
}

BOOL sub_100216ED8()
{
  sub_1002136B0(v2, v1, v0);
  sub_1002136B0(v5, v4, v3);
  return static ByteBuffer.== infix(_:_:)(v2, v1, v0 & 0xFFFFFFFFFFFFFFLL, v5, v4, v3 & 0xFFFFFFFFFFFFFFLL);
}

uint64_t sub_100216F38()
{
  return sub_100215780(v0, v1, v2);
}

uint64_t sub_100216F54()
{
  sub_1002136B0(v0, v2, v1);
  return sub_1005E1D70();
}

uint64_t sub_100216FA8()
{
  sub_1002136C8(v5, v4, v3);
  return sub_1002136C8(v2, v1, v0);
}

uint64_t sub_100216FF0()
{
  return sub_1005E3400();
}

uint64_t sub_10021701C()
{
  return sub_1005E33F0();
}

void sub_100217034(uint64_t a1@<X8>)
{
  *(void *)(v1 - 56) = a1 & 0x1FFFFFFFFFFFFFFFLL;
}

uint64_t sub_100217048()
{
  return sub_1002136C8(v0, v2, v1);
}

uint64_t sub_100217068()
{
  return v0;
}

uint64_t AbsoluteMessagePath.command.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10021709C(v1, a1);
}

uint64_t sub_10021709C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070FD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *AbsoluteMessagePath.command.setter(uint64_t a1)
{
  sub_1001E5424(a1, (uint64_t)v3);
  sub_1001E5424((uint64_t)v3, (uint64_t)v4);
  sub_1001E5424((uint64_t)v4, (uint64_t)__src);
  memcpy(__dst, v1, sizeof(__dst));
  sub_1002179C0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
  return memcpy(v1, __src, 0xC0uLL);
}

uint64_t sub_100217184(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20,uint64_t a21,uint64_t a22)
{
  if (a3 < 0xFFFFFFFE00000000 || (a9 & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    return sub_100217220(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  }
  return result;
}

uint64_t sub_100217220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20,uint64_t a21,uint64_t a22)
{
  swift_bridgeObjectRelease();
  if (a9 < 0)
  {
    swift_bridgeObjectRelease();
    return sub_100217350(a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100217350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13)
{
  if (a13)
  {
    sub_1002173AC(a9, a10, a11);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002173AC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AbsoluteMessagePath.init(command:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001E5424(a1, (uint64_t)v4);
  sub_1001E5424((uint64_t)v4, (uint64_t)v5);
  return sub_1001E5424((uint64_t)v5, a2);
}

void *AbsoluteMessagePath.hash(into:)()
{
  sub_1001E5424((uint64_t)v0, (uint64_t)v4);
  sub_1001E5424((uint64_t)v4, (uint64_t)v5);
  if (sub_1002174E0((uint64_t)v5) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1001E5424((uint64_t)v4, (uint64_t)v2);
    sub_100217504((uint64_t)v2, (uint64_t)v3);
    sub_1005E3420(1u);
    sub_1002179C0(v0, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
    URLCommand.hash(into:)();
  }
  return sub_1002179C0(v0, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
}

uint64_t sub_1002174E0(uint64_t a1)
{
  unsigned int v1 = (*(void *)(a1 + 16) >> 33) & 0x7FFFFFFF | ((*(_DWORD *)(a1 + 64) >> 9) << 31);
  if (v1 > 0x80000000) {
    return -v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100217504(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL static AbsoluteMessagePath.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  sub_1001E5424((uint64_t)a1, (uint64_t)v12);
  sub_1001E5424((uint64_t)a2, (uint64_t)v13);
  sub_1001E5424((uint64_t)v12, (uint64_t)v14);
  if (sub_1002174E0((uint64_t)v14) != 1)
  {
    sub_1001E5424((uint64_t)v13, (uint64_t)v8);
    if (sub_1002174E0((uint64_t)v8) != 1)
    {
      sub_1001E5424((uint64_t)v12, (uint64_t)v6);
      sub_100217504((uint64_t)v6, (uint64_t)v11);
      sub_1001E5424((uint64_t)v13, (uint64_t)v7);
      sub_100217504((uint64_t)v7, (uint64_t)v9);
      sub_1002179C0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
      sub_1002179C0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
      BOOL v4 = static URLCommand.__derived_enum_equals(_:_:)((uint64_t)v11, (uint64_t)v9);
      sub_1002179C0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
      sub_1002179C0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
      return v4;
    }
    goto LABEL_5;
  }
  sub_1001E5424((uint64_t)v13, (uint64_t)v9);
  if (sub_1002174E0((uint64_t)v9) != 1)
  {
LABEL_5:
    sub_1001E5424((uint64_t)v12, (uint64_t)v9);
    sub_1001E5424((uint64_t)v13, (uint64_t)&v10);
    sub_1002179C0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
    sub_1002179C0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
    sub_100217C70((uint64_t)v9);
    return 0;
  }
  sub_1002179C0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
  return 1;
}

Swift::Int AbsoluteMessagePath.hashValue.getter()
{
  sub_1005E33F0();
  sub_1001E5424((uint64_t)v0, (uint64_t)v4);
  sub_1001E5424((uint64_t)v4, (uint64_t)v5);
  if (sub_1002174E0((uint64_t)v5) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1001E5424((uint64_t)v4, (uint64_t)v2);
    sub_100217504((uint64_t)v2, (uint64_t)v3);
    sub_1005E3420(1u);
    sub_1002179C0(v0, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
    URLCommand.hash(into:)();
  }
  sub_1002179C0(v0, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
  return sub_1005E3470();
}

Swift::Int sub_100217800()
{
  memcpy(v2, v0, sizeof(v2));
  return AbsoluteMessagePath.hashValue.getter();
}

void *sub_10021783C()
{
  memcpy(v2, v0, sizeof(v2));
  return AbsoluteMessagePath.hash(into:)();
}

Swift::Int sub_100217880()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_1005E33F0();
  sub_1001E5424((uint64_t)__dst, (uint64_t)v5);
  if (sub_1002174E0((uint64_t)v5) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1001E5424((uint64_t)__dst, (uint64_t)v2);
    sub_100217504((uint64_t)v2, (uint64_t)v3);
    sub_1005E3420(1u);
    sub_1002179C0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
    URLCommand.hash(into:)();
  }
  sub_1002179C0(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
  return sub_1005E3470();
}

BOOL sub_100217968(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static AbsoluteMessagePath.__derived_struct_equals(_:_:)(v4, __dst);
}

void *sub_1002179C0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_100217A34(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20,uint64_t a21,uint64_t a22)
{
  if (a3 < 0xFFFFFFFE00000000 || (a9 & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    return sub_100217AD0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  }
  return result;
}

uint64_t sub_100217AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20,uint64_t a21,uint64_t a22)
{
  if (a9 < 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_100217BFC(a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
  else
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100217BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13)
{
  if (a13)
  {
    sub_100217C58(a9, a10, a11);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100217C58(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100217C70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 200);
  uint64_t v17 = *(void *)(a1 + 192);
  unint64_t v3 = *(void *)(a1 + 208);
  uint64_t v4 = *(void *)(a1 + 216);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v6 = *(void *)(a1 + 232);
  uint64_t v7 = *(void *)(a1 + 240);
  uint64_t v8 = *(void *)(a1 + 248);
  long long v16 = *(_OWORD *)(a1 + 256);
  long long v15 = *(_OWORD *)(a1 + 272);
  long long v14 = *(_OWORD *)(a1 + 288);
  long long v13 = *(_OWORD *)(a1 + 304);
  long long v12 = *(_OWORD *)(a1 + 320);
  long long v11 = *(_OWORD *)(a1 + 336);
  long long v10 = *(_OWORD *)(a1 + 352);
  sub_100217184(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168));
  sub_100217184(v17, v2, v3, v4, v5, v6, v7, v8, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    BYTE8(v11),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

unint64_t sub_100217DAC()
{
  unint64_t result = qword_100710490;
  if (!qword_100710490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710490);
  }
  return result;
}

uint64_t destroy for AbsoluteMessagePath(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = *(void *)(result + 64);
  if (v1 < 0xFFFFFFFE00000000 || (v2 & 0xFFFFFFFFFFFFFE00) != 0x200) {
    return sub_100217220(*(void *)result, *(void *)(result + 8), v1, *(void *)(result + 24), *(void *)(result + 32), *(void *)(result + 40), *(void *)(result + 48), *(void *)(result + 56), v2, *(void *)(result + 72), *(void *)(result + 80), *(void *)(result + 88), *(void *)(result + 96), *(void *)(result + 104), *(void *)(result + 112), *(void *)(result + 120), *(void *)(result + 128), *(void *)(result + 136), *(void *)(result + 144),
  }
             *(_OWORD *)(result + 152),
             *(void *)(result + 160),
             *(void *)(result + 168));
  return result;
}

void *initializeWithCopy for AbsoluteMessagePath(void *__dst, uint64_t *a2)
{
  unint64_t v3 = a2[2];
  uint64_t v4 = a2[8];
  if (v3 >= 0xFFFFFFFE00000000 && (v4 & 0xFFFFFFFFFFFFFE00) == 0x200)
  {
    memcpy(__dst, a2, 0xC0uLL);
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a2[3];
    uint64_t v7 = a2[4];
    uint64_t v13 = a2[9];
    uint64_t v14 = a2[10];
    uint64_t v15 = a2[11];
    uint64_t v16 = a2[12];
    uint64_t v17 = a2[13];
    uint64_t v18 = a2[14];
    uint64_t v19 = a2[15];
    uint64_t v20 = a2[16];
    uint64_t v21 = a2[17];
    uint64_t v22 = a2[18];
    uint64_t v23 = a2[19];
    uint64_t v24 = a2[20];
    uint64_t v25 = a2[21];
    uint64_t v26 = a2[22];
    uint64_t v27 = a2[23];
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[5];
    uint64_t v10 = a2[6];
    uint64_t v11 = a2[7];
    sub_100217AD0(*a2, v8, v3, v6, v7, v9, v10, v11, v4, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
      v23,
      v24,
      v25);
    *__dst = v5;
    __dst[1] = v8;
    __dst[2] = v3;
    __dst[3] = v6;
    __dst[4] = v7;
    __dst[5] = v9;
    __dst[6] = v10;
    __dst[7] = v11;
    __dst[8] = v4;
    __dst[9] = v13;
    __dst[10] = v14;
    __dst[11] = v15;
    __dst[12] = v16;
    __dst[13] = v17;
    __dst[14] = v18;
    __dst[15] = v19;
    __dst[16] = v20;
    __dst[17] = v21;
    __dst[18] = v22;
    __dst[19] = v23;
    __dst[20] = v24;
    __dst[21] = v25;
    __dst[22] = v26;
    __dst[23] = v27;
  }
  return __dst;
}

uint64_t *assignWithCopy for AbsoluteMessagePath(uint64_t *__dst, uint64_t *__src)
{
  unint64_t v4 = __src[2];
  uint64_t v5 = __src[8];
  BOOL v7 = v4 > 0xFFFFFFFDFFFFFFFFLL && (v5 & 0xFFFFFFFFFFFFFE00) == 512;
  if ((unint64_t)__dst[2] < 0xFFFFFFFE00000000 || (__dst[8] & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    if (!v7)
    {
      uint64_t v15 = *__src;
      uint64_t v16 = __src[1];
      uint64_t v17 = __src[3];
      uint64_t v18 = __src[4];
      uint64_t v19 = __src[6];
      uint64_t v20 = __src[7];
      uint64_t v39 = __src[9];
      uint64_t v41 = __src[10];
      uint64_t v43 = __src[11];
      uint64_t v45 = __src[12];
      uint64_t v47 = __src[13];
      uint64_t v49 = __src[14];
      uint64_t v51 = __src[15];
      uint64_t v53 = __src[16];
      uint64_t v55 = __src[17];
      uint64_t v57 = __src[18];
      uint64_t v59 = __src[19];
      uint64_t v61 = __src[20];
      uint64_t v63 = __src[21];
      uint64_t v65 = __src[22];
      uint64_t v67 = __src[23];
      uint64_t v21 = __src[5];
      sub_100217AD0(*__src, v16, v4, v17, v18, v21, v19, v20, v5, v39, v41, v43, v45, v47, v49, v51, v53, v55, v57,
        v59,
        v61,
        v63);
      uint64_t v22 = *__dst;
      uint64_t v23 = __dst[1];
      *__dst = v15;
      __dst[1] = v16;
      uint64_t v24 = __dst[2];
      uint64_t v25 = __dst[3];
      __dst[2] = v4;
      __dst[3] = v17;
      uint64_t v26 = __dst[4];
      uint64_t v27 = __dst[5];
      __dst[4] = v18;
      __dst[5] = v21;
      uint64_t v28 = __dst[6];
      uint64_t v29 = __dst[7];
      __dst[6] = v19;
      __dst[7] = v20;
      long long v30 = *((_OWORD *)__dst + 4);
      long long v31 = *((_OWORD *)__dst + 5);
      __dst[8] = v5;
      __dst[9] = v39;
      __dst[10] = v41;
      __dst[11] = v43;
      long long v32 = *((_OWORD *)__dst + 6);
      long long v33 = *((_OWORD *)__dst + 7);
      __dst[12] = v45;
      __dst[13] = v47;
      __dst[14] = v49;
      __dst[15] = v51;
      long long v34 = *((_OWORD *)__dst + 8);
      long long v35 = *((_OWORD *)__dst + 9);
      __dst[16] = v53;
      __dst[17] = v55;
      __dst[18] = v57;
      __dst[19] = v59;
      long long v36 = *((_OWORD *)__dst + 10);
      __dst[20] = v61;
      __dst[21] = v63;
      __dst[22] = v65;
      __dst[23] = v67;
      sub_100217220(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35,
        BYTE8(v35),
        v36,
        *((uint64_t *)&v36 + 1));
      return __dst;
    }
    sub_100218354((uint64_t)__dst);
    goto LABEL_13;
  }
  if (v7)
  {
LABEL_13:
    memcpy(__dst, __src, 0xC0uLL);
    return __dst;
  }
  uint64_t v8 = __src[3];
  uint64_t v9 = __src[4];
  uint64_t v10 = __src[7];
  uint64_t v38 = __src[9];
  uint64_t v40 = __src[10];
  uint64_t v42 = __src[11];
  uint64_t v44 = __src[12];
  uint64_t v46 = __src[13];
  uint64_t v48 = __src[14];
  uint64_t v50 = __src[15];
  uint64_t v52 = __src[16];
  uint64_t v54 = __src[17];
  uint64_t v56 = __src[18];
  uint64_t v58 = __src[19];
  uint64_t v60 = __src[20];
  uint64_t v62 = __src[21];
  uint64_t v64 = __src[22];
  uint64_t v66 = __src[23];
  uint64_t v11 = *__src;
  uint64_t v12 = __src[1];
  uint64_t v13 = __src[5];
  uint64_t v14 = __src[6];
  sub_100217AD0(*__src, v12, v4, v8, v9, v13, v14, v10, v5, v38, v40, v42, v44, v46, v48, v50, v52, v54, v56,
    v58,
    v60,
    v62);
  *__dst = v11;
  __dst[1] = v12;
  __dst[2] = v4;
  __dst[3] = v8;
  __dst[4] = v9;
  __dst[5] = v13;
  __dst[6] = v14;
  __dst[7] = v10;
  __dst[8] = v5;
  __dst[9] = v38;
  __dst[10] = v40;
  __dst[11] = v42;
  __dst[12] = v44;
  __dst[13] = v46;
  __dst[14] = v48;
  __dst[15] = v50;
  __dst[16] = v52;
  __dst[17] = v54;
  __dst[18] = v56;
  __dst[19] = v58;
  __dst[20] = v60;
  __dst[21] = v62;
  __dst[22] = v64;
  __dst[23] = v66;
  return __dst;
}

uint64_t sub_100218354(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for URLCommand(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

char *assignWithTake for AbsoluteMessagePath(char *__dst, char *__src)
{
  unint64_t v4 = *((void *)__dst + 2);
  uint64_t v5 = *((void *)__dst + 8);
  unint64_t v6 = *((void *)__src + 2);
  uint64_t v7 = *((void *)__src + 8);
  if (v4 < 0xFFFFFFFE00000000 || (v5 & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    if (v6 < 0xFFFFFFFE00000000 || (v7 & 0xFFFFFFFFFFFFFE00) != 0x200)
    {
      uint64_t v8 = *((void *)__src + 7);
      uint64_t v9 = *((void *)__src + 23);
      uint64_t v10 = *(void *)__dst;
      uint64_t v11 = *((void *)__dst + 1);
      uint64_t v12 = *((void *)__dst + 3);
      uint64_t v13 = *((void *)__dst + 4);
      uint64_t v14 = *((void *)__dst + 5);
      uint64_t v15 = *((void *)__dst + 6);
      uint64_t v16 = *((void *)__dst + 7);
      long long v17 = *(_OWORD *)(__dst + 72);
      long long v18 = *(_OWORD *)(__dst + 88);
      long long v19 = *(_OWORD *)(__dst + 104);
      long long v20 = *(_OWORD *)(__dst + 120);
      long long v21 = *(_OWORD *)(__dst + 136);
      long long v22 = *(_OWORD *)(__dst + 152);
      long long v23 = *(_OWORD *)(__dst + 168);
      *(_OWORD *)__dst = *(_OWORD *)__src;
      *((void *)__dst + 2) = v6;
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
      *((void *)__dst + 7) = v8;
      *((void *)__dst + 8) = v7;
      *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
      *(_OWORD *)(__dst + 88) = *(_OWORD *)(__src + 88);
      *(_OWORD *)(__dst + 104) = *(_OWORD *)(__src + 104);
      *(_OWORD *)(__dst + 120) = *(_OWORD *)(__src + 120);
      *(_OWORD *)(__dst + 136) = *(_OWORD *)(__src + 136);
      *(_OWORD *)(__dst + 152) = *(_OWORD *)(__src + 152);
      *(_OWORD *)(__dst + 168) = *(_OWORD *)(__src + 168);
      *((void *)__dst + 23) = v9;
      sub_100217220(v10, v11, v4, v12, v13, v14, v15, v16, v5, v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1),
        v22,
        *((uint64_t *)&v22 + 1),
        v23);
      return __dst;
    }
    sub_100218354((uint64_t)__dst);
  }
  memcpy(__dst, __src, 0xC0uLL);
  return __dst;
}

uint64_t getEnumTagSinglePayload for AbsoluteMessagePath(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 192))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unsigned int v3 = (*(void *)(a1 + 16) >> 33) & 0x7FFFFFFF | ((*(_DWORD *)(a1 + 64) >> 9) << 31);
      int v4 = -2 - v3;
      if ((int)(-2 - v3) < 0) {
        int v4 = -1;
      }
      if (v3 <= 0x80000000) {
        int v2 = -1;
      }
      else {
        int v2 = v4;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AbsoluteMessagePath(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)~a2 << 33;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(void *)(result + 56) = 0;
      *(void *)(result + 64) = 512;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(_OWORD *)(result + 136) = 0u;
      *(_OWORD *)(result + 152) = 0u;
      *(_OWORD *)(result + 168) = 0u;
      *(void *)(result + 184) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AbsoluteMessagePath()
{
  return &type metadata for AbsoluteMessagePath;
}

void Access.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4)
  {
    sub_1005E3410(0);
    swift_bridgeObjectRetain();
    sub_100218DE4();
    uint64_t v6 = a2;
    uint64_t v7 = a3;
    unsigned __int8 v8 = 0;
    goto LABEL_5;
  }
  if (a4 == 1)
  {
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
    sub_100218DE4();
    uint64_t v6 = a2;
    uint64_t v7 = a3;
    unsigned __int8 v8 = 1;
LABEL_5:
    sub_1002173AC(v6, v7, v8);
    return;
  }
  if (a2 | a3) {
    Swift::UInt v9 = 3;
  }
  else {
    Swift::UInt v9 = 2;
  }
  sub_1005E3410(v9);
}

uint64_t static Access.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 != 1)
    {
      if (a1 | a2)
      {
        BOOL v8 = a6 == 2 && a4 == 1;
        if (!v8 || a5) {
          return 0;
        }
      }
      else if (a6 != 2 || a5 | a4)
      {
        return 0;
      }
      return 1;
    }
    if (a6 != 1) {
      return 0;
    }
LABEL_6:
    if (a1 != a4 || a2 != a5) {
      return sub_1005E3290();
    }
    return 1;
  }
  if (!a6) {
    goto LABEL_6;
  }
  return 0;
}

Swift::Int Access.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  sub_1005E33F0();
  if (!a3)
  {
    sub_1005E3410(0);
    swift_bridgeObjectRetain();
    sub_100218DE4();
    uint64_t v6 = a1;
    uint64_t v7 = a2;
    unsigned __int8 v8 = 0;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
    sub_100218DE4();
    uint64_t v6 = a1;
    uint64_t v7 = a2;
    unsigned __int8 v8 = 1;
LABEL_5:
    sub_1002173AC(v6, v7, v8);
    return sub_1005E3470();
  }
  if (a1 | a2) {
    Swift::UInt v9 = 3;
  }
  else {
    Swift::UInt v9 = 2;
  }
  sub_1005E3410(v9);
  return sub_1005E3470();
}

Swift::Int sub_100218848()
{
  return Access.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100218854(uint64_t a1)
{
  Access.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100218860()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1005E33F0();
  if (!v3)
  {
    sub_1005E3410(0);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    uint64_t v4 = v1;
    uint64_t v5 = v2;
    unsigned __int8 v6 = 0;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    uint64_t v4 = v1;
    uint64_t v5 = v2;
    unsigned __int8 v6 = 1;
LABEL_5:
    sub_1002173AC(v4, v5, v6);
    return sub_1005E3470();
  }
  if (v1 | v2) {
    Swift::UInt v7 = 3;
  }
  else {
    Swift::UInt v7 = 2;
  }
  sub_1005E3410(v7);
  return sub_1005E3470();
}

uint64_t sub_100218938(uint64_t a1, uint64_t a2)
{
  return static Access.__derived_enum_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

void sub_100218954(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = v3 + 8;
  if (!a3) {
    goto LABEL_12;
  }
  if (a3 != 1)
  {
LABEL_21:
    Swift::Int v40 = *(unsigned int *)(v5 + 20);
    if (a1 | a2)
    {
      uint64_t v41 = sub_100218D70();
      sub_100210AD0(v41, v42, v8, v40);
      if (v44)
      {
        v45._uint64_t countAndFlagsBits = sub_100218D70();
        int v43 = ByteBuffer._setStringSlowpath(_:at:)(v45, v40);
      }
      int v46 = *(_DWORD *)(v5 + 20);
      BOOL v23 = __CFADD__(v46, v43);
      int v47 = v46 + v43;
      if (!v23) {
        goto LABEL_30;
      }
      __break(1u);
    }
    uint64_t v48 = sub_100218D8C();
    sub_100210AD0(v48, v49, v8, v40);
    if (v51)
    {
      v52._uint64_t countAndFlagsBits = sub_100218D8C();
      int v50 = ByteBuffer._setStringSlowpath(_:at:)(v52, v40);
    }
    int v53 = *(_DWORD *)(v5 + 20);
    BOOL v23 = __CFADD__(v53, v50);
    int v47 = v53 + v50;
    if (!v23)
    {
LABEL_30:
      *(_DWORD *)(v5 + 20) = v47;
      return;
    }
LABEL_35:
    __break(1u);
    return;
  }
  Swift::Int v9 = *(unsigned int *)(v5 + 20);
  uint64_t v10 = sub_100218DBC();
  Swift::Int v11 = 0;
  sub_100210AD0(v10, v12, v8, v9);
  if (v14)
  {
    v15._uint64_t countAndFlagsBits = sub_100218DBC();
    Swift::Int v13 = ByteBuffer._setStringSlowpath(_:at:)(v15, v9);
  }
  Swift::Int v16 = v13;
  int v17 = *(_DWORD *)(v5 + 20);
  Swift::Int v18 = (v17 + v13);
  if (__CFADD__(v17, v13))
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_DWORD *)(v5 + 20) = v18;
  swift_bridgeObjectRetain();
  sub_100218DFC();
  uint64_t v19 = sub_100218DD0();
  sub_1002173AC(v19, v20, 1u);
  if (v4)
  {
    v21._uint64_t countAndFlagsBits = a1;
    v21._object = (void *)a2;
    Swift::Int v11 = ByteBuffer._setStringSlowpath(_:at:)(v21, v18);
  }
  int v22 = *(_DWORD *)(v5 + 20);
  BOOL v23 = __CFADD__(v22, v11);
  int v24 = v22 + v11;
  if (v23) {
    goto LABEL_32;
  }
  *(_DWORD *)(v5 + 20) = v24;
  if (!__OFADD__(v16, v11)) {
    return;
  }
  __break(1u);
LABEL_12:
  Swift::Int v25 = *(unsigned int *)(v5 + 20);
  uint64_t v26 = sub_100218DA4();
  Swift::Int v27 = 0;
  sub_100210AD0(v26, v28, v8, v25);
  if (v30)
  {
    v31._uint64_t countAndFlagsBits = sub_100218DA4();
    Swift::Int v29 = ByteBuffer._setStringSlowpath(_:at:)(v31, v25);
  }
  Swift::Int v32 = v29;
  int v33 = *(_DWORD *)(v5 + 20);
  Swift::Int v34 = (v33 + v29);
  if (__CFADD__(v33, v29)) {
    goto LABEL_33;
  }
  *(_DWORD *)(v5 + 20) = v34;
  swift_bridgeObjectRetain();
  sub_100218DFC();
  uint64_t v35 = sub_100218DD0();
  sub_1002173AC(v35, v36, 0);
  if (v4)
  {
    v37._uint64_t countAndFlagsBits = a1;
    v37._object = (void *)a2;
    Swift::Int v27 = ByteBuffer._setStringSlowpath(_:at:)(v37, v34);
  }
  int v38 = *(_DWORD *)(v5 + 20);
  BOOL v23 = __CFADD__(v38, v27);
  int v39 = v38 + v27;
  if (v23) {
    goto LABEL_34;
  }
  *(_DWORD *)(v5 + 20) = v39;
  if (__OFADD__(v32, v27))
  {
    __break(1u);
    goto LABEL_21;
  }
}

unint64_t sub_100218B4C()
{
  unint64_t result = qword_100710498;
  if (!qword_100710498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710498);
  }
  return result;
}

uint64_t destroy for Access(uint64_t a1)
{
  return sub_1002173AC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12NIOIMAPCore26AccessOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100217C58(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Access(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_100217C58(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1002173AC(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for SectionSpecifier(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Access(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1002173AC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Access(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Access(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100218D30(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100218D48(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Access()
{
  return &type metadata for Access;
}

uint64_t sub_100218D70()
{
  return 0x756F6D796E6F6E61;
}

uint64_t sub_100218D8C()
{
  return 0x7265737568747561;
}

uint64_t sub_100218DA4()
{
  return 0x2B74696D627573;
}

uint64_t sub_100218DBC()
{
  return 0x2B72657375;
}

uint64_t sub_100218DD0()
{
  return v0;
}

uint64_t sub_100218DE4()
{
  return sub_1005E1DB0();
}

void sub_100218DFC()
{
  sub_100210AD0(v2, v1, v0, v3);
}

uint64_t IndexingStatistics.totalMessages.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t Flags.iCloudCleanup.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t Flags.iCloudCleanup.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

NIOIMAPCore2::AppendData __swiftcall AppendData.init(byteCount:withoutContentTransferEncoding:)(Swift::Int byteCount, Swift::Bool withoutContentTransferEncoding)
{
  Swift::Bool v2 = withoutContentTransferEncoding;
  result.byteCount = byteCount;
  result.withoutContentTransferEncoding = v2;
  return result;
}

void AppendData.hash(into:)(uint64_t a1, Swift::UInt a2, char a3)
{
}

uint64_t static AppendData.__derived_struct_equals(_:_:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (a1 == a3) & (a2 ^ a4 ^ 1u);
}

Swift::Int AppendData.hashValue.getter(Swift::UInt a1, char a2)
{
  return sub_1005E3470();
}

Swift::Int sub_100218EE8()
{
  return AppendData.hashValue.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_100218EF4(uint64_t a1)
{
  AppendData.hash(into:)(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_100218F00()
{
  Swift::UInt v1 = *(void *)v0;
  Swift::UInt8 v2 = *(unsigned char *)(v0 + 8);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3420(v2);
  return sub_1005E3470();
}

unint64_t sub_100218F60()
{
  unint64_t result = qword_1007104A0;
  if (!qword_1007104A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007104A0);
  }
  return result;
}

uint64_t sub_100218FAC(uint64_t a1, uint64_t a2)
{
  return static AppendData.__derived_struct_equals(_:_:)(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8));
}

uint64_t initializeWithTake for SectionSpecifier.Kind(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AppendData(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AppendData()
{
  return &type metadata for AppendData;
}

void sub_100219038(uint64_t a1, char a2)
{
  unint64_t v5 = *(unsigned int *)(v2 + 1) | ((unint64_t)*(unsigned __int8 *)(v2 + 5) << 32);
  if ((v5 & 0x8000000000) != 0) {
    goto LABEL_25;
  }
  if ((a2 & 1) == 0)
  {
LABEL_9:
    if ((v5 & 0x10000) == 0)
    {
      sub_1002192C0();
      v13._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_10021930C(v13);
      swift_bridgeObjectRelease();
      sub_1002192CC();
      sub_100219288();
      sub_100219244();
      sub_1002192A4();
      if (v4) {
        int v3 = sub_100219268();
      }
      swift_bridgeObjectRelease();
      int v7 = *(_DWORD *)(v2 + 20);
      uint64_t v6 = (v7 + v3);
      if (!__CFADD__(v7, v3))
      {
LABEL_13:
        *(_DWORD *)(v2 + 20) = v6;
        sub_100210E34(v6);
        return;
      }
      __break(1u);
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  if ((*(_DWORD *)(v2 + 1) & 0x10000) == 0)
  {
    sub_1002192C0();
    v12._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_10021930C(v12);
    swift_bridgeObjectRelease();
    sub_1002192CC();
    sub_100219288();
    sub_100219244();
    sub_1002192A4();
    if (v4) {
      int v3 = sub_100219268();
    }
    swift_bridgeObjectRelease();
    LODWORD(v5) = *(_DWORD *)(v2 + 20);
    uint64_t v6 = (v5 + v3);
    if (!__CFADD__(v5, v3)) {
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_9;
  }
  sub_1002192C0();
  v14._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_10021930C(v14);
  swift_bridgeObjectRelease();
  sub_1002192EC();
  sub_100219288();
  sub_100219244();
  sub_1002192A4();
  if (v4) {
    int v3 = sub_100219268();
  }
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(v2 + 20);
  BOOL v9 = __CFADD__(v8, v3);
  int v10 = v8 + v3;
  if (!v9) {
    goto LABEL_22;
  }
  __break(1u);
LABEL_19:
  sub_1002192C0();
  v15._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_10021930C(v15);
  swift_bridgeObjectRelease();
  sub_1002192EC();
  sub_100219288();
  sub_100219244();
  sub_1002192A4();
  if (v4) {
    int v3 = sub_100219268();
  }
  swift_bridgeObjectRelease();
  int v11 = *(_DWORD *)(v2 + 20);
  BOOL v9 = __CFADD__(v11, v3);
  int v10 = v11 + v3;
  if (!v9)
  {
LABEL_22:
    *(_DWORD *)(v2 + 20) = v10;
    return;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_100219244()
{
  sub_100210AD0(v0, v2, v1, v3);
}

Swift::Int sub_100219268()
{
  uint64_t v4 = v0;
  uint64_t v5 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v2);
}

uint64_t sub_100219288()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002192A4()
{
  return swift_bridgeObjectRelease();
}

void sub_1002192CC()
{
  v1._uint64_t countAndFlagsBits = 658813;
  v1._object = (void *)0xE300000000000000;
  sub_1005E1E30(v1);
}

void sub_1002192EC()
{
  v1._uint64_t countAndFlagsBits = 168656171;
  v1._object = (void *)0xE400000000000000;
  sub_1005E1E30(v1);
}

void sub_10021930C(Swift::String a1)
{
  sub_1005E1E30(a1);
}

uint64_t AppendMessage.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  char v4 = *((unsigned char *)v1 + 16);
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

__n128 AppendMessage.options.setter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

uint64_t MailboxStatus.unseenCount.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t AppendMessage.data.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2;
  return result;
}

Swift::UInt32 (__swiftcall *DownloadRequest.qos.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

__n128 AppendMessage.init(options:data:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unsigned __int8 a3@<W2>, __n128 *a4@<X8>)
{
  unint64_t v4 = a1->n128_u64[1];
  unsigned __int8 v5 = a1[1].n128_u8[0];
  unint64_t v6 = a1[1].n128_u64[1];
  a4->n128_u64[0] = a1->n128_u64[0];
  a4->n128_u64[1] = v4;
  a4[1].n128_u8[0] = v5 & 1;
  a4[1].n128_u64[1] = v6;
  __n128 result = a1[2];
  a4[2] = result;
  a4[3].n128_u64[0] = a2;
  a4[3].n128_u8[8] = a3;
  return result;
}

void AppendMessage.hash(into:)(uint64_t a1)
{
  *(_OWORD *)unint64_t v4 = *((_OWORD *)v1 + 1);
  *(_OWORD *)&v4[16] = *((_OWORD *)v1 + 2);
  uint64_t v9 = *v1;
  long long v6 = *(_OWORD *)&v4[8];
  sub_1001F39D8((uint64_t)&v6, (uint64_t)v8, &qword_1007104A8);
  uint64_t v7 = *((void *)&v6 + 1);
  uint64_t v5 = *(void *)&v4[24];
  sub_10002292C((uint64_t)&v9);
  sub_1000811BC((uint64_t)v8);
  sub_1000811BC((uint64_t)&v7);
  sub_1000811BC((uint64_t)&v5);
  AppendOptions.hash(into:)(a1);
  sub_10001D550((uint64_t)&v9);
  sub_1000811E8((uint64_t)v8);
  sub_1000811E8((uint64_t)&v7);
  sub_1000811E8((uint64_t)&v5);
  char v3 = *((unsigned char *)v1 + 56);
  sub_1005E3410(v1[6]);
  sub_1005E3420(v3 & 1);
}

uint64_t static AppendMessage.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if ((sub_100221A00(*(void *)a1, *(void *)a2, (uint64_t (*)(uint64_t, uint64_t))&String.uppercased()) & 1) == 0) {
    return 0;
  }
  if (v5)
  {
    if (v7) {
      goto LABEL_7;
    }
    return 0;
  }
  uint64_t result = 0;
  if ((v7 & 1) == 0 && v4 == v6)
  {
LABEL_7:
    sub_100221B3C();
    if (v9)
    {
      sub_100222F7C();
      if ((v10 & 1) != 0
        && *(void *)(a1 + 48) == *(void *)(a2 + 48)
        && (*(unsigned char *)(a1 + 56) & 1) == (*(unsigned char *)(a2 + 56) & 1))
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

Swift::Int AppendMessage.hashValue.getter()
{
  sub_1005E33F0();
  AppendMessage.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_100219674()
{
  sub_1005E33F0();
  AppendMessage.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::UInt32 _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return variable initialization expression of Engine.isProcessingUpdates();
  }
  if (!v2 || a1 == a2) {
    return CredentialsRequestID.init()().underlying;
  }
  if (a1[4] != a2[4]) {
    return variable initialization expression of Engine.isProcessingUpdates();
  }
  char v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    Swift::UInt32 result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

void sub_100219718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FE5B4();
  a19 = v22;
  a20 = v23;
  sub_100224784();
  uint64_t v24 = type metadata accessor for SearchReturnData() - 8;
  __chkstk_darwin(v24);
  sub_100224A44();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  Swift::String v31 = (char *)&a9 - v30;
  uint64_t v32 = *(void *)(v21 + 16);
  if (v32 == *(void *)(v20 + 16) && v32 && v21 != v20)
  {
    unint64_t v33 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v34 = *(void *)(v29 + 72);
    uint64_t v35 = v32 - 1;
    do
    {
      sub_100223BB0();
      sub_100223BB0();
      char v36 = static SearchReturnData.__derived_enum_equals(_:_:)((uint64_t)v31, v27);
      sub_100223BFC(v27, (void (*)(void))type metadata accessor for SearchReturnData);
      sub_100223BFC((uint64_t)v31, (void (*)(void))type metadata accessor for SearchReturnData);
      BOOL v38 = v35-- != 0;
      if ((v36 & 1) == 0) {
        break;
      }
      v33 += v34;
    }
    while (v38);
  }
  sub_1001FE57C();
}

void sub_100219898()
{
  sub_100224250();
  if (v3)
  {
    if (v2)
    {
      sub_100224518();
      if (!v3)
      {
        BOOL v3 = v0[4] == v1[4] && v0[5] == v1[5];
        if (v3 || (sub_1005E3290(), sub_100224874(), (v4 & 1) != 0))
        {
          if (v2 != 1)
          {
            uint64_t v5 = v1 + 7;
            uint64_t v6 = v0 + 7;
            do
            {
              BOOL v7 = *(v6 - 1) == *(v5 - 1) && *v6 == *v5;
              if (!v7 && (sub_1005E3290() & 1) == 0) {
                break;
              }
              sub_100224D3C();
            }
            while (!v3);
          }
        }
      }
    }
  }
}

uint64_t sub_100219948()
{
  sub_1002245D0();
  if (!v11) {
    return 0;
  }
  if (v0 && v3 != v4)
  {
    sub_100224D1C();
    while (2)
    {
      uint64_t v5 = *((void *)v1 - 1);
      unsigned int v7 = *v1;
      v1 += 16;
      uint64_t v6 = v7;
      uint64_t v8 = *((void *)v2 - 1);
      int v10 = *v2;
      v2 += 16;
      int v9 = v10;
      switch(v6)
      {
        case 1:
          if (v9 != 1) {
            return 0;
          }
          goto LABEL_12;
        case 2:
          if (v9 == 2) {
            goto LABEL_12;
          }
          return 0;
        case 3:
          switch(v5)
          {
            case 1:
              if (v9 != 3 || v8 != 1) {
                return 0;
              }
              goto LABEL_13;
            case 2:
              if (v9 != 3 || v8 != 2) {
                return 0;
              }
              goto LABEL_13;
            case 3:
              if (v9 != 3 || v8 != 3) {
                return 0;
              }
              goto LABEL_13;
            case 4:
              if (v9 != 3 || v8 != 4) {
                return 0;
              }
              goto LABEL_13;
            default:
              BOOL v11 = v9 == 3 && v8 == 0;
              if (!v11) {
                return 0;
              }
              goto LABEL_13;
          }
        default:
          if (v9) {
            return 0;
          }
LABEL_12:
          if ((_s12NIOIMAPCore29MailboxesV23__derived_struct_equalsySbAC_ACtFZ_0(v5, v8) & 1) == 0) {
            return 0;
          }
LABEL_13:
          if (!--v0) {
            return 1;
          }
          continue;
      }
    }
  }
  return 1;
}

uint64_t _s12NIOIMAPCore29MailboxesV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return variable initialization expression of Engine.isProcessingUpdates();
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t result = 1;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v4 + 16 * v3);
      uint64_t v7 = a2 + 32 + 16 * v3;
      if ((*((unsigned int *)v6 + 2) | ((unint64_t)*((unsigned int *)v6 + 2) << 32)) != (*(unsigned int *)(v7 + 8) | ((unint64_t)*(unsigned int *)(v7 + 8) << 32))) {
        break;
      }
      uint64_t v8 = *v6;
      uint64_t v9 = *(void *)v7;
      uint64_t v10 = *(void *)(v8 + 16);
      if (v10 != *(void *)(v9 + 16)) {
        break;
      }
      if (v10) {
        BOOL v11 = v8 == v9;
      }
      else {
        BOOL v11 = 1;
      }
      if (!v11)
      {
        if (*(unsigned __int8 *)(v8 + 32) != *(unsigned __int8 *)(v9 + 32)) {
          return variable initialization expression of Engine.isProcessingUpdates();
        }
        Swift::String v12 = (unsigned __int8 *)(v8 + 33);
        Swift::String v13 = (unsigned __int8 *)(v9 + 33);
        for (uint64_t i = v10 - 1; i; --i)
        {
          int v16 = *v12++;
          int v15 = v16;
          int v17 = *v13++;
          if (v15 != v17) {
            return variable initialization expression of Engine.isProcessingUpdates();
          }
        }
      }
      if (++v3 == v2) {
        return result;
      }
    }
    return variable initialization expression of Engine.isProcessingUpdates();
  }
  return 1;
}

void sub_100219B48()
{
  sub_1001FE5B4();
  sub_100224784();
  uint64_t v5 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_100224260();
  uint64_t v7 = sub_10000566C(&qword_10070FE28);
  uint64_t v8 = sub_100224550(v7);
  __chkstk_darwin(v8);
  sub_100224910(v9, v44);
  uint64_t v51 = sub_10000566C(&qword_1007104B8);
  sub_1001F3BBC();
  __chkstk_darwin(v10);
  sub_100208054();
  uint64_t v12 = v11;
  uint64_t v50 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v13);
  sub_10022492C(v14, v44);
  uint64_t v55 = sub_10000566C(&qword_100710500);
  sub_1001F3BBC();
  __chkstk_darwin(v15);
  sub_10022420C();
  type metadata accessor for SearchReturnOption();
  sub_10022417C();
  __chkstk_darwin(v16);
  int v53 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100224320();
  __chkstk_darwin(v18);
  sub_100224380();
  __chkstk_darwin(v19);
  sub_100224750();
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v56 = v0;
  uint64_t v57 = v1;
  uint64_t v25 = *(void *)(v1 + 16);
  if (v25 != *(void *)(v0 + 16) || !v25 || v57 == v56) {
    goto LABEL_49;
  }
  uint64_t v47 = v5;
  uint64_t v48 = v22;
  uint64_t v46 = v4;
  unint64_t v26 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v54 = *(void *)(v21 + 72);
  uint64_t v27 = v12;
  uint64_t v28 = v52;
  while (2)
  {
    sub_100223BB0();
    sub_100223BB0();
    uint64_t v29 = v3 + *(int *)(v55 + 48);
    sub_100223BB0();
    sub_100223BB0();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v33 = v53;
        sub_100223BB0();
        if (sub_100224794() != 1)
        {
          sub_1001F3A28((uint64_t)v33, &qword_10070FE48);
LABEL_43:
          sub_1001F3A28(v3, &qword_100710500);
          goto LABEL_48;
        }
        sub_1001F39D8(v29, (uint64_t)v28, &qword_10070FE48);
        BOOL v34 = *v33 == *v28 && v33[1] == v28[1];
        if (!v34 && (sub_1005E3290() & 1) == 0) {
          goto LABEL_46;
        }
        uint64_t v35 = *(int *)(v50 + 52);
        uint64_t v36 = (uint64_t)v33 + v35;
        uint64_t v37 = (uint64_t)v28 + v35;
        uint64_t v38 = v27 + *(int *)(v51 + 48);
        uint64_t v39 = v27;
        sub_100223AC8(v36, v27, &qword_10070FE28);
        sub_100223AC8(v37, v38, &qword_10070FE28);
        uint64_t v40 = v47;
        sub_100207FC4(v27, 1, v47);
        if (v34)
        {
          sub_100207FC4(v38, 1, v40);
          uint64_t v28 = v52;
          if (v34)
          {
            sub_1001F3A28(v27, &qword_10070FE28);
            unint64_t v33 = v53;
LABEL_39:
            sub_1001F3A28((uint64_t)v28, &qword_10070FE48);
            sub_1001F3A28((uint64_t)v33, &qword_10070FE48);
            goto LABEL_40;
          }
          goto LABEL_45;
        }
        uint64_t v41 = v49;
        sub_100223AC8(v39, v49, &qword_10070FE28);
        sub_100207FC4(v38, 1, v40);
        if (v42)
        {
          sub_100223BFC(v41, (void (*)(void))type metadata accessor for ParameterValue);
          uint64_t v27 = v39;
          uint64_t v28 = v52;
LABEL_45:
          sub_1001F3A28(v27, &qword_1007104B8);
          unint64_t v33 = v53;
          goto LABEL_46;
        }
        uint64_t v43 = v46;
        sub_100223B64();
        int v45 = static ParameterValue.__derived_enum_equals(_:_:)(v41, v43);
        sub_100223BFC(v43, (void (*)(void))type metadata accessor for ParameterValue);
        sub_100223BFC(v41, (void (*)(void))type metadata accessor for ParameterValue);
        sub_1001F3A28(v39, &qword_10070FE28);
        uint64_t v27 = v39;
        uint64_t v28 = v52;
        unint64_t v33 = v53;
        if (v45) {
          goto LABEL_39;
        }
LABEL_46:
        sub_1001F3A28((uint64_t)v28, &qword_10070FE48);
        sub_1001F3A28((uint64_t)v33, &qword_10070FE48);
LABEL_47:
        sub_100223BFC(v3, (void (*)(void))type metadata accessor for SearchReturnOption);
LABEL_48:
        sub_100223BFC(v2, (void (*)(void))type metadata accessor for SearchReturnOption);
        sub_100223BFC((uint64_t)v24, (void (*)(void))type metadata accessor for SearchReturnOption);
LABEL_49:
        sub_1001FE57C();
        return;
      case 2u:
        if (sub_100224794() != 2) {
          goto LABEL_43;
        }
        goto LABEL_40;
      case 3u:
        if (sub_100224794() != 3) {
          goto LABEL_43;
        }
        goto LABEL_40;
      case 4u:
        if (sub_100224794() != 4) {
          goto LABEL_43;
        }
        goto LABEL_40;
      case 5u:
        if (sub_100224794() != 5) {
          goto LABEL_43;
        }
        goto LABEL_40;
      case 6u:
        if (sub_100224794() != 6) {
          goto LABEL_43;
        }
        goto LABEL_40;
      default:
        uint64_t v30 = (uint64_t *)v48;
        sub_100223BB0();
        uint64_t v31 = *v30;
        if (sub_100224794()) {
          goto LABEL_43;
        }
        char v32 = *(unsigned char *)(v29 + 8);
        if (*(unsigned char *)(v48 + 8))
        {
          if (*(void *)v29 != v31) {
            char v32 = 0;
          }
          if ((v32 & 1) == 0) {
            goto LABEL_47;
          }
        }
        else
        {
          if (*(void *)v29 != v31) {
            char v32 = 1;
          }
          if (v32) {
            goto LABEL_47;
          }
        }
LABEL_40:
        sub_100223BFC(v3, (void (*)(void))type metadata accessor for SearchReturnOption);
        sub_100223BFC(v2, (void (*)(void))type metadata accessor for SearchReturnOption);
        sub_100223BFC((uint64_t)v24, (void (*)(void))type metadata accessor for SearchReturnOption);
        v26 += v54;
        if (!--v25) {
          goto LABEL_49;
        }
        continue;
    }
  }
}

void sub_10021A1B4()
{
  sub_100224634();
  sub_1002245D0();
  if (v12)
  {
    if (v0)
    {
      if (v1 != v2)
      {
        unsigned int v4 = *(_DWORD *)(v1 + 40);
        unsigned int v3 = *(_DWORD *)(v1 + 44);
        unsigned int v5 = *(_DWORD *)(v2 + 40);
        if (v3 - v4 == *(_DWORD *)(v2 + 44) - v5)
        {
          int v6 = *(unsigned __int16 *)(v1 + 52);
          int v25 = *(_DWORD *)(v1 + 48);
          int v26 = *(unsigned __int8 *)(v1 + 54);
          uint64_t v23 = v1;
          uint64_t v24 = v2;
          uint64_t v7 = *(void *)(v1 + 32);
          int v27 = *(unsigned __int8 *)(v2 + 54);
          int v8 = *(unsigned __int16 *)(v2 + 52);
          int v9 = *(_DWORD *)(v2 + 48);
          uint64_t v10 = *(void *)(v2 + 32);
          swift_retain();
          swift_retain();
          for (uint64_t i = 0; ; i += 24)
          {
            --v0;
            BOOL v12 = v25 == v9 && v6 == v8;
            BOOL v13 = v12 && v26 == v27;
            if (v13 && v7 == v10)
            {
              swift_release_n();
            }
            else
            {
              uint64_t v15 = v0;
              uint64_t v16 = v3;
              sub_1001F969C();
              sub_100224714();
              uint64_t v18 = (const void *)(v17 + v4);
              size_t v19 = v16 - v4;
              uint64_t v0 = v15;
              sub_1001F969C();
              sub_100224714();
              LODWORD(v18) = memcmp(v18, (const void *)(v20 + v5), v19);
              swift_release();
              swift_release();
              if (v18) {
                break;
              }
            }
            if (!v0) {
              break;
            }
            uint64_t v21 = v23 + i;
            unsigned int v4 = *(_DWORD *)(v23 + i + 64);
            unsigned int v3 = *(_DWORD *)(v23 + i + 68);
            uint64_t v22 = v24 + i;
            unsigned int v5 = *(_DWORD *)(v24 + i + 64);
            if (v3 - v4 != *(_DWORD *)(v24 + i + 68) - v5) {
              break;
            }
            int v6 = *(unsigned __int16 *)(v21 + 76);
            int v25 = *(_DWORD *)(v21 + 72);
            int v26 = *(unsigned __int8 *)(v21 + 78);
            uint64_t v7 = *(void *)(v21 + 56);
            int v27 = *(unsigned __int8 *)(v22 + 78);
            int v8 = *(unsigned __int16 *)(v22 + 76);
            int v9 = *(_DWORD *)(v22 + 72);
            uint64_t v10 = *(void *)(v22 + 56);
            swift_retain();
            swift_retain();
          }
        }
      }
    }
  }
  sub_1002246F8();
}

void sub_10021A368()
{
  sub_1001FE5B4();
  uint64_t v91 = *(void *)(v0 + 16);
  if (v91 != *(void *)(v1 + 16) || !v91 || v0 == v1) {
    goto LABEL_119;
  }
  uint64_t v2 = (uint64_t *)(v0 + 32);
  unsigned int v3 = (uint64_t *)(v1 + 32);
  while (1)
  {
    uint64_t v4 = *v2;
    uint64_t v6 = *v3++;
    uint64_t v5 = v6;
    int64_t v86 = v2 + 1;
    if (*v2 < 0)
    {
      if ((v5 & 0x8000000000000000) == 0) {
        goto LABEL_119;
      }
      uint64_t v80 = v3;
      uint64_t v24 = v4 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v26 = *(unsigned int *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v25 = *(unsigned int *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x1C);
      uint64_t v27 = v5 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v28 = *(unsigned int *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      if (v25 - v26 != *(_DWORD *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + 0x1C) - v28) {
        goto LABEL_119;
      }
      uint64_t v29 = *(void *)(v24 + 16);
      uint64_t v30 = *(unsigned __int16 *)(v24 + 36);
      uint64_t v31 = *(unsigned __int8 *)(v24 + 38);
      uint64_t v85 = *(void *)(v24 + 40);
      int v73 = *(unsigned __int8 *)(v24 + 62);
      int v71 = *(unsigned __int16 *)(v24 + 60);
      uint64_t v74 = *(unsigned int *)(v24 + 56);
      unint64_t v76 = *(void *)(v24 + 48);
      uint64_t v90 = *(void *)(v24 + 64);
      uint64_t v32 = *(unsigned __int16 *)(v27 + 36);
      uint64_t v33 = *(unsigned __int8 *)(v27 + 38);
      uint64_t v78 = *(void *)(v27 + 48);
      int v70 = *(unsigned __int8 *)(v27 + 62);
      int v68 = *(unsigned __int16 *)(v27 + 60);
      uint64_t v67 = *(unsigned int *)(v27 + 56);
      BOOL v35 = *(_DWORD *)(v24 + 32) == *(_DWORD *)(v27 + 32) && v30 == v32 && v31 == v33;
      uint64_t v88 = *(void *)(v27 + 16);
      BOOL v36 = v35 && v29 == *(void *)(v27 + 16);
      uint64_t v83 = *(void *)(v27 + 64);
      if (v36)
      {
        uint64_t v39 = *(void *)(v27 + 40);
        swift_retain();
        uint64_t v40 = v83;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain_n();
        uint64_t v41 = v85;
        swift_retain();
        swift_bridgeObjectRetain();
        if (v85)
        {
LABEL_34:
          if (!v39) {
            goto LABEL_112;
          }
          if (HIDWORD(v76) - v76 != HIDWORD(v78) - v78)
          {
LABEL_110:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_117;
          }
          unint64_t v42 = v74 | ((unint64_t)(v71 | (v73 << 16)) << 32);
          unint64_t v43 = v67 | ((unint64_t)(v68 | (v70 << 16)) << 32);
          uint64_t v44 = BYTE6(v42);
          uint64_t v45 = HIDWORD(v42) & 0xFFFFFF;
          uint64_t v46 = HIDWORD(v43) & 0xFFFFFF;
          uint64_t v47 = BYTE6(v43);
          if (v74 != v67
            || (WORD2(v42) == WORD2(v43) ? (BOOL v48 = BYTE6(v42) == BYTE6(v43)) : (BOOL v48 = 0),
                v48 ? (BOOL v49 = v41 == v39) : (BOOL v49 = 0),
                !v49))
          {
            sub_1001F969C();
            uint64_t v50 = (const void *)(*(void *)(v41 + 24)
                               + (v44 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v45 << 8))
                               + v76);
            sub_1001F969C();
            if (memcmp(v50, (const void *)(*(void *)(v39 + 24)+ (v47 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v46 << 8))+ v78), HIDWORD(v76) - v76))
            {
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_118;
            }
          }
          goto LABEL_101;
        }
      }
      else
      {
        uint64_t v66 = *(void *)(v27 + 40);
        sub_1001F969C();
        uint64_t v37 = (const void *)(*(void *)(v29 + 24) + (v31 | (v30 << 8)) + v26);
        sub_1001F969C();
        uint64_t v38 = (const void *)(*(void *)(v88 + 24) + (v33 | (v32 << 8)) + v28);
        uint64_t v39 = v66;
        swift_retain();
        uint64_t v40 = v83;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v41 = v85;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (memcmp(v37, v38, v25 - v26)) {
          goto LABEL_110;
        }
        if (v85) {
          goto LABEL_34;
        }
      }
      if (v39)
      {
LABEL_112:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_118;
      }
LABEL_101:
      char v62 = sub_10021A368(v90, v40);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v2 = v86;
      unsigned int v3 = v80;
      if ((v62 & 1) == 0) {
        goto LABEL_119;
      }
      goto LABEL_105;
    }
    if (v5 < 0) {
      goto LABEL_119;
    }
    uint64_t v7 = *(void *)(v4 + 16);
    uint64_t v8 = *(void *)(v4 + 40);
    uint64_t v72 = *(void *)(v4 + 48);
    unsigned __int16 v9 = *(unsigned __int8 *)(v4 + 62);
    unint64_t v10 = *(unsigned __int16 *)(v4 + 60);
    LODWORD(v11) = *(_DWORD *)(v4 + 56);
    uint64_t v89 = *(void *)(v4 + 64);
    uint64_t v69 = *(void *)(v4 + 72);
    uint64_t v12 = *(void *)(v5 + 16);
    unint64_t v13 = *(void *)(v5 + 40);
    uint64_t v81 = v8;
    uint64_t v82 = *(void *)(v5 + 64);
    unint64_t v87 = v13;
    uint64_t v75 = v12;
    uint64_t v84 = *(void *)(v4 + 88);
    uint64_t v77 = *(void *)(v5 + 88);
    if (!v7)
    {
      if (v12)
      {
LABEL_108:
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        goto LABEL_116;
      }
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_48;
    }
    if (!v12) {
      goto LABEL_108;
    }
    unint64_t v14 = *(void *)(v4 + 24);
    uint64_t v15 = *(void *)(v5 + 24);
    if (HIDWORD(v14) - v14 != HIDWORD(v15) - v15)
    {
      swift_retain();
      swift_retain();
      goto LABEL_117;
    }
    unsigned __int16 v64 = *(unsigned __int8 *)(v4 + 62);
    int v65 = *(_DWORD *)(v4 + 56);
    uint64_t v79 = v3;
    unint64_t v16 = *(unsigned int *)(v4 + 32) | ((unint64_t)(*(unsigned __int16 *)(v4 + 36) | (*(unsigned __int8 *)(v4 + 38) << 16)) << 32);
    uint64_t v17 = *(unsigned int *)(v5 + 32);
    unint64_t v18 = v17 | ((unint64_t)(*(unsigned __int16 *)(v5 + 36) | (*(unsigned __int8 *)(v5 + 38) << 16)) << 32);
    uint64_t v19 = BYTE6(v16);
    uint64_t v20 = HIDWORD(v16) & 0xFFFFFF;
    uint64_t v11 = HIDWORD(v18) & 0xFFFFFF;
    uint64_t v21 = BYTE6(v18);
    if (*(_DWORD *)(v4 + 32) == v17)
    {
      BOOL v22 = *(unsigned __int16 *)(v4 + 36) == WORD2(v18) && BYTE6(v16) == BYTE6(v18);
      if (v22 && v7 == v12)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain_n();
        unsigned int v3 = v79;
        uint64_t v8 = v81;
        unint64_t v13 = v87;
        LOWORD(v11) = v65;
        unsigned __int16 v9 = v64;
        unint64_t v10 = v10;
LABEL_48:
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v51 = v82;
        swift_retain();
        goto LABEL_50;
      }
    }
    sub_1001F969C();
    Swift::String v52 = (const void *)(*(void *)(v7 + 24)
                       + (v19 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v20 << 8))
                       + v14);
    sub_1001F969C();
    unint64_t v53 = *(void *)(v75 + 24)
        + (v21 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v11 << 8))
        + v15;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v8 = v81;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v51 = v82;
    swift_retain();
    uint64_t v54 = (const void *)v53;
    unint64_t v13 = v87;
    int v55 = memcmp(v52, v54, HIDWORD(v14) - v14);
    unsigned int v3 = v79;
    LOWORD(v11) = v65;
    unsigned __int16 v9 = v64;
    unint64_t v10 = v10;
    if (v55) {
      goto LABEL_115;
    }
LABEL_50:
    if (v8) {
      break;
    }
    if (v13) {
      goto LABEL_115;
    }
LABEL_66:
    if (v89)
    {
      if (!v51) {
        goto LABEL_113;
      }
      sub_100224450();
      if (!v22) {
        goto LABEL_113;
      }
      sub_100224304();
      if (!v22
        || (v9 == (unsigned __int16)v11 ? (BOOL v58 = v13 == v10) : (BOOL v58 = 0),
            v58 ? (BOOL v59 = v89 == v51) : (BOOL v59 = 0),
            !v59))
      {
        sub_1001F969C();
        unint64_t v13 = *(void *)(v89 + 24) + (v13 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)v9 << 8)) + v69;
        sub_1001F969C();
        unint64_t v10 = v10 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v11 << 8);
        if (sub_100224A28(*(void *)(v82 + 24) + v10))
        {
LABEL_113:
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_118;
        }
      }
    }
    else if (v51)
    {
      goto LABEL_113;
    }
    if (v84)
    {
      if (!v77) {
        goto LABEL_113;
      }
      sub_100224450();
      if (!v22) {
        goto LABEL_113;
      }
      sub_100224304();
      if (!v22
        || (v9 == (unsigned __int16)v11 ? (BOOL v60 = v13 == v10) : (BOOL v60 = 0),
            v60 ? (BOOL v61 = v84 == v77) : (BOOL v61 = 0),
            !v61))
      {
        sub_1001F969C();
        sub_1001F969C();
        int v63 = sub_100224A28(*(void *)(v77 + 24) + (v10 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v11 << 8)));
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (v63) {
          goto LABEL_118;
        }
        goto LABEL_104;
      }
      swift_release();
      swift_release();
    }
    else if (v77)
    {
      goto LABEL_113;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_104:
    swift_release();
    uint64_t v2 = v86;
LABEL_105:
    if (!--v91) {
      goto LABEL_119;
    }
  }
  if (v13)
  {
    sub_100224450();
    if (v22)
    {
      sub_100224304();
      if (v22)
      {
        BOOL v56 = v9 == (unsigned __int16)v11 && v13 == v10;
        if (v56 && v8 == v87) {
          goto LABEL_66;
        }
      }
      sub_1001F969C();
      unint64_t v13 = *(void *)(v8 + 24) + (v13 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)v9 << 8)) + v72;
      unsigned __int16 v9 = v87;
      sub_1001F969C();
      unint64_t v10 = v10 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v11 << 8);
      if (!sub_100224A28(*(void *)(v87 + 24) + v10)) {
        goto LABEL_66;
      }
    }
  }
LABEL_115:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
LABEL_116:
  swift_release();
LABEL_117:
  swift_release();
LABEL_118:
  swift_release();
LABEL_119:
  sub_1001FE57C();
}

void sub_10021AEB0()
{
  sub_1001F9760();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16) && v2 && v0 != v1)
  {
    unsigned int v3 = (unsigned char *)(v1 + 55);
    uint64_t v4 = (unsigned char *)(v0 + 55);
    do
    {
      uint64_t v5 = *(void *)(v4 - 23);
      unint64_t v6 = *(void *)(v4 - 15);
      unint64_t v7 = *(unsigned int *)(v4 - 7) | ((unint64_t)(*(unsigned __int16 *)(v4 - 3) | (*(v4 - 1) << 16)) << 32);
      uint64_t v8 = *(void *)(v3 - 23);
      if (*v4)
      {
        if ((*v3 & 1) == 0) {
          break;
        }
        uint64_t v9 = sub_100224BA8();
        sub_1001F33AC(v9, v10, v11, v12);
        uint64_t v13 = sub_100224CE0();
        sub_1001F33AC(v13, v14, v15, v16);
        char v17 = sub_10021AEB0(v5, v8);
        uint64_t v18 = sub_100224BA8();
        sub_1001F33B8(v18, v19, v20, v21);
        uint64_t v22 = sub_100224CE0();
        sub_1001F33B8(v22, v23, v24, v25);
        if ((v17 & 1) == 0) {
          break;
        }
      }
      else
      {
        if ((*v3 & 1) != 0
          || HIDWORD(v6) - v6 != HIDWORD(*(void *)(v3 - 15)) - *(void *)(v3 - 15))
        {
          break;
        }
        uint64_t v36 = *(void *)(v3 - 15);
        uint64_t v26 = BYTE6(v7);
        if (*(_DWORD *)(v4 - 7) != *(_DWORD *)(v3 - 7)
          || (*(unsigned __int16 *)(v4 - 3) == *(unsigned __int16 *)(v3 - 3)
            ? (BOOL v27 = BYTE6(v7) == (*(unsigned int *)(v3 - 7) | ((unint64_t)(*(unsigned __int16 *)(v3 - 3) | (*(v3 - 1) << 16)) << 32)) >> 48)
            : (BOOL v27 = 0),
              v27 ? (BOOL v28 = v5 == v8) : (BOOL v28 = 0),
              !v28))
        {
          sub_1002247AC();
          uint64_t v30 = v29;
          unsigned __int16 v35 = v31;
          unsigned __int16 v33 = v32;
          swift_beginAccess();
          BOOL v34 = (const void *)(*(void *)(v5 + 24)
                             + (v26 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)v33 << 8))
                             + v6);
          sub_1001F969C();
          if (memcmp(v34, (const void *)(*(void *)(v8 + 24)+ (v30 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)v35 << 8))+ v36), HIDWORD(v6) - v6))
          {
            break;
          }
        }
      }
      v3 += 24;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_1001F9814();
}

uint64_t sub_10021B04C(uint64_t a1, uint64_t a2)
{
  return sub_100221A00(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&String.lowercased());
}

void sub_10021B068()
{
  sub_1001FE5B4();
  sub_100224250();
  if (v9)
  {
    if (v0)
    {
      uint64_t v3 = v2;
      uint64_t v4 = v1;
      if (v1 != v2)
      {
        uint64_t v5 = *(void *)(v1 + 48);
        char v6 = *(unsigned char *)(v1 + 56);
        uint64_t v7 = *(void *)(v2 + 48);
        char v8 = *(unsigned char *)(v2 + 56);
        BOOL v9 = *(void *)(v1 + 32) == *(void *)(v2 + 32) && *(void *)(v1 + 40) == *(void *)(v2 + 40);
        if (v9 || (sub_1005E3290(), sub_100224874(), (v10 & 1) != 0))
        {
          uint64_t v11 = 0;
          unint64_t v12 = 1;
          if ((v6 & 1) == 0) {
            goto LABEL_13;
          }
LABEL_11:
          if (v8)
          {
            while (v0 != v12)
            {
              if (v12 >= v0)
              {
                __break(1u);
                return;
              }
              uint64_t v5 = *(void *)(v4 + v11 + 80);
              char v13 = *(unsigned char *)(v4 + v11 + 88);
              uint64_t v7 = *(void *)(v3 + v11 + 80);
              char v8 = *(unsigned char *)(v3 + v11 + 88);
              BOOL v14 = *(void *)(v4 + v11 + 64) == *(void *)(v3 + v11 + 64)
                 && *(void *)(v4 + v11 + 72) == *(void *)(v3 + v11 + 72);
              if (!v14 && (sub_1005E3290() & 1) == 0) {
                break;
              }
              v11 += 32;
              ++v12;
              if (v13) {
                goto LABEL_11;
              }
LABEL_13:
              if (v8 & 1 | (((v7 ^ v5) & 0xFFFFFFFFFFFFC000) != 0)) {
                break;
              }
            }
          }
        }
      }
    }
  }
  sub_1001FE57C();
}

uint64_t sub_10021B174()
{
  sub_100224250();
  if (!v8) {
    return 0;
  }
  if (!v2) {
    return 1;
  }
  sub_100224518();
  if (v8) {
    return 1;
  }
  uint64_t result = v0[4];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v7 = v1[6];
  uint64_t v6 = v1[7];
  BOOL v8 = result == v1[4] && v0[5] == v1[5];
  if (v8)
  {
    if (v5 != v7 || v4 != v6) {
      return 0;
    }
  }
  else
  {
    sub_1005E3290();
    uint64_t result = sub_100224874();
    if ((v9 & 1) == 0) {
      return result;
    }
    if (v5 != v7 || v4 != v6) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  unint64_t v12 = v1 + 11;
  char v13 = v0 + 11;
  unint64_t v14 = 1;
  while (v14 < v2)
  {
    uint64_t v16 = *(v13 - 1);
    uint64_t v15 = *v13;
    uint64_t v18 = *(v12 - 1);
    uint64_t v17 = *v12;
    if (*(v13 - 3) == *(v12 - 3) && *(v13 - 2) == *(v12 - 2))
    {
      if (v16 != v18 || v15 != v17) {
        return 0;
      }
    }
    else
    {
      sub_1005E3290();
      uint64_t result = sub_100224874();
      if ((v20 & 1) == 0) {
        return result;
      }
      if (v16 != v18 || v15 != v17) {
        return result;
      }
    }
    ++v14;
    v12 += 4;
    v13 += 4;
    uint64_t result = 1;
    if (v2 == v14) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10021B294(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  unint64_t v5 = a1[4];
  unint64_t v6 = a2[4];
  sub_1002238FC(v5);
  sub_1002238FC(v6);
  char v7 = static SearchKey.__derived_enum_equals(_:_:)(v5, v6);
  sub_1002239B4(v6);
  sub_1002239B4(v5);
  if ((v7 & 1) == 0) {
    return 0;
  }
  BOOL v8 = a1 + 5;
  char v9 = a2 + 5;
  uint64_t v10 = v2 - 1;
  do
  {
    BOOL v11 = v10 == 0;
    if (!v10) {
      break;
    }
    unint64_t v13 = *v8++;
    unint64_t v12 = v13;
    unint64_t v14 = *v9++;
    sub_1002238FC(v12);
    sub_1002238FC(v14);
    char v15 = static SearchKey.__derived_enum_equals(_:_:)(v12, v14);
    sub_1002239B4(v14);
    sub_1002239B4(v12);
    --v10;
  }
  while ((v15 & 1) != 0);
  return v11;
}

void sub_10021B394()
{
  sub_100224634();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16))
  {
    if (v2)
    {
      uint64_t v3 = v0;
      if (v0 != v1)
      {
        unsigned int v5 = *(_DWORD *)(v0 + 40);
        unsigned int v4 = *(_DWORD *)(v0 + 44);
        unsigned int v6 = *(_DWORD *)(v1 + 40);
        if (v4 - v5 == *(_DWORD *)(v1 + 44) - v6)
        {
          uint64_t v7 = 0;
          uint64_t v21 = v0;
          uint64_t v22 = v1;
          do
          {
            uint64_t v8 = *(unsigned __int8 *)(v3 + v7 + 54);
            uint64_t v9 = *(unsigned __int16 *)(v3 + v7 + 52);
            uint64_t v10 = *(void *)(v3 + v7 + 32);
            uint64_t v11 = *(unsigned __int8 *)(v1 + v7 + 54);
            uint64_t v12 = *(unsigned __int16 *)(v1 + v7 + 52);
            uint64_t v13 = *(void *)(v1 + v7 + 32);
            if (*(_DWORD *)(v3 + v7 + 48) != *(_DWORD *)(v1 + v7 + 48)
              || v9 != v12
              || v8 != v11
              || v10 != v13)
            {
              uint64_t v23 = v4;
              sub_1001F969C();
              uint64_t v17 = (const void *)(*(void *)(v10 + 24) + (v8 | (v9 << 8)) + v5);
              sub_1001F969C();
              int v18 = memcmp(v17, (const void *)(*(void *)(v13 + 24) + (v11 | (v12 << 8)) + v6), v23 - v5);
              uint64_t v3 = v21;
              uint64_t v1 = v22;
              if (v18) {
                break;
              }
            }
            if (!--v2) {
              break;
            }
            uint64_t v19 = v3 + v7;
            uint64_t v20 = v1 + v7;
            v7 += 24;
            unsigned int v5 = *(_DWORD *)(v19 + 64);
            unsigned int v4 = *(_DWORD *)(v19 + 68);
            unsigned int v6 = *(_DWORD *)(v20 + 64);
          }
          while (v4 - v5 == *(_DWORD *)(v20 + 68) - v6);
        }
      }
    }
  }
  sub_1002246F8();
}

uint64_t sub_10021B4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v6 && a1 != a2)
  {
    uint64_t v7 = a2 + 48;
    uint64_t v8 = a1 + 48;
    while (1)
    {
      uint64_t v9 = *(void *)(v8 + 16);
      uint64_t v10 = *(void *)(v7 + 16);
      switch((char)v9)
      {
        case -4:
          uint64_t result = 0;
          if ((~(_BYTE)v10 & 0xFE) != 0 && *(void *)(v7 + 16) == 252) {
            goto LABEL_54;
          }
          return result;
        case -3:
          uint64_t result = 0;
          if ((~(_BYTE)v10 & 0xFE) != 0 && *(void *)(v7 + 16) == 253) {
            goto LABEL_54;
          }
          return result;
        case -2:
          if (*(void *)(v7 + 16) != 254) {
            return 0;
          }
          goto LABEL_54;
        case -1:
          if ((_BYTE)v10 != 0xFF) {
            return 0;
          }
          goto LABEL_54;
        default:
          if ((v10 & 0xFC | 2) == 0xFE) {
            return 0;
          }
          sub_100224278();
          if ((v9 & 1) == 0)
          {
            if (v10) {
              return 0;
            }
            BOOL v25 = v20 == v24 && v4 == v3;
            if (v25) {
              goto LABEL_36;
            }
            uint64_t v105 = (uint64_t)v2;
            uint64_t v107 = v5;
            uint64_t v5 = v24;
            sub_100224228();
            sub_100224CCC();
            goto LABEL_35;
          }
          if ((v10 & 1) == 0) {
            return 0;
          }
          BOOL v26 = v20 == v24 && v4 == v3;
          uint64_t v107 = v5;
          if (!v26)
          {
            uint64_t v5 = v24;
            uint64_t v105 = (uint64_t)v2;
            sub_100224228();
            sub_100224828();
            if ((v12 & 1) == 0) {
              return 0;
            }
          }
          if (v23 != v2 || v5 != v15)
          {
            sub_100224418();
            sub_1002249DC();
LABEL_35:
            sub_100224CA4();
            if ((v12 & 1) == 0) {
              return 0;
            }
          }
LABEL_36:
          if (HIBYTE(v21) == 255)
          {
            if (HIBYTE(v22) != 255) {
              goto LABEL_56;
            }
          }
          else
          {
            if (HIBYTE(v22) == 255)
            {
LABEL_56:
              sub_100224198(v12, v13, v14, v15, v16, v17, v18, v19, v78, v80, v82, v85, v88, v91, v95, v98, v101, v103, v105,
                v107,
                v109,
                v111,
                v113,
                v115,
                v117,
                v119);
              return 0;
            }
            if ((v21 & 0x100000000000000) != 0)
            {
              if ((v22 & 0x100000000000000) == 0) {
                return 0;
              }
              uint64_t v92 = v24;
              sub_1002246D4();
              sub_100224C48();
              sub_10022389C(v40, v41, v42, v43, v44);
              sub_1002247BC();
              sub_1002249C0();
              sub_10022389C(v45, v46, v47, v48, v49);
              sub_1002242B0(v50, v51, v52, v53, v54, v55, v56, v57, (uint64_t)sub_1001F33C4, (uint64_t)sub_1001F3404, v82, (uint64_t)sub_1001F33C4, (uint64_t)sub_1001F3404, v92, v95, v98, v101, v103, v105,
                v107,
                v109,
                v111,
                v113,
                v115,
                v117,
                v119);
              sub_100224980(v58, v59, v60, v61, v62, v63, v64, v65, v79, v81, v83, v86, v89, v93, v96, v99, v102, v104, v106,
                v108,
                v110,
                v112,
                v114,
                v116,
                v118,
                v120,
                v121);
              uint64_t v2 = sub_1001F34D0;
              sub_10022389C(v94, v113, v105, v97, v10);
              uint64_t v74 = sub_100224AEC(v66, v67, v68, v69, v70, v71, v72, v73, (uint64_t)sub_1001F3480, (uint64_t)sub_1001F34D0, v84, v87, v90, v94, v97, v100);
              sub_10022389C(v74, v75, v76, v77, v9);
              if ((v88 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              if ((v22 & 0x100000000000000) != 0) {
                return 0;
              }
              sub_10022455C();
              if (!v25) {
                return 0;
              }
              if ((unint64_t v4 = HIDWORD(v30), v28 != v30)
                || v29 != WORD2(v30)
                || ((sub_100224C7C(), v25) ? (BOOL v31 = v111 == v109) : (BOOL v31 = 0), !v31))
              {
                sub_1002247DC();
                uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))((char *)v2 - v119);
                uint64_t v3 = v109;
                int v32 = sub_1001F969C();
                if (sub_1002245E0(v32, v33, v34, v35, v36, v37, v38, v39, v78, v80, v82, v85, v88, v91, v95, v98, v101, v103, v105,
                                     v107,
                                     v109,
                                     v111,
                                     v113,
                                     v115,
                                     v117))
                  return 0;
              }
            }
          }
LABEL_54:
          v7 += 64;
          v8 += 64;
          if (!--v6) {
            return 1;
          }
          break;
      }
    }
  }
  return 1;
}

void sub_10021B7F8()
{
  sub_1001FE5B4();
  uint64_t v77 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v8);
  sub_1001F40C0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10000566C(&qword_10070FE28);
  uint64_t v13 = sub_100224550(v12);
  __chkstk_darwin(v13);
  sub_100224490();
  uint64_t v14 = sub_10000566C(&qword_1007104B8);
  sub_1001F3BBC();
  __chkstk_darwin(v15);
  sub_100224A64();
  uint64_t v16 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v17);
  sub_100224260();
  uint64_t v18 = sub_10000566C(&qword_1007104C0);
  sub_1001F3BBC();
  __chkstk_darwin(v19);
  sub_1002248F4();
  type metadata accessor for CreateParameter();
  sub_10022417C();
  __chkstk_darwin(v20);
  sub_100224A44();
  uint64_t v22 = __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  sub_100224380();
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v31 = *(void *)(v6 + 16);
  if (v31 != *(void *)(v27 + 16)) {
    goto LABEL_44;
  }
  uint64_t v74 = v24;
  uint64_t v75 = v18;
  uint64_t v78 = (void *)v30;
  uint64_t v72 = v29;
  uint64_t v73 = (void *)v3;
  uint64_t v76 = (char *)&v61 - v28;
  if (!v31 || v6 == v27) {
    goto LABEL_44;
  }
  uint64_t v67 = v1;
  uint64_t v68 = v25;
  uint64_t v65 = v16;
  uint64_t v66 = v14;
  uint64_t v62 = v11;
  uint64_t v63 = v2;
  uint64_t v32 = 0;
  unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v77 = v27 + v33;
  uint64_t v70 = *(void *)(v26 + 72);
  uint64_t v71 = v6 + v33;
  uint64_t v34 = v72;
  uint64_t v35 = v0;
  uint64_t v36 = v7;
  uint64_t v64 = v35;
  uint64_t v69 = v31;
  while (1)
  {
    sub_100223BB0();
    sub_100224C3C();
    sub_100223BB0();
    int v37 = (uint64_t *)(v1 + *(int *)(v75 + 48));
    sub_100223BB0();
    sub_100223BB0();
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    int v38 = v68;
    sub_100223BB0();
    uint64_t v39 = *v38;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      swift_bridgeObjectRelease();
LABEL_39:
      uint64_t v50 = (uint64_t)v76;
      sub_1001F3A28(v1, &qword_1007104C0);
      goto LABEL_43;
    }
    uint64_t v40 = *v37;
    uint64_t v41 = *(void *)(v39 + 16);
    if (v41 != *(void *)(v40 + 16))
    {
LABEL_36:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100223BFC(v67, (void (*)(void))type metadata accessor for CreateParameter);
      uint64_t v34 = v72;
      uint64_t v50 = (uint64_t)v76;
      goto LABEL_43;
    }
    uint64_t v42 = v36;
    if (v41 && v39 != v40)
    {
      uint64_t v43 = 0;
      do
      {
        uint64_t v44 = sub_1005E1CB0();
        uint64_t v46 = v45;
        BOOL v48 = v44 == sub_1005E1CB0() && v46 == v47;
        if (v48)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v49 = sub_1005E3290();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v49 & 1) == 0) {
            goto LABEL_36;
          }
        }
        v43 += 16;
        --v41;
      }
      while (v41);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v42;
    uint64_t v2 = v63;
    uint64_t v35 = v64;
    uint64_t v1 = v67;
    uint64_t v34 = v72;
    uint64_t v50 = (uint64_t)v76;
LABEL_34:
    ++v32;
    sub_100223BFC(v1, (void (*)(void))type metadata accessor for CreateParameter);
    sub_100223BFC(v34, (void (*)(void))type metadata accessor for CreateParameter);
    sub_100223BFC(v50, (void (*)(void))type metadata accessor for CreateParameter);
    if (v32 == v69) {
      goto LABEL_44;
    }
  }
  uint64_t v51 = v78;
  sub_100223BB0();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1001F3A28((uint64_t)v51, &qword_10070FE48);
    goto LABEL_39;
  }
  uint64_t v52 = v73;
  sub_1001F39D8((uint64_t)v37, (uint64_t)v73, &qword_10070FE48);
  BOOL v53 = *v51 == *v52 && v51[1] == v52[1];
  uint64_t v50 = (uint64_t)v76;
  if (!v53 && (sub_1005E3290() & 1) == 0) {
    goto LABEL_42;
  }
  uint64_t v54 = *(int *)(v65 + 52);
  uint64_t v55 = (uint64_t)v52 + v54;
  uint64_t v56 = v2 + *(int *)(v66 + 48);
  sub_100223AC8((uint64_t)v78 + v54, v2, &qword_10070FE28);
  sub_100223AC8(v55, v56, &qword_10070FE28);
  sub_100207FC4(v2, 1, v36);
  if (v48)
  {
    sub_100207FC4(v56, 1, v36);
    if (!v48) {
      goto LABEL_41;
    }
    sub_1001F3A28(v2, &qword_10070FE28);
    uint64_t v52 = v73;
LABEL_33:
    sub_1001F3A28((uint64_t)v52, &qword_10070FE48);
    sub_1001F3A28((uint64_t)v78, &qword_10070FE48);
    goto LABEL_34;
  }
  sub_100223AC8(v2, v35, &qword_10070FE28);
  sub_100207FC4(v56, 1, v36);
  if (!v57)
  {
    uint64_t v58 = v62;
    sub_100223B64();
    char v59 = static ParameterValue.__derived_enum_equals(_:_:)(v35, v58);
    uint64_t v60 = v58;
    uint64_t v34 = v72;
    sub_100223BFC(v60, (void (*)(void))type metadata accessor for ParameterValue);
    sub_100223BFC(v35, (void (*)(void))type metadata accessor for ParameterValue);
    sub_1001F3A28(v2, &qword_10070FE28);
    uint64_t v52 = v73;
    if ((v59 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_33;
  }
  sub_100223BFC(v35, (void (*)(void))type metadata accessor for ParameterValue);
LABEL_41:
  sub_1001F3A28(v2, &qword_1007104B8);
  uint64_t v52 = v73;
LABEL_42:
  sub_1001F3A28((uint64_t)v52, &qword_10070FE48);
  sub_1001F3A28((uint64_t)v78, &qword_10070FE48);
  sub_100223BFC(v1, (void (*)(void))type metadata accessor for CreateParameter);
LABEL_43:
  sub_100223BFC(v34, (void (*)(void))type metadata accessor for CreateParameter);
  sub_100223BFC(v50, (void (*)(void))type metadata accessor for CreateParameter);
LABEL_44:
  sub_1001FE57C();
}

void sub_10021BEF8()
{
  sub_1001FE5B4();
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for QResyncParameter(0);
  uint64_t v8 = sub_100224550(v7);
  __chkstk_darwin(v8);
  sub_1002244D8();
  uint64_t v66 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v9);
  sub_1002244A8();
  uint64_t v10 = sub_10000566C(&qword_10070FE28);
  uint64_t v11 = sub_100224550(v10);
  __chkstk_darwin(v11);
  sub_100224A64();
  uint64_t v64 = sub_10000566C(&qword_1007104B8);
  sub_1001F3BBC();
  __chkstk_darwin(v12);
  sub_10022492C(v13, v55);
  uint64_t v63 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v14);
  sub_1001F40C0();
  uint64_t v17 = (void *)(v16 - v15);
  uint64_t v68 = sub_10000566C(&qword_1007104F0);
  sub_1001F3BBC();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1002248F4();
  uint64_t v20 = type metadata accessor for SelectParameter(v19);
  sub_10022417C();
  __chkstk_darwin(v21);
  sub_100224A44();
  __chkstk_darwin(v22);
  sub_100224BBC();
  uint64_t v67 = v23;
  sub_100224320();
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v55 - v26;
  __chkstk_darwin(v25);
  sub_100224764();
  if (!v39 || !v6 || v69 == v70) {
    goto LABEL_37;
  }
  uint64_t v59 = v2;
  uint64_t v60 = v29;
  uint64_t v55 = v0;
  uint64_t v56 = v4;
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = *(void *)(v28 + 72);
  uint64_t v61 = v31;
  uint64_t v62 = v17;
  uint64_t v57 = v20;
  uint64_t v58 = v27;
  while (1)
  {
    sub_100223BB0();
    sub_100223BB0();
    uint64_t v32 = v3 + *(int *)(v68 + 48);
    sub_100223BB0();
    sub_100223BB0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload) {
      break;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v34 = v60;
      sub_100223BB0();
      if (sub_1002249F8() != 1)
      {
        sub_100223BFC(v34, (void (*)(void))type metadata accessor for QResyncParameter);
LABEL_31:
        sub_1001F3A28(v3, &qword_1007104F0);
        goto LABEL_36;
      }
      uint64_t v35 = v59;
      sub_100223B64();
      char v36 = static QResyncParameter.__derived_struct_equals(_:_:)(v34, v35);
      uint64_t v37 = v35;
      uint64_t v17 = v62;
      sub_100223BFC(v37, (void (*)(void))type metadata accessor for QResyncParameter);
      sub_100223BFC(v34, (void (*)(void))type metadata accessor for QResyncParameter);
      uint64_t v31 = v61;
      if ((v36 & 1) == 0) {
        goto LABEL_35;
      }
    }
    else if (sub_1002249F8() != 2)
    {
      goto LABEL_31;
    }
LABEL_27:
    sub_100223BFC(v3, (void (*)(void))type metadata accessor for SelectParameter);
    sub_100223BFC((uint64_t)v27, (void (*)(void))type metadata accessor for SelectParameter);
    sub_100223BFC(v1, (void (*)(void))type metadata accessor for SelectParameter);
    v30 += v31;
    if (!--v6) {
      goto LABEL_37;
    }
  }
  int v38 = v67;
  sub_100223BB0();
  if (sub_1002249F8())
  {
    sub_1001F3A28((uint64_t)v38, &qword_10070FE48);
    goto LABEL_31;
  }
  sub_1001F39D8(v32, (uint64_t)v17, &qword_10070FE48);
  BOOL v39 = *v38 == *v17 && v38[1] == v17[1];
  if (!v39 && (sub_1005E3290() & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v40 = *(int *)(v63 + 52);
  uint64_t v41 = (uint64_t)v38 + v40;
  uint64_t v42 = (uint64_t)v17 + v40;
  uint64_t v43 = v65;
  uint64_t v44 = v65 + *(int *)(v64 + 48);
  sub_100223AC8(v41, v65, &qword_10070FE28);
  uint64_t v45 = v43;
  sub_100223AC8(v42, v44, &qword_10070FE28);
  sub_100207FC4(v43, 1, v66);
  if (v39)
  {
    sub_100207FC4(v44, 1, v66);
    uint64_t v27 = v58;
    if (!v39) {
      goto LABEL_33;
    }
    sub_1001F3A28(v45, &qword_10070FE28);
    int v38 = v67;
LABEL_26:
    sub_1001F3A28((uint64_t)v17, &qword_10070FE48);
    sub_1001F3A28((uint64_t)v38, &qword_10070FE48);
    goto LABEL_27;
  }
  uint64_t v46 = v56;
  sub_100223AC8(v43, v56, &qword_10070FE28);
  sub_100207FC4(v44, 1, v66);
  if (!v47)
  {
    uint64_t v48 = v55;
    sub_100223B64();
    uint64_t v49 = sub_100224BDC();
    char v51 = static ParameterValue.__derived_enum_equals(_:_:)(v49, v50);
    uint64_t v52 = v48;
    uint64_t v31 = v61;
    sub_100223BFC(v52, (void (*)(void))type metadata accessor for ParameterValue);
    sub_100223BFC(v46, (void (*)(void))type metadata accessor for ParameterValue);
    sub_1001F3A28(v65, &qword_10070FE28);
    uint64_t v17 = v62;
    int v38 = v67;
    uint64_t v27 = v58;
    if ((v51 & 1) == 0) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  sub_100223BFC(v46, (void (*)(void))type metadata accessor for ParameterValue);
  uint64_t v17 = v62;
  uint64_t v27 = v58;
LABEL_33:
  sub_1001F3A28(v45, &qword_1007104B8);
  int v38 = v67;
LABEL_34:
  sub_1001F3A28((uint64_t)v17, &qword_10070FE48);
  sub_1001F3A28((uint64_t)v38, &qword_10070FE48);
LABEL_35:
  sub_100223BFC(v3, (void (*)(void))type metadata accessor for SelectParameter);
LABEL_36:
  sub_100223BFC((uint64_t)v27, (void (*)(void))type metadata accessor for SelectParameter);
  uint64_t v53 = sub_100224B9C();
  sub_100223BFC(v53, v54);
LABEL_37:
  sub_1001FE57C();
}

uint64_t sub_10021C55C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 48);
    for (uint64_t i = (uint64_t *)(a1 + 48); ; i += 8)
    {
      uint64_t v6 = *(i - 2);
      uint64_t v5 = *(i - 1);
      uint64_t v7 = *i;
      uint64_t v8 = i[1];
      unint64_t v9 = i[2];
      uint64_t v104 = i[3];
      unint64_t v10 = i[4];
      unint64_t v11 = i[5];
      uint64_t v12 = *(v3 - 2);
      uint64_t v13 = *(v3 - 1);
      uint64_t v14 = *v3;
      uint64_t v15 = v3[1];
      unint64_t v16 = v3[2];
      uint64_t v17 = v3[3];
      unint64_t v18 = v16 >> 62;
      uint64_t v105 = v3[4];
      unint64_t v19 = v3[5];
      if (!(v9 >> 62))
      {
        if (v18) {
          return 0;
        }
        uint64_t v103 = v3[3];
        uint64_t v95 = v3[1];
        uint64_t v97 = *v3;
        uint64_t v86 = *(v3 - 2);
        uint64_t v88 = *(v3 - 1);
        uint64_t v26 = i[4];
        unint64_t v100 = v3[2];
        unint64_t v90 = v3[5];
        uint64_t v92 = v2;
        unint64_t v27 = i[5];
        unint64_t v84 = v27;
        sub_1001F3560(v86, v13, v14, v95, v16, v103, v105, v19);
        uint64_t v28 = sub_100224CF4();
        sub_1001F3560(v28, v29, v30, v31, v9, v104, v26, v27);
        LOBYTE(v27) = sub_10021CE30(v6, v86);
        sub_1001F34E8(v86, v88, v97, v95, v100, v103, v105, v90);
        uint64_t v32 = sub_100224CF4();
        sub_1001F34E8(v32, v33, v34, v35, v9, v104, v26, v84);
        uint64_t v2 = v92;
        if ((v27 & 1) == 0) {
          return 0;
        }
        goto LABEL_74;
      }
      if (v9 >> 62 != 1)
      {
        uint64_t v36 = v7 | v5;
        uint64_t v37 = v104 | v10 | v11;
        if (v9 != 0x8000000000000000 || v36 | v6 | v8 | v37)
        {
          BOOL v39 = v9 == 0x8000000000000000 && v6 == 1;
          if (!v39 || v36 | v8 | v37)
          {
            if (v18 != 2) {
              return 0;
            }
            uint64_t result = 0;
            if (v16 != 0x8000000000000000 || v12 != 2) {
              return result;
            }
          }
          else
          {
            if (v18 != 2) {
              return 0;
            }
            uint64_t result = 0;
            if (v16 != 0x8000000000000000 || v12 != 1) {
              return result;
            }
          }
          if (v14 | v13 | v15 || v105 | v17 | v19) {
            return result;
          }
        }
        else
        {
          if (v18 != 2) {
            return 0;
          }
          uint64_t result = 0;
          if (v16 != 0x8000000000000000 || v14 | v13 | v12 | v15 | v17 | v105 | v19) {
            return result;
          }
        }
        goto LABEL_74;
      }
      if (v18 != 1) {
        return 0;
      }
      unint64_t v99 = v3[2];
      unint64_t v101 = i[2];
      uint64_t v82 = *i;
      uint64_t v83 = i[1];
      if ((v9 & 1) == 0) {
        break;
      }
      if ((v16 & 1) == 0) {
        return 0;
      }
      uint64_t v20 = v2;
      BOOL v41 = v6 == v12 && v5 == v13;
      uint64_t v81 = *(i - 2);
      uint64_t v102 = v3[3];
      if (!v41)
      {
        uint64_t v15 = *(v3 - 2);
        unint64_t v42 = v3[5];
        unint64_t v43 = i[4];
        unint64_t v44 = i[5];
        sub_1005E3290();
        sub_100224B50();
        unint64_t v11 = v44;
        unint64_t v10 = v43;
        unint64_t v19 = v42;
        uint64_t v17 = v102;
        if ((v45 & 1) == 0) {
          return 0;
        }
      }
      if (v7 != v14 || v8 != v15)
      {
        uint64_t v79 = v5;
        uint64_t v47 = v14;
        uint64_t v48 = v15;
        uint64_t v49 = v13;
        uint64_t v50 = v12;
        unint64_t v91 = v19;
        unint64_t v51 = v10;
        unint64_t v52 = v11;
        char v25 = sub_1005E3290();
        uint64_t v7 = v82;
        uint64_t v8 = v83;
        uint64_t v12 = v50;
        uint64_t v14 = v47;
        uint64_t v13 = v49;
        uint64_t v15 = v48;
        uint64_t v5 = v79;
        uint64_t v6 = v81;
        unint64_t v11 = v52;
        unint64_t v10 = v51;
        unint64_t v19 = v91;
LABEL_47:
        uint64_t v17 = v102;
        if ((v25 & 1) == 0) {
          return 0;
        }
      }
LABEL_48:
      if (HIBYTE(v11) == 255)
      {
        uint64_t v2 = v20;
        if (HIBYTE(v19) != 255) {
          goto LABEL_76;
        }
      }
      else
      {
        if (HIBYTE(v19) == 255)
        {
LABEL_76:
          uint64_t v73 = v10;
          unint64_t v74 = v11;
          sub_1001F3404(v17, v105, v19);
          sub_1001F3404(v104, v73, v74);
          sub_1001F34D0(v104, v73, v74);
          sub_100224C3C();
          sub_1001F34D0(v75, v76, v77);
          return 0;
        }
        uint64_t v2 = v20;
        if ((v11 & 0x100000000000000) != 0)
        {
          if ((v19 & 0x100000000000000) == 0) {
            return 0;
          }
          uint64_t v63 = v12;
          uint64_t v64 = v5;
          uint64_t v80 = v5;
          uint64_t v65 = v7;
          uint64_t v96 = v15;
          uint64_t v98 = v14;
          uint64_t v66 = v8;
          uint64_t v87 = v12;
          uint64_t v89 = v13;
          uint64_t v67 = v15;
          uint64_t v68 = v17;
          uint64_t v69 = v10;
          uint64_t v70 = v17;
          unint64_t v71 = v19;
          unint64_t v85 = v11;
          uint64_t v94 = v2;
          sub_1001F3560(v63, v13, v14, v67, v99, v68, v105, v19);
          sub_1001F3560(v6, v64, v65, v66, v101, v104, v69, v85);
          sub_1001F3404(v70, v105, v71);
          sub_1001F3404(v104, v69, v85);
          sub_10021AEB0();
          char v78 = v72;
          sub_1001F34D0(v70, v105, v71);
          sub_1001F34D0(v104, v69, v85);
          sub_1001F34E8(v87, v89, v98, v96, v99, v70, v105, v71);
          sub_1001F34E8(v6, v80, v82, v83, v101, v104, v69, v85);
          uint64_t v2 = v94;
          if ((v78 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          if ((v19 & 0x100000000000000) != 0) {
            return 0;
          }
          unint64_t v53 = HIDWORD(v10);
          if (HIDWORD(v10) - v10 != HIDWORD(v105) - v105) {
            return 0;
          }
          if ((unint64_t v54 = HIDWORD(v11), v55 = HIDWORD(v19), v11 != v19)
            || WORD2(v11) != WORD2(v19)
            || (BYTE6(v11) == BYTE6(v19) ? (BOOL v56 = v104 == v17) : (BOOL v56 = 0), !v56))
          {
            unsigned __int8 v57 = BYTE6(v19);
            unsigned int v58 = v10;
            unsigned __int8 v59 = BYTE6(v11);
            uint64_t v93 = v2;
            swift_beginAccess();
            uint64_t v60 = (const void *)(*(void *)(v104 + 24) + (v59 | ((unint64_t)(unsigned __int16)v54 << 8)) + v58);
            sub_1001F969C();
            int v61 = memcmp(v60, (const void *)(*(void *)(v17 + 24)+ (v57 | ((unint64_t)(unsigned __int16)v55 << 8))+ v105), v53 - v58);
            uint64_t v2 = v93;
            if (v61) {
              return 0;
            }
          }
        }
      }
LABEL_74:
      v3 += 8;
      if (!--v2) {
        return 1;
      }
    }
    if (v16) {
      return 0;
    }
    uint64_t v20 = v2;
    if (v6 == v12 && v5 == v13) {
      goto LABEL_48;
    }
    uint64_t v15 = *(v3 - 2);
    uint64_t v102 = v3[3];
    unint64_t v22 = v3[5];
    unint64_t v23 = i[4];
    unint64_t v24 = i[5];
    sub_1005E3290();
    sub_100224B50();
    unint64_t v11 = v24;
    unint64_t v10 = v23;
    unint64_t v19 = v22;
    goto LABEL_47;
  }
  return 1;
}

uint64_t sub_10021CB78(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v6 && a1 != a2)
  {
    uint64_t v7 = a2 + 48;
    for (uint64_t i = a1 + 48; ; i += 64)
    {
      uint64_t v9 = *(void *)(i + 16);
      uint64_t v10 = *(void *)(v7 + 16);
      if (v9 == 254)
      {
        if (*(void *)(v7 + 16) != 254) {
          return 0;
        }
        goto LABEL_49;
      }
      if (v9 == 255)
      {
        if ((_BYTE)v10 != 0xFF) {
          return 0;
        }
        goto LABEL_49;
      }
      if ((~(_BYTE)v10 & 0xFE) == 0) {
        return 0;
      }
      sub_100224278();
      if ((v9 & 1) == 0) {
        break;
      }
      if ((v10 & 1) == 0) {
        return 0;
      }
      BOOL v25 = v19 == v23 && v4 == v3;
      uint64_t v107 = v5;
      if (!v25)
      {
        uint64_t v5 = v23;
        uint64_t v105 = (uint64_t)v2;
        sub_100224228();
        sub_100224828();
        if ((v11 & 1) == 0) {
          return 0;
        }
      }
      if (v22 != v2 || v5 != v14)
      {
        sub_100224418();
        sub_1002249DC();
LABEL_30:
        sub_100224CA4();
        if ((v11 & 1) == 0) {
          return 0;
        }
      }
LABEL_31:
      if (HIBYTE(v20) == 255)
      {
        if (HIBYTE(v21) != 255) {
          goto LABEL_51;
        }
      }
      else
      {
        if (HIBYTE(v21) == 255)
        {
LABEL_51:
          sub_100224198(v11, v12, v13, v14, v15, v16, v17, v18, v78, v80, v82, v85, v88, v91, v95, v98, v101, v103, v105,
            v107,
            v109,
            v111,
            v113,
            v115,
            v117,
            v119);
          return 0;
        }
        if ((v20 & 0x100000000000000) != 0)
        {
          if ((v21 & 0x100000000000000) == 0) {
            return 0;
          }
          uint64_t v92 = v23;
          sub_1002246D4();
          sub_100224C48();
          sub_100223A6C(v39, v40, v41, v42, v43);
          sub_1002247BC();
          sub_1002249C0();
          sub_100223A6C(v44, v45, v46, v47, v48);
          sub_1002242B0(v49, v50, v51, v52, v53, v54, v55, v56, (uint64_t)sub_1001F33C4, (uint64_t)sub_1001F3404, v82, (uint64_t)sub_1001F33C4, (uint64_t)sub_1001F3404, v92, v95, v98, v101, v103, v105,
            v107,
            v109,
            v111,
            v113,
            v115,
            v117,
            v119);
          sub_100224980(v57, v58, v59, v60, v61, v62, v63, v64, v79, v81, v83, v86, v89, v93, v96, v99, v102, v104, v106,
            v108,
            v110,
            v112,
            v114,
            v116,
            v118,
            v120,
            v121);
          uint64_t v2 = sub_1001F34D0;
          sub_100223A6C(v94, v113, v105, v97, v10);
          uint64_t v73 = sub_100224AEC(v65, v66, v67, v68, v69, v70, v71, v72, (uint64_t)sub_1001F3480, (uint64_t)sub_1001F34D0, v84, v87, v90, v94, v97, v100);
          sub_100223A6C(v73, v74, v75, v76, v9);
          if ((v88 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          if ((v21 & 0x100000000000000) != 0) {
            return 0;
          }
          sub_10022455C();
          if (!v24) {
            return 0;
          }
          if ((unint64_t v4 = HIDWORD(v29), v27 != v29)
            || v28 != WORD2(v29)
            || ((sub_100224C7C(), v24) ? (BOOL v30 = v111 == v109) : (BOOL v30 = 0), !v30))
          {
            sub_1002247DC();
            uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))((char *)v2 - v119);
            uint64_t v3 = v109;
            int v31 = sub_1001F969C();
            if (sub_1002245E0(v31, v32, v33, v34, v35, v36, v37, v38, v78, v80, v82, v85, v88, v91, v95, v98, v101, v103, v105,
                                 v107,
                                 v109,
                                 v111,
                                 v113,
                                 v115,
                                 v117))
              return 0;
          }
        }
      }
LABEL_49:
      v7 += 64;
      if (!--v6) {
        return 1;
      }
    }
    if (v10) {
      return 0;
    }
    BOOL v24 = v19 == v23 && v4 == v3;
    if (v24) {
      goto LABEL_31;
    }
    uint64_t v105 = (uint64_t)v2;
    uint64_t v107 = v5;
    uint64_t v5 = v23;
    sub_100224228();
    sub_100224CCC();
    goto LABEL_30;
  }
  return 1;
}

uint64_t sub_10021CE30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    unint64_t v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      unsigned int v6 = *v3++;
      uint64_t v5 = v6;
      unsigned int v8 = *v4++;
      uint64_t v7 = v8;
      unint64_t v9 = 0xE800000000000000;
      uint64_t v10 = 0x534547415353454DLL;
      switch(v5)
      {
        case 1:
          unint64_t v9 = 0xE600000000000000;
          uint64_t v10 = 0x544E45434552;
          break;
        case 2:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x5458454E444955;
          break;
        case 3:
          uint64_t v10 = 0x44494C4156444955;
          uint64_t v11 = 5854281;
          goto LABEL_13;
        case 4:
          unint64_t v9 = 0xE600000000000000;
          uint64_t v10 = 0x4E4545534E55;
          break;
        case 5:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1163544915;
          break;
        case 6:
          uint64_t v10 = 0x4D54534548474948;
          unint64_t v9 = 0xED0000514553444FLL;
          break;
        case 7:
          uint64_t v10 = 0x494C444E45505041;
          uint64_t v11 = 5523789;
LABEL_13:
          unint64_t v9 = v11 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        default:
          break;
      }
      unint64_t v12 = 0xE800000000000000;
      uint64_t v13 = 0x534547415353454DLL;
      switch(v7)
      {
        case 1:
          unint64_t v12 = 0xE600000000000000;
          uint64_t v13 = 0x544E45434552;
          break;
        case 2:
          unint64_t v12 = 0xE700000000000000;
          uint64_t v13 = 0x5458454E444955;
          break;
        case 3:
          uint64_t v13 = 0x44494C4156444955;
          uint64_t v14 = 5854281;
          goto LABEL_22;
        case 4:
          unint64_t v12 = 0xE600000000000000;
          uint64_t v13 = 0x4E4545534E55;
          break;
        case 5:
          unint64_t v12 = 0xE400000000000000;
          uint64_t v13 = 1163544915;
          break;
        case 6:
          uint64_t v13 = 0x4D54534548474948;
          unint64_t v12 = 0xED0000514553444FLL;
          break;
        case 7:
          uint64_t v13 = 0x494C444E45505041;
          uint64_t v14 = 5523789;
LABEL_22:
          unint64_t v12 = v14 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        default:
          break;
      }
      if (v10 == v13 && v9 == v12)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v16 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          return 0;
        }
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_10021D0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v4) {
    return 1;
  }
  sub_100224518();
  if (v5) {
    return 1;
  }
  sub_1001F3740(v2 + 32, (uint64_t)v14);
  sub_1001F3740(v3 + 32, (uint64_t)v15);
  if ((static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v14, (uint64_t)v15) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = v3 + 72;
  uint64_t v7 = v2 + 72;
  do
  {
    BOOL v8 = --v4 == 0;
    if (!v4) {
      break;
    }
    uint64_t v9 = v7 + 40;
    sub_1001F3740(v7, (uint64_t)v12);
    sub_1001F3740(v6, (uint64_t)v13);
    char v10 = static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v12, (uint64_t)v13);
    uint64_t v7 = v9;
    v6 += 40;
  }
  while ((v10 & 1) != 0);
  return v8;
}

void sub_10021D1C0()
{
  sub_1001FE5B4();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v9);
  sub_1002244D8();
  uint64_t v10 = sub_10000566C(&qword_10070FE28);
  uint64_t v11 = sub_100224550(v10);
  __chkstk_darwin(v11);
  sub_100208054();
  uint64_t v56 = v12;
  uint64_t v58 = sub_10000566C(&qword_1007104B8);
  sub_1001F3BBC();
  __chkstk_darwin(v13);
  sub_1002244C0();
  uint64_t v57 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v14);
  sub_100224948(v15, v52);
  uint64_t v63 = sub_10000566C(&qword_1007104F8);
  sub_1001F3BBC();
  __chkstk_darwin(v16);
  sub_10022420C();
  type metadata accessor for FetchModifier();
  sub_10022417C();
  __chkstk_darwin(v17);
  uint64_t v60 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100224320();
  __chkstk_darwin(v19);
  uint64_t v61 = (char *)&v52 - v20;
  sub_100224320();
  __chkstk_darwin(v21);
  sub_100224380();
  __chkstk_darwin(v22);
  sub_100224750();
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v52 - v25;
  uint64_t v64 = v7;
  uint64_t v65 = v5;
  uint64_t v27 = *(void *)(v7 + 16);
  if (v27 != *(void *)(v5 + 16) || !v27 || v64 == v65)
  {
LABEL_45:
    sub_1001FE57C();
    return;
  }
  uint64_t v54 = v8;
  uint64_t v55 = v24;
  uint64_t v52 = v1;
  sub_100224C28();
  uint64_t v59 = v28;
  while (1)
  {
    sub_100223BB0();
    sub_100223BB0();
    uint64_t v29 = v3 + *(int *)(v63 + 48);
    sub_100223BB0();
    sub_100223BB0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        int v31 = (uint64_t *)v61;
        sub_100223BB0();
        uint64_t v32 = *v31;
        if (sub_1002249F8() != 1) {
          goto LABEL_39;
        }
        char v33 = *(unsigned char *)(v29 + 8);
        if (v61[8])
        {
          if (*(void *)v29 != v32) {
            char v33 = 0;
          }
          if ((v33 & 1) == 0) {
            goto LABEL_43;
          }
        }
        else
        {
          if (*(void *)v29 != v32) {
            char v33 = 1;
          }
          if (v33) {
            goto LABEL_43;
          }
        }
        goto LABEL_35;
      }
      int v37 = v60;
      sub_100223BB0();
      if (sub_1002249F8() == 2)
      {
        uint64_t v38 = v29;
        uint64_t v39 = v62;
        sub_1001F39D8(v38, (uint64_t)v62, &qword_10070FE48);
        BOOL v40 = *v37 == *v39 && v37[1] == v39[1];
        if (!v40 && (sub_1005E3290() & 1) == 0) {
          goto LABEL_42;
        }
        uint64_t v41 = *(int *)(v57 + 52);
        uint64_t v42 = (uint64_t)v37 + v41;
        uint64_t v43 = (uint64_t)v62 + v41;
        uint64_t v44 = v0 + *(int *)(v58 + 48);
        sub_100223AC8(v42, v0, &qword_10070FE28);
        sub_100223AC8(v43, v44, &qword_10070FE28);
        uint64_t v45 = v54;
        sub_100207FC4(v0, 1, v54);
        if (v40)
        {
          sub_100207FC4(v44, 1, v45);
          if (!v40) {
            goto LABEL_41;
          }
          sub_1001F3A28(v0, &qword_10070FE28);
          int v37 = v60;
LABEL_34:
          sub_1001F3A28((uint64_t)v62, &qword_10070FE48);
          sub_1001F3A28((uint64_t)v37, &qword_10070FE48);
LABEL_35:
          sub_100223BFC(v3, (void (*)(void))type metadata accessor for FetchModifier);
          goto LABEL_36;
        }
        sub_100223AC8(v0, v56, &qword_10070FE28);
        sub_100207FC4(v44, 1, v45);
        if (!v46)
        {
          uint64_t v47 = v0;
          uint64_t v48 = v56;
          uint64_t v49 = v52;
          sub_100223B64();
          int v53 = static ParameterValue.__derived_enum_equals(_:_:)(v48, v49);
          uint64_t v50 = v49;
          uint64_t v51 = v48;
          uint64_t v0 = v47;
          sub_100223BFC(v50, (void (*)(void))type metadata accessor for ParameterValue);
          sub_100223BFC(v51, (void (*)(void))type metadata accessor for ParameterValue);
          sub_1001F3A28(v47, &qword_10070FE28);
          int v37 = v60;
          if ((v53 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_34;
        }
        sub_100223BFC(v56, (void (*)(void))type metadata accessor for ParameterValue);
LABEL_41:
        sub_1001F3A28(v0, &qword_1007104B8);
        int v37 = v60;
LABEL_42:
        sub_1001F3A28((uint64_t)v62, &qword_10070FE48);
        sub_1001F3A28((uint64_t)v37, &qword_10070FE48);
LABEL_43:
        sub_100223BFC(v3, (void (*)(void))type metadata accessor for FetchModifier);
      }
      else
      {
        sub_1001F3A28((uint64_t)v37, &qword_10070FE48);
LABEL_39:
        sub_1001F3A28(v3, &qword_1007104F8);
      }
LABEL_44:
      sub_100223BFC(v2, (void (*)(void))type metadata accessor for FetchModifier);
      sub_100223BFC((uint64_t)v26, (void (*)(void))type metadata accessor for FetchModifier);
      goto LABEL_45;
    }
    int v34 = v55;
    sub_100223BB0();
    uint64_t v35 = *v34;
    if (sub_1002249F8()) {
      goto LABEL_39;
    }
    uint64_t v36 = *(void *)v29;
    if ((v36 | v35) < 0) {
      break;
    }
    sub_100223BFC(v3, (void (*)(void))type metadata accessor for FetchModifier);
    if (v36 != v35) {
      goto LABEL_44;
    }
LABEL_36:
    sub_100223BFC(v2, (void (*)(void))type metadata accessor for FetchModifier);
    sub_100223BFC((uint64_t)v26, (void (*)(void))type metadata accessor for FetchModifier);
    v1 += v59;
    if (!--v27) {
      goto LABEL_45;
    }
  }
  __break(1u);
}

void sub_10021D82C()
{
  sub_1001FE5B4();
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v9);
  sub_100224490();
  uint64_t v10 = sub_10000566C(&qword_10070FE28);
  uint64_t v11 = sub_100224550(v10);
  __chkstk_darwin(v11);
  sub_1002244D8();
  uint64_t v48 = sub_10000566C(&qword_1007104B8);
  sub_1001F3BBC();
  __chkstk_darwin(v12);
  sub_100224260();
  uint64_t v13 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v14);
  sub_100224A7C();
  uint64_t v54 = sub_10000566C(&qword_100710508);
  sub_1001F3BBC();
  __chkstk_darwin(v15);
  sub_10022420C();
  uint64_t v53 = type metadata accessor for StoreModifier();
  sub_10022417C();
  __chkstk_darwin(v16);
  uint64_t v52 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100224320();
  __chkstk_darwin(v18);
  sub_100224BBC();
  uint64_t v50 = v19;
  sub_100224320();
  __chkstk_darwin(v20);
  sub_100224BBC();
  uint64_t v47 = v21;
  sub_100224320();
  __chkstk_darwin(v22);
  sub_100224764();
  if (!v27 || !v7 || v55 == v56)
  {
LABEL_33:
    sub_1001FE57C();
    return;
  }
  uint64_t v43 = v0;
  uint64_t v44 = v2;
  uint64_t v45 = v3;
  uint64_t v46 = v8;
  sub_100224C28();
  uint64_t v49 = v23;
  uint64_t v24 = v47;
  uint64_t v51 = v1;
  while (1)
  {
    sub_100223BB0();
    sub_100223BB0();
    uint64_t v25 = (uint64_t *)(v4 + *(int *)(v54 + 48));
    sub_100223BB0();
    sub_100224848();
    sub_100223BB0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = v52;
      sub_100223BB0();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001F39D8((uint64_t)v25, (uint64_t)v3, &qword_10070FE48);
        BOOL v27 = *v26 == *v3 && v26[1] == v3[1];
        if (!v27 && (sub_1005E3290() & 1) == 0) {
          goto LABEL_31;
        }
        uint64_t v28 = *(int *)(v13 + 52);
        uint64_t v29 = (uint64_t)v26 + v28;
        uint64_t v30 = (uint64_t)v3 + v28;
        uint64_t v31 = v5 + *(int *)(v48 + 48);
        sub_100223AC8(v29, v5, &qword_10070FE28);
        sub_100223AC8(v30, v31, &qword_10070FE28);
        uint64_t v32 = v46;
        sub_100207FC4(v5, 1, v46);
        if (v27)
        {
          sub_100207FC4(v31, 1, v32);
          if (!v27) {
            goto LABEL_30;
          }
          sub_1001F3A28(v5, &qword_10070FE28);
          uint64_t v26 = v52;
LABEL_24:
          sub_1001F3A28((uint64_t)v3, &qword_10070FE48);
          sub_1001F3A28((uint64_t)v26, &qword_10070FE48);
          sub_100223BFC(v4, (void (*)(void))type metadata accessor for StoreModifier);
          goto LABEL_25;
        }
        uint64_t v36 = v5;
        uint64_t v37 = v5;
        uint64_t v38 = v44;
        sub_100223AC8(v36, v44, &qword_10070FE28);
        sub_100207FC4(v31, 1, v32);
        if (!v39)
        {
          uint64_t v40 = v43;
          sub_100223B64();
          char v41 = static ParameterValue.__derived_enum_equals(_:_:)(v38, v40);
          uint64_t v42 = v40;
          uint64_t v24 = v47;
          sub_100223BFC(v42, (void (*)(void))type metadata accessor for ParameterValue);
          sub_100223BFC(v38, (void (*)(void))type metadata accessor for ParameterValue);
          sub_1001F3A28(v37, &qword_10070FE28);
          uint64_t v5 = v37;
          uint64_t v3 = v45;
          uint64_t v26 = v52;
          if ((v41 & 1) == 0) {
            goto LABEL_31;
          }
          goto LABEL_24;
        }
        sub_100223BFC(v38, (void (*)(void))type metadata accessor for ParameterValue);
        uint64_t v5 = v37;
        uint64_t v3 = v45;
LABEL_30:
        sub_1001F3A28(v5, &qword_1007104B8);
        uint64_t v26 = v52;
LABEL_31:
        sub_1001F3A28((uint64_t)v3, &qword_10070FE48);
        sub_1001F3A28((uint64_t)v26, &qword_10070FE48);
        sub_100223BFC(v4, (void (*)(void))type metadata accessor for StoreModifier);
      }
      else
      {
        sub_1001F3A28((uint64_t)v26, &qword_10070FE48);
LABEL_28:
        sub_1001F3A28(v4, &qword_100710508);
      }
LABEL_32:
      sub_100223BFC(v24, (void (*)(void))type metadata accessor for StoreModifier);
      sub_100223BFC(v51, (void (*)(void))type metadata accessor for StoreModifier);
      goto LABEL_33;
    }
    char v33 = v50;
    sub_100223BB0();
    uint64_t v34 = *v33;
    if (swift_getEnumCaseMultiPayload() == 1) {
      goto LABEL_28;
    }
    uint64_t v35 = *v25;
    if ((v35 | v34) < 0) {
      break;
    }
    sub_100223BFC(v4, (void (*)(void))type metadata accessor for StoreModifier);
    if (v35 != v34) {
      goto LABEL_32;
    }
LABEL_25:
    sub_100223BFC(v24, (void (*)(void))type metadata accessor for StoreModifier);
    sub_100223BFC(v51, (void (*)(void))type metadata accessor for StoreModifier);
    v2 += v49;
    if (!--v7) {
      goto LABEL_33;
    }
  }
  __break(1u);
}

uint64_t sub_10021DE14()
{
  sub_100224250();
  if (!v6) {
    return 0;
  }
  if (!v2) {
    return 1;
  }
  sub_100224518();
  if (v6) {
    return 1;
  }
  uint64_t result = v0[4];
  uint64_t v4 = v0[6];
  uint64_t v5 = v1[6];
  BOOL v6 = result == v1[4] && v0[5] == v1[5];
  if (v6)
  {
    if (v4 != v5) {
      return 0;
    }
  }
  else
  {
    sub_1005E3290();
    uint64_t result = sub_100224874();
    if ((v7 & 1) == 0 || v4 != v5) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v8 = v1 + 9;
  uint64_t v9 = v0 + 9;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t v11 = *v9;
    uint64_t v12 = *v8;
    if (*(v9 - 2) == *(v8 - 2) && *(v9 - 1) == *(v8 - 1))
    {
      if (v11 != v12) {
        return 0;
      }
    }
    else
    {
      sub_1005E3290();
      uint64_t result = sub_100224874();
      if ((v14 & 1) == 0 || v11 != v12) {
        return result;
      }
    }
    ++v10;
    v8 += 3;
    v9 += 3;
    uint64_t result = 1;
    if (v2 == v10) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_10021DF1C()
{
  sub_1001FE5B4();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v9);
  sub_100224260();
  uint64_t v10 = sub_10000566C(&qword_10070FE28);
  uint64_t v11 = sub_100224550(v10);
  __chkstk_darwin(v11);
  sub_100224910(v12, v58);
  uint64_t v13 = sub_10000566C(&qword_1007104B8);
  sub_1001F3BBC();
  __chkstk_darwin(v14);
  sub_1002244C0();
  uint64_t v62 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v15);
  sub_100224948(v16, v58);
  uint64_t v69 = sub_10000566C(&qword_100710510);
  sub_1001F3BBC();
  __chkstk_darwin(v17);
  sub_10022420C();
  uint64_t v71 = type metadata accessor for MetadataOption();
  sub_10022417C();
  __chkstk_darwin(v18);
  uint64_t v65 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100224320();
  __chkstk_darwin(v20);
  uint64_t v67 = (char *)&v58 - v21;
  sub_100224320();
  __chkstk_darwin(v22);
  sub_100224BBC();
  uint64_t v66 = v23;
  sub_100224320();
  __chkstk_darwin(v24);
  sub_100224750();
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v58 - v27;
  uint64_t v70 = v7;
  uint64_t v29 = *(void *)(v7 + 16);
  if (v29 != *(void *)(v5 + 16) || !v29 || v70 == v5) {
    goto LABEL_55;
  }
  uint64_t v59 = v3;
  uint64_t v60 = v8;
  unint64_t v30 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v64 = *(void *)(v26 + 72);
  uint64_t v61 = v5;
  uint64_t v58 = v13;
  while (1)
  {
    sub_100223BB0();
    sub_100223BB0();
    uint64_t v31 = (uint64_t *)(v2 + *(int *)(v69 + 48));
    sub_100223BB0();
    sub_100223BB0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload) {
      break;
    }
    sub_100223BB0();
    if (swift_getEnumCaseMultiPayload()) {
      goto LABEL_49;
    }
    uint64_t v36 = *v66;
    uint64_t v37 = *v31;
    sub_100223BFC(v2, (void (*)(void))type metadata accessor for MetadataOption);
    if (v36 != v37) {
      goto LABEL_54;
    }
LABEL_46:
    sub_100223BFC(v1, (void (*)(void))type metadata accessor for MetadataOption);
    sub_100223BFC((uint64_t)v28, (void (*)(void))type metadata accessor for MetadataOption);
    v30 += v64;
    if (!--v29) {
      goto LABEL_55;
    }
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_100223BB0();
    if (swift_getEnumCaseMultiPayload() != 1) {
      goto LABEL_49;
    }
    int v33 = *v67;
    if (*v67)
    {
      if (v33 == 1) {
        uint64_t v34 = 49;
      }
      else {
        uint64_t v34 = 0x7974696E69666E69;
      }
      if (v33 == 1) {
        unint64_t v35 = 0xE100000000000000;
      }
      else {
        unint64_t v35 = 0xE800000000000000;
      }
    }
    else
    {
      unint64_t v35 = 0xE100000000000000;
      uint64_t v34 = 48;
    }
    if (*(unsigned char *)v31)
    {
      if (*(unsigned char *)v31 == 1)
      {
        unint64_t v54 = 0xE100000000000000;
        uint64_t v55 = 49;
      }
      else
      {
        unint64_t v54 = 0xE800000000000000;
        uint64_t v55 = 0x7974696E69666E69;
      }
    }
    else
    {
      unint64_t v54 = 0xE100000000000000;
      uint64_t v55 = 48;
    }
    if (v34 == v55 && v35 == v54)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v57 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v57 & 1) == 0) {
        goto LABEL_53;
      }
    }
    goto LABEL_45;
  }
  uint64_t v38 = v65;
  sub_100223BB0();
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1001F3A28((uint64_t)v38, &qword_10070FE48);
LABEL_49:
    sub_1001F3A28(v2, &qword_100710510);
    goto LABEL_54;
  }
  uint64_t v39 = (uint64_t)v31;
  uint64_t v40 = v68;
  sub_1001F39D8(v39, (uint64_t)v68, &qword_10070FE48);
  BOOL v41 = *v38 == *v40 && v38[1] == v40[1];
  if (!v41 && (sub_1005E3290() & 1) == 0) {
    goto LABEL_52;
  }
  uint64_t v42 = *(int *)(v62 + 52);
  uint64_t v43 = (uint64_t)v38 + v42;
  uint64_t v44 = (uint64_t)v68 + v42;
  uint64_t v45 = v0 + *(int *)(v13 + 48);
  sub_100223AC8(v43, v0, &qword_10070FE28);
  sub_100223AC8(v44, v45, &qword_10070FE28);
  uint64_t v46 = v60;
  sub_100207FC4(v0, 1, v60);
  uint64_t v47 = v63;
  if (v41)
  {
    sub_100207FC4(v45, 1, v46);
    if (!v41) {
      goto LABEL_51;
    }
    sub_1001F3A28(v0, &qword_10070FE28);
    uint64_t v38 = v65;
    goto LABEL_31;
  }
  sub_100223AC8(v0, v63, &qword_10070FE28);
  sub_100207FC4(v45, 1, v46);
  if (!v48)
  {
    uint64_t v49 = v0;
    uint64_t v50 = v47;
    uint64_t v51 = v59;
    sub_100223B64();
    char v52 = static ParameterValue.__derived_enum_equals(_:_:)(v50, v51);
    sub_100223BFC(v51, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t v53 = v50;
    uint64_t v0 = v49;
    uint64_t v13 = v58;
    sub_100223BFC(v53, (void (*)(void))type metadata accessor for ParameterValue);
    sub_1001F3A28(v0, &qword_10070FE28);
    uint64_t v38 = v65;
    if ((v52 & 1) == 0) {
      goto LABEL_52;
    }
LABEL_31:
    sub_1001F3A28((uint64_t)v68, &qword_10070FE48);
    sub_1001F3A28((uint64_t)v38, &qword_10070FE48);
LABEL_45:
    sub_100223BFC(v2, (void (*)(void))type metadata accessor for MetadataOption);
    goto LABEL_46;
  }
  sub_100223BFC(v47, (void (*)(void))type metadata accessor for ParameterValue);
LABEL_51:
  sub_1001F3A28(v0, &qword_1007104B8);
  uint64_t v38 = v65;
LABEL_52:
  sub_1001F3A28((uint64_t)v68, &qword_10070FE48);
  sub_1001F3A28((uint64_t)v38, &qword_10070FE48);
LABEL_53:
  sub_100223BFC(v2, (void (*)(void))type metadata accessor for MetadataOption);
LABEL_54:
  sub_100223BFC(v1, (void (*)(void))type metadata accessor for MetadataOption);
  sub_100223BFC((uint64_t)v28, (void (*)(void))type metadata accessor for MetadataOption);
LABEL_55:
  sub_1001FE57C();
}

void sub_10021E62C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__s1, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  sub_100224B04();
  uint64_t v36 = *(void *)(v34 + 16);
  if (v36 == *(void *)(v35 + 16) && v36 && v34 != v35)
  {
    uint64_t v37 = 0;
    uint64_t v58 = v34;
    uint64_t v59 = v35;
    do
    {
      uint64_t v38 = v34 + v37;
      uint64_t v40 = *(unsigned int *)(v34 + v37 + 40);
      uint64_t v39 = *(unsigned int *)(v34 + v37 + 44);
      uint64_t v41 = v35 + v37;
      uint64_t v42 = *(unsigned int *)(v35 + v37 + 40);
      if (v39 - v40 != *(_DWORD *)(v35 + v37 + 44) - v42) {
        break;
      }
      uint64_t v43 = *(void *)(v38 + 32);
      uint64_t v44 = *(unsigned __int16 *)(v38 + 52);
      uint64_t v45 = *(unsigned __int8 *)(v38 + 54);
      uint64_t v62 = *(void *)(v38 + 56);
      uint64_t v63 = *(void *)(v38 + 64);
      uint64_t v46 = *(void *)(v41 + 32);
      uint64_t v47 = *(unsigned __int16 *)(v41 + 52);
      uint64_t v48 = *(unsigned __int8 *)(v41 + 54);
      uint64_t v60 = v36;
      uint64_t v61 = *(void *)(v41 + 56);
      uint64_t v64 = *(void *)(v41 + 64);
      if (*(_DWORD *)(v38 + 48) == *(_DWORD *)(v41 + 48)
        && v44 == v47
        && v45 == v48
        && v43 == v46)
      {
        swift_retain_n();
        uint64_t v53 = v63;
        swift_bridgeObjectRetain();
        uint64_t v54 = v64;
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1001F969C();
        __s1a = (void *)(*(void *)(v43 + 24) + (v45 | (v44 << 8)) + v40);
        sub_1001F969C();
        char v52 = (const void *)(*(void *)(v46 + 24) + (v48 | (v47 << 8)) + v42);
        swift_retain();
        uint64_t v53 = v63;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v54 = v64;
        swift_bridgeObjectRetain();
        if (memcmp(__s1a, v52, v39 - v40))
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          break;
        }
      }
      if (v62 == v61 && v53 == v54)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
      }
      else
      {
        char v56 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if ((v56 & 1) == 0) {
          break;
        }
      }
      v37 += 40;
      uint64_t v35 = v59;
      uint64_t v36 = v60 - 1;
      uint64_t v34 = v58;
    }
    while (v60 != 1);
  }
  sub_100224AAC();
}

void sub_10021E838()
{
  sub_100224B04();
  sub_100224250();
  if (v15 && v0 && v1 != v2)
  {
    uint64_t v3 = v2 + 48;
    uint64_t v4 = v1 + 48;
    do
    {
      uint64_t v6 = *(void *)(v4 - 16);
      size_t v5 = *(void *)(v4 - 8);
      sub_100224394();
      uint64_t v12 = *(void *)(v3 - 16);
      uint64_t v11 = *(void *)(v3 - 8);
      unint64_t v13 = v9;
      uint64_t v14 = BYTE6(v10);
      if (v6 < 0)
      {
        if ((v12 & 0x8000000000000000) == 0 || HIDWORD(v5) - v5 != HIDWORD(v11) - v11) {
          break;
        }
        uint64_t v18 = v6 & 0x7FFFFFFFFFFFFFFFLL;
        v12 &= ~0x8000000000000000;
        if (v7 != v10
          || (v8 == WORD2(v10) ? (BOOL v19 = v9 == BYTE6(v10)) : (BOOL v19 = 0), v19 ? (v20 = v18 == v12) : (v20 = 0), !v20))
        {
          uint64_t v21 = HIDWORD(v10) & 0xFFFFFF;
          swift_beginAccess();
          sub_100224854();
LABEL_29:
          sub_1001F969C();
          if (memcmp((const void *)v13, (const void *)(*(void *)(v12 + 24)+ (v14 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v21 << 8))+ v11), v5))
          {
            break;
          }
        }
      }
      else
      {
        if (v12 < 0 || HIDWORD(v5) - v5 != HIDWORD(v11) - v11) {
          break;
        }
        if (v7 != v10
          || (v8 == WORD2(v10) ? (v15 = v9 == BYTE6(v10)) : (v15 = 0), v15 ? (BOOL v16 = v6 == v12) : (BOOL v16 = 0), !v16))
        {
          sub_1002247AC();
          LOWORD(v21) = v17;
          swift_beginAccess();
          sub_100224854();
          goto LABEL_29;
        }
      }
      v3 += 24;
      v4 += 24;
      --v0;
    }
    while (v0);
  }
  sub_100224AAC();
}

uint64_t sub_10021E990(uint64_t a1, uint64_t a2)
{
  return sub_100221A00(a1, a2, (uint64_t (*)(uint64_t, uint64_t))&String.uppercased());
}

void sub_10021E9A8()
{
  sub_1001FE5B4();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4 != *(void *)(v3 + 16) || !v4 || v2 == v3) {
    goto LABEL_208;
  }
  uint64_t v5 = v2 + 32;
  uint64_t v6 = v3 + 32;
  v597 = &__dst[136];
  v584 = &v769[136];
  v565 = &v765[136];
  v571 = &v766[136];
  for (uint64_t i = v4 - 1; ; uint64_t i = v760 - 1)
  {
    sub_10013AE3C(v5, (uint64_t)v772);
    sub_10013AE3C(v6, (uint64_t)v773);
    sub_10013AE3C((uint64_t)v772, (uint64_t)v774);
    sub_100224898((uint64_t)v774);
    uint64_t v758 = v6;
    uint64_t v759 = v5;
    uint64_t v760 = i;
    if (!v53) {
      break;
    }
    unsigned __int16 v8 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v774);
    uint64_t v10 = *v8;
    uint64_t v9 = v8[1];
    uint64_t v11 = v8[2];
    uint64_t v12 = v8[4];
    uint64_t v692 = v8[3];
    uint64_t v698 = v8[5];
    uint64_t v642 = v8[7];
    uint64_t v737 = v8[6];
    uint64_t v744 = v8[8];
    uint64_t v13 = v8[10];
    uint64_t v751 = v8[9];
    uint64_t v14 = v8[11];
    uint64_t v724 = v8[13];
    uint64_t v731 = v8[12];
    uint64_t v717 = v8[14];
    sub_10013AE3C((uint64_t)v773, (uint64_t)v769);
    sub_100224898((uint64_t)v769);
    if (!v53) {
      goto LABEL_208;
    }
    BOOL v15 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v769);
    uint64_t v16 = v15[1];
    uint64_t v17 = v15[2];
    uint64_t v18 = v15[4];
    uint64_t v624 = v15[5];
    uint64_t v632 = *v15;
    uint64_t v603 = v15[7];
    uint64_t v613 = v15[6];
    uint64_t v755 = v15[8];
    uint64_t v704 = v15[10];
    uint64_t v710 = v15[9];
    uint64_t v677 = v15[11];
    uint64_t v685 = v15[3];
    uint64_t v659 = v15[13];
    uint64_t v668 = v15[12];
    uint64_t v651 = v15[14];
    sub_10013AF38((uint64_t)v773, sub_100136870);
    sub_10013AF38((uint64_t)v772, sub_100136870);
    sub_10013AF38((uint64_t)v773, sub_100136870);
    sub_10013AF38((uint64_t)v772, sub_100136870);
    if ((sub_10021E9A8(v10, v632) & 1) == 0) {
      goto LABEL_206;
    }
    BOOL v19 = v9 == v16 && v11 == v17;
    if (!v19 && (sub_1005E3290() & 1) == 0) {
      goto LABEL_206;
    }
    uint64_t v20 = v12;
    uint64_t v21 = v13;
    if (!v12)
    {
      uint64_t v0 = v698;
      uint64_t v22 = v14;
      if (v18)
      {
LABEL_190:
        *(void *)__dst = v692;
        *(void *)&__dst[8] = v12;
        *(void *)&__dst[16] = v0;
        *(void *)&void __dst[24] = v737;
        *(void *)&__dst[32] = v642;
        *(void *)&__dst[40] = v744;
        *(void *)&__dst[48] = v751;
        *(void *)&__dst[56] = v13;
        *(void *)&__dst[64] = v22;
        *(void *)&__dst[72] = v731;
        *(void *)&__dst[80] = v724;
        *(void *)&__dst[88] = v717;
        *(void *)&__dst[96] = v685;
        *(void *)&__dst[104] = v18;
        *(void *)&__dst[112] = v624;
        *(void *)&__dst[120] = v613;
        *(void *)&__dst[128] = v603;
        *(void *)&__dst[136] = v755;
        *(void *)&__dst[144] = v710;
        *(void *)&__dst[152] = v704;
        *(void *)&__dst[160] = v677;
        *(void *)&__dst[168] = v668;
        *(void *)&__dst[176] = v659;
        *(void *)&__dst[184] = v651;
        sub_100136C1C(v692, v12, v0, v737, v642, v744, v751, v13, v22, v731, v724, v717);
        sub_100136C1C(v685, v18, v624, v613, v603, v755, v710, v704, v677, v668, v659, v651);
        sub_100223C60((uint64_t)__dst);
        goto LABEL_206;
      }
LABEL_181:
      sub_10013AF38((uint64_t)v773, sub_100061440);
      sub_100224368();
      sub_100224880();
      goto LABEL_182;
    }
    uint64_t v0 = v698;
    uint64_t v22 = v14;
    if (!v18) {
      goto LABEL_190;
    }
    uint64_t v23 = v642;
    sub_100136C1C(v692, v12, v698, v737, v642, v744, v751, v13, v14, v731, v724, v717);
    uint64_t v0 = v685;
    uint64_t v24 = sub_100224848();
    uint64_t v25 = v613;
    uint64_t v26 = v603;
    sub_100136C1C(v24, v27, v624, v613, v603, v755, v710, v704, v677, v668, v659, v651);
    sub_100224848();
    sub_100221B3C();
    if ((v28 & 1) == 0 || (uint64_t v28 = sub_100222314(), (v28 & 1) == 0))
    {
      uint64_t v350 = sub_100224468(v28, v29, v30, v31, v32, v33, v34, v35, v438, v464, v486, v508, v526, v532, v538, v544, v551, v558, (uint64_t)v565,
               (uint64_t)v571,
               v577,
               (uint64_t)v584,
               v14,
               (uint64_t)v597,
               v603,
               v613,
               v624,
               v632,
               v642,
               v651,
               v659,
               v668,
               v677,
               v685);
      sub_1000617EC(v350, v351, v352, v353, v26, v755, v710, v704, v454, v478, v500, v519);
      uint64_t v362 = sub_1002245A8(v354, v355, v356, v357, v358, v359, v360, v361, v455, v479, v501, v520, v530, v536, v542, v548, v555, v562, v569,
               v575,
               v581,
               v588,
               v594,
               v601,
               v610,
               v621,
               v630,
               v639,
               v648,
               v657,
               v666,
               v675,
               v683,
               v691,
               v692);
      uint64_t v366 = v23;
      uint64_t v367 = v744;
      uint64_t v368 = v751;
      uint64_t v369 = v21;
LABEL_193:
      sub_1000617EC(v362, v363, v364, v365, v366, v367, v368, v369, v456, v480, v502, v521);
      goto LABEL_206;
    }
    if (v642 == 1)
    {
      if (v603 != 1) {
        goto LABEL_192;
      }
      uint64_t v36 = sub_100224468(v28, v29, v30, v31, v32, v33, v34, v35, v438, v464, v486, v508, v526, v532, v538, v544, v551, v558, (uint64_t)v565,
              (uint64_t)v571,
              v577,
              (uint64_t)v584,
              v14,
              (uint64_t)v597,
              1,
              v613,
              v624,
              v632,
              v642,
              v651,
              v659,
              v668,
              v677,
              v685);
      sub_1000617EC(v36, v37, v38, v39, 1, v755, v710, v704, v439, v465, v487, v509);
      uint64_t v48 = sub_1002245A8(v40, v41, v42, v43, v44, v45, v46, v47, v440, v466, v488, v510, v527, v533, v539, v545, v552, v559, v566,
              v572,
              v578,
              v585,
              v591,
              v598,
              v604,
              v614,
              v625,
              v633,
              v643,
              v652,
              v660,
              v669,
              v678,
              v686,
              v692);
      sub_1000617EC(v48, v49, v50, v51, 1, v744, v751, v21, v441, v467, v489, v511);
      goto LABEL_181;
    }
    if (v603 == 1)
    {
LABEL_192:
      *(void *)__dst = v737;
      *(void *)&__dst[8] = v642;
      *(void *)&__dst[16] = v744;
      *(void *)&void __dst[24] = v751;
      *(void *)&__dst[32] = v21;
      *(void *)&__dst[40] = v14;
      *(void *)&__dst[48] = v731;
      *(void *)&__dst[56] = v724;
      *(void *)&__dst[64] = v717;
      *(void *)&__dst[72] = v613;
      *(void *)&__dst[80] = v603;
      *(void *)&__dst[88] = v755;
      *(void *)&__dst[96] = v710;
      *(void *)&__dst[104] = v704;
      *(void *)&__dst[112] = v677;
      *(void *)&__dst[120] = v668;
      *(void *)&__dst[128] = v659;
      *(void *)&__dst[136] = v651;
      sub_100136AB8(v737, v642, v744, v751, v21, v14, v731, v724, v717);
      sub_100136AB8(v613, v603, v755, v710, v704, v677, v668, v659, v651);
      v383 = sub_100223D24((uint64_t *)__dst);
      uint64_t v391 = sub_100224D28((uint64_t)v383, v384, v385, v386, v387, v388, v389, v390, v457, v464, v486, v508, v526, v532, v538, v544, v551, v20, (uint64_t)v565,
               (uint64_t)v571,
               v21,
               (uint64_t)v584,
               v14,
               (uint64_t)v597,
               v603,
               v613,
               v624,
               v18,
               v642,
               v651,
               v659,
               v668,
               v677,
               v685);
      sub_1000617EC(v391, v392, v393, v25, v26, v755, v710, v704, v458, v481, v503, v522);
      uint64_t v502 = v724;
      uint64_t v521 = v717;
      uint64_t v365 = v737;
      uint64_t v456 = v595;
      uint64_t v480 = v731;
      uint64_t v362 = v692;
      uint64_t v364 = v698;
      uint64_t v363 = v563;
      uint64_t v366 = v649;
      uint64_t v367 = v744;
      uint64_t v368 = v751;
      uint64_t v369 = v582;
      goto LABEL_193;
    }
    v811[0] = v737;
    v811[1] = v642;
    v811[2] = v744;
    v811[3] = v751;
    v811[4] = v21;
    v811[5] = v14;
    v811[6] = v731;
    v811[7] = v724;
    v811[8] = v717;
    v812[0] = v613;
    v812[1] = v603;
    v812[2] = v755;
    v812[3] = v710;
    v812[4] = v704;
    uint64_t v0 = v677;
    v812[5] = v677;
    v812[6] = v668;
    v812[7] = v659;
    v812[8] = v651;
    sub_100136AB8(v737, v642, v744, v751, v21, v14, v731, v724, v717);
    sub_1002248B0();
    sub_100136AB8(v116, v117, v118, v119, v120, v121, v122, v123, v651);
    LODWORD(v551) = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v811, v812);
    sub_1002248B0();
    sub_100061688(v124, v125, v126, v127, v128, v129, v130, v131, v651);
    uint64_t v132 = sub_100061688(v737, v642, v744, v751, v21, v14, v731, v724, v717);
    uint64_t v140 = sub_100224D28(v132, v133, v134, v135, v136, v137, v138, v139, v446, v464, v486, v508, v526, v532, v538, v544, v551, v20, (uint64_t)v565,
             (uint64_t)v571,
             v21,
             (uint64_t)v584,
             v14,
             (uint64_t)v597,
             v603,
             v613,
             v624,
             v18,
             v642,
             v651,
             v659,
             v668,
             v677,
             v685);
    sub_1000617EC(v140, v141, v142, v617, v607, v755, v710, v704, v447, v472, v494, v516);
    sub_1000617EC(v692, v558, v698, v737, v646, v744, v751, v577, v14, v731, v724, v717);
    sub_10013AF38((uint64_t)v773, sub_100061440);
    sub_100224368();
    sub_100224880();
    sub_100224368();
    if ((v551 & 1) == 0) {
      goto LABEL_208;
    }
LABEL_183:
    if (!v760) {
      goto LABEL_208;
    }
    uint64_t v6 = v758 + 184;
    uint64_t v5 = v759 + 184;
  }
  char v52 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v774);
  sub_10013AE3C((uint64_t)v773, (uint64_t)v771);
  sub_100224898((uint64_t)v771);
  if (v53) {
    goto LABEL_208;
  }
  uint64_t v54 = (void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v771);
  uint64_t v55 = *v52;
  v752 = v52;
  v756 = v54;
  uint64_t v56 = *v54;
  unint64_t v57 = (unint64_t)*v52 >> 62;
  uint64_t v58 = *v54 >> 62;
  if (!v57)
  {
    if (v58) {
      goto LABEL_208;
    }
    sub_100224A94(v55);
    BOOL v111 = v53 && v109 == v110;
    if (!v111 && (sub_1005E3290() & 1) == 0) {
      goto LABEL_208;
    }
    BOOL v112 = !v0 && v5 == v56;
    if (!v112 && (sub_100224B68() & 1) == 0) {
      goto LABEL_208;
    }
    goto LABEL_70;
  }
  if (v57 != 1)
  {
    if (v58 != 2) {
      goto LABEL_208;
    }
    sub_100224808(v55);
    BOOL v115 = v53 && v113 == v114;
    if (!v115 && (sub_1005E3290() & 1) == 0 || v5 != 2) {
      goto LABEL_208;
    }
LABEL_70:
    sub_10013AF38((uint64_t)v773, sub_100136870);
    sub_100224368();
    sub_100224880();
    sub_100224368();
LABEL_136:
    uint64_t v282 = v52[4];
    uint64_t v284 = v52[5];
    uint64_t v283 = v52[6];
    uint64_t v286 = v52[7];
    uint64_t v285 = v52[8];
    uint64_t v287 = v52[9];
    uint64_t v735 = v52[10];
    uint64_t v288 = v756[4];
    uint64_t v289 = v756[5];
    uint64_t v290 = v756[6];
    uint64_t v291 = v756[7];
    uint64_t v714 = v756[8];
    uint64_t v721 = v285;
    uint64_t v741 = v756[9];
    uint64_t v747 = v287;
    uint64_t v728 = v756[10];
    sub_100221B3C();
    if ((v292 & 1) == 0 || (sub_100222314() & 1) == 0) {
      goto LABEL_206;
    }
    if (v284)
    {
      if (!v289) {
        goto LABEL_206;
      }
      BOOL v293 = v282 == v288 && v284 == v289;
      if (!v293 && (sub_1005E3290() & 1) == 0) {
        goto LABEL_206;
      }
    }
    else if (v289)
    {
      goto LABEL_206;
    }
    if (v286)
    {
      if (!v291) {
        goto LABEL_206;
      }
      BOOL v294 = v283 == v290 && v286 == v291;
      if (!v294 && (sub_1005E3290() & 1) == 0) {
        goto LABEL_206;
      }
    }
    else if (v291)
    {
      goto LABEL_206;
    }
    if (v747)
    {
      v295 = v752;
      if (!v741) {
        goto LABEL_206;
      }
      BOOL v296 = v721 == v714 && v747 == v741;
      if (!v296 && (sub_1005E3290() & 1) == 0) {
        goto LABEL_206;
      }
    }
    else
    {
      v295 = v752;
      if (v741) {
        goto LABEL_206;
      }
    }
    if (v735 != v728) {
      goto LABEL_206;
    }
    uint64_t v297 = v295[11];
    uint64_t v298 = v295[12];
    uint64_t v299 = v295[13];
    uint64_t v300 = v295[14];
    uint64_t v301 = v295[15];
    uint64_t v302 = v295[16];
    uint64_t v303 = v295[17];
    uint64_t v304 = v295[18];
    uint64_t v305 = v295[19];
    uint64_t v306 = v295[20];
    uint64_t v307 = v295[21];
    uint64_t v308 = v756[11];
    uint64_t v309 = v756[12];
    uint64_t v311 = v756[13];
    uint64_t v310 = v756[14];
    uint64_t v312 = v756[15];
    uint64_t v313 = v756[16];
    uint64_t v0 = v756[17];
    uint64_t v314 = v756[18];
    uint64_t v315 = v756[19];
    uint64_t v316 = v756[20];
    uint64_t v317 = v756[21];
    if (v298 == 1)
    {
      if (v309 != 1) {
        goto LABEL_191;
      }
      goto LABEL_181;
    }
    if (v309 == 1)
    {
LABEL_191:
      *(void *)__dst = v297;
      *(void *)&__dst[8] = v298;
      *(void *)&__dst[16] = v299;
      *(void *)&void __dst[24] = v300;
      *(void *)&__dst[32] = v301;
      *(void *)&__dst[40] = v302;
      *(void *)&__dst[48] = v303;
      *(void *)&__dst[56] = v304;
      *(void *)&__dst[64] = v305;
      *(void *)&__dst[72] = v306;
      *(void *)&__dst[80] = v307;
      *(void *)&__dst[88] = v308;
      *(void *)&__dst[96] = v309;
      *(void *)&__dst[104] = v311;
      *(void *)&__dst[112] = v310;
      uint64_t v750 = v312;
      *(void *)&__dst[120] = v312;
      *(void *)&__dst[128] = v313;
      *(void *)&__dst[136] = v0;
      *(void *)&__dst[144] = v314;
      *(void *)&__dst[152] = v315;
      *(void *)&__dst[160] = v316;
      *(void *)&__dst[168] = v317;
      uint64_t v370 = sub_100224BC8();
      uint64_t v371 = v316;
      uint64_t v373 = v372;
      uint64_t v375 = v374;
      sub_100136A14(v370, v376, v377, v378, v379, v380, v381, v382, v437, v463, v485);
      sub_100136A14(v375, v309, v311, v310, v750, v313, v0, v314, v315, v371, v373);
      sub_100223DC8((uint64_t)__dst);
      goto LABEL_206;
    }
    if (v298)
    {
      if (!v309) {
        goto LABEL_206;
      }
      if (v297 != v308 || v298 != v309)
      {
        uint64_t v742 = v299;
        uint64_t v748 = v756[15];
        uint64_t v729 = v300;
        uint64_t v736 = v756[16];
        uint64_t v708 = v301;
        uint64_t v715 = v756[17];
        uint64_t v696 = v756[18];
        uint64_t v702 = v756[13];
        uint64_t v319 = v304;
        uint64_t v722 = v756[19];
        uint64_t v320 = v303;
        uint64_t v321 = v302;
        uint64_t v322 = v305;
        uint64_t v323 = v306;
        uint64_t v753 = v307;
        uint64_t v324 = v756[21];
        char v325 = sub_1005E3290();
        uint64_t v307 = v753;
        uint64_t v317 = v324;
        uint64_t v306 = v323;
        uint64_t v305 = v322;
        uint64_t v299 = v742;
        uint64_t v312 = v748;
        uint64_t v302 = v321;
        uint64_t v311 = v702;
        uint64_t v301 = v708;
        uint64_t v303 = v320;
        uint64_t v315 = v722;
        uint64_t v300 = v729;
        uint64_t v304 = v319;
        uint64_t v314 = v696;
        uint64_t v0 = v715;
        uint64_t v313 = v736;
        if ((v325 & 1) == 0) {
          goto LABEL_206;
        }
      }
    }
    else if (v309)
    {
      goto LABEL_206;
    }
    if (v300 == 1)
    {
      if (v310 != 1) {
        goto LABEL_194;
      }
      goto LABEL_181;
    }
    if (v310 == 1)
    {
LABEL_194:
      *(void *)__dst = v299;
      *(void *)&__dst[8] = v300;
      *(void *)&__dst[16] = v301;
      *(void *)&void __dst[24] = v302;
      *(void *)&__dst[32] = v303;
      *(void *)&__dst[40] = v304;
      *(void *)&__dst[48] = v305;
      *(void *)&__dst[56] = v306;
      *(void *)&__dst[64] = v307;
      *(void *)&__dst[72] = v311;
      *(void *)&__dst[80] = v310;
      *(void *)&__dst[88] = v312;
      *(void *)&__dst[96] = v313;
      *(void *)&__dst[104] = v0;
      *(void *)&__dst[112] = v314;
      *(void *)&__dst[120] = v315;
      *(void *)&__dst[128] = v316;
      *(void *)&__dst[136] = v317;
      uint64_t v394 = v317;
      sub_100136AB8(v299, v300, v301, v302, v303, v304, v305, v306, v307);
      sub_100224C3C();
      sub_100136AB8(v395, v396, v397, v313, v0, v314, v315, v316, v394);
      sub_100223D24((uint64_t *)__dst);
      sub_10013AF38((uint64_t)v773, sub_100061440);
      sub_100224368();
      sub_100224880();
      goto LABEL_207;
    }
    v775[0] = v299;
    v775[1] = v300;
    uint64_t v730 = v300;
    v775[2] = v301;
    v775[3] = v302;
    v775[4] = v303;
    v775[5] = v304;
    v775[6] = v305;
    v775[7] = v306;
    v775[8] = v307;
    v776[0] = v311;
    v776[1] = v310;
    uint64_t v743 = v299;
    uint64_t v749 = v312;
    v776[2] = v312;
    v776[3] = v313;
    uint64_t v709 = v301;
    uint64_t v716 = v0;
    v776[4] = v0;
    uint64_t v326 = v314;
    v776[5] = v314;
    v776[6] = v315;
    v776[7] = v316;
    v776[8] = v317;
    uint64_t v327 = sub_100224BC8();
    uint64_t v697 = v314;
    uint64_t v703 = v311;
    uint64_t v665 = v329;
    uint64_t v674 = v328;
    uint64_t v609 = v298;
    uint64_t v620 = v330;
    uint64_t v331 = v315;
    uint64_t v723 = v315;
    uint64_t v332 = v330;
    uint64_t v690 = v333;
    uint64_t v335 = v334;
    uint64_t v629 = v334;
    uint64_t v638 = v336;
    uint64_t v337 = v316;
    uint64_t v590 = v316;
    uint64_t v754 = v338;
    uint64_t v757 = v339;
    uint64_t v341 = v340;
    uint64_t v656 = v340;
    uint64_t v342 = v336;
    sub_100136A14(v327, v343, v344, v345, v346, v328, v329, v330, v437, v463, v485);
    sub_100136A14(v342, v309, v703, v310, v749, v313, v716, v326, v331, v337, v341);
    sub_100136AB8(v743, v730, v709, v674, v665, v332, v690, v335, v754);
    sub_100224C3C();
    sub_100136AB8(v347, v348, v349, v313, v716, v697, v723, v590, v656);
    BOOL v647 = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v775, v776);
    sub_100061688(v703, v310, v749, v313, v716, v697, v723, v590, v656);
    uint64_t v0 = v665;
    sub_100061688(v743, v730, v709, v674, v665, v620, v690, v629, v754);
    sub_1000615E4(v638, v309, v703, v310, v749, v313, v716, v697, v723, v590, v656);
    sub_1000615E4(v757, v609, v743, v730, v709, v674, v665, v620, v690, v629, v754);
    sub_10013AF38((uint64_t)v773, sub_100061440);
    sub_100224368();
    sub_100224880();
    if (!v647) {
      goto LABEL_207;
    }
LABEL_182:
    sub_10013AF38((uint64_t)v772, sub_100061440);
    goto LABEL_183;
  }
  memcpy(__dst, (const void *)((v55 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
  if (v58 != 1) {
    goto LABEL_208;
  }
  memcpy(v769, (const void *)((v56 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(v769));
  BOOL v59 = *(void *)__dst == *(void *)v769 && *(void *)&__dst[8] == *(void *)&v769[8];
  if (!v59 && (sub_1005E3290() & 1) == 0) {
    goto LABEL_208;
  }
  sub_100224C70();
  v804[0] = *(_OWORD *)&__dst[16];
  v804[1] = *(_OWORD *)&__dst[32];
  int v805 = *(_DWORD *)&__dst[48];
  __int16 v806 = v60;
  char v807 = *(unsigned char *)(v61 + 2);
  sub_100224528(*(__n128 *)&__dst[56]);
  sub_100224C70();
  int v62 = *(_DWORD *)&v769[48];
  LOBYTE(v63) = *(unsigned char *)(v63 + 2);
  v808[0] = *(_OWORD *)&v769[16];
  v808[1] = *(_OWORD *)&v769[32];
  *(unsigned char *)(v64 + 166) = v63;
  __int16 v810 = v65;
  int v809 = v62;
  sub_1002243C0((uint64_t)v769);
  sub_10013AF38((uint64_t)v773, sub_100136870);
  sub_100224368();
  sub_100224880();
  sub_100224368();
  sub_100223E88((uint64_t)__dst);
  sub_100223E88((uint64_t)v769);
  if (!static Envelope.__derived_struct_equals(_:_:)(v804, (uint64_t)v808)) {
    goto LABEL_205;
  }
  sub_10013AE3C((uint64_t)v597, (uint64_t)v768);
  sub_100224898((uint64_t)v768);
  if (v53)
  {
    uint64_t v66 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v768);
    uint64_t v67 = *v66;
    uint64_t v615 = v66[2];
    uint64_t v626 = v66[1];
    uint64_t v68 = v66[4];
    uint64_t v687 = v66[3];
    uint64_t v69 = v66[5];
    uint64_t v634 = v66[6];
    uint64_t v605 = v66[7];
    uint64_t v70 = v66[10];
    uint64_t v745 = v66[9];
    uint64_t v725 = v66[11];
    uint64_t v732 = v66[8];
    uint64_t v711 = v66[13];
    uint64_t v718 = v66[12];
    uint64_t v705 = v66[14];
    sub_10013AE3C((uint64_t)v584, (uint64_t)v765);
    sub_100224898((uint64_t)v765);
    if (!v53) {
      goto LABEL_205;
    }
    uint64_t v71 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v765);
    uint64_t v73 = *v71;
    uint64_t v72 = v71[1];
    uint64_t v74 = v71[2];
    uint64_t v75 = v71[4];
    uint64_t v590 = v71[5];
    uint64_t v577 = v71[6];
    uint64_t v558 = v71[7];
    uint64_t v693 = v71[8];
    uint64_t v699 = v71[9];
    uint64_t v738 = v71[10];
    uint64_t v670 = v71[11];
    uint64_t v679 = v71[3];
    uint64_t v653 = v71[13];
    uint64_t v661 = v71[12];
    uint64_t v644 = v71[14];
    sub_10013AF38((uint64_t)v597, sub_100136870);
    sub_10013AF38((uint64_t)v584, sub_100136870);
    if ((sub_10021E9A8(v67, v73) & 1) == 0) {
      goto LABEL_203;
    }
    BOOL v76 = v626 == v72 && v615 == v74;
    if (!v76 && (sub_1005E3290() & 1) == 0) {
      goto LABEL_203;
    }
    uint64_t v77 = v68;
    if (v68)
    {
      if (!v75) {
        goto LABEL_197;
      }
      sub_100224964();
      uint64_t v78 = v605;
      sub_100136C1C(v687, v68, v69, v634, v605, v79, v745, v70, v437, v463, v485, v507);
      uint64_t v80 = sub_100224848();
      uint64_t v81 = v577;
      uint64_t v82 = v558;
      sub_100136C1C(v80, v83, v590, v577, v558, v693, v699, v738, v670, v661, v653, v644);
      sub_100224848();
      sub_100221B3C();
      if ((v84 & 1) == 0 || (uint64_t v84 = sub_100222314(), (v84 & 1) == 0))
      {
        uint64_t v398 = sub_1002244F0(v84, v85, v86, v87, v88, v89, v90, v91, v442, v468, v490, v512, v526, v532, v538, v544, v70, v558, (uint64_t)v565,
                 (uint64_t)v571,
                 v577,
                 (uint64_t)v584,
                 v590,
                 (uint64_t)v597,
                 v605,
                 v615,
                 v626,
                 v634,
                 v644,
                 v653,
                 v661,
                 v670,
                 v679);
        sub_1000617EC(v398, v399, v400, v401, v82, v693, v699, v738, v459, v482, v504, v523);
        uint64_t v410 = sub_100224C90(v402, v403, v404, v405, v406, v407, v408, v409, v725, v718, v711, v705, v531, v537, v543, v549, v556, v564, v570,
                 v576,
                 v583,
                 v589,
                 v596,
                 v602,
                 v611,
                 v622,
                 v631,
                 v640,
                 v650,
                 v658,
                 v667,
                 v676,
                 v684,
                 v687);
        uint64_t v414 = v78;
        goto LABEL_202;
      }
      if (v605 != 1)
      {
        if (v558 == 1)
        {
LABEL_201:
          *(void *)v766 = v634;
          *(void *)&v766[8] = v605;
          *(void *)&v766[16] = v732;
          *(void *)&v766[24] = v745;
          *(void *)&v766[32] = v70;
          *(void *)&v766[40] = v725;
          *(void *)&v766[48] = v718;
          *(void *)&v766[56] = v711;
          *(void *)&v766[64] = v705;
          *(void *)&v766[72] = v577;
          *(void *)&v766[80] = v558;
          *(void *)&v766[88] = v693;
          *(void *)&v766[96] = v699;
          *(void *)&v766[104] = v738;
          *(void *)&v766[112] = v670;
          *(void *)&v766[120] = v661;
          *(void *)&v766[128] = v653;
          *(void *)&v766[136] = v644;
          sub_100136AB8(v634, v605, v732, v745, v70, v725, v718, v711, v705);
          sub_100136AB8(v577, v558, v693, v699, v738, v670, v661, v653, v644);
          v424 = sub_100223D24((uint64_t *)v766);
          uint64_t v432 = sub_100224A10((uint64_t)v424, v425, v426, v427, v428, v429, v430, v431, v461, v468, v490, v512, v526, v532, v538, v69, v70, v558, (uint64_t)v565,
                   (uint64_t)v571,
                   v577,
                   (uint64_t)v584,
                   v590,
                   (uint64_t)v597,
                   v605,
                   v77,
                   v75,
                   v634,
                   v644,
                   v653,
                   v661,
                   v670,
                   v679);
          sub_1000617EC(v432, v433, v434, v81, v82, v693, v699, v738, v462, v484, v506, v525);
          uint64_t v505 = v711;
          uint64_t v524 = v705;
          uint64_t v460 = v725;
          uint64_t v483 = v718;
          uint64_t v410 = v687;
          uint64_t v414 = v612;
          uint64_t v411 = v623;
          uint64_t v412 = v550;
          uint64_t v413 = v641;
LABEL_202:
          sub_1000617EC(v410, v411, v412, v413, v414, v732, v745, v557, v460, v483, v505, v524);
          goto LABEL_203;
        }
        v802[0] = v634;
        v802[1] = v605;
        v802[2] = v732;
        v802[3] = v745;
        v802[4] = v70;
        v802[5] = v725;
        v802[6] = v718;
        v802[7] = v711;
        v802[8] = v705;
        v803[0] = v577;
        v803[1] = v558;
        v803[2] = v693;
        v803[3] = v699;
        v803[4] = v738;
        v803[5] = v670;
        v803[6] = v661;
        v803[7] = v653;
        v803[8] = v644;
        sub_100136AB8(v634, v605, v732, v745, v70, v725, v718, v711, v705);
        sub_100224C5C();
        sub_100136AB8(v177, v178, v179, v180, v181, v182, v183, v184, v644);
        LODWORD(v538) = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v802, v803);
        sub_100224C5C();
        sub_100061688(v185, v186, v187, v188, v189, v190, v191, v192, v644);
        uint64_t v193 = v605;
        uint64_t v194 = sub_100061688(v634, v605, v732, v745, v70, v725, v718, v711, v705);
        uint64_t v202 = sub_100224A10(v194, v195, v196, v197, v198, v199, v200, v201, v448, v468, v490, v512, v526, v532, v538, v69, v70, v558, (uint64_t)v565,
                 (uint64_t)v571,
                 v577,
                 (uint64_t)v584,
                 v590,
                 (uint64_t)v597,
                 v605,
                 v77,
                 v75,
                 v634,
                 v644,
                 v653,
                 v661,
                 v670,
                 v679);
        sub_1000617EC(v202, v203, v204, v580, v561, v693, v699, v738, v449, v473, v495, v517);
        sub_1000617EC(v687, v619, v547, v637, v193, v732, v745, v70, v725, v718, v711, v705);
        uint64_t v205 = sub_10013AF38(v587, sub_100061440);
        sub_100224BE8(v205, v206, v207, v208, v209, v210, v211, v212, v450, v474, v496, v518, v529, v535, v541, v547, v554, v561, v568,
          v574,
          v580,
          v587,
          v593,
          v600);
        sub_100224004((uint64_t)v769);
        sub_100224004((uint64_t)__dst);
        if ((v538 & 1) == 0) {
          goto LABEL_206;
        }
        goto LABEL_135;
      }
      if (v558 != 1) {
        goto LABEL_201;
      }
      uint64_t v92 = sub_1002244F0(v84, v85, v86, v87, v88, v89, v90, v91, v442, v468, v490, v512, v526, v532, v538, v544, v70, 1, (uint64_t)v565,
              (uint64_t)v571,
              v577,
              (uint64_t)v584,
              v590,
              (uint64_t)v597,
              v605,
              v615,
              v626,
              v634,
              v644,
              v653,
              v661,
              v670,
              v679);
      sub_1000617EC(v92, v93, v94, v95, 1, v693, v699, v738, v443, v469, v491, v513);
      sub_100224964();
      uint64_t v104 = sub_100224C90(v96, v97, v98, v99, v100, v101, v102, v103, v444, v470, v492, v514, v528, v534, v540, v546, v553, v560, v567,
               v573,
               v579,
               v586,
               v592,
               v599,
               v606,
               v616,
               v627,
               v635,
               v645,
               v654,
               v662,
               v671,
               v680,
               v687);
      sub_1000617EC(v104, v105, v106, v107, 1, v108, v745, v551, v445, v471, v493, v515);
    }
    else if (v75)
    {
LABEL_197:
      *(void *)v766 = v687;
      *(void *)&v766[8] = v68;
      *(void *)&v766[16] = v69;
      *(void *)&v766[24] = v634;
      *(void *)&v766[32] = v605;
      *(void *)&v766[40] = v732;
      *(void *)&v766[48] = v745;
      *(void *)&v766[56] = v70;
      *(void *)&v766[64] = v725;
      *(void *)&v766[72] = v718;
      *(void *)&v766[80] = v711;
      *(void *)&v766[88] = v705;
      *(void *)&v766[96] = v679;
      *(void *)&v766[104] = v75;
      *(void *)&v766[112] = v590;
      *(void *)&v766[120] = v577;
      *(void *)&v766[128] = v558;
      *(void *)&v766[136] = v693;
      *(void *)&v766[144] = v699;
      *(void *)&v766[152] = v738;
      *(void *)&v766[160] = v670;
      *(void *)&v766[168] = v661;
      *(void *)&v766[176] = v653;
      *(void *)&v766[184] = v644;
      sub_100136C1C(v687, v68, v69, v634, v605, v732, v745, v70, v725, v718, v711, v705);
      sub_100136C1C(v679, v75, v590, v577, v558, v693, v699, v738, v670, v661, v653, v644);
      sub_100223C60((uint64_t)v766);
LABEL_203:
      uint64_t v436 = (uint64_t)v584;
      goto LABEL_204;
    }
    goto LABEL_132;
  }
  uint64_t v143 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v768);
  sub_10013AE3C((uint64_t)v584, (uint64_t)v767);
  sub_100224898((uint64_t)v767);
  if (v144) {
    goto LABEL_205;
  }
  uint64_t v145 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v767);
  uint64_t v146 = *(void *)v143;
  uint64_t v147 = *(void *)v145;
  uint64_t v148 = *(void *)v143 >> 62;
  uint64_t v149 = *(void *)v145 >> 62;
  if (!v148)
  {
    if (v149) {
      goto LABEL_205;
    }
    sub_100224A94(v146);
    BOOL v172 = v53 && v170 == v171;
    if (!v172 && (sub_1005E3290() & 1) == 0) {
      goto LABEL_205;
    }
    BOOL v173 = !v0 && v5 == v147;
    if (!v173 && (sub_100224B68() & 1) == 0) {
      goto LABEL_205;
    }
    goto LABEL_119;
  }
  if (v148 != 1)
  {
    if (v149 != 2) {
      goto LABEL_205;
    }
    sub_100224808(v146);
    BOOL v176 = v53 && v174 == v175;
    if (!v176 && (sub_1005E3290() & 1) == 0 || v5 != 2) {
      goto LABEL_205;
    }
LABEL_119:
    sub_10013AF38((uint64_t)v597, sub_100136870);
    sub_10013AF38((uint64_t)v584, sub_100136870);
LABEL_129:
    long long v221 = *(_OWORD *)(v143 + 32);
    long long v780 = *(_OWORD *)(v143 + 16);
    long long v781 = v221;
    long long v222 = *(_OWORD *)(v143 + 64);
    long long v782 = *(_OWORD *)(v143 + 48);
    long long v783 = v222;
    long long v223 = *(_OWORD *)(v145 + 32);
    long long v786 = *(_OWORD *)(v145 + 16);
    long long v787 = v223;
    long long v224 = *(_OWORD *)(v145 + 64);
    long long v788 = *(_OWORD *)(v145 + 48);
    uint64_t v225 = *(void *)(v143 + 80);
    uint64_t v779 = *(void *)(v143 + 8);
    uint64_t v784 = v225;
    uint64_t v226 = *(void *)(v145 + 8);
    uint64_t v227 = *(void *)(v145 + 80);
    long long v789 = v224;
    uint64_t v785 = v226;
    uint64_t v790 = v227;
    if (!static BodyStructure.Fields.__derived_struct_equals(_:_:)(&v779, &v785)) {
      goto LABEL_199;
    }
    uint64_t v228 = *(void *)(v143 + 88);
    uint64_t v229 = *(void *)(v143 + 96);
    uint64_t v230 = *(void *)(v143 + 104);
    uint64_t v231 = *(void *)(v143 + 112);
    uint64_t v232 = *(void *)(v143 + 120);
    uint64_t v233 = *(void *)(v143 + 128);
    uint64_t v234 = *(void *)(v143 + 136);
    uint64_t v235 = *(void *)(v143 + 144);
    uint64_t v236 = *(void *)(v143 + 152);
    uint64_t v237 = *(void *)(v143 + 160);
    uint64_t v238 = *(void *)(v143 + 168);
    uint64_t v240 = *(void *)(v145 + 88);
    uint64_t v239 = *(void *)(v145 + 96);
    uint64_t v242 = *(void *)(v145 + 104);
    uint64_t v241 = *(void *)(v145 + 112);
    uint64_t v244 = *(void *)(v145 + 120);
    uint64_t v243 = *(void *)(v145 + 128);
    uint64_t v246 = *(void *)(v145 + 136);
    uint64_t v245 = *(void *)(v145 + 144);
    uint64_t v248 = *(void *)(v145 + 152);
    uint64_t v247 = *(void *)(v145 + 160);
    uint64_t v249 = *(void *)(v145 + 168);
    if (v229 != 1)
    {
      if (v239 == 1)
      {
LABEL_198:
        uint64_t v761 = *(void *)(v145 + 96);
        *(void *)v766 = v228;
        *(void *)&v766[8] = v229;
        *(void *)&v766[16] = v230;
        *(void *)&v766[24] = v231;
        *(void *)&v766[32] = v232;
        *(void *)&v766[40] = v233;
        *(void *)&v766[48] = v234;
        *(void *)&v766[56] = v235;
        *(void *)&v766[64] = v236;
        *(void *)&v766[72] = v237;
        *(void *)&v766[80] = v238;
        *(void *)&v766[88] = v240;
        *(void *)&v766[96] = v239;
        *(void *)&v766[104] = v242;
        *(void *)&v766[112] = v241;
        *(void *)&v766[120] = v244;
        *(void *)&v766[128] = v243;
        *(void *)&v766[136] = v246;
        *(void *)&v766[144] = v245;
        *(void *)&v766[152] = v248;
        *(void *)&v766[160] = v247;
        *(void *)&v766[168] = v249;
        uint64_t v415 = v247;
        sub_100136A14(v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238);
        sub_100136A14(v240, v761, v242, v241, v244, v243, v246, v245, v248, v415, v249);
        sub_100223DC8((uint64_t)v766);
LABEL_199:
        uint64_t v416 = sub_10013AF38((uint64_t)v584, sub_100061440);
        sub_100224BE8(v416, v417, v418, v419, v420, v421, v422, v423, v437, v463, v485, v507, v526, v532, v538, v544, v551, v558, (uint64_t)v565,
          (uint64_t)v571,
          v577,
          (uint64_t)v584,
          v590,
          (uint64_t)v597);
        sub_100224004((uint64_t)v769);
        sub_100224004((uint64_t)__dst);
        goto LABEL_206;
      }
      v777[0] = v228;
      v777[1] = v229;
      v777[2] = v230;
      v777[3] = v231;
      v777[4] = v232;
      v777[5] = v233;
      v777[6] = v234;
      v777[7] = v235;
      v777[8] = v236;
      v777[9] = v237;
      v777[10] = v238;
      v778[0] = v240;
      v778[1] = v239;
      v778[2] = v242;
      v778[3] = v241;
      v778[4] = v244;
      v778[5] = v243;
      v778[6] = v246;
      v778[7] = v245;
      v778[8] = v248;
      v778[9] = v247;
      v778[10] = v249;
      uint64_t v727 = v231;
      uint64_t v734 = v228;
      uint64_t v713 = v229;
      uint64_t v720 = v230;
      uint64_t v695 = v232;
      uint64_t v701 = v234;
      uint64_t v707 = v233;
      uint64_t v682 = v236;
      uint64_t v689 = v235;
      uint64_t v664 = v238;
      uint64_t v673 = v237;
      sub_100136A14(v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238);
      uint64_t v258 = sub_1002243EC();
      sub_100136A14(v258, v259, v260, v261, v262, v263, v264, v265, v451, v475, v497);
      BOOL v740 = static BodyStructure.Singlepart.Extension.__derived_struct_equals(_:_:)(v777, v778);
      uint64_t v266 = sub_1002243EC();
      sub_1000615E4(v266, v267, v268, v269, v270, v271, v272, v273, v452, v476, v498);
      sub_1000615E4(v734, v713, v720, v727, v695, v707, v701, v689, v682, v673, v664);
      uint64_t v274 = sub_10013AF38((uint64_t)v584, sub_100061440);
      sub_100224BE8(v274, v275, v276, v277, v278, v279, v280, v281, v453, v477, v499, v507, v526, v532, v538, v544, v551, v558, (uint64_t)v565,
        (uint64_t)v571,
        v577,
        (uint64_t)v584,
        v590,
        (uint64_t)v597);
      sub_100224004((uint64_t)v769);
      sub_100224004((uint64_t)__dst);
      if (!v740) {
        goto LABEL_206;
      }
      goto LABEL_135;
    }
    if (v239 != 1) {
      goto LABEL_198;
    }
LABEL_132:
    uint64_t v250 = sub_10013AF38((uint64_t)v584, sub_100061440);
    sub_100224BE8(v250, v251, v252, v253, v254, v255, v256, v257, v437, v463, v485, v507, v526, v532, v538, v544, v551, v558, (uint64_t)v565,
      (uint64_t)v571,
      v577,
      (uint64_t)v584,
      v590,
      (uint64_t)v597);
    sub_100224004((uint64_t)v769);
    sub_100224004((uint64_t)__dst);
LABEL_135:
    char v52 = v752;
    if (*(void *)&__dst[320] != *(void *)&v769[320]) {
      goto LABEL_206;
    }
    goto LABEL_136;
  }
  memcpy(v766, (const void *)((v146 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(v766));
  if (v149 != 1) {
    goto LABEL_205;
  }
  memcpy(v765, (const void *)((v147 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(v765));
  BOOL v150 = *(void *)v766 == *(void *)v765 && *(void *)&v766[8] == *(void *)&v765[8];
  if (!v150 && (sub_1005E3290() & 1) == 0) {
    goto LABEL_205;
  }
  sub_100224C70();
  v795[0] = *(_OWORD *)&v766[16];
  v795[1] = *(_OWORD *)&v766[32];
  int v796 = *(_DWORD *)&v766[48];
  __int16 v797 = v151;
  char v798 = *(unsigned char *)(v152 + 2);
  sub_100224528(*(__n128 *)&v766[56]);
  sub_100224C70();
  int v153 = *(_DWORD *)&v765[48];
  LOBYTE(v154) = *(unsigned char *)(v154 + 2);
  v799[0] = *(_OWORD *)&v765[16];
  v799[1] = *(_OWORD *)&v765[32];
  *(unsigned char *)(v155 + 166) = v154;
  __int16 v801 = v156;
  int v800 = v153;
  sub_1002243C0((uint64_t)v765);
  sub_10013AF38((uint64_t)v597, sub_100136870);
  sub_10013AF38((uint64_t)v584, sub_100136870);
  sub_100223E88((uint64_t)v766);
  sub_100223E88((uint64_t)v765);
  if (!static Envelope.__derived_struct_equals(_:_:)(v795, (uint64_t)v799)) {
    goto LABEL_200;
  }
  sub_10013AE3C((uint64_t)v571, (uint64_t)v764);
  sub_100224898((uint64_t)v764);
  if (!v53)
  {
    v213 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v764);
    memcpy(v791, v213, sizeof(v791));
    sub_10013AE3C((uint64_t)v565, (uint64_t)v762);
    sub_100224898((uint64_t)v762);
    if (v214)
    {
LABEL_200:
      sub_100224004((uint64_t)v765);
      sub_100224004((uint64_t)v766);
      goto LABEL_203;
    }
    v215 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v762);
    memcpy(v792, v215, sizeof(v792));
    sub_10013AF38((uint64_t)v571, sub_100136870);
    sub_10013AF38((uint64_t)v565, sub_100136870);
    static BodyStructure.Singlepart.__derived_struct_equals(_:_:)();
    char v217 = v216;
    sub_10013AF38((uint64_t)v565, sub_100061440);
    uint64_t v218 = sub_100224848();
    sub_10013AF38(v218, v219);
    sub_100224004((uint64_t)v765);
    sub_100224004((uint64_t)v766);
    if ((v217 & 1) == 0) {
      goto LABEL_203;
    }
    goto LABEL_128;
  }
  v157 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v764);
  uint64_t v158 = *v157;
  uint64_t v551 = v157[1];
  uint64_t v159 = v157[2];
  uint64_t v700 = v157[3];
  uint64_t v706 = v157[5];
  uint64_t v712 = v157[6];
  uint64_t v160 = v157[8];
  uint64_t v719 = v157[7];
  uint64_t v726 = v157[4];
  uint64_t v162 = v157[9];
  uint64_t v161 = v157[10];
  uint64_t v688 = v157[12];
  uint64_t v694 = v157[11];
  uint64_t v672 = v157[14];
  uint64_t v681 = v157[13];
  sub_10013AE3C((uint64_t)v565, (uint64_t)v763);
  sub_100224898((uint64_t)v763);
  if (!v53) {
    goto LABEL_200;
  }
  uint64_t v628 = v160;
  uint64_t v636 = v162;
  v163 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v763);
  uint64_t v164 = v163[1];
  uint64_t v544 = *v163;
  uint64_t v165 = v163[2];
  uint64_t v166 = v163[4];
  uint64_t v733 = v163[3];
  uint64_t v739 = v163[6];
  uint64_t v608 = v163[5];
  uint64_t v618 = v163[7];
  uint64_t v746 = v163[8];
  uint64_t v655 = v163[9];
  uint64_t v663 = v163[10];
  uint64_t v590 = v163[11];
  uint64_t v577 = v163[12];
  uint64_t v558 = v163[13];
  uint64_t v538 = v163[14];
  sub_10013AF38((uint64_t)v571, sub_100136870);
  uint64_t v167 = sub_100224B9C();
  sub_10013AF38(v167, v168);
  if ((sub_10021E9A8(v158, v544) & 1) == 0) {
    goto LABEL_212;
  }
  BOOL v169 = v551 == v164 && v159 == v165;
  if (!v169 && (sub_1005E3290() & 1) == 0) {
    goto LABEL_212;
  }
  if (!v726)
  {
    uint64_t v220 = v166;
    if (v166) {
      goto LABEL_211;
    }
    sub_10013AF38((uint64_t)v565, sub_100061440);
    sub_10013AF38((uint64_t)v571, sub_100061440);
    sub_100224004((uint64_t)v765);
    sub_100224004((uint64_t)v766);
LABEL_128:
    uint64_t v436 = (uint64_t)v584;
    if (*(void *)&v766[320] != *(void *)&v765[320]) {
      goto LABEL_204;
    }
    goto LABEL_129;
  }
  if (v166)
  {
    v793[0] = v700;
    v793[1] = v726;
    v793[2] = v706;
    v793[3] = v712;
    v793[4] = v719;
    v793[5] = v628;
    v793[6] = v636;
    v793[7] = v161;
    v793[8] = v694;
    v793[9] = v688;
    v793[10] = v681;
    v793[11] = v672;
    v794[0] = v733;
    v794[1] = v166;
    v794[2] = v608;
    v794[3] = v739;
    v794[4] = v618;
    v794[5] = v746;
    v794[6] = v655;
    v794[7] = v663;
    v794[8] = v590;
    v794[9] = v577;
    v794[10] = v558;
    v794[11] = v538;
    uint64_t v532 = v166;
    sub_100136C1C(v700, v726, v706, v712, v719, v628, v636, v161, v694, v688, v681, v672);
    sub_100136C1C(v733, v166, v608, v739, v618, v746, v655, v663, v590, v577, v558, v538);
    LODWORD(v551) = static BodyStructure.Multipart.Extension.__derived_struct_equals(_:_:)(v793, v794);
    sub_1000617EC(v733, v166, v608, v739, v618, v746, v655, v663, v590, v577, v558, v538);
    sub_1000617EC(v700, v726, v706, v712, v719, v628, v636, v161, v694, v688, v681, v672);
    sub_10013AF38((uint64_t)v565, sub_100061440);
    sub_10013AF38((uint64_t)v571, sub_100061440);
    sub_100224004((uint64_t)v765);
    sub_100224004((uint64_t)v766);
    if ((v551 & 1) == 0)
    {
      uint64_t v436 = (uint64_t)v584;
      goto LABEL_204;
    }
    goto LABEL_128;
  }
  uint64_t v220 = 0;
LABEL_211:
  v762[0] = v700;
  v762[1] = v726;
  v762[2] = v706;
  v762[3] = v712;
  v762[4] = v719;
  v762[5] = v628;
  v762[6] = v636;
  v762[7] = v161;
  v762[8] = v694;
  v762[9] = v688;
  v762[10] = v681;
  v762[11] = v672;
  v762[12] = v733;
  v762[13] = v220;
  v762[14] = v608;
  v762[15] = v739;
  v762[16] = v618;
  v762[17] = v746;
  v762[18] = v655;
  v762[19] = v663;
  v762[20] = v590;
  v762[21] = v577;
  v762[22] = v558;
  v762[23] = v538;
  uint64_t v435 = v220;
  sub_100136C1C(v700, v726, v706, v712, v719, v628, v636, v161, v694, v688, v681, v672);
  sub_100136C1C(v733, v435, v608, v739, v618, v746, v655, v663, v590, v577, v558, v538);
  sub_100223C60((uint64_t)v762);
LABEL_212:
  sub_10013AF38((uint64_t)v565, sub_100061440);
  sub_10013AF38((uint64_t)v571, sub_100061440);
  sub_100224004((uint64_t)v765);
  sub_100224004((uint64_t)v766);
  uint64_t v436 = (uint64_t)v584;
LABEL_204:
  sub_10013AF38(v436, sub_100061440);
  sub_10013AF38((uint64_t)v597, sub_100061440);
LABEL_205:
  sub_100224004((uint64_t)v769);
  sub_100224004((uint64_t)__dst);
LABEL_206:
  sub_10013AF38((uint64_t)v773, sub_100061440);
  sub_100224368();
  sub_100224880();
LABEL_207:
  sub_10013AF38((uint64_t)v772, sub_100061440);
LABEL_208:
  sub_1001FE57C();
}

void sub_100220A2C()
{
  sub_1001F9760();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16) && v2 && v0 != v1)
  {
    uint64_t v3 = (char *)(v1 + 55);
    uint64_t v4 = (unsigned char *)(v0 + 55);
    do
    {
      uint64_t v5 = *(void *)(v4 - 23);
      uint64_t v6 = *(void *)(v3 - 23);
      char v7 = *v3;
      if (*v4)
      {
        if (v5 != v6) {
          char v7 = 0;
        }
        if ((v7 & 1) == 0) {
          break;
        }
      }
      else
      {
        if (*v3) {
          break;
        }
        unint64_t v8 = *(void *)(v4 - 15);
        unint64_t v9 = *(unsigned int *)(v4 - 7) | ((unint64_t)(*(unsigned __int16 *)(v4 - 3) | (*(v4 - 1) << 16)) << 32);
        uint64_t v10 = *(void *)(v3 - 15);
        uint64_t v11 = *(unsigned __int16 *)(v3 - 3) | (*(v3 - 1) << 16);
        uint64_t v12 = *(unsigned int *)(v3 - 7);
        unint64_t v13 = v12 | (v11 << 32);
        if (v5)
        {
          if (!v6) {
            goto LABEL_28;
          }
          if (HIDWORD(v8) - v8 != HIDWORD(v10) - v10) {
            break;
          }
          uint64_t v14 = BYTE6(v9);
          if (*(_DWORD *)(v4 - 7) != v12
            || (*(unsigned __int16 *)(v4 - 3) == WORD2(v13) ? (BOOL v15 = BYTE6(v9) == BYTE6(v13)) : (BOOL v15 = 0),
                v15 ? (BOOL v16 = v5 == v6) : (BOOL v16 = 0),
                !v16))
          {
            uint64_t v20 = HIDWORD(v13) & 0xFFFFFF;
            uint64_t v21 = *(void *)(v3 - 15);
            sub_1002247AC();
            LOWORD(v13) = v17;
            swift_beginAccess();
            uint64_t v18 = (const void *)(*(void *)(v5 + 24)
                               + (v14 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v13 << 8))
                               + v8);
            sub_1001F969C();
            if (memcmp(v18, (const void *)(*(void *)(v6 + 24)+ (BYTE6(v13) | ((unint64_t)(unsigned __int16)v20 << 8))+ v21), HIDWORD(v8) - v8))
            {
              break;
            }
          }
        }
        else
        {
          if (v6)
          {
LABEL_28:
            uint64_t v19 = *(void *)(v3 - 15);
            sub_100223C54(*(void *)(v4 - 23), *(void *)(v4 - 15), v9, 0);
            sub_100223C54(v6, v19, v13, 0);
            swift_release();
            swift_release();
            break;
          }
          sub_100223C54(0, v10, v12 | (v11 << 32), 0);
        }
      }
      v3 += 24;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_1001F9814();
}

int32x2_t sub_100220BEC(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2 = a1[2];
  if (*(void *)&v2 != *(void *)&a2[2])
  {
LABEL_8:
    variable initialization expression of Engine.isProcessingUpdates();
    return result;
  }
  if (*(void *)&v2 && a1 != a2)
  {
    if (a2[4].i32[0] != a1[4].i32[0] || a2[4].i32[1] != a1[4].i32[1]) {
      goto LABEL_8;
    }
    uint64_t v5 = a1 + 5;
    uint64_t v6 = a2 + 5;
    uint64_t v7 = *(void *)&v2 - 1;
    do
    {
      if (!v7) {
        break;
      }
      int32x2_t v8 = *v6++;
      int32x2_t v9 = v8;
      int32x2_t v10 = *v5++;
      int32x2_t result = vceq_s32(v9, v10);
      --v7;
    }
    while ((result.i32[0] & result.i32[1] & 1) != 0);
  }
  return result;
}

uint64_t sub_100220C64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    uint64_t v60 = a1 + 32;
    uint64_t v61 = *(void *)(a1 + 16);
    uint64_t v59 = a2 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v4 + (v3 << 6));
      uint64_t v7 = *((unsigned int *)v6 + 2);
      uint64_t v8 = *((unsigned int *)v6 + 3);
      int32x2_t v9 = (uint64_t *)(v5 + (v3 << 6));
      uint64_t v10 = *((unsigned int *)v9 + 2);
      int v11 = *((_DWORD *)v9 + 3) - v10;
      uint64_t result = v8 - v7 == v11;
      if (v8 - v7 != v11) {
        return result;
      }
      uint64_t v62 = v3;
      uint64_t v13 = *((unsigned __int16 *)v6 + 10);
      uint64_t v14 = *((unsigned __int8 *)v6 + 22);
      uint64_t v15 = *((unsigned __int16 *)v9 + 10);
      uint64_t v16 = *((unsigned __int8 *)v9 + 22);
      BOOL v17 = *((_DWORD *)v6 + 4) == *((_DWORD *)v9 + 4) && v13 == v15;
      BOOL v19 = v17 && v14 == v16 && *v6 == *v9;
      uint64_t v20 = v9[7];
      uint64_t v66 = *v9;
      BOOL v63 = v8 - v7 == v11;
      uint64_t v74 = v9[3];
      uint64_t v76 = v6[3];
      if (v19)
      {
        uint64_t v24 = v6[4];
        uint64_t v27 = v6[7];
        uint64_t v29 = v9[4];
        swift_retain();
        swift_retain();
        uint64_t v23 = v20;
        swift_retain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v25 = v29;
        swift_bridgeObjectRetain();
        if (v24) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v64 = v9[4];
        uint64_t v21 = *v6;
        uint64_t v65 = v6[4];
        uint64_t v70 = v6[7];
        swift_beginAccess();
        __s1a = (void *)(*(void *)(v21 + 24) + (v14 | (v13 << 8)) + v7);
        size_t __na = v8 - v7;
        sub_1001F969C();
        uint64_t v22 = (const void *)(*(void *)(v66 + 24) + (v16 | (v15 << 8)) + v10);
        swift_retain();
        swift_retain();
        uint64_t v23 = v20;
        swift_retain();
        swift_retain();
        uint64_t v24 = v65;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v25 = v64;
        swift_bridgeObjectRetain();
        int v26 = memcmp(__s1a, v22, __na);
        uint64_t v27 = v70;
        if (v26)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_67;
        }
        if (v65)
        {
LABEL_18:
          if (!v25)
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_65;
          }
          BOOL v28 = v76 == v74 && v24 == v25;
          if (!v28 && (sub_1005E3290() & 1) == 0)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_74;
          }
          goto LABEL_27;
        }
      }
      if (v25)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_74:
        swift_release();
        goto LABEL_67;
      }
LABEL_27:
      sub_100221CD0();
      if ((v30 & 1) == 0) {
        goto LABEL_64;
      }
      uint64_t v31 = *(void *)(v27 + 16);
      if (v31 != *(void *)(v23 + 16)) {
        goto LABEL_64;
      }
      if (v31)
      {
        if (v27 != v23)
        {
          uint64_t v57 = *(void *)(v27 + 16);
          while (1)
          {
            uint64_t v32 = sub_100224B20();
            if (!v17) {
              break;
            }
            if (v36) {
              BOOL v37 = v32 == v35;
            }
            else {
              BOOL v37 = 1;
            }
            if (!v37)
            {
              unsigned int v39 = *(_DWORD *)(v32 + 40);
              unsigned int v38 = *(_DWORD *)(v32 + 44);
              unsigned int v40 = *(_DWORD *)(v35 + 40);
              if (v38 - v39 != *(_DWORD *)(v35 + 44) - v40)
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_66;
              }
              uint64_t v58 = v34;
              int v77 = *(unsigned __int8 *)(v32 + 54);
              int v41 = *(unsigned __int16 *)(v32 + 52);
              int v75 = *(_DWORD *)(v32 + 48);
              uint64_t v42 = *(void *)(v32 + 32);
              unsigned int v43 = *(unsigned __int8 *)(v35 + 54);
              unsigned int v44 = *(unsigned __int16 *)(v35 + 52);
              int v45 = *(_DWORD *)(v35 + 48);
              uint64_t v67 = v35;
              __s1 = (char *)v32;
              uint64_t v46 = *(void *)(v35 + 32);
              size_t __nb = v36;
              swift_bridgeObjectRetain();
              uint64_t v47 = 0;
              for (size_t __n = __nb - 1; ; --__n)
              {
                swift_retain();
                swift_retain();
                BOOL v48 = v75 == v45 && v41 == v44;
                BOOL v49 = v48 && v77 == v43;
                if (v49 && v42 == v46)
                {
                  swift_release_n();
                }
                else
                {
                  unsigned int v51 = v43;
                  uint64_t v52 = v38;
                  sub_1001F969C();
                  sub_100224714();
                  uint64_t v54 = (const void *)(v53 + v39);
                  sub_1001F969C();
                  LODWORD(v54) = memcmp(v54, (const void *)(*(void *)(v46 + 24) + (v51 | ((unint64_t)v44 << 8)) + v40), v52 - v39);
                  swift_release();
                  swift_release();
                  if (v54) {
                    goto LABEL_51;
                  }
                }
                if (!__n) {
                  break;
                }
                uint64_t v55 = &__s1[v47];
                unsigned int v39 = *(_DWORD *)&__s1[v47 + 64];
                unsigned int v38 = *(_DWORD *)&__s1[v47 + 68];
                uint64_t v56 = v67 + v47;
                unsigned int v40 = *(_DWORD *)(v67 + v47 + 64);
                if (v38 - v39 != *(_DWORD *)(v67 + v47 + 68) - v40)
                {
LABEL_51:
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_67;
                }
                int v77 = v55[78];
                int v41 = *((unsigned __int16 *)v55 + 38);
                int v75 = *((_DWORD *)v55 + 18);
                uint64_t v42 = *((void *)v55 + 7);
                unsigned int v43 = *(unsigned __int8 *)(v56 + 78);
                unsigned int v44 = *(unsigned __int16 *)(v56 + 76);
                int v45 = *(_DWORD *)(v56 + 72);
                v47 += 24;
                uint64_t v46 = *(void *)(v56 + 56);
              }
              swift_bridgeObjectRelease();
              uint64_t v34 = v58;
              uint64_t v33 = v57;
            }
            if (v34 + 1 == v33) {
              goto LABEL_58;
            }
          }
LABEL_64:
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_65:
          swift_release();
LABEL_66:
          swift_bridgeObjectRelease();
LABEL_67:
          swift_release();
          return 0;
        }
        swift_release();
        swift_release();
        swift_release_n();
      }
      else
      {
LABEL_58:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      uint64_t v3 = v62 + 1;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = v63;
      uint64_t v5 = v59;
      uint64_t v4 = v60;
      if (v62 + 1 == v61) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_100221400(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    uint64_t v4 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *v4;
      if (*v3)
      {
        if (!v5) {
          return 0;
        }
        uint64_t v6 = sub_1005E1CD0();
        uint64_t v8 = v7;
        if (v6 == sub_1005E1CD0() && v8 == v9)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v11 = sub_1002248CC();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v11 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v5)
      {
        return 0;
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

void sub_1002214FC()
{
  sub_100224634();
  sub_100224250();
  if (v14 && v0 && v1 != v2)
  {
    uint64_t v3 = (unsigned int *)(v2 + 64);
    uint64_t v4 = (unsigned int *)(v1 + 64);
    do
    {
      uint64_t v5 = *((void *)v4 - 2);
      unint64_t v6 = *((void *)v4 - 1);
      int v7 = *((unsigned __int8 *)v4 + 6);
      int v8 = *((unsigned __int16 *)v4 + 2);
      uint64_t v9 = *v4;
      uint64_t v11 = *((void *)v3 - 2);
      uint64_t v10 = *((void *)v3 - 1);
      int v12 = *((unsigned __int8 *)v3 + 6);
      int v13 = *((unsigned __int16 *)v3 + 2);
      BOOL v14 = *((void *)v4 - 4) == *((void *)v3 - 4) && *((void *)v4 - 3) == *((void *)v3 - 3);
      uint64_t v15 = *v3;
      if (!v14)
      {
        uint64_t v16 = *((void *)v3 - 1);
        uint64_t v31 = *((void *)v3 - 2);
        uint64_t v33 = *((void *)v4 - 2);
        unint64_t v17 = *((void *)v4 - 1);
        int v18 = *((unsigned __int8 *)v3 + 6);
        uint64_t v30 = v0;
        int v19 = *((unsigned __int16 *)v3 + 2);
        uint64_t v20 = *v3;
        char v21 = sub_1005E3290();
        uint64_t v15 = v20;
        int v13 = v19;
        int v12 = v18;
        unint64_t v6 = v17;
        uint64_t v0 = v30;
        uint64_t v11 = v31;
        uint64_t v5 = v33;
        uint64_t v10 = v16;
        if ((v21 & 1) == 0) {
          break;
        }
      }
      if (v5)
      {
        if (!v11 || HIDWORD(v6) - v6 != HIDWORD(v10) - v10) {
          break;
        }
        unint64_t v22 = v9 | ((unint64_t)(v8 | (v7 << 16)) << 32);
        unint64_t v23 = v15 | ((unint64_t)(v13 | (v12 << 16)) << 32);
        uint64_t v24 = BYTE6(v22);
        uint64_t v25 = HIDWORD(v22) & 0xFFFFFF;
        uint64_t v26 = BYTE6(v23);
        if (v22 != v15
          || (WORD2(v22) == WORD2(v23) ? (BOOL v27 = BYTE6(v22) == BYTE6(v23)) : (BOOL v27 = 0),
              v27 ? (BOOL v28 = v5 == v11) : (BOOL v28 = 0),
              !v28))
        {
          uint64_t v32 = HIDWORD(v23) & 0xFFFFFF;
          unsigned int v34 = v10;
          swift_beginAccess();
          uint64_t v29 = (const void *)(*(void *)(v5 + 24)
                             + (v24 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v25 << 8))
                             + v6);
          sub_1001F969C();
          if (memcmp(v29, (const void *)(*(void *)(v11 + 24)+ (v26 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v32 << 8))+ v34), HIDWORD(v6) - v6))
          {
            break;
          }
        }
      }
      else if (v11)
      {
        break;
      }
      v3 += 10;
      v4 += 10;
      --v0;
    }
    while (v0);
  }
  sub_1002246F8();
}

uint64_t sub_10022169C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v32 = a1;
    uint64_t v33 = a2;
    do
    {
      uint64_t v4 = a1 + v3;
      uint64_t v6 = *(unsigned int *)(a1 + v3 + 40);
      uint64_t v5 = *(unsigned int *)(a1 + v3 + 44);
      uint64_t v7 = a2 + v3;
      uint64_t v8 = *(unsigned int *)(a2 + v3 + 40);
      if (v5 - v6 != *(_DWORD *)(a2 + v3 + 44) - v8) {
        return 0;
      }
      uint64_t v42 = v3;
      uint64_t v43 = v2;
      uint64_t v9 = *(void *)(v4 + 32);
      uint64_t v10 = *(unsigned __int16 *)(v4 + 52);
      uint64_t v11 = *(unsigned __int8 *)(v4 + 54);
      uint64_t v44 = *(void *)(v4 + 56);
      int v38 = *(unsigned __int8 *)(v4 + 78);
      int v37 = *(unsigned __int16 *)(v4 + 76);
      uint64_t v39 = *(unsigned int *)(v4 + 72);
      uint64_t v40 = *(void *)(v4 + 64);
      uint64_t v12 = *(void *)(v7 + 32);
      uint64_t v13 = *(unsigned __int16 *)(v7 + 52);
      uint64_t v14 = *(unsigned __int8 *)(v7 + 54);
      uint64_t v15 = *(void *)(v7 + 56);
      uint64_t v41 = *(void *)(v7 + 64);
      int v35 = *(unsigned __int16 *)(v7 + 76);
      int v36 = *(unsigned __int8 *)(v7 + 78);
      BOOL v16 = *(_DWORD *)(v4 + 48) == *(_DWORD *)(v7 + 48) && v10 == v13;
      BOOL v18 = v16 && v11 == v14 && v9 == v12;
      uint64_t v34 = *(unsigned int *)(v7 + 72);
      if (v18)
      {
        swift_retain();
        swift_retain_n();
        uint64_t v21 = v44;
        swift_retain();
        if (!v44) {
          goto LABEL_32;
        }
      }
      else
      {
        sub_1001F969C();
        int v19 = (const void *)(*(void *)(v9 + 24) + (v11 | (v10 << 8)) + v6);
        sub_1001F969C();
        uint64_t v20 = (const void *)(*(void *)(v12 + 24) + (v14 | (v13 << 8)) + v8);
        swift_retain();
        swift_retain();
        uint64_t v21 = v44;
        swift_retain();
        swift_retain();
        if (memcmp(v19, v20, v5 - v6)) {
          goto LABEL_38;
        }
        if (!v44)
        {
LABEL_32:
          if (v15) {
            goto LABEL_38;
          }
          swift_release();
          goto LABEL_34;
        }
      }
      if (!v15 || (sub_10022455C(), !v16))
      {
LABEL_38:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return 0;
      }
      unint64_t v22 = v39 | ((unint64_t)(v37 | (v38 << 16)) << 32);
      unint64_t v23 = v34 | ((unint64_t)(v35 | (v36 << 16)) << 32);
      uint64_t v24 = BYTE6(v22);
      uint64_t v25 = HIDWORD(v22) & 0xFFFFFF;
      uint64_t v26 = HIDWORD(v23) & 0xFFFFFF;
      uint64_t v27 = BYTE6(v23);
      if (v39 != v34
        || (WORD2(v22) == WORD2(v23) ? (BOOL v28 = BYTE6(v22) == BYTE6(v23)) : (BOOL v28 = 0),
            v28 ? (BOOL v29 = v21 == v15) : (BOOL v29 = 0),
            !v29))
      {
        sub_1001F969C();
        uint64_t v30 = (const void *)(*(void *)(v21 + 24)
                           + (v24 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v25 << 8))
                           + v40);
        sub_1001F969C();
        LODWORD(v30) = memcmp(v30, (const void *)(*(void *)(v15 + 24)+ (v27 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v26 << 8))+ v41), v5 - v40);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (v30) {
          return 0;
        }
        goto LABEL_36;
      }
      swift_release();
      swift_release_n();
LABEL_34:
      swift_release();
LABEL_36:
      uint64_t v3 = v42 + 48;
      uint64_t v2 = v43 - 1;
      a1 = v32;
      a2 = v33;
    }
    while (v43 != 1);
  }
  return 1;
}

Swift::UInt32 sub_10022199C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return variable initialization expression of Engine.isProcessingUpdates();
  }
  if (!v2 || a1 == a2) {
    return CredentialsRequestID.init()().underlying;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return variable initialization expression of Engine.isProcessingUpdates();
  }
  uint64_t v3 = (unsigned __int8 *)(a1 + 33);
  uint64_t v4 = (unsigned __int8 *)(a2 + 33);
  uint64_t v5 = v2 - 1;
  do
  {
    Swift::UInt32 result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_100221A00(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v3 && a1 != a2)
  {
    uint64_t v5 = (uint64_t *)(a1 + 40);
    uint64_t v6 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = a3(*(v5 - 1), *v5);
      uint64_t v11 = v10;
      if (v9 == a3(v7, v8) && v11 == v12)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v14 = sub_1002248CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      v5 += 2;
      v6 += 2;
      --v3;
    }
    while (v3);
  }
  return 1;
}

Swift::UInt32 sub_100221AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return variable initialization expression of Engine.isProcessingUpdates();
  }
  if (!v2 || a1 == a2) {
    return CredentialsRequestID.init()().underlying;
  }
  if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32)) {
    return variable initialization expression of Engine.isProcessingUpdates();
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    Swift::UInt32 result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v4++;
    int v7 = v8;
    int v9 = *v3++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

void sub_100221B3C()
{
  sub_1002246A4();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v6 = 0;
  for (uint64_t i = (uint64_t *)(v2 + 40); ; i += 2)
  {
    if (v6 == v1)
    {
      sub_100224CB8();
      if (!v5) {
        goto LABEL_21;
      }
      goto LABEL_8;
    }
    if (v6 >= v1) {
      break;
    }
    int v8 = (uint64_t *)(v0 + 16 * v6);
    uint64_t v4 = *v8;
    uint64_t v2 = v8[1];
    swift_bridgeObjectRetain();
    if (!v5)
    {
      if (v2)
      {
LABEL_19:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v3 = 0;
LABEL_21:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (!v3) {
          return;
        }
      }
      swift_bridgeObjectRelease();
      return;
    }
    ++v6;
LABEL_8:
    uint64_t v9 = *(i - 1);
    uint64_t v3 = *i;
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_21;
    }
    if (!v3) {
      goto LABEL_19;
    }
    if (v4 == v9 && v2 == v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = sub_100224AC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v4 & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return;
      }
    }
    --v5;
  }
  __break(1u);
}

void sub_100221CD0()
{
  sub_100224574();
  uint64_t v27 = v1;
  swift_retain();
  uint64_t v26 = v0;
  swift_retain();
  uint64_t v30 = v2;
  swift_retain();
  LODWORD(v8) = 0;
  unint64_t v9 = 0;
  while (1)
  {
    if (v9 == v31)
    {
      uint64_t v10 = 0;
      if (!v4) {
        goto LABEL_27;
      }
      sub_100224B38();
      goto LABEL_8;
    }
    if (v9 >= v31) {
      break;
    }
    sub_100224674();
    if (!v4)
    {
      if (v0)
      {
LABEL_30:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_32;
      }
      uint64_t v10 = 0;
LABEL_27:
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (!v10) {
        return;
      }
      goto LABEL_32;
    }
    ++v9;
LABEL_8:
    uint64_t v11 = sub_10022432C();
    if (!v3)
    {
      uint64_t v10 = v11;
      goto LABEL_27;
    }
    if (!v11) {
      goto LABEL_30;
    }
    sub_100224650();
    if (!v14)
    {
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_31;
    }
    BOOL v14 = v5 == v8;
    uint64_t v4 = v35;
    int v5 = HIDWORD(v35);
    BOOL v14 = v14 && v35 == v6;
    if (v14 && HIDWORD(v35) == v7 && v12 == v13)
    {
      swift_release_n();
    }
    else
    {
      uint64_t v0 = v13;
      unint64_t v9 = v12;
      sub_1001F969C();
      unint64_t v8 = *(void *)(v0 + 24) + (HIDWORD(v35) | ((unint64_t)v35 << 8)) + v1;
      LODWORD(v1) = v3 - v1;
      int v17 = sub_1001F969C();
      int v5 = sub_100224724(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
             v36);
      swift_release();
      swift_release();
      if (v5)
      {
        swift_release();
LABEL_31:
        swift_release();
        swift_release();
LABEL_32:
        swift_release();
        return;
      }
    }
    sub_100224C14();
  }
  __break(1u);
}

void sub_100221EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_100224634();
  a29 = v30;
  a30 = v31;
  uint64_t v33 = v32;
  unint64_t v34 = 0;
  unint64_t v36 = *(void *)(v35 + 16);
  sub_100224C00();
  uint64_t v60 = v40 + 32;
  uint64_t v61 = v39;
  unint64_t v62 = v41;
  uint64_t v42 = 4 * v41;
  uint64_t v43 = (v39 >> 59) & 1;
  if ((v37 & 0x1000000000000000) == 0) {
    LOBYTE(v43) = 1;
  }
  uint64_t v44 = 4 << v43;
  uint64_t v56 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v57 = v37 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v45 = 15;
  uint64_t v58 = 4 << v43;
  uint64_t v59 = v42;
  while (1)
  {
    if (v34 == v36)
    {
      int v46 = 0;
      unint64_t v47 = v36;
      goto LABEL_8;
    }
    if (v34 >= v36) {
      break;
    }
    int v46 = *(unsigned __int8 *)(v60 + v34);
    unint64_t v47 = v34 + 1;
LABEL_8:
    unint64_t v48 = v45 >> 14;
    if (v45 >> 14 == v42)
    {
      unsigned __int8 v49 = 0;
    }
    else
    {
      unint64_t v50 = v45;
      if ((v45 & 0xC) == v44)
      {
        unint64_t v50 = sub_100272294(v45, v61, v33);
        uint64_t v44 = v58;
        uint64_t v38 = v61;
      }
      unint64_t v51 = v50 >> 16;
      if (v50 >> 16 >= v62) {
        goto LABEL_32;
      }
      if ((v33 & 0x1000000000000000) != 0)
      {
        unsigned __int8 v54 = sub_1005E1EC0();
        uint64_t v44 = v58;
        uint64_t v38 = v61;
        unsigned __int8 v49 = v54;
      }
      else if ((v33 & 0x2000000000000000) != 0)
      {
        a17 = v38;
        a18 = v57;
        unsigned __int8 v49 = *((unsigned char *)&a17 + v51);
      }
      else
      {
        uint64_t v52 = v56;
        if ((v38 & 0x1000000000000000) == 0)
        {
          uint64_t v52 = sub_1005E2D30();
          uint64_t v44 = v58;
          uint64_t v38 = v61;
        }
        unsigned __int8 v49 = *(unsigned char *)(v52 + v51);
      }
      if ((v45 & 0xC) == v44)
      {
        uint64_t v55 = sub_100272294(v45, v61, v33);
        uint64_t v44 = v58;
        uint64_t v38 = v61;
        unint64_t v45 = v55;
      }
      uint64_t v42 = v59;
      if ((v33 & 0x1000000000000000) != 0)
      {
        if (v62 <= v45 >> 16) {
          goto LABEL_33;
        }
        uint64_t v53 = sub_1005E1E90();
        uint64_t v44 = v58;
        uint64_t v38 = v61;
        unint64_t v45 = v53;
      }
      else
      {
        unint64_t v45 = (v45 & 0xFFFFFFFFFFFF0000) + 65540;
      }
    }
    if (v34 != v36 && v48 != v42)
    {
      unint64_t v34 = v47;
      if (v46 == v49) {
        continue;
      }
    }
    sub_1002246F8();
    return;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

unint64_t sub_1002220CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v7)(uint64_t *__return_ptr, void *);
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *__return_ptr, void *);
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void v27[2];
  uint64_t v28;

  unint64_t v4 = *(void *)(a3 + 16);
  sub_100224C00();
  int v22 = v6 + 32;
  int v23 = v7;
  uint64_t v25 = v9;
  uint64_t v26 = v8;
  int v24 = 4 * v9;
  uint64_t v10 = (v8 >> 59) & 1;
  if ((v5 & 0x1000000000000000) == 0) {
    LOBYTE(v10) = 1;
  }
  uint64_t v11 = 4 << v10;
  int v20 = (v5 & 0xFFFFFFFFFFFFFFFLL) + 32;
  int v21 = v5 & 0xFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  swift_retain();
  Swift::UInt32 result = swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  BOOL v14 = 15;
  while (1)
  {
    if (v13 == v4)
    {
      if (v24 == v14 >> 14)
      {
        int v19 = 1;
        goto LABEL_31;
      }
      uint64_t v15 = 0;
      BOOL v16 = v4;
    }
    else
    {
      if (v13 >= v4) {
        goto LABEL_34;
      }
      LOBYTE(v27[0]) = *(unsigned char *)(v22 + v13);
      v23(&v28, v27);
      if (v24 == v14 >> 14)
      {
LABEL_28:
        swift_release();
        swift_bridgeObjectRelease();
        int v19 = 0;
LABEL_32:
        swift_bridgeObjectRelease();
        return v19;
      }
      BOOL v16 = v13 + 1;
      uint64_t v15 = v28;
    }
    Swift::UInt32 result = v14;
    if ((v14 & 0xC) == v11) {
      Swift::UInt32 result = sub_100272294(v14, v26, a2);
    }
    int v17 = result >> 16;
    if (result >> 16 >= v25) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      Swift::UInt32 result = sub_1005E1EC0();
      int v18 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v27[0] = v26;
      v27[1] = v21;
      int v18 = *((unsigned char *)v27 + v17);
    }
    else
    {
      Swift::UInt32 result = v20;
      if ((v26 & 0x1000000000000000) == 0) {
        Swift::UInt32 result = sub_1005E2D30();
      }
      int v18 = *(unsigned char *)(result + v17);
    }
    if ((v14 & 0xC) == v11)
    {
      Swift::UInt32 result = sub_100272294(v14, v26, a2);
      BOOL v14 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_21:
        BOOL v14 = (v14 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_26;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_21;
    }
    if (v25 <= v14 >> 16) {
      goto LABEL_35;
    }
    Swift::UInt32 result = sub_1005E1E90();
    BOOL v14 = result;
LABEL_26:
    if (v13 == v4)
    {
      int v19 = 0;
LABEL_31:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    uint64_t v13 = v16;
    if (v15 != v18) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100222314()
{
  sub_1002245D0();
  if (v5)
  {
    if (!v0 || v3 == v4) {
      return 1;
    }
    sub_100224D1C();
    while (1)
    {
      BOOL v5 = *(v1 - 1) == *(v2 - 1) && *v1 == *v2;
      if (!v5 && (sub_1005E3290() & 1) == 0) {
        break;
      }
      sub_100224B8C();
      if (v5) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_100222384()
{
  sub_1001FE5B4();
  uint64_t v94 = v2;
  uint64_t v95 = v3;
  uint64_t v90 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v4);
  sub_100208054();
  uint64_t v84 = v5;
  uint64_t v87 = sub_10000566C(&qword_1007104D0);
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_100208054();
  uint64_t v92 = v7;
  uint64_t v8 = sub_10000566C(&qword_1007104D8);
  uint64_t v9 = sub_100224550(v8);
  __chkstk_darwin(v9);
  sub_100224A54();
  uint64_t v12 = v10 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v81 - v14;
  uint64_t v16 = sub_10000566C(&qword_1007104E0);
  sub_1001F3BBC();
  __chkstk_darwin(v17);
  sub_1002244A8();
  uint64_t v18 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v19);
  sub_100224A54();
  int v22 = (void *)(v20 - v21);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v81 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v81 - v27;
  uint64_t v29 = sub_10000566C(&qword_10070FE28);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29 - 8);
  sub_1002244C0();
  sub_10000566C(&qword_1007104B8);
  sub_1001F3BBC();
  __chkstk_darwin(v31);
  sub_1001F40C0();
  uint64_t v37 = v36 - v35;
  uint64_t v38 = *(void *)(v34 + 16);
  if (v38 != *(void *)(v33 + 16)) {
    goto LABEL_54;
  }
  uint64_t v96 = v0;
  uint64_t v97 = v28;
  uint64_t v88 = v32;
  uint64_t v89 = v1;
  uint64_t v82 = v15;
  uint64_t v83 = v22;
  uint64_t v98 = v18;
  uint64_t v85 = v26;
  uint64_t v86 = v16;
  uint64_t v81 = v12;
  if (!v38 || v34 == v33)
  {
LABEL_54:
    sub_1001FE57C();
    return;
  }
  uint64_t v39 = 0;
  unint64_t v40 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v94 = v34 + v40;
  uint64_t v95 = v33 + v40;
  uint64_t v93 = *(void *)(v30 + 72);
  uint64_t v41 = v88;
  uint64_t v42 = v89;
  uint64_t v43 = (uint64_t)v85;
  uint64_t v44 = v90;
  uint64_t v45 = v92;
  uint64_t v46 = v37;
  uint64_t v91 = v38;
  while (1)
  {
    uint64_t v47 = v46 + *(int *)(v41 + 48);
    sub_100223AC8(v94 + v93 * v39, v46, &qword_10070FE28);
    uint64_t v48 = sub_100224BDC();
    sub_100223AC8(v48, v49, &qword_10070FE28);
    uint64_t v50 = v98;
    sub_100207FC4(v46, 1, v98);
    if (!v51) {
      break;
    }
    sub_100207FC4(v47, 1, v50);
    if (!v51)
    {
      uint64_t v78 = &qword_1007104B8;
LABEL_53:
      sub_1001F3A28(v46, v78);
      goto LABEL_54;
    }
LABEL_41:
    ++v39;
    sub_1001F3A28(v46, &qword_10070FE28);
    if (v39 == v91) {
      goto LABEL_54;
    }
  }
  sub_100223AC8(v46, v42, &qword_10070FE28);
  sub_100207FC4(v47, 1, v50);
  if (v51)
  {
    uint64_t v78 = &qword_1007104B8;
LABEL_52:
    sub_100223BFC(v42, (void (*)(void))type metadata accessor for ParameterValue);
    goto LABEL_53;
  }
  sub_100223B64();
  uint64_t v52 = v96;
  uint64_t v53 = (void *)(v96 + *(int *)(v86 + 48));
  sub_100223BB0();
  sub_100223BB0();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100223BB0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1001F3A28(v43, &qword_1007104D8);
      uint64_t v52 = v96;
      goto LABEL_47;
    }
    uint64_t v60 = (uint64_t)v82;
    sub_1001F39D8((uint64_t)v53, (uint64_t)v82, &qword_1007104D8);
    uint64_t v61 = v45 + *(int *)(v87 + 48);
    sub_100223AC8(v43, v45, &qword_1007104D8);
    uint64_t v62 = sub_100224BDC();
    sub_100223AC8(v62, v63, &qword_1007104D8);
    sub_100207FC4(v45, 1, v44);
    if (v51)
    {
      sub_100207FC4(v61, 1, v44);
      if (v51)
      {
LABEL_29:
        uint64_t v70 = sub_100224848();
        sub_1001F3A28(v70, v71);
        sub_1001F3A28(v43, &qword_1007104D8);
        sub_1001F3A28(v60, &qword_1007104D8);
        uint64_t v72 = v96;
        uint64_t v41 = v88;
LABEL_40:
        sub_100223BFC(v72, (void (*)(void))type metadata accessor for ParameterValue);
        uint64_t v76 = sub_100224BDC();
        sub_100223BFC(v76, v77);
        sub_100223BFC(v42, (void (*)(void))type metadata accessor for ParameterValue);
        goto LABEL_41;
      }
      uint64_t v79 = (uint64_t)v97;
      uint64_t v80 = &qword_1007104D0;
    }
    else
    {
      uint64_t v64 = v44;
      uint64_t v65 = v81;
      sub_100223AC8(v45, v81, &qword_1007104D8);
      sub_100207FC4(v61, 1, v64);
      if (v66)
      {
        uint64_t v79 = (uint64_t)v97;
        sub_1001F3A28(v65, &qword_1007104C8);
        uint64_t v80 = &qword_1007104D0;
        uint64_t v42 = v89;
      }
      else
      {
        uint64_t v67 = v84;
        sub_1001F39D8(v61, v84, &qword_1007104C8);
        sub_100223B18();
        char v68 = sub_1005E35A0();
        uint64_t v69 = v67;
        uint64_t v43 = (uint64_t)v85;
        sub_1001F3A28(v69, &qword_1007104C8);
        sub_1001F3A28(v65, &qword_1007104C8);
        uint64_t v44 = v64;
        uint64_t v42 = v89;
        if (v68) {
          goto LABEL_29;
        }
        uint64_t v79 = (uint64_t)v97;
        uint64_t v80 = &qword_1007104D8;
      }
    }
    sub_1001F3A28(v45, v80);
    sub_1001F3A28(v43, &qword_1007104D8);
    sub_1001F3A28(v60, &qword_1007104D8);
    sub_100223BFC(v96, (void (*)(void))type metadata accessor for ParameterValue);
    goto LABEL_51;
  }
  unsigned __int8 v54 = v83;
  sub_100223BB0();
  uint64_t v55 = (void *)*v54;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
LABEL_47:
    uint64_t v79 = (uint64_t)v97;
    sub_1001F3A28(v52, &qword_1007104E0);
LABEL_51:
    sub_100223BFC(v79, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t v78 = &qword_10070FE28;
    goto LABEL_52;
  }
  uint64_t v56 = (void *)*v53;
  unint64_t v57 = v55[2];
  if (v57 != v56[2]) {
    goto LABEL_43;
  }
  if (!v57)
  {
LABEL_38:
    uint64_t v58 = v44;
    uint64_t v42 = v89;
    goto LABEL_39;
  }
  uint64_t v58 = v44;
  uint64_t v42 = v89;
  if (v55 == v56)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v72 = v96;
    uint64_t v43 = (uint64_t)v85;
    uint64_t v44 = v58;
    uint64_t v45 = v92;
    uint64_t v41 = v88;
    goto LABEL_40;
  }
  BOOL v59 = v55[4] == v56[4] && v55[5] == v56[5];
  if (!v59 && (sub_1005E3290() & 1) == 0)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100223BFC(v96, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t v79 = (uint64_t)v97;
    uint64_t v42 = v89;
    goto LABEL_51;
  }
  if (v57 == 1)
  {
    uint64_t v58 = v44;
    uint64_t v42 = v89;
    goto LABEL_39;
  }
  uint64_t v73 = 0;
  unint64_t v74 = 1;
  while (v74 < v57)
  {
    BOOL v75 = v55[v73 + 6] == v56[v73 + 6] && v55[v73 + 7] == v56[v73 + 7];
    if (!v75 && (sub_1005E3290() & 1) == 0) {
      goto LABEL_43;
    }
    ++v74;
    v73 += 2;
    if (v57 == v74) {
      goto LABEL_38;
    }
  }
  __break(1u);
}

void sub_100222BC0()
{
  sub_100224B04();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16) && v2 && v0 != v1)
  {
    uint64_t v30 = *(void *)(v0 + 16);
    do
    {
      uint64_t v3 = sub_100224B20();
      if (!v8) {
        break;
      }
      if (v7) {
        BOOL v8 = v3 == v6;
      }
      else {
        BOOL v8 = 1;
      }
      if (!v8)
      {
        unsigned int v10 = *(_DWORD *)(v3 + 40);
        unsigned int v9 = *(_DWORD *)(v3 + 44);
        unsigned int v11 = *(_DWORD *)(v6 + 40);
        if (v9 - v10 == *(_DWORD *)(v6 + 44) - v11)
        {
          uint64_t v31 = v5;
          uint64_t v32 = v6;
          int v12 = *(unsigned __int16 *)(v3 + 52);
          int v36 = *(_DWORD *)(v3 + 48);
          int v37 = *(unsigned __int8 *)(v3 + 54);
          uint64_t v13 = *(void *)(v3 + 32);
          unsigned int v14 = *(unsigned __int8 *)(v6 + 54);
          unsigned int v15 = *(unsigned __int16 *)(v6 + 52);
          int v16 = *(_DWORD *)(v6 + 48);
          uint64_t v17 = *(void *)(v6 + 32);
          uint64_t v33 = v3;
          uint64_t v34 = v7;
          swift_bridgeObjectRetain();
          uint64_t v18 = 0;
          uint64_t v35 = v34 - 1;
          while (1)
          {
            swift_retain();
            swift_retain();
            BOOL v19 = v36 == v16 && v12 == v15;
            BOOL v20 = v19 && v37 == v14;
            if (v20 && v13 == v17)
            {
              swift_release_n();
              uint64_t v26 = v33;
              uint64_t v27 = v35;
              if (!v35) {
                goto LABEL_29;
              }
            }
            else
            {
              unsigned int v22 = v14;
              uint64_t v23 = v9;
              sub_1001F969C();
              sub_100224714();
              uint64_t v25 = (const void *)(v24 + v10);
              sub_1001F969C();
              LODWORD(v25) = memcmp(v25, (const void *)(*(void *)(v17 + 24) + (v22 | ((unint64_t)v15 << 8)) + v11), v23 - v10);
              swift_release();
              swift_release();
              uint64_t v26 = v33;
              uint64_t v27 = v35;
              if (v25) {
                break;
              }
              if (!v35)
              {
LABEL_29:
                swift_bridgeObjectRelease();
                uint64_t v4 = v30;
                uint64_t v5 = v31;
                goto LABEL_30;
              }
            }
            uint64_t v28 = v26 + v18;
            unsigned int v10 = *(_DWORD *)(v26 + v18 + 64);
            unsigned int v9 = *(_DWORD *)(v26 + v18 + 68);
            uint64_t v29 = v32 + v18;
            unsigned int v11 = *(_DWORD *)(v32 + v18 + 64);
            if (v9 - v10 != *(_DWORD *)(v32 + v18 + 68) - v11) {
              break;
            }
            int v12 = *(unsigned __int16 *)(v28 + 76);
            int v36 = *(_DWORD *)(v28 + 72);
            int v37 = *(unsigned __int8 *)(v28 + 78);
            uint64_t v13 = *(void *)(v28 + 56);
            unsigned int v14 = *(unsigned __int8 *)(v29 + 78);
            unsigned int v15 = *(unsigned __int16 *)(v29 + 76);
            int v16 = *(_DWORD *)(v29 + 72);
            v18 += 24;
            uint64_t v35 = v27 - 1;
            uint64_t v17 = *(void *)(v29 + 56);
          }
          swift_bridgeObjectRelease();
        }
        break;
      }
LABEL_30:
      ;
    }
    while (v5 + 1 != v4);
  }
  sub_100224AAC();
}

void sub_100222DD0()
{
  sub_1001F9760();
  sub_100224250();
  if (v17 && v0 && v1 != v2)
  {
    uint64_t v3 = v2 + 48;
    uint64_t v4 = v1 + 48;
    do
    {
      uint64_t v5 = *(void *)(v4 - 16);
      uint64_t v6 = *(void *)(v3 - 16);
      if (v5)
      {
        if (!v6) {
          break;
        }
        unint64_t v7 = *(void *)(v4 - 8);
        uint64_t v8 = *(void *)(v3 - 8);
        if (HIDWORD(v7) - v7 != HIDWORD(v8) - v8) {
          break;
        }
        sub_100224394();
        uint64_t v13 = v10;
        uint64_t v14 = v12;
        if (v15 != v16 || (v9 == v11 ? (BOOL v17 = v10 == v12) : (BOOL v17 = 0), v17 ? (v18 = v5 == v6) : (v18 = 0), !v18))
        {
          sub_1002247AC();
          unsigned __int16 v22 = v20;
          unsigned __int16 v23 = v19;
          swift_beginAccess();
          uint64_t v21 = (const void *)(*(void *)(v5 + 24)
                             + (v13 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)v22 << 8))
                             + v7);
          sub_1001F969C();
          if (memcmp(v21, (const void *)(*(void *)(v6 + 24)+ (v14 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)v23 << 8))+ v8), HIDWORD(v7) - v7))
          {
            break;
          }
        }
      }
      else if (v6)
      {
        break;
      }
      v3 += 24;
      v4 += 24;
      --v0;
    }
    while (v0);
  }
  sub_1001F9814();
}

uint64_t sub_100222EF4()
{
  sub_1002245D0();
  if (!v6) {
    return 0;
  }
  if (v0 && v3 != v4)
  {
    sub_100224D1C();
    do
    {
      uint64_t v5 = *v2;
      if (*v1)
      {
        if (!v5) {
          return 0;
        }
        BOOL v6 = *(v1 - 1) == *(v2 - 1) && *v1 == v5;
        if (!v6 && (sub_1005E3290() & 1) == 0) {
          return 0;
        }
      }
      else if (v5)
      {
        return 0;
      }
      sub_100224B8C();
    }
    while (!v6);
  }
  return 1;
}

void sub_100222F7C()
{
  sub_1001FE5B4();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v8);
  sub_100224A7C();
  uint64_t v9 = sub_10000566C(&qword_1007104D0);
  sub_1001F3BBC();
  __chkstk_darwin(v10);
  sub_1002244A8();
  uint64_t v11 = sub_10000566C(&qword_1007104D8);
  uint64_t v12 = sub_100224550(v11);
  __chkstk_darwin(v12);
  sub_100224A54();
  uint64_t v62 = v13 - v14;
  __chkstk_darwin(v15);
  BOOL v17 = (char *)&v56 - v16;
  uint64_t v69 = sub_10000566C(&qword_1007104E0);
  sub_1001F3BBC();
  __chkstk_darwin(v18);
  sub_100224490();
  uint64_t v68 = type metadata accessor for ParameterValue();
  sub_10022417C();
  __chkstk_darwin(v19);
  uint64_t v64 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100224320();
  __chkstk_darwin(v21);
  sub_100224380();
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v56 - v24;
  uint64_t v27 = *(void *)(v6 + 16);
  if (v27 != *(void *)(v4 + 16) || !v27 || v6 == v4)
  {
LABEL_50:
    sub_1001FE57C();
    return;
  }
  uint64_t v60 = v25;
  uint64_t v61 = v7;
  uint64_t v57 = v2;
  uint64_t v58 = v9;
  uint64_t v28 = 0;
  unint64_t v29 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v66 = v4 + v29;
  uint64_t v67 = v6 + v29;
  uint64_t v65 = *(void *)(v23 + 72);
  BOOL v59 = (char *)&v56 - v24;
  uint64_t v63 = v27;
  while (1)
  {
    sub_100223BB0();
    uint64_t v30 = (void *)(v0 + *(int *)(v69 + 48));
    sub_100223BB0();
    sub_100223BB0();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v44 = v60;
      sub_100223BB0();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v46 = v61;
      if (EnumCaseMultiPayload != 1)
      {
        sub_1001F39D8((uint64_t)v30, (uint64_t)v17, &qword_1007104D8);
        uint64_t v47 = v1 + *(int *)(v9 + 48);
        sub_100223AC8(v44, v1, &qword_1007104D8);
        uint64_t v48 = sub_100224B9C();
        sub_100223AC8(v48, v49, &qword_1007104D8);
        sub_100207FC4(v1, 1, v46);
        if (v38)
        {
          sub_100207FC4(v47, 1, v46);
          if (!v38) {
            goto LABEL_47;
          }
          sub_1001F3A28(v1, &qword_1007104D8);
        }
        else
        {
          uint64_t v50 = v62;
          sub_100223AC8(v1, v62, &qword_1007104D8);
          sub_100207FC4(v47, 1, v46);
          if (v51)
          {
            sub_1001F3A28(v50, &qword_1007104C8);
LABEL_47:
            sub_1001F3A28(v1, &qword_1007104D0);
LABEL_48:
            uint64_t v54 = sub_100224B9C();
            sub_1001F3A28(v54, v55);
            sub_1001F3A28(v44, &qword_1007104D8);
            sub_100223BFC(v0, (void (*)(void))type metadata accessor for ParameterValue);
LABEL_49:
            sub_100223BFC((uint64_t)v26, (void (*)(void))type metadata accessor for ParameterValue);
            goto LABEL_50;
          }
          uint64_t v52 = v57;
          sub_1001F39D8(v47, v57, &qword_1007104C8);
          sub_100223B18();
          char v53 = sub_1005E35A0();
          sub_1001F3A28(v52, &qword_1007104C8);
          sub_1001F3A28(v50, &qword_1007104C8);
          sub_1001F3A28(v1, &qword_1007104D8);
          if ((v53 & 1) == 0) {
            goto LABEL_48;
          }
        }
        sub_1001F3A28((uint64_t)v17, &qword_1007104D8);
        sub_1001F3A28(v44, &qword_1007104D8);
        uint64_t v43 = v63;
        uint64_t v9 = v58;
        goto LABEL_40;
      }
      sub_1001F3A28(v44, &qword_1007104D8);
LABEL_45:
      sub_1001F3A28(v0, &qword_1007104E0);
      goto LABEL_49;
    }
    uint64_t v31 = v64;
    sub_100223BB0();
    uint64_t v32 = (void *)*v31;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    uint64_t v33 = (void *)*v30;
    unint64_t v34 = v32[2];
    if (v34 != v33[2]) {
      goto LABEL_42;
    }
    uint64_t v35 = v17;
    uint64_t v36 = v1;
    uint64_t v37 = v9;
    if (v34)
    {
      if (v32 != v33) {
        break;
      }
    }
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v37;
    uint64_t v1 = v36;
    BOOL v17 = v35;
    uint64_t v26 = v59;
    uint64_t v43 = v63;
LABEL_40:
    ++v28;
    sub_100223BFC(v0, (void (*)(void))type metadata accessor for ParameterValue);
    sub_100223BFC((uint64_t)v26, (void (*)(void))type metadata accessor for ParameterValue);
    if (v28 == v43) {
      goto LABEL_50;
    }
  }
  BOOL v38 = v32[4] == v33[4] && v32[5] == v33[5];
  if (!v38 && (sub_1005E3290() & 1) == 0)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100223BFC(v0, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t v26 = v59;
    goto LABEL_49;
  }
  if (v34 == 1) {
    goto LABEL_30;
  }
  BOOL v39 = v32[6] == v33[6] && v32[7] == v33[7];
  if (!v39 && (sub_1005E3290() & 1) == 0) {
    goto LABEL_42;
  }
  if (v34 == 2) {
    goto LABEL_30;
  }
  uint64_t v40 = 0;
  unint64_t v41 = 2;
  while (v41 < v34)
  {
    BOOL v42 = v32[v40 + 8] == v33[v40 + 8] && v32[v40 + 9] == v33[v40 + 9];
    if (!v42 && (sub_1005E3290() & 1) == 0) {
      goto LABEL_42;
    }
    ++v41;
    v40 += 2;
    if (v34 == v41) {
      goto LABEL_30;
    }
  }
  __break(1u);
}

unint64_t sub_1002235C4()
{
  unint64_t result = qword_1007104B0;
  if (!qword_1007104B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007104B0);
  }
  return result;
}

uint64_t destroy for AppendOptions()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AppendMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppendMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for AppendMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppendMessage(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppendMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppendMessage()
{
  return &type metadata for AppendMessage;
}

void sub_10022389C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 0xFC | 2) != 0xFE)
  {
    sub_100224610();
    v6();
    uint64_t v7 = sub_1001F4934();
    v8(v7);
  }
}

unint64_t sub_1002238FC(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002239B4(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void sub_100223A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((~a5 & 0xFE) != 0)
  {
    sub_100224610();
    v6();
    uint64_t v7 = sub_1001F4934();
    v8(v7);
  }
}

uint64_t sub_100223AC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000566C(a3);
  sub_1001F3BBC();
  uint64_t v4 = sub_100224D08();
  v5(v4);
  return a2;
}

unint64_t sub_100223B18()
{
  unint64_t result = qword_1007104E8;
  if (!qword_1007104E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007104E8);
  }
  return result;
}

uint64_t sub_100223B64()
{
  uint64_t v1 = sub_100224784();
  v2(v1);
  sub_1001F3BBC();
  uint64_t v3 = sub_1001F4A1C();
  v4(v3);
  return v0;
}

uint64_t sub_100223BB0()
{
  uint64_t v1 = sub_100224784();
  v2(v1);
  sub_1001F3BBC();
  uint64_t v3 = sub_100224D08();
  v4(v3);
  return v0;
}

uint64_t sub_100223BFC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100223C54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100223C60(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 176);
  uint64_t v9 = *(void *)(a1 + 184);
  sub_1000617EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88));
  sub_1000617EC(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

uint64_t *sub_100223D24(uint64_t *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[14];
  uint64_t v8 = a1[15];
  uint64_t v9 = a1[16];
  uint64_t v10 = a1[17];
  sub_100061688(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  sub_100061688(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_100223DC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 144);
  long long v12 = *(_OWORD *)(a1 + 152);
  uint64_t v10 = *(void *)(a1 + 168);
  sub_1000615E4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80));
  sub_1000615E4(v2, v3, v4, v5, v6, v7, v8, v9, v12, *((uint64_t *)&v12 + 1), v10);
  return a1;
}

uint64_t sub_100223E88(uint64_t a1)
{
  uint64_t v18 = *(void *)(a1 + 144);
  uint64_t v19 = *(void *)(a1 + 136);
  uint64_t v16 = *(void *)(a1 + 160);
  uint64_t v17 = *(void *)(a1 + 152);
  uint64_t v14 = *(void *)(a1 + 176);
  uint64_t v15 = *(void *)(a1 + 168);
  uint64_t v12 = *(void *)(a1 + 192);
  uint64_t v13 = *(void *)(a1 + 184);
  long long v11 = *(_OWORD *)(a1 + 200);
  long long v10 = *(_OWORD *)(a1 + 216);
  long long v9 = *(_OWORD *)(a1 + 232);
  long long v8 = *(_OWORD *)(a1 + 248);
  long long v6 = *(_OWORD *)(a1 + 280);
  long long v7 = *(_OWORD *)(a1 + 264);
  uint64_t v3 = *(void *)(a1 + 296);
  uint64_t v2 = *(void *)(a1 + 304);
  char v4 = *(unsigned char *)(a1 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100136870(v19, v18, v17, v16, v15, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6,
    *((uint64_t *)&v6 + 1),
    v3,
    v2,
    v4);
  return a1;
}

uint64_t sub_100224004(uint64_t a1)
{
  uint64_t v18 = *(void *)(a1 + 144);
  uint64_t v19 = *(void *)(a1 + 136);
  uint64_t v16 = *(void *)(a1 + 160);
  uint64_t v17 = *(void *)(a1 + 152);
  uint64_t v14 = *(void *)(a1 + 176);
  uint64_t v15 = *(void *)(a1 + 168);
  uint64_t v12 = *(void *)(a1 + 192);
  uint64_t v13 = *(void *)(a1 + 184);
  long long v10 = *(_OWORD *)(a1 + 216);
  long long v11 = *(_OWORD *)(a1 + 200);
  long long v9 = *(_OWORD *)(a1 + 232);
  long long v7 = *(_OWORD *)(a1 + 264);
  long long v8 = *(_OWORD *)(a1 + 248);
  long long v6 = *(_OWORD *)(a1 + 280);
  uint64_t v3 = *(void *)(a1 + 296);
  uint64_t v2 = *(void *)(a1 + 304);
  char v4 = *(unsigned char *)(a1 + 312);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100061440(v19, v18, v17, v16, v15, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6,
    *((uint64_t *)&v6 + 1),
    v3,
    v2,
    v4);
  return a1;
}

uint64_t sub_100224198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v28 = v27;
  unint64_t v29 = v26;
  sub_1001F3404(a21, a25, v27);
  sub_1001F3404(a22, a26, v29);
  sub_1001F34D0(a22, a26, v29);
  return sub_1001F34D0(a21, a25, v28);
}

uint64_t sub_10022420C()
{
  return 0;
}

uint64_t sub_100224228()
{
  return sub_1005E3290();
}

void sub_1002242B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1001F3404(v28, v27, v26);
  sub_1001F3404(a22, a26, a17);
  sub_10021AEB0();
}

uint64_t sub_10022432C()
{
  return swift_retain();
}

uint64_t sub_100224368()
{
  return sub_10013AF38((uint64_t)&STACK[0xAB8], v0);
}

__n128 sub_1002243C0@<Q0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(v1 + 168) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v1 + 184) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(v1 + 200) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(v1 + 216) = *(_OWORD *)(a1 + 104);
  __n128 result = *(__n128 *)(a1 + 120);
  *(__n128 *)(v1 + 232) = result;
  return result;
}

uint64_t sub_1002243EC()
{
  return v0;
}

uint64_t sub_100224418()
{
  return sub_1005E3290();
}

uint64_t sub_100224468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  return a34;
}

uint64_t sub_1002244F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return a33;
}

__n128 sub_100224528(__n128 a1)
{
  *(__n128 *)(v1 + 40) = a1;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v2 + 104);
  __n128 result = *(__n128 *)(v2 + 120);
  *(__n128 *)(v1 + 104) = result;
  return result;
}

uint64_t sub_100224550(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100224574()
{
  return swift_retain();
}

uint64_t sub_1002245A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  return a35;
}

uint64_t sub_1002245E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v31 = (const void *)(*(void *)(v27 + 24) + (BYTE6(v29) | ((unint64_t)v28 << 8)) + a25);
  return memcmp(v25, v31, v26);
}

uint64_t sub_100224674()
{
  return swift_retain();
}

uint64_t sub_1002246A4()
{
  return swift_retain();
}

uint64_t sub_1002246D4()
{
  return v0;
}

uint64_t sub_100224724(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  size_t v26 = (const void *)(*(void *)(v21 + 24) + (v24 | (v23 << 8)) + a20);
  return memcmp(v22, v26, v20);
}

void sub_100224764()
{
  *(void *)(v2 - 96) = v0;
  *(void *)(v2 - 88) = v1;
}

uint64_t sub_100224784()
{
  return 0;
}

uint64_t sub_100224794()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1002247BC()
{
  return v0;
}

uint64_t sub_1002247DC()
{
  return swift_beginAccess();
}

uint64_t sub_100224808@<X0>(uint64_t a1@<X8>)
{
  return *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
}

uint64_t sub_100224848()
{
  return v0;
}

uint64_t sub_100224854()
{
  return v0 + 24;
}

uint64_t sub_100224874()
{
  return 0;
}

uint64_t sub_100224880()
{
  return sub_10013AF38((uint64_t)&STACK[0xB70], v0);
}

uint64_t sub_100224898(uint64_t a1)
{
  return sub_10013AEAC(a1);
}

uint64_t sub_1002248CC()
{
  return sub_1005E3290();
}

uint64_t sub_1002248F4()
{
  return 0;
}

void sub_100224910(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10022492C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_100224948(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100224980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27)
{
  sub_1001F34D0(v29, a25, a27);
  return sub_1001F34D0(v30, v27, v28);
}

uint64_t sub_1002249F8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100224A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return a33;
}

uint64_t sub_100224A28@<X0>(uint64_t a1@<X8>)
{
  return memcmp(v2, (const void *)(a1 + v1), v3);
}

uint64_t sub_100224A94@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_100224AC8()
{
  return sub_1005E3290();
}

uint64_t sub_100224AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return a16;
}

uint64_t sub_100224B20()
{
  return *(void *)(v1 + 8 * v0);
}

uint64_t sub_100224B68()
{
  return sub_1005E3290();
}

uint64_t sub_100224B9C()
{
  return v0;
}

uint64_t sub_100224BA8()
{
  return v0;
}

uint64_t sub_100224BC8()
{
  return v0;
}

uint64_t sub_100224BDC()
{
  return v0;
}

uint64_t sub_100224BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10013AF38(a24, v24);
}

uint64_t sub_100224C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  return a34;
}

uint64_t sub_100224CE0()
{
  return v0;
}

uint64_t sub_100224CF4()
{
  return v0;
}

uint64_t sub_100224D08()
{
  return v0;
}

uint64_t sub_100224D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  return a34;
}

uint64_t static AppendOptions.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_10021E990(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  char v4 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  sub_100221B3C();
  if (v5)
  {
    sub_10022C948();
    sub_100222F7C();
    if (v6) {
      return 1;
    }
  }
  return 0;
}

void sub_100224DDC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 8;
  uint64_t v5 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_8;
  }
  Swift::Int v6 = *(unsigned int *)(v2 + 20);
  swift_retain();
  swift_retain();
  sub_100210AD0(32, 0xE100000000000000, v4, v6);
  if (v8)
  {
    v9._uint64_t countAndFlagsBits = 32;
    v9._object = (void *)0xE100000000000000;
    Swift::Int v7 = ByteBuffer._setStringSlowpath(_:at:)(v9, v6);
  }
  Swift::Int v10 = v7;
  int v11 = *(_DWORD *)(v2 + 20);
  BOOL v12 = __CFADD__(v11, v7);
  int v13 = v11 + v7;
  if (v12) {
    goto LABEL_20;
  }
  *(_DWORD *)(v2 + 20) = v13;
  uint64_t v14 = sub_1001E8CEC(v5, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v2);
  swift_release();
  swift_release();
  BOOL v15 = __OFADD__(v10, v14);
  Swift::Int v16 = v10 + v14;
  if (v15)
  {
    __break(1u);
LABEL_8:
    Swift::Int v16 = 0;
  }
  if (a1[2])
  {
    Swift::Int v17 = 0;
  }
  else
  {
    uint64_t v18 = a1[1];
    Swift::Int v19 = *(unsigned int *)(v2 + 20);
    sub_10022C8B4();
    if (v21)
    {
      v22._uint64_t countAndFlagsBits = 32;
      v22._object = (void *)0xE100000000000000;
      Swift::Int v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v19);
    }
    Swift::Int v23 = v20;
    int v24 = *(_DWORD *)(v2 + 20);
    BOOL v12 = __CFADD__(v24, v20);
    int v25 = v24 + v20;
    if (v12) {
      goto LABEL_21;
    }
    *(_DWORD *)(v2 + 20) = v25;
    sub_100267F58(v18);
    Swift::Int v17 = v23 + v26;
    if (__OFADD__(v23, v26))
    {
LABEL_22:
      __break(1u);
      return;
    }
  }
  Swift::Int v27 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_1001F1F30();
  if (__OFADD__(v27, v28))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

uint64_t MailboxMetadata.fetchedWindow.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t MessageToDownload.size.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t AppendOptions.extensions.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t AppendOptions.extensions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  return result;
}

uint64_t sub_100225048()
{
  uint64_t result = sub_10031A494((uint64_t)_swiftEmptyArrayStorage);
  static AppendOptions.none = (uint64_t)_swiftEmptyArrayStorage;
  unk_100761870 = 0;
  byte_100761878 = 1;
  qword_100761880 = result;
  unk_100761888 = v1;
  qword_100761890 = v2;
  return result;
}

uint64_t AppendOptions.init(flagList:internalDate:extensions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t *AppendOptions.none.unsafeMutableAddressor()
{
  if (qword_10070FB20 != -1) {
    swift_once();
  }
  return &static AppendOptions.none;
}

uint64_t static AppendOptions.none.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10070FB20 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_100761870;
  char v3 = byte_100761878;
  uint64_t v4 = qword_100761880;
  uint64_t v5 = unk_100761888;
  uint64_t v6 = qword_100761890;
  *(void *)a1 = static AppendOptions.none;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t AppendOptions.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v2;
  swift_bridgeObjectRetain();
  sub_10022BEB0(a1, v4, (void (*)(void, void))&String.uppercased());
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + 16) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    Swift::UInt64 v5 = *(void *)(v2 + 8);
    sub_1005E3420(1u);
    sub_1005E3450(v5);
  }
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100225FD4(a1, v6, v7, v8);
  swift_release();
  swift_release();
  return swift_release();
}

Swift::Int AppendOptions.hashValue.getter()
{
  sub_1005E33F0();
  AppendOptions.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_1002252C8()
{
  sub_1005E33F0();
  AppendOptions.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

void sub_100225308()
{
  sub_10022C474();
  uint64_t v1 = v0;
  char v3 = v2;
  uint64_t v4 = *v2;
  Swift::UInt64 v5 = (void *)v2[1];
  uint64_t v6 = v0 + 8;
  Swift::Int v7 = *(unsigned int *)(v0 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(v4, (unint64_t)v5, v6, v7);
  Swift::Int v9 = v8;
  char v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = v4;
    v12._object = v5;
    Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v12, v7);
  }
  int v13 = *(_DWORD *)(v1 + 20);
  Swift::Int v14 = (v13 + v9);
  if (__CFADD__(v13, v9))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(_DWORD *)(v1 + 20) = v14;
  sub_10022C8B4();
  if (v16)
  {
    v17._uint64_t countAndFlagsBits = 32;
    v17._object = (void *)0xE100000000000000;
    Swift::Int v15 = ByteBuffer._setStringSlowpath(_:at:)(v17, v14);
  }
  int v18 = *(_DWORD *)(v1 + 20);
  BOOL v19 = __CFADD__(v18, v15);
  int v20 = v18 + v15;
  if (v19) {
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v20;
  Swift::Int v21 = v9 + v15;
  if (__OFADD__(v9, v15))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = sub_10000566C(&qword_10070FE78);
  sub_1002BD220((uint64_t)v3 + *(int *)(v22 + 52));
  if (!__OFADD__(v21, v23))
  {
    sub_10022C304();
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_100225404()
{
  sub_10022C474();
  sub_10022C2E0(v2, v3, v4, v5);
  if (v0)
  {
    sub_10022C680();
    swift_retain();
    swift_retain();
    do
    {
      if (!v1)
      {
        __break(1u);
        return;
      }
      sub_10022C668();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10022C7A0();
    }
    while (!v6);
    swift_release();
    swift_release();
    sub_10022C304();
    swift_release();
  }
  else
  {
    sub_10022C304();
  }
}

void sub_1002254E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a4;
  sub_10022C2E0(a1, a2, a3, a4);
  if (v5)
  {
    uint64_t v7 = *(void *)(v4 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v8 = 0;
    uint64_t v10 = v6;
    while (v7)
    {
      uint64_t v9 = *(void *)(v6 + v8 + 32);
      sub_1001F969C();
      sub_1005E3400();
      if (v9)
      {
        sub_1005E3420(1u);
        sub_1001F969C();
        sub_10022C700();
      }
      else
      {
        sub_1005E3420(0);
      }
      --v7;
      v8 += 24;
      --v5;
      uint64_t v6 = v10;
      if (!v5)
      {
        swift_release();
        swift_release();
        swift_release();
        return;
      }
    }
    __break(1u);
  }
}

void sub_100225638()
{
  sub_10022C474();
  uint64_t v3 = v2;
  sub_10022C2E0(v4, v5, v6, v2);
  if (v0)
  {
    sub_10022C680();
    swift_retain();
    swift_retain();
    do
    {
      if (!v1)
      {
        __break(1u);
        return;
      }
      uint64_t v7 = *(void *)(v3 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10022C778();
      sub_1005E1DB0();
      if (v7)
      {
        sub_1005E3420(1u);
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1005E3420(0);
        swift_bridgeObjectRelease();
      }
      sub_10022C7A0();
    }
    while (!v8);
    swift_release();
    swift_release();
    sub_10022C304();
    swift_release();
  }
  else
  {
    sub_10022C304();
  }
}

void sub_100225748()
{
  sub_1001FE5B4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v62 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v7);
  sub_10022C5A8(v8, v59);
  uint64_t v9 = sub_10000566C(&qword_1007104D8);
  uint64_t v10 = sub_100224550(v9);
  __chkstk_darwin(v10);
  uint64_t v61 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F475C();
  __chkstk_darwin(v12);
  sub_10022C49C();
  uint64_t v63 = v13;
  uint64_t v14 = sub_10022C440();
  sub_1001F3BBC();
  __chkstk_darwin(v15);
  uint64_t v64 = (uint64_t *)((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001F475C();
  __chkstk_darwin(v17);
  sub_10022C49C();
  uint64_t v73 = v18;
  uint64_t v19 = sub_10000566C(&qword_10070FE28);
  uint64_t v69 = *(void *)(v19 - 8);
  __chkstk_darwin(v19 - 8);
  sub_10022C390();
  __chkstk_darwin(v20);
  sub_10022C49C();
  uint64_t v76 = v21;
  uint64_t v68 = sub_10000566C(&qword_10070FE30);
  sub_1001F3BBC();
  __chkstk_darwin(v22);
  sub_10022C2C0(v23, v59);
  __chkstk_darwin(v24);
  uint64_t v66 = (char *)&v59 - v25;
  uint64_t v26 = sub_10000566C(&qword_100710570);
  uint64_t v27 = sub_100224550(v26);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t *)((char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v59 - v31;
  int64_t v75 = *(void *)(v2 + 16);
  sub_1005E3410(v75);
  uint64_t v65 = v4 + 32;
  uint64_t v59 = v6;
  swift_retain();
  uint64_t v71 = v4;
  swift_retain();
  uint64_t v70 = v2;
  swift_retain();
  int64_t v33 = 0;
  uint64_t v74 = v14;
  uint64_t v72 = v0;
  while (1)
  {
    if (v33 >= v75)
    {
      uint64_t v45 = sub_10000566C(&qword_10070FE38);
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v30, 1, 1, v45);
      goto LABEL_7;
    }
    if (v33 < 0) {
      break;
    }
    if ((unint64_t)v33 >= *(void *)(v71 + 16)) {
      goto LABEL_25;
    }
    uint64_t v34 = v68;
    uint64_t v35 = (uint64_t)&v66[*(int *)(v68 + 48)];
    uint64_t v36 = (uint64_t *)(v65 + 16 * v33);
    uint64_t v37 = *v36;
    uint64_t v38 = v36[1];
    sub_10022C490();
    sub_100223AC8(v70 + v39 + *(void *)(v40 + 72) * v33++, v35, &qword_10070FE28);
    uint64_t v41 = v67 + *(int *)(v34 + 48);
    sub_1001F39D8(v35, v41, &qword_10070FE28);
    uint64_t v42 = sub_10000566C(&qword_10070FE38);
    uint64_t v43 = (uint64_t)v30 + *(int *)(v42 + 48);
    *uint64_t v30 = v37;
    v30[1] = v38;
    uint64_t v44 = v41;
    uint64_t v14 = v74;
    uint64_t v0 = v72;
    sub_1001F39D8(v44, v43, &qword_10070FE28);
    storeEnumTagSinglePayload for ClientCommand((uint64_t)v30, 0, 1, v42);
    swift_bridgeObjectRetain();
LABEL_7:
    sub_1001F39D8((uint64_t)v30, (uint64_t)v32, &qword_100710570);
    uint64_t v46 = sub_10000566C(&qword_10070FE38);
    sub_100207FC4((uint64_t)v32, 1, v46);
    if (v47)
    {
      swift_release();
      swift_release();
      swift_release();
      sub_1001FE57C();
      return;
    }
    uint64_t v48 = v76;
    sub_1001F39D8((uint64_t)&v32[*(int *)(v46 + 48)], v76, &qword_10070FE28);
    sub_1005E1DB0();
    sub_100223AC8(v48, v0, &qword_10070FE28);
    sub_100207FC4(v0, 1, v14);
    if (v47)
    {
      sub_1005E3420(0);
    }
    else
    {
      uint64_t v49 = v73;
      sub_10022C05C(v0, v73, (void (*)(void))type metadata accessor for ParameterValue);
      sub_1005E3420(1u);
      uint64_t v50 = v64;
      sub_10022C0B0(v49, (uint64_t)v64, (void (*)(void))type metadata accessor for ParameterValue);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v52 = *v50;
        sub_10022C83C();
        sub_1005E3410(*(void *)(v52 + 16));
        uint64_t v53 = *(void *)(v52 + 16);
        if (v53)
        {
          uint64_t v54 = v52 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_1005E1DB0();
            swift_bridgeObjectRelease();
            v54 += 16;
            --v53;
          }
          while (v53);
          swift_bridgeObjectRelease();
          uint64_t v14 = v74;
          uint64_t v0 = v72;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v14 = v74;
        }
      }
      else
      {
        uint64_t v55 = v63;
        sub_1001F39D8((uint64_t)v50, v63, &qword_1007104D8);
        sub_10022C824();
        uint64_t v56 = v61;
        sub_100223AC8(v55, v61, &qword_1007104D8);
        sub_100207FC4(v56, 1, v62);
        if (v47)
        {
          sub_10022C83C();
        }
        else
        {
          uint64_t v57 = v60;
          sub_1001F39D8(v56, v60, &qword_1007104C8);
          sub_10022C824();
          sub_10000566C(&qword_100710538);
          sub_10022AAC0();
          sub_1005E19C0();
          uint64_t v58 = v57;
          uint64_t v0 = v72;
          sub_1001F3A28(v58, &qword_1007104C8);
        }
        uint64_t v14 = v74;
        sub_1001F3A28(v63, &qword_1007104D8);
      }
      sub_10022C104(v73, (void (*)(void))type metadata accessor for ParameterValue);
    }
    sub_1001F3A28(v76, &qword_10070FE28);
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_100225DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10022C2E0(a1, a2, a3, a4);
  if (v5)
  {
    uint64_t v11 = *(void *)(v4 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = 0;
    while (v7 != v11)
    {
      uint64_t v8 = *(void *)(a4 + 32 + 8 * v7);
      sub_1001F969C();
      sub_1005E3400();
      sub_1005E3410(*(void *)(v8 + 16));
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v10 = v8 + 54;
        do
        {
          v10 += 24;
          sub_1001F969C();
          sub_1005E3400();
          --v9;
        }
        while (v9);
      }
      if (++v7 == v5)
      {
        swift_release();
        swift_release();
        swift_release();
        return;
      }
    }
    __break(1u);
  }
}

void sub_100225EFC()
{
  sub_10022C474();
  sub_10022C2E0(v2, v3, v4, v5);
  if (v0)
  {
    sub_10022C680();
    swift_retain();
    swift_retain();
    do
    {
      if (!v1)
      {
        __break(1u);
        return;
      }
      sub_10022C668();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10022C7A0();
    }
    while (!v6);
    swift_release();
    swift_release();
    sub_10022C304();
    swift_release();
  }
  else
  {
    sub_10022C304();
  }
}

uint64_t sub_100225FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = sub_10000566C(&qword_1007104C8);
  __chkstk_darwin(v48);
  uint64_t v46 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_1007104D8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v47 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v58 = (uint64_t)&v45 - v11;
  uint64_t v59 = type metadata accessor for ParameterValue();
  uint64_t v53 = *(void *)(v59 - 8);
  uint64_t v12 = __chkstk_darwin(v59);
  uint64_t v14 = (uint64_t *)((char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v52 = sub_10000566C(&qword_10070FE60);
  uint64_t v17 = __chkstk_darwin(v52);
  char v51 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v50 = (char *)&v45 - v19;
  uint64_t v20 = sub_10000566C(&qword_100710578);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (uint64_t *)((char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v45 - v24;
  int64_t v60 = *(void *)(a4 + 16);
  sub_1005E3410(v60);
  uint64_t v49 = a3 + 32;
  uint64_t v45 = a2;
  swift_retain();
  uint64_t v55 = a3;
  swift_retain();
  uint64_t v54 = a4;
  uint64_t v26 = (uint64_t)v16;
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  uint64_t v56 = v16;
  uint64_t v57 = v14;
  while (1)
  {
    if (v28 >= v60)
    {
      uint64_t v37 = sub_10000566C(&qword_10070FE68);
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v23, 1, 1, v37);
      goto LABEL_7;
    }
    if (v28 < 0) {
      break;
    }
    if ((unint64_t)v28 >= *(void *)(v55 + 16)) {
      goto LABEL_21;
    }
    uint64_t v29 = v52;
    uint64_t v30 = (uint64_t)&v50[*(int *)(v52 + 48)];
    uint64_t v31 = (uint64_t *)(v49 + 16 * v28);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    sub_10022C0B0(v54+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v28++, v30, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t v34 = (uint64_t)&v51[*(int *)(v29 + 48)];
    sub_10022C05C(v30, v34, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t v35 = sub_10000566C(&qword_10070FE68);
    uint64_t v36 = (uint64_t)v23 + *(int *)(v35 + 48);
    *uint64_t v23 = v32;
    v23[1] = v33;
    uint64_t v14 = v57;
    sub_10022C05C(v34, v36, (void (*)(void))type metadata accessor for ParameterValue);
    storeEnumTagSinglePayload for ClientCommand((uint64_t)v23, 0, 1, v35);
    swift_bridgeObjectRetain();
LABEL_7:
    sub_1001F39D8((uint64_t)v23, (uint64_t)v25, &qword_100710578);
    uint64_t v38 = sub_10000566C(&qword_10070FE68);
    if (getEnumTagSinglePayload for ClientCommand((uint64_t)v25, 1, v38) == 1)
    {
      swift_release();
      swift_release();
      return swift_release();
    }
    sub_10022C05C((uint64_t)&v25[*(int *)(v38 + 48)], v26, (void (*)(void))type metadata accessor for ParameterValue);
    sub_1005E1DB0();
    sub_10022C0B0(v26, (uint64_t)v14, (void (*)(void))type metadata accessor for ParameterValue);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = *v14;
      sub_1005E3410(1uLL);
      sub_1005E3410(*(void *)(v39 + 16));
      uint64_t v40 = *(void *)(v39 + 16);
      if (v40)
      {
        uint64_t v41 = v39 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1005E1DB0();
          swift_bridgeObjectRelease();
          v41 += 16;
          --v40;
        }
        while (v40);
        swift_bridgeObjectRelease();
        uint64_t v26 = (uint64_t)v56;
        uint64_t v14 = v57;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v42 = v58;
      sub_1001F39D8((uint64_t)v14, v58, &qword_1007104D8);
      sub_1005E3410(0);
      uint64_t v43 = v47;
      sub_100223AC8(v42, v47, &qword_1007104D8);
      if (getEnumTagSinglePayload for ClientCommand(v43, 1, v48) == 1)
      {
        sub_1005E3410(1uLL);
      }
      else
      {
        uint64_t v44 = v46;
        sub_1001F39D8(v43, v46, &qword_1007104C8);
        sub_1005E3410(0);
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v44, &qword_1007104C8);
      }
      uint64_t v26 = (uint64_t)v56;
      sub_1001F3A28(v58, &qword_1007104D8);
    }
    sub_10022C104(v26, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_10022660C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v8);
  sub_100208054();
  uint64_t v64 = v9;
  uint64_t v10 = sub_10000566C(&qword_1007104D8);
  uint64_t v11 = sub_100224550(v10);
  __chkstk_darwin(v11);
  sub_1001F3FE0();
  uint64_t v65 = v12;
  sub_1001F475C();
  __chkstk_darwin(v13);
  uint64_t v75 = (uint64_t)v63 - v14;
  uint64_t v76 = sub_10022C440();
  sub_10022C254();
  uint64_t v71 = v15;
  __chkstk_darwin(v16);
  sub_10022C390();
  uint64_t v18 = __chkstk_darwin(v17);
  sub_10022C3AC(v18, v19, v20, v21, v22, v23, v24, v25, v63[0]);
  uint64_t v70 = sub_10000566C(&qword_100710558);
  sub_1001F3BBC();
  __chkstk_darwin(v26);
  uint64_t v69 = (char *)v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F475C();
  __chkstk_darwin(v28);
  sub_10022C49C();
  uint64_t v68 = v29;
  uint64_t v30 = sub_10000566C(&qword_100710560);
  uint64_t v31 = sub_100224550(v30);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)v63 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)v63 - v35;
  int64_t v77 = *(void *)(a4 + 16);
  sub_1005E3410(v77);
  uint64_t v67 = a3 + 32;
  v63[1] = a2;
  swift_retain();
  uint64_t v73 = a3;
  swift_retain();
  uint64_t v72 = a4;
  uint64_t result = swift_retain();
  int64_t v38 = 0;
  uint64_t v74 = v4;
  while (1)
  {
    if (v38 >= v77)
    {
      int64_t v78 = v38;
      uint64_t v51 = sub_10000566C(&qword_100710568);
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v34, 1, 1, v51);
      goto LABEL_7;
    }
    if (v38 < 0) {
      break;
    }
    if ((unint64_t)v38 >= *(void *)(v73 + 16)) {
      goto LABEL_21;
    }
    uint64_t v39 = v70;
    uint64_t v40 = v68 + *(int *)(v70 + 48);
    uint64_t v41 = (uint64_t *)(v67 + 24 * v38);
    uint64_t v42 = *v41;
    int v43 = *((_DWORD *)v41 + 4);
    __int16 v44 = *((_WORD *)v41 + 10);
    char v45 = *((unsigned char *)v41 + 22);
    uint64_t v46 = v72
        + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))
        + *(void *)(v71 + 72) * v38;
    int64_t v78 = v38 + 1;
    uint64_t v47 = v41[1];
    sub_10022C0B0(v46, v40, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t v48 = (uint64_t)&v69[*(int *)(v39 + 48)];
    sub_10022C05C(v40, v48, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t v49 = sub_10000566C(&qword_100710568);
    uint64_t v50 = (uint64_t)&v34[*(int *)(v49 + 48)];
    *(void *)uint64_t v34 = v42;
    *((void *)v34 + 1) = v47;
    *((_DWORD *)v34 + 4) = v43;
    *((_WORD *)v34 + 10) = v44;
    v34[22] = v45;
    uint64_t v4 = v74;
    sub_10022C05C(v48, v50, (void (*)(void))type metadata accessor for ParameterValue);
    storeEnumTagSinglePayload for ClientCommand((uint64_t)v34, 0, 1, v49);
    swift_retain();
LABEL_7:
    sub_1001F39D8((uint64_t)v34, (uint64_t)v36, &qword_100710560);
    uint64_t v52 = sub_10000566C(&qword_100710568);
    sub_100207FC4((uint64_t)v36, 1, v52);
    if (v53)
    {
      swift_release();
      swift_release();
      return swift_release();
    }
    uint64_t v54 = v79;
    sub_10022C05C((uint64_t)&v36[*(int *)(v52 + 48)], v79, (void (*)(void))type metadata accessor for ParameterValue);
    sub_1001F969C();
    sub_1005E3400();
    sub_10022C0B0(v54, (uint64_t)v4, (void (*)(void))type metadata accessor for ParameterValue);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v55 = *v4;
      sub_10022C83C();
      sub_1005E3410(*(void *)(v55 + 16));
      uint64_t v56 = *(void *)(v55 + 16);
      if (v56)
      {
        uint64_t v57 = v55 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1005E1DB0();
          swift_bridgeObjectRelease();
          v57 += 16;
          --v56;
        }
        while (v56);
        swift_bridgeObjectRelease();
        uint64_t v4 = v74;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v58 = v75;
      sub_1001F39D8((uint64_t)v4, v75, &qword_1007104D8);
      sub_10022C824();
      uint64_t v59 = v65;
      sub_100223AC8(v58, v65, &qword_1007104D8);
      uint64_t v60 = sub_10022C3C0();
      sub_100207FC4(v60, v61, v66);
      if (v53)
      {
        sub_10022C83C();
      }
      else
      {
        uint64_t v62 = v64;
        sub_1001F39D8(v59, v64, &qword_1007104C8);
        sub_10022C824();
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v62, &qword_1007104C8);
      }
      sub_1001F3A28(v75, &qword_1007104D8);
    }
    sub_10022C104(v79, (void (*)(void))type metadata accessor for ParameterValue);
    uint64_t result = swift_release();
    int64_t v38 = v78;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

void sub_100226BF8(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v5 = (unint64_t *)(v4 + 32);
    do
    {
      unint64_t v6 = *v5++;
      sub_1002238FC(v6);
      SearchKey.hash(into:)(v3, v6);
      sub_1002239B4(v6);
      --v2;
    }
    while (v2);
  }
}

void sub_100226C50(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (unsigned int *)(v3 + 40);
    do
    {
      unsigned int v5 = *v4;
      v4 += 4;
      sub_1005E3410(v5 | ((unint64_t)v5 << 32));
      --v2;
    }
    while (v2);
  }
}

void sub_100226C94(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (Swift::UInt *)(v3 + 32);
    do
    {
      Swift::UInt v5 = *v4++;
      sub_1005E3410(v5);
      --v2;
    }
    while (v2);
  }
}

void sub_100226CD4(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    Swift::UInt v5 = (unint64_t *)(v4 + 32);
    do
    {
      unint64_t v7 = *v5++;
      unint64_t v6 = v7;
      if ((v7 & 0x8000000000000000) != 0)
      {
        uint64_t v11 = *(void *)((v6 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v12 = *(void *)((v6 & 0x7FFFFFFFFFFFFFFFLL) + 0x40);
        sub_1005E3410(1uLL);
        sub_1001F969C();
        sub_1005E3400();
        if (v11)
        {
          sub_1005E3420(1u);
          sub_1001F969C();
          sub_10022C700();
        }
        else
        {
          sub_1005E3420(0);
        }
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain_n();
        sub_100226CD4(v3, v12);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      uint64_t v8 = *(void *)(v6 + 16);
      uint64_t v9 = *(void *)(v6 + 40);
      uint64_t v10 = *(void *)(v6 + 64);
      uint64_t v13 = *(void *)(v6 + 88);
      sub_1005E3410(0);
      if (v8)
      {
        sub_1005E3420(1u);
        sub_1001F969C();
        sub_10022C730();
        sub_1005E3400();
        if (v9) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1005E3420(0);
        if (v9)
        {
LABEL_6:
          sub_1005E3420(1u);
          sub_1001F969C();
          sub_10022C86C();
          sub_10022C700();
          goto LABEL_11;
        }
      }
      sub_1005E3420(0);
LABEL_11:
      if (v10)
      {
        sub_1005E3420(1u);
        sub_1001F969C();
        sub_10022C7B0();
        sub_10022C700();
        if (!v13) {
          goto LABEL_15;
        }
      }
      else
      {
        sub_1005E3420(0);
        if (!v13)
        {
LABEL_15:
          sub_1005E3420(0);
          goto LABEL_18;
        }
      }
      sub_1005E3420(1u);
      sub_1001F969C();
      sub_10022C7B0();
      sub_10022C700();
LABEL_18:
      --v2;
    }
    while (v2);
  }
}

void sub_100226FB4(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_10022C458();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v2;
    }
    while (v2);
  }
}

void sub_100227010()
{
  sub_1001FE5B4();
  uint64_t v5 = v4;
  uint64_t v6 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v7);
  sub_10022C618(v8, v58);
  uint64_t v9 = sub_10000566C(&qword_1007104D8);
  uint64_t v10 = sub_100224550(v9);
  __chkstk_darwin(v10);
  sub_10022C390();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v71 = sub_10022C40C(v12, v13, v14, v15, v16, v17, v18, v19, v59);
  sub_1001F3BBC();
  __chkstk_darwin(v20);
  sub_10022C2C0(v21, v60);
  uint64_t v23 = __chkstk_darwin(v22);
  sub_10022C4C4(v23, v24, v25, v26, v27, v28, v29, v30, v61);
  uint64_t v31 = sub_10000566C(&qword_10070FE28);
  uint64_t v32 = sub_100224550(v31);
  __chkstk_darwin(v32);
  sub_10022492C(v33, v62);
  uint64_t v69 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v34);
  sub_10022C33C();
  type metadata accessor for MetadataOption();
  sub_10022C254();
  uint64_t v36 = v35;
  __chkstk_darwin(v37);
  sub_10022C320();
  __chkstk_darwin(v38);
  sub_10022C430();
  Swift::UInt v39 = *(void *)(v5 + 16);
  sub_1005E3410(v39);
  Swift::UInt v74 = v39;
  if (v39)
  {
    uint64_t v40 = 0;
    sub_10022C490();
    uint64_t v41 = *(void *)(v36 + 72);
    uint64_t v72 = v41;
    uint64_t v73 = v43 + v42;
    uint64_t v63 = v6;
    uint64_t v65 = v3;
    do
    {
      sub_10022C0B0(v73 + v41 * v40, v0, (void (*)(void))type metadata accessor for MetadataOption);
      sub_10022C4A8();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          sub_10022C2A8();
          sub_1005E1DB0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v47 = sub_10022C8D4();
          sub_1001F39D8(v47, v48, &qword_10070FE48);
          sub_10022C930();
          sub_10022C748();
          uint64_t v49 = sub_10022C504(v69);
          sub_100223AC8(v49, v50, &qword_10070FE28);
          uint64_t v51 = sub_10022C3C0();
          sub_100207FC4(v51, v52, v71);
          if (v53)
          {
            sub_10022C514();
          }
          else
          {
            sub_10022C05C(v70, v68, (void (*)(void))type metadata accessor for ParameterValue);
            sub_10022C52C();
            sub_10022C0B0(v68, (uint64_t)v66, (void (*)(void))type metadata accessor for ParameterValue);
            int v54 = swift_getEnumCaseMultiPayload();
            if (v54 == 1)
            {
              uint64_t v55 = *v66;
              sub_10022C2A8();
              sub_1005E3410(*(void *)(v55 + 16));
              uint64_t v56 = *(void *)(v55 + 16);
              if (v56)
              {
                uint64_t v57 = v55 + 40;
                do
                {
                  swift_bridgeObjectRetain();
                  sub_10022C3F0();
                  swift_bridgeObjectRelease();
                  v57 += 16;
                  --v56;
                }
                while (v56);
                swift_bridgeObjectRelease();
                uint64_t v6 = v63;
                uint64_t v3 = v65;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              uint64_t v41 = v72;
            }
            else
            {
              sub_1001F39D8((uint64_t)v66, v67, &qword_1007104D8);
              sub_10022C290();
              sub_100223AC8(v67, v3, &qword_1007104D8);
              sub_100207FC4(v3, 1, v6);
              if (v53)
              {
                sub_10022C2A8();
              }
              else
              {
                sub_1001F39D8(v3, v64, &qword_1007104C8);
                sub_10022C290();
                sub_10000566C(&qword_100710538);
                sub_10022AAC0();
                sub_10022C7C4();
                uint64_t v3 = v65;
                sub_1001F3A28(v64, &qword_1007104C8);
              }
              uint64_t v41 = v72;
              sub_1001F3A28(v67, &qword_1007104D8);
            }
            sub_10022C104(v68, (void (*)(void))type metadata accessor for ParameterValue);
          }
          sub_1001F3A28(v1, &qword_10070FE48);
        }
      }
      else
      {
        Swift::UInt v45 = *v2;
        sub_10022C290();
        Swift::UInt v46 = v45;
        uint64_t v41 = v72;
        sub_1005E3410(v46);
      }
      ++v40;
      sub_10022C104(v0, (void (*)(void))type metadata accessor for MetadataOption);
    }
    while (v40 != v74);
  }
  sub_1001FE57C();
}

void sub_1002274CC(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (Swift::UInt *)(v3 + 48);
    do
    {
      Swift::UInt v5 = *v4;
      v4 += 3;
      swift_bridgeObjectRetain();
      sub_10022C458();
      sub_1005E3410(v5);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
  }
}

void sub_100227530()
{
  sub_1001FE5B4();
  uint64_t v3 = v2;
  uint64_t v65 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v4);
  sub_10022C618(v5, v61);
  uint64_t v6 = sub_10000566C(&qword_1007104D8);
  uint64_t v7 = sub_100224550(v6);
  __chkstk_darwin(v7);
  sub_1001F3FE0();
  uint64_t v64 = v8;
  sub_1001F475C();
  __chkstk_darwin(v9);
  uint64_t v67 = (uint64_t)&v61 - v10;
  uint64_t v71 = sub_10022C440();
  sub_1001F3BBC();
  __chkstk_darwin(v11);
  sub_1001F3FE0();
  uint64_t v66 = (uint64_t *)v12;
  sub_1001F475C();
  uint64_t v14 = __chkstk_darwin(v13);
  sub_10022C3AC(v14, v15, v16, v17, v18, v19, v20, v21, v61);
  uint64_t v22 = sub_10000566C(&qword_10070FE28);
  uint64_t v23 = sub_100224550(v22);
  __chkstk_darwin(v23);
  sub_10022C5E0(v24, v61);
  uint64_t v69 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v25);
  sub_10022C5FC(v26, v61);
  uint64_t v27 = type metadata accessor for SearchReturnOption();
  sub_10022C254();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_10022C320();
  __chkstk_darwin(v31);
  sub_10022C430();
  Swift::UInt v32 = *(void *)(v3 + 16);
  sub_1005E3410(v32);
  if (v32)
  {
    uint64_t v33 = 0;
    sub_10022C490();
    uint64_t v34 = *(void *)(v29 + 72);
    uint64_t v36 = v3 + v35;
    Swift::UInt v72 = v32;
    uint64_t v73 = v27;
    do
    {
      uint64_t v37 = v36 + v34 * v33++;
      sub_10022C0B0(v37, v0, (void (*)(void))type metadata accessor for SearchReturnOption);
      sub_10022C4A8();
      sub_10022C8D4();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1001F39D8(v1, v74, &qword_10070FE48);
          sub_1005E3410(6uLL);
          sub_10022C748();
          uint64_t v43 = v70;
          uint64_t v44 = sub_10022C504(v69);
          sub_100223AC8(v44, v45, &qword_10070FE28);
          uint64_t v46 = sub_10022C3C0();
          sub_100207FC4(v46, v47, v71);
          if (v48)
          {
            sub_10022C514();
          }
          else
          {
            uint64_t v50 = v68;
            sub_10022C05C(v43, v68, (void (*)(void))type metadata accessor for ParameterValue);
            sub_10022C52C();
            uint64_t v51 = v66;
            sub_10022C0B0(v50, (uint64_t)v66, (void (*)(void))type metadata accessor for ParameterValue);
            sub_10022C544();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v53 = *v51;
              sub_10022C2A8();
              sub_1005E3410(*(void *)(v53 + 16));
              uint64_t v54 = *(void *)(v53 + 16);
              if (v54)
              {
                uint64_t v62 = v34;
                uint64_t v55 = v53 + 40;
                do
                {
                  swift_bridgeObjectRetain();
                  sub_10022C3F0();
                  swift_bridgeObjectRelease();
                  v55 += 16;
                  --v54;
                }
                while (v54);
                swift_bridgeObjectRelease();
                Swift::UInt v32 = v72;
                uint64_t v34 = v62;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              uint64_t v56 = v67;
              sub_1001F39D8((uint64_t)v51, v67, &qword_1007104D8);
              sub_10022C290();
              uint64_t v57 = v64;
              sub_100223AC8(v56, v64, &qword_1007104D8);
              uint64_t v58 = sub_10022C3C0();
              sub_100207FC4(v58, v59, v65);
              if (v48)
              {
                sub_10022C2A8();
              }
              else
              {
                uint64_t v60 = v63;
                sub_1001F39D8(v57, v63, &qword_1007104C8);
                sub_10022C290();
                sub_10000566C(&qword_100710538);
                sub_10022AAC0();
                sub_10022C804();
                sub_1001F3A28(v60, &qword_1007104C8);
              }
              sub_1001F3A28(v67, &qword_1007104D8);
            }
            sub_10022C104(v68, (void (*)(void))type metadata accessor for ParameterValue);
          }
          sub_1001F3A28(v74, &qword_10070FE48);
          break;
        case 2u:
          Swift::UInt v49 = 0;
          goto LABEL_13;
        case 3u:
          Swift::UInt v49 = 1;
          goto LABEL_13;
        case 4u:
          Swift::UInt v49 = 2;
          goto LABEL_13;
        case 5u:
          Swift::UInt v49 = 3;
          goto LABEL_13;
        case 6u:
          Swift::UInt v49 = 4;
LABEL_13:
          sub_1005E3410(v49);
          break;
        default:
          uint64_t v38 = v34;
          uint64_t v39 = v36;
          Swift::UInt32 v41 = *(_DWORD *)v1;
          Swift::UInt32 v40 = *(_DWORD *)(v1 + 4);
          char v42 = *(unsigned char *)(v1 + 8);
          sub_1005E3410(5uLL);
          sub_1005E3410((v42 & 1) != 0);
          sub_1005E3440(v41);
          sub_1005E3440(v40);
          uint64_t v36 = v39;
          uint64_t v34 = v38;
          Swift::UInt v32 = v72;
          break;
      }
      sub_10022C104(v0, (void (*)(void))type metadata accessor for SearchReturnOption);
    }
    while (v33 != v32);
  }
  sub_1001FE57C();
}

void sub_100227A54()
{
  sub_1001FE5B4();
  sub_10022C880();
  uint64_t v59 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v5);
  sub_10022C5C4(v6, v53);
  uint64_t v7 = sub_10000566C(&qword_1007104D8);
  uint64_t v8 = sub_100224550(v7);
  __chkstk_darwin(v8);
  sub_10022C570();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v18 = sub_10022C40C(v10, v11, v12, v13, v14, v15, v16, v17, v54);
  sub_1001F3BBC();
  __chkstk_darwin(v19);
  sub_1001F3FE0();
  uint64_t v62 = v20;
  sub_1001F475C();
  uint64_t v22 = __chkstk_darwin(v21);
  sub_10022C3AC(v22, v23, v24, v25, v26, v27, v28, v29, v55);
  uint64_t v30 = sub_10000566C(&qword_10070FE28);
  uint64_t v31 = sub_100224550(v30);
  __chkstk_darwin(v31);
  sub_10022C5E0(v32, v56);
  uint64_t v64 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v33);
  sub_10022C33C();
  type metadata accessor for StoreModifier();
  sub_10022C254();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  sub_10022C320();
  __chkstk_darwin(v37);
  sub_10022C430();
  Swift::UInt v38 = *(void *)(v0 + 16);
  sub_1005E3410(v38);
  Swift::UInt v68 = v38;
  if (v38)
  {
    uint64_t v39 = 0;
    sub_10022C490();
    uint64_t v67 = v0 + v40;
    uint64_t v66 = *(void *)(v35 + 72);
    uint64_t v60 = v18;
    uint64_t v58 = v4;
    do
    {
      sub_10022C0B0(v67 + v66 * v39, v1, (void (*)(void))type metadata accessor for StoreModifier);
      sub_10022C4A8();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v41 = sub_10022C8D4();
        sub_1001F39D8(v41, v42, &qword_10070FE48);
        sub_10022C2A8();
        sub_10022C748();
        uint64_t v43 = sub_10022C504(v64);
        sub_100223AC8(v43, v44, &qword_10070FE28);
        uint64_t v45 = sub_10022C3C0();
        sub_100207FC4(v45, v46, v18);
        if (v47)
        {
          sub_10022C514();
        }
        else
        {
          sub_10022C05C(v65, v63, (void (*)(void))type metadata accessor for ParameterValue);
          sub_10022C52C();
          sub_10022C0B0(v63, (uint64_t)v62, (void (*)(void))type metadata accessor for ParameterValue);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v50 = *v62;
            sub_10022C2A8();
            sub_1005E3410(*(void *)(v50 + 16));
            uint64_t v51 = *(void *)(v50 + 16);
            if (v51)
            {
              uint64_t v52 = v50 + 40;
              do
              {
                swift_bridgeObjectRetain();
                sub_10022C3F0();
                swift_bridgeObjectRelease();
                v52 += 16;
                --v51;
              }
              while (v51);
              swift_bridgeObjectRelease();
              uint64_t v4 = v58;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v18 = v60;
          }
          else
          {
            sub_1001F39D8((uint64_t)v62, v61, &qword_1007104D8);
            sub_10022C290();
            sub_100223AC8(v61, v4, &qword_1007104D8);
            sub_100207FC4(v4, 1, v59);
            if (v47)
            {
              sub_10022C2A8();
            }
            else
            {
              sub_1001F39D8(v4, v57, &qword_1007104C8);
              sub_10022C290();
              sub_10000566C(&qword_100710538);
              sub_10022AAC0();
              sub_10022C69C();
              sub_1005E19C0();
              uint64_t v4 = v58;
              sub_1001F3A28(v57, &qword_1007104C8);
            }
            uint64_t v18 = v60;
            sub_1001F3A28(v61, &qword_1007104D8);
          }
          sub_10022C104(v63, (void (*)(void))type metadata accessor for ParameterValue);
        }
        sub_1001F3A28(v2, &qword_10070FE48);
      }
      else
      {
        Swift::UInt64 v48 = *v3;
        sub_10022C290();
        sub_1005E3450(v48);
      }
      ++v39;
      sub_10022C104(v1, (void (*)(void))type metadata accessor for StoreModifier);
    }
    while (v39 != v68);
  }
  sub_1001FE57C();
}

void sub_100227EAC()
{
  sub_1001FE5B4();
  sub_10022C880();
  uint64_t v70 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v4);
  sub_10022C5C4(v5, v67);
  uint64_t v6 = sub_10000566C(&qword_1007104D8);
  uint64_t v7 = sub_100224550(v6);
  __chkstk_darwin(v7);
  uint64_t v69 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F475C();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v18 = sub_10022C40C(v10, v11, v12, v13, v14, v15, v16, v17, v67);
  sub_1001F3BBC();
  __chkstk_darwin(v19);
  sub_10022C2C0(v20, v67);
  uint64_t v22 = __chkstk_darwin(v21);
  sub_10022C4C4(v22, v23, v24, v25, v26, v27, v28, v29, v67);
  uint64_t v30 = sub_10000566C(&qword_10070FE28);
  uint64_t v31 = sub_100224550(v30);
  __chkstk_darwin(v31);
  sub_10022492C(v32, v67);
  uint64_t v74 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v33);
  sub_10022C33C();
  uint64_t Modifier = type metadata accessor for FetchModifier();
  sub_10022C254();
  uint64_t v36 = v35;
  __chkstk_darwin(v37);
  sub_10022C320();
  __chkstk_darwin(v38);
  sub_10022C430();
  Swift::UInt v39 = *(void *)(v0 + 16);
  sub_1005E3410(v39);
  Swift::UInt v80 = v39;
  if (v39)
  {
    uint64_t v40 = 0;
    sub_10022C490();
    uint64_t v79 = v0 + v41;
    uint64_t v42 = *(void *)(v36 + 72);
    uint64_t v77 = Modifier;
    uint64_t v78 = v42;
    uint64_t v76 = v18;
    do
    {
      sub_10022C0B0(v79 + v78 * v40, v1, (void (*)(void))type metadata accessor for FetchModifier);
      sub_10022C4A8();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          Swift::UInt32 v45 = *(_DWORD *)v3;
          Swift::UInt32 v44 = *(_DWORD *)(v3 + 4);
          char v46 = *(unsigned char *)(v3 + 8);
          sub_10022C2A8();
          sub_1005E3410((v46 & 1) != 0);
          sub_1005E3440(v45);
          sub_1005E3440(v44);
          uint64_t v18 = v76;
        }
        else
        {
          uint64_t v48 = sub_10022C8D4();
          sub_1001F39D8(v48, v49, &qword_10070FE48);
          sub_10022C930();
          sub_10022C748();
          uint64_t v50 = v75;
          uint64_t v51 = sub_10022C504(v74);
          sub_100223AC8(v51, v52, &qword_10070FE28);
          uint64_t v53 = sub_10022C3C0();
          sub_100207FC4(v53, v54, v18);
          if (v55)
          {
            sub_10022C514();
          }
          else
          {
            uint64_t v56 = v73;
            sub_10022C05C(v50, v73, (void (*)(void))type metadata accessor for ParameterValue);
            sub_10022C52C();
            uint64_t v57 = v71;
            sub_10022C0B0(v56, (uint64_t)v71, (void (*)(void))type metadata accessor for ParameterValue);
            sub_10022C778();
            int v58 = swift_getEnumCaseMultiPayload();
            if (v58 == 1)
            {
              uint64_t v59 = *v57;
              sub_10022C2A8();
              sub_1005E3410(*(void *)(v59 + 16));
              uint64_t v60 = *(void *)(v59 + 16);
              if (v60)
              {
                uint64_t v61 = v59 + 40;
                do
                {
                  swift_bridgeObjectRetain();
                  sub_10022C3F0();
                  swift_bridgeObjectRelease();
                  v61 += 16;
                  --v60;
                }
                while (v60);
                swift_bridgeObjectRelease();
                uint64_t v18 = v76;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              uint64_t v62 = v72;
              sub_1001F39D8((uint64_t)v57, v72, &qword_1007104D8);
              sub_10022C290();
              uint64_t v63 = v69;
              sub_100223AC8(v62, v69, &qword_1007104D8);
              uint64_t v64 = sub_10022C3C0();
              sub_100207FC4(v64, v65, v70);
              if (v55)
              {
                sub_10022C2A8();
              }
              else
              {
                uint64_t v66 = v68;
                sub_1001F39D8(v63, v68, &qword_1007104C8);
                sub_10022C290();
                sub_10000566C(&qword_100710538);
                sub_10022AAC0();
                sub_10022C7C4();
                sub_1001F3A28(v66, &qword_1007104C8);
              }
              sub_1001F3A28(v72, &qword_1007104D8);
            }
            sub_10022C104(v73, (void (*)(void))type metadata accessor for ParameterValue);
          }
          sub_1001F3A28(v2, &qword_10070FE48);
        }
      }
      else
      {
        Swift::UInt64 v47 = *(void *)v3;
        sub_10022C290();
        sub_1005E3450(v47);
      }
      ++v40;
      sub_10022C104(v1, (void (*)(void))type metadata accessor for FetchModifier);
    }
    while (v40 != v80);
  }
  sub_1001FE57C();
}

void sub_100228340(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1005E3410(v3);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a2 + 32;
    Swift::UInt v54 = v3;
    uint64_t v55 = a2 + 32;
    while (1)
    {
      uint64_t v6 = v5 + 40 * v4;
      Swift::UInt64 v7 = *(void *)v6;
      uint64_t v8 = *(void *)(v6 + 8);
      uint64_t v10 = *(void *)(v6 + 16);
      uint64_t v9 = *(void *)(v6 + 24);
      unint64_t v11 = *(unsigned int *)(v6 + 32) | ((unint64_t)*(unsigned __int8 *)(v6 + 36) << 32);
      switch(*(unsigned __int8 *)(v6 + 36) >> 5)
      {
        case 1:
          uint64_t v56 = *(void *)(v6 + 16);
          sub_1005E3410(8uLL);
          sub_1005E3420(v7 & 1);
          Swift::UInt v13 = *(void *)(v8 + 16);
          sub_1005E3410(v13);
          if (v13)
          {
            uint64_t v14 = (Swift::UInt *)(v8 + 32);
            do
            {
              Swift::UInt v15 = *v14++;
              sub_1005E3410(v15);
              --v13;
            }
            while (v13);
          }
          if (!(_BYTE)v9)
          {
            sub_1005E3410(2uLL);
            Swift::UInt v43 = *(void *)(v56 + 16);
            sub_1005E3410(v43);
            if (v43)
            {
              sub_10022C3CC();
              sub_10013B5CC(v56, 0);
              uint64_t v44 = v56 + 40;
              do
              {
                swift_bridgeObjectRetain();
                sub_1005E1DB0();
                swift_bridgeObjectRelease();
                v44 += 16;
                --v43;
              }
              while (v43);
              uint64_t v18 = v56;
              unsigned __int8 v19 = 0;
LABEL_86:
              sub_10013B5E0(v18, v19);
              Swift::UInt v3 = v54;
              uint64_t v5 = v55;
LABEL_91:
              if ((v11 & 0x100000000) == 0) {
                goto LABEL_92;
              }
              goto LABEL_98;
            }
LABEL_90:
            sub_10022C3CC();
            goto LABEL_91;
          }
          if (v9 == 1)
          {
            sub_1005E3410(3uLL);
            Swift::UInt v16 = *(void *)(v56 + 16);
            sub_1005E3410(v16);
            if (v16)
            {
              sub_10022C3CC();
              sub_10013B5CC(v56, 1u);
              uint64_t v17 = v56 + 40;
              do
              {
                swift_bridgeObjectRetain();
                sub_1005E1DB0();
                swift_bridgeObjectRelease();
                v17 += 16;
                --v16;
              }
              while (v16);
              uint64_t v18 = v56;
              unsigned __int8 v19 = 1;
              goto LABEL_86;
            }
            goto LABEL_90;
          }
          switch(v56)
          {
            case 1:
              sub_1005E3410(1uLL);
              uint64_t v45 = sub_10022C6AC();
              uint64_t v47 = 1;
              break;
            case 2:
              sub_1005E3410(4uLL);
              uint64_t v45 = sub_10022C6AC();
              uint64_t v47 = 2;
              break;
            case 3:
              sub_1005E3410(5uLL);
              uint64_t v45 = sub_10022C6AC();
              uint64_t v47 = 3;
              break;
            default:
              sub_1005E3410(0);
              uint64_t v45 = sub_10022C6AC();
              uint64_t v47 = 0;
              break;
          }
          sub_1001F379C(v45, v46, v47, v9, v11);
          if ((v11 & 0x100000000) == 0)
          {
LABEL_92:
            *((void *)&v48 + 1) = v11;
            *(void *)&long long v48 = v9;
            sub_1005E3420(1u);
            sub_1005E3440(HIDWORD(v9));
            uint64_t v5 = v55;
            sub_1005E3440((unint64_t)(v48 >> 32) >> 32);
            goto LABEL_99;
          }
LABEL_98:
          sub_1005E3420(0);
LABEL_99:
          uint64_t v49 = sub_10022C6AC();
          sub_1001F385C(v49, v50, v56, v9, v11);
LABEL_127:
          if (++v4 == v3) {
            return;
          }
          break;
        case 2:
          sub_1005E3410(0xBuLL);
          sub_1005E3450(v7);
          goto LABEL_127;
        case 3:
          sub_1005E3410(0xCuLL);
          sub_1005E3420(v7 & 1);
          Swift::UInt v20 = *(void *)(v8 + 16);
          sub_1005E3410(v20);
          if (v20)
          {
            uint64_t v21 = (Swift::UInt *)(v8 + 32);
            do
            {
              Swift::UInt v22 = *v21++;
              sub_1005E3410(v22);
              --v20;
            }
            while (v20);
          }
          if (v9)
          {
            Swift::UInt8 v26 = 0;
            goto LABEL_80;
          }
          sub_1005E3420(1u);
          sub_1005E3440(v10);
          sub_1005E3440(HIDWORD(v10));
          goto LABEL_127;
        case 4:
          sub_1005E3410(0xDuLL);
          Swift::UInt v23 = *(void *)(v7 + 16);
          sub_1005E3410(v23);
          if (v23)
          {
            uint64_t v24 = (Swift::UInt *)(v7 + 32);
            do
            {
              Swift::UInt v25 = *v24++;
              sub_1005E3410(v25);
              --v23;
            }
            while (v23);
          }
          goto LABEL_127;
        case 5:
          Swift::UInt v12 = 17;
          goto LABEL_25;
        case 6:
          if (v10 | v8 | v7 | v9) {
            BOOL v27 = 0;
          }
          else {
            BOOL v27 = v11 == 0xC000000000;
          }
          if (v27)
          {
            Swift::UInt v42 = 0;
          }
          else
          {
            uint64_t v28 = v10 | v8 | v9;
            if (v11 == 0xC000000000 && v7 == 1 && v28 == 0)
            {
              Swift::UInt v42 = 1;
            }
            else if (v11 == 0xC000000000 && v7 == 2 && v28 == 0)
            {
              Swift::UInt v42 = 2;
            }
            else if (v11 == 0xC000000000 && v7 == 3 && v28 == 0)
            {
              Swift::UInt v42 = 3;
            }
            else if (v11 == 0xC000000000 && v7 == 4 && v28 == 0)
            {
              Swift::UInt v42 = 4;
            }
            else if (v11 == 0xC000000000 && v7 == 5 && v28 == 0)
            {
              Swift::UInt v42 = 5;
            }
            else if (v11 == 0xC000000000 && v7 == 6 && v28 == 0)
            {
              Swift::UInt v42 = 6;
            }
            else
            {
              BOOL v41 = v11 == 0xC000000000 && v7 == 7;
              if (!v41 || v28)
              {
                BOOL v51 = v11 == 0xC000000000 && v7 == 8;
                if (!v51 || v28)
                {
                  BOOL v52 = v11 == 0xC000000000 && v7 == 9;
                  if (!v52 || v28)
                  {
                    BOOL v53 = v11 == 0xC000000000 && v7 == 10;
                    if (!v53 || v28) {
                      Swift::UInt v42 = 16;
                    }
                    else {
                      Swift::UInt v42 = 15;
                    }
                  }
                  else
                  {
                    Swift::UInt v42 = 14;
                  }
                }
                else
                {
                  Swift::UInt v42 = 10;
                }
              }
              else
              {
                Swift::UInt v42 = 9;
              }
            }
          }
          sub_1005E3410(v42);
          goto LABEL_127;
        default:
          Swift::UInt v12 = 7;
LABEL_25:
          sub_1005E3410(v12);
          Swift::UInt8 v26 = v7 & 1;
LABEL_80:
          sub_1005E3420(v26);
          goto LABEL_127;
      }
    }
  }
}

void sub_100228800(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(v3 + 56);
    do
    {
      unint64_t v5 = *((void *)v4 - 1);
      int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10022C544();
      sub_1005E1DB0();
      if (v6 == 1)
      {
        sub_1005E3420(0);
      }
      else
      {
        sub_1005E3420(1u);
        sub_1005E3450(v5 >> 14);
      }
      swift_bridgeObjectRelease();
      v4 += 32;
      --v2;
    }
    while (v2);
  }
}

void sub_100228898(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(v3 + 32);
    do
    {
      int v5 = *v4++;
      switch(v5)
      {
        case 2:
          sub_10022C968();
          break;
        case 3:
          sub_10022C954();
          break;
        case 6:
          sub_10022C91C();
          break;
        case 7:
          sub_10022C908();
          break;
        default:
          break;
      }
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
  }
}

void sub_1002289BC()
{
  sub_1001F9760();
  sub_10022C270(v3, v4);
  if (v0)
  {
    int v5 = (void *)(v2 + 48);
    do
    {
      uint64_t v6 = v5[2];
      if (v6 == 254)
      {
        Swift::UInt v7 = 2;
      }
      else
      {
        if (v6 != 255)
        {
          uint64_t v8 = v5[3];
          uint64_t v23 = v5[4];
          unint64_t v9 = v5[5];
          sub_1005E3410(1uLL);
          if (v6)
          {
            sub_1005E3410(1uLL);
            sub_10022C6DC();
            uint64_t v13 = v8;
            uint64_t v22 = v8;
            uint64_t v12 = v23;
            sub_10022C358(v13);
            sub_1005E1DB0();
            uint64_t v10 = v22;
          }
          else
          {
            sub_1005E3410(0);
            sub_10022C6B8();
            uint64_t v10 = v8;
            uint64_t v11 = v8;
            uint64_t v12 = v23;
            sub_10022C358(v11);
          }
          if (HIBYTE(v9) == 255)
          {
            sub_1005E3420(0);
          }
          else
          {
            sub_1005E3420(1u);
            if ((v9 & 0x100000000000000) != 0)
            {
              sub_1005E3410(1uLL);
              swift_bridgeObjectRetain();
              sub_100228B20(v1, v10);
              sub_1001F34D0(v10, v12, v9);
            }
            else
            {
              sub_1005E3410(0);
              sub_1001F969C();
              sub_10022C4D8();
            }
          }
          sub_10022C88C();
          sub_10022BFF8(v14, v15, v16, v17, v18, v19, v20, v21);
          goto LABEL_17;
        }
        Swift::UInt v7 = 0;
      }
      sub_1005E3410(v7);
LABEL_17:
      v5 += 8;
      --v0;
    }
    while (v0);
  }
  sub_1001F9814();
}

void sub_100228B20(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (unsigned char *)(v3 + 55);
    do
    {
      uint64_t v5 = *(void *)(v4 - 23);
      uint64_t v6 = *(void *)(v4 - 15);
      unint64_t v7 = *(unsigned int *)(v4 - 7) | ((unint64_t)(*(unsigned __int16 *)(v4 - 3) | (*(v4 - 1) << 16)) << 32);
      if (*v4)
      {
        sub_1005E3410(1uLL);
        swift_bridgeObjectRetain();
        uint64_t v8 = sub_10022C544();
        sub_100228B20(v8);
        sub_1001F33B8(v5, v6, v7, 1);
      }
      else
      {
        sub_1005E3410(0);
        sub_1001F969C();
        sub_10022C730();
        sub_1005E3400();
      }
      v4 += 24;
      --v2;
    }
    while (v2);
  }
}

#error "100228E10: call analysis failed (funcsize=188)"

void sub_100228F34()
{
  sub_1001FE5B4();
  sub_10022C880();
  uint64_t v68 = sub_10000566C(&qword_10070FD90);
  sub_1001F3BBC();
  __chkstk_darwin(v3);
  sub_1001F40C0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10000566C(&qword_10070FE58);
  uint64_t v8 = sub_100224550(v7);
  __chkstk_darwin(v8);
  sub_1001F40C0();
  uint64_t v11 = v10 - v9;
  uint64_t v70 = type metadata accessor for QResyncParameter(0);
  sub_1001F3BBC();
  __chkstk_darwin(v12);
  sub_10022492C(v13, v57);
  uint64_t v59 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v14);
  sub_100208054();
  uint64_t v57 = v15;
  uint64_t v16 = sub_10000566C(&qword_1007104D8);
  uint64_t v17 = sub_100224550(v16);
  __chkstk_darwin(v17);
  uint64_t v58 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F475C();
  __chkstk_darwin(v19);
  sub_10022C49C();
  uint64_t v63 = v20;
  uint64_t v67 = sub_10022C440();
  sub_1001F3BBC();
  __chkstk_darwin(v21);
  uint64_t v62 = (uint64_t *)((char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001F475C();
  __chkstk_darwin(v23);
  sub_10022C49C();
  uint64_t v65 = v24;
  uint64_t v25 = sub_10000566C(&qword_10070FE28);
  uint64_t v26 = sub_100224550(v25);
  __chkstk_darwin(v26);
  sub_1001F40C0();
  uint64_t v29 = v28 - v27;
  uint64_t v66 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v30);
  uint64_t v31 = sub_10022C33C();
  uint64_t v74 = type metadata accessor for SelectParameter(v31);
  sub_10022C254();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_10022C570();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v57 - v36;
  uint64_t v72 = v0;
  Swift::UInt v38 = *(void *)(v0 + 16);
  sub_1005E3410(v38);
  Swift::UInt v73 = v38;
  if (v38)
  {
    uint64_t v39 = 0;
    sub_10022C490();
    v72 += v40;
    uint64_t v71 = *(void *)(v33 + 72);
    uint64_t v64 = v11;
    uint64_t v60 = v6;
    uint64_t v61 = v29;
    do
    {
      sub_10022C0B0(v72 + v71 * v39, (uint64_t)v37, (void (*)(void))type metadata accessor for SelectParameter);
      sub_10022C0B0((uint64_t)v37, v2, (void (*)(void))type metadata accessor for SelectParameter);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v42 = v69;
          sub_10022C05C(v2, v69, (void (*)(void))type metadata accessor for QResyncParameter);
          sub_10022C2A8();
          sub_1005E3440(*(_DWORD *)v42);
          sub_1005E3450(*(void *)(v42 + 8));
          sub_100223AC8(v42 + *(int *)(v70 + 24), v11, &qword_10070FE58);
          sub_100207FC4(v11, 1, v68);
          if (v43)
          {
            sub_10022C514();
          }
          else
          {
            sub_1001F39D8(v11, v6, &qword_10070FD90);
            sub_10022C52C();
            sub_10000566C(&qword_100710538);
            sub_10022AAC0();
            uint64_t v11 = v64;
            sub_1005E19C0();
            sub_1001F3A28(v6, &qword_10070FD90);
          }
          uint64_t v44 = v69;
          sub_1002673D4();
          sub_10022C104(v44, (void (*)(void))type metadata accessor for QResyncParameter);
        }
        else
        {
          sub_10022C930();
        }
      }
      else
      {
        sub_1001F39D8(v2, v1, &qword_10070FE48);
        sub_10022C290();
        sub_10022C748();
        sub_100223AC8(v1 + *(int *)(v66 + 52), v29, &qword_10070FE28);
        sub_100207FC4(v29, 1, v67);
        if (v43)
        {
          sub_10022C514();
        }
        else
        {
          uint64_t v45 = v29;
          uint64_t v46 = v65;
          sub_10022C05C(v45, v65, (void (*)(void))type metadata accessor for ParameterValue);
          sub_10022C52C();
          uint64_t v47 = v62;
          sub_10022C0B0(v46, (uint64_t)v62, (void (*)(void))type metadata accessor for ParameterValue);
          int v48 = swift_getEnumCaseMultiPayload();
          if (v48 == 1)
          {
            uint64_t v49 = *v47;
            sub_10022C2A8();
            sub_1005E3410(*(void *)(v49 + 16));
            uint64_t v50 = *(void *)(v49 + 16);
            if (v50)
            {
              uint64_t v51 = v49 + 40;
              do
              {
                swift_bridgeObjectRetain();
                sub_1005E1DB0();
                swift_bridgeObjectRelease();
                v51 += 16;
                --v50;
              }
              while (v50);
              swift_bridgeObjectRelease();
              uint64_t v6 = v60;
              uint64_t v11 = v64;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v6 = v60;
            }
            uint64_t v29 = v61;
          }
          else
          {
            uint64_t v52 = v63;
            sub_1001F39D8((uint64_t)v47, v63, &qword_1007104D8);
            sub_10022C290();
            uint64_t v53 = v58;
            sub_100223AC8(v52, v58, &qword_1007104D8);
            uint64_t v54 = sub_10022C3C0();
            sub_100207FC4(v54, v55, v59);
            if (v43)
            {
              sub_10022C2A8();
            }
            else
            {
              uint64_t v56 = v57;
              sub_1001F39D8(v53, v57, &qword_1007104C8);
              sub_10022C290();
              sub_10000566C(&qword_100710538);
              sub_10022AAC0();
              sub_10022C69C();
              sub_1005E19C0();
              uint64_t v6 = v60;
              sub_1001F3A28(v56, &qword_1007104C8);
            }
            uint64_t v29 = v61;
            sub_1001F3A28(v63, &qword_1007104D8);
          }
          sub_10022C104(v65, (void (*)(void))type metadata accessor for ParameterValue);
        }
        sub_1001F3A28(v1, &qword_10070FE48);
      }
      ++v39;
      sub_10022C104((uint64_t)v37, (void (*)(void))type metadata accessor for SelectParameter);
    }
    while (v39 != v73);
  }
  sub_1001FE57C();
}

void sub_1002295B0()
{
  sub_1001FE5B4();
  sub_10022C880();
  uint64_t v52 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v3);
  sub_10022C634(v4, v50);
  uint64_t v5 = sub_10000566C(&qword_1007104D8);
  uint64_t v6 = sub_100224550(v5);
  __chkstk_darwin(v6);
  uint64_t v51 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F475C();
  __chkstk_darwin(v8);
  uint64_t v53 = (uint64_t)&v50 - v9;
  uint64_t v10 = sub_10022C440();
  sub_1001F3BBC();
  __chkstk_darwin(v11);
  sub_10022C2C0(v12, v50);
  __chkstk_darwin(v13);
  sub_10022C49C();
  uint64_t v58 = v14;
  uint64_t v15 = sub_10000566C(&qword_10070FE28);
  uint64_t v16 = sub_100224550(v15);
  __chkstk_darwin(v16);
  sub_1001F40C0();
  uint64_t v19 = v18 - v17;
  uint64_t v59 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v20);
  sub_1001F40C0();
  uint64_t v23 = v22 - v21;
  uint64_t Parameter = type metadata accessor for CreateParameter();
  sub_10022C254();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_10022C58C();
  __chkstk_darwin(v28);
  sub_10022C430();
  uint64_t v62 = v0;
  Swift::UInt v29 = *(void *)(v0 + 16);
  sub_1005E3410(v29);
  Swift::UInt v63 = v29;
  if (v29)
  {
    uint64_t v30 = 0;
    sub_10022C490();
    v62 += v31;
    uint64_t v32 = *(void *)(v26 + 72);
    uint64_t v60 = v2;
    uint64_t v61 = v32;
    uint64_t v55 = v19;
    uint64_t v56 = v10;
    uint64_t v57 = v1;
    do
    {
      sub_10022C0B0(v62 + v61 * v30, v1, (void (*)(void))type metadata accessor for CreateParameter);
      sub_10022C0B0(v1, (uint64_t)v2, (void (*)(void))type metadata accessor for CreateParameter);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v33 = Parameter;
        uint64_t v34 = v23;
        uint64_t v35 = *v2;
        sub_10022C2A8();
        sub_1005E3410(*(void *)(v35 + 16));
        uint64_t v36 = *(void *)(v35 + 16);
        if (v36)
        {
          uint64_t v37 = v35 + 40;
          do
          {
            sub_1005E1CB0();
            swift_bridgeObjectRetain();
            sub_1005E1DB0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v37 += 16;
            --v36;
          }
          while (v36);
          swift_bridgeObjectRelease();
          uint64_t v19 = v55;
          uint64_t v10 = v56;
          uint64_t v23 = v34;
          uint64_t Parameter = v33;
          uint64_t v2 = v60;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = v34;
          uint64_t Parameter = v33;
        }
        uint64_t v1 = v57;
      }
      else
      {
        sub_1001F39D8((uint64_t)v2, v23, &qword_10070FE48);
        sub_10022C290();
        sub_1005E1DB0();
        sub_100223AC8(v23 + *(int *)(v59 + 52), v19, &qword_10070FE28);
        sub_100207FC4(v19, 1, v10);
        if (v38)
        {
          sub_10022C514();
        }
        else
        {
          uint64_t v39 = v58;
          sub_10022C05C(v19, v58, (void (*)(void))type metadata accessor for ParameterValue);
          sub_10022C52C();
          uint64_t v40 = v54;
          sub_10022C0B0(v39, (uint64_t)v54, (void (*)(void))type metadata accessor for ParameterValue);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v42 = *v40;
            sub_10022C2A8();
            sub_1005E3410(*(void *)(v42 + 16));
            uint64_t v43 = *(void *)(v42 + 16);
            if (v43)
            {
              uint64_t v44 = v42 + 40;
              do
              {
                swift_bridgeObjectRetain();
                sub_10022C3F0();
                swift_bridgeObjectRelease();
                v44 += 16;
                --v43;
              }
              while (v43);
              swift_bridgeObjectRelease();
              uint64_t v19 = v55;
              uint64_t v10 = v56;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v2 = v60;
          }
          else
          {
            uint64_t v45 = v53;
            sub_1001F39D8((uint64_t)v40, v53, &qword_1007104D8);
            sub_10022C290();
            uint64_t v46 = v51;
            sub_100223AC8(v45, v51, &qword_1007104D8);
            uint64_t v47 = sub_10022C3C0();
            sub_100207FC4(v47, v48, v52);
            if (v38)
            {
              sub_10022C2A8();
            }
            else
            {
              uint64_t v49 = v50;
              sub_1001F39D8(v46, v50, &qword_1007104C8);
              sub_10022C290();
              sub_10000566C(&qword_100710538);
              sub_10022AAC0();
              sub_10022C804();
              sub_1001F3A28(v49, &qword_1007104C8);
            }
            uint64_t v2 = v60;
            sub_1001F3A28(v53, &qword_1007104D8);
          }
          sub_10022C104(v58, (void (*)(void))type metadata accessor for ParameterValue);
        }
        sub_1001F3A28(v23, &qword_10070FE48);
      }
      ++v30;
      sub_10022C104(v1, (void (*)(void))type metadata accessor for CreateParameter);
    }
    while (v30 != v63);
  }
  sub_1001FE57C();
}

void sub_100229AE8(uint64_t a1, uint64_t a2)
{
}

void sub_100229B00(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 32;
    do
    {
      uint64_t v6 = (uint64_t *)(v5 + 16 * v4);
      uint64_t v7 = *v6;
      ++v4;
      switch(*((unsigned char *)v6 + 8))
      {
        case 1:
          sub_1005E3410(4uLL);
          sub_1005E3410(*(void *)(v7 + 16));
          uint64_t v14 = *(void *)(v7 + 16);
          if (v14)
          {
            uint64_t v15 = (unsigned int *)(v7 + 40);
            do
            {
              unsigned int v16 = *v15;
              v15 += 4;
              sub_1005E3410(v16 | ((unint64_t)v16 << 32));
              --v14;
            }
            while (v14);
          }
          break;
        case 2:
          sub_1005E3410(7uLL);
          sub_1005E3410(*(void *)(v7 + 16));
          uint64_t v11 = *(void *)(v7 + 16);
          if (v11)
          {
            uint64_t v12 = (unsigned int *)(v7 + 40);
            do
            {
              unsigned int v13 = *v12;
              v12 += 4;
              sub_1005E3410(v13 | ((unint64_t)v13 << 32));
              --v11;
            }
            while (v11);
          }
          break;
        case 3:
          sub_1005E3410(qword_1005F8EF8[v7]);
          break;
        default:
          sub_1005E3410(3uLL);
          sub_1005E3410(*(void *)(v7 + 16));
          uint64_t v8 = *(void *)(v7 + 16);
          if (v8)
          {
            uint64_t v9 = (unsigned int *)(v7 + 40);
            do
            {
              unsigned int v10 = *v9;
              v9 += 4;
              sub_1005E3410(v10 | ((unint64_t)v10 << 32));
              --v8;
            }
            while (v8);
          }
          break;
      }
    }
    while (v4 != v2);
  }
}

void sub_100229C38()
{
  sub_1001FE5B4();
  uint64_t v2 = v1;
  uint64_t v84 = sub_10000566C(&qword_100710520);
  sub_1001F3BBC();
  __chkstk_darwin(v3);
  sub_10022C634(v4, v72);
  uint64_t v75 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v5);
  sub_10022C5A8(v6, v72);
  uint64_t v7 = sub_10000566C(&qword_1007104D8);
  uint64_t v8 = sub_100224550(v7);
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F475C();
  uint64_t v11 = __chkstk_darwin(v10);
  sub_10022C3AC(v11, v12, v13, v14, v15, v16, v17, v18, v72);
  uint64_t v82 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v19);
  sub_100208054();
  uint64_t v81 = (uint64_t *)v20;
  uint64_t v80 = sub_10000566C(&qword_10070FE78);
  sub_1001F3BBC();
  __chkstk_darwin(v21);
  sub_10022C5FC(v22, v72);
  uint64_t v23 = sub_10000566C(&qword_100710528);
  uint64_t v24 = sub_100224550(v23);
  __chkstk_darwin(v24);
  sub_100208054();
  uint64_t v79 = v25;
  uint64_t v26 = sub_10000566C(&qword_100710530);
  uint64_t v27 = sub_100224550(v26);
  __chkstk_darwin(v27);
  uint64_t v78 = (uint64_t)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F475C();
  __chkstk_darwin(v29);
  sub_10022C49C();
  uint64_t v88 = v30;
  uint64_t v31 = type metadata accessor for SearchReturnData();
  sub_10022C254();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_10022C58C();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v72 - v36;
  Swift::UInt v38 = *(void *)(v2 + 16);
  sub_1005E3410(v38);
  if (v38)
  {
    uint64_t v39 = 0;
    sub_10022C490();
    uint64_t v40 = *(void *)(v33 + 72);
    uint64_t v42 = v2 + v41;
    uint64_t v85 = v31;
    uint64_t v86 = v2 + v41;
    uint64_t v87 = v40;
    Swift::UInt v77 = v38;
    do
    {
      sub_10022C0B0(v42 + v40 * v39, (uint64_t)v37, (void (*)(void))type metadata accessor for SearchReturnData);
      sub_10022C0B0((uint64_t)v37, v0, (void (*)(void))type metadata accessor for SearchReturnData);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          Swift::UInt32 v43 = *(_DWORD *)v0;
          Swift::UInt v44 = 1;
          goto LABEL_6;
        case 2u:
          uint64_t v45 = v88;
          sub_1001F39D8(v0, v88, &qword_100710530);
          sub_10022C930();
          uint64_t v46 = v78;
          sub_100223AC8(v45, v78, &qword_100710530);
          uint64_t v47 = sub_10022C3C0();
          sub_100207FC4(v47, v48, v84);
          if (v49)
          {
            sub_10022C2A8();
          }
          else
          {
            uint64_t v66 = v76;
            sub_1001F39D8(v46, v76, &qword_100710520);
            sub_10022C290();
            sub_10000566C(&qword_100710538);
            sub_10022AAC0();
            sub_10022C7E4();
            uint64_t v67 = v66;
            uint64_t v40 = v87;
            sub_1001F3A28(v67, &qword_100710520);
          }
          Swift::UInt v38 = v77;
          uint64_t v59 = v88;
          uint64_t v60 = &qword_100710530;
          goto LABEL_25;
        case 3u:
          Swift::UInt v50 = *(void *)v0;
          sub_1005E3410(3uLL);
          sub_1005E3410(v50);
          break;
        case 4u:
          Swift::UInt64 v51 = *(void *)v0;
          sub_1005E3410(4uLL);
          sub_1005E3450(v51);
          break;
        case 5u:
          Swift::UInt32 v53 = *(_DWORD *)v0;
          Swift::UInt32 v52 = *(_DWORD *)(v0 + 4);
          Swift::UInt v54 = *(unsigned __int8 *)(v0 + 8);
          uint64_t v55 = sub_10000566C(&qword_100710550);
          uint64_t v56 = v79;
          sub_1001F39D8(v0 + *(int *)(v55 + 48), v79, &qword_100710528);
          sub_1005E3410(5uLL);
          Swift::UInt v57 = v54;
          uint64_t v40 = v87;
          sub_1005E3410(v57);
          Swift::UInt32 v58 = v53;
          uint64_t v42 = v86;
          sub_1005E3440(v58);
          sub_1005E3440(v52);
          sub_10000566C(&qword_100710538);
          sub_10022AAC0();
          sub_10022C69C();
          sub_1005E19C0();
          uint64_t v59 = v56;
          uint64_t v60 = &qword_100710528;
          goto LABEL_25;
        case 6u:
          uint64_t v61 = v89;
          sub_1001F39D8(v0, v89, &qword_10070FE78);
          sub_1005E3410(6uLL);
          sub_1005E1DB0();
          uint64_t v62 = v81;
          sub_10022C0B0(v61 + *(int *)(v80 + 52), (uint64_t)v81, (void (*)(void))type metadata accessor for ParameterValue);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v63 = *v62;
            sub_10022C2A8();
            Swift::UInt v64 = *(void *)(v63 + 16);
            sub_1005E3410(v64);
            if (v64)
            {
              uint64_t v65 = v63 + 40;
              do
              {
                swift_bridgeObjectRetain();
                sub_1005E1DB0();
                swift_bridgeObjectRelease();
                v65 += 16;
                --v64;
              }
              while (v64);
              swift_bridgeObjectRelease();
              uint64_t v42 = v86;
              uint64_t v40 = v87;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v42 = v86;
            }
          }
          else
          {
            uint64_t v68 = v83;
            sub_1001F39D8((uint64_t)v62, v83, &qword_1007104D8);
            sub_10022C290();
            uint64_t v69 = v74;
            sub_100223AC8(v68, v74, &qword_1007104D8);
            sub_100207FC4(v69, 1, v75);
            if (v49)
            {
              sub_10022C2A8();
            }
            else
            {
              uint64_t v70 = v73;
              sub_1001F39D8(v69, v73, &qword_1007104C8);
              sub_10022C290();
              sub_10000566C(&qword_100710538);
              sub_10022AAC0();
              sub_10022C7E4();
              uint64_t v71 = v70;
              uint64_t v40 = v87;
              sub_1001F3A28(v71, &qword_1007104C8);
            }
            sub_1001F3A28(v83, &qword_1007104D8);
          }
          uint64_t v59 = v89;
          uint64_t v60 = &qword_10070FE78;
LABEL_25:
          sub_1001F3A28(v59, v60);
          break;
        default:
          Swift::UInt32 v43 = *(_DWORD *)v0;
          Swift::UInt v44 = 0;
LABEL_6:
          sub_1005E3410(v44);
          sub_1005E3440(v43);
          break;
      }
      ++v39;
      sub_10022C104((uint64_t)v37, (void (*)(void))type metadata accessor for SearchReturnData);
    }
    while (v39 != v38);
  }
  sub_1001FE57C();
}

void sub_10022A2BC(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = (void *)(v3 + 32 + (v4 << 6));
      uint64_t v6 = v5[4];
      uint64_t v14 = v5[6];
      uint64_t v13 = v5[7];
      sub_1001F969C();
      sub_1005E3400();
      if (v6)
      {
        sub_1005E3420(1u);
        sub_1005E1A10();
      }
      else
      {
        sub_1005E3420(0);
      }
      Swift::UInt v7 = *(void *)(v13 + 16);
      sub_1005E3410(v7);
      if (v7) {
        break;
      }
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
LABEL_16:
      ++v4;
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (v4 == v2) {
        return;
      }
    }
    uint64_t v12 = v4;
    uint64_t v15 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    uint64_t v8 = 0;
    while (v8 != v16)
    {
      if (v8 == v15) {
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v13 + 32 + 8 * v8);
      sub_1001F969C();
      sub_1005E3400();
      sub_1005E3410(*(void *)(v9 + 16));
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        uint64_t v11 = v9 + 54;
        do
        {
          v11 += 24;
          sub_1001F969C();
          sub_1005E3400();
          --v10;
        }
        while (v10);
      }
      if (++v8 == v7)
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        uint64_t v4 = v12;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
}

void sub_10022A57C()
{
  sub_1001F9760();
  sub_10022C270(v3, v4);
  if (v0)
  {
    uint64_t v5 = (void *)(v2 + 48);
    do
    {
      uint64_t v6 = v5[2];
      switch((char)v6)
      {
        case -4:
          Swift::UInt v7 = 3;
          goto LABEL_10;
        case -3:
          Swift::UInt v7 = 2;
          goto LABEL_10;
        case -2:
          Swift::UInt v7 = 1;
          goto LABEL_10;
        case -1:
          Swift::UInt v7 = 0;
LABEL_10:
          sub_1005E3410(v7);
          break;
        default:
          uint64_t v8 = v5[3];
          uint64_t v23 = v5[4];
          unint64_t v9 = v5[5];
          sub_1005E3410(4uLL);
          if (v6)
          {
            sub_1005E3410(1uLL);
            sub_10022C6DC();
            uint64_t v13 = v8;
            uint64_t v22 = v8;
            uint64_t v12 = v23;
            sub_10022C358(v13);
            sub_1005E1DB0();
            uint64_t v10 = v22;
          }
          else
          {
            sub_1005E3410(0);
            sub_10022C6B8();
            uint64_t v10 = v8;
            uint64_t v11 = v8;
            uint64_t v12 = v23;
            sub_10022C358(v11);
          }
          if (HIBYTE(v9) == 255)
          {
            sub_1005E3420(0);
          }
          else
          {
            sub_1005E3420(1u);
            if ((v9 & 0x100000000000000) != 0)
            {
              sub_1005E3410(1uLL);
              swift_bridgeObjectRetain();
              sub_100228B20(v1, v10);
              sub_1001F34D0(v10, v12, v9);
            }
            else
            {
              sub_1005E3410(0);
              sub_1001F969C();
              sub_10022C4D8();
            }
          }
          sub_10022C88C();
          sub_10022BF90(v14, v15, v16, v17, v18, v19, v20, v21);
          break;
      }
      v5 += 8;
      --v0;
    }
    while (v0);
  }
  sub_1001F9814();
}

void sub_10022A71C(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (void *)(v3 + 40);
    do
    {
      if (*v4)
      {
        sub_1005E3410(0);
        sub_1005E1CD0();
        swift_bridgeObjectRetain();
        sub_10022C544();
        sub_1005E1DB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1005E3410(1uLL);
      }
      v4 += 2;
      --v2;
    }
    while (v2);
  }
}

void sub_10022A7B8(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (Swift::UInt32 *)(v3 + 36);
    do
    {
      Swift::UInt32 v5 = *v4;
      sub_1005E3440(*(v4 - 1));
      sub_1005E3440(v5);
      v4 += 2;
      --v2;
    }
    while (v2);
  }
}

void sub_10022A804(uint64_t a1, uint64_t a2)
{
}

unint64_t sub_10022A820()
{
  unint64_t result = qword_100710518;
  if (!qword_100710518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710518);
  }
  return result;
}

uint64_t initializeWithCopy for AppendOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppendOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for MailboxInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AppendOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxInfo(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AppendOptions()
{
  return &type metadata for AppendOptions;
}

void sub_10022AA48(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (Swift::UInt *)(v3 + 56);
    do
    {
      Swift::UInt v5 = *(v4 - 1);
      Swift::UInt v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10022C458();
      sub_1005E3410(v5);
      sub_1005E3410(v6);
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
  }
}

unint64_t sub_10022AAC0()
{
  unint64_t result = qword_100710540;
  if (!qword_100710540)
  {
    sub_10000744C(&qword_100710538);
    sub_10022AB34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710540);
  }
  return result;
}

unint64_t sub_10022AB34()
{
  unint64_t result = qword_100710548;
  if (!qword_100710548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710548);
  }
  return result;
}

void sub_10022AB80()
{
  sub_1001FE5B4();
  sub_10022C270(v3, v4);
  uint64_t v179 = v0;
  if (v0)
  {
    uint64_t v5 = 0;
    uint64_t v178 = v2 + 32;
    uint64_t v167 = &__dst[136];
    uint64_t v202 = v1;
    while (1)
    {
      sub_10013AE3C(v178 + 184 * v5, (uint64_t)v207);
      sub_10013AE3C((uint64_t)v207, (uint64_t)v208);
      uint64_t v199 = v5;
      if (sub_10013AEAC((uint64_t)v208) != 1) {
        break;
      }
      Swift::UInt v6 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v208);
      uint64_t v177 = v6[1];
      uint64_t v175 = *v6;
      uint64_t v176 = v6[2];
      uint64_t v169 = v6[3];
      uint64_t v170 = v6[5];
      uint64_t v185 = v6[4];
      uint64_t v186 = v6[6];
      uint64_t v180 = v6[8];
      uint64_t v182 = v6[7];
      uint64_t v200 = v6[9];
      uint64_t v193 = v6[10];
      uint64_t v196 = v6[11];
      uint64_t v168 = v6[12];
      uint64_t v190 = v6[13];
      uint64_t v188 = v6[14];
      sub_10013AE3C((uint64_t)v207, (uint64_t)__dst);
      uint64_t v7 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)__dst);
      uint64_t v8 = *(void *)(v7 + 24);
      uint64_t v9 = *(void *)(v7 + 32);
      uint64_t v10 = *(void *)(v7 + 40);
      uint64_t v11 = *(void *)(v7 + 48);
      uint64_t v12 = *(void *)(v7 + 64);
      uint64_t v173 = *(void *)(v7 + 72);
      uint64_t v174 = *(void *)(v7 + 56);
      uint64_t v172 = *(void *)(v7 + 80);
      long long v171 = *(_OWORD *)(v7 + 88);
      uint64_t v13 = *(void *)(v7 + 104);
      uint64_t v14 = *(void *)(v7 + 112);
      sub_1005E3410(1uLL);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100136C1C(v8, v9, v10, v11, v174, v12, v173, v172, v171, *((uint64_t *)&v171 + 1), v13, v14);
      sub_10013AF38((uint64_t)v207, sub_100136870);
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_10022C948();
      sub_10022AB80(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      if (!v185) {
        goto LABEL_34;
      }
      sub_1005E3420(1u);
      swift_retain();
      swift_retain();
      uint64_t v16 = sub_10022C8E0();
      sub_100136C1C(v16, v17, v18, v19, v182, v180, v200, v20, v196, v168, v190, v188);
      swift_retain();
      sub_100225EFC();
      swift_release();
      swift_release();
      swift_release();
      if (v182 == 1)
      {
        sub_1005E3420(0);
        uint64_t v21 = sub_10022C8E0();
        sub_1000617EC(v21, v22, v23, v24, 1, v180, v200, v193, v196, v168, v190, v188);
        goto LABEL_53;
      }
      sub_1005E3420(1u);
      uint64_t v40 = v199;
      if (v182)
      {
        sub_1005E3420(1u);
        uint64_t v41 = v188;
        uint64_t v42 = sub_10022C544();
        uint64_t v43 = v196;
        uint64_t v44 = v168;
        uint64_t v45 = v190;
        sub_100136AB8(v42, v46, v180, v200, v193, v196, v168, v190, v188);
        uint64_t v47 = sub_10022C544();
        sub_100136B1C(v47, v48);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_100225EFC();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        uint64_t v49 = sub_10022C544();
        uint64_t v50 = v193;
        uint64_t v51 = v200;
        sub_1000616EC(v49, v52);
        if (v196) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_1005E3420(0);
        uint64_t v51 = v200;
        uint64_t v50 = v193;
        sub_100136B1C(v186, 0);
        uint64_t v43 = v196;
        uint64_t v44 = v168;
        uint64_t v45 = v190;
        uint64_t v41 = v188;
        sub_100136B80(v196, v168, v190, v188);
        if (v196)
        {
LABEL_17:
          sub_10022C650();
          sub_1005E3410(*(void *)(v43 + 16));
          uint64_t v53 = *(void *)(v43 + 16);
          if (v53)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v54 = sub_10022C8F4();
            sub_100136B80(v54, v55, v56, v57);
            sub_10022C784();
            uint64_t v58 = v43 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_10022C948();
              sub_1005E1DB0();
              swift_bridgeObjectRelease();
              v58 += 16;
              --v53;
            }
            while (v53);
            uint64_t v43 = v196;
            swift_bridgeObjectRelease();
            uint64_t v59 = v186;
            uint64_t v50 = v193;
            uint64_t v51 = v200;
            if (v41) {
              goto LABEL_21;
            }
LABEL_58:
            sub_10022C760();
            uint64_t v114 = 0;
          }
          else
          {
            uint64_t v113 = swift_bridgeObjectRetain();
            sub_100136B80(v113, v44, v45, v41);
            sub_10022C784();
            uint64_t v59 = v186;
            if (!v41) {
              goto LABEL_58;
            }
LABEL_21:
            sub_10022C650();
            if (v45)
            {
              sub_1005E3420(1u);
              sub_10022C784();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_10022C778();
              sub_1005E1DB0();
            }
            else
            {
              sub_1005E3420(0);
              sub_100136BD8(v44, 0, v41);
              swift_bridgeObjectRetain();
            }
            sub_1005E3410(*(void *)(v41 + 16));
            uint64_t v117 = *(void *)(v41 + 16);
            if (v117)
            {
              swift_bridgeObjectRetain();
              uint64_t v118 = (unsigned char *)(v41 + 55);
              do
              {
                Swift::UInt v119 = *(void *)(v118 - 23);
                if (*v118)
                {
                  sub_1005E3410(1uLL);
                  sub_1005E3410(v119);
                }
                else
                {
                  uint64_t v120 = v41;
                  uint64_t v121 = v45;
                  uint64_t v122 = v44;
                  uint64_t v123 = *(void *)(v118 - 15);
                  unint64_t v124 = *(unsigned int *)(v118 - 7) | ((unint64_t)(*(unsigned __int16 *)(v118 - 3) | (*(v118 - 1) << 16)) << 32);
                  sub_1005E3410(0);
                  if (v119)
                  {
                    sub_1005E3420(1u);
                    sub_1001F969C();
                    sub_1005E3400();
                  }
                  else
                  {
                    sub_1005E3420(0);
                    sub_10022C15C(0, v123, v124, 0);
                  }
                  uint64_t v44 = v122;
                  uint64_t v45 = v121;
                  uint64_t v41 = v120;
                  uint64_t v50 = v193;
                  uint64_t v43 = v196;
                }
                uint64_t v51 = v200;
                v118 += 24;
                --v117;
              }
              while (v117);
              swift_bridgeObjectRelease();
              uint64_t v59 = v186;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000617A8(v44, v45, v41);
            uint64_t v114 = v41;
          }
          swift_bridgeObjectRelease();
          sub_1000617A8(v44, v45, v114);
          uint64_t v125 = sub_10022C8F4();
          sub_100061750(v125, v126, v127, v128);
          sub_100061688(v59, v182, v180, v51, v50, v43, v44, v45, v41);
          sub_1000617EC(v169, v185, v170, v59, v182, v180, v51, v50, v43, v44, v45, v41);
          sub_10013AF38((uint64_t)v207, sub_100061440);
          sub_10022C854();
          goto LABEL_55;
        }
      }
      sub_10022C760();
      sub_100061688(v186, v182, v180, v51, v50, 0, v44, v45, v41);
      sub_1000617EC(v169, v185, v170, v186, v182, v180, v51, v50, 0, v44, v45, v41);
      sub_10013AF38((uint64_t)v207, sub_100061440);
      sub_10022C854();
LABEL_55:
      uint64_t v5 = v40 + 1;
      if (v5 == v179) {
        goto LABEL_86;
      }
    }
    uint64_t v25 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v208);
    sub_1005E3410(0);
    uint64_t v26 = *v25;
    unint64_t v27 = (unint64_t)*v25 >> 62;
    if (v27)
    {
      if (v27 == 1)
      {
        memcpy(__dst, (const void *)((v26 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
        sub_1005E3410(1uLL);
        sub_10013AE3C((uint64_t)v207, (uint64_t)v205);
        uint64_t v28 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v205);
        sub_10022C168(v28);
        sub_10013AF38((uint64_t)v207, sub_100136870);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_100223E88((uint64_t)__dst);
        sub_10022C948();
        sub_1005E1DB0();
        swift_bridgeObjectRelease();
        uint64_t v218 = *(void *)&__dst[16];
        uint64_t v219 = *(void *)&__dst[24];
        long long v220 = *(_OWORD *)&__dst[32];
        __int16 v222 = *(_WORD *)&__dst[52];
        int v221 = *(_DWORD *)&__dst[48];
        char v223 = __dst[54];
        uint64_t v224 = *(void *)&__dst[56];
        uint64_t v225 = *(void *)&__dst[64];
        uint64_t v226 = *(void *)&__dst[72];
        uint64_t v227 = *(void *)&__dst[80];
        uint64_t v228 = *(void *)&__dst[88];
        uint64_t v229 = *(void *)&__dst[96];
        long long v231 = *(_OWORD *)&__dst[112];
        uint64_t v230 = *(void *)&__dst[104];
        uint64_t v232 = *(void *)&__dst[128];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        Envelope.hash(into:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_10013AE3C((uint64_t)v167, (uint64_t)v206);
        if (sub_10013AEAC((uint64_t)v206) == 1)
        {
          uint64_t v29 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v206);
          uint64_t v30 = *(void *)(v29 + 16);
          long long v210 = *(_OWORD *)v29;
          uint64_t v211 = v30;
          long long v212 = *(_OWORD *)(v29 + 24);
          long long v213 = *(_OWORD *)(v29 + 40);
          long long v214 = *(_OWORD *)(v29 + 56);
          long long v215 = *(_OWORD *)(v29 + 72);
          long long v216 = *(_OWORD *)(v29 + 88);
          long long v217 = *(_OWORD *)(v29 + 104);
          sub_1005E3410(1uLL);
          sub_10013AE3C((uint64_t)v167, (uint64_t)v203);
          uint64_t v31 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v203);
          uint64_t v32 = *(void *)(v31 + 40);
          uint64_t v194 = *(void *)(v31 + 32);
          uint64_t v197 = *(void *)(v31 + 24);
          uint64_t v33 = *(void *)(v31 + 48);
          uint64_t v34 = *(void *)(v31 + 56);
          uint64_t v35 = *(void *)(v31 + 64);
          uint64_t v36 = *(void *)(v31 + 72);
          uint64_t v191 = *(void *)(v31 + 80);
          *(_OWORD *)uint64_t v189 = *(_OWORD *)(v31 + 88);
          uint64_t v37 = *(void *)(v31 + 104);
          uint64_t v38 = *(void *)(v31 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100136C1C(v197, v194, v32, v33, v34, v35, v36, v191, v189[0], v189[1], v37, v38);
          BodyStructure.Multipart.hash(into:)(v202);
        }
        else
        {
          uint64_t v60 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v206);
          memcpy(v209, v60, sizeof(v209));
          sub_1005E3410(0);
          sub_10013AE3C((uint64_t)v167, (uint64_t)v203);
          uint64_t v61 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v203);
          sub_10022C168(v61);
          BodyStructure.Singlepart.hash(into:)(v202);
        }
        sub_10013AF38((uint64_t)v167, sub_100061440);
        sub_1005E3410(*(Swift::UInt *)&__dst[320]);
        sub_100224004((uint64_t)__dst);
      }
      else
      {
        Swift::UInt v39 = *(void *)((v26 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        sub_1005E3410(2uLL);
        sub_10013AF38((uint64_t)v207, sub_100136870);
        sub_10022C854();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        swift_bridgeObjectRelease();
        sub_1005E3410(v39);
      }
      swift_release();
    }
    else
    {
      sub_1005E3410(0);
      sub_10013AF38((uint64_t)v207, sub_100136870);
      sub_10013AF38((uint64_t)v207, sub_100136870);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_10022C458();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    uint64_t v62 = v25[5];
    uint64_t v63 = v25[7];
    uint64_t v65 = v25[9];
    Swift::UInt v64 = v25[10];
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100225EFC();
    swift_release();
    swift_release();
    swift_release();
    if (v62)
    {
      sub_1005E3420(1u);
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      if (v63) {
        goto LABEL_28;
      }
    }
    else
    {
      sub_1005E3420(0);
      if (v63)
      {
LABEL_28:
        sub_10022C650();
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        swift_bridgeObjectRelease();
        if (v65)
        {
LABEL_29:
          sub_1005E3420(1u);
          swift_bridgeObjectRetain();
          sub_1005E1DB0();
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
LABEL_32:
        sub_1005E3420(0);
LABEL_33:
        sub_1005E3410(v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v66 = v25[12];
        if (v66 == 1)
        {
LABEL_34:
          sub_1005E3420(0);
LABEL_53:
          sub_10013AF38((uint64_t)v207, sub_100061440);
          sub_10022C854();
LABEL_54:
          uint64_t v40 = v199;
          goto LABEL_55;
        }
        uint64_t v67 = v25[11];
        uint64_t v68 = v25[13];
        uint64_t v183 = v25[14];
        uint64_t v69 = v25[16];
        uint64_t v195 = v25[15];
        uint64_t v70 = v25[17];
        uint64_t v71 = v25[18];
        uint64_t v73 = v25[19];
        uint64_t v72 = v25[20];
        uint64_t v74 = v25[21];
        sub_1005E3420(1u);
        uint64_t v201 = v73;
        uint64_t v187 = v70;
        uint64_t v198 = v68;
        uint64_t v192 = v74;
        if (v66)
        {
          sub_1005E3420(1u);
          uint64_t v163 = v74;
          uint64_t v155 = v73;
          uint64_t v75 = v68;
          uint64_t v76 = v183;
          uint64_t v77 = v195;
          uint64_t v78 = v69;
          sub_100136A14(v67, v66, v75, v183, v195, v69, v70, v71, v155, v72, v163);
          swift_bridgeObjectRetain();
          sub_10022C778();
          sub_1005E1DB0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1005E3420(0);
          uint64_t v156 = v74;
          uint64_t v79 = v68;
          uint64_t v77 = v195;
          uint64_t v78 = v69;
          sub_100136AB8(v79, v183, v195, v69, v70, v71, v73, v72, v156);
          uint64_t v76 = v183;
        }
        uint64_t v80 = v66;
        if (v76 == 1)
        {
          sub_10022C760();
          sub_1000615E4(v67, v66, v198, 1, v77, v78, v187, v71, v201, v72, v192);
          goto LABEL_53;
        }
        uint64_t v184 = v67;
        sub_10022C650();
        if (v76)
        {
          sub_1005E3420(1u);
          uint64_t v81 = sub_10022C97C();
          uint64_t v82 = v71;
          uint64_t v83 = v201;
          sub_100136AB8(v81, v84, v85, v86, v187, v71, v201, v72, v192);
          uint64_t v87 = sub_10022C97C();
          sub_100136B1C(v87, v88);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1005E1DB0();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_100225EFC();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          sub_1000616EC(v198, v76);
        }
        else
        {
          sub_1005E3420(0);
          sub_100136B1C(v198, 0);
          uint64_t v82 = v71;
          uint64_t v83 = v201;
          sub_100136B80(v71, v201, v72, v192);
        }
        uint64_t v181 = v80;
        if (!v82)
        {
          sub_1005E3420(0);
          uint64_t v93 = sub_10022C718();
          uint64_t v98 = sub_100061688(v93, v94, v95, v96, v97, 0, v83, v72, v192);
          uint64_t v106 = sub_10022C550(v98, v99, v100, v101, v102, v103, v104, v105, v157, v72, v192, v166, (uint64_t)v167, v168, v169, v170, v171, *((uint64_t *)&v171 + 1), v172,
                   v173,
                   v174,
                   v175,
                   v176,
                   v177,
                   v178,
                   v179,
                   v80,
                   v184);
          sub_1000615E4(v106, v107, v108, v109, v110, v111, v112, 0, v158, v161, v164);
          goto LABEL_53;
        }
        sub_10022C650();
        sub_1005E3410(*(void *)(v82 + 16));
        uint64_t v89 = *(void *)(v82 + 16);
        uint64_t v90 = v192;
        if (v89)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v91 = v72;
          sub_100136B80(v82, v83, v72, v192);
          sub_100136BD8(v83, v72, v192);
          uint64_t v92 = v82 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_1005E1DB0();
            swift_bridgeObjectRelease();
            v92 += 16;
            --v89;
          }
          while (v89);
          swift_bridgeObjectRelease();
          uint64_t v83 = v201;
          uint64_t v90 = v192;
          if (v192)
          {
LABEL_50:
            sub_10022C650();
            if (v91)
            {
              sub_1005E3420(1u);
              sub_100136BD8(v83, v91, v90);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_10022C778();
              sub_1005E1DB0();
            }
            else
            {
              sub_1005E3420(0);
              sub_100136BD8(v83, 0, v90);
              swift_bridgeObjectRetain();
            }
            uint64_t v129 = v90;
            Swift::UInt v130 = *(void *)(v90 + 16);
            sub_1005E3410(v130);
            if (v130)
            {
              swift_bridgeObjectRetain();
              uint64_t v131 = (unsigned char *)(v129 + 55);
              do
              {
                Swift::UInt v132 = *(void *)(v131 - 23);
                if (*v131)
                {
                  sub_1005E3410(1uLL);
                  sub_1005E3410(v132);
                }
                else
                {
                  uint64_t v133 = *(void *)(v131 - 15);
                  unint64_t v134 = *(unsigned int *)(v131 - 7) | ((unint64_t)(*(unsigned __int16 *)(v131 - 3) | (*(v131 - 1) << 16)) << 32);
                  sub_1005E3410(0);
                  if (v132)
                  {
                    sub_1005E3420(1u);
                    sub_1001F969C();
                    sub_1005E3400();
                  }
                  else
                  {
                    sub_1005E3420(0);
                    sub_10022C15C(0, v133, v134, 0);
                  }
                }
                uint64_t v83 = v201;
                v131 += 24;
                --v130;
              }
              while (v130);
              uint64_t v129 = v192;
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000617A8(v83, v91, v129);
            uint64_t v116 = v129;
            uint64_t v90 = v129;
            goto LABEL_85;
          }
        }
        else
        {
          uint64_t v115 = swift_bridgeObjectRetain();
          uint64_t v91 = v72;
          sub_100136B80(v115, v83, v72, v192);
          sub_100136BD8(v83, v72, v192);
          if (v192) {
            goto LABEL_50;
          }
        }
        sub_10022C760();
        uint64_t v116 = 0;
LABEL_85:
        swift_bridgeObjectRelease();
        sub_1000617A8(v83, v91, v116);
        sub_100061750(v82, v83, v91, v90);
        uint64_t v135 = sub_10022C718();
        uint64_t v140 = sub_100061688(v135, v136, v137, v138, v139, v82, v83, v91, v90);
        uint64_t v148 = sub_10022C550(v140, v141, v142, v143, v144, v145, v146, v147, v159, v91, v90, v166, (uint64_t)v167, v168, v169, v170, v171, *((uint64_t *)&v171 + 1), v172,
                 v173,
                 v174,
                 v175,
                 v176,
                 v78,
                 v178,
                 v179,
                 v181,
                 v184);
        sub_1000615E4(v148, v149, v150, v151, v152, v153, v154, v82, v160, v162, v165);
        sub_10013AF38((uint64_t)v207, sub_100061440);
        sub_10013AF38((uint64_t)v207, sub_100061440);
        goto LABEL_54;
      }
    }
    sub_10022C760();
    if (v65) {
      goto LABEL_29;
    }
    goto LABEL_32;
  }
LABEL_86:
  sub_1001FE57C();
}

void sub_10022BEB0(uint64_t a1, uint64_t a2, void (*a3)(void, void))
{
  Swift::UInt v5 = *(void *)(a2 + 16);
  sub_1005E3410(v5);
  if (v5)
  {
    Swift::UInt v6 = (void *)(a2 + 40);
    do
    {
      a3(*(v6 - 1), *v6);
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 2;
      --v5;
    }
    while (v5);
  }
}

void sub_10022BF50(uint64_t a1, uint64_t a2)
{
  sub_10022C270(a1, a2);
  if (v2)
  {
    uint64_t v4 = (Swift::UInt32 *)(v3 + 32);
    do
    {
      Swift::UInt32 v5 = *v4++;
      sub_1005E3440(v5);
      --v2;
    }
    while (v2);
  }
}

uint64_t sub_10022BF90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if ((a5 & 0xFC | 2) != 0xFE)
  {
    sub_1001F3480(result, a2, a3, a4, a5 & 1);
    return sub_1001F34D0(a6, a7, a8);
  }
  return result;
}

uint64_t sub_10022BFF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if ((~a5 & 0xFE) != 0)
  {
    sub_1001F3480(result, a2, a3, a4, a5 & 1);
    return sub_1001F34D0(a6, a7, a8);
  }
  return result;
}

uint64_t sub_10022C05C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  uint64_t v4 = sub_1001F4A1C();
  v5(v4);
  return a2;
}

uint64_t sub_10022C0B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  uint64_t v4 = sub_100224D08();
  v5(v4);
  return a2;
}

uint64_t sub_10022C104(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10022C15C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10022C168(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v9 = *(void *)(a1 + 128);
  uint64_t v10 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 136);
  long long v6 = *(_OWORD *)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 168);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100136A14(v12, v11, v2, v3, v10, v9, v8, v7, v6, *((uint64_t *)&v6 + 1), v4);
  return a1;
}

void sub_10022C270(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1005E3410(v3);
}

void sub_10022C290()
{
  sub_1005E3410(0);
}

void sub_10022C2A8()
{
  sub_1005E3410(1uLL);
}

void sub_10022C2C0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10022C2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::UInt v5 = *(void *)(a4 + 16);
  sub_1005E3410(v5);
}

uint64_t sub_10022C33C()
{
  return 0;
}

uint64_t sub_10022C358(uint64_t a1)
{
  sub_1001F3404(a1, v2, v1);
  return sub_1005E1DB0();
}

void sub_10022C3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 136) = (char *)&a9 - v9;
}

uint64_t sub_10022C3C0()
{
  return v0;
}

void sub_10022C3CC()
{
  sub_1001F379C(v0, v4, v2, v3, v1);
}

uint64_t sub_10022C3F0()
{
  return sub_1005E1DB0();
}

uint64_t sub_10022C40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 152) = (char *)&a9 - v9;
  return type metadata accessor for ParameterValue();
}

uint64_t sub_10022C440()
{
  return type metadata accessor for ParameterValue();
}

uint64_t sub_10022C458()
{
  return sub_1005E1DB0();
}

uint64_t sub_10022C4A8()
{
  return sub_10022C0B0(v1, v2, v0);
}

void sub_10022C4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 144) = (char *)&a9 - v9;
}

uint64_t sub_10022C4D8()
{
  return sub_1005E3400();
}

uint64_t sub_10022C504@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(a1 + 52);
}

void sub_10022C514()
{
  sub_1005E3420(0);
}

void sub_10022C52C()
{
  sub_1005E3420(1u);
}

uint64_t sub_10022C544()
{
  return v0;
}

uint64_t sub_10022C550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return a28;
}

void sub_10022C5A8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10022C5C4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10022C5E0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10022C5FC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10022C618(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10022C634(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10022C650()
{
  sub_1005E3420(1u);
}

uint64_t sub_10022C668()
{
  return *(void *)(v1 + v0 + 40);
}

uint64_t sub_10022C680()
{
  return swift_retain();
}

uint64_t sub_10022C69C()
{
  return v0;
}

uint64_t sub_10022C6AC()
{
  return v0;
}

uint64_t sub_10022C6B8()
{
  return sub_1001F33C4(v1, v3, v0, v2, 0);
}

uint64_t sub_10022C6DC()
{
  return sub_1001F33C4(v1, v3, v0, v2, 1);
}

uint64_t sub_10022C700()
{
  return sub_1005E3400();
}

uint64_t sub_10022C718()
{
  return v0;
}

uint64_t sub_10022C748()
{
  return sub_1005E1DB0();
}

void sub_10022C760()
{
  sub_1005E3420(0);
}

uint64_t sub_10022C778()
{
  return v0;
}

uint64_t sub_10022C784()
{
  return sub_100136BD8(v1, v0, v2);
}

uint64_t sub_10022C7C4()
{
  return sub_1005E19C0();
}

uint64_t sub_10022C7E4()
{
  return sub_1005E19C0();
}

uint64_t sub_10022C804()
{
  return sub_1005E19C0();
}

void sub_10022C824()
{
  sub_1005E3410(0);
}

void sub_10022C83C()
{
  sub_1005E3410(1uLL);
}

uint64_t sub_10022C854()
{
  return sub_10013AF38((uint64_t)&STACK[0x498], v0);
}

uint64_t sub_10022C8A0()
{
  return v0;
}

void sub_10022C8B4()
{
  sub_100210AD0(32, 0xE100000000000000, v0, v1);
}

uint64_t sub_10022C8D4()
{
  return v0;
}

uint64_t sub_10022C8E0()
{
  return v0;
}

uint64_t sub_10022C8F4()
{
  return v0;
}

void sub_10022C930()
{
  sub_1005E3410(2uLL);
}

uint64_t sub_10022C948()
{
  return v0;
}

uint64_t sub_10022C97C()
{
  return v0;
}

uint64_t sub_10022C990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_1001F3404(v15, a13, v14);
  return v13;
}

uint64_t sub_10022C9BC()
{
  uint64_t result = sub_1005E1CB0();
  static AttributeFlag.answered = result;
  unk_1007618A0 = v1;
  return result;
}

NIOIMAPCore2::AttributeFlag __swiftcall AttributeFlag.init(_:)(Swift::String a1)
{
  uint64_t v1 = sub_1005E1CB0();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v4 = v1;
  uint64_t v5 = v3;
  result.stringValue._object = v5;
  result.stringValue._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t *AttributeFlag.answered.unsafeMutableAddressor()
{
  if (qword_10070FB28 != -1) {
    swift_once();
  }
  return &static AttributeFlag.answered;
}

uint64_t static AttributeFlag.answered.getter()
{
  return sub_10022CD64(&qword_10070FB28, &static AttributeFlag.answered);
}

uint64_t sub_10022CAB0()
{
  uint64_t result = sub_1005E1CB0();
  static AttributeFlag.flagged = result;
  unk_1007618B0 = v1;
  return result;
}

uint64_t *AttributeFlag.flagged.unsafeMutableAddressor()
{
  if (qword_10070FB30 != -1) {
    swift_once();
  }
  return &static AttributeFlag.flagged;
}

uint64_t static AttributeFlag.flagged.getter()
{
  return sub_10022CD64(&qword_10070FB30, &static AttributeFlag.flagged);
}

uint64_t sub_10022CB60()
{
  uint64_t result = sub_1005E1CB0();
  static AttributeFlag.deleted = result;
  unk_1007618C0 = v1;
  return result;
}

uint64_t *AttributeFlag.deleted.unsafeMutableAddressor()
{
  if (qword_10070FB38 != -1) {
    swift_once();
  }
  return &static AttributeFlag.deleted;
}

uint64_t static AttributeFlag.deleted.getter()
{
  return sub_10022CD64(&qword_10070FB38, &static AttributeFlag.deleted);
}

uint64_t sub_10022CC10()
{
  uint64_t result = sub_1005E1CB0();
  static AttributeFlag.seen = result;
  unk_1007618D0 = v1;
  return result;
}

uint64_t *AttributeFlag.seen.unsafeMutableAddressor()
{
  if (qword_10070FB40 != -1) {
    swift_once();
  }
  return &static AttributeFlag.seen;
}

uint64_t static AttributeFlag.seen.getter()
{
  return sub_10022CD64(&qword_10070FB40, &static AttributeFlag.seen);
}

uint64_t sub_10022CCB8()
{
  uint64_t result = sub_1005E1CB0();
  static AttributeFlag.draft = result;
  unk_1007618E0 = v1;
  return result;
}

uint64_t *AttributeFlag.draft.unsafeMutableAddressor()
{
  if (qword_10070FB48 != -1) {
    swift_once();
  }
  return &static AttributeFlag.draft;
}

uint64_t static AttributeFlag.draft.getter()
{
  return sub_10022CD64(&qword_10070FB48, &static AttributeFlag.draft);
}

uint64_t sub_10022CD64(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ListID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int ListID.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10022CE74()
{
  return ListID.hashValue.getter();
}

uint64_t sub_10022CE7C()
{
  return ListID.hash(into:)();
}

Swift::Int sub_10022CE84()
{
  return sub_1005E3470();
}

uint64_t sub_10022CEDC(uint64_t *a1, uint64_t *a2)
{
  return static MessageID.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_10022CEF4()
{
  unint64_t result = qword_100710580;
  if (!qword_100710580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710580);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AuthenticationMechanism(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AuthenticationMechanism(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AuthenticationMechanism(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for AuthenticationMechanism(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationMechanism(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationMechanism(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributeFlag()
{
  return &type metadata for AttributeFlag;
}

uint64_t AuthenticatedURL.authenticatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10022D090(v1, a1);
}

uint64_t sub_10022D090(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AuthenticatedURL.authenticatedURL.setter(uint64_t a1)
{
  return sub_10022D0F4(a1, v1);
}

uint64_t sub_10022D0F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AuthenticatedURL.verifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuthenticatedURL.verifier.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  v4[11] = a1;
  v4[12] = a2;
  v4[13] = a3;
  v4[14] = a4;
  return result;
}

Swift::UInt32 (__swiftcall *Envelope.inReplyTo.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

__n128 AuthenticatedURL.init(authenticatedURL:verifier:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  char v8 = *(unsigned char *)(a1 + 57);
  char v9 = *(unsigned char *)(a1 + 80);
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a6 = *(_OWORD *)a1;
  *(_OWORD *)(a6 + 16) = v10;
  *(_OWORD *)(a6 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a6 + 48) = v6;
  *(unsigned char *)(a6 + 56) = v7;
  *(unsigned char *)(a6 + 57) = v8 & 1;
  __n128 result = *(__n128 *)(a1 + 64);
  *(__n128 *)(a6 + 64) = result;
  *(unsigned char *)(a6 + 80) = v9;
  *(void *)(a6 + 88) = a2;
  *(void *)(a6 + 96) = a3;
  *(void *)(a6 + 104) = a4;
  *(void *)(a6 + 112) = a5;
  return result;
}

uint64_t AuthenticatedURL.hash(into:)()
{
  memcpy(__dst, (const void *)v0, sizeof(__dst));
  if (__dst[57] == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    *(_OWORD *)&_OWORD v8[3] = *(_OWORD *)__dst;
    *(_OWORD *)&v8[5] = *(_OWORD *)&__dst[16];
    *(_OWORD *)&v8[7] = *(_OWORD *)&__dst[32];
    v8[9] = *(void *)&__dst[48];
    char v9 = __dst[56] & 1;
    sub_1005E3420(1u);
    Expire.hash(into:)();
  }
  sub_10022D53C((__n128 *)&__dst[64], (__n128 *)v8);
  sub_10022D53C((__n128 *)v8, &v10);
  if (!v11)
  {
    Swift::UInt v1 = 0;
    goto LABEL_8;
  }
  if (v11 == 1)
  {
    Swift::UInt v1 = 1;
LABEL_8:
    sub_1005E3410(v1);
    sub_10022D5CC((uint64_t)__dst);
    sub_1005E1DB0();
    goto LABEL_13;
  }
  if (*(_OWORD *)&v10 == 0) {
    Swift::UInt v2 = 2;
  }
  else {
    Swift::UInt v2 = 3;
  }
  sub_1005E3410(v2);
LABEL_13:
  sub_10022D598((uint64_t)__dst);
  long long v4 = *(_OWORD *)(v0 + 88);
  long long v5 = *(_OWORD *)(v0 + 104);
  long long v6 = v4;
  sub_100057B18((uint64_t)&v6);
  sub_100057B18((uint64_t)&v5);
  sub_1005E1DB0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  sub_10002A77C((uint64_t)&v5);
  sub_10002A77C((uint64_t)&v6);
  return sub_10002A77C((uint64_t)&v5);
}

uint64_t static AuthenticatedURL.__derived_struct_equals(_:_:)(void *__src, void *a2)
{
  memcpy(__dst, __src, 0x51uLL);
  memcpy(v15, a2, 0x51uLL);
  if (!static AuthenticatedURLRump.__derived_struct_equals(_:_:)((uint64_t)__dst, (uint64_t)v15)) {
    return 0;
  }
  uint64_t v4 = *((void *)__src + 11);
  uint64_t v5 = *((void *)__src + 12);
  uint64_t v6 = *((void *)__src + 13);
  uint64_t v7 = *((void *)__src + 14);
  uint64_t v8 = a2[11];
  uint64_t v9 = a2[12];
  uint64_t v10 = a2[13];
  uint64_t v11 = a2[14];
  BOOL v12 = v4 == v8 && v5 == v9;
  if (v12 || (sub_1005E3290())
    && (v6 == v10 ? (BOOL v13 = v7 == v11) : (BOOL v13 = 0), v13 || (sub_1005E3290() & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

Swift::Int AuthenticatedURL.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10022D4FC()
{
  return sub_1005E3470();
}

__n128 *sub_10022D53C(__n128 *a1, __n128 *a2)
{
  return a2;
}

uint64_t sub_10022D598(uint64_t a1)
{
  return a1;
}

uint64_t sub_10022D5CC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10022D604()
{
  unint64_t result = qword_100710588;
  if (!qword_100710588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710588);
  }
  return result;
}

uint64_t destroy for AuthenticatedURL(uint64_t a1)
{
  sub_1002173AC(*(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AuthenticatedURL(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  uint64_t v5 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 80);
  sub_100217C58(v5, v6, v7);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v9;
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AuthenticatedURL(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  long long v6 = a2[2];
  *(_OWORD *)(a1 + 42) = *(long long *)((char *)a2 + 42);
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)a1 = v4;
  uint64_t v7 = *((void *)a2 + 8);
  uint64_t v8 = *((void *)a2 + 9);
  unsigned __int8 v9 = *((unsigned char *)a2 + 80);
  sub_100217C58(v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v9;
  sub_1002173AC(v10, v11, v12);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for Envelope(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for AuthenticatedURL(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  char v5 = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v5;
  sub_1002173AC(v6, v7, v8);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedURL(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 96);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticatedURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 96) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticatedURL()
{
  return &type metadata for AuthenticatedURL;
}

BOOL static AuthenticatedURLRump.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 57);
  if (*(unsigned char *)(a1 + 57))
  {
LABEL_2:
    if ((v4 & 1) == 0) {
      return 0;
    }
    goto LABEL_3;
  }
  if (*(unsigned char *)(a2 + 57)) {
    return 0;
  }
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)a1, *(int64x2_t *)a2), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 16), *(int64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0&& *(void *)(a1 + 32) == *(void *)(a2 + 32)&& *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    char v4 = *(unsigned char *)(a2 + 56);
    if (*(unsigned char *)(a1 + 56)) {
      goto LABEL_2;
    }
    BOOL result = 0;
    if ((*(unsigned char *)(a2 + 56) & 1) == 0 && *(void *)(a1 + 48) == *(void *)(a2 + 48))
    {
LABEL_3:
      sub_10022D53C((__n128 *)(a1 + 64), &v10);
      sub_10022D53C((__n128 *)(a2 + 64), &v9);
      sub_10022D53C(&v10, &v11);
      unint64_t v5 = v11.n128_u64[0];
      if (v12)
      {
        if (v12 != 1)
        {
          if (*(_OWORD *)&v11 == 0)
          {
            sub_10022D53C(&v9, &v13);
            if (v14 != 2 || *(_OWORD *)&v13 != 0) {
              return 0;
            }
          }
          else
          {
            sub_10022D53C(&v9, &v13);
            if (v14 != 2 || v13.n128_u64[1] || v13.n128_u64[0] != 1) {
              return 0;
            }
          }
          return 1;
        }
        unint64_t v6 = v11.n128_u64[1];
        sub_10022D53C(&v9, &v13);
        if (v14 != 1) {
          return 0;
        }
LABEL_16:
        BOOL v8 = v5 == v13.n128_u64[0] && v6 == v13.n128_u64[1];
        return v8 || (sub_1005E3290() & 1) != 0;
      }
      unint64_t v6 = v11.n128_u64[1];
      sub_10022D53C(&v9, &v13);
      if (!v14) {
        goto LABEL_16;
      }
      return 0;
    }
  }
  return result;
}

void sub_10022DAD0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = 0;
  if ((*(unsigned char *)(a1 + 57) & 1) == 0)
  {
    uint64_t v5 = *(void *)a1;
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v7 = *(void *)(a1 + 16);
    long long v40 = *(_OWORD *)(a1 + 40);
    long long v41 = *(_OWORD *)(a1 + 24);
    char v8 = *(unsigned char *)(a1 + 56);
    Swift::Int v9 = *(unsigned int *)(v1 + 20);
    uint64_t v10 = sub_10022E528();
    sub_100210AD0(v10, v11, v2 + 8, v9);
    if (v13)
    {
      v14._uint64_t countAndFlagsBits = sub_10022E528();
      Swift::Int v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v9);
    }
    Swift::Int v15 = v12;
    int v16 = *(_DWORD *)(v2 + 20);
    BOOL v17 = __CFADD__(v16, v12);
    int v18 = v16 + v12;
    if (v17) {
      goto LABEL_20;
    }
    *(_DWORD *)(v2 + 20) = v18;
    uint64_t v19 = sub_10027577C(v5, v6, v7);
    Swift::Int v20 = *(unsigned int *)(v2 + 20);
    sub_100210AD0(84, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
    if (v22)
    {
      v23._uint64_t countAndFlagsBits = 84;
      v23._object = (void *)0xE100000000000000;
      Swift::Int v21 = ByteBuffer._setStringSlowpath(_:at:)(v23, v20);
    }
    int v24 = *(_DWORD *)(v2 + 20);
    BOOL v17 = __CFADD__(v24, v21);
    int v25 = v24 + v21;
    if (v17) {
      goto LABEL_21;
    }
    *(_DWORD *)(v2 + 20) = v25;
    uint64_t v26 = v19 + v21;
    if (__OFADD__(v19, v21))
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v42[0] = v41;
    v42[1] = v40;
    char v43 = v8 & 1;
    uint64_t v27 = sub_1002758D0((uint64_t)v42);
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    BOOL v29 = __OFADD__(v15, v28);
    Swift::Int v4 = v15 + v28;
    if (v29)
    {
LABEL_24:
      __break(1u);
      return;
    }
  }
  Swift::Int v30 = *(unsigned int *)(v2 + 20);
  uint64_t v31 = sub_10022E50C();
  sub_100210AD0(v31, v32, v2 + 8, v30);
  if (v34)
  {
    v35._uint64_t countAndFlagsBits = sub_10022E50C();
    Swift::Int v33 = ByteBuffer._setStringSlowpath(_:at:)(v35, v30);
  }
  int v36 = *(_DWORD *)(v2 + 20);
  BOOL v17 = __CFADD__(v36, v33);
  int v37 = v36 + v33;
  if (v17)
  {
    __break(1u);
    goto LABEL_18;
  }
  *(_DWORD *)(v2 + 20) = v37;
  Swift::Int v38 = v4 + v33;
  if (__OFADD__(v4, v33))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_100218954(*(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  if (__OFADD__(v38, v39))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

__n128 AuthenticatedURLRump.expire.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  char v3 = *(unsigned char *)(v1 + 56);
  char v4 = *(unsigned char *)(v1 + 57);
  long long v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t AuthenticatedURLRump.expire.setter(uint64_t a1)
{
  return sub_10022E25C(a1, v1);
}

uint64_t AuthenticatedURLRump.access.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_100217C58(v1, *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  return v1;
}

uint64_t AuthenticatedURLRump.access.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = sub_1002173AC(*(void *)(v3 + 64), *(void *)(v3 + 72), *(unsigned char *)(v3 + 80));
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a2;
  *(unsigned char *)(v3 + 80) = a3;
  return result;
}

Swift::UInt32 (__swiftcall *SelectedMailbox.modificationSequenceValue.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

double AuthenticatedURLRump.init(expire:access:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  sub_10022E25C(a1, (uint64_t)v15);
  uint64_t v9 = v16;
  char v10 = v17;
  char v11 = v18;
  double result = *(double *)v15;
  long long v13 = v15[1];
  long long v14 = v15[2];
  *(_OWORD *)a5 = v15[0];
  *(_OWORD *)(a5 + 16) = v13;
  *(_OWORD *)(a5 + 32) = v14;
  *(void *)(a5 + 48) = v9;
  *(unsigned char *)(a5 + 56) = v10;
  *(unsigned char *)(a5 + 57) = v11;
  *(void *)(a5 + 64) = a2;
  *(void *)(a5 + 72) = a3;
  *(unsigned char *)(a5 + 80) = a4;
  return result;
}

uint64_t AuthenticatedURLRump.hash(into:)()
{
  if (*(unsigned char *)(v0 + 57) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    char v1 = *(unsigned char *)(v0 + 56);
    uint64_t v2 = *(void *)(v0 + 48);
    long long v3 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)&_OWORD v7[3] = *(_OWORD *)v0;
    *(_OWORD *)&v7[5] = v3;
    *(_OWORD *)&v7[7] = *(_OWORD *)(v0 + 32);
    v7[9] = v2;
    char v8 = v1 & 1;
    sub_1005E3420(1u);
    Expire.hash(into:)();
  }
  sub_10022D53C((__n128 *)(v0 + 64), (__n128 *)v7);
  sub_10022D53C((__n128 *)v7, &v9);
  if (!v10)
  {
    Swift::UInt v4 = 0;
    goto LABEL_8;
  }
  if (v10 == 1)
  {
    Swift::UInt v4 = 1;
LABEL_8:
    sub_1005E3410(v4);
    sub_10022D5CC(v0);
    sub_1005E1DB0();
    return sub_10022D598(v0);
  }
  if (*(_OWORD *)&v9 == 0) {
    Swift::UInt v5 = 2;
  }
  else {
    Swift::UInt v5 = 3;
  }
  sub_1005E3410(v5);
  return sub_10022D598(v0);
}

Swift::Int AuthenticatedURLRump.hashValue.getter()
{
  sub_1005E33F0();
  if (*(unsigned char *)(v0 + 57) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    char v1 = *(unsigned char *)(v0 + 56);
    uint64_t v2 = *(void *)(v0 + 48);
    long long v3 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)&_OWORD v7[3] = *(_OWORD *)v0;
    *(_OWORD *)&v7[5] = v3;
    *(_OWORD *)&v7[7] = *(_OWORD *)(v0 + 32);
    v7[9] = v2;
    char v8 = v1 & 1;
    sub_1005E3420(1u);
    Expire.hash(into:)();
  }
  sub_10022D53C((__n128 *)(v0 + 64), (__n128 *)v7);
  sub_10022D53C((__n128 *)v7, &v9);
  if (!v10)
  {
    Swift::UInt v4 = 0;
    goto LABEL_8;
  }
  if (v10 == 1)
  {
    Swift::UInt v4 = 1;
LABEL_8:
    sub_1005E3410(v4);
    sub_10022D5CC(v0);
    sub_1005E1DB0();
    goto LABEL_13;
  }
  if (*(_OWORD *)&v9 == 0) {
    Swift::UInt v5 = 2;
  }
  else {
    Swift::UInt v5 = 3;
  }
  sub_1005E3410(v5);
LABEL_13:
  sub_10022D598(v0);
  return sub_1005E3470();
}

Swift::Int sub_10022E034()
{
  memcpy(__dst, v0, sizeof(__dst));
  return AuthenticatedURLRump.hashValue.getter();
}

uint64_t sub_10022E070()
{
  memcpy(__dst, v0, sizeof(__dst));
  return AuthenticatedURLRump.hash(into:)();
}

Swift::Int sub_10022E0B4()
{
  int v1 = *(unsigned __int8 *)(v0 + 57);
  *(void *)&long long v8 = *(void *)(v0 + 72);
  *((void *)&v8 + 1) = *(void *)(v0 + 64);
  int v7 = *(unsigned __int8 *)(v0 + 80);
  sub_1005E33F0();
  if (v1 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    Expire.hash(into:)();
  }
  if (!v7)
  {
    sub_1005E3410(0);
    uint64_t v2 = *((void *)&v8 + 1);
    uint64_t v3 = v8;
    unsigned __int8 v4 = 0;
    goto LABEL_8;
  }
  if (v7 == 1)
  {
    sub_1005E3410(1uLL);
    uint64_t v2 = *((void *)&v8 + 1);
    uint64_t v3 = v8;
    unsigned __int8 v4 = 1;
LABEL_8:
    sub_100217C58(v2, v3, v4);
    sub_1005E1DB0();
    goto LABEL_13;
  }
  if (v8 == 0) {
    Swift::UInt v5 = 2;
  }
  else {
    Swift::UInt v5 = 3;
  }
  sub_1005E3410(v5);
LABEL_13:
  sub_1002173AC(*((uint64_t *)&v8 + 1), v8, v7);
  return sub_1005E3470();
}

BOOL sub_10022E204(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x51uLL);
  memcpy(__dst, a2, 0x51uLL);
  return static AuthenticatedURLRump.__derived_struct_equals(_:_:)((uint64_t)v4, (uint64_t)__dst);
}

uint64_t sub_10022E25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100710590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10022E2C8()
{
  unint64_t result = qword_100710598;
  if (!qword_100710598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710598);
  }
  return result;
}

uint64_t destroy for AuthenticatedURLRump(uint64_t a1)
{
  return sub_1002173AC(*(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
}

uint64_t initializeWithCopy for AuthenticatedURLRump(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 72);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 80);
  sub_100217C58(v4, v5, v6);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = v6;
  return a1;
}

uint64_t assignWithCopy for AuthenticatedURLRump(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  long long v4 = a2[1];
  long long v5 = a2[2];
  *(_OWORD *)(a1 + 42) = *(long long *)((char *)a2 + 42);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v3;
  uint64_t v6 = *((void *)a2 + 8);
  uint64_t v7 = *((void *)a2 + 9);
  unsigned __int8 v8 = *((unsigned char *)a2 + 80);
  sub_100217C58(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v8;
  sub_1002173AC(v9, v10, v11);
  return a1;
}

void *initializeWithTake for AuthenticatedURLRump(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t assignWithTake for AuthenticatedURLRump(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  char v4 = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v4;
  sub_1002173AC(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedURLRump(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 81))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticatedURLRump(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticatedURLRump()
{
  return &type metadata for AuthenticatedURLRump;
}

uint64_t sub_10022E50C()
{
  return 0x485455414C52553BLL;
}

uint64_t sub_10022E528()
{
  return 0x3D4552495058453BLL;
}

uint64_t static Media.MediaType.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12 = a1 == a5 && a2 == a6;
  if (v12 || (char v13 = sub_1005E3290(), result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
    {
      return 1;
    }
    else
    {
      return sub_1005E3290();
    }
  }
  return result;
}

void sub_10022E5E0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = v4 + 8;
  Swift::Int v11 = *(unsigned int *)(v5 + 20);
  sub_100210AD0(58, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
  if (v13)
  {
    v14._uint64_t countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    Swift::Int v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  Swift::Int v15 = v12;
  int v16 = *(_DWORD *)(v5 + 20);
  Swift::Int v17 = (v16 + v12);
  if (__CFADD__(v16, v12))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v40 = a3;
  *(_DWORD *)(v5 + 20) = v17;
  swift_bridgeObjectRetain();
  sub_100210AD0(a1, (unint64_t)a2, v10, v17);
  Swift::Int v19 = v18;
  char v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    v22._uint64_t countAndFlagsBits = a1;
    v22._object = a2;
    Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v22, v17);
  }
  int v23 = *(_DWORD *)(v5 + 20);
  Swift::Int v24 = (v23 + v19);
  if (__CFADD__(v23, v19)) {
    goto LABEL_18;
  }
  *(_DWORD *)(v5 + 20) = v24;
  Swift::Int v25 = v15 + v19;
  if (__OFADD__(v15, v19))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_100210AD0(58, 0xE100000000000000, v10, v23 + v19);
  if (v27)
  {
    v28._uint64_t countAndFlagsBits = 58;
    v28._object = (void *)0xE100000000000000;
    Swift::Int v26 = ByteBuffer._setStringSlowpath(_:at:)(v28, v24);
  }
  int v29 = *(_DWORD *)(v5 + 20);
  Swift::Int v30 = (v29 + v26);
  if (__CFADD__(v29, v26)) {
    goto LABEL_20;
  }
  *(_DWORD *)(v5 + 20) = v30;
  Swift::Int v31 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  sub_100210AD0(v40, (unint64_t)a4, v10, v30);
  Swift::Int v33 = v32;
  char v35 = v34;
  swift_bridgeObjectRelease();
  if (v35)
  {
    v36._uint64_t countAndFlagsBits = v40;
    v36._object = a4;
    Swift::Int v33 = ByteBuffer._setStringSlowpath(_:at:)(v36, v30);
  }
  int v37 = *(_DWORD *)(v5 + 20);
  BOOL v38 = __CFADD__(v37, v33);
  int v39 = v37 + v33;
  if (v38) {
    goto LABEL_22;
  }
  *(_DWORD *)(v5 + 20) = v39;
  if (__OFADD__(v31, v33)) {
LABEL_23:
  }
    __break(1u);
}

uint64_t ListID.description.getter(uint64_t a1)
{
  return a1;
}

uint64_t WatchOSHeaderInfo.from.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ContentDisposition.Attribute.value.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t ContentDisposition.Attribute.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t AuthenticatedURLVerifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int AuthenticatedURLVerifier.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10022E990()
{
  return AuthenticatedURLVerifier.hashValue.getter();
}

uint64_t sub_10022E99C()
{
  return AuthenticatedURLVerifier.hash(into:)();
}

Swift::Int sub_10022E9A8()
{
  return sub_1005E3470();
}

uint64_t sub_10022EA2C(uint64_t *a1, uint64_t *a2)
{
  return static Media.MediaType.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

unint64_t sub_10022EA4C()
{
  unint64_t result = qword_1007105A0;
  if (!qword_1007105A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007105A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SearchModificationSequence(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AuthenticatedURLVerifier()
{
  return &type metadata for AuthenticatedURLVerifier;
}

const char *AuthenticationMechanism.token.unsafeMutableAddressor()
{
  return "TOKEN";
}

unint64_t static AuthenticationMechanism.token.getter()
{
  return sub_10022EC38(1162563412);
}

const char *AuthenticationMechanism.plain.unsafeMutableAddressor()
{
  return "PLAIN";
}

unint64_t static AuthenticationMechanism.plain.getter()
{
  return sub_10022EC38(1229016144);
}

const char *AuthenticationMechanism.pToken.unsafeMutableAddressor()
{
  return "PTOKEN";
}

uint64_t static AuthenticationMechanism.pToken.getter()
{
  return 0x4E454B4F5450;
}

const char *AuthenticationMechanism.weToken.unsafeMutableAddressor()
{
  return "WETOKEN";
}

uint64_t static AuthenticationMechanism.weToken.getter()
{
  return sub_10022EC24(0x4557u);
}

const char *AuthenticationMechanism.wsToken.unsafeMutableAddressor()
{
  return "WSTOKEN";
}

uint64_t static AuthenticationMechanism.wsToken.getter()
{
  return sub_10022EC24(0x5357u);
}

const char *AuthenticationMechanism.gssAPI.unsafeMutableAddressor()
{
  return "GSSAPI";
}

uint64_t static AuthenticationMechanism.gssAPI.getter()
{
  return 0x495041535347;
}

NIOIMAPCore2::AuthenticationMechanism __swiftcall AuthenticationMechanism.init(_:)(Swift::String a1)
{
  uint64_t v1 = sub_1005E1CD0();
  unsigned int v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v4 = v1;
  uint64_t v5 = v3;
  result.rawValue._object = v5;
  result.rawValue._uint64_t countAndFlagsBits = v4;
  return result;
}

unint64_t sub_10022EBC8()
{
  unint64_t result = qword_1007105A8;
  if (!qword_1007105A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007105A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationMechanism()
{
  return &type metadata for AuthenticationMechanism;
}

uint64_t sub_10022EC24(unsigned __int16 a1)
{
  return a1 | 0x4E454B4F540000;
}

unint64_t sub_10022EC38(uint64_t a1)
{
  return a1 & 0xFFFF0000FFFFFFFFLL | 0x4E00000000;
}

void *sub_10022EC44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 1) == 0) {
    goto LABEL_2;
  }
  sub_1005E3300();
  swift_unknownObjectRetain_n();
  uint64_t v10 = (void *)swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v11 = v10[2];
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    sub_1001F8FA0(a1, a2, a3, a4);
    uint64_t v9 = v8;
    goto LABEL_9;
  }
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  swift_unknownObjectRelease();
  return v9;
}

uint64_t Activity.MailboxStatus.Info.FetchProgress.total.getter(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10022ED3C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0)
    {
      BOOL v6 = __OFSUB__(v3, a2);
      BOOL v4 = v3 == a2;
      BOOL v5 = v3 - a2 < 0;
    }
    else
    {
      BOOL v6 = 0;
      BOOL v4 = 1;
      BOOL v5 = 0;
    }
    if (!(v5 ^ v6 | v4)) {
      return variable initialization expression of Cache._idna();
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return variable initialization expression of Cache._idna();
  }
  BOOL v6 = __OFADD__(result, a2);
  result += a2;
  if (v6) {
    goto LABEL_14;
  }
  return result;
}

void *sub_10022ED80(void *a1, uint64_t a2)
{
  sub_1001F90E8();
  if (a2 < 1)
  {
    if (v4 <= 0 && v4 > a2) {
      return 0;
    }
  }
  else if ((v4 & 0x8000000000000000) == 0 && v4 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_100231120(a1, a2);
}

uint64_t sub_10022EDE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10022EDF8@<X0>(uint64_t a1@<X8>)
{
  sub_10013AE3C((uint64_t)v1, a1);
  *(void *)(a1 + 184) = _swiftEmptyArrayStorage;
  sub_10000566C(&qword_10070FEB0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005F6670;
  sub_100232214(v1);
  uint64_t result = BodyStructure.subpartCount.getter();
  *(void *)(v3 + 32) = result + 1;
  *(void *)(a1 + 192) = v3;
  return result;
}

uint64_t sub_10022EE8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1) {
    return *(void *)(a1 + 8 * v1 + 24);
  }
  else {
    return 0;
  }
}

uint64_t sub_10022EEB4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  if (v1 == v2)
  {
    int v3 = 0;
    return v3 | ((v1 == v2) << 8);
  }
  uint64_t v4 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v4 < v1 || v2 - 1 >= v2) {
    goto LABEL_14;
  }
  uint64_t v6 = *((unsigned int *)v0 + 2);
  if (v4 < v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v4 - v6 < (*((_DWORD *)v0 + 3) - v6))
  {
    uint64_t v7 = *v0;
    uint64_t v8 = *((unsigned __int16 *)v0 + 10);
    uint64_t v9 = *((unsigned __int8 *)v0 + 22);
    swift_beginAccess();
    int v3 = *(unsigned __int8 *)(*(void *)(v7 + 24) + (v9 | (v8 << 8)) + v4);
    return v3 | ((v1 == v2) << 8);
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10022EF78(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_1005E1DE0();
  return sub_1005E1F30();
}

void MessageAttribute.BodyStructure.hash(into:)()
{
  sub_10023522C();
  sub_10013AE3C(v1, (uint64_t)v8);
  sub_10013AE3C((uint64_t)v8, (uint64_t)v13);
  sub_10013AE3C(v1, (uint64_t)v9);
  sub_100235170((uint64_t)v9);
  if (v3)
  {
    sub_1005E3410(1uLL);
  }
  else
  {
    sub_10013AE3C((uint64_t)v9, (uint64_t)v10);
    sub_1005E3410(0);
    sub_10013AE3C((uint64_t)v10, (uint64_t)v11);
    int v4 = sub_10013AEAC((uint64_t)v11);
    if (v4 == 1)
    {
      BOOL v5 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v11);
      memcpy(__dst, v5, 0x78uLL);
      sub_1005E3410(1uLL);
      sub_10013AE3C((uint64_t)v13, (uint64_t)v7);
      sub_100232214(v7);
      BodyStructure.Multipart.hash(into:)(v2);
    }
    else
    {
      uint64_t v6 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v11);
      memcpy(__dst, v6, sizeof(__dst));
      sub_1005E3410(0);
      sub_10013AE3C((uint64_t)v13, (uint64_t)v7);
      sub_100232214(v7);
      BodyStructure.Singlepart.hash(into:)(v2);
    }
    sub_100233F80(v0);
  }
}

uint64_t static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(__n128 *a1, __n128 *a2)
{
  sub_10013AE3C((uint64_t)a1, (uint64_t)v16);
  sub_100235170((uint64_t)v16);
  if (v5)
  {
    sub_10013AE3C((uint64_t)a2, (uint64_t)v17);
    uint64_t result = sub_100235170((uint64_t)v17);
    if (v5) {
      return result;
    }
    sub_10013AE3C((uint64_t)v17, (uint64_t)v18);
    return 0;
  }
  sub_10013AE3C((uint64_t)v16, (uint64_t)v17);
  sub_10013AE3C((uint64_t)a2, (uint64_t)v12);
  sub_100235170((uint64_t)v12);
  if (!v5)
  {
    sub_10013AE3C((uint64_t)v12, (uint64_t)v13);
    sub_10013AE3C((uint64_t)v17, (uint64_t)v18);
    int v6 = sub_10013AEAC((uint64_t)v18);
    uint64_t v7 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v18);
    if (v6 == 1)
    {
      memcpy(__dst, v7, 0x78uLL);
      sub_10013AE3C((uint64_t)v13, (uint64_t)v15);
      if (sub_10013AEAC((uint64_t)v15) != 1) {
        return 0;
      }
      uint64_t v8 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v15);
      memcpy(v14, v8, 0x78uLL);
      sub_100233F80(a2);
      sub_100233F80(a1);
      BOOL v9 = static BodyStructure.Multipart.__derived_struct_equals(_:_:)(__dst, v14);
    }
    else
    {
      memcpy(__dst, v7, sizeof(__dst));
      sub_10013AE3C((uint64_t)v13, (uint64_t)v15);
      if (sub_10013AEAC((uint64_t)v15) == 1) {
        return 0;
      }
      uint64_t v10 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v15);
      memcpy(v14, v10, sizeof(v14));
      sub_100233F80(a2);
      sub_100233F80(a1);
      static BodyStructure.Singlepart.__derived_struct_equals(_:_:)();
    }
    BOOL v11 = v9;
    sub_100233F80(a2);
    sub_100233F80(a1);
    if (v11) {
      return 1;
    }
  }
  return 0;
}

void static BodyStructure.__derived_enum_equals(_:_:)()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  char v3 = (__n128 *)v2;
  sub_10013AE3C(v2, (uint64_t)v144);
  int v4 = sub_10013AEAC((uint64_t)v144);
  char v5 = (unint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v144);
  int v6 = v5;
  uint64_t v96 = v3;
  if (v4 != 1)
  {
    unint64_t v94 = *v5;
    memcpy(__dst, v5 + 1, sizeof(__dst));
    uint64_t v92 = v6[12];
    uint64_t v26 = v6[14];
    uint64_t v88 = v6[11];
    uint64_t v90 = v6[13];
    uint64_t v28 = v6[15];
    uint64_t v27 = v6[16];
    uint64_t v29 = v6[17];
    uint64_t v30 = v6[18];
    uint64_t v31 = v6[19];
    uint64_t v32 = v6[20];
    uint64_t v33 = v6[21];
    uint64_t v95 = (__n128 *)v1;
    sub_10013AE3C(v1, (uint64_t)&v97);
    int v34 = sub_10013AEAC((uint64_t)&v97);
    char v35 = (unint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v97);
    if (v34 == 1) {
      goto LABEL_28;
    }
    Swift::String v36 = v35;
    uint64_t v70 = v33;
    uint64_t v71 = v32;
    uint64_t v72 = v31;
    uint64_t v74 = v26;
    uint64_t v76 = v28;
    uint64_t v78 = v27;
    unint64_t v37 = *v35;
    memcpy(__src, v35 + 1, sizeof(__src));
    uint64_t v39 = v36[11];
    uint64_t v38 = v36[12];
    uint64_t v40 = v36[13];
    uint64_t v84 = v36[16];
    uint64_t v86 = v36[15];
    uint64_t v67 = v36[17];
    uint64_t v68 = v36[14];
    uint64_t v41 = v36[19];
    uint64_t v82 = v36[18];
    uint64_t v43 = v36[20];
    uint64_t v42 = v36[21];
    sub_100232214(v96);
    sub_100232214(v95);
    if (static BodyStructure.Singlepart.Kind.__derived_enum_equals(_:_:)(v94, v37))
    {
      memcpy(v146, __dst, sizeof(v146));
      memcpy(v147, __src, sizeof(v147));
      if (static BodyStructure.Fields.__derived_struct_equals(_:_:)(v146, v147))
      {
        if (v92 == 1)
        {
          if (v38 == 1)
          {
            uint64_t v44 = v95;
            goto LABEL_31;
          }
        }
        else if (v38 != 1)
        {
          uint64_t v148 = v88;
          uint64_t v149 = v92;
          uint64_t v150 = v90;
          uint64_t v151 = v74;
          uint64_t v152 = v76;
          uint64_t v153 = v78;
          uint64_t v154 = v29;
          uint64_t v155 = v30;
          uint64_t v156 = v72;
          uint64_t v157 = v71;
          uint64_t v158 = v70;
          uint64_t v122 = v39;
          uint64_t v123 = v38;
          uint64_t v124 = v40;
          uint64_t v125 = v68;
          uint64_t v126 = v86;
          uint64_t v127 = v84;
          uint64_t v128 = v67;
          uint64_t v129 = v82;
          uint64_t v130 = v41;
          uint64_t v131 = v43;
          uint64_t v132 = v42;
          sub_100136A14(v88, v92, v90, v74, v76, v78, v29, v30, v72, v71, v70);
          sub_100235238();
          sub_100136A14(v47, v48, v49, v50, v51, v52, v67, v53, v41, v43, v42);
          static BodyStructure.Singlepart.Extension.__derived_struct_equals(_:_:)(&v148, &v122);
          sub_100235238();
          sub_1000615E4(v54, v55, v56, v57, v58, v59, v67, v60, v41, v43, v42);
          sub_1000615E4(v88, v92, v90, v74, v76, v78, v29, v30, v72, v71, v70);
          sub_100232214(v95);
          sub_100232214(v96);
          goto LABEL_28;
        }
        uint64_t v122 = v88;
        uint64_t v123 = v92;
        uint64_t v124 = v90;
        uint64_t v125 = v74;
        uint64_t v126 = v76;
        uint64_t v127 = v78;
        uint64_t v128 = v29;
        uint64_t v129 = v30;
        uint64_t v130 = v72;
        uint64_t v131 = v71;
        uint64_t v132 = v70;
        uint64_t v133 = v39;
        uint64_t v134 = v38;
        uint64_t v135 = v40;
        uint64_t v136 = v68;
        uint64_t v137 = v86;
        uint64_t v138 = v84;
        uint64_t v139 = v67;
        uint64_t v140 = v82;
        uint64_t v141 = v41;
        uint64_t v142 = v43;
        uint64_t v143 = v42;
        sub_100136A14(v88, v92, v90, v74, v76, v78, v29, v30, v72, v71, v70);
        sub_100136A14(v39, v38, v40, v68, v86, v84, v67, v82, v41, v43, v42);
        sub_100223DC8((uint64_t)&v122);
      }
      uint64_t v46 = v95;
      goto LABEL_26;
    }
    sub_100232214(v95);
    uint64_t v45 = v96;
LABEL_27:
    sub_100232214(v45);
    goto LABEL_28;
  }
  unint64_t v93 = v5[1];
  uint64_t v7 = (__n128 *)v1;
  uint64_t v83 = v5[4];
  uint64_t v85 = v5[3];
  uint64_t v87 = v5[5];
  uint64_t v8 = v5[7];
  uint64_t v89 = v5[6];
  unint64_t v91 = v5[2];
  uint64_t v10 = v5[8];
  uint64_t v9 = v5[9];
  uint64_t v12 = v5[10];
  uint64_t v11 = v5[11];
  uint64_t v14 = v5[12];
  uint64_t v13 = v5[13];
  uint64_t v15 = v5[14];
  sub_10013AE3C((uint64_t)v7, (uint64_t)&v122);
  int v16 = sub_10013AEAC((uint64_t)&v122);
  Swift::Int v17 = (void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v122);
  if (v16 == 1)
  {
    uint64_t v64 = v15;
    uint64_t v65 = v13;
    uint64_t v66 = v14;
    uint64_t v69 = v8;
    uint64_t v73 = v12;
    uint64_t v77 = v17[1];
    uint64_t v79 = v17[2];
    uint64_t v18 = v17[5];
    uint64_t v75 = v17[4];
    uint64_t v19 = v17[6];
    uint64_t v62 = v17[8];
    uint64_t v63 = v17[7];
    uint64_t v61 = v17[9];
    uint64_t v20 = v17[11];
    uint64_t v80 = v17[10];
    uint64_t v81 = v17[3];
    uint64_t v22 = v17[12];
    uint64_t v21 = v17[13];
    uint64_t v23 = v17[14];
    sub_100232214(v96);
    sub_100232214(v7);
    sub_10021E9A8();
    if (v24)
    {
      BOOL v25 = v93 == v77 && v91 == v79;
      if (!v25 && (sub_1005E3290() & 1) == 0)
      {
        uint64_t v46 = v7;
        goto LABEL_26;
      }
      if (v83)
      {
        if (v75)
        {
          uint64_t v148 = v85;
          uint64_t v149 = v83;
          uint64_t v150 = v87;
          uint64_t v151 = v89;
          uint64_t v152 = v69;
          uint64_t v153 = v10;
          uint64_t v154 = v9;
          uint64_t v155 = v73;
          uint64_t v156 = v11;
          uint64_t v157 = v66;
          uint64_t v158 = v65;
          uint64_t v159 = v64;
          uint64_t v97 = v81;
          uint64_t v98 = v75;
          uint64_t v99 = v18;
          uint64_t v100 = v19;
          uint64_t v101 = v63;
          uint64_t v102 = v62;
          uint64_t v103 = v61;
          uint64_t v104 = v80;
          uint64_t v105 = v20;
          uint64_t v106 = v22;
          uint64_t v107 = v21;
          uint64_t v108 = v23;
          sub_100136C1C(v85, v83, v87, v89, v69, v10, v9, v73, v11, v66, v65, v64);
          sub_100136C1C(v81, v75, v18, v19, v63, v62, v61, v80, v20, v22, v21, v23);
          static BodyStructure.Multipart.Extension.__derived_struct_equals(_:_:)(&v148, &v97);
          sub_1000617EC(v81, v75, v18, v19, v63, v62, v61, v80, v20, v22, v21, v23);
          sub_1000617EC(v85, v83, v87, v89, v69, v10, v9, v73, v11, v66, v65, v64);
          sub_100232214(v7);
          sub_100232214(v96);
          goto LABEL_28;
        }
        goto LABEL_21;
      }
      if (v75)
      {
LABEL_21:
        uint64_t v97 = v85;
        uint64_t v98 = v83;
        uint64_t v99 = v87;
        uint64_t v100 = v89;
        uint64_t v101 = v69;
        uint64_t v102 = v10;
        uint64_t v103 = v9;
        uint64_t v104 = v73;
        uint64_t v105 = v11;
        uint64_t v106 = v66;
        uint64_t v107 = v65;
        uint64_t v108 = v64;
        uint64_t v109 = v81;
        uint64_t v110 = v75;
        uint64_t v111 = v18;
        uint64_t v112 = v19;
        uint64_t v113 = v63;
        uint64_t v114 = v62;
        uint64_t v115 = v61;
        uint64_t v116 = v80;
        uint64_t v117 = v20;
        uint64_t v118 = v22;
        uint64_t v119 = v21;
        uint64_t v120 = v23;
        sub_100136C1C(v85, v83, v87, v89, v69, v10, v9, v73, v11, v66, v65, v64);
        sub_100136C1C(v81, v75, v18, v19, v63, v62, v61, v80, v20, v22, v21, v23);
        sub_100223C60((uint64_t)&v97);
        uint64_t v46 = v7;
LABEL_26:
        sub_100232214(v46);
        uint64_t v45 = v96;
        goto LABEL_27;
      }
      uint64_t v44 = v7;
LABEL_31:
      sub_100232214(v44);
      sub_100232214(v96);
      goto LABEL_28;
    }
    sub_100232214(v7);
    uint64_t v45 = v96;
    goto LABEL_27;
  }
LABEL_28:
  sub_1001FE57C();
}

Swift::Int MessageAttribute.BodyStructure.hashValue.getter()
{
  sub_10013AE3C((uint64_t)v0, (uint64_t)v8);
  sub_10013AE3C((uint64_t)v8, (uint64_t)v13);
  sub_1005E33F0();
  sub_10013AE3C((uint64_t)v0, (uint64_t)v9);
  sub_100235170((uint64_t)v9);
  if (v1)
  {
    sub_1005E3410(1uLL);
  }
  else
  {
    sub_10013AE3C((uint64_t)v9, (uint64_t)v10);
    sub_1005E3410(0);
    sub_10013AE3C((uint64_t)v10, (uint64_t)v11);
    int v2 = sub_10013AEAC((uint64_t)v11);
    if (v2 == 1)
    {
      char v3 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v11);
      memcpy(__dst, v3, 0x78uLL);
      sub_1005E3410(1uLL);
      sub_10013AE3C((uint64_t)v13, (uint64_t)v6);
      sub_100232214(v6);
      BodyStructure.Multipart.hash(into:)((uint64_t)v7);
    }
    else
    {
      int v4 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v11);
      memcpy(__dst, v4, sizeof(__dst));
      sub_1005E3410(0);
      sub_10013AE3C((uint64_t)v13, (uint64_t)v6);
      sub_100232214(v6);
      BodyStructure.Singlepart.hash(into:)((uint64_t)v7);
    }
    sub_100233F80(v0);
  }
  return sub_1005E3470();
}

Swift::Int sub_10022FD6C()
{
  sub_10013AE3C(v0, (uint64_t)v2);
  return MessageAttribute.BodyStructure.hashValue.getter();
}

void sub_10022FDA4()
{
  sub_10013AE3C(v0, (uint64_t)v1);
  MessageAttribute.BodyStructure.hash(into:)();
}

Swift::Int sub_10022FDE4()
{
  sub_10013AE3C(v0, (uint64_t)v9);
  sub_1005E33F0();
  sub_10013AE3C((uint64_t)v9, (uint64_t)v10);
  if (sub_10013AE98((uint64_t)v10) == 1)
  {
    sub_1005E3410(1uLL);
  }
  else
  {
    sub_1005E3410(0);
    sub_10013AE3C((uint64_t)v10, (uint64_t)v6);
    if (sub_10013AEAC((uint64_t)v6) == 1)
    {
      uint64_t v1 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v6);
      uint64_t v2 = *(void *)(v1 + 16);
      __dst[0] = *(_OWORD *)v1;
      *(void *)&__dst[1] = v2;
      *(_OWORD *)((char *)&__dst[1] + 8) = *(_OWORD *)(v1 + 24);
      *(_OWORD *)((char *)&__dst[2] + 8) = *(_OWORD *)(v1 + 40);
      *(_OWORD *)((char *)&__dst[3] + 8) = *(_OWORD *)(v1 + 56);
      *(_OWORD *)((char *)&__dst[4] + 8) = *(_OWORD *)(v1 + 72);
      *(_OWORD *)((char *)&__dst[5] + 8) = *(_OWORD *)(v1 + 88);
      *(_OWORD *)((char *)&__dst[6] + 8) = *(_OWORD *)(v1 + 104);
      sub_1005E3410(1uLL);
      sub_10013AE3C((uint64_t)v9, (uint64_t)v5);
      sub_100232214(v5);
      BodyStructure.Multipart.hash(into:)((uint64_t)v7);
    }
    else
    {
      char v3 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v6);
      memcpy(__dst, v3, sizeof(__dst));
      sub_1005E3410(0);
      sub_10013AE3C((uint64_t)v9, (uint64_t)v5);
      sub_100232214(v5);
      BodyStructure.Singlepart.hash(into:)((uint64_t)v7);
    }
    sub_100233F80(v9);
  }
  return sub_1005E3470();
}

uint64_t sub_10022FF88(uint64_t a1, uint64_t a2)
{
  sub_10013AE3C(a1, (uint64_t)v4);
  sub_10013AE3C(a2, (uint64_t)v5);
  return static MessageAttribute.BodyStructure.__derived_enum_equals(_:_:)(v4, v5) & 1;
}

void BodyStructure.hash(into:)()
{
  sub_1001FE5B4();
  sub_10023522C();
  sub_10013AE3C(v1, (uint64_t)v20);
  sub_10013AE3C((uint64_t)v20, (uint64_t)v23);
  sub_10013AE3C(v1, (uint64_t)v21);
  if (sub_10013AEAC((uint64_t)v21) == 1)
  {
    char v3 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v21);
    memcpy(__dst, v3, 0x78uLL);
    sub_1005E3410(1uLL);
    sub_10013AE3C((uint64_t)v23, (uint64_t)v19);
    uint64_t v4 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v19);
    uint64_t v5 = *(void *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t v7 = *(void *)(v4 + 48);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v9 = *(void *)(v4 + 64);
    uint64_t v10 = *(void *)(v4 + 72);
    uint64_t v16 = *(void *)(v4 + 80);
    uint64_t v17 = *(void *)(v4 + 24);
    long long v15 = *(_OWORD *)(v4 + 88);
    uint64_t v18 = v2;
    uint64_t v11 = *(void *)(v4 + 104);
    uint64_t v12 = *(void *)(v4 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100136C1C(v17, v5, v6, v7, v8, v9, v10, v16, v15, *((uint64_t *)&v15 + 1), v11, v12);
    BodyStructure.Multipart.hash(into:)(v18);
  }
  else
  {
    uint64_t v13 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v21);
    memcpy(__dst, v13, sizeof(__dst));
    sub_1005E3410(0);
    sub_10013AE3C((uint64_t)v23, (uint64_t)v19);
    uint64_t v14 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v19);
    sub_10022C168(v14);
    BodyStructure.Singlepart.hash(into:)(v2);
  }
  sub_100232214(v0);
  sub_1001FE57C();
}

void BodyStructure.hashValue.getter()
{
  sub_1001FE5B4();
  sub_10013AE3C((uint64_t)v0, (uint64_t)v18);
  sub_10013AE3C((uint64_t)v18, (uint64_t)v21);
  sub_1005E33F0();
  sub_10013AE3C((uint64_t)v0, (uint64_t)v19);
  if (sub_10013AEAC((uint64_t)v19) == 1)
  {
    uint64_t v1 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v19);
    memcpy(__dst, v1, 0x78uLL);
    sub_1005E3410(1uLL);
    sub_10013AE3C((uint64_t)v21, (uint64_t)v16);
    uint64_t v2 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v16);
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v14 = *(void *)(v2 + 32);
    uint64_t v15 = *(void *)(v2 + 24);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = *(void *)(v2 + 56);
    uint64_t v6 = *(void *)(v2 + 64);
    uint64_t v7 = *(void *)(v2 + 72);
    uint64_t v8 = *(void *)(v2 + 80);
    long long v13 = *(_OWORD *)(v2 + 88);
    uint64_t v9 = *(void *)(v2 + 104);
    uint64_t v10 = *(void *)(v2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100136C1C(v15, v14, v3, v4, v5, v6, v7, v8, v13, *((uint64_t *)&v13 + 1), v9, v10);
    BodyStructure.Multipart.hash(into:)((uint64_t)v17);
  }
  else
  {
    uint64_t v11 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v19);
    memcpy(__dst, v11, sizeof(__dst));
    sub_1005E3410(0);
    sub_10013AE3C((uint64_t)v21, (uint64_t)v16);
    uint64_t v12 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v16);
    sub_10022C168(v12);
    BodyStructure.Singlepart.hash(into:)((uint64_t)v17);
  }
  sub_100232214(v0);
  sub_1005E3470();
  sub_1001FE57C();
}

void sub_1002302E4()
{
  sub_10013AE3C(v0, (uint64_t)v1);
  BodyStructure.hashValue.getter();
}

void sub_10023031C()
{
  sub_10013AE3C(v0, (uint64_t)v1);
  BodyStructure.hash(into:)();
}

Swift::Int sub_10023035C()
{
  sub_10013AE3C(v0, (uint64_t)v21);
  sub_1005E33F0();
  sub_10013AE3C((uint64_t)v21, (uint64_t)v22);
  if (sub_10013AEAC((uint64_t)v22) == 1)
  {
    uint64_t v1 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v22);
    uint64_t v2 = *(void *)(v1 + 16);
    __dst[0] = *(_OWORD *)v1;
    *(void *)&__dst[1] = v2;
    *(_OWORD *)((char *)&__dst[1] + 8) = *(_OWORD *)(v1 + 24);
    *(_OWORD *)((char *)&__dst[2] + 8) = *(_OWORD *)(v1 + 40);
    *(_OWORD *)((char *)&__dst[3] + 8) = *(_OWORD *)(v1 + 56);
    *(_OWORD *)((char *)&__dst[4] + 8) = *(_OWORD *)(v1 + 72);
    *(_OWORD *)((char *)&__dst[5] + 8) = *(_OWORD *)(v1 + 88);
    *(_OWORD *)((char *)&__dst[6] + 8) = *(_OWORD *)(v1 + 104);
    sub_1005E3410(1uLL);
    sub_10013AE3C((uint64_t)v21, (uint64_t)&v18);
    uint64_t v3 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v18);
    uint64_t v17 = *(void *)(v3 + 24);
    uint64_t v4 = *(void *)(v3 + 32);
    uint64_t v5 = *(void *)(v3 + 40);
    uint64_t v6 = *(void *)(v3 + 48);
    uint64_t v7 = *(void *)(v3 + 56);
    uint64_t v8 = *(void *)(v3 + 64);
    uint64_t v9 = *(void *)(v3 + 72);
    uint64_t v10 = *(void *)(v3 + 80);
    long long v16 = *(_OWORD *)(v3 + 88);
    uint64_t v12 = *(void *)(v3 + 104);
    uint64_t v11 = *(void *)(v3 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100136C1C(v17, v4, v5, v6, v7, v8, v9, v10, v16, *((uint64_t *)&v16 + 1), v12, v11);
    BodyStructure.Multipart.hash(into:)((uint64_t)v19);
  }
  else
  {
    long long v13 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v22);
    memcpy(__dst, v13, sizeof(__dst));
    sub_1005E3410(0);
    sub_10013AE3C((uint64_t)v21, (uint64_t)&v18);
    uint64_t v14 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v18);
    sub_10022C168(v14);
    BodyStructure.Singlepart.hash(into:)((uint64_t)v19);
  }
  sub_100232214(v21);
  return sub_1005E3470();
}

uint64_t sub_10023052C(uint64_t a1, uint64_t a2)
{
  sub_10013AE3C(a1, (uint64_t)&v5);
  sub_10013AE3C(a2, (uint64_t)v6);
  static BodyStructure.__derived_enum_equals(_:_:)();
  return v3 & 1;
}

uint64_t BodyStructure.underestimatedCount.getter()
{
  return BodyStructure.subpartCount.getter() + 1;
}

uint64_t BodyStructure.subpartCount.getter()
{
  uint64_t v1 = (__n128 *)v0;
  sub_10013AE3C(v0, (uint64_t)v9);
  int v2 = sub_10013AEAC((uint64_t)v9);
  char v3 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v9);
  if (v2 == 1) {
    return *(void *)(*(void *)v3 + 16);
  }
  memcpy(__dst, v3, sizeof(__dst));
  sub_100232248(__dst, &v11);
  sub_100232248(&v11, &v13);
  unint64_t v5 = v13;
  if (v13 >> 62 != 1) {
    return 0;
  }
  v13 &= 0x3FFFFFFFFFFFFFFFuLL;
  memcpy(v8, (const void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(v8));
  sub_10013AE3C((uint64_t)&v8[136], (uint64_t)v12);
  sub_100232214(v1);
  uint64_t v6 = sub_100223E88((uint64_t)v8);
  uint64_t v4 = BodyStructure.subpartCount.getter(v6);
  sub_100224004((uint64_t)v8);
  sub_100232214(v1);
  return v4;
}

uint64_t BodyStructure.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002307A8(a1, (uint64_t)v6);
  sub_1002322A4((uint64_t)v6, (uint64_t)v7);
  sub_100235170((uint64_t)v7);
  if (v3)
  {
    sub_1005E2C80(32);
    swift_bridgeObjectRelease();
    sub_100235120();
    swift_bridgeObjectRetain();
    v8._uint64_t countAndFlagsBits = sub_1005E1CC0();
    sub_1005E1E30(v8);
    swift_bridgeObjectRelease();
    uint64_t result = sub_100235100();
    __break(1u);
  }
  else
  {
    sub_10013AE3C((uint64_t)v7, (uint64_t)&v5);
    return sub_10013AE3C((uint64_t)&v5, a2);
  }
  return result;
}

uint64_t sub_1002307A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10013AE3C((uint64_t)v2, (uint64_t)v18);
  sub_10013AE3C((uint64_t)v18, (uint64_t)v22);
  if (*(void *)(a1 + 16))
  {
    sub_100231CB8(*(void *)(a1 + 32), (uint64_t)v16);
    sub_1002322A4((uint64_t)v16, (uint64_t)v15);
    sub_1002322A4((uint64_t)v16, (uint64_t)v19);
    if (sub_10013AE98((uint64_t)v19) == 1)
    {
      uint64_t v5 = v15;
    }
    else
    {
      sub_10013AE3C((uint64_t)v19, (uint64_t)v20);
      uint64_t v6 = sub_1001FB054(1, a1);
      uint64_t v8 = v7;
      uint64_t v10 = v9;
      unint64_t v12 = v11;
      swift_bridgeObjectRetain();
      sub_10022EC44(v6, v8, v10, v12);
      sub_1002307A8(v17);
      sub_1002322A4((uint64_t)v17, (uint64_t)v14);
      swift_bridgeObjectRelease();
      sub_100233F80(v16);
      uint64_t v5 = v14;
    }
  }
  else
  {
    sub_10013AE3C((uint64_t)v22, (uint64_t)v20);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v20);
    sub_100232214(v2);
    uint64_t v5 = v20;
  }
  sub_1002322A4((uint64_t)v5, (uint64_t)v21);
  return sub_1002322A4((uint64_t)v21, a2);
}

uint64_t BodyStructure.find(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1002307A8(a1, (uint64_t)v4);
  return sub_1002322A4((uint64_t)v4, a2);
}

uint64_t BodyStructure.endIndex.getter()
{
  sub_10000566C(&qword_10070FEB0);
  uint64_t v0 = sub_1002083DC();
  *(_OWORD *)(v0 + 16) = xmmword_1005F6670;
  *(void *)(v0 + 32) = BodyStructure.subpartCount.getter() + 1;
  return v0;
}

NIOIMAPCore2::SectionSpecifier::Part __swiftcall BodyStructure.index(before:)(NIOIMAPCore2::SectionSpecifier::Part before)
{
  uint64_t v2 = sub_10022EE8C((uint64_t)before.array._rawValue);
  if (v3)
  {
    sub_1005E2C80(32);
    swift_bridgeObjectRelease();
    sub_100235120();
    swift_bridgeObjectRetain();
    v18._uint64_t countAndFlagsBits = sub_1005E1CC0();
    sub_1005E1E30(v18);
    swift_bridgeObjectRelease();
    result.array._rawValue = (void *)sub_100235100();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_100230B4C(1, (uint64_t)before.array._rawValue);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    unint64_t v11 = v10;
    swift_bridgeObjectRetain();
    v12.array._rawValue = sub_10022EC44(v5, v7, v9, v11);
    if (v4 >= 2)
    {
      swift_bridgeObjectRetain();
      rawValue = v12.array._rawValue;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100232524();
        rawValue = v16;
      }
      unint64_t v14 = rawValue[2];
      if (v14 >= rawValue[3] >> 1)
      {
        sub_100232524();
        rawValue = v17;
      }
      rawValue[2] = v14 + 1;
      rawValue[v14 + 4] = v4 - 1;
      swift_bridgeObjectRelease();
      v12.array._rawValue = (void *)sub_100230CB0();
      swift_bridgeObjectRelease();
    }
    return v12;
  }
  return result;
}

uint64_t sub_100230B4C(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  NIOIMAPCore2::SectionSpecifier::Part result = sub_10022ED3C(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3);
  if (v4) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_100230BC0(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = result;
    NIOIMAPCore2::SectionSpecifier::Part result = sub_1005E1DC0();
    if (!__OFSUB__(result, v1))
    {
      sub_1005E1DF0();
      uint64_t v2 = sub_1005E1F50();
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100230CB0()
{
  sub_10023522C();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1002307A8(v1, (uint64_t)v9);
  sub_1002322A4((uint64_t)v9, (uint64_t)v10);
  sub_100235170((uint64_t)v10);
  if (!v2)
  {
    while (1)
    {
      sub_10013AE3C((uint64_t)v10, (uint64_t)v11);
      if (!BodyStructure.subpartCount.getter()) {
        break;
      }
      uint64_t v3 = BodyStructure.subpartCount.getter();
      swift_bridgeObjectRetain();
      uint64_t v4 = v0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100232524();
        uint64_t v4 = v6;
      }
      unint64_t v5 = *(void *)(v4 + 16);
      if (v5 >= *(void *)(v4 + 24) >> 1)
      {
        sub_100232524();
        uint64_t v4 = v7;
      }
      *(void *)(v4 + 16) = v5 + 1;
      *(void *)(v4 + 8 * v5 + 32) = v3;
      sub_100233F80(v9);
      swift_bridgeObjectRelease();
      sub_1002307A8(v4, (uint64_t)v9);
      sub_1002322A4((uint64_t)v9, (uint64_t)v10);
      uint64_t v0 = v4;
      if (sub_10013AE98((uint64_t)v10) == 1) {
        return v4;
      }
    }
    sub_100233F80(v9);
  }
  return v0;
}

NIOIMAPCore2::SectionSpecifier::Part __swiftcall BodyStructure.index(after:)(NIOIMAPCore2::SectionSpecifier::Part after)
{
  sub_1001FE5B4();
  sub_10023522C();
  sub_1002307A8(v2, (uint64_t)v16);
  sub_1002322A4((uint64_t)v16, (uint64_t)v20);
  sub_100235170((uint64_t)v20);
  if (v3)
  {
LABEL_23:
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_1005E2C80(32);
    swift_bridgeObjectRelease();
    sub_100235120();
    uint64_t v21 = v14;
    unint64_t v22 = v15;
    uint64_t v19 = v1;
    swift_bridgeObjectRetain();
    v23._uint64_t countAndFlagsBits = sub_1005E1CC0();
    sub_1005E1E30(v23);
    swift_bridgeObjectRelease();
    result.array._rawValue = (void *)sub_100235100();
    __break(1u);
    return result;
  }
  sub_10013AE3C((uint64_t)v20, (uint64_t)&v21);
  if (BodyStructure.subpartCount.getter())
  {
    SectionSpecifier.Part.appending(_:)(1);
    goto LABEL_20;
  }
  uint64_t v4 = v1[2];
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1005E3300();
    while (1)
    {
      uint64_t v5 = v4 - 1;
      uint64_t v6 = v1[v4 + 3];
      swift_unknownObjectRetain_n();
      uint64_t v7 = (void *)swift_dynamicCastClass();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = _swiftEmptyArrayStorage;
      }
      uint64_t v8 = v7[2];
      swift_release();
      if (v8 == v5) {
        break;
      }
      swift_bridgeObjectRelease();
      if (v4 == 1) {
        goto LABEL_11;
      }
      sub_10000566C(&qword_10070FEB0);
      uint64_t v9 = (void *)sub_100235060();
      size_t v11 = j__malloc_size(v9);
      v9[2] = v5;
      v9[3] = 2 * ((uint64_t)(v11 - 32) / 8);
      memcpy(v9 + 4, v1 + 4, 8 * v5);
LABEL_12:
      swift_bridgeObjectRelease();
      sub_1002307A8((uint64_t)v9, (uint64_t)v17);
      sub_1002322A4((uint64_t)v17, (uint64_t)v18);
      sub_100235170((uint64_t)v18);
      if (v3)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_10013AE3C((uint64_t)v18, (uint64_t)&v19);
      uint64_t v10 = BodyStructure.subpartCount.getter();
      sub_100233F80(v17);
      if (v6 < v10)
      {
        SectionSpecifier.Part.appending(_:)(v6 + 1);
        sub_100233F80(v16);
        swift_release();
        goto LABEL_21;
      }
      uint64_t v4 = v9[2];
      uint64_t v1 = v9;
      if (!v4)
      {
        swift_release();
        goto LABEL_19;
      }
    }
    uint64_t v9 = (void *)swift_dynamicCastClass();
    if (v9) {
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v9 = _swiftEmptyArrayStorage;
    goto LABEL_12;
  }
LABEL_19:
  sub_10000566C(&qword_10070FEB0);
  uint64_t v12 = sub_1002083DC();
  *(_OWORD *)(v12 + 16) = xmmword_1005F6670;
  *(void *)(v12 + 32) = BodyStructure.subpartCount.getter() + 1;
LABEL_20:
  sub_100233F80(v16);
LABEL_21:
  sub_1001FE57C();
  return result;
}

void *sub_100231120(void *rawValue, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a2 < 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      unint64_t v6 = rawValue[2];
      if (!v6)
      {
        sub_1005E2C80(32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v26._uint64_t countAndFlagsBits = sub_1005E1CC0();
        sub_1005E1E30(v26);
        swift_bridgeObjectRelease();
        NIOIMAPCore2::SectionSpecifier::Part result = (void *)sub_1005E2F20();
        __break(1u);
        return result;
      }
      unint64_t v7 = v6 - 1;
      uint64_t v8 = rawValue[v6 + 3];
      uint64_t v9 = v8 - 1;
      if (v8 > 1)
      {
        uint64_t v10 = sub_100230B4C(1, (uint64_t)rawValue);
        uint64_t v12 = v11;
        uint64_t v14 = v13;
        unint64_t v16 = v15;
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_10022EC44(v10, v12, v14, v16);
        swift_bridgeObjectRetain();
        Swift::String v18 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100232524();
          Swift::String v18 = v22;
        }
        unint64_t v19 = v18[2];
        if (v19 >= v18[3] >> 1)
        {
          sub_100232524();
          Swift::String v18 = v23;
        }
        void v18[2] = v19 + 1;
        v18[v19 + 4] = v9;
        swift_bridgeObjectRelease();
        v4.array._rawValue = (void *)sub_100230CB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      sub_1005E3300();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v20 = (void *)swift_dynamicCastClass();
      if (!v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = _swiftEmptyArrayStorage;
      }
      uint64_t v21 = v20[2];
      swift_release();
      if (v21 != v7) {
        break;
      }
      v4.array._rawValue = (void *)swift_dynamicCastClass();
      swift_bridgeObjectRelease_n();
      if (!v4.array._rawValue)
      {
        swift_bridgeObjectRelease();
LABEL_18:
        v4.array._rawValue = _swiftEmptyArrayStorage;
      }
LABEL_19:
      --v5;
      rawValue = v4.array._rawValue;
      if (v5 <= v2) {
        return v4.array._rawValue;
      }
    }
    swift_bridgeObjectRelease();
    if (v6 >= 2)
    {
      sub_10000566C(&qword_10070FEB0);
      v4.array._rawValue = (void *)swift_allocObject();
      size_t v24 = j__malloc_size(v4.array._rawValue);
      *((void *)v4.array._rawValue + 2) = v7;
      *((void *)v4.array._rawValue + 3) = 2 * ((uint64_t)(v24 - 32) / 8);
      memcpy((char *)v4.array._rawValue + 32, rawValue + 4, 8 * v7);
      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  if (!v2) {
    return rawValue;
  }
  do
  {
    v4.array._rawValue = BodyStructure.index(after:)((NIOIMAPCore2::SectionSpecifier::Part)rawValue).array._rawValue;
    swift_bridgeObjectRelease();
    rawValue = v4.array._rawValue;
    --v2;
  }
  while (v2);
  return v4.array._rawValue;
}

uint64_t sub_100231440@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100231ABC(a1, (uint64_t (*)(uint64_t))BodyStructure.index(before:), a2);
}

uint64_t sub_100231458(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100231B2C(a1, a2, a3, (uint64_t (*)(uint64_t))BodyStructure.index(before:));
}

uint64_t sub_100231470@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10013AE3C(v1, (uint64_t)v4);
  *a1 = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1002314B0@<X0>(uint64_t *a1@<X8>)
{
  sub_10013AE3C(v1, (uint64_t)v4);
  uint64_t result = BodyStructure.endIndex.getter();
  *a1 = result;
  return result;
}

void (*sub_1002314F0(void *a1, uint64_t *a2))(uint64_t a1)
{
  uint64_t v5 = malloc(0x221uLL);
  *a1 = v5;
  uint64_t v6 = (uint64_t)v5 + 184;
  uint64_t v7 = (uint64_t)v5 + 368;
  uint64_t v8 = *a2;
  sub_10013AE3C(v2, (uint64_t)v5);
  BodyStructure.subscript.getter(v8, v6);
  sub_10013AE3C(v6, v7);
  return sub_100231584;
}

void sub_100231584(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  sub_100232214((__n128 *)(*(void *)a1 + 184));
  free(v1);
}

uint64_t sub_1002315D4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  sub_10013AE3C(v2, (uint64_t)v7);
  return sub_100231628(v4, v5, a2);
}

uint64_t sub_100231628@<X0>(BOOL a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  sub_10000566C(&qword_10070FEB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  *(void *)(inited + 32) = BodyStructure.subpartCount.getter() + 1;
  uint64_t result = static SectionSpecifier.Part.< infix(_:_:)(inited, (uint64_t)_swiftEmptyArrayStorage);
  if (result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t result = static SectionSpecifier.Part.< infix(_:_:)(a1, (uint64_t)_swiftEmptyArrayStorage);
  if (result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = static SectionSpecifier.Part.< infix(_:_:)(inited, a2);
  if ((result & 1) == 0)
  {
    swift_setDeallocating();
    sub_10013AE3C((uint64_t)v3, (uint64_t)(a3 + 2));
    *a3 = a1;
    a3[1] = a2;
    sub_100232214(v3);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100231720@<X0>(uint64_t a1@<X8>)
{
  sub_10013AE3C(v1, (uint64_t)v4);
  return sub_10022EDF8(a1);
}

uint64_t sub_100231760()
{
  sub_10013AE3C(v0, (uint64_t)v2);
  return 0;
}

uint64_t sub_10023178C()
{
  sub_10013AE3C(v0, (uint64_t)v2);
  return sub_1001F9E0C();
}

void sub_1002317C4(void *a1@<X8>)
{
  *a1 = 1;
}

void *sub_1002317D0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  sub_10013AE3C(v3, (uint64_t)v8);
  uint64_t result = sub_100231120(v6, a2);
  *a3 = result;
  return result;
}

void *sub_100231828@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  sub_10013AE3C(v3, (uint64_t)v8);
  uint64_t result = sub_10022ED80(v6, a2);
  *a3 = result;
  return result;
}

void sub_100231890()
{
  sub_10013AE3C(v0, (uint64_t)v1);
  sub_1001F8A2C();
}

uint64_t sub_1002318E0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100231954(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002318F8);
}

BOOL sub_1002318F8(BOOL a1, uint64_t a2, uint64_t a3)
{
  BOOL result = static SectionSpecifier.Part.< infix(_:_:)(a1, a2);
  if (result)
  {
    __break(1u);
    goto LABEL_5;
  }
  BOOL result = static SectionSpecifier.Part.< infix(_:_:)(a1, a3);
  if (!result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_10023193C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100231954(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1002319B8);
}

uint64_t sub_100231954(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  sub_10013AE3C(v5, (uint64_t)v11);
  return a5(v7, v8, v9);
}

BOOL sub_1002319B8(uint64_t a1, uint64_t a2, BOOL a3)
{
  BOOL result = static SectionSpecifier.Part.< infix(_:_:)(a1, a2);
  if (result)
  {
    __break(1u);
    goto LABEL_5;
  }
  BOOL result = static SectionSpecifier.Part.< infix(_:_:)(a3, a1);
  if (result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

BOOL sub_1002319FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  sub_10013AE3C(v2, (uint64_t)v8);
  return sub_100231A5C(v3, v4, v5, v6);
}

BOOL sub_100231A5C(BOOL a1, uint64_t a2, uint64_t a3, BOOL a4)
{
  BOOL result = static SectionSpecifier.Part.< infix(_:_:)(a1, a3);
  if (result)
  {
    __break(1u);
    goto LABEL_5;
  }
  BOOL result = static SectionSpecifier.Part.< infix(_:_:)(a4, a2);
  if (result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_100231AA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100231ABC(a1, (uint64_t (*)(uint64_t))BodyStructure.index(after:), a2);
}

uint64_t sub_100231ABC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  sub_10013AE3C(v3, (uint64_t)v8);
  uint64_t result = a2(v6);
  *a3 = result;
  return result;
}

uint64_t sub_100231B14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100231B2C(a1, a2, a3, (uint64_t (*)(uint64_t))BodyStructure.index(after:));
}

uint64_t sub_100231B2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  sub_10013AE3C(v4, (uint64_t)v9);
  uint64_t v7 = a4(*a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v7;
  return result;
}

void *sub_100231B90@<X0>(void *a1@<X8>)
{
  sub_10013AE3C(v1, (uint64_t)v4);
  sub_10013AE3C((uint64_t)v4, (uint64_t)__src);
  __src[23] = _swiftEmptyArrayStorage;
  return memcpy(a1, __src, 0xC0uLL);
}

uint64_t sub_100231BEC()
{
  sub_10013AE3C(v0, (uint64_t)v2);
  return BodyStructure.underestimatedCount.getter();
}

uint64_t sub_100231C24()
{
  sub_10013AE3C(v0, (uint64_t)v2);
  return sub_10025FB04();
}

void sub_100231C5C()
{
  sub_10013AE3C(v0, (uint64_t)v1);
  sub_100231CB4();
}

uint64_t sub_100231CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = a1 - 1;
  if (a1 < 1) {
    goto LABEL_9;
  }
  uint64_t v5 = (__n128 *)v2;
  sub_10013AE3C(v2, (uint64_t)v20);
  int v7 = sub_10013AEAC((uint64_t)v20);
  uint64_t result = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v20);
  if (v7 != 1)
  {
    memcpy(__dst, (const void *)result, sizeof(__dst));
    sub_100232248(__dst, &v22);
    sub_100232248(&v22, &v24);
    unint64_t v10 = v24;
    if (v24 >> 62 == 1)
    {
      v24 &= 0x3FFFFFFFFFFFFFFFuLL;
      memcpy(v15, (const void *)((v10 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(v15));
      sub_10013AE3C((uint64_t)&v15[17], (uint64_t)v23);
      sub_100232214(v5);
      sub_100223E88((uint64_t)v15);
      sub_100231CB8(v17, a1);
      sub_1002322A4((uint64_t)v17, (uint64_t)v16);
      sub_1002322A4((uint64_t)v17, (uint64_t)v18);
      if (sub_10013AE98((uint64_t)v18) == 1)
      {
        sub_100232214((__n128 *)&v15[17]);
        sub_100224004((uint64_t)v15);
        sub_100232214(v5);
        uint64_t v11 = &v15[17];
      }
      else
      {
        sub_10013AE3C((uint64_t)v18, (uint64_t)v19);
        sub_100224004((uint64_t)v15);
        sub_100232214(v5);
        sub_1002322A4((uint64_t)v16, (uint64_t)v25);
        uint64_t v11 = v25;
      }
      sub_10013AE3C((uint64_t)v11, (uint64_t)v14);
      sub_10013AE3C((uint64_t)v14, (uint64_t)v13);
      UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v13);
      uint64_t v12 = v13;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  unint64_t v9 = *(void *)(*(void *)result + 16);
  if (v9 < a1)
  {
LABEL_9:
    sub_100234FB0(v15);
    goto LABEL_10;
  }
  if (v4 < v9)
  {
    sub_10013AE3C(*(void *)result + 184 * v4 + 32, (uint64_t)v23);
    sub_10013AE3C((uint64_t)v23, (uint64_t)v15);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v15);
    sub_100232214(v23);
LABEL_10:
    uint64_t v12 = v15;
LABEL_11:
    sub_1002322A4((uint64_t)v12, (uint64_t)v25);
    return sub_1002322A4((uint64_t)v25, a2);
  }
  __break(1u);
  return result;
}

uint64_t BodyStructure.enumerateParts(_:)(void (*a1)(uint64_t, unsigned char *), uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t result = ((uint64_t (*)(void *, uint64_t))a1)(_swiftEmptyArrayStorage, v4);
  if (!v3) {
    return sub_100231F7C((uint64_t)_swiftEmptyArrayStorage, a1, a2);
  }
  return result;
}

uint64_t sub_100231F7C(uint64_t a1, void (*a2)(uint64_t, unsigned char *), uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = BodyStructure.subpartCount.getter();
  if (result)
  {
    uint64_t v15 = BodyStructure.subpartCount.getter();
    if (v15)
    {
      uint64_t v10 = 0;
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100232524();
          uint64_t v11 = v13;
        }
        unint64_t v12 = *(void *)(v11 + 16);
        if (v12 >= *(void *)(v11 + 24) >> 1)
        {
          sub_100232524();
          uint64_t v11 = v14;
        }
        *(void *)(v11 + 16) = v12 + 1;
        *(void *)(v11 + 8 * v12 + 32) = v10 + 1;
        sub_10000566C(&qword_10070FEB0);
        uint64_t v4 = swift_allocObject();
        *(_OWORD *)(v4 + 16) = xmmword_1005F6670;
        *(void *)(v4 + 32) = v10 + 1;
        sub_1002307A8(v4, (uint64_t)v16);
        sub_1002322A4((uint64_t)v16, (uint64_t)v17);
        if (sub_10013AE98((uint64_t)v17) == 1) {
          break;
        }
        sub_10013AE3C((uint64_t)v17, (uint64_t)v18);
        swift_bridgeObjectRelease();
        a2(v11, v18);
        if (v5)
        {
          sub_100233F80(v16);
          return swift_bridgeObjectRelease();
        }
        sub_100231F7C(v11, a2, a3);
        uint64_t v5 = 0;
        sub_100233F80(v16);
        uint64_t result = swift_bridgeObjectRelease();
        if (v15 == ++v10) {
          return result;
        }
      }
    }
    else
    {
      __break(1u);
    }
    sub_1005E2C80(32);
    swift_bridgeObjectRelease();
    uint64_t v19 = v4;
    swift_bridgeObjectRetain();
    v20._uint64_t countAndFlagsBits = sub_1005E1CC0();
    sub_1005E1E30(v20);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1005E2F20();
    __break(1u);
  }
  return result;
}

uint64_t sub_100232214(__n128 *a1)
{
  __n128 v2 = sub_100235078(a1);
  v3(v2);
  return v1;
}

void *sub_100232248(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_1002322A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007105B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_10023230C(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[8 * a2] <= a3) {
    return (char *)sub_100235008(a3, result);
  }
  return result;
}

char *sub_10023232C(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[16 * a2] <= a3) {
    return (char *)sub_100235008(a3, result);
  }
  return result;
}

char *sub_10023234C(char *__src, size_t __len, char *__dst)
{
  if (__dst != __src || &__src[__len] <= __dst) {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_100232374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100232468(a1, a2, a3, (void (*)(void))type metadata accessor for ParameterValue);
}

uint64_t sub_10023238C()
{
  sub_10023524C();
  if (v3 && (uint64_t result = sub_10000566C(&qword_10070FE28), v1 + *(void *)(*(void *)(result - 8) + 72) * v0 > v2))
  {
    if (v2 != v1)
    {
      sub_1002350EC();
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  else
  {
    sub_10000566C(&qword_10070FE28);
    sub_1002350EC();
    return swift_arrayInitWithTakeFrontToBack();
  }
  return result;
}

char *sub_100232444(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[24 * a2] <= a3) {
    return (char *)sub_100235008(a3, result);
  }
  return result;
}

uint64_t sub_100232468(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_10023524C();
  if (v8
    && (uint64_t result = ((uint64_t (*)(void))a4)(0), v5 + *(void *)(*(void *)(result - 8) + 72) * v4 > v6))
  {
    if (v6 != v5)
    {
      sub_1002350EC();
      return swift_arrayInitWithTakeBackToFront();
    }
  }
  else
  {
    a4(0);
    sub_1002350EC();
    return swift_arrayInitWithTakeFrontToBack();
  }
  return result;
}

void sub_100232524()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235160();
  if (v2)
  {
    sub_10000566C(&qword_10070FEB0);
    int v7 = (void *)sub_100235060();
    size_t v8 = j__malloc_size(v7);
    sub_100235140(v8 - 32);
  }
  else
  {
    int v7 = _swiftEmptyArrayStorage;
  }
  unint64_t v9 = (char *)sub_1002351B8();
  if (v1)
  {
    if (v7 != v0 || &v10[8 * v3] <= v9) {
      memmove(v9, v10, 8 * v3);
    }
    v0[2] = 0;
  }
  else
  {
    memcpy(v9, v10, 8 * v3);
  }
  swift_bridgeObjectRelease();
}

void sub_1002325E8()
{
}

void sub_1002325F4()
{
}

void sub_100232600()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_1007107A0);
    int v7 = (void *)sub_100235060();
    sub_100235024(v7);
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  size_t v8 = (char *)sub_100235134();
  if (v1)
  {
    if (v3 != v0 || &v9[32 * v2] <= v8) {
      memmove(v8, v9, 32 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_1002326BC()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_100710778);
    int v7 = (void *)sub_100235060();
    sub_100235024(v7);
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  if (v1)
  {
    if (v3 != v0 || &v0[4 * v2 + 4] <= v3 + 4) {
      memmove(v3 + 4, v0 + 4, 32 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    sub_10000566C(&qword_100710780);
    sub_100235198();
  }
  swift_bridgeObjectRelease();
}

void sub_10023278C()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235160();
  if (v2)
  {
    sub_10000566C(&qword_100710798);
    int v7 = (void *)sub_100235060();
    size_t v8 = j__malloc_size(v7);
    sub_100235140(v8 - 32);
  }
  else
  {
    int v7 = _swiftEmptyArrayStorage;
  }
  unint64_t v9 = (char *)sub_1002351B8();
  if (v1)
  {
    if (v7 != v0 || &v10[2 * v3] <= v9) {
      memmove(v9, v10, 2 * v3);
    }
    v0[2] = 0;
  }
  else
  {
    memcpy(v9, v10, 2 * v3);
  }
  swift_bridgeObjectRelease();
}

void sub_100232850()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_100710790);
    int v7 = (void *)sub_100235060();
    sub_100235024(v7);
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  if (v1)
  {
    if (v3 != v0 || &v0[4 * v2 + 4] <= v3 + 4) {
      memmove(v3 + 4, v0 + 4, 32 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    sub_10000566C(&qword_10070FEE8);
    sub_100235198();
  }
  swift_bridgeObjectRelease();
}

void sub_100232920()
{
}

void sub_10023292C()
{
}

void sub_100232960()
{
}

void sub_100232974()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_100710668);
    int v7 = (void *)sub_100235060();
    size_t v8 = j__malloc_size(v7);
    sub_1002350CC(v8 - 32);
  }
  else
  {
    int v7 = _swiftEmptyArrayStorage;
  }
  unint64_t v9 = (char *)sub_100235134();
  if (v1)
  {
    if (v7 != v0 || &v10[16 * v2] <= v9) {
      memmove(v9, v10, 16 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_100232A40()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_1007106C8);
    int v7 = (void *)sub_100235060();
    size_t v8 = j__malloc_size(v7);
    sub_1002350CC(v8 - 32);
  }
  else
  {
    int v7 = _swiftEmptyArrayStorage;
  }
  if (v1)
  {
    if (v7 != v0 || &v0[v2 + 4] <= v7 + 4) {
      memmove(v7 + 4, v0 + 4, 8 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    sub_10000566C(&qword_1007106D0);
    sub_100235198();
  }
  swift_bridgeObjectRelease();
}

void sub_100232B20()
{
}

void sub_100232B34()
{
}

void sub_100232B40()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(v7);
    size_t v8 = (void *)swift_allocObject();
    size_t v9 = j__malloc_size(v8);
    void v8[2] = v2;
    _OWORD v8[3] = 2 * v9 - 64;
  }
  else
  {
    size_t v8 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = (char *)sub_100235134();
  if (v1)
  {
    if (v8 != v0 || &v11[v2] <= v10) {
      memmove(v10, v11, v2);
    }
    v0[2] = 0;
  }
  else
  {
    memcpy(v10, v11, v2);
  }
  swift_bridgeObjectRelease();
}

void sub_100232C04()
{
}

void sub_100232C10()
{
}

void sub_100232C24()
{
}

void sub_100232C58()
{
  sub_1001FE5B4();
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  if (v10)
  {
    sub_100234FF8();
    if (v12 != v13)
    {
      sub_100235018();
      if (v12)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  else
  {
    uint64_t v11 = v0;
  }
  uint64_t v14 = *(void *)(v7 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(v7 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (!v15)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_10000566C(v1);
  uint64_t v16 = *(void *)(v5(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size(v19);
  if (!v17)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v20 - v18 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_23;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_18:
  uint64_t v22 = *(void *)(v5(0) - 8);
  if (v9)
  {
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    sub_100232468(v7 + v23, v14, (uint64_t)v19 + v23, v3);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  sub_1001FE57C();
}

void sub_100232DFC()
{
}

void sub_100232E10()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_1007106D8);
    uint64_t v7 = (void *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    sub_100235204(v8);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  char v9 = (char *)sub_100235134();
  if (v1)
  {
    if (v7 != v0 || &v10[56 * v2] <= v9) {
      memmove(v9, v10, 56 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_100232EF0()
{
}

void sub_100232F04()
{
  sub_1002350DC();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235150();
  if (v3)
  {
    sub_10000566C(v7);
    size_t v8 = (void *)sub_100235060();
    size_t v9 = j__malloc_size(v8);
    sub_100235188(v9 - 32);
  }
  else
  {
    size_t v8 = _swiftEmptyArrayStorage;
  }
  char v10 = (char *)sub_1002351C4();
  if (v1)
  {
    if (v8 != v0 || &v11[8 * v2] <= v10) {
      memmove(v10, v11, 8 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    sub_1002351D0();
  }
  swift_bridgeObjectRelease();
}

void sub_100232FC8()
{
}

void sub_100232FDC()
{
}

void sub_100233010()
{
}

void sub_100233024()
{
}

void sub_100233038()
{
  sub_1002350DC();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235150();
  if (v3)
  {
    sub_10000566C(v7);
    size_t v8 = (void *)swift_allocObject();
    size_t v9 = j__malloc_size(v8);
    sub_100235188(v9 - 32);
  }
  else
  {
    size_t v8 = _swiftEmptyArrayStorage;
  }
  char v10 = (char *)sub_1002351C4();
  if (v1)
  {
    if (v8 != v0 || &v11[64 * v2] <= v10) {
      memmove(v10, v11, v2 << 6);
    }
    v0[2] = 0;
  }
  else
  {
    sub_1002351D0();
  }
  swift_bridgeObjectRelease();
}

void sub_100233104()
{
}

void sub_100233110()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235160();
  if (v2)
  {
    sub_10000566C(v7);
    size_t v8 = (void *)sub_100235060();
    size_t v9 = j__malloc_size(v8);
    sub_100235140(v9 - 32);
  }
  else
  {
    size_t v8 = _swiftEmptyArrayStorage;
  }
  char v10 = (char *)sub_1002351B8();
  if (v1)
  {
    if (v8 != v0 || &v11[4 * v3] <= v10) {
      memmove(v10, v11, 4 * v3);
    }
    v0[2] = 0;
  }
  else
  {
    memcpy(v10, v11, 4 * v3);
  }
  swift_bridgeObjectRelease();
}

void sub_1002331D0()
{
}

void sub_1002331E4()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235160();
  if (v2)
  {
    sub_10000566C(&qword_100710690);
    uint64_t v7 = (void *)sub_100235060();
    size_t v8 = j__malloc_size(v7);
    sub_100235140(v8 - 32);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  size_t v9 = (char *)sub_1002351B8();
  size_t v11 = 16 * v3;
  if (v1)
  {
    if (v7 != v0 || &v10[v11] <= v9) {
      memmove(v9, v10, v11);
    }
    v0[2] = 0;
  }
  else
  {
    memcpy(v9, v10, v11);
  }
  swift_bridgeObjectRelease();
}

void sub_1002332A4()
{
}

void sub_1002332B8()
{
}

void sub_1002332C4()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_100710648);
    uint64_t v7 = (void *)sub_100235060();
    size_t v8 = j__malloc_size(v7);
    sub_1002350CC(v8 - 32);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  size_t v9 = (char *)sub_100235134();
  if (v1)
  {
    if (v7 != v0 || &v10[16 * v2] <= v9) {
      memmove(v9, v10, 16 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_100233390()
{
}

void sub_1002333A4()
{
  sub_1002350DC();
  if (v4)
  {
    sub_100234FF8();
    if (v6 != v7)
    {
      sub_100235018();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  else
  {
    uint64_t v5 = v2;
  }
  uint64_t v8 = v0[2];
  if (v5 <= v8) {
    uint64_t v9 = v0[2];
  }
  else {
    uint64_t v9 = v5;
  }
  if (v9)
  {
    sub_10000566C(v3);
    char v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_100235218(v11);
  }
  else
  {
    char v10 = _swiftEmptyArrayStorage;
  }
  char v12 = (char *)sub_100235134();
  if (v1)
  {
    if (v10 != v0 || &v13[40 * v8] <= v12) {
      memmove(v12, v13, 40 * v8);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_100233480()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_100710678);
    char v7 = (void *)sub_100235060();
    sub_100235024(v7);
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = (char *)sub_100235134();
  if (v1)
  {
    if (v3 != v0 || &v9[32 * v2] <= v8) {
      memmove(v8, v9, 32 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_10023353C()
{
}

void sub_100233570()
{
}

void sub_10023357C()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235160();
  if (v2)
  {
    sub_10000566C(v7);
    uint64_t v8 = (void *)sub_100235060();
    size_t v9 = j__malloc_size(v8);
    sub_100235140(v9 - 32);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  char v10 = (char *)sub_1002351B8();
  if (v1)
  {
    if (v8 != v0 || &v11[8 * v3] <= v10) {
      memmove(v10, v11, 8 * v3);
    }
    v0[2] = 0;
  }
  else
  {
    memcpy(v10, v11, 8 * v3);
  }
  swift_bridgeObjectRelease();
}

void sub_10023363C()
{
}

void sub_100233670()
{
}

void sub_100233684()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_100710680);
    char v7 = (void *)sub_100235060();
    sub_100235024(v7);
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = (char *)sub_100235134();
  if (v1)
  {
    if (v3 != v0 || &v9[32 * v2] <= v8) {
      memmove(v8, v9, 32 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_100233740()
{
}

void sub_100233774()
{
}

void sub_100233788()
{
  sub_1002350DC();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235150();
  if (v3)
  {
    sub_10000566C(v7);
    uint64_t v8 = (void *)sub_100235060();
    size_t v9 = j__malloc_size(v8);
    sub_100235188(v9 - 32);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  char v10 = (char *)sub_1002351C4();
  if (v1)
  {
    if (v8 != v0 || &v11[16 * v2] <= v10) {
      memmove(v10, v11, 16 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    sub_1002351D0();
  }
  swift_bridgeObjectRelease();
}

void sub_10023384C()
{
}

void sub_100233880()
{
}

void sub_100233894()
{
  sub_1002350DC();
  if (v4)
  {
    sub_100234FF8();
    if (v6 != v7)
    {
      sub_100235018();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  else
  {
    uint64_t v5 = v2;
  }
  uint64_t v8 = v0[2];
  if (v5 <= v8) {
    uint64_t v9 = v0[2];
  }
  else {
    uint64_t v9 = v5;
  }
  if (v9)
  {
    sub_10000566C(v3);
    char v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_100235218(v11);
  }
  else
  {
    char v10 = _swiftEmptyArrayStorage;
  }
  char v12 = (char *)sub_100235134();
  if (v1)
  {
    if (v10 != v0 || &v13[24 * v8] <= v12) {
      memmove(v12, v13, 24 * v8);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_100233970()
{
}

void sub_100233984()
{
  sub_1002350DC();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235150();
  if (v3)
  {
    sub_10000566C(v7);
    uint64_t v8 = (void *)swift_allocObject();
    size_t v9 = j__malloc_size(v8);
    void v8[2] = v2;
    _OWORD v8[3] = 2 * ((uint64_t)(v9 - 32) / 24);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  char v10 = (char *)sub_1002351C4();
  if (v1)
  {
    if (v8 != v0 || &v11[24 * v2] <= v10) {
      memmove(v10, v11, 24 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    sub_1002351D0();
  }
  swift_bridgeObjectRelease();
}

void sub_100233A60()
{
}

void sub_100233A94()
{
  sub_1002350C0();
  if (v4)
  {
    sub_100234FF8();
    if (v5 != v6)
    {
      sub_100235018();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_100234FE8();
    }
  }
  sub_100235050();
  if (v3)
  {
    sub_10000566C(&qword_1007106E8);
    char v7 = (void *)swift_allocObject();
    size_t v8 = j__malloc_size(v7);
    sub_100235204(v8);
  }
  else
  {
    char v7 = _swiftEmptyArrayStorage;
  }
  size_t v9 = (char *)sub_100235134();
  if (v1)
  {
    if (v7 != v0 || &v10[24 * v2] <= v9) {
      memmove(v9, v10, 24 * v2);
    }
    v0[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
}

void sub_100233B74()
{
}

void sub_100233B88()
{
}

void sub_100233B9C()
{
  sub_1001FE5B4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_10013AE3C((uint64_t)v0, (uint64_t)v45);
  sub_10013AE3C((uint64_t)v45, (uint64_t)v48);
  if (!v4)
  {
    int v16 = sub_10013AE3C((uint64_t)v48, (uint64_t)v42);
    uint64_t v43 = _swiftEmptyArrayStorage;
    sub_1002351E8(v16, v17, v18, v19, v20, v21, v22, v23, v38, v39, v40[0], v40[1], v41, v42[0]);
    goto LABEL_9;
  }
  if (!v2)
  {
    rawValue = _swiftEmptyArrayStorage;
LABEL_8:
    int v24 = sub_10013AE3C((uint64_t)v48, (uint64_t)v42);
    uint64_t v43 = rawValue;
    sub_1002351E8(v24, v25, v26, v27, v28, v29, v30, v31, v38, v39, v40[0], v40[1], v41, v42[0]);
    goto LABEL_9;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    sub_10000566C(&qword_10070FEB0);
    uint64_t v5 = sub_1002083DC();
    *(_OWORD *)uint64_t v40 = xmmword_1005F6670;
    *(_OWORD *)(v5 + 16) = xmmword_1005F6670;
    *(void *)(v5 + 32) = BodyStructure.subpartCount.getter() + 1;
    rawValue = _swiftEmptyArrayStorage;
    char v7 = _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(_swiftEmptyArrayStorage, (void *)v5);
    swift_setDeallocating();
    swift_deallocClassInstance();
    if (v7)
    {
LABEL_5:
      int v8 = sub_10013AE3C((uint64_t)v48, (uint64_t)v42);
      uint64_t v43 = rawValue;
      sub_1002351E8(v8, v9, v10, v11, v12, v13, v14, v15, v38, v39, 1, 2, v41, v42[0]);
LABEL_9:
      sub_1001FE57C();
      return;
    }
    sub_1002307A8((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v44);
    sub_1002322A4((uint64_t)v44, (uint64_t)v46);
    sub_100235170((uint64_t)v46);
    if (!v32)
    {
      uint64_t v33 = 1;
      do
      {
        sub_10013AE3C((uint64_t)v46, (uint64_t)v47);
        sub_100232214(v0);
        rawValue = BodyStructure.index(after:)((NIOIMAPCore2::SectionSpecifier::Part)rawValue).array._rawValue;
        swift_bridgeObjectRelease();
        sub_100232214(v0);
        sub_10013AE3C((uint64_t)v47, v4);
        if (v2 == v33) {
          goto LABEL_8;
        }
        uint64_t v34 = sub_1002083DC();
        *(_OWORD *)(v34 + 16) = xmmword_1005F6670;
        *(void *)(v34 + 32) = BodyStructure.subpartCount.getter() + 1;
        char v35 = _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(rawValue, (void *)v34);
        swift_setDeallocating();
        swift_deallocClassInstance();
        if (v35) {
          goto LABEL_5;
        }
        ++v33;
        v4 += 184;
        sub_1002307A8((uint64_t)rawValue, (uint64_t)v44);
        sub_1002322A4((uint64_t)v44, (uint64_t)v46);
        sub_100235170((uint64_t)v46);
      }
      while (!v32);
    }
    sub_1005E2C80(32);
    swift_bridgeObjectRelease();
    sub_100235120();
    v42[0] = v37;
    v42[1] = v36;
    swift_bridgeObjectRetain();
    v49._uint64_t countAndFlagsBits = sub_1005E1CC0();
    sub_1005E1E30(v49);
    swift_bridgeObjectRelease();
    sub_100235100();
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100233E64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a2)
  {
    uint64_t v6 = 0;
    goto LABEL_13;
  }
  if (!a3) {
    goto LABEL_11;
  }
  if (a3 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = a4;
  if (!a4)
  {
LABEL_13:
    *(void *)uint64_t result = a4;
    *(void *)(result + 8) = a5;
    *(unsigned char *)(result + 16) = a6 & 1;
    *(void *)(result + 24) = v6;
    return v6;
  }
  if (a4 >= 1)
  {
    *(void *)a2 = a5;
    *(unsigned char *)(a2 + 8) = a6 & 1;
    if (a3 != 1)
    {
      char v7 = (unsigned char *)(a2 + 24);
      uint64_t v8 = 1;
      while (a3 != v8)
      {
        if (a4 == v8)
        {
          uint64_t v6 = a4;
          goto LABEL_13;
        }
        ++v8;
        *((void *)v7 - 1) = a5;
        *char v7 = a6 & 1;
        v7 += 16;
        if (a3 == v8) {
          goto LABEL_11;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
LABEL_11:
    uint64_t v6 = a3;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100233EFC(uint64_t result, unsigned char *a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a2)
  {
    uint64_t v5 = 0;
    goto LABEL_13;
  }
  if (!a3) {
    goto LABEL_11;
  }
  if (a3 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v5 = a4;
  if (!a4)
  {
LABEL_13:
    *(void *)uint64_t result = a4;
    *(unsigned char *)(result + 8) = a5;
    *(void *)(result + 16) = v5;
    return v5;
  }
  if (a4 >= 1)
  {
    *a2 = a5;
    if (a3 != 1)
    {
      uint64_t v6 = 1;
      while (a3 != v6)
      {
        if (a4 == v6)
        {
          uint64_t v5 = a4;
          goto LABEL_13;
        }
        a2[v6++] = a5;
        if (a3 == v6) {
          goto LABEL_11;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
LABEL_11:
    uint64_t v5 = a3;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100233F80(__n128 *a1)
{
  __n128 v2 = sub_100235078(a1);
  v3(v2);
  return v1;
}

unint64_t sub_100233FB8()
{
  unint64_t result = qword_1007105B8;
  if (!qword_1007105B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007105B8);
  }
  return result;
}

unint64_t sub_100234008()
{
  unint64_t result = qword_1007105C0;
  if (!qword_1007105C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007105C0);
  }
  return result;
}

unint64_t sub_100234058()
{
  unint64_t result = qword_1007105C8;
  if (!qword_1007105C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007105C8);
  }
  return result;
}

uint64_t sub_1002340A4()
{
  return sub_100234280(&qword_1007105D0, &qword_1007105D8, (void (*)(void))sub_1002340F4);
}

unint64_t sub_1002340F4()
{
  unint64_t result = qword_1007105E0;
  if (!qword_1007105E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007105E0);
  }
  return result;
}

uint64_t sub_100234140()
{
  return sub_100234280(&qword_1007105E8, &qword_1007105F0, (void (*)(void))sub_1002340F4);
}

unint64_t sub_100234194()
{
  unint64_t result = qword_1007105F8;
  if (!qword_1007105F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007105F8);
  }
  return result;
}

uint64_t sub_1002341E0()
{
  return sub_100234280(&qword_100710600, &qword_1007105D8, (void (*)(void))sub_100234058);
}

uint64_t sub_100234230()
{
  return sub_100234280(&qword_100710608, &qword_1007105F0, (void (*)(void))sub_100234058);
}

uint64_t sub_100234280(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002342F0()
{
  unint64_t result = qword_100710610;
  if (!qword_100710610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710610);
  }
  return result;
}

unint64_t sub_100234340()
{
  unint64_t result = qword_100710618;
  if (!qword_100710618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710618);
  }
  return result;
}

uint64_t sub_10023438C()
{
  return sub_100007494(&qword_100710620, &qword_1007105D8);
}

uint64_t sub_1002343C8()
{
  return sub_100007494(&qword_100710628, &qword_1007105F0);
}

uint64_t sub_100234404()
{
  return sub_100007494(&qword_100710630, &qword_100710638);
}

void *_s13BodyStructureOwcp(void *__dst, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 176);
  if (v3 > 1)
  {
    memcpy(__dst, a2, 0xB1uLL);
  }
  else
  {
    BOOL v27 = v3 != 0;
    uint64_t v4 = a2[4];
    uint64_t v5 = a2[5];
    uint64_t v6 = a2[6];
    uint64_t v7 = a2[7];
    uint64_t v14 = a2[9];
    uint64_t v15 = a2[10];
    uint64_t v16 = a2[11];
    uint64_t v17 = a2[12];
    uint64_t v18 = a2[13];
    uint64_t v19 = a2[14];
    uint64_t v20 = a2[15];
    uint64_t v21 = a2[16];
    uint64_t v22 = a2[17];
    uint64_t v23 = a2[18];
    uint64_t v24 = a2[19];
    uint64_t v25 = a2[20];
    uint64_t v26 = a2[21];
    uint64_t v8 = a2[8];
    uint64_t v9 = *a2;
    uint64_t v10 = a2[1];
    uint64_t v11 = a2[2];
    uint64_t v12 = a2[3];
    sub_100136870(*a2, v10, v11, v12, v4, v5, v6, v7, v8, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23,
      v24,
      v25,
      v26,
      v3 != 0);
    *__dst = v9;
    __dst[1] = v10;
    __dst[2] = v11;
    __dst[3] = v12;
    __dst[4] = v4;
    __dst[5] = v5;
    __dst[6] = v6;
    __dst[7] = v7;
    __dst[8] = v8;
    __dst[9] = v14;
    __dst[10] = v15;
    _OWORD __dst[11] = v16;
    __dst[12] = v17;
    __dst[13] = v18;
    __dst[14] = v19;
    __dst[15] = v20;
    __dst[16] = v21;
    __dst[17] = v22;
    __dst[18] = v23;
    __dst[19] = v24;
    __dst[20] = v25;
    __dst[21] = v26;
    *((unsigned char *)__dst + 176) = v27;
  }
  return __dst;
}

uint64_t *_s13BodyStructureOwca(uint64_t *__dst, uint64_t *__src)
{
  unsigned int v4 = *((unsigned __int8 *)__dst + 176);
  unsigned int v5 = *((unsigned __int8 *)__src + 176);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      BOOL v69 = v5 != 0;
      uint64_t v32 = __src[3];
      uint64_t v33 = __src[4];
      uint64_t v34 = __src[5];
      uint64_t v35 = __src[6];
      uint64_t v43 = __src[9];
      uint64_t v45 = __src[10];
      uint64_t v47 = __src[11];
      uint64_t v49 = __src[12];
      uint64_t v51 = __src[13];
      uint64_t v53 = __src[14];
      uint64_t v55 = __src[15];
      uint64_t v57 = __src[16];
      uint64_t v59 = __src[17];
      uint64_t v61 = __src[18];
      uint64_t v63 = __src[19];
      uint64_t v65 = __src[20];
      uint64_t v67 = __src[21];
      uint64_t v36 = __src[8];
      uint64_t v37 = *__src;
      uint64_t v38 = __src[1];
      uint64_t v39 = __src[2];
      uint64_t v40 = __src[7];
      sub_100136870(*__src, v38, v39, v32, v33, v34, v35, v40, v36, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61,
        v63,
        v65,
        v67,
        v5 != 0);
      *__dst = v37;
      __dst[1] = v38;
      __dst[2] = v39;
      __dst[3] = v32;
      __dst[4] = v33;
      __dst[5] = v34;
      __dst[6] = v35;
      __dst[7] = v40;
      __dst[8] = v36;
      __dst[9] = v43;
      __dst[10] = v45;
      _OWORD __dst[11] = v47;
      __dst[12] = v49;
      __dst[13] = v51;
      __dst[14] = v53;
      __dst[15] = v55;
      __dst[16] = v57;
      __dst[17] = v59;
      __dst[18] = v61;
      __dst[19] = v63;
      __dst[20] = v65;
      __dst[21] = v67;
      *((unsigned char *)__dst + 176) = v69;
      return __dst;
    }
LABEL_7:
    memcpy(__dst, __src, 0xB1uLL);
    return __dst;
  }
  if (v5 > 1)
  {
    sub_100061440(*__dst, __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9], __dst[10], __dst[11], __dst[12], __dst[13], __dst[14], __dst[15], __dst[16], __dst[17], __dst[18],
      __dst[19],
      __dst[20],
      __dst[21],
      v4 & 1);
    goto LABEL_7;
  }
  BOOL v68 = v5 != 0;
  uint64_t v6 = *__src;
  uint64_t v7 = __src[1];
  uint64_t v8 = __src[2];
  uint64_t v9 = __src[3];
  uint64_t v10 = __src[4];
  uint64_t v11 = __src[5];
  uint64_t v12 = __src[6];
  uint64_t v13 = __src[7];
  uint64_t v42 = __src[9];
  uint64_t v44 = __src[10];
  uint64_t v46 = __src[11];
  uint64_t v48 = __src[12];
  uint64_t v50 = __src[13];
  uint64_t v52 = __src[14];
  uint64_t v54 = __src[15];
  uint64_t v56 = __src[16];
  uint64_t v58 = __src[17];
  uint64_t v60 = __src[18];
  uint64_t v62 = __src[19];
  uint64_t v64 = __src[20];
  uint64_t v66 = __src[21];
  uint64_t v14 = __src[8];
  sub_100136870(*__src, v7, v8, v9, v10, v11, v12, v13, v14, v42, v44, v46, v48, v50, v52, v54, v56, v58, v60,
    v62,
    v64,
    v66,
    v5 != 0);
  uint64_t v15 = *__dst;
  uint64_t v16 = __dst[1];
  *__dst = v6;
  __dst[1] = v7;
  uint64_t v17 = __dst[2];
  uint64_t v18 = __dst[3];
  __dst[2] = v8;
  __dst[3] = v9;
  uint64_t v19 = __dst[4];
  uint64_t v20 = __dst[5];
  __dst[4] = v10;
  __dst[5] = v11;
  uint64_t v21 = __dst[6];
  uint64_t v22 = __dst[7];
  __dst[6] = v12;
  __dst[7] = v13;
  long long v23 = *((_OWORD *)__dst + 4);
  long long v24 = *((_OWORD *)__dst + 5);
  __dst[8] = v14;
  __dst[9] = v42;
  __dst[10] = v44;
  _OWORD __dst[11] = v46;
  long long v25 = *((_OWORD *)__dst + 6);
  long long v26 = *((_OWORD *)__dst + 7);
  __dst[12] = v48;
  __dst[13] = v50;
  __dst[14] = v52;
  __dst[15] = v54;
  long long v27 = *((_OWORD *)__dst + 8);
  long long v28 = *((_OWORD *)__dst + 9);
  __dst[16] = v56;
  __dst[17] = v58;
  __dst[18] = v60;
  __dst[19] = v62;
  uint64_t v29 = __dst[20];
  uint64_t v30 = __dst[21];
  __dst[20] = v64;
  __dst[21] = v66;
  char v31 = *((unsigned char *)__dst + 176);
  *((unsigned char *)__dst + 176) = v68;
  sub_100061440(v15, v16, v17, v18, v19, v20, v21, v22, v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30,
    v31);
  return __dst;
}

void *initializeWithTake for BodyStructure(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB1uLL);
}

uint64_t *_s13BodyStructureOwta(uint64_t *__dst, unsigned __int8 *__src)
{
  unsigned int v4 = *((unsigned __int8 *)__dst + 176);
  if (v4 > 1) {
    goto LABEL_5;
  }
  unsigned int v5 = __src[176];
  if (v5 > 1)
  {
    sub_100061440(*__dst, __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9], __dst[10], __dst[11], __dst[12], __dst[13], __dst[14], __dst[15], __dst[16], __dst[17], __dst[18],
      __dst[19],
      __dst[20],
      __dst[21],
      v4 & 1);
LABEL_5:
    memcpy(__dst, __src, 0xB1uLL);
    return __dst;
  }
  uint64_t v6 = *__dst;
  uint64_t v7 = __dst[1];
  uint64_t v8 = __dst[2];
  uint64_t v9 = __dst[3];
  uint64_t v10 = __dst[4];
  uint64_t v11 = __dst[5];
  uint64_t v12 = __dst[6];
  uint64_t v13 = __dst[7];
  long long v14 = *((_OWORD *)__dst + 4);
  long long v15 = *((_OWORD *)__dst + 5);
  long long v16 = *((_OWORD *)__dst + 6);
  long long v17 = *((_OWORD *)__dst + 7);
  long long v18 = *((_OWORD *)__dst + 8);
  long long v19 = *((_OWORD *)__dst + 9);
  uint64_t v20 = __dst[20];
  uint64_t v21 = __dst[21];
  long long v22 = *((_OWORD *)__src + 1);
  *(_OWORD *)__dst = *(_OWORD *)__src;
  *((_OWORD *)__dst + 1) = v22;
  long long v23 = *((_OWORD *)__src + 3);
  *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
  *((_OWORD *)__dst + 3) = v23;
  long long v24 = *((_OWORD *)__src + 5);
  *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
  *((_OWORD *)__dst + 5) = v24;
  long long v25 = *((_OWORD *)__src + 7);
  *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
  *((_OWORD *)__dst + 7) = v25;
  long long v26 = *((_OWORD *)__src + 9);
  *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
  *((_OWORD *)__dst + 9) = v26;
  *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
  *((unsigned char *)__dst + 176) = v5 != 0;
  sub_100061440(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    v4 & 1);
  return __dst;
}

uint64_t _s13BodyStructureOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 177)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 1) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 + 1 >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

void _s13BodyStructureOwst(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    unsigned int v5 = a2 - 254;
    bzero(a1, 0xB1uLL);
    *a1 = v5;
    if (a3 >= 0xFE) {
      *((unsigned char *)a1 + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *((unsigned char *)a1 + 177) = 0;
    }
    if (a2) {
      *((unsigned char *)a1 + 176) = ~(_BYTE)a2;
    }
  }
}

double sub_100234A8C(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(void *)(a1 + 168) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 176) = 0;
    *(void *)a1 = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(a1 + 176) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageAttribute.BodyStructure()
{
  return &type metadata for MessageAttribute.BodyStructure;
}

void destroy for BodyStructure(uint64_t a1)
{
  sub_100061440(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
}

uint64_t initializeWithCopy for BodyStructure(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v25 = *(void *)(a2 + 168);
  char v26 = *(unsigned char *)(a2 + 176);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  sub_100136870(*(void *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 160) = v24;
  *(void *)(a1 + 168) = v25;
  *(unsigned char *)(a1 + 176) = v26;
  return a1;
}

uint64_t assignWithCopy for BodyStructure(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v30 = *(void *)(a2 + 72);
  uint64_t v31 = *(void *)(a2 + 80);
  uint64_t v32 = *(void *)(a2 + 88);
  uint64_t v33 = *(void *)(a2 + 96);
  uint64_t v34 = *(void *)(a2 + 104);
  uint64_t v35 = *(void *)(a2 + 112);
  uint64_t v36 = *(void *)(a2 + 120);
  uint64_t v37 = *(void *)(a2 + 128);
  uint64_t v38 = *(void *)(a2 + 136);
  uint64_t v39 = *(void *)(a2 + 144);
  uint64_t v40 = *(void *)(a2 + 152);
  uint64_t v41 = *(void *)(a2 + 160);
  uint64_t v42 = *(void *)(a2 + 168);
  char v43 = *(unsigned char *)(a2 + 176);
  sub_100136870(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v30;
  *(void *)(a1 + 80) = v31;
  *(void *)(a1 + 88) = v32;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v33;
  *(void *)(a1 + 104) = v34;
  *(void *)(a1 + 112) = v35;
  *(void *)(a1 + 120) = v36;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v37;
  *(void *)(a1 + 136) = v38;
  *(void *)(a1 + 144) = v39;
  *(void *)(a1 + 152) = v40;
  uint64_t v26 = *(void *)(a1 + 160);
  uint64_t v27 = *(void *)(a1 + 168);
  *(void *)(a1 + 160) = v41;
  *(void *)(a1 + 168) = v42;
  char v28 = *(unsigned char *)(a1 + 176);
  *(unsigned char *)(a1 + 176) = v43;
  sub_100061440(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

uint64_t assignWithTake for BodyStructure(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 176);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v19 = *(void *)(a1 + 168);
  char v20 = *(unsigned char *)(a1 + 176);
  long long v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  long long v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  long long v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  long long v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  long long v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = v3;
  sub_100061440(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19,
    v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for BodyStructure(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 177))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 176);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BodyStructure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 177) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 176) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100234F94(uint64_t result, char a2)
{
  *(unsigned char *)(result + 176) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure()
{
  return &type metadata for BodyStructure;
}

void sub_100234FB0(unsigned char *a1)
{
  a1[176] = -1;
}

void *sub_100235008@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

size_t sub_100235024(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / 32);
  return result;
}

uint64_t sub_100235060()
{
  return swift_allocObject();
}

__n128 sub_100235078(__n128 *a1)
{
  return a1[4];
}

void sub_1002350CC(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_1002350EC()
{
  return v0;
}

uint64_t sub_100235100()
{
  return sub_1005E2F20();
}

uint64_t sub_100235134()
{
  return v0 + 32;
}

void sub_100235140(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = 2 * (a1 / v1);
}

uint64_t sub_100235170(uint64_t a1)
{
  return sub_10013AE98(a1);
}

void sub_100235188(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_100235198()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1002351B8()
{
  return v0 + 32;
}

uint64_t sub_1002351C4()
{
  return v0 + 32;
}

uint64_t sub_1002351D0()
{
  return swift_arrayInitWithCopy();
}

void *sub_1002351E8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char __src)
{
  return memcpy(v14, &__src, 0xC0uLL);
}

uint64_t sub_100235204(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_100235218(uint64_t result)
{
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = 2 * ((result - 32) / v3);
  return result;
}

void BodyExtension.hash(into:)(uint64_t a1, Swift::UInt a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x100000000000000) != 0)
  {
    sub_1005E3410(1uLL);
    sub_1005E3410(a2);
  }
  else
  {
    sub_1005E3410(0);
    if (a2)
    {
      sub_1005E3420(1u);
      swift_beginAccess();
      sub_1005E3400();
    }
    else
    {
      sub_1005E3420(0);
    }
  }
}

BOOL static BodyExtension.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a3 & 0x100000000000000) != 0) {
    return HIBYTE(a6) & (a1 == a4);
  }
  if ((a6 & 0x100000000000000) != 0) {
    return 0;
  }
  if (a1)
  {
    if (a4)
    {
      sub_100235850();
      BOOL v12 = static ByteBuffer.== infix(_:_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, a4, a5, a6 & 0xFFFFFFFFFFFFFFLL);
      sub_10022C15C(a4, a5, a6, 0);
      sub_10022C15C(a1, a2, a3, 0);
      return v12;
    }
LABEL_9:
    sub_100235850();
    swift_release();
    swift_release();
    return 0;
  }
  if (a4) {
    goto LABEL_9;
  }
  return 1;
}

Swift::Int BodyExtension.hashValue.getter(Swift::UInt a1, uint64_t a2, unint64_t a3)
{
  sub_1005E33F0();
  BodyExtension.hash(into:)((uint64_t)v7, a1, a2, a3 & 0xFFFFFFFFFFFFFFLL | ((HIBYTE(a3) & 1) << 56));
  return sub_1005E3470();
}

Swift::Int sub_100235458()
{
  return BodyExtension.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned int *)(v0 + 16) | ((unint64_t)(*(unsigned __int16 *)(v0 + 20) | (*(unsigned __int8 *)(v0 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 23) << 56));
}

void sub_10023548C(uint64_t a1)
{
  BodyExtension.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)(*(unsigned __int16 *)(v1 + 20) | (*(unsigned __int8 *)(v1 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 23) << 56));
}

Swift::Int sub_1002354C0()
{
  Swift::UInt v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = *(unsigned int *)(v0 + 16) | ((unint64_t)(*(unsigned __int16 *)(v0 + 20) | (*(unsigned __int8 *)(v0 + 22) << 16)) << 32);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 23);
  sub_1005E33F0();
  BodyExtension.hash(into:)((uint64_t)v6, v1, v2, v3 | ((unint64_t)v4 << 56));
  return sub_1005E3470();
}

unint64_t sub_100235538()
{
  unint64_t result = qword_1007107B0;
  if (!qword_1007107B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007107B0);
  }
  return result;
}

BOOL sub_100235584(uint64_t a1, uint64_t a2)
{
  return static BodyExtension.__derived_enum_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 23) << 56), *(void *)a2, *(void *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)(*(unsigned __int16 *)(a2 + 20) | (*(unsigned __int8 *)(a2 + 22) << 16)) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 23) << 56));
}

uint64_t destroy for BodyExtension(uint64_t a1)
{
  return sub_10022C15C(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(unsigned char *)(a1 + 23));
}

uint64_t _s12NIOIMAPCore213BodyExtensionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 23);
  int v7 = *(unsigned __int8 *)(a2 + 22);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_100223C54(*(void *)a2, v4, v5 | (v8 << 32), v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 23) = v6;
  return a1;
}

uint64_t assignWithCopy for BodyExtension(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 23);
  int v7 = *(unsigned __int8 *)(a2 + 22);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_100223C54(*(void *)a2, v4, v5 | (v8 << 32), v6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  char v12 = *(unsigned char *)(a1 + 23);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(unsigned char *)(a1 + 23) = v6;
  sub_10022C15C(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for BodyExtension(uint64_t a1, long long *a2)
{
  char v3 = *((unsigned char *)a2 + 23);
  long long v4 = *a2;
  int v7 = *((_DWORD *)a2 + 4);
  uint64_t v5 = a2 + 1;
  int v6 = v7;
  LOWORD(v7) = *((_WORD *)v5 + 2);
  char v8 = *((unsigned char *)v5 + 6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  char v12 = *(unsigned char *)(a1 + 23);
  *(_OWORD *)a1 = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 20) = v7;
  *(unsigned char *)(a1 + 22) = v8;
  *(unsigned char *)(a1 + 23) = v3;
  sub_10022C15C(v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionValueComp(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 23);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionValueComp(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 23) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10023582C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 23);
}

uint64_t sub_100235834(uint64_t result, char a2)
{
  *(unsigned char *)(result + 23) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BodyExtension()
{
  return &type metadata for BodyExtension;
}

uint64_t sub_100235850()
{
  sub_100223C54(v1, v5, v4, 0);
  return sub_100223C54(v0, v3, v2, 0);
}

uint64_t sub_100235894()
{
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100235908()
{
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100235A4C()
{
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

void sub_100235AB0(uint64_t a1, Swift::UInt32 a2)
{
}

uint64_t sub_100235AD0()
{
  uint64_t result = sub_1005E1CB0();
  static BodyStructure.DispositionKind.inline = result;
  unk_1007618F0 = v1;
  return result;
}

uint64_t *BodyStructure.DispositionKind.inline.unsafeMutableAddressor()
{
  if (qword_10070FB50 != -1) {
    swift_once();
  }
  return &static BodyStructure.DispositionKind.inline;
}

uint64_t static BodyStructure.DispositionKind.inline.getter()
{
  return sub_100235C2C(&qword_10070FB50);
}

uint64_t sub_100235B7C()
{
  uint64_t result = sub_1005E1CB0();
  static BodyStructure.DispositionKind.attachment = result;
  unk_100761900 = v1;
  return result;
}

uint64_t *BodyStructure.DispositionKind.attachment.unsafeMutableAddressor()
{
  if (qword_10070FB58 != -1) {
    swift_once();
  }
  return &static BodyStructure.DispositionKind.attachment;
}

uint64_t static BodyStructure.DispositionKind.attachment.getter()
{
  return sub_100235C2C(&qword_10070FB58);
}

uint64_t sub_100235C2C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  return sub_10022C948();
}

uint64_t Media.TopLevelType.debugDescription.getter()
{
  return sub_10022C948();
}

Swift::Int sub_100235CAC()
{
  return sub_1002AB69C();
}

uint64_t sub_100235CB4@<X0>(Swift::String *a1@<X0>, NIOIMAPCore2::AttributeFlag *a2@<X8>)
{
  NIOIMAPCore2::AttributeFlag v4 = BodyStructure.DispositionKind.init(rawValue:)(*a1);
  uint64_t result = v4.stringValue._countAndFlagsBits;
  *a2 = v4;
  return result;
}

uint64_t sub_100235CE4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t BodyStructure.Disposition.parameters.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t BodyStructure.Disposition.parameters.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return result;
}

uint64_t BodyStructure.Disposition.init(kind:parameters:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t BodyStructure.Disposition.size.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v32 = v1;
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  long long v33 = *(_OWORD *)(v0 + 16);
  sub_10001FDF0((uint64_t)&v33, (uint64_t)v35, &qword_1007104A8);
  uint64_t v34 = *((void *)&v33 + 1);
  uint64_t v2 = *(void *)(*((void *)&v33 + 1) + 16);
  sub_1000811BC((uint64_t)v35);
  sub_1000811BC((uint64_t)&v34);
  sub_1000811BC((uint64_t)&v32);
  sub_1000811BC((uint64_t)v35);
  sub_1000811BC((uint64_t)&v34);
  sub_1000811BC((uint64_t)&v32);
  uint64_t v3 = (unint64_t *)(v1 + 40);
  while (1)
  {
    if (!v2)
    {
      __break(1u);
      goto LABEL_70;
    }
    uint64_t v5 = *(v3 - 1);
    unint64_t v4 = *v3;
    BOOL v7 = sub_1005E1CB0() == 1702521203 && v6 == 0xE400000000000000;
    if (v7) {
      break;
    }
    char v8 = sub_1005E3290();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1002372B8();
    if (v7)
    {
      sub_1000811E8((uint64_t)v35);
      sub_1000811E8((uint64_t)&v34);
      sub_1000811E8((uint64_t)&v32);
      sub_1000811E8((uint64_t)v35);
      sub_1000811E8((uint64_t)&v34);
      sub_1000811E8((uint64_t)&v32);
      return 0;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_14:
  sub_1000811E8((uint64_t)v35);
  sub_1000811E8((uint64_t)&v34);
  sub_1000811E8((uint64_t)&v32);
  sub_1000811E8((uint64_t)v35);
  sub_1000811E8((uint64_t)&v34);
  sub_1000811E8((uint64_t)&v32);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v10 = HIBYTE(v4) & 0xF;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v12 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v12 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
LABEL_70:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    uint64_t v14 = sub_1002368E8(v5, v4, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100236C44);
    LOBYTE(v5) = v31;
    goto LABEL_59;
  }
  if ((v4 & 0x2000000000000000) != 0)
  {
    if (v5 == 43)
    {
      if (!v10) {
        goto LABEL_74;
      }
      if (v10 == 1) {
        goto LABEL_45;
      }
      sub_100237288();
      if (!v7 & v18) {
        goto LABEL_45;
      }
      uint64_t v14 = v20;
      if (v19 != 2)
      {
        sub_100237288();
        if (!v7 & v18) {
          goto LABEL_45;
        }
        uint64_t v14 = 10 * v14 + v22;
        if (v21 != 3)
        {
          while (1)
          {
            sub_100237298();
            if (!v7 & v18) {
              goto LABEL_45;
            }
            sub_100237274();
            if (!v7) {
              goto LABEL_45;
            }
            uint64_t v14 = v24 + v23;
            if (__OFADD__(v24, v23)) {
              goto LABEL_45;
            }
            sub_1002372A8();
            if (v7) {
              goto LABEL_59;
            }
          }
        }
      }
    }
    else
    {
      if (v5 == 45)
      {
        if (v10)
        {
          if (v10 != 1)
          {
            sub_100237288();
            if (!(!v7 & v18))
            {
              if (v16 == 2)
              {
                LOBYTE(v5) = 0;
                uint64_t v14 = -(uint64_t)v17;
                goto LABEL_59;
              }
              if ((BYTE2(v5) - 48) <= 9u)
              {
                uint64_t v14 = -10 * v17 - (BYTE2(v5) - 48);
                if (v16 == 3) {
                  goto LABEL_58;
                }
                while (1)
                {
                  sub_100237298();
                  if (!v7 & v18) {
                    break;
                  }
                  sub_100237274();
                  if (!v7) {
                    break;
                  }
                  uint64_t v14 = v30 - v29;
                  if (__OFSUB__(v30, v29)) {
                    break;
                  }
                  sub_1002372A8();
                  if (v7) {
                    goto LABEL_59;
                  }
                }
              }
            }
          }
LABEL_45:
          uint64_t v14 = 0;
          LOBYTE(v5) = 1;
          goto LABEL_59;
        }
        __break(1u);
LABEL_74:
        __break(1u);
        return result;
      }
      if (!v10 || (v5 - 48) > 9u) {
        goto LABEL_45;
      }
      uint64_t v14 = (v5 - 48);
      if (v10 != 1)
      {
        sub_100237288();
        if (!v7 & v18) {
          goto LABEL_45;
        }
        uint64_t v14 = 10 * (v5 - 48) + v26;
        if (v25 != 2)
        {
          while (1)
          {
            sub_100237298();
            if (!v7 & v18) {
              goto LABEL_45;
            }
            sub_100237274();
            if (!v7) {
              goto LABEL_45;
            }
            uint64_t v14 = v28 + v27;
            if (__OFADD__(v28, v27)) {
              goto LABEL_45;
            }
            sub_1002372A8();
            if (v7) {
              goto LABEL_59;
            }
          }
        }
      }
    }
LABEL_58:
    LOBYTE(v5) = 0;
    goto LABEL_59;
  }
  if ((v5 & 0x1000000000000000) != 0) {
    long long v13 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    long long v13 = (unsigned __int8 *)sub_1005E2D30();
  }
  uint64_t v14 = (uint64_t)sub_100236C44(v13, v11);
  LOBYTE(v5) = v15 & 1;
LABEL_59:
  swift_bridgeObjectRelease();
  if (v5) {
    return 0;
  }
  else {
    return v14;
  }
}

void BodyStructure.Disposition.filename.getter()
{
  uint64_t v5 = *(void *)(v0 + 32);
  if (*(void *)(v5 + 16))
  {
    long long v6 = *(_OWORD *)(v0 + 16);
    sub_10001FDF0((uint64_t)&v6, (uint64_t)v8, &qword_1007104A8);
    uint64_t v7 = *((void *)&v6 + 1);
    uint64_t v1 = *(void *)(*((void *)&v6 + 1) + 16);
    sub_1000811BC((uint64_t)v8);
    sub_1000811BC((uint64_t)&v7);
    sub_1000811BC((uint64_t)&v5);
    sub_1000811BC((uint64_t)v8);
    sub_1000811BC((uint64_t)&v7);
    sub_1000811BC((uint64_t)&v5);
    while (v1)
    {
      BOOL v3 = sub_1005E1CB0() == 0x656D616E656C6966 && v2 == 0xE800000000000000;
      if (v3)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_14:
        sub_1000811E8((uint64_t)v8);
        sub_1000811E8((uint64_t)&v7);
        sub_1000811E8((uint64_t)&v5);
        sub_1000811E8((uint64_t)v8);
        sub_1000811E8((uint64_t)&v7);
        sub_1000811E8((uint64_t)&v5);
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      char v4 = sub_1005E3290();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1002372B8();
      if (v3)
      {
        sub_1000811E8((uint64_t)v8);
        sub_1000811E8((uint64_t)&v7);
        sub_1000811E8((uint64_t)&v5);
        sub_1000811E8((uint64_t)v8);
        sub_1000811E8((uint64_t)&v7);
        sub_1000811E8((uint64_t)&v5);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_10022C948();
  }
}

uint64_t BodyStructure.Disposition.hash(into:)()
{
  long long v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  sub_10002A77C((uint64_t)&v2);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100225EFC();
  swift_release();
  swift_release();
  return swift_release();
}

BOOL static BodyStructure.Disposition.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (char v3 = sub_1005E3290(), result = 0, (v3 & 1) != 0))
  {
    sub_100221B3C();
    BOOL result = 0;
    if (v5)
    {
      sub_10022C948();
      if (sub_100222314()) {
        return 1;
      }
    }
  }
  return result;
}

Swift::Int BodyStructure.Disposition.hashValue.getter()
{
  sub_1005E33F0();
  long long v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  sub_10002A77C((uint64_t)&v2);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100225EFC();
  swift_release();
  swift_release();
  swift_release();
  return sub_1005E3470();
}

Swift::Int sub_100236560()
{
  return sub_1005E3470();
}

void sub_100236618(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10001FDF0(a1, (uint64_t)v41, &qword_1007107D8);
  sub_10001FDF0(a1, (uint64_t)&v42, &qword_1007107D8);
  if (!*((void *)&v42 + 1)) {
    goto LABEL_17;
  }
  long long v46 = v42;
  uint64_t v4 = v43;
  uint64_t v5 = v44;
  uint64_t v6 = v45;
  Swift::Int v7 = *(unsigned int *)(v1 + 20);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100210AD0(40, 0xE100000000000000, v1 + 8, v7);
  if (v9)
  {
    v10._uint64_t countAndFlagsBits = 40;
    v10._object = (void *)0xE100000000000000;
    Swift::Int v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v7);
  }
  Swift::Int v11 = v8;
  int v12 = *(_DWORD *)(v1 + 20);
  BOOL v13 = __CFADD__(v12, v8);
  int v14 = v12 + v8;
  if (v13)
  {
    __break(1u);
    goto LABEL_23;
  }
  *(_DWORD *)(v1 + 20) = v14;
  long long v47 = v46;
  long long v15 = v46;
  swift_bridgeObjectRetain();
  Swift::Int v16 = sub_10025DCBC(v15, *((unint64_t *)&v15 + 1));
  sub_10002A77C((uint64_t)&v47);
  Swift::Int v17 = v11 + v16;
  if (__OFADD__(v11, v16))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  Swift::Int v18 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if (v20)
  {
    v21._uint64_t countAndFlagsBits = 32;
    v21._object = (void *)0xE100000000000000;
    Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v21, v18);
  }
  int v22 = *(_DWORD *)(v2 + 20);
  BOOL v13 = __CFADD__(v22, v19);
  int v23 = v22 + v19;
  if (v13) {
    goto LABEL_24;
  }
  *(_DWORD *)(v2 + 20) = v23;
  BOOL v24 = __OFADD__(v17, v19);
  Swift::Int v25 = v17 + v19;
  if (v24)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_100239E80(v4, v5, v6);
  Swift::Int v27 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  Swift::Int v28 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(41, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if (v30)
  {
    v31._uint64_t countAndFlagsBits = 41;
    v31._object = (void *)0xE100000000000000;
    Swift::Int v29 = ByteBuffer._setStringSlowpath(_:at:)(v31, v28);
  }
  Swift::Int v32 = v29;
  sub_10002A77C((uint64_t)&v47);
  int v33 = *(_DWORD *)(v2 + 20);
  BOOL v13 = __CFADD__(v33, v32);
  int v34 = v33 + v32;
  if (v13) {
    goto LABEL_27;
  }
  *(_DWORD *)(v2 + 20) = v34;
  swift_release();
  swift_release();
  swift_release();
  if (!__OFADD__(v27, v32)) {
    return;
  }
  __break(1u);
LABEL_17:
  Swift::Int v35 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(4999502, 0xE300000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if (v37)
  {
    v38._uint64_t countAndFlagsBits = 4999502;
    v38._object = (void *)0xE300000000000000;
    int v36 = ByteBuffer._setStringSlowpath(_:at:)(v38, v35);
  }
  int v39 = *(_DWORD *)(v2 + 20);
  BOOL v13 = __CFADD__(v39, v36);
  int v40 = v39 + v36;
  if (v13) {
    goto LABEL_28;
  }
  *(_DWORD *)(v2 + 20) = v40;
}

unsigned __int8 *sub_100236888(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1002369E0(a1, a2);
}

unsigned __int8 *sub_1002368A0(unsigned __int8 *a1, uint64_t a2)
{
  return sub_100236C44(a1, a2);
}

uint64_t sub_1002368B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002368E8(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1002369E0);
}

uint64_t sub_1002368D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002368E8(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100236C44);
}

uint64_t sub_1002368E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1005E1F40();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    char v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1001E8390();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    char v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v9 = (void *)sub_1005E2D30();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1002369E0(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_10023725C();
        if (v22 ^ v23 | v21) {
          unsigned __int8 v27 = v30;
        }
        if (v22 ^ v23 | v21) {
          unsigned __int8 v28 = 65;
        }
        if (!(v22 ^ v23 | v21)) {
          unsigned __int8 v29 = 58;
        }
        if (v24)
        {
          unint64_t v13 = 0;
          Swift::String v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            unsigned int v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                uint64_t v17 = 0;
                if (v32 < 0x61 || v32 >= v27) {
                  return (unsigned __int8 *)v17;
                }
                char v33 = -87;
              }
              else
              {
                char v33 = -55;
              }
            }
            else
            {
              char v33 = -48;
            }
            if (!is_mul_ok(v13, v25)) {
              return 0;
            }
            unint64_t v34 = v13 * v25;
            unsigned __int8 v35 = v32 + v33;
            BOOL v20 = __CFADD__(v34, v35);
            unint64_t v13 = v34 + v35;
            if (v20) {
              return 0;
            }
            ++v31;
            --v26;
          }
          while (v26);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_10023725C();
        if (v37 ^ v38 | v36) {
          unsigned __int8 v42 = v45;
        }
        if (v37 ^ v38 | v36) {
          unsigned __int8 v43 = 65;
        }
        if (!(v37 ^ v38 | v36)) {
          unsigned __int8 v44 = 58;
        }
        if (v39)
        {
          unint64_t v46 = 0;
          do
          {
            unsigned int v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                uint64_t v17 = 0;
                if (v47 < 0x61 || v47 >= v42) {
                  return (unsigned __int8 *)v17;
                }
                char v48 = -87;
              }
              else
              {
                char v48 = -55;
              }
            }
            else
            {
              char v48 = -48;
            }
            if (!is_mul_ok(v46, v40)) {
              return 0;
            }
            unint64_t v49 = v46 * v40;
            unsigned __int8 v50 = v47 + v48;
            BOOL v20 = __CFADD__(v49, v50);
            unint64_t v46 = v49 + v50;
            if (v20) {
              return 0;
            }
            ++v39;
            --v41;
          }
          while (v41);
          return (unsigned __int8 *)v46;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_10023725C();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          unint64_t v13 = 0;
          for (uint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            if (!is_mul_ok(v13, v7)) {
              return 0;
            }
            unint64_t v18 = v13 * v7;
            unsigned __int8 v19 = v15 + v16;
            BOOL v20 = v18 >= v19;
            unint64_t v13 = v18 - v19;
            if (!v20) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_100236C44(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_10023725C();
        if (v20 ^ v21 | v19) {
          unsigned __int8 v25 = v28;
        }
        if (v20 ^ v21 | v19) {
          unsigned __int8 v26 = 65;
        }
        if (!(v20 ^ v21 | v19)) {
          unsigned __int8 v27 = 58;
        }
        if (v22)
        {
          uint64_t v13 = 0;
          unsigned __int8 v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            unsigned int v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                uint64_t v17 = 0;
                if (v30 < 0x61 || v30 >= v25) {
                  return (unsigned __int8 *)v17;
                }
                char v31 = -87;
              }
              else
              {
                char v31 = -55;
              }
            }
            else
            {
              char v31 = -48;
            }
            uint64_t v32 = v13 * v23;
            if ((unsigned __int128)(v13 * (__int128)v23) >> 64 != (v13 * v23) >> 63) {
              return 0;
            }
            uint64_t v13 = v32 + (v30 + v31);
            if (__OFADD__(v32, (v30 + v31))) {
              return 0;
            }
            ++v29;
            --v24;
          }
          while (v24);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_10023725C();
        if (v34 ^ v35 | v33) {
          unsigned __int8 v39 = v42;
        }
        if (v34 ^ v35 | v33) {
          unsigned __int8 v40 = 65;
        }
        if (!(v34 ^ v35 | v33)) {
          unsigned __int8 v41 = 58;
        }
        if (v36)
        {
          uint64_t v43 = 0;
          do
          {
            unsigned int v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                uint64_t v17 = 0;
                if (v44 < 0x61 || v44 >= v39) {
                  return (unsigned __int8 *)v17;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            uint64_t v46 = v43 * v37;
            if ((unsigned __int128)(v43 * (__int128)v37) >> 64 != (v43 * v37) >> 63) {
              return 0;
            }
            uint64_t v43 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45))) {
              return 0;
            }
            ++v36;
            --v38;
          }
          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_10023725C();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          uint64_t v13 = 0;
          for (uint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            uint64_t v18 = v13 * v7;
            if ((unsigned __int128)(v13 * (__int128)v7) >> 64 != (v13 * v7) >> 63) {
              return 0;
            }
            uint64_t v13 = v18 - (v15 + v16);
            if (__OFSUB__(v18, (v15 + v16))) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_100236EAC()
{
  unint64_t result = qword_1007107B8;
  if (!qword_1007107B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007107B8);
  }
  return result;
}

unint64_t sub_100236EFC()
{
  unint64_t result = qword_1007107C0;
  if (!qword_1007107C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007107C0);
  }
  return result;
}

unint64_t sub_100236F4C()
{
  unint64_t result = qword_1007107C8;
  if (!qword_1007107C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007107C8);
  }
  return result;
}

void *sub_100236F98()
{
  return &protocol witness table for String;
}

unint64_t sub_100236FA8()
{
  unint64_t result = qword_1007107D0;
  if (!qword_1007107D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007107D0);
  }
  return result;
}

void *sub_100236FF4()
{
  return &protocol witness table for String;
}

void *sub_100237000()
{
  return &protocol witness table for String;
}

ValueMetadata *type metadata accessor for BodyStructure.DispositionKind()
{
  return &type metadata for BodyStructure.DispositionKind;
}

uint64_t _s11DispositionVwxx()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

void *_s11DispositionVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s11DispositionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s11DispositionVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t _s11DispositionVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11DispositionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.Disposition()
{
  return &type metadata for BodyStructure.Disposition;
}

void sub_1002372CC(uint64_t a1, Swift::UInt32 a2)
{
  sub_1005E3440(a2);
}

uint64_t BodyStructure.DispositionAndLanguage.disposition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002372F0(v1, a1);
}

uint64_t sub_1002372F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007107D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t BodyStructure.DispositionAndLanguage.disposition.setter(uint64_t a1)
{
  return sub_100237360(a1, v1);
}

uint64_t sub_100237360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007107D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t BodyStructure.DispositionAndLanguage.language.getter()
{
  uint64_t v0 = sub_1002381C4();
  sub_100136B80(v0, v1, v2, v3);
  return sub_1002381C4();
}

uint64_t BodyStructure.DispositionAndLanguage.language.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_100061750(v4[5], v4[6], v4[7], v4[8]);
  v4[5] = a1;
  v4[6] = a2;
  v4[7] = a3;
  v4[8] = a4;
  return result;
}

double BodyStructure.DispositionAndLanguage.init(disposition:language:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1002374B8(a1, (uint64_t)v14);
  uint64_t v11 = v15;
  double result = *(double *)v14;
  long long v13 = v14[1];
  *(_OWORD *)a6 = v14[0];
  *(_OWORD *)(a6 + 16) = v13;
  *(void *)(a6 + 32) = v11;
  *(void *)(a6 + 40) = a2;
  *(void *)(a6 + 48) = a3;
  *(void *)(a6 + 56) = a4;
  *(void *)(a6 + 64) = a5;
  return result;
}

uint64_t sub_1002374B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007107D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void BodyStructure.DispositionAndLanguage.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (v2[1])
  {
    sub_1005E3420(1u);
    uint64_t v4 = sub_100238134();
    sub_100136B1C(v4, v5);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100225EFC();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    uint64_t v6 = sub_100238134();
    sub_1000616EC(v6, v7);
  }
  else
  {
    sub_1005E3420(0);
  }
  uint64_t v8 = v2[5];
  if (v8)
  {
    uint64_t v10 = v2[7];
    uint64_t v9 = v2[8];
    uint64_t v11 = v2[6];
    sub_1005E3420(1u);
    uint64_t v12 = sub_100238190();
    sub_100136B80(v12, v13, v14, v15);
    swift_bridgeObjectRetain();
    sub_100136BD8(v11, v10, v9);
    BodyStructure.LanguageLocation.hash(into:)(a1, v8, v11, v10, v9);
    swift_bridgeObjectRelease();
    sub_1000617A8(v11, v10, v9);
    uint64_t v16 = sub_100238190();
    sub_100061750(v16, v17, v18, v19);
  }
  else
  {
    sub_1005E3420(0);
  }
}

BOOL static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(uint64_t *a1, void *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a2[1];
  if (v4)
  {
    if (v6)
    {
      BOOL v7 = v5 == *a2 && v4 == v6;
      if (v7 || (sub_1005E3290() & 1) != 0)
      {
        sub_1002380F0();
        sub_1002380F0();
        uint64_t v8 = sub_1002381F8();
        sub_100238170(v8, v9);
        sub_100221B3C();
        if (v10)
        {
          char v11 = sub_100222314();
          swift_bridgeObjectRelease();
          if (v11)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            sub_10023814C();
            goto LABEL_13;
          }
          goto LABEL_19;
        }
      }
      else
      {
        sub_1002380F0();
        sub_1002380F0();
        uint64_t v25 = sub_1002381F8();
        sub_100238170(v25, v26);
      }
      swift_bridgeObjectRelease();
LABEL_19:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v14 = v5;
      uint64_t v15 = v4;
      goto LABEL_20;
    }
LABEL_12:
    sub_100136B1C(v5, v4);
    uint64_t v12 = sub_1002381F8();
    sub_100136B1C(v12, v13);
    sub_10023814C();
    uint64_t v14 = sub_1002381F8();
LABEL_20:
    sub_1000616EC(v14, v15);
    return 0;
  }
  if (v6) {
    goto LABEL_12;
  }
LABEL_13:
  uint64_t v16 = a1[5];
  uint64_t v17 = a1[6];
  uint64_t v18 = a1[7];
  uint64_t v19 = a1[8];
  uint64_t v21 = a2[5];
  uint64_t v20 = a2[6];
  uint64_t v22 = a2[7];
  uint64_t v23 = a2[8];
  if (v16)
  {
    if (v21)
    {
      sub_100238114();
      sub_100238114();
      sub_1002381D8();
      char v24 = static BodyStructure.LanguageLocation.__derived_struct_equals(_:_:)(v16, v17, v18, v19, v21, v20, v22, v23);
      swift_bridgeObjectRelease();
      sub_1000617A8(v20, v22, v23);
      swift_bridgeObjectRelease();
      sub_1000617A8(v17, v18, v19);
      sub_1002381A4();
      return (v24 & 1) != 0;
    }
LABEL_23:
    sub_100238114();
    sub_1002381D8();
    sub_1002381A4();
    sub_100061750(v21, v20, v22, v23);
    return 0;
  }
  if (v21) {
    goto LABEL_23;
  }
  return 1;
}

Swift::Int BodyStructure.DispositionAndLanguage.hashValue.getter()
{
  sub_1005E33F0();
  BodyStructure.DispositionAndLanguage.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_1002379BC()
{
  sub_1005E33F0();
  BodyStructure.DispositionAndLanguage.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

unint64_t sub_100237A00()
{
  unint64_t result = qword_1007107E0;
  if (!qword_1007107E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007107E0);
  }
  return result;
}

uint64_t _s22DispositionAndLanguageVwxx(void *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t result = a1[5];
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = a1[8];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *_s22DispositionAndLanguageVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (v4)
  {
    *a1 = *a2;
    a1[1] = v4;
    uint64_t v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
    a1[4] = a2[4];
  }
  uint64_t v7 = a2[5];
  if (v7)
  {
    a1[5] = v7;
    uint64_t v8 = a2[8];
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v9 = a2[7];
      a1[6] = a2[6];
      a1[7] = v9;
      a1[8] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      a1[8] = a2[8];
    }
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 7) = v10;
  }
  return a1;
}

uint64_t _s22DispositionAndLanguageVwca(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_retain();
      swift_release();
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_retain();
      swift_release();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100237E00(a1);
      uint64_t v5 = *((void *)a2 + 4);
      long long v6 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = v5;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v7 = *a2;
    long long v8 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
  }
  uint64_t v9 = (long long *)(a1 + 40);
  char v11 = (long long *)((char *)a2 + 40);
  uint64_t v10 = *((void *)a2 + 5);
  if (!*(void *)(a1 + 40))
  {
    if (v10)
    {
      *(void *)(a1 + 40) = v10;
      uint64_t v14 = *((void *)a2 + 8);
      swift_bridgeObjectRetain();
      if (!v14)
      {
        long long v15 = a2[3];
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        *(_OWORD *)(a1 + 48) = v15;
        return a1;
      }
LABEL_18:
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      *(void *)(a1 + 64) = *((void *)a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    long long v17 = *v11;
    *(_OWORD *)(a1 + 56) = *(long long *)((char *)a2 + 56);
LABEL_22:
    *uint64_t v9 = v17;
    return a1;
  }
  if (!v10)
  {
    sub_100237EA8(a1 + 40);
    long long v16 = *(long long *)((char *)a2 + 56);
    *uint64_t v9 = *v11;
    *(_OWORD *)(a1 + 56) = v16;
    return a1;
  }
  *(void *)(a1 + 40) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (long long *)(a1 + 48);
  uint64_t v12 = a2 + 3;
  uint64_t v13 = *((void *)a2 + 8);
  if (!*(void *)(a1 + 64))
  {
    if (v13) {
      goto LABEL_18;
    }
    long long v17 = *v12;
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    goto LABEL_22;
  }
  if (v13)
  {
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100237E54(a1 + 48);
    uint64_t v18 = *((void *)a2 + 8);
    *uint64_t v9 = *v12;
    *(void *)(a1 + 64) = v18;
  }
  return a1;
}

uint64_t sub_100237E00(uint64_t a1)
{
  return a1;
}

uint64_t sub_100237E54(uint64_t a1)
{
  return a1;
}

uint64_t sub_100237EA8(uint64_t a1)
{
  return a1;
}

void *_s22DispositionAndLanguageVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t _s22DispositionAndLanguageVwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_release();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_release();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_release();
      goto LABEL_6;
    }
    sub_100237E00(a1);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
LABEL_6:
  uint64_t v6 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
LABEL_12:
    long long v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  if (!v6)
  {
    sub_100237EA8(a1 + 40);
    goto LABEL_12;
  }
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 64))
  {
LABEL_14:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    return a1;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  if (!v7)
  {
    sub_100237E54(a1 + 48);
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22DispositionAndLanguageVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s22DispositionAndLanguageVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.DispositionAndLanguage()
{
  return &type metadata for BodyStructure.DispositionAndLanguage;
}

uint64_t sub_1002380F0()
{
  return sub_100136B1C(v1, v0);
}

uint64_t sub_100238114()
{
  return sub_100136B80(v0, v1, v2, v3);
}

uint64_t sub_100238134()
{
  return v0;
}

uint64_t sub_10023814C()
{
  return sub_1000616EC(v1, v0);
}

uint64_t sub_100238170(uint64_t a1, uint64_t a2)
{
  return sub_100136B1C(a1, a2);
}

uint64_t sub_100238190()
{
  return v0;
}

uint64_t sub_1002381A4()
{
  return sub_100061750(v0, v1, v2, v3);
}

uint64_t sub_1002381C4()
{
  return v0;
}

uint64_t sub_1002381D8()
{
  return sub_100136B80(v3, v0, v1, v2);
}

uint64_t sub_1002381F8()
{
  return v0;
}

uint64_t static BodyStructure.Encoding.sevenBit.getter()
{
  return sub_1002382B8();
}

uint64_t static BodyStructure.Encoding.eightBit.getter()
{
  return sub_1002382B8();
}

uint64_t static BodyStructure.Encoding.binary.getter()
{
  return sub_1002382C4();
}

uint64_t static BodyStructure.Encoding.base64.getter()
{
  return sub_1002382C4();
}

uint64_t static BodyStructure.Encoding.quotedPrintable.getter()
{
  return sub_1005E1CD0();
}

uint64_t sub_100238250()
{
  return ListID.description.getter(*v0);
}

unint64_t sub_10023825C()
{
  unint64_t result = qword_1007107E8;
  if (!qword_1007107E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007107E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.Encoding()
{
  return &type metadata for BodyStructure.Encoding;
}

uint64_t sub_1002382B8()
{
  return sub_1005E1CD0();
}

uint64_t sub_1002382C4()
{
  return sub_1005E1CD0();
}

uint64_t SearchModificationSequence.extensions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *uint64_t v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

uint64_t PushRegistrationInfo.deviceToken.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushRegistrationInfo.deviceToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t IndexableMessageInfo.Attachment.filename.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IndexableMessageInfo.Attachment.filename.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t WatchOSHeaderInfo.messageIDHeader.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

Swift::UInt32 (__swiftcall *WatchOSHeaderInfo.messageIDHeader.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t BodyStructure.Fields.octetCount.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

Swift::UInt32 (__swiftcall *UnsafeExtractedAttachment.unsafeBytes.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t BodyStructure.Fields.init(parameters:id:contentDescription:encoding:octetCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

void BodyStructure.Fields.hash(into:)()
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100225EFC();
  swift_release();
  swift_release();
  swift_release();
  if (v0[4])
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_100238F4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  if (v0[6])
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_100238F4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  if (v0[8])
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_100238F4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  sub_1005E3410(v0[9]);
}

BOOL static BodyStructure.Fields.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  sub_100221B3C();
  if ((v4 & 1) == 0 || (sub_100222314() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[4];
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_12;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = a1[3] == a2[3] && v5 == v6;
  if (v7 || (char v8 = sub_1005E3290(), result = 0, (v8 & 1) != 0))
  {
LABEL_12:
    uint64_t v10 = a1[6];
    uint64_t v11 = a2[6];
    if (v10)
    {
      if (!v11) {
        return 0;
      }
      if (a1[5] != a2[5] || v10 != v11)
      {
        char v13 = sub_1005E3290();
        BOOL result = 0;
        if ((v13 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v11)
    {
      return 0;
    }
    uint64_t v14 = a1[8];
    uint64_t v15 = a2[8];
    if (v14)
    {
      if (v15)
      {
        if (a1[7] != a2[7] || v14 != v15)
        {
          char v17 = sub_1005E3290();
          BOOL result = 0;
          if ((v17 & 1) == 0) {
            return result;
          }
        }
        return a1[9] == a2[9];
      }
    }
    else if (!v15)
    {
      return a1[9] == a2[9];
    }
    return 0;
  }
  return result;
}

Swift::Int BodyStructure.Fields.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_100238720()
{
  return sub_1005E3470();
}

void sub_100238760(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100239E80(*a1, a1[1], a1[2]);
  uint64_t v5 = v4;
  uint64_t v6 = v1 + 8;
  sub_100210AD0(32, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if (v8) {
    Swift::Int v7 = sub_100238EC0();
  }
  int v9 = *(_DWORD *)(v1 + 20);
  if (__CFADD__(v9, v7))
  {
    __break(1u);
    goto LABEL_43;
  }
  *(_DWORD *)(v1 + 20) = v9 + v7;
  Swift::Int v10 = v5 + v7;
  if (__OFADD__(v5, v7))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  sub_100238E58((uint64_t)(a1 + 3), (uint64_t)v60);
  sub_100238E58((uint64_t)v60, (uint64_t)&v61);
  unint64_t v11 = v62;
  if (v62)
  {
    unint64_t v12 = v61;
    swift_bridgeObjectRetain();
    Swift::Int v13 = sub_10025DCBC(v12, v11);
    sub_10002A77C((uint64_t)v60);
  }
  else
  {
    sub_100238F28();
    if (v15) {
      Swift::Int v14 = sub_100238F04();
    }
    Swift::Int v13 = v14;
    int v16 = *(_DWORD *)(v1 + 20);
    BOOL v17 = __CFADD__(v16, v14);
    int v18 = v16 + v14;
    if (v17) {
      goto LABEL_53;
    }
    *(_DWORD *)(v1 + 20) = v18;
  }
  BOOL v19 = __OFADD__(v10, v13);
  Swift::Int v20 = v10 + v13;
  if (v19) {
    goto LABEL_44;
  }
  sub_100238EE0();
  if (v22) {
    Swift::Int v21 = sub_100238EC0();
  }
  int v23 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v23, v21)) {
    goto LABEL_45;
  }
  *(_DWORD *)(v2 + 20) = v23 + v21;
  Swift::Int v24 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  sub_100238E58((uint64_t)(a1 + 5), (uint64_t)v59);
  sub_100238E58((uint64_t)v59, (uint64_t)&v63);
  unint64_t v25 = v64;
  if (v64)
  {
    unint64_t v26 = v63;
    swift_bridgeObjectRetain();
    Swift::Int v27 = sub_10025DCBC(v26, v25);
    sub_10002A77C((uint64_t)v59);
  }
  else
  {
    sub_100238F28();
    if (v29) {
      Swift::Int v28 = sub_100238F04();
    }
    Swift::Int v27 = v28;
    int v30 = *(_DWORD *)(v2 + 20);
    BOOL v17 = __CFADD__(v30, v28);
    int v31 = v30 + v28;
    if (v17) {
      goto LABEL_54;
    }
    *(_DWORD *)(v2 + 20) = v31;
  }
  BOOL v19 = __OFADD__(v24, v27);
  Swift::Int v32 = v24 + v27;
  if (v19) {
    goto LABEL_47;
  }
  sub_100238EE0();
  if (v34) {
    Swift::Int v33 = sub_100238EC0();
  }
  int v35 = *(_DWORD *)(v2 + 20);
  Swift::Int v36 = (v35 + v33);
  if (__CFADD__(v35, v33)) {
    goto LABEL_48;
  }
  *(_DWORD *)(v2 + 20) = v36;
  Swift::Int v37 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v38 = (void *)a1[8];
  if (v38)
  {
    uint64_t v39 = a1[7];
    swift_bridgeObjectRetain();
    v65._uint64_t countAndFlagsBits = v39;
    v65._object = v38;
    sub_1005E1E30(v65);
    swift_bridgeObjectRelease();
    v66._uint64_t countAndFlagsBits = 34;
    v66._object = (void *)0xE100000000000000;
    sub_1005E1E30(v66);
    swift_bridgeObjectRetain();
    sub_100210AD0(34, 0xE100000000000000, v6, v36);
    Swift::Int v41 = v40;
    char v43 = v42;
    swift_bridgeObjectRelease();
    if (v43)
    {
      v44._uint64_t countAndFlagsBits = 34;
      v44._object = (void *)0xE100000000000000;
      Swift::Int v41 = ByteBuffer._setStringSlowpath(_:at:)(v44, v36);
    }
    swift_bridgeObjectRelease();
    int v45 = *(_DWORD *)(v2 + 20);
    Swift::UInt32 v46 = v45 + v41;
    if (!__CFADD__(v45, v41)) {
      goto LABEL_36;
    }
    __break(1u);
  }
  sub_100210AD0(4999502, 0xE300000000000000, v6, v36);
  if (v48)
  {
    v49._uint64_t countAndFlagsBits = 4999502;
    v49._object = (void *)0xE300000000000000;
    Swift::Int v47 = ByteBuffer._setStringSlowpath(_:at:)(v49, v36);
  }
  Swift::Int v41 = v47;
  int v50 = *(_DWORD *)(v2 + 20);
  Swift::UInt32 v46 = v50 + v47;
  if (__CFADD__(v50, v47)) {
    goto LABEL_55;
  }
LABEL_36:
  *(_DWORD *)(v2 + 20) = v46;
  Swift::Int v51 = v37 + v41;
  if (__OFADD__(v37, v41))
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v67._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100210AD0(32, 0xE100000000000000, v6, v46);
  Swift::Int v53 = v52;
  char v55 = v54;
  swift_bridgeObjectRelease();
  if (v55)
  {
    v56._uint64_t countAndFlagsBits = 32;
    v56._object = (void *)0xE100000000000000;
    Swift::Int v53 = ByteBuffer._setStringSlowpath(_:at:)(v56, v46);
  }
  swift_bridgeObjectRelease();
  int v57 = *(_DWORD *)(v2 + 20);
  BOOL v17 = __CFADD__(v57, v53);
  int v58 = v57 + v53;
  if (v17) {
    goto LABEL_51;
  }
  *(_DWORD *)(v2 + 20) = v58;
  if (__OFADD__(v51, v53))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
  }
}

unint64_t sub_100238B14()
{
  unint64_t result = qword_1007107F0;
  if (!qword_1007107F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007107F0);
  }
  return result;
}

uint64_t _s6FieldsVwxx()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s6FieldsVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s6FieldsVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  return a1;
}

void *_s6FieldsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t _s6FieldsVwta(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t _s6FieldsVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6FieldsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.Fields()
{
  return &type metadata for BodyStructure.Fields;
}

uint64_t sub_100238E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007107F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Int sub_100238EC0()
{
  uint64_t v2 = 32;
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v2, v0);
}

void sub_100238EE0()
{
  Swift::UInt32 v3 = *(_DWORD *)(v0 + 20);
  sub_100210AD0(32, 0xE100000000000000, v1, v3);
}

Swift::Int sub_100238F04()
{
  uint64_t v2 = 4999502;
  unint64_t v3 = 0xE300000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v2, v0);
}

void sub_100238F28()
{
  sub_100210AD0(4999502, 0xE300000000000000, v1, v0);
}

uint64_t sub_100238F4C()
{
  return sub_1005E1DB0();
}

uint64_t BodyStructure.LanguageLocation.location.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a2;
}

uint64_t BodyStructure.LanguageLocation.location.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1000617A8(v3[1], v3[2], v3[3]);
  v3[1] = a1;
  v3[2] = a2;
  v3[3] = a3;
  return result;
}

void BodyStructure.LanguageLocation.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  sub_100226FB4(a1, a2);
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1005E3420(1u);
    if (a4)
    {
      sub_1005E3420(1u);
      sub_100239784();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
    }
    else
    {
      sub_1005E3420(0);
      sub_100136BD8(a3, 0, a5);
      swift_bridgeObjectRetain();
    }
    Swift::UInt v10 = *(void *)(a5 + 16);
    sub_1005E3410(v10);
    if (v10)
    {
      swift_bridgeObjectRetain();
      unint64_t v11 = (unsigned char *)(a5 + 55);
      do
      {
        Swift::UInt v12 = *(void *)(v11 - 23);
        if (*v11)
        {
          sub_1005E3410(1uLL);
          sub_1005E3410(v12);
        }
        else
        {
          sub_100239768();
          sub_1005E3410(0);
          if (v12)
          {
            sub_1005E3420(1u);
            swift_beginAccess();
            sub_100239748();
            sub_1005E3400();
          }
          else
          {
            sub_1005E3420(0);
            sub_1002397BC();
          }
        }
        v11 += 24;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1002397A0();
  }
  else
  {
    sub_1005E3420(0);
  }
}

uint64_t static BodyStructure.LanguageLocation.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100219898();
  if (v14)
  {
    if (a4)
    {
      if (a8)
      {
        sub_100136BD8(a6, a7, a8);
        sub_100239784();
        static BodyStructure.LocationAndExtensions.__derived_struct_equals(_:_:)(a2, a3, a4, a6, a7);
        char v16 = v15;
        sub_1000617A8(a6, a7, a8);
        sub_1002397A0();
        if (v16) {
          return 1;
        }
      }
    }
    else if (!a8)
    {
      return 1;
    }
  }
  return 0;
}

Swift::Int BodyStructure.LanguageLocation.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_100226FB4((uint64_t)v12, a1);
  swift_bridgeObjectRelease();
  if (a4)
  {
    sub_1005E3420(1u);
    if (a3)
    {
      sub_1005E3420(1u);
      sub_100239784();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
    }
    else
    {
      sub_1005E3420(0);
      sub_100136BD8(a2, 0, a4);
      swift_bridgeObjectRetain();
    }
    Swift::UInt v8 = *(void *)(a4 + 16);
    sub_1005E3410(v8);
    if (v8)
    {
      swift_bridgeObjectRetain();
      int v9 = (unsigned char *)(a4 + 55);
      do
      {
        Swift::UInt v10 = *(void *)(v9 - 23);
        if (*v9)
        {
          sub_1005E3410(1uLL);
          sub_1005E3410(v10);
        }
        else
        {
          sub_100239768();
          sub_1005E3410(0);
          if (v10)
          {
            sub_1005E3420(1u);
            swift_beginAccess();
            sub_100239748();
            sub_1005E3400();
          }
          else
          {
            sub_1005E3420(0);
            sub_1002397BC();
          }
        }
        v9 += 24;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1002397A0();
  }
  else
  {
    sub_1005E3420(0);
  }
  return sub_1005E3470();
}

Swift::Int sub_1002393FC()
{
  return BodyStructure.LanguageLocation.hashValue.getter(*v0, v0[1], v0[2], v0[3]);
}

void sub_100239408(uint64_t a1)
{
  BodyStructure.LanguageLocation.hash(into:)(a1, *v1, v1[1], v1[2], v1[3]);
}

Swift::Int sub_100239414()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1005E33F0();
  BodyStructure.LanguageLocation.hash(into:)((uint64_t)v6, v1, v2, v4, v3);
  return sub_1005E3470();
}

uint64_t sub_100239470(uint64_t *a1, uint64_t *a2)
{
  return static BodyStructure.LanguageLocation.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

unint64_t sub_100239490()
{
  unint64_t result = qword_100710800;
  if (!qword_100710800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710800);
  }
  return result;
}

uint64_t _s16LanguageLocationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s16LanguageLocationVwcp(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a1 + 1;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v4 = *(_OWORD *)(a2 + 1);
    a1[3] = a2[3];
  }
  return a1;
}

void *_s16LanguageLocationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 1;
  uint64_t v5 = a2 + 1;
  uint64_t v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100237E54((uint64_t)(a1 + 1));
      uint64_t v7 = a2[3];
      *uint64_t v4 = *v5;
      a1[3] = v7;
    }
  }
  else if (v6)
  {
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *v5;
    a1[3] = a2[3];
    *uint64_t v4 = v8;
  }
  return a1;
}

uint64_t _s16LanguageLocationVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 24);
  if (!v4)
  {
    sub_100237E54(a1 + 8);
LABEL_5:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    return a1;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BodyStructure.LanguageLocation()
{
  return &type metadata for BodyStructure.LanguageLocation;
}

uint64_t sub_100239748()
{
  return *(void *)(v1 + 24) + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v0;
}

uint64_t sub_100239784()
{
  return sub_100136BD8(v2, v1, v0);
}

uint64_t sub_1002397A0()
{
  return sub_1000617A8(v2, v1, v0);
}

uint64_t sub_1002397BC()
{
  return sub_10022C15C(0, v0, v1, 0);
}

uint64_t ContentDisposition.attributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContentDisposition.attributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

void BodyStructure.LocationAndExtensions.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  Swift::UInt v5 = *(void *)(a4 + 16);
  sub_1005E3410(v5);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (unsigned char *)(a4 + 55);
    do
    {
      Swift::UInt v7 = *(void *)(v6 - 23);
      if (*v6)
      {
        sub_1005E3410(1uLL);
        sub_1005E3410(v7);
      }
      else
      {
        sub_100239E44();
        sub_1005E3410(0);
        if (v7)
        {
          sub_1005E3420(1u);
          swift_beginAccess();
          sub_100239E24();
          sub_1005E3400();
        }
        else
        {
          sub_1005E3420(0);
          sub_100239E60();
        }
      }
      v6 += 24;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
}

void static BodyStructure.LocationAndExtensions.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    if (a5) {
      return;
    }
    goto LABEL_8;
  }
  if (a5)
  {
    BOOL v5 = a1 == a4 && a2 == a5;
    if (v5 || (sub_1005E3290() & 1) != 0)
    {
LABEL_8:
      sub_100220A2C();
    }
  }
}

Swift::Int BodyStructure.LocationAndExtensions.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005E33F0();
  if (a2)
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  Swift::UInt v5 = *(void *)(a3 + 16);
  sub_1005E3410(v5);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (unsigned char *)(a3 + 55);
    do
    {
      Swift::UInt v7 = *(void *)(v6 - 23);
      if (*v6)
      {
        sub_1005E3410(1uLL);
        sub_1005E3410(v7);
      }
      else
      {
        sub_100239E44();
        sub_1005E3410(0);
        if (v7)
        {
          sub_1005E3420(1u);
          swift_beginAccess();
          sub_100239E24();
          sub_1005E3400();
        }
        else
        {
          sub_1005E3420(0);
          sub_100239E60();
        }
      }
      v6 += 24;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return sub_1005E3470();
}

Swift::Int sub_100239AE4()
{
  return BodyStructure.LocationAndExtensions.hashValue.getter(*v0, v0[1], v0[2]);
}

void sub_100239AF0(uint64_t a1)
{
  BodyStructure.LocationAndExtensions.hash(into:)(a1, *v1, v1[1], v1[2]);
}

Swift::Int sub_100239AFC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_1005E33F0();
  if (v1)
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  Swift::UInt v3 = *(void *)(v2 + 16);
  sub_1005E3410(v3);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (unsigned char *)(v2 + 55);
    do
    {
      Swift::UInt v5 = *(void *)(v4 - 23);
      if (*v4)
      {
        sub_1005E3410(1uLL);
        sub_1005E3410(v5);
      }
      else
      {
        uint64_t v6 = *(void *)(v4 - 15);
        unint64_t v7 = *(unsigned int *)(v4 - 7) | ((unint64_t)(*(unsigned __int16 *)(v4 - 3) | (*(v4 - 1) << 16)) << 32);
        sub_1005E3410(0);
        if (v5)
        {
          sub_1005E3420(1u);
          swift_beginAccess();
          sub_1005E3400();
        }
        else
        {
          sub_1005E3420(0);
          sub_10022C15C(0, v6, v7, 0);
        }
      }
      v4 += 24;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return sub_1005E3470();
}

unint64_t sub_100239C78()
{
  unint64_t result = qword_100710808;
  if (!qword_100710808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710808);
  }
  return result;
}

void sub_100239CC4(uint64_t *a1, uint64_t *a2)
{
}

void *sub_100239CE4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s21LocationAndExtensionsVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21LocationAndExtensionsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21LocationAndExtensionsVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for BodyStructure.LocationAndExtensions()
{
  return &type metadata for BodyStructure.LocationAndExtensions;
}

uint64_t sub_100239E24()
{
  return *(void *)(v1 + 24) + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v0;
}

uint64_t sub_100239E60()
{
  return sub_10022C15C(0, v0, v1, 0);
}

void sub_100239E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1001F1F68();
  }
  else
  {
    Swift::Int v4 = *(unsigned int *)(v3 + 20);
    sub_100210AD0(4999502, 0xE300000000000000, v3 + 8, *(_DWORD *)(v3 + 20));
    if (v6)
    {
      v7._uint64_t countAndFlagsBits = 4999502;
      v7._object = (void *)0xE300000000000000;
      int v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v4);
    }
    int v8 = *(_DWORD *)(v3 + 20);
    BOOL v9 = __CFADD__(v8, v5);
    int v10 = v8 + v5;
    if (v9) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v3 + 20) = v10;
    }
  }
}

BOOL static BodyStructure.Multipart.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  sub_10021E9A8();
  if ((v4 & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v5 || (char v6 = sub_1005E3290(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    uint64_t v10 = a1[5];
    uint64_t v11 = a1[6];
    uint64_t v12 = a1[7];
    uint64_t v13 = a1[8];
    uint64_t v14 = a1[9];
    uint64_t v15 = a1[10];
    uint64_t v16 = a1[11];
    uint64_t v17 = a1[12];
    uint64_t v18 = a1[13];
    uint64_t v19 = a1[14];
    uint64_t v20 = a2[3];
    uint64_t v21 = a2[4];
    uint64_t v22 = a2[5];
    uint64_t v23 = a2[6];
    uint64_t v25 = a2[7];
    uint64_t v24 = a2[8];
    uint64_t v27 = a2[9];
    uint64_t v26 = a2[10];
    uint64_t v28 = a2[11];
    uint64_t v29 = a2[12];
    uint64_t v31 = a2[13];
    uint64_t v30 = a2[14];
    if (v9)
    {
      if (v21)
      {
        v97[0] = v8;
        v97[1] = v9;
        v97[2] = v10;
        v97[3] = v11;
        v97[4] = v12;
        v97[5] = v13;
        v97[6] = v14;
        v97[7] = v15;
        v97[8] = v16;
        v97[9] = v17;
        v97[10] = v18;
        v97[11] = v19;
        uint64_t v73 = v20;
        uint64_t v74 = v21;
        uint64_t v75 = v22;
        uint64_t v76 = v23;
        uint64_t v77 = v25;
        uint64_t v78 = v24;
        uint64_t v79 = v27;
        uint64_t v80 = v26;
        uint64_t v81 = v28;
        uint64_t v82 = v29;
        uint64_t v83 = v31;
        uint64_t v84 = v30;
        uint64_t v56 = v19;
        uint64_t v64 = v8;
        uint64_t v65 = v10;
        uint64_t v58 = v9;
        uint64_t v70 = v15;
        uint64_t v66 = v11;
        uint64_t v67 = v12;
        uint64_t v68 = v13;
        uint64_t v69 = v14;
        uint64_t v60 = v19;
        uint64_t v61 = v18;
        uint64_t v62 = v17;
        uint64_t v63 = v16;
        uint64_t v32 = v30;
        uint64_t v33 = v28;
        uint64_t v34 = v29;
        sub_100136C1C(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v56);
        sub_10023C3F0();
        sub_100136C1C(v35, v36, v37, v38, v39, v40, v41, v42, v33, v34, v31, v32);
        BOOL v59 = static BodyStructure.Multipart.Extension.__derived_struct_equals(_:_:)(v97, &v73);
        sub_10023C3F0();
        sub_1000617EC(v43, v44, v45, v46, v47, v48, v49, v50, v33, v34, v31, v32);
        sub_1000617EC(v64, v58, v65, v66, v67, v68, v69, v70, v63, v62, v61, v60);
        return v59;
      }
    }
    else if (!v21)
    {
      return 1;
    }
    uint64_t v73 = v8;
    uint64_t v74 = v9;
    uint64_t v75 = v10;
    uint64_t v76 = v11;
    uint64_t v77 = v12;
    uint64_t v78 = v13;
    uint64_t v79 = v14;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    uint64_t v83 = v18;
    uint64_t v84 = v19;
    uint64_t v85 = v20;
    uint64_t v86 = v21;
    uint64_t v87 = v22;
    uint64_t v88 = v23;
    uint64_t v89 = v25;
    uint64_t v90 = v24;
    uint64_t v91 = v27;
    uint64_t v92 = v26;
    uint64_t v93 = v28;
    uint64_t v94 = v29;
    uint64_t v95 = v31;
    uint64_t v96 = v30;
    uint64_t v57 = v19;
    uint64_t v51 = v31;
    uint64_t v71 = v27;
    uint64_t v72 = v26;
    uint64_t v52 = v22;
    uint64_t v53 = v20;
    uint64_t v54 = v28;
    uint64_t v55 = v29;
    sub_100136C1C(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v57);
    sub_100136C1C(v53, v21, v52, v23, v25, v24, v71, v72, v54, v55, v51, v30);
    sub_100223C60((uint64_t)&v73);
    return 0;
  }
  return result;
}

void sub_10023A17C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v157 = v3;
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    uint64_t v6 = v1 + 8;
    swift_bridgeObjectRetain_n();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v151 = v4 - 1;
    uint64_t v141 = v1 + 8;
    while (1)
    {
      sub_10013AE3C(v5, (uint64_t)v156);
      Swift::Int v9 = *(unsigned int *)(v2 + 20);
      sub_10013AF38((uint64_t)v156, sub_100136870);
      sub_100210AD0(40, 0xE100000000000000, v6, v9);
      uint64_t v152 = v8;
      if (v11)
      {
        v12._uint64_t countAndFlagsBits = 40;
        v12._object = (void *)0xE100000000000000;
        Swift::Int v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
      }
      Swift::Int v13 = v10;
      int v14 = *(_DWORD *)(v2 + 20);
      BOOL v15 = __CFADD__(v14, v10);
      int v16 = v14 + v10;
      if (v15)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      *(_DWORD *)(v2 + 20) = v16;
      sub_10013AE3C((uint64_t)v156, (uint64_t)v155);
      if (sub_10013AEAC((uint64_t)v155) != 1) {
        break;
      }
      uint64_t v143 = v5;
      uint64_t v146 = v7;
      uint64_t v17 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v155);
      uint64_t v18 = *(void *)(v17 + 16);
      long long v169 = *(_OWORD *)v17;
      uint64_t v170 = v18;
      long long v171 = *(_OWORD *)(v17 + 24);
      long long v172 = *(_OWORD *)(v17 + 40);
      long long v173 = *(_OWORD *)(v17 + 56);
      long long v174 = *(_OWORD *)(v17 + 72);
      long long v175 = *(_OWORD *)(v17 + 88);
      long long v176 = *(_OWORD *)(v17 + 104);
      sub_10013AE3C((uint64_t)v156, (uint64_t)v154);
      uint64_t v19 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v154);
      uint64_t v20 = *(void *)(v19 + 24);
      uint64_t v21 = *(void *)(v19 + 32);
      uint64_t v22 = *(void *)(v19 + 40);
      uint64_t v23 = *(void *)(v19 + 48);
      uint64_t v24 = *(void *)(v19 + 56);
      uint64_t v25 = *(void *)(v19 + 64);
      uint64_t v26 = *(void *)(v19 + 72);
      uint64_t v137 = *(void *)(v19 + 80);
      long long v135 = *(_OWORD *)(v19 + 88);
      Swift::Int v149 = v13;
      uint64_t v27 = *(void *)(v19 + 104);
      uint64_t v28 = *(void *)(v19 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v23;
      uint64_t v2 = v140;
      sub_100136C1C(v20, v21, v22, v29, v24, v25, v26, v137, v135, *((uint64_t *)&v135 + 1), v27, v28);
      uint64_t v30 = sub_10023A17C(&v169);
      sub_10013AF38((uint64_t)v156, sub_100061440);
      BOOL v31 = __OFADD__(v149, v30);
      Swift::Int v32 = v149 + v30;
      if (v31) {
        goto LABEL_52;
      }
      uint64_t v5 = v143;
      uint64_t v7 = v146;
      uint64_t v6 = v141;
LABEL_24:
      Swift::Int v89 = *(unsigned int *)(v2 + 20);
      uint64_t v8 = v152;
      sub_100210AD0(41, 0xE100000000000000, v6, *(_DWORD *)(v2 + 20));
      if (v91)
      {
        v92._uint64_t countAndFlagsBits = 41;
        v92._object = (void *)0xE100000000000000;
        Swift::Int v90 = ByteBuffer._setStringSlowpath(_:at:)(v92, v89);
      }
      Swift::Int v93 = v90;
      sub_10013AF38((uint64_t)v156, sub_100061440);
      int v94 = *(_DWORD *)(v2 + 20);
      BOOL v15 = __CFADD__(v94, v93);
      int v95 = v94 + v93;
      if (v15) {
        goto LABEL_49;
      }
      *(_DWORD *)(v2 + 20) = v95;
      Swift::Int v96 = v32 + v93;
      if (__OFADD__(v32, v93)) {
        goto LABEL_50;
      }
      BOOL v31 = __OFADD__(v7, v96);
      v7 += v96;
      if (v31) {
        goto LABEL_51;
      }
      if (!v151)
      {
        sub_10001D550((uint64_t)&v157);
        sub_10001D550((uint64_t)&v157);
        goto LABEL_33;
      }
      --v151;
      v5 += 184;
    }
    uint64_t v33 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v155);
    uint64_t v34 = (__n128 *)v33;
    uint64_t v35 = *(void *)v33;
    uint64_t v36 = *(void *)v33 >> 62;
    if (v36)
    {
      if (v36 == 1)
      {
        memcpy(__dst, (const void *)((v35 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
        sub_10023C49C(v34[1], v34[2]);
        *(_OWORD *)(v37 + 56) = v38;
        uint64_t v161 = v39;
        uint64_t v162 = v40;
        sub_10013AF38((uint64_t)v156, sub_100136870);
        sub_100223E88((uint64_t)__dst);
        sub_10023DF38();
        Swift::Int v42 = v41;
        sub_100224004((uint64_t)__dst);
        goto LABEL_15;
      }
      long long v57 = *(_OWORD *)(v33 + 32);
      long long v164 = *(_OWORD *)(v33 + 16);
      long long v165 = v57;
      long long v58 = *(_OWORD *)(v33 + 64);
      long long v166 = *(_OWORD *)(v33 + 48);
      BOOL v59 = (void *)(v35 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v60 = v59[2];
      uint64_t v61 = v59[3];
      uint64_t v62 = v59[4];
      uint64_t v63 = *(void *)(v33 + 8);
      uint64_t v64 = *(void *)(v33 + 80);
      long long v167 = v58;
      uint64_t v163 = v63;
      uint64_t v168 = v64;
      sub_10013AE3C((uint64_t)v156, (uint64_t)v154);
      uint64_t v65 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v154);
      sub_10022C168(v65);
      sub_10023E354(v60, v61, v62, &v163);
    }
    else
    {
      sub_10023C49C(*(__n128 *)(v33 + 16), *(__n128 *)(v33 + 32));
      uint64_t v44 = v43[2];
      uint64_t v45 = v43[3];
      Swift::Int v46 = v13;
      uint64_t v47 = v5;
      uint64_t v48 = v43[4];
      uint64_t v49 = v43[5];
      uint64_t v50 = v34->n128_i64[1];
      uint64_t v51 = v34[5].n128_i64[0];
      *(_OWORD *)(v52 + 56) = v53;
      v159[0] = v50;
      v159[9] = v51;
      sub_10013AE3C((uint64_t)v156, (uint64_t)v154);
      uint64_t v54 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v154);
      sub_10022C168(v54);
      uint64_t v55 = v49;
      uint64_t v5 = v47;
      Swift::Int v13 = v46;
      sub_10023DE38(v44, v45, v48, v55, v159);
    }
    Swift::Int v42 = v56;
LABEL_15:
    uint64_t v66 = v34[6].n128_i64[0];
    if (v66 == 1)
    {
      sub_10013AF38((uint64_t)v156, sub_100061440);
    }
    else
    {
      uint64_t v147 = v7;
      Swift::Int v150 = v13;
      uint64_t v144 = v5;
      uint64_t v67 = v34[5].n128_i64[1];
      uint64_t v68 = v34[6].n128_i64[1];
      uint64_t v138 = v34[7].n128_i64[0];
      uint64_t v69 = v34[7].n128_i64[1];
      uint64_t v70 = v34[8].n128_i64[0];
      uint64_t v71 = v2;
      uint64_t v72 = v34[8].n128_i64[1];
      uint64_t v73 = v34[9].n128_i64[0];
      uint64_t v74 = v34[9].n128_i64[1];
      uint64_t v75 = v34[10].n128_i64[0];
      uint64_t v76 = v34[10].n128_i64[1];
      uint64_t v134 = v67;
      Swift::Int v136 = v42;
      v158[0] = v67;
      v158[1] = v66;
      v158[2] = v68;
      v158[3] = v138;
      v158[4] = v69;
      v158[5] = v70;
      v158[6] = v72;
      v158[7] = v73;
      v158[8] = v74;
      v158[9] = v75;
      v158[10] = v76;
      Swift::UInt32 v77 = *(_DWORD *)(v71 + 20);
      swift_bridgeObjectRetain();
      uint64_t v131 = v76;
      sub_100136AB8(v68, v138, v69, v70, v72, v73, v74, v75, v76);
      uint64_t v78 = sub_10023C490();
      sub_100210AD0(v78, v79, v141, v77);
      if (v81)
      {
        v82._uint64_t countAndFlagsBits = sub_10023C410();
        Swift::Int v80 = ByteBuffer._setStringSlowpath(_:at:)(v82, v83);
      }
      int v84 = *(_DWORD *)(v140 + 20);
      BOOL v15 = __CFADD__(v84, v80);
      int v85 = v84 + v80;
      if (v15) {
        goto LABEL_54;
      }
      *(_DWORD *)(v140 + 20) = v85;
      Swift::Int v86 = v136 + v80;
      if (__OFADD__(v136, v80)) {
        goto LABEL_55;
      }
      sub_10023E518(v158);
      uint64_t v88 = v87;
      sub_1000615E4(v134, v66, v68, v138, v69, v70, v72, v73, v74, v75, v131);
      sub_10013AF38((uint64_t)v156, sub_100061440);
      BOOL v31 = __OFADD__(v86, v88);
      Swift::Int v42 = v86 + v88;
      if (v31) {
        goto LABEL_56;
      }
      uint64_t v2 = v140;
      uint64_t v5 = v144;
      uint64_t v7 = v147;
      Swift::Int v13 = v150;
    }
    BOOL v31 = __OFADD__(v13, v42);
    Swift::Int v32 = v13 + v42;
    uint64_t v6 = v141;
    if (v31) {
      goto LABEL_53;
    }
    goto LABEL_24;
  }
  uint64_t v7 = 0;
LABEL_33:
  Swift::UInt32 v97 = *(_DWORD *)(v2 + 20);
  uint64_t v98 = sub_10023C490();
  sub_100210AD0(v98, v99, v2 + 8, v97);
  if (v101)
  {
    v102._uint64_t countAndFlagsBits = sub_10023C410();
    Swift::Int v100 = ByteBuffer._setStringSlowpath(_:at:)(v102, v103);
  }
  int v104 = *(_DWORD *)(v2 + 20);
  BOOL v15 = __CFADD__(v104, v100);
  int v105 = v104 + v100;
  if (v15) {
    goto LABEL_57;
  }
  *(_DWORD *)(v2 + 20) = v105;
  Swift::Int v106 = v7 + v100;
  if (__OFADD__(v7, v100))
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  sub_100285CD8();
  Swift::Int v153 = v106 + v107;
  if (__OFADD__(v106, v107))
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v108 = a1[4];
  if (!v108)
  {
LABEL_45:
    Swift::Int v129 = 0;
    goto LABEL_46;
  }
  uint64_t v110 = a1[6];
  uint64_t v139 = a1[5];
  uint64_t v142 = a1[8];
  uint64_t v145 = a1[7];
  uint64_t v112 = a1[9];
  uint64_t v111 = a1[10];
  uint64_t v113 = v2;
  uint64_t v114 = a1[11];
  uint64_t v115 = a1[12];
  uint64_t v116 = a1[13];
  uint64_t v117 = a1[14];
  Swift::Int v148 = *(unsigned int *)(v113 + 20);
  v156[0] = a1[3];
  uint64_t v109 = v156[0];
  v156[1] = v108;
  v156[2] = v139;
  v156[3] = v110;
  v156[4] = v145;
  v156[5] = v142;
  v156[6] = v112;
  v156[7] = v111;
  v156[8] = v114;
  v156[9] = v115;
  v156[10] = v116;
  v156[11] = v117;
  swift_retain();
  swift_retain();
  uint64_t v132 = v114;
  uint64_t v133 = v111;
  sub_100136C1C(v109, v108, v139, v110, v145, v142, v112, v111, v114, v115, v116, v117);
  uint64_t v118 = sub_10023C410();
  sub_100210AD0(v118, v119, v120, v148);
  if (v122)
  {
    v123._uint64_t countAndFlagsBits = sub_10023C490();
    Swift::Int v121 = ByteBuffer._setStringSlowpath(_:at:)(v123, v148);
  }
  Swift::Int v124 = v121;
  int v125 = *(_DWORD *)(v140 + 20);
  BOOL v15 = __CFADD__(v125, v121);
  int v126 = v125 + v121;
  if (v15) {
    goto LABEL_61;
  }
  *(_DWORD *)(v140 + 20) = v126;
  sub_10023B078(v156);
  uint64_t v128 = v127;
  swift_release();
  swift_release();
  sub_1000617EC(v109, v108, v139, v110, v145, v142, v112, v133, v132, v115, v116, v117);
  Swift::Int v129 = v124 + v128;
  if (__OFADD__(v124, v128))
  {
    __break(1u);
    goto LABEL_45;
  }
LABEL_46:
  if (__OFADD__(v153, v129))
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
  }
}

uint64_t UnsafeExtractedAttachment.filename.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UnsafeExtractedAttachment.filename.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t BodyStructure.Multipart.extension.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023B218(v1 + 24, a1, &qword_100710810);
}

uint64_t BodyStructure.Multipart.extension.setter(uint64_t a1)
{
  return sub_10023B25C(a1, v1 + 24, &qword_100710810);
}

void BodyStructure.Multipart.init(parts:mediaSubtype:extension:)()
{
  sub_10023C468();
  sub_10023B2A0(v1, (uint64_t)v4, &qword_100710810);
  sub_10023C420(v4[0], v4[1], v4[2], v4[3]);
  *(_OWORD *)(v0 + 88) = v2;
  *(_OWORD *)(v0 + 104) = v3;
}

void BodyStructure.Multipart.hash(into:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_10022AB80();
  swift_bridgeObjectRelease();
  long long v15 = *(_OWORD *)(v1 + 8);
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  sub_10002A77C((uint64_t)&v15);
  uint64_t v3 = *(void *)(v1 + 32);
  if (v3)
  {
    uint64_t v4 = *(void *)(v1 + 112);
    uint64_t v11 = *(void *)(v1 + 104);
    uint64_t v12 = *(void *)(v1 + 96);
    uint64_t v6 = *(void *)(v1 + 72);
    uint64_t v5 = *(void *)(v1 + 80);
    uint64_t v7 = *(void *)(v1 + 56);
    uint64_t v8 = *(void *)(v1 + 64);
    uint64_t v9 = *(void *)(v1 + 40);
    uint64_t v13 = *(void *)(v1 + 48);
    uint64_t v14 = *(void *)(v1 + 88);
    uint64_t v16 = *(void *)(v1 + 24);
    uint64_t v10 = v16;
    uint64_t v17 = v3;
    uint64_t v18 = v9;
    uint64_t v19 = v13;
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    uint64_t v22 = v6;
    uint64_t v23 = v5;
    uint64_t v24 = v14;
    uint64_t v25 = v12;
    uint64_t v26 = v11;
    uint64_t v27 = v4;
    sub_1005E3420(1u);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100136AB8(v13, v7, v8, v6, v5, v14, v12, v11, v4);
    BodyStructure.Multipart.Extension.hash(into:)(a1);
    sub_1000617EC(v10, v3, v9, v13, v7, v8, v6, v5, v14, v12, v11, v4);
  }
  else
  {
    sub_1005E3420(0);
  }
}

Swift::Int BodyStructure.Multipart.hashValue.getter()
{
  sub_1005E33F0();
  BodyStructure.Multipart.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_10023AC24()
{
  sub_1005E33F0();
  BodyStructure.Multipart.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

uint64_t BodyStructure.Multipart.Extension.dispositionAndLanguage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023B218(v1 + 24, a1, &qword_100710818);
}

uint64_t BodyStructure.Multipart.Extension.dispositionAndLanguage.setter(uint64_t a1)
{
  return sub_10023B25C(a1, v1 + 24, &qword_100710818);
}

void BodyStructure.Multipart.Extension.init(parameters:dispositionAndLanguage:)()
{
  sub_10023C468();
  sub_10023B2A0(v1, (uint64_t)v3, &qword_100710818);
  sub_10023C420(v3[0], v3[1], v3[2], v3[3]);
  *(void *)(v0 + 88) = v2;
}

void BodyStructure.Multipart.Extension.hash(into:)(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100225EFC();
  swift_release();
  swift_release();
  swift_release();
  if (v1[4] == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    uint64_t v3 = v1[10];
    uint64_t v5 = v1[8];
    uint64_t v4 = v1[9];
    uint64_t v12 = v1[11];
    uint64_t v13 = v1[7];
    sub_1005E3420(1u);
    uint64_t v6 = sub_10023C47C();
    sub_100136B1C(v6, v7);
    sub_100136B80(v5, v4, v3, v12);
    BodyStructure.DispositionAndLanguage.hash(into:)(a1);
    uint64_t v8 = sub_10023C47C();
    sub_100061688(v8, v9, v10, v11, v13, v5, v4, v3, v12);
  }
}

BOOL static BodyStructure.Multipart.Extension.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  sub_100221B3C();
  if ((v4 & 1) == 0 || (sub_100222314() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  uint64_t v15 = a2[3];
  uint64_t v14 = a2[4];
  uint64_t v17 = a2[5];
  uint64_t v16 = a2[6];
  uint64_t v19 = a2[7];
  uint64_t v18 = a2[8];
  uint64_t v21 = a2[9];
  uint64_t v20 = a2[10];
  uint64_t v22 = a2[11];
  if (v6 == 1)
  {
    if (v14 == 1) {
      return 1;
    }
    goto LABEL_7;
  }
  if (v14 == 1)
  {
LABEL_7:
    uint64_t v52 = v5;
    uint64_t v53 = v6;
    uint64_t v54 = v7;
    uint64_t v55 = v8;
    uint64_t v56 = v9;
    uint64_t v57 = v10;
    uint64_t v58 = v11;
    uint64_t v59 = v12;
    uint64_t v60 = v13;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v17;
    uint64_t v64 = v16;
    uint64_t v65 = v19;
    uint64_t v66 = v18;
    uint64_t v67 = v21;
    uint64_t v68 = v20;
    uint64_t v69 = v22;
    uint64_t v23 = v6;
    uint64_t v24 = v20;
    sub_100136AB8(v5, v23, v7, v8, v9, v10, v11, v12, v13);
    sub_100136AB8(v15, v14, v17, v16, v19, v18, v21, v24, v22);
    sub_100223D24(&v52);
    return 0;
  }
  v70[0] = v5;
  v70[1] = v6;
  v70[2] = v7;
  v70[3] = v8;
  v70[4] = v9;
  v70[5] = v10;
  v70[6] = v11;
  v70[7] = v12;
  v70[8] = v13;
  uint64_t v52 = v15;
  uint64_t v53 = v14;
  uint64_t v54 = v17;
  uint64_t v55 = v16;
  uint64_t v56 = v19;
  uint64_t v57 = v18;
  uint64_t v58 = v21;
  uint64_t v59 = v20;
  uint64_t v60 = v22;
  uint64_t v45 = v5;
  uint64_t v46 = v7;
  uint64_t v47 = v8;
  uint64_t v48 = v9;
  uint64_t v49 = v10;
  uint64_t v50 = v11;
  uint64_t v51 = v12;
  sub_100136AB8(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v25 = sub_10023C3B4();
  sub_100136AB8(v25, v26, v27, v28, v29, v30, v31, v32, v42);
  BOOL v44 = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v70, &v52);
  uint64_t v33 = sub_10023C3B4();
  sub_100061688(v33, v34, v35, v36, v37, v38, v39, v40, v43);
  sub_100061688(v45, v6, v46, v47, v48, v49, v50, v51, v13);
  return v44;
}

Swift::Int BodyStructure.Multipart.Extension.hashValue.getter()
{
  sub_1005E33F0();
  BodyStructure.Multipart.Extension.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_10023B038()
{
  sub_1005E33F0();
  BodyStructure.Multipart.Extension.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

void sub_10023B078(uint64_t *a1)
{
  sub_100239E80(*a1, a1[1], a1[2]);
  Swift::Int v4 = 0;
  uint64_t v5 = a1[4];
  if (v5 != 1)
  {
    uint64_t v25 = v3;
    uint64_t v6 = a1[3];
    uint64_t v7 = a1[7];
    uint64_t v29 = a1[6];
    uint64_t v30 = a1[5];
    uint64_t v8 = a1[8];
    uint64_t v9 = a1[9];
    uint64_t v10 = a1[10];
    uint64_t v11 = a1[11];
    uint64_t v28 = v10;
    Swift::Int v12 = *(unsigned int *)(v1 + 20);
    swift_retain();
    swift_retain();
    uint64_t v26 = v11;
    uint64_t v27 = v8;
    sub_100136AB8(v6, v5, v30, v29, v7, v8, v9, v28, v11);
    uint64_t v13 = sub_10023C410();
    sub_100210AD0(v13, v14, v15, v12);
    if (v17)
    {
      v18._uint64_t countAndFlagsBits = sub_10023C490();
      Swift::Int v16 = ByteBuffer._setStringSlowpath(_:at:)(v18, v12);
    }
    Swift::Int v19 = v16;
    v31[0] = v6;
    v31[1] = v5;
    v31[2] = v30;
    v31[3] = v29;
    v31[4] = v7;
    int v20 = *(_DWORD *)(v1 + 20);
    BOOL v21 = __CFADD__(v20, v16);
    int v22 = v20 + v16;
    if (v21) {
      goto LABEL_10;
    }
    *(_DWORD *)(v1 + 20) = v22;
    sub_100236618((uint64_t)v31);
    uint64_t v24 = v23;
    swift_release();
    swift_release();
    sub_100061688(v6, v5, v30, v29, v7, v27, v9, v28, v26);
    Swift::Int v4 = v19 + v24;
    if (__OFADD__(v19, v24))
    {
LABEL_11:
      __break(1u);
      return;
    }
    uint64_t v3 = v25;
  }
  if (__OFADD__(v3, v4))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t sub_10023B218(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10023C43C(a1, a2, a3);
  sub_10023C3DC();
  uint64_t v4 = sub_10023C458();
  v5(v4);
  return v3;
}

uint64_t sub_10023B25C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10023C43C(a1, a2, a3);
  sub_10023C3DC();
  uint64_t v4 = sub_10023C458();
  v5(v4);
  return v3;
}

uint64_t sub_10023B2A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10023C43C(a1, a2, a3);
  sub_10023C3DC();
  uint64_t v4 = sub_10023C458();
  v5(v4);
  return v3;
}

unint64_t sub_10023B2E8()
{
  unint64_t result = qword_100710820;
  if (!qword_100710820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710820);
  }
  return result;
}

unint64_t sub_10023B338()
{
  unint64_t result = qword_100710828;
  if (!qword_100710828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710828);
  }
  return result;
}

uint64_t _s9MultipartVwxx(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[4];
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = a1[7];
    if (result)
    {
      if (result == 1) {
        return result;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t result = a1[11];
    if (result)
    {
      swift_bridgeObjectRelease();
      uint64_t result = a1[14];
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void *_s9MultipartVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v5)
  {
    uint64_t v7 = a1 + 3;
    uint64_t v8 = a2 + 3;
    size_t v9 = 96;
    goto LABEL_6;
  }
  a1[3] = a2[3];
  a1[4] = v5;
  a1[5] = a2[5];
  uint64_t v6 = a2[7];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = a1 + 6;
      uint64_t v8 = a2 + 6;
      size_t v9 = 72;
LABEL_6:
      memcpy(v7, v8, v9);
      return a1;
    }
    a1[6] = a2[6];
    a1[7] = v6;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    a1[10] = a2[10];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v10 = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 4) = v10;
    a1[10] = a2[10];
  }
  uint64_t v12 = a2[11];
  if (v12)
  {
    a1[11] = v12;
    uint64_t v13 = a2[14];
    swift_bridgeObjectRetain();
    if (v13)
    {
      uint64_t v14 = a2[13];
      a1[12] = a2[12];
      a1[13] = v14;
      a1[14] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      a1[14] = a2[14];
    }
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 13) = v15;
  }
  return a1;
}

uint64_t _s9MultipartVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v5 = (void *)(a1 + 48);
      uint64_t v6 = (_OWORD *)(a2 + 48);
      uint64_t v9 = *(void *)(a2 + 56);
      swift_retain();
      swift_retain();
      swift_retain();
      if (v9)
      {
        if (v9 != 1)
        {
LABEL_10:
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_19;
        }
        goto LABEL_15;
      }
      goto LABEL_18;
    }
LABEL_12:
    long long v10 = (void *)(a1 + 24);
    uint64_t v11 = (const void *)(a2 + 24);
    size_t v12 = 96;
LABEL_16:
    memcpy(v10, v11, v12);
    return a1;
  }
  if (!v4)
  {
    sub_10023BA04((void *)(a1 + 24));
    goto LABEL_12;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v5 = (void *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a2 + 56);
  if (v7 == 1)
  {
    if (v8)
    {
      if (v8 != 1) {
        goto LABEL_10;
      }
      goto LABEL_15;
    }
LABEL_18:
    long long v14 = *v6;
    long long v15 = v6[1];
    v5[4] = *((void *)v6 + 4);
    *(_OWORD *)uint64_t v5 = v14;
    *((_OWORD *)v5 + 1) = v15;
LABEL_19:
    uint64_t v16 = *(void *)(a2 + 88);
    if (!v16)
    {
      long long v18 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v18;
      return a1;
    }
    goto LABEL_20;
  }
  if (v8 == 1)
  {
    sub_10023B9B0(a1 + 48);
LABEL_15:
    long long v10 = v5;
    uint64_t v11 = v6;
    size_t v12 = 72;
    goto LABEL_16;
  }
  if (v7)
  {
    if (v8)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_retain();
      swift_release();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_retain();
      swift_release();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100237E00(a1 + 48);
      uint64_t v20 = *(void *)(a2 + 80);
      long long v21 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 64) = v21;
      *(void *)(a1 + 80) = v20;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v22 = *v6;
    long long v23 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)uint64_t v5 = v22;
    *(_OWORD *)(a1 + 64) = v23;
  }
  uint64_t v24 = (_OWORD *)(a1 + 88);
  uint64_t v25 = (_OWORD *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (!v16)
    {
      long long v29 = *(_OWORD *)(a2 + 104);
      *uint64_t v24 = *v25;
      *(_OWORD *)(a1 + 104) = v29;
      return a1;
    }
LABEL_20:
    *(void *)(a1 + 88) = v16;
    uint64_t v17 = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    if (!v17)
    {
      long long v19 = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = v19;
      return a1;
    }
    goto LABEL_21;
  }
  if (!v16)
  {
    sub_100237EA8(a1 + 88);
    long long v30 = *(_OWORD *)(a2 + 104);
    *uint64_t v24 = *v25;
    *(_OWORD *)(a1 + 104) = v30;
    return a1;
  }
  *(void *)(a1 + 88) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = (long long *)(a1 + 96);
  uint64_t v27 = (long long *)(a2 + 96);
  uint64_t v28 = *(void *)(a2 + 112);
  if (!*(void *)(a1 + 112))
  {
    if (!v28)
    {
      long long v31 = *v27;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *uint64_t v26 = v31;
      return a1;
    }
LABEL_21:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v28)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100237E54(a1 + 96);
    uint64_t v32 = *(void *)(a2 + 112);
    *uint64_t v26 = *v27;
    *(void *)(a1 + 112) = v32;
  }
  return a1;
}

uint64_t sub_10023B9B0(uint64_t a1)
{
  return a1;
}

void *sub_10023BA04(void *a1)
{
  return a1;
}

void *_s9MultipartVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  if (!a1[4]) {
    goto LABEL_8;
  }
  uint64_t v5 = a2[4];
  if (!v5)
  {
    sub_10023BA04(a1 + 3);
LABEL_8:
    uint64_t v8 = a1 + 3;
    uint64_t v9 = a2 + 3;
    size_t v10 = 96;
    goto LABEL_9;
  }
  a1[3] = a2[3];
  swift_release();
  a1[4] = v5;
  swift_release();
  a1[5] = a2[5];
  swift_release();
  uint64_t v6 = a1[7];
  if (v6 != 1)
  {
    uint64_t v7 = a2[7];
    if (v7 == 1)
    {
      sub_10023B9B0((uint64_t)(a1 + 6));
      goto LABEL_6;
    }
    if (v6)
    {
      if (v7)
      {
        a1[6] = a2[6];
        a1[7] = v7;
        swift_bridgeObjectRelease();
        a1[8] = a2[8];
        swift_release();
        a1[9] = a2[9];
        swift_release();
        a1[10] = a2[10];
        swift_release();
        goto LABEL_16;
      }
      sub_100237E00((uint64_t)(a1 + 6));
    }
    long long v12 = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 4) = v12;
    a1[10] = a2[10];
LABEL_16:
    uint64_t v13 = a2[11];
    if (a1[11])
    {
      if (v13)
      {
        a1[11] = v13;
        swift_bridgeObjectRelease();
        if (a1[14])
        {
          uint64_t v14 = a2[14];
          if (v14)
          {
            uint64_t v15 = a2[13];
            a1[12] = a2[12];
            a1[13] = v15;
            swift_bridgeObjectRelease();
            a1[14] = v14;
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_100237E54((uint64_t)(a1 + 12));
        }
        *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
        a1[14] = a2[14];
        return a1;
      }
      sub_100237EA8((uint64_t)(a1 + 11));
    }
    long long v16 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 13) = v16;
    return a1;
  }
LABEL_6:
  uint64_t v8 = a1 + 6;
  uint64_t v9 = a2 + 6;
  size_t v10 = 72;
LABEL_9:
  memcpy(v8, v9, v10);
  return a1;
}

uint64_t _s9MultipartVwet(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for BodyStructure.Multipart()
{
  return &type metadata for BodyStructure.Multipart;
}

uint64_t _s9MultipartV9ExtensionVwxx(void *a1)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = a1[4];
  if (result)
  {
    if (result == 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t result = a1[8];
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = a1[11];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *_s9MultipartV9ExtensionVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = a1 + 3;
  uint64_t v6 = a2 + 3;
  uint64_t v7 = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  if (v7)
  {
    if (v7 == 1)
    {
      memcpy(a1 + 3, v6, 0x48uLL);
      return a1;
    }
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v8 = v6[1];
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 5) = v8;
    a1[7] = *((void *)v6 + 4);
  }
  uint64_t v10 = a2[8];
  if (v10)
  {
    a1[8] = v10;
    uint64_t v11 = a2[11];
    swift_bridgeObjectRetain();
    if (v11)
    {
      uint64_t v12 = a2[10];
      a1[9] = a2[9];
      a1[10] = v12;
      a1[11] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
      a1[11] = a2[11];
    }
  }
  else
  {
    long long v13 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v13;
  }
  return a1;
}

uint64_t _s9MultipartV9ExtensionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v4 = (long long *)(a1 + 24);
  uint64_t v5 = (long long *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a2 + 32);
  if (v6 == 1)
  {
    if (!v7)
    {
      long long v8 = *v5;
      long long v9 = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *uint64_t v4 = v8;
      *(_OWORD *)(a1 + 40) = v9;
LABEL_12:
      uint64_t v10 = *(void *)(a2 + 64);
      if (!v10)
      {
        long long v11 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v11;
        return a1;
      }
      goto LABEL_24;
    }
    if (v7 != 1)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  if (v7 == 1)
  {
    sub_10023B9B0(a1 + 24);
LABEL_7:
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x48uLL);
    return a1;
  }
  if (v6)
  {
    if (v7)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_retain();
      swift_release();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_retain();
      swift_release();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100237E00(a1 + 24);
      uint64_t v12 = *(void *)(a2 + 56);
      long long v13 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v13;
      *(void *)(a1 + 56) = v12;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v14 = *v5;
    long long v15 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *uint64_t v4 = v14;
    *(_OWORD *)(a1 + 40) = v15;
  }
  long long v16 = (_OWORD *)(a1 + 64);
  uint64_t v17 = (_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (!v10)
    {
      long long v25 = *(_OWORD *)(a2 + 80);
      *long long v16 = *v17;
      *(_OWORD *)(a1 + 80) = v25;
      return a1;
    }
LABEL_24:
    *(void *)(a1 + 64) = v10;
    uint64_t v21 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    if (!v21)
    {
      long long v22 = *(_OWORD *)(a2 + 72);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = v22;
      return a1;
    }
    goto LABEL_25;
  }
  if (!v10)
  {
    sub_100237EA8(a1 + 64);
    long long v23 = *(_OWORD *)(a2 + 80);
    *long long v16 = *v17;
    *(_OWORD *)(a1 + 80) = v23;
    return a1;
  }
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v18 = (long long *)(a1 + 72);
  long long v19 = (long long *)(a2 + 72);
  uint64_t v20 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88))
  {
    if (!v20)
    {
      long long v24 = *v19;
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *long long v18 = v24;
      return a1;
    }
LABEL_25:
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v20)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100237E54(a1 + 72);
    uint64_t v26 = *(void *)(a2 + 88);
    *long long v18 = *v19;
    *(void *)(a1 + 88) = v26;
  }
  return a1;
}

void *_s9MultipartV9ExtensionVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

void *_s9MultipartV9ExtensionVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  uint64_t v4 = a1[4];
  if (v4 == 1) {
    goto LABEL_4;
  }
  uint64_t v5 = a2[4];
  if (v5 != 1)
  {
    if (v4)
    {
      if (v5)
      {
        a1[3] = a2[3];
        a1[4] = v5;
        swift_bridgeObjectRelease();
        a1[5] = a2[5];
        swift_release();
        a1[6] = a2[6];
        swift_release();
        a1[7] = a2[7];
        swift_release();
        goto LABEL_11;
      }
      sub_100237E00((uint64_t)(a1 + 3));
    }
    long long v7 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 5) = v7;
    a1[7] = a2[7];
LABEL_11:
    uint64_t v8 = a2[8];
    if (a1[8])
    {
      if (v8)
      {
        a1[8] = v8;
        swift_bridgeObjectRelease();
        if (a1[11])
        {
          uint64_t v9 = a2[11];
          if (v9)
          {
            uint64_t v10 = a2[10];
            a1[9] = a2[9];
            a1[10] = v10;
            swift_bridgeObjectRelease();
            a1[11] = v9;
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_100237E54((uint64_t)(a1 + 9));
        }
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        a1[11] = a2[11];
        return a1;
      }
      sub_100237EA8((uint64_t)(a1 + 8));
    }
    long long v11 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v11;
    return a1;
  }
  sub_10023B9B0((uint64_t)(a1 + 3));
LABEL_4:
  memcpy(a1 + 3, a2 + 3, 0x48uLL);
  return a1;
}

uint64_t _s9MultipartV9ExtensionVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9MultipartV9ExtensionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyStructure.Multipart.Extension()
{
  return &type metadata for BodyStructure.Multipart.Extension;
}

uint64_t sub_10023C3B4()
{
  return v0;
}

uint64_t sub_10023C410()
{
  return 32;
}

void sub_10023C420(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  *(void *)uint64_t v7 = v6;
  *(void *)(v7 + 8) = v5;
  *(void *)(v7 + 16) = v4;
  *(__n128 *)(v7 + 24) = a1;
  *(__n128 *)(v7 + 40) = a2;
  *(__n128 *)(v7 + 56) = a3;
  *(__n128 *)(v7 + 72) = a4;
}

uint64_t sub_10023C43C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10000566C(a3);
}

uint64_t sub_10023C458()
{
  return v0;
}

uint64_t sub_10023C47C()
{
  return v0;
}

uint64_t sub_10023C490()
{
  return 32;
}

__n128 sub_10023C49C(__n128 a1, __n128 a2)
{
  *(__n128 *)(v2 + 8) = a1;
  *(__n128 *)(v2 + 24) = a2;
  __n128 result = v3[3];
  *(__n128 *)(v2 + 40) = result;
  return result;
}

void static BodyStructure.Singlepart.__derived_struct_equals(_:_:)()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  if (static BodyStructure.Singlepart.Kind.__derived_enum_equals(_:_:)(*v2, *v0))
  {
    memcpy(v78, v3 + 1, sizeof(v78));
    memcpy(__dst, v1 + 1, sizeof(__dst));
    if (static BodyStructure.Fields.__derived_struct_equals(_:_:)(v78, __dst))
    {
      uint64_t v4 = v3[11];
      uint64_t v5 = v3[12];
      uint64_t v6 = v3[13];
      uint64_t v7 = v3[14];
      uint64_t v8 = v3[15];
      uint64_t v9 = v3[16];
      uint64_t v10 = v3[17];
      uint64_t v11 = v3[18];
      uint64_t v12 = v3[19];
      uint64_t v13 = v3[20];
      uint64_t v14 = v3[21];
      uint64_t v15 = v1[11];
      uint64_t v16 = v1[12];
      uint64_t v18 = v1[13];
      uint64_t v17 = v1[14];
      uint64_t v19 = v1[15];
      uint64_t v20 = v1[16];
      uint64_t v22 = v1[17];
      uint64_t v21 = v1[18];
      uint64_t v23 = v1[19];
      uint64_t v24 = v1[20];
      uint64_t v25 = v1[21];
      if (v5 == 1)
      {
        if (v16 == 1) {
          goto LABEL_9;
        }
      }
      else if (v16 != 1)
      {
        v79[0] = v3[11];
        v79[1] = v5;
        v79[2] = v6;
        v79[3] = v7;
        v79[4] = v8;
        v79[5] = v9;
        v79[6] = v10;
        v79[7] = v11;
        v79[8] = v12;
        v79[9] = v13;
        v79[10] = v14;
        uint64_t v55 = v15;
        uint64_t v56 = v16;
        uint64_t v57 = v18;
        uint64_t v58 = v17;
        uint64_t v59 = v19;
        uint64_t v60 = v20;
        uint64_t v61 = v22;
        uint64_t v62 = v21;
        uint64_t v63 = v23;
        uint64_t v64 = v24;
        uint64_t v65 = v25;
        uint64_t v46 = v4;
        uint64_t v47 = v6;
        uint64_t v48 = v7;
        uint64_t v49 = v8;
        uint64_t v50 = v9;
        uint64_t v51 = v10;
        uint64_t v52 = v11;
        uint64_t v54 = v21;
        uint64_t v42 = v22;
        uint64_t v43 = v14;
        uint64_t v44 = v13;
        uint64_t v45 = v12;
        sub_100136A14(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
        uint64_t v30 = sub_100240780();
        sub_100136A14(v30, v31, v32, v17, v19, v20, v42, v54, v36, v38, v40);
        static BodyStructure.Singlepart.Extension.__derived_struct_equals(_:_:)(v79, &v55);
        uint64_t v33 = sub_100240780();
        sub_1000615E4(v33, v34, v35, v17, v19, v20, v42, v54, v37, v39, v41);
        sub_1000615E4(v46, v5, v47, v48, v49, v50, v51, v52, v45, v44, v43);
        goto LABEL_9;
      }
      uint64_t v55 = v3[11];
      uint64_t v56 = v5;
      uint64_t v57 = v6;
      uint64_t v58 = v7;
      uint64_t v59 = v8;
      uint64_t v60 = v9;
      uint64_t v61 = v10;
      uint64_t v62 = v11;
      uint64_t v63 = v12;
      uint64_t v64 = v13;
      uint64_t v65 = v14;
      uint64_t v66 = v15;
      uint64_t v67 = v16;
      uint64_t v68 = v18;
      uint64_t v69 = v17;
      uint64_t v70 = v19;
      uint64_t v71 = v20;
      uint64_t v72 = v22;
      uint64_t v73 = v21;
      uint64_t v74 = v23;
      uint64_t v75 = v24;
      uint64_t v76 = v25;
      uint64_t v26 = v5;
      uint64_t v53 = v21;
      uint64_t v27 = v22;
      uint64_t v28 = v16;
      uint64_t v29 = v23;
      sub_100136A14(v4, v26, v6, v7, v8, v9, v10, v11, v12, v13, v14);
      sub_100136A14(v15, v28, v18, v17, v19, v20, v27, v53, v29, v24, v25);
      sub_100223DC8((uint64_t)&v55);
    }
  }
LABEL_9:
  sub_1001FE57C();
}

void sub_10023C6E4()
{
  sub_1001FE5B4();
  uint64_t v2 = v1;
  sub_100232248(v1, &v39);
  sub_100232248(&v39, &v42);
  unint64_t v3 = v42;
  if (v42 >> 62)
  {
    uint64_t v4 = (void *)(v42 & 0x3FFFFFFFFFFFFFFFLL);
    if (v42 >> 62 == 1)
    {
      v42 &= 0x3FFFFFFFFFFFFFFFuLL;
      memcpy(__dst, v4 + 2, sizeof(__dst));
      memcpy(v38, v2 + 1, sizeof(v38));
      sub_100223E88((uint64_t)__dst);
      uint64_t v5 = sub_10023DF38(__dst, v38);
      sub_100224004((uint64_t)__dst);
      goto LABEL_7;
    }
    v42 &= 0x3FFFFFFFFFFFFFFFuLL;
    uint64_t v11 = v4[2];
    uint64_t v12 = v4[3];
    uint64_t v13 = v4[4];
    memcpy(__dst, v2 + 1, 0x50uLL);
    sub_10023E354(v11, v12, v13, __dst);
  }
  else
  {
    v42 &= 0x3FFFFFFFFFFFFFFFuLL;
    uint64_t v6 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v7 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v8 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v9 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
    memcpy(__dst, v2 + 1, 0x50uLL);
    sub_10023DE38(v6, v7, v8, v9, __dst);
  }
  uint64_t v5 = v10;
LABEL_7:
  uint64_t v14 = v2[12];
  if (v14 == 1)
  {
LABEL_13:
    sub_1001FE57C();
    return;
  }
  uint64_t v15 = v2[11];
  uint64_t v16 = v2[13];
  uint64_t v37 = v2[14];
  uint64_t v17 = v2[15];
  uint64_t v18 = v2[16];
  uint64_t v20 = v2[17];
  uint64_t v19 = v2[18];
  uint64_t v22 = v2[19];
  uint64_t v21 = v2[20];
  uint64_t v23 = v2[21];
  uint64_t v36 = v15;
  v40[0] = v15;
  v40[1] = v14;
  uint64_t v40[2] = v16;
  v40[3] = v37;
  v40[4] = v17;
  v40[5] = v18;
  v40[6] = v20;
  v40[7] = v19;
  v40[8] = v22;
  v40[9] = v21;
  v40[10] = v23;
  uint64_t v35 = v14;
  swift_bridgeObjectRetain();
  uint64_t v34 = v23;
  sub_100136AB8(v16, v37, v17, v18, v20, v19, v22, v21, v23);
  sub_1002407A4(32, 0xE100000000000000, v0 + 8);
  if (v25)
  {
    v26._uint64_t countAndFlagsBits = sub_10023C410();
    Swift::Int v24 = ByteBuffer._setStringSlowpath(_:at:)(v26, v27);
  }
  int v28 = *(_DWORD *)(v0 + 20);
  BOOL v29 = __CFADD__(v28, v24);
  int v30 = v28 + v24;
  if (v29)
  {
    __break(1u);
    goto LABEL_15;
  }
  *(_DWORD *)(v0 + 20) = v30;
  uint64_t v31 = v5 + v24;
  if (__OFADD__(v5, v24))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10023E518(v40);
  uint64_t v33 = v32;
  sub_1000615E4(v36, v35, v16, v37, v17, v18, v20, v19, v22, v21, v34);
  if (!__OFADD__(v31, v33)) {
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
}

uint64_t BodyStructure.Singlepart.kind.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t BodyStructure.Singlepart.kind.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  void *v1 = a1;
  return result;
}

uint64_t BodyStructure.Singlepart.fields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023DC18(v1 + 8, a1);
}

uint64_t BodyStructure.Singlepart.fields.setter(uint64_t a1)
{
  return sub_10023DC74(a1, v1 + 8);
}

uint64_t BodyStructure.Singlepart.extension.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023B218(v1 + 88, a1, &qword_100710830);
}

uint64_t BodyStructure.Singlepart.extension.setter(uint64_t a1)
{
  return sub_10023B25C(a1, v1 + 88, &qword_100710830);
}

__n128 BodyStructure.Singlepart.init(kind:fields:extension:)()
{
  sub_1002407DC();
  sub_10023B2A0(v3, (uint64_t)v14, &qword_100710830);
  uint64_t v4 = v15;
  uint64_t v5 = *v0;
  uint64_t v6 = v0[9];
  __n128 result = (__n128)v14[0];
  long long v8 = v14[1];
  long long v9 = v14[2];
  long long v10 = v14[3];
  long long v11 = v14[4];
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = v5;
  long long v12 = *(_OWORD *)(v0 + 3);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 1);
  *(_OWORD *)(v2 + 32) = v12;
  long long v13 = *(_OWORD *)(v0 + 7);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v0 + 5);
  *(_OWORD *)(v2 + 64) = v13;
  *(void *)(v2 + 80) = v6;
  *(__n128 *)(v2 + 88) = result;
  *(_OWORD *)(v2 + 104) = v8;
  *(_OWORD *)(v2 + 120) = v9;
  *(_OWORD *)(v2 + 136) = v10;
  *(_OWORD *)(v2 + 152) = v11;
  *(void *)(v2 + 168) = v4;
  return result;
}

void BodyStructure.Singlepart.hash(into:)(uint64_t a1)
{
  swift_retain();
  uint64_t v3 = sub_100240798();
  BodyStructure.Singlepart.Kind.hash(into:)(v3, v4);
  swift_release();
  memcpy(__dst, v1 + 1, sizeof(__dst));
  sub_10023DCD0((uint64_t)__dst);
  BodyStructure.Fields.hash(into:)();
  sub_10023DD44((uint64_t)__dst);
  uint64_t v5 = v1[12];
  if (v5 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    uint64_t v6 = v1[21];
    uint64_t v7 = v1[19];
    uint64_t v12 = v1[20];
    uint64_t v13 = v1[18];
    uint64_t v8 = v1[16];
    uint64_t v9 = v1[14];
    uint64_t v10 = v1[15];
    uint64_t v11 = v1[13];
    uint64_t v14 = v1[17];
    uint64_t v17 = v1[11];
    uint64_t v15 = v17;
    uint64_t v18 = v5;
    uint64_t v19 = v11;
    uint64_t v20 = v9;
    uint64_t v21 = v10;
    uint64_t v22 = v8;
    uint64_t v23 = v14;
    uint64_t v24 = v13;
    uint64_t v25 = v7;
    uint64_t v26 = v12;
    uint64_t v27 = v6;
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_100136AB8(v11, v9, v10, v8, v14, v13, v7, v12, v6);
    BodyStructure.Singlepart.Extension.hash(into:)(a1);
    sub_1000615E4(v15, v5, v11, v9, v10, v8, v14, v13, v7, v12, v6);
  }
}

BOOL static BodyStructure.Singlepart.Kind.__derived_enum_equals(_:_:)(unint64_t a1, unint64_t a2)
{
  if (!(a1 >> 62))
  {
    if (a2 >> 62) {
      return 0;
    }
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v6 = *(void *)(a2 + 40);
    BOOL v8 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (!v8 && (sub_1005E3290() & 1) == 0) {
      return 0;
    }
    BOOL v9 = v4 == v7 && v5 == v6;
    return v9 || (sub_1005E3290() & 1) != 0;
  }
  if (a1 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return 0;
    }
    uint64_t v10 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v11 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
    BOOL v12 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
       && *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    return (v12 || (sub_1005E3290() & 1) != 0) && v10 == v11;
  }
  memcpy(v14, (const void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(v14));
  if (a2 >> 62 != 1) {
    return 0;
  }
  memcpy(__dst, (const void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
  sub_100223E88((uint64_t)v14);
  sub_100223E88((uint64_t)__dst);
  BOOL v3 = static BodyStructure.Singlepart.Message.__derived_struct_equals(_:_:)(v14, __dst);
  sub_100224004((uint64_t)__dst);
  sub_100224004((uint64_t)v14);
  return v3;
}

Swift::Int BodyStructure.Singlepart.hashValue.getter()
{
  sub_10021701C();
  BodyStructure.Singlepart.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_10023CD74()
{
  sub_1005E33F0();
  BodyStructure.Singlepart.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

void BodyStructure.Singlepart.Kind.hash(into:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      memcpy(__dst, (const void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 16), sizeof(__dst));
      sub_1005E3410(1uLL);
      sub_100223E88((uint64_t)__dst);
      BodyStructure.Singlepart.Message.hash(into:)();
      sub_100224004((uint64_t)__dst);
    }
    else
    {
      Swift::UInt v2 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      sub_1005E3410(2uLL);
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      sub_1005E3410(v2);
    }
  }
  else
  {
    sub_1005E3410(0);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
}

BOOL static BodyStructure.Singlepart.Message.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1005E3290(), result = 0, (v5 & 1) != 0))
  {
    memcpy(__dst, a1 + 2, sizeof(__dst));
    memcpy(v17, a2 + 2, sizeof(v17));
    if (static Envelope.__derived_struct_equals(_:_:)(__dst, (uint64_t)v17))
    {
      sub_10013AE3C((uint64_t)(a1 + 17), (uint64_t)v16);
      sub_10013AE3C((uint64_t)(a2 + 17), (uint64_t)v15);
      sub_10013AE3C((uint64_t)v16, (uint64_t)v21);
      int v7 = sub_10013AEAC((uint64_t)v21);
      BOOL v8 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v21);
      if (v7 == 1)
      {
        memcpy(v19, v8, 0x78uLL);
        sub_10013AE3C((uint64_t)v15, (uint64_t)v22);
        int v9 = sub_10013AEAC((uint64_t)v22);
        uint64_t v10 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v22);
        if (v9 == 1)
        {
          memcpy(v20, v10, 0x78uLL);
          sub_10013AF38((uint64_t)v16, sub_100136870);
          sub_10013AF38((uint64_t)v15, sub_100136870);
          char v11 = static BodyStructure.Multipart.__derived_struct_equals(_:_:)(v19, v20);
          goto LABEL_12;
        }
      }
      else
      {
        memcpy(v19, v8, sizeof(v19));
        sub_10013AE3C((uint64_t)v15, (uint64_t)v22);
        int v12 = sub_10013AEAC((uint64_t)v22);
        uint64_t v13 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v22);
        if (v12 != 1)
        {
          memcpy(v20, v13, sizeof(v20));
          sub_10013AF38((uint64_t)v16, sub_100136870);
          sub_10013AF38((uint64_t)v15, sub_100136870);
          char v11 = static BodyStructure.Singlepart.__derived_struct_equals(_:_:)(v19, v20);
LABEL_12:
          char v14 = v11;
          sub_10013AF38((uint64_t)v15, sub_100061440);
          sub_10013AF38((uint64_t)v16, sub_100061440);
          if (v14) {
            return a1[40] == a2[40];
          }
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL static BodyStructure.Singlepart.Text.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a4 && a2 == a5) {
    return a3 == a6;
  }
  char v9 = sub_1005E3290();
  BOOL result = 0;
  if (v9) {
    return a3 == a6;
  }
  return result;
}

Swift::Int BodyStructure.Singlepart.Kind.hashValue.getter(unint64_t a1)
{
  sub_10021701C();
  BodyStructure.Singlepart.Kind.hash(into:)((uint64_t)v3, a1);
  return sub_1005E3470();
}

Swift::Int sub_10023D1B4()
{
  return BodyStructure.Singlepart.Kind.hashValue.getter(*v0);
}

void sub_10023D1BC(uint64_t a1)
{
  BodyStructure.Singlepart.Kind.hash(into:)(a1, *v1);
}

Swift::Int sub_10023D1C4()
{
  unint64_t v1 = *v0;
  sub_1005E33F0();
  BodyStructure.Singlepart.Kind.hash(into:)((uint64_t)v3, v1);
  return sub_1005E3470();
}

BOOL sub_10023D208(unint64_t *a1, unint64_t *a2)
{
  return static BodyStructure.Singlepart.Kind.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t Envelope.date.getter()
{
  return sub_100240798();
}

uint64_t BodyStructure.Singlepart.Message.envelope.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023E764(v1 + 16, a1);
}

uint64_t BodyStructure.Singlepart.Message.envelope.setter(uint64_t a1)
{
  return sub_10023E7C0(a1, v1 + 16);
}

uint64_t BodyStructure.Singlepart.Message.body.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023E81C(v1 + 136, a1);
}

uint64_t BodyStructure.Singlepart.Message.body.setter(uint64_t a1)
{
  return sub_10023E878(a1, v1 + 136);
}

Swift::UInt32 (__swiftcall *RumpAuthenticatedURL.authenticatedURLRump.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t BodyStructure.Singlepart.Message.lineCount.getter()
{
  return *(void *)(v0 + 320);
}

uint64_t BodyStructure.Singlepart.Message.lineCount.setter(uint64_t result)
{
  *(void *)(v1 + 320) = result;
  return result;
}

Swift::UInt32 (__swiftcall *BodyStructure.Singlepart.Message.lineCount.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

void *BodyStructure.Singlepart.Message.init(message:envelope:body:lineCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  sub_10013AE3C(a4, (uint64_t)v15);
  sub_10013AE3C((uint64_t)v15, (uint64_t)v16);
  int v11 = *(_DWORD *)(a3 + 32);
  __int16 v12 = *(_WORD *)(a3 + 36);
  *(void *)__src = a1;
  *(void *)&__src[8] = a2;
  long long v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)&__src[16] = *(_OWORD *)a3;
  *(_OWORD *)&__src[32] = v13;
  *(_DWORD *)&__src[48] = v11;
  *(_WORD *)&__src[52] = v12;
  __src[54] = *(unsigned char *)(a3 + 38);
  *(_OWORD *)&__src[56] = *(_OWORD *)(a3 + 40);
  *(_OWORD *)&__src[72] = *(_OWORD *)(a3 + 56);
  *(_OWORD *)&__src[88] = *(_OWORD *)(a3 + 72);
  *(_OWORD *)&__src[104] = *(_OWORD *)(a3 + 88);
  *(_OWORD *)&__src[120] = *(_OWORD *)(a3 + 104);
  sub_10013AE3C((uint64_t)v16, (uint64_t)&__src[136]);
  *(void *)&__src[320] = a5;
  return memcpy(a6, __src, 0x148uLL);
}

void BodyStructure.Singlepart.Message.hash(into:)()
{
  sub_1001FE5B4();
  uint64_t v2 = v1;
  long long v21 = *v0;
  swift_bridgeObjectRetain();
  sub_100240798();
  sub_1005E1DB0();
  sub_10002A77C((uint64_t)&v21);
  memcpy(__dst, v0 + 1, sizeof(__dst));
  sub_10023E8D4((uint64_t)__dst);
  Envelope.hash(into:)();
  sub_10023E97C((uint64_t)__dst);
  sub_10013AE3C((uint64_t)v0 + 136, (uint64_t)v23);
  sub_10013AE3C((uint64_t)v23, (uint64_t)v24);
  if (sub_10013AEAC((uint64_t)v24) == 1)
  {
    uint64_t v3 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v24);
    uint64_t v4 = *(void *)(v3 + 16);
    v22[0] = *(_OWORD *)v3;
    *(void *)&v22[1] = v4;
    sub_1002406E0(v3);
    sub_1005E3410(1uLL);
    sub_10013AE3C((uint64_t)v23, (uint64_t)v19);
    uint64_t v5 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v19);
    uint64_t v6 = *(void *)(v5 + 40);
    uint64_t v17 = *(void *)(v5 + 32);
    uint64_t v18 = *(void *)(v5 + 24);
    uint64_t v7 = *(void *)(v5 + 48);
    uint64_t v8 = *(void *)(v5 + 56);
    uint64_t v9 = *(void *)(v5 + 64);
    uint64_t v10 = *(void *)(v5 + 72);
    uint64_t v16 = *(void *)(v5 + 80);
    long long v15 = *(_OWORD *)(v5 + 88);
    uint64_t v11 = *(void *)(v5 + 104);
    uint64_t v12 = *(void *)(v5 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100136C1C(v18, v17, v6, v7, v8, v9, v10, v16, v15, *((uint64_t *)&v15 + 1), v11, v12);
    BodyStructure.Multipart.hash(into:)(v2);
  }
  else
  {
    long long v13 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v24);
    memcpy(v22, v13, sizeof(v22));
    sub_1005E3410(0);
    sub_10013AE3C((uint64_t)v23, (uint64_t)v19);
    uint64_t v14 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v19);
    sub_10022C168(v14);
    BodyStructure.Singlepart.hash(into:)(v2);
  }
  sub_10013AF38((uint64_t)v23, sub_100061440);
  sub_1005E3410(*((void *)v0 + 40));
  sub_1001FE57C();
}

Swift::Int BodyStructure.Singlepart.Message.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10023D5B8()
{
  memcpy(__dst, v0, sizeof(__dst));
  return BodyStructure.Singlepart.Message.hashValue.getter();
}

void sub_10023D5F4()
{
  memcpy(__dst, v0, sizeof(__dst));
  BodyStructure.Singlepart.Message.hash(into:)();
}

Swift::Int sub_10023D640()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_1005E33F0();
  BodyStructure.Singlepart.Message.hash(into:)();
  return sub_1005E3470();
}

BOOL sub_10023D6A0(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static BodyStructure.Singlepart.Message.__derived_struct_equals(_:_:)(v4, __dst);
}

void BodyStructure.Singlepart.Text.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, Swift::UInt a4)
{
}

Swift::Int BodyStructure.Singlepart.Text.hashValue.getter(uint64_t a1, uint64_t a2, Swift::UInt a3)
{
  return sub_1005E3470();
}

Swift::Int sub_10023D7C8()
{
  return BodyStructure.Singlepart.Text.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

void sub_10023D7D4(uint64_t a1)
{
  BodyStructure.Singlepart.Text.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

Swift::Int sub_10023D7E0()
{
  Swift::UInt v1 = *(void *)(v0 + 16);
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3410(v1);
  return sub_1005E3470();
}

BOOL sub_10023D850(uint64_t *a1, uint64_t *a2)
{
  return static BodyStructure.Singlepart.Text.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t BodyStructure.Singlepart.Extension.dispositionAndLanguage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10023B218(v1 + 16, a1, &qword_100710818);
}

uint64_t BodyStructure.Singlepart.Extension.dispositionAndLanguage.setter(uint64_t a1)
{
  return sub_10023B25C(a1, v1 + 16, &qword_100710818);
}

__n128 BodyStructure.Singlepart.Extension.init(digest:dispositionAndLanguage:)()
{
  sub_1002407DC();
  sub_10023B2A0(v3, (uint64_t)v9, &qword_100710818);
  uint64_t v4 = v10;
  __n128 result = (__n128)v9[0];
  long long v6 = v9[1];
  long long v7 = v9[2];
  long long v8 = v9[3];
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = v0;
  *(__n128 *)(v2 + 16) = result;
  *(_OWORD *)(v2 + 32) = v6;
  *(_OWORD *)(v2 + 48) = v7;
  *(_OWORD *)(v2 + 64) = v8;
  *(void *)(v2 + 80) = v4;
  return result;
}

void BodyStructure.Singlepart.Extension.hash(into:)(uint64_t a1)
{
  if (v1[1])
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  if (v1[3] == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    uint64_t v3 = v1[9];
    uint64_t v5 = v1[7];
    uint64_t v4 = v1[8];
    uint64_t v12 = v1[10];
    uint64_t v13 = v1[6];
    sub_1005E3420(1u);
    uint64_t v6 = sub_1002407F0();
    sub_100136B1C(v6, v7);
    sub_100136B80(v5, v4, v3, v12);
    BodyStructure.DispositionAndLanguage.hash(into:)(a1);
    uint64_t v8 = sub_1002407F0();
    sub_100061688(v8, v9, v10, v11, v13, v5, v4, v3, v12);
  }
}

BOOL static BodyStructure.Singlepart.Extension.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (char v7 = sub_1005E3290(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = a1[2];
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    uint64_t v12 = a1[5];
    uint64_t v13 = a1[6];
    uint64_t v14 = a1[7];
    uint64_t v15 = a1[8];
    uint64_t v16 = a1[9];
    uint64_t v17 = a1[10];
    uint64_t v19 = a2[2];
    uint64_t v18 = a2[3];
    uint64_t v21 = a2[4];
    uint64_t v20 = a2[5];
    uint64_t v23 = a2[6];
    uint64_t v22 = a2[7];
    uint64_t v25 = a2[8];
    uint64_t v24 = a2[9];
    uint64_t v26 = a2[10];
    if (v10 == 1)
    {
      if (v18 == 1) {
        return 1;
      }
      goto LABEL_14;
    }
    if (v18 == 1)
    {
LABEL_14:
      uint64_t v55 = v9;
      uint64_t v56 = v10;
      uint64_t v57 = v11;
      uint64_t v58 = v12;
      uint64_t v59 = v13;
      uint64_t v60 = v14;
      uint64_t v61 = v15;
      uint64_t v62 = v16;
      uint64_t v63 = v17;
      uint64_t v64 = v19;
      uint64_t v65 = v18;
      uint64_t v66 = v21;
      uint64_t v67 = v20;
      uint64_t v68 = v23;
      uint64_t v69 = v22;
      uint64_t v70 = v25;
      uint64_t v71 = v24;
      uint64_t v72 = v26;
      uint64_t v27 = v10;
      uint64_t v28 = v24;
      sub_100136AB8(v9, v27, v11, v12, v13, v14, v15, v16, v17);
      sub_100136AB8(v19, v18, v21, v20, v23, v22, v25, v28, v26);
      sub_100223D24(&v55);
      return 0;
    }
    v73[0] = v9;
    v73[1] = v10;
    v73[2] = v11;
    v73[3] = v12;
    v73[4] = v13;
    v73[5] = v14;
    v73[6] = v15;
    v73[7] = v16;
    v73[8] = v17;
    uint64_t v55 = v19;
    uint64_t v56 = v18;
    uint64_t v57 = v21;
    uint64_t v58 = v20;
    uint64_t v59 = v23;
    uint64_t v60 = v22;
    uint64_t v61 = v25;
    uint64_t v62 = v24;
    uint64_t v63 = v26;
    uint64_t v48 = v9;
    uint64_t v49 = v11;
    uint64_t v50 = v12;
    uint64_t v51 = v13;
    uint64_t v52 = v14;
    uint64_t v53 = v15;
    uint64_t v54 = v16;
    sub_100136AB8(v9, v10, v11, v12, v13, v14, v15, v16, v17);
    uint64_t v29 = sub_10023C3B4();
    sub_100136AB8(v29, v30, v31, v32, v33, v34, v35, v36, v45);
    BOOL v47 = static BodyStructure.DispositionAndLanguage.__derived_struct_equals(_:_:)(v73, &v55);
    uint64_t v37 = sub_10023C3B4();
    sub_100061688(v37, v38, v39, v40, v41, v42, v43, v44, v46);
    sub_100061688(v48, v10, v49, v50, v51, v52, v53, v54, v17);
    return v47;
  }
  return result;
}

uint64_t sub_10023DC18(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10023DC74(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10023DCD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10023DD44(uint64_t a1)
{
  return a1;
}

Swift::Int BodyStructure.Singlepart.Extension.hashValue.getter()
{
  sub_10021701C();
  BodyStructure.Singlepart.Extension.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_10023DDF8()
{
  sub_1005E33F0();
  BodyStructure.Singlepart.Extension.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

void sub_10023DE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_100286F4C();
  sub_1002407A4(32, 0xE100000000000000, v5 + 8);
  if (v8) {
    sub_1002407BC();
  }
  sub_1001F4888();
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v5 + 20) = v10;
  BOOL v12 = __OFADD__(v7, v9);
  uint64_t v13 = v7 + v9;
  if (v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_100285CD8();
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_100210AD0(32, 0xE100000000000000, v5 + 8, *(_DWORD *)(v5 + 20));
  if (v16) {
    sub_1002407BC();
  }
  sub_1001F4888();
  if (v11) {
    goto LABEL_15;
  }
  *(_DWORD *)(v5 + 20) = v18;
  uint64_t v19 = v15 + v17;
  if (__OFADD__(v15, v17))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_100238760(a5);
  if (__OFADD__(v19, v20)) {
LABEL_17:
  }
    __break(1u);
}

void sub_10023DF38()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = v0 + 8;
  Swift::Int v7 = *(unsigned int *)(v0 + 20);
  uint64_t v8 = sub_10024074C();
  sub_1002407A4(v8, v9, v6);
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = sub_10024074C();
    Swift::Int v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v7);
  }
  Swift::Int v13 = v10;
  int v14 = *(_DWORD *)(v1 + 20);
  BOOL v15 = __CFADD__(v14, v10);
  int v16 = v14 + v10;
  if (v15)
  {
    __break(1u);
    goto LABEL_37;
  }
  *(_DWORD *)(v1 + 20) = v16;
  sub_100285CD8();
  Swift::Int v18 = v13 + v17;
  if (__OFADD__(v13, v17))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  sub_100240714(32);
  if (v19) {
    sub_100240730(32);
  }
  sub_1001F4888();
  if (v15) {
    goto LABEL_38;
  }
  *(_DWORD *)(v1 + 20) = v21;
  BOOL v22 = __OFADD__(v18, v20);
  Swift::Int v23 = v18 + v20;
  if (v22)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  sub_100238760(v3);
  BOOL v22 = __OFADD__(v23, v24);
  uint64_t v25 = v23 + v24;
  if (v22)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  sub_100240714(32);
  if (v26) {
    sub_100240730(32);
  }
  sub_1001F4888();
  if (v15) {
    goto LABEL_41;
  }
  *(_DWORD *)(v1 + 20) = v28;
  BOOL v22 = __OFADD__(v25, v27);
  uint64_t v29 = v25 + v27;
  if (v22)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  memcpy(__dst, (const void *)(v5 + 16), sizeof(__dst));
  sub_10026C7F0((uint64_t)__dst);
  BOOL v22 = __OFADD__(v29, v30);
  uint64_t v31 = v29 + v30;
  if (v22)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  sub_100240714(32);
  if (v33) {
    Swift::Int v32 = sub_100240730(32);
  }
  int v34 = *(_DWORD *)(v1 + 20);
  if (__CFADD__(v34, v32)) {
    goto LABEL_44;
  }
  *(_DWORD *)(v1 + 20) = v34 + v32;
  Swift::Int v35 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  sub_10013AE3C(v5 + 136, (uint64_t)v82);
  sub_100240714(40);
  if (v37) {
    Swift::Int v36 = sub_100240730(40);
  }
  Swift::Int v38 = v36;
  int v39 = *(_DWORD *)(v1 + 20);
  BOOL v15 = __CFADD__(v39, v36);
  int v40 = v39 + v36;
  if (v15) {
    goto LABEL_46;
  }
  *(_DWORD *)(v1 + 20) = v40;
  sub_10013AE3C((uint64_t)v82, (uint64_t)v81);
  if (sub_10013AEAC((uint64_t)v81) == 1)
  {
    Swift::Int v73 = v35;
    uint64_t v74 = v6;
    uint64_t v41 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v81);
    uint64_t v42 = *(void *)(v41 + 16);
    v84[0] = *(_OWORD *)v41;
    *(void *)&v84[1] = v42;
    sub_1002406E0(v41);
    sub_10013AE3C((uint64_t)v82, (uint64_t)&v79);
    uint64_t v43 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v79);
    uint64_t v44 = *(void *)(v43 + 24);
    uint64_t v45 = *(void *)(v43 + 32);
    uint64_t v46 = *(void *)(v43 + 40);
    uint64_t v48 = *(void *)(v43 + 48);
    uint64_t v47 = *(void *)(v43 + 56);
    uint64_t v49 = *(void *)(v43 + 64);
    uint64_t v76 = *(void *)(v43 + 80);
    uint64_t v77 = *(void *)(v43 + 72);
    long long v75 = *(_OWORD *)(v43 + 88);
    Swift::Int v78 = v38;
    uint64_t v50 = *(void *)(v43 + 104);
    uint64_t v51 = *(void *)(v43 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100136C1C(v44, v45, v46, v48, v47, v49, v77, v76, v75, *((uint64_t *)&v75 + 1), v50, v51);
    uint64_t v52 = sub_10023A17C(v84);
    sub_10013AF38((uint64_t)v82, sub_100061440);
    Swift::Int v53 = v78 + v52;
    if (__OFADD__(v78, v52))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    uint64_t v6 = v74;
    Swift::Int v35 = v73;
LABEL_26:
    sub_100240714(41);
    if (v59) {
      Swift::Int v58 = sub_100240730(41);
    }
    int v60 = *(_DWORD *)(v1 + 20);
    Swift::Int v61 = (v60 + v58);
    if (!__CFADD__(v60, v58))
    {
      *(_DWORD *)(v1 + 20) = v61;
      Swift::Int v62 = v53 + v58;
      if (!__OFADD__(v53, v58))
      {
        Swift::Int v63 = v35 + v62;
        if (!__OFADD__(v35, v62))
        {
          uint64_t v79 = 32;
          unint64_t v80 = 0xE100000000000000;
          v85._uint64_t countAndFlagsBits = sub_1005E3230();
          sub_1005E1E30(v85);
          swift_bridgeObjectRelease();
          uint64_t v65 = v79;
          uint64_t v64 = (void *)v80;
          swift_bridgeObjectRetain();
          sub_100210AD0(v65, (unint64_t)v64, v6, v61);
          Swift::Int v67 = v66;
          char v69 = v68;
          swift_bridgeObjectRelease();
          if (v69)
          {
            v70._uint64_t countAndFlagsBits = v65;
            v70._object = v64;
            Swift::Int v67 = ByteBuffer._setStringSlowpath(_:at:)(v70, v61);
          }
          swift_bridgeObjectRelease();
          int v71 = *(_DWORD *)(v1 + 20);
          BOOL v15 = __CFADD__(v71, v67);
          int v72 = v71 + v67;
          if (!v15)
          {
            *(_DWORD *)(v1 + 20) = v72;
            if (!__OFADD__(v63, v67))
            {
              sub_1001FE57C();
              return;
            }
            goto LABEL_51;
          }
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v54 = (const void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v81);
  memcpy(v84, v54, sizeof(v84));
  sub_10013AE3C((uint64_t)v82, (uint64_t)&v79);
  uint64_t v55 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v79);
  sub_10022C168(v55);
  sub_10023C6E4();
  uint64_t v57 = v56;
  sub_10013AF38((uint64_t)v82, sub_100061440);
  BOOL v22 = __OFADD__(v38, v57);
  Swift::Int v53 = v38 + v57;
  if (!v22) {
    goto LABEL_26;
  }
LABEL_53:
  __break(1u);
}

void sub_10023E354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = v4 + 8;
  Swift::Int v8 = *(unsigned int *)(v4 + 20);
  uint64_t v9 = sub_100240768();
  sub_1002407A4(v9, v10, v7);
  if (v12)
  {
    v13._uint64_t countAndFlagsBits = sub_100240768();
    Swift::Int v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v8);
  }
  Swift::Int v14 = v11;
  int v15 = *(_DWORD *)(v5 + 20);
  BOOL v16 = __CFADD__(v15, v11);
  int v17 = v15 + v11;
  if (v16)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v5 + 20) = v17;
  sub_100285CD8();
  Swift::Int v19 = v14 + v18;
  if (__OFADD__(v14, v18))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_100210AD0(32, 0xE100000000000000, v7, *(_DWORD *)(v5 + 20));
  if (v20)
  {
    v21._uint64_t countAndFlagsBits = sub_10023C410();
    ByteBuffer._setStringSlowpath(_:at:)(v21, v22);
  }
  sub_1001F4888();
  if (v16) {
    goto LABEL_17;
  }
  *(_DWORD *)(v5 + 20) = v24;
  BOOL v25 = __OFADD__(v19, v23);
  Swift::Int v26 = v19 + v23;
  if (v25)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_100238760(a4);
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v37._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v37);
  swift_bridgeObjectRelease();
  Swift::Int v29 = *(unsigned int *)(v5 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(32, 0xE100000000000000, v7, v29);
  Swift::Int v31 = v30;
  char v33 = v32;
  swift_bridgeObjectRelease();
  if (v33)
  {
    v34._uint64_t countAndFlagsBits = 32;
    v34._object = (void *)0xE100000000000000;
    Swift::Int v31 = ByteBuffer._setStringSlowpath(_:at:)(v34, v29);
  }
  swift_bridgeObjectRelease();
  int v35 = *(_DWORD *)(v5 + 20);
  BOOL v16 = __CFADD__(v35, v31);
  int v36 = v35 + v31;
  if (v16) {
    goto LABEL_20;
  }
  *(_DWORD *)(v5 + 20) = v36;
  if (__OFADD__(v28, v31)) {
LABEL_21:
  }
    __break(1u);
}

void sub_10023E518(void *a1)
{
  uint64_t v2 = v1;
  sub_10023B2A0((uint64_t)a1, (uint64_t)v37, &qword_1007107F8);
  sub_10023B2A0((uint64_t)v37, (uint64_t)&v39, &qword_1007107F8);
  unint64_t v4 = v40;
  if (v40)
  {
    unint64_t v5 = v39;
    swift_bridgeObjectRetain();
    Swift::Int v6 = sub_10025DCBC(v5, v4);
    sub_10002A77C((uint64_t)v37);
  }
  else
  {
    Swift::Int v7 = *(unsigned int *)(v2 + 20);
    sub_100210AD0(4999502, 0xE300000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
    if (v9)
    {
      v10._uint64_t countAndFlagsBits = 4999502;
      v10._object = (void *)0xE300000000000000;
      Swift::Int v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v7);
    }
    Swift::Int v6 = v8;
    int v11 = *(_DWORD *)(v2 + 20);
    BOOL v12 = __CFADD__(v11, v8);
    int v13 = v11 + v8;
    if (v12) {
      goto LABEL_19;
    }
    *(_DWORD *)(v2 + 20) = v13;
  }
  uint64_t v14 = a1[3];
  if (v14 == 1)
  {
    Swift::Int v15 = 0;
  }
  else
  {
    Swift::Int v33 = v6;
    uint64_t v16 = a1[2];
    uint64_t v34 = a1[4];
    uint64_t v17 = a1[6];
    uint64_t v36 = a1[5];
    uint64_t v18 = a1[7];
    uint64_t v35 = a1[8];
    uint64_t v20 = a1[9];
    uint64_t v19 = a1[10];
    Swift::Int v21 = *(unsigned int *)(v2 + 20);
    swift_retain();
    swift_retain();
    sub_100136AB8(v16, v14, v34, v36, v17, v18, v35, v20, v19);
    uint64_t v22 = sub_10023C410();
    sub_100210AD0(v22, v23, v24, v21);
    if (v26)
    {
      v27._uint64_t countAndFlagsBits = 32;
      v27._object = (void *)0xE100000000000000;
      Swift::Int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v21);
    }
    Swift::Int v28 = v25;
    v38[0] = v16;
    v38[1] = v14;
    v38[2] = v34;
    v38[3] = v36;
    v38[4] = v17;
    int v29 = *(_DWORD *)(v2 + 20);
    BOOL v12 = __CFADD__(v29, v25);
    int v30 = v29 + v25;
    if (v12) {
      goto LABEL_17;
    }
    *(_DWORD *)(v2 + 20) = v30;
    sub_100236618((uint64_t)v38);
    uint64_t v32 = v31;
    swift_release();
    swift_release();
    sub_100061688(v16, v14, v34, v36, v17, v18, v35, v20, v19);
    Swift::Int v15 = v28 + v32;
    if (__OFADD__(v28, v32))
    {
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
    Swift::Int v6 = v33;
  }
  if (__OFADD__(v6, v15))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

uint64_t sub_10023E764(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10023E7C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10023E81C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10023E878(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10023E8D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10023E97C(uint64_t a1)
{
  return a1;
}

unint64_t sub_10023EA28()
{
  unint64_t result = qword_100710838;
  if (!qword_100710838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710838);
  }
  return result;
}

unint64_t sub_10023EA78()
{
  unint64_t result = qword_100710840;
  if (!qword_100710840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710840);
  }
  return result;
}

unint64_t sub_10023EAC8()
{
  unint64_t result = qword_100710848;
  if (!qword_100710848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710848);
  }
  return result;
}

unint64_t sub_10023EB18()
{
  unint64_t result = qword_100710850;
  if (!qword_100710850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710850);
  }
  return result;
}

unint64_t sub_10023EB68()
{
  unint64_t result = qword_100710858;
  if (!qword_100710858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710858);
  }
  return result;
}

uint64_t _s10SinglepartVwxx(void *a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[12];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t result = a1[14];
    if (result)
    {
      if (result == 1) {
        return result;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t result = a1[18];
    if (result)
    {
      swift_bridgeObjectRelease();
      uint64_t result = a1[21];
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void *_s10SinglepartVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  a1[10] = a2[10];
  uint64_t v9 = a2[12];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 1)
  {
    Swift::String v10 = a1 + 11;
    int v11 = a2 + 11;
    size_t v12 = 88;
LABEL_6:
    memcpy(v10, v11, v12);
    return a1;
  }
  a1[11] = a2[11];
  a1[12] = v9;
  uint64_t v13 = a2[14];
  swift_bridgeObjectRetain();
  if (v13)
  {
    if (v13 == 1)
    {
      Swift::String v10 = a1 + 13;
      int v11 = a2 + 13;
      size_t v12 = 72;
      goto LABEL_6;
    }
    a1[13] = a2[13];
    a1[14] = v13;
    uint64_t v16 = a2[16];
    a1[15] = a2[15];
    a1[16] = v16;
    a1[17] = a2[17];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 15) = v15;
    a1[17] = a2[17];
  }
  uint64_t v17 = a2[18];
  if (v17)
  {
    a1[18] = v17;
    uint64_t v18 = a2[21];
    swift_bridgeObjectRetain();
    if (v18)
    {
      uint64_t v19 = a2[20];
      a1[19] = a2[19];
      a1[20] = v19;
      a1[21] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
      a1[21] = a2[21];
    }
  }
  else
  {
    long long v20 = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    *((_OWORD *)a1 + 10) = v20;
  }
  return a1;
}

uint64_t _s10SinglepartVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v4 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) == 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      uint64_t v5 = (void *)(a1 + 104);
      uint64_t v6 = (_OWORD *)(a2 + 104);
      uint64_t v7 = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      if (v7)
      {
        if (v7 != 1) {
          goto LABEL_12;
        }
        goto LABEL_15;
      }
LABEL_18:
      long long v14 = *v6;
      long long v15 = v6[1];
      v5[4] = *((void *)v6 + 4);
      *(_OWORD *)uint64_t v5 = v14;
      *((_OWORD *)v5 + 1) = v15;
LABEL_19:
      uint64_t v16 = *(void *)(a2 + 144);
      if (!v16)
      {
        long long v18 = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 160) = v18;
        return a1;
      }
      goto LABEL_20;
    }
LABEL_8:
    uint64_t v8 = (void *)(a1 + 88);
    uint64_t v9 = (const void *)(a2 + 88);
    size_t v10 = 88;
LABEL_16:
    memcpy(v8, v9, v10);
    return a1;
  }
  if (v4 == 1)
  {
    sub_10023F298((void *)(a1 + 88));
    goto LABEL_8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(a1 + 104);
  uint64_t v6 = (_OWORD *)(a2 + 104);
  uint64_t v11 = *(void *)(a1 + 112);
  uint64_t v12 = *(void *)(a2 + 112);
  if (v11 == 1)
  {
    if (v12)
    {
      if (v12 != 1)
      {
LABEL_12:
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_19;
      }
      goto LABEL_15;
    }
    goto LABEL_18;
  }
  if (v12 == 1)
  {
    sub_10023B9B0(a1 + 104);
LABEL_15:
    uint64_t v8 = v5;
    uint64_t v9 = v6;
    size_t v10 = 72;
    goto LABEL_16;
  }
  if (v11)
  {
    if (v12)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_retain();
      swift_release();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_retain();
      swift_release();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100237E00(a1 + 104);
      uint64_t v20 = *(void *)(a2 + 136);
      long long v21 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 120) = v21;
      *(void *)(a1 + 136) = v20;
    }
  }
  else if (v12)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v22 = *v6;
    long long v23 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)uint64_t v5 = v22;
    *(_OWORD *)(a1 + 120) = v23;
  }
  uint64_t v24 = (_OWORD *)(a1 + 144);
  Swift::Int v25 = (_OWORD *)(a2 + 144);
  uint64_t v16 = *(void *)(a2 + 144);
  if (!*(void *)(a1 + 144))
  {
    if (!v16)
    {
      long long v29 = *(_OWORD *)(a2 + 160);
      *uint64_t v24 = *v25;
      *(_OWORD *)(a1 + 160) = v29;
      return a1;
    }
LABEL_20:
    *(void *)(a1 + 144) = v16;
    uint64_t v17 = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    if (!v17)
    {
      long long v19 = *(_OWORD *)(a2 + 152);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = v19;
      return a1;
    }
    goto LABEL_21;
  }
  if (!v16)
  {
    sub_100237EA8(a1 + 144);
    long long v30 = *(_OWORD *)(a2 + 160);
    *uint64_t v24 = *v25;
    *(_OWORD *)(a1 + 160) = v30;
    return a1;
  }
  *(void *)(a1 + 144) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v26 = (long long *)(a1 + 152);
  Swift::String v27 = (long long *)(a2 + 152);
  uint64_t v28 = *(void *)(a2 + 168);
  if (!*(void *)(a1 + 168))
  {
    if (!v28)
    {
      long long v31 = *v27;
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *char v26 = v31;
      return a1;
    }
LABEL_21:
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v28)
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100237E54(a1 + 152);
    uint64_t v32 = *(void *)(a2 + 168);
    *char v26 = *v27;
    *(void *)(a1 + 168) = v32;
  }
  return a1;
}

void *sub_10023F298(void *a1)
{
  return a1;
}

void *_s10SinglepartVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

void *_s10SinglepartVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[7];
  a1[6] = a2[6];
  a1[7] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  if (a1[12] == 1) {
    goto LABEL_4;
  }
  uint64_t v7 = a2[12];
  if (v7 != 1)
  {
    a1[11] = a2[11];
    a1[12] = v7;
    swift_bridgeObjectRelease();
    uint64_t v11 = a1[14];
    if (v11 == 1)
    {
LABEL_8:
      uint64_t v8 = a1 + 13;
      uint64_t v9 = a2 + 13;
      size_t v10 = 72;
      goto LABEL_9;
    }
    uint64_t v12 = a2[14];
    if (v12 == 1)
    {
      sub_10023B9B0((uint64_t)(a1 + 13));
      goto LABEL_8;
    }
    if (v11)
    {
      if (v12)
      {
        a1[13] = a2[13];
        a1[14] = v12;
        swift_bridgeObjectRelease();
        a1[15] = a2[15];
        swift_release();
        a1[16] = a2[16];
        swift_release();
        a1[17] = a2[17];
        swift_release();
        goto LABEL_16;
      }
      sub_100237E00((uint64_t)(a1 + 13));
    }
    long long v14 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 15) = v14;
    a1[17] = a2[17];
LABEL_16:
    uint64_t v15 = a2[18];
    if (a1[18])
    {
      if (v15)
      {
        a1[18] = v15;
        swift_bridgeObjectRelease();
        if (a1[21])
        {
          uint64_t v16 = a2[21];
          if (v16)
          {
            uint64_t v17 = a2[20];
            a1[19] = a2[19];
            a1[20] = v17;
            swift_bridgeObjectRelease();
            a1[21] = v16;
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_100237E54((uint64_t)(a1 + 19));
        }
        *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
        a1[21] = a2[21];
        return a1;
      }
      sub_100237EA8((uint64_t)(a1 + 18));
    }
    long long v18 = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    *((_OWORD *)a1 + 10) = v18;
    return a1;
  }
  sub_10023F298(a1 + 11);
LABEL_4:
  uint64_t v8 = a1 + 11;
  uint64_t v9 = a2 + 11;
  size_t v10 = 88;
LABEL_9:
  memcpy(v8, v9, v10);
  return a1;
}

uint64_t _s10SinglepartVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10SinglepartVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for BodyStructure.Singlepart()
{
}

void type metadata accessor for BodyStructure.Singlepart.Kind()
{
}

void _s10SinglepartV7MessageVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 144);
  a1 += 136;
  sub_100061440(v2, v3, *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
}

uint64_t _s10SinglepartV7MessageVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = a2 + 136;
  uint64_t v29 = *(void *)(a2 + 136);
  *(_DWORD *)(a1 + 51) = *(_DWORD *)(a2 + 51);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v21 = *(void *)(a2 + 88);
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v9;
  uint64_t v11 = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 88) = v21;
  *(void *)(a1 + 96) = v11;
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = v12;
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  uint64_t v27 = *(void *)(a2 + 152);
  uint64_t v28 = *(void *)(a2 + 144);
  uint64_t v25 = *(void *)(a2 + 168);
  uint64_t v26 = *(void *)(a2 + 160);
  uint64_t v23 = *(void *)(a2 + 184);
  uint64_t v24 = *(void *)(a2 + 176);
  uint64_t v22 = *(void *)(a2 + 192);
  uint64_t v37 = *(void *)(a2 + 208);
  uint64_t v38 = *(void *)(a2 + 200);
  uint64_t v35 = *(void *)(a2 + 224);
  uint64_t v36 = *(void *)(a2 + 216);
  uint64_t v33 = *(void *)(a2 + 240);
  uint64_t v34 = *(void *)(a2 + 232);
  uint64_t v31 = *(void *)(a2 + 256);
  uint64_t v32 = *(void *)(a2 + 248);
  uint64_t v14 = *(void *)(a2 + 272);
  uint64_t v30 = *(void *)(a2 + 264);
  uint64_t v15 = *(void *)(a2 + 280);
  uint64_t v16 = *(void *)(a2 + 288);
  uint64_t v17 = *(void *)(a2 + 296);
  uint64_t v18 = *(void *)(a2 + 304);
  char v19 = *(unsigned char *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100136870(v29, v28, v27, v26, v25, v24, v23, v22, v38, v37, v36, v35, v34, v33, v32, v31, v30, v14, v15,
    v16,
    v17,
    v18,
    v19);
  *(void *)(a1 + 136) = v29;
  *(void *)(a1 + 144) = v28;
  *(void *)(a1 + 152) = v27;
  *(void *)(a1 + 160) = v26;
  *(void *)(a1 + 168) = v25;
  *(void *)(a1 + 176) = v24;
  *(void *)(a1 + 184) = v23;
  *(void *)(a1 + 192) = v22;
  *(void *)(a1 + 200) = v38;
  *(void *)(a1 + 208) = v37;
  *(void *)(a1 + 216) = v36;
  *(void *)(a1 + 224) = v35;
  *(void *)(a1 + 232) = v34;
  *(void *)(a1 + 240) = v33;
  *(void *)(a1 + 248) = v32;
  *(void *)(a1 + 256) = v31;
  *(void *)(a1 + 264) = v30;
  *(void *)(a1 + 272) = v14;
  *(void *)(a1 + 280) = v15;
  *(void *)(a1 + 288) = v16;
  *(void *)(a1 + 296) = v17;
  *(void *)(a1 + 304) = v18;
  *(unsigned char *)(a1 + 312) = v19;
  *(void *)(a1 + 320) = *(void *)(v6 + 184);
  return a1;
}

uint64_t _s10SinglepartV7MessageVwca(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 40) = *((_DWORD *)v2 + 10);
  *(_DWORD *)(a1 + 44) = *((_DWORD *)v2 + 11);
  *(_DWORD *)(a1 + 48) = *((_DWORD *)v2 + 12);
  *(_WORD *)(a1 + 52) = *((_WORD *)v2 + 26);
  *(unsigned char *)(a1 + 54) = *((unsigned char *)v2 + 54);
  *(void *)(a1 + 56) = v2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = v2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = v2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = v2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = v2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = v2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = v2[13];
  *(void *)(a1 + 112) = v2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = v2[15];
  *(void *)(a1 + 128) = v2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[17];
  uint64_t v5 = v2[18];
  v2 += 17;
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v32 = v2[8];
  uint64_t v33 = v2[9];
  uint64_t v34 = v2[10];
  uint64_t v35 = v2[11];
  uint64_t v36 = v2[12];
  uint64_t v37 = v2[13];
  uint64_t v38 = v2[14];
  uint64_t v39 = v2[15];
  uint64_t v40 = v2[16];
  uint64_t v41 = v2[17];
  uint64_t v42 = v2[18];
  uint64_t v43 = v2[19];
  uint64_t v45 = v2[20];
  uint64_t v46 = v2[21];
  char v44 = *((unsigned char *)v2 + 176);
  uint64_t v9 = v4;
  uint64_t v10 = v5;
  uint64_t v11 = v2[2];
  uint64_t v12 = v2[3];
  uint64_t v13 = v2[7];
  sub_100136870(v4, v5, v11, v12, v6, v7, v8, v13, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v45,
    v46,
    v44);
  uint64_t v14 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v9;
  uint64_t v15 = *(void *)(a1 + 144);
  uint64_t v16 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = v10;
  *(void *)(a1 + 152) = v11;
  uint64_t v17 = *(void *)(a1 + 160);
  uint64_t v18 = *(void *)(a1 + 168);
  *(void *)(a1 + 160) = v12;
  *(void *)(a1 + 168) = v6;
  uint64_t v19 = *(void *)(a1 + 176);
  uint64_t v20 = *(void *)(a1 + 184);
  *(void *)(a1 + 176) = v7;
  *(void *)(a1 + 184) = v8;
  uint64_t v21 = *(void *)(a1 + 192);
  long long v22 = *(_OWORD *)(a1 + 200);
  *(void *)(a1 + 192) = v13;
  *(void *)(a1 + 200) = v32;
  long long v23 = *(_OWORD *)(a1 + 216);
  *(void *)(a1 + 208) = v33;
  *(void *)(a1 + 216) = v34;
  long long v24 = *(_OWORD *)(a1 + 232);
  *(void *)(a1 + 224) = v35;
  *(void *)(a1 + 232) = v36;
  long long v25 = *(_OWORD *)(a1 + 248);
  *(void *)(a1 + 240) = v37;
  *(void *)(a1 + 248) = v38;
  *(void *)(a1 + 256) = v39;
  long long v26 = *(_OWORD *)(a1 + 264);
  long long v27 = *(_OWORD *)(a1 + 280);
  *(void *)(a1 + 264) = v40;
  *(void *)(a1 + 272) = v41;
  *(void *)(a1 + 280) = v42;
  char v28 = *(unsigned char *)(a1 + 312);
  *(unsigned char *)(a1 + 312) = v44;
  uint64_t v29 = *(void *)(a1 + 296);
  uint64_t v30 = *(void *)(a1 + 304);
  *(void *)(a1 + 288) = v43;
  *(void *)(a1 + 296) = v45;
  *(void *)(a1 + 304) = v46;
  sub_100061440(v14, v15, v16, v17, v18, v19, v20, v21, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27,
    *((uint64_t *)&v27 + 1),
    v29,
    v30,
    v28);
  *(void *)(a1 + 320) = v2[23];
  return a1;
}

void *_s10SinglepartV7MessageVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x148uLL);
}

uint64_t _s10SinglepartV7MessageVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (long long *)(a1 + 264);
  uint64_t v5 = (long long *)(a2 + 264);
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  char v10 = *((unsigned char *)v5 + 48);
  uint64_t v11 = *(void *)(a1 + 136);
  uint64_t v12 = *(void *)(a1 + 144);
  uint64_t v13 = *(void *)(a1 + 152);
  uint64_t v14 = *(void *)(a1 + 160);
  uint64_t v15 = *(void *)(a1 + 168);
  uint64_t v16 = *(void *)(a1 + 176);
  uint64_t v17 = *(void *)(a1 + 184);
  uint64_t v18 = *(void *)(a1 + 192);
  long long v19 = *(_OWORD *)(a1 + 200);
  long long v20 = *(_OWORD *)(a1 + 216);
  long long v21 = *(_OWORD *)(a1 + 232);
  long long v22 = *(_OWORD *)(a1 + 248);
  long long v23 = *v4;
  long long v24 = v4[1];
  uint64_t v25 = *((void *)v4 + 4);
  uint64_t v26 = *(void *)(a1 + 304);
  char v27 = *((unsigned char *)v4 + 48);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  long long v28 = v5[1];
  *uint64_t v4 = *v5;
  v4[1] = v28;
  v4[2] = v5[2];
  *((unsigned char *)v4 + 48) = v10;
  sub_100061440(v11, v12, v13, v14, v15, v16, v17, v18, v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
    *((uint64_t *)&v24 + 1),
    v25,
    v26,
    v27);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  return a1;
}

uint64_t _s10SinglepartV7MessageVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 328))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10SinglepartV7MessageVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 328) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 328) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for BodyStructure.Singlepart.Message()
{
}

void *sub_10023FEC0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *_s10SinglepartV4TextVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *_s10SinglepartV4TextVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t _s10SinglepartV4TextVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for BodyStructure.Singlepart.Text()
{
}

uint64_t _s10SinglepartV9ExtensionVwxx(void *a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = a1[3];
  if (result)
  {
    if (result == 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t result = a1[7];
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = a1[10];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *_s10SinglepartV9ExtensionVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6)
  {
    if (v6 == 1)
    {
      memcpy(a1 + 2, v5, 0x48uLL);
      return a1;
    }
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v7 = v5[1];
    *((_OWORD *)a1 + 1) = *v5;
    *((_OWORD *)a1 + 2) = v7;
    a1[6] = *((void *)v5 + 4);
  }
  uint64_t v9 = a2[7];
  if (v9)
  {
    a1[7] = v9;
    uint64_t v10 = a2[10];
    swift_bridgeObjectRetain();
    if (v10)
    {
      uint64_t v11 = a2[9];
      a1[8] = a2[8];
      a1[9] = v11;
      a1[10] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      a1[10] = a2[10];
    }
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 9) = v12;
  }
  return a1;
}

uint64_t _s10SinglepartV9ExtensionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 16);
  uint64_t v5 = (long long *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 24);
  if (v6 == 1)
  {
    if (!v7)
    {
      long long v8 = *v5;
      long long v9 = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *uint64_t v4 = v8;
      *(_OWORD *)(a1 + 32) = v9;
LABEL_12:
      uint64_t v10 = *(void *)(a2 + 56);
      if (!v10)
      {
        long long v11 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = v11;
        return a1;
      }
      goto LABEL_24;
    }
    if (v7 != 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  if (v7 == 1)
  {
    sub_10023B9B0(a1 + 16);
LABEL_7:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x48uLL);
    return a1;
  }
  if (v6)
  {
    if (v7)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_retain();
      swift_release();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_retain();
      swift_release();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100237E00(a1 + 16);
      uint64_t v12 = *(void *)(a2 + 48);
      long long v13 = *(_OWORD *)(a2 + 32);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 32) = v13;
      *(void *)(a1 + 48) = v12;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v14 = *v5;
    long long v15 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *uint64_t v4 = v14;
    *(_OWORD *)(a1 + 32) = v15;
  }
  uint64_t v16 = (_OWORD *)(a1 + 56);
  uint64_t v17 = (_OWORD *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (!v10)
    {
      long long v25 = *(_OWORD *)(a2 + 72);
      *uint64_t v16 = *v17;
      *(_OWORD *)(a1 + 72) = v25;
      return a1;
    }
LABEL_24:
    *(void *)(a1 + 56) = v10;
    uint64_t v21 = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    if (!v21)
    {
      long long v22 = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = v22;
      return a1;
    }
    goto LABEL_25;
  }
  if (!v10)
  {
    sub_100237EA8(a1 + 56);
    long long v23 = *(_OWORD *)(a2 + 72);
    *uint64_t v16 = *v17;
    *(_OWORD *)(a1 + 72) = v23;
    return a1;
  }
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (long long *)(a1 + 64);
  long long v19 = (long long *)(a2 + 64);
  uint64_t v20 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
    if (!v20)
    {
      long long v24 = *v19;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *uint64_t v18 = v24;
      return a1;
    }
LABEL_25:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v20)
  {
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100237E54(a1 + 64);
    uint64_t v26 = *(void *)(a2 + 80);
    *uint64_t v18 = *v19;
    *(void *)(a1 + 80) = v26;
  }
  return a1;
}

void *_s10SinglepartV9ExtensionVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

void *_s10SinglepartV9ExtensionVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[3];
  if (v5 == 1) {
    goto LABEL_4;
  }
  uint64_t v6 = a2[3];
  if (v6 != 1)
  {
    if (v5)
    {
      if (v6)
      {
        a1[2] = a2[2];
        a1[3] = v6;
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        swift_release();
        a1[5] = a2[5];
        swift_release();
        a1[6] = a2[6];
        swift_release();
        goto LABEL_11;
      }
      sub_100237E00((uint64_t)(a1 + 2));
    }
    long long v8 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v8;
    a1[6] = a2[6];
LABEL_11:
    uint64_t v9 = a2[7];
    if (a1[7])
    {
      if (v9)
      {
        a1[7] = v9;
        swift_bridgeObjectRelease();
        if (a1[10])
        {
          uint64_t v10 = a2[10];
          if (v10)
          {
            uint64_t v11 = a2[9];
            a1[8] = a2[8];
            a1[9] = v11;
            swift_bridgeObjectRelease();
            a1[10] = v10;
            swift_bridgeObjectRelease();
            return a1;
          }
          sub_100237E54((uint64_t)(a1 + 8));
        }
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        a1[10] = a2[10];
        return a1;
      }
      sub_100237EA8((uint64_t)(a1 + 7));
    }
    long long v12 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 9) = v12;
    return a1;
  }
  sub_10023B9B0((uint64_t)(a1 + 2));
LABEL_4:
  memcpy(a1 + 2, a2 + 2, 0x48uLL);
  return a1;
}

uint64_t _s10SinglepartV9ExtensionVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 88))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s10SinglepartV9ExtensionVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for BodyStructure.Singlepart.Extension()
{
}

__n128 sub_1002406E0(uint64_t a1)
{
  *(_OWORD *)(v1 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(a1 + 88);
  __n128 result = *(__n128 *)(a1 + 104);
  *(__n128 *)(v1 + 104) = result;
  return result;
}

void sub_100240714(uint64_t a1)
{
  sub_100210AD0(a1, 0xE100000000000000, v2, v1);
}

Swift::Int sub_100240730(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t sub_10024074C()
{
  return 0x4547415353454D22;
}

uint64_t sub_100240768()
{
  return 0x20225458455422;
}

uint64_t sub_100240780()
{
  return v0;
}

uint64_t sub_100240798()
{
  return v0;
}

void sub_1002407A4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_100210AD0(a1, a2, a3, v3);
}

Swift::Int sub_1002407BC()
{
  uint64_t v2 = 32;
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v2, v0);
}

uint64_t sub_1002407F0()
{
  return v0;
}

uint64_t MessageToDownload.size.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

IMAP2Persistence::SearchRequest::RangesToExclude __swiftcall SearchRequest.RangesToExclude.init(ranges:skipForMessageCount:)(Swift::OpaquePointer ranges, Swift::Int_optional skipForMessageCount)
{
  skipForMessageCount.is_nil &= 1u;
  result.skipForMessageCount = skipForMessageCount;
  result.ranges = ranges;
  return result;
}

void ByteRange.hash(into:)(uint64_t a1, Swift::UInt a2, Swift::UInt a3, char a4)
{
  if (a4)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(a3);
  }
}

uint64_t static ByteRange.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1 == a4)
  {
    if (a3)
    {
      if (a6) {
        return 1;
      }
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
  }
  return 0;
}

Swift::Int ByteRange.hashValue.getter(Swift::UInt a1, Swift::UInt a2, char a3)
{
  if (a3)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(a2);
  }
  return sub_1005E3470();
}

Swift::Int sub_10024091C()
{
  return ByteRange.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100240928(uint64_t a1)
{
  ByteRange.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100240934()
{
  Swift::UInt v2 = *(void *)v0;
  Swift::UInt v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_1005E33F0();
  sub_1005E3410(v2);
  if (v3 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(v1);
  }
  return sub_1005E3470();
}

unint64_t sub_1002409B4()
{
  unint64_t result = qword_100710860;
  if (!qword_100710860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710860);
  }
  return result;
}

uint64_t sub_100240A00(uint64_t a1, uint64_t a2)
{
  return static ByteRange.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t getEnumTagSinglePayload for MailboxSyncStatus(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MailboxSyncStatus(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ByteRange()
{
  return &type metadata for ByteRange;
}

uint64_t sub_100240A78(uint64_t a1)
{
  uint64_t v2 = v1;
  v13._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  sub_1005E1E30(v14);
  sub_1001F9E88(a1);
  v15._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 62;
  v16._object = (void *)0xE100000000000000;
  sub_1005E1E30(v16);
  Swift::Int v4 = *(unsigned int *)(v1 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(60, 0xE100000000000000, v1 + 8, v4);
  Swift::Int v6 = v5;
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    v8._uint64_t countAndFlagsBits = 60;
    v8._object = (void *)0xE100000000000000;
    Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v4);
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v10 = *(_DWORD *)(v2 + 20);
  BOOL v11 = __CFADD__(v10, v6);
  int v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 + 20) = v12;
    return v6;
  }
  return result;
}

uint64_t sub_100240BC8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = sub_1005E3230();
  Swift::String v8 = (void *)v7;
  Swift::Int v9 = *(unsigned int *)(v4 + 20);
  sub_100210AD0(v6, v7, v4 + 8, *(_DWORD *)(v4 + 20));
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = v6;
    v12._object = v8;
    Swift::Int v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  Swift::Int v13 = v10;
  uint64_t result = swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(v4 + 20);
  Swift::Int v16 = (v15 + v13);
  if (__CFADD__(v15, v13))
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v4 + 20) = v16;
  if (a3)
  {
    Swift::Int v18 = 0;
  }
  else
  {
    v25._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_100210AD0(46, 0xE100000000000000, v4 + 8, v16);
    Swift::Int v18 = v17;
    char v20 = v19;
    swift_bridgeObjectRelease();
    if (v20)
    {
      v21._uint64_t countAndFlagsBits = 46;
      v21._object = (void *)0xE100000000000000;
      Swift::Int v18 = ByteBuffer._setStringSlowpath(_:at:)(v21, v16);
    }
    uint64_t result = swift_bridgeObjectRelease();
    int v22 = *(_DWORD *)(v4 + 20);
    BOOL v23 = __CFADD__(v22, v18);
    int v24 = v22 + v18;
    if (v23) {
      goto LABEL_14;
    }
    *(_DWORD *)(v4 + 20) = v24;
  }
  uint64_t result = v13 + v18;
  if (__OFADD__(v13, v18))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t MessagePath.ByteRange.range.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(unsigned char *)(v3 + 16) = a3 & 1;
  return result;
}

unint64_t sub_100240D5C()
{
  unint64_t result = qword_100710868;
  if (!qword_100710868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710868);
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePath.ByteRange()
{
  return &type metadata for MessagePath.ByteRange;
}

unint64_t sub_100240DB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_1005E1F30() != a1 || v9 != a2)
  {
    char v11 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v11) {
      return v8;
    }
    unint64_t v8 = sub_1005E1DD0();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

void *Capability.literalPlus.unsafeMutableAddressor()
{
  if (qword_10070FCA0 != -1) {
    swift_once();
  }
  return &static Capability.literalPlus;
}

void *Capability.literalMinus.unsafeMutableAddressor()
{
  if (qword_10070FCA8 != -1) {
    swift_once();
  }
  return &static Capability.literalMinus;
}

void *Capability.binary.unsafeMutableAddressor()
{
  if (qword_10070FB70 != -1) {
    swift_once();
  }
  return &static Capability.binary;
}

uint64_t Capability.name.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    sub_1005E1F50();
    sub_10024669C();
    a1 = sub_1002466C8();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t sub_100241000(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1005E1F50();
  }
  __break(1u);
  return result;
}

uint64_t Capability.value.getter(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  unint64_t v6 = sub_1005E1DD0();
  swift_bridgeObjectRetain();
  sub_100241000(v6, a1, a2);
  sub_10024669C();
  uint64_t v7 = sub_1002466C8();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t Capability.init(_:)(uint64_t a1, unint64_t a2)
{
  return sub_100246674();
}

void Capability.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3450(a4 >> 14);
  }
}

uint64_t static Capability.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  BOOL v12 = a1 == a5 && a2 == a6;
  if (v12 || (char v13 = sub_1005E3290(), result = 0, (v13 & 1) != 0))
  {
    if (a4)
    {
      if (a8) {
        return 1;
      }
    }
    else if ((a8 & 1) == 0 && (a7 ^ a3) < 0x4000)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

Swift::Int Capability.hashValue.getter(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a4)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3450(a3 >> 14);
  }
  return sub_1005E3470();
}

Swift::Int sub_1002412DC()
{
  return Capability.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1002412EC(uint64_t a1)
{
  Capability.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

Swift::Int sub_1002412FC()
{
  unint64_t v1 = *(void *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 24);
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3450(v1 >> 14);
  }
  return sub_1005E3470();
}

uint64_t sub_100241394(uint64_t a1, uint64_t a2)
{
  return static Capability.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

const char *Capability.ContextKind.search.unsafeMutableAddressor()
{
  return "SEARCH";
}

uint64_t static Capability.ContextKind.search.getter()
{
  return 0x484352414553;
}

const char *Capability.ContextKind.sort.unsafeMutableAddressor()
{
  return "SORT";
}

void static Capability.ContextKind.sort.getter()
{
}

const char *Capability.SortKind.display.unsafeMutableAddressor()
{
  return "DISPLAY";
}

uint64_t static Capability.SortKind.display.getter()
{
  return 0x59414C50534944;
}

const char *Capability.ThreadKind.orderedSubject.unsafeMutableAddressor()
{
  return "ORDEREDSUBJECT";
}

uint64_t static Capability.ThreadKind.orderedSubject.getter()
{
  return 0x534445524544524FLL;
}

const char *Capability.ThreadKind.references.unsafeMutableAddressor()
{
  return "REFERENCES";
}

uint64_t static Capability.ThreadKind.references.getter()
{
  return 0x434E455245464552;
}

const char *Capability.StatusKind.size.unsafeMutableAddressor()
{
  return "SIZE";
}

void static Capability.StatusKind.size.getter()
{
}

const char *Capability.UTF8Kind.accept.unsafeMutableAddressor()
{
  return "ACCEPT";
}

uint64_t static Capability.UTF8Kind.accept.getter()
{
  return 0x545045434341;
}

const char *Capability.RightsKind.tekx.unsafeMutableAddressor()
{
  return "TEKX";
}

void static Capability.RightsKind.tekx.getter()
{
}

uint64_t sub_1002414D0()
{
  return Capability.UTF8Kind.hashValue.getter(*v0, v0[1]);
}

uint64_t sub_1002414D8(uint64_t a1)
{
  return Capability.UTF8Kind.hash(into:)(a1, *v1, v1[1]);
}

uint64_t sub_1002414E0(void *a1, void *a2)
{
  return static Media.Subtype.__derived_struct_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

const char *Capability.CompressionKind.deflate.unsafeMutableAddressor()
{
  return "DEFLATE";
}

uint64_t static Capability.CompressionKind.deflate.getter()
{
  return 0x4554414C464544;
}

uint64_t sub_100241518()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x30000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.acl = 4997953;
  unk_100761910 = 0xE300000000000000;
  qword_100761918 = v0;
  byte_100761920 = v5 & 1;
  return result;
}

uint64_t *Capability.acl.unsafeMutableAddressor()
{
  if (qword_10070FB60 != -1) {
    swift_once();
  }
  return &static Capability.acl;
}

uint64_t static Capability.acl.getter()
{
  if (qword_10070FB60 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

void sub_1002416A0()
{
  if ((0x80000001005E6290 & 0x2000000000000000) != 0) {
    unint64_t v0 = (0x80000001005E6290 & 0xF00000000000000) >> 54;
  }
  else {
    unint64_t v0 = 84;
  }
  if ((((unint64_t)"CREATE-SPECIAL-USE" >> 61) & ((0x80000001005E6290 & 0xF00000000000000) >> 54 == 0)) != 0)
  {
    unint64_t v1 = 0;
    char v2 = 1;
  }
  else
  {
    unint64_t v1 = 15;
    while (sub_1005E1F30() != 61 || v3 != 0xE100000000000000)
    {
      char v5 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_14;
      }
      unint64_t v1 = sub_1005E1DD0();
      if (v0 == v1 >> 14)
      {
        unint64_t v1 = 0;
LABEL_14:
        char v2 = v5 ^ 1;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
LABEL_16:
  static Capability.annotateExperiment1 = 0xD000000000000015;
  unk_100761930 = 0x80000001005E6290;
  qword_100761938 = v1;
  byte_100761940 = v2 & 1;
}

uint64_t *Capability.annotateExperiment1.unsafeMutableAddressor()
{
  if (qword_10070FB68 != -1) {
    swift_once();
  }
  return &static Capability.annotateExperiment1;
}

uint64_t static Capability.annotateExperiment1.getter()
{
  if (qword_10070FB68 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

void sub_10024186C()
{
  while (1)
  {
    sub_100246684();
    if (sub_1005E1F30() == 61 && v0 == 0xE100000000000000) {
      break;
    }
    char v2 = sub_1002465B4();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      sub_100246684();
      if ((sub_1005E1DD0() & 0xFFFFFFFFFFFFC000) != 0x60000) {
        continue;
      }
    }
    char v3 = v2 ^ 1;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  char v3 = 0;
LABEL_9:
  sub_1002465E8(v3);
}

uint64_t static Capability.binary.getter()
{
  if (qword_10070FB70 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_10024197C()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.catenate = 0x4554414E45544143;
  unk_100761970 = 0xE800000000000000;
  qword_100761978 = v0;
  byte_100761980 = v5 & 1;
  return result;
}

uint64_t *Capability.catenate.unsafeMutableAddressor()
{
  if (qword_10070FB78 != -1) {
    swift_once();
  }
  return &static Capability.catenate;
}

uint64_t static Capability.catenate.getter()
{
  if (qword_10070FB78 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100241B1C()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.children = 0x4E4552444C494843;
  unk_100761990 = 0xE800000000000000;
  qword_100761998 = v0;
  byte_1007619A0 = v5 & 1;
  return result;
}

uint64_t *Capability.children.unsafeMutableAddressor()
{
  if (qword_10070FB80 != -1) {
    swift_once();
  }
  return &static Capability.children;
}

uint64_t static Capability.children.getter()
{
  if (qword_10070FB80 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100241CBC()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x90000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.condStore = 0x524F5453444E4F43;
  unk_1007619B0 = 0xE900000000000045;
  qword_1007619B8 = v0;
  byte_1007619C0 = v5 & 1;
  return result;
}

uint64_t *Capability.condStore.unsafeMutableAddressor()
{
  if (qword_10070FB88 != -1) {
    swift_once();
  }
  return &static Capability.condStore;
}

uint64_t static Capability.condStore.getter()
{
  if (qword_10070FB88 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

void sub_100241E68()
{
  if ((0x80000001005E6270 & 0x2000000000000000) != 0) {
    unint64_t v0 = (0x80000001005E6270 & 0xF00000000000000) >> 54;
  }
  else {
    unint64_t v0 = 72;
  }
  if ((((unint64_t)"XYMHIGHESTMODSEQ" >> 61) & ((0x80000001005E6270 & 0xF00000000000000) >> 54 == 0)) != 0)
  {
    unint64_t v1 = 0;
    char v2 = 1;
  }
  else
  {
    unint64_t v1 = 15;
    while (sub_1005E1F30() != 61 || v3 != 0xE100000000000000)
    {
      char v5 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_14;
      }
      unint64_t v1 = sub_1005E1DD0();
      if (v0 == v1 >> 14)
      {
        unint64_t v1 = 0;
LABEL_14:
        char v2 = v5 ^ 1;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
LABEL_16:
  static Capability.createSpecialUse = 0xD000000000000012;
  unk_1007619D0 = 0x80000001005E6270;
  qword_1007619D8 = v1;
  byte_1007619E0 = v2 & 1;
}

uint64_t *Capability.createSpecialUse.unsafeMutableAddressor()
{
  if (qword_10070FB90 != -1) {
    swift_once();
  }
  return &static Capability.createSpecialUse;
}

uint64_t static Capability.createSpecialUse.getter()
{
  if (qword_10070FB90 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100242034()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x60000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.enable = 0x454C42414E45;
  unk_1007619F0 = 0xE600000000000000;
  qword_1007619F8 = v0;
  byte_100761A00 = v5 & 1;
  return result;
}

uint64_t *Capability.enable.unsafeMutableAddressor()
{
  if (qword_10070FB98 != -1) {
    swift_once();
  }
  return &static Capability.enable;
}

uint64_t static Capability.enable.getter()
{
  if (qword_10070FB98 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_1002421C8()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.extendedSearch = 0x48435241455345;
  unk_100761A10 = 0xE700000000000000;
  qword_100761A18 = v0;
  byte_100761A20 = v5 & 1;
  return result;
}

uint64_t *Capability.extendedSearch.unsafeMutableAddressor()
{
  if (qword_10070FBA0 != -1) {
    swift_once();
  }
  return &static Capability.extendedSearch;
}

uint64_t static Capability.extendedSearch.getter()
{
  if (qword_10070FBA0 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100242368()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x50000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.esort = 0x54524F5345;
  unk_100761A30 = 0xE500000000000000;
  qword_100761A38 = v0;
  byte_100761A40 = v5 & 1;
  return result;
}

uint64_t *Capability.esort.unsafeMutableAddressor()
{
  if (qword_10070FBA8 != -1) {
    swift_once();
  }
  return &static Capability.esort;
}

uint64_t static Capability.esort.getter()
{
  if (qword_10070FBA8 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_1002424FC()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.filters = 0x535245544C4946;
  unk_100761A50 = 0xE700000000000000;
  qword_100761A58 = v0;
  byte_100761A60 = v5 & 1;
  return result;
}

uint64_t *Capability.filters.unsafeMutableAddressor()
{
  if (qword_10070FBB0 != -1) {
    swift_once();
  }
  return &static Capability.filters;
}

uint64_t static Capability.filters.getter()
{
  if (qword_10070FBB0 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_10024269C()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x20000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.id = 17481;
  unk_100761A70 = 0xE200000000000000;
  qword_100761A78 = v0;
  byte_100761A80 = v5 & 1;
  return result;
}

uint64_t *Capability.id.unsafeMutableAddressor()
{
  if (qword_10070FBB8 != -1) {
    swift_once();
  }
  return &static Capability.id;
}

uint64_t static Capability.id.getter()
{
  if (qword_10070FBB8 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100242810()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x40000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.idle = 1162626121;
  unk_100761A90 = 0xE400000000000000;
  qword_100761A98 = v0;
  byte_100761AA0 = v5 & 1;
  return result;
}

uint64_t *Capability.idle.unsafeMutableAddressor()
{
  if (qword_10070FBC0 != -1) {
    swift_once();
  }
  return &static Capability.idle;
}

uint64_t static Capability.idle.getter()
{
  if (qword_10070FBC0 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100242998()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x90000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.imap4reuint64_t v1 = 0x7665723450414D49;
  unk_100761AB0 = 0xE900000000000031;
  qword_100761AB8 = v0;
  byte_100761AC0 = v5 & 1;
  return result;
}

uint64_t *Capability.imap4rev1.unsafeMutableAddressor()
{
  if (qword_10070FBC8 != -1) {
    swift_once();
  }
  return &static Capability.imap4rev1;
}

uint64_t static Capability.imap4rev1.getter()
{
  if (qword_10070FBC8 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100242B44()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x50000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.imap4 = 0x3450414D49;
  unk_100761AD0 = 0xE500000000000000;
  qword_100761AD8 = v0;
  byte_100761AE0 = v5 & 1;
  return result;
}

uint64_t *Capability.imap4.unsafeMutableAddressor()
{
  if (qword_10070FBD0 != -1) {
    swift_once();
  }
  return &static Capability.imap4;
}

uint64_t static Capability.imap4.getter()
{
  if (qword_10070FBD0 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100242CD8()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.language = 0x45474155474E414CLL;
  unk_100761AF0 = 0xE800000000000000;
  qword_100761AF8 = v0;
  byte_100761B00 = v5 & 1;
  return result;
}

uint64_t *Capability.language.unsafeMutableAddressor()
{
  if (qword_10070FBD8 != -1) {
    swift_once();
  }
  return &static Capability.language;
}

uint64_t static Capability.language.getter()
{
  if (qword_10070FBD8 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100242E78()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.listStatus = 0x4154532D5453494CLL;
  unk_100761B10 = 0xEB00000000535554;
  qword_100761B18 = v0;
  byte_100761B20 = v5 & 1;
  return result;
}

uint64_t *Capability.listStatus.unsafeMutableAddressor()
{
  if (qword_10070FBE0 != -1) {
    swift_once();
  }
  return &static Capability.listStatus;
}

uint64_t static Capability.listStatus.getter()
{
  if (qword_10070FBE0 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100243030()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xD0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  strcpy((char *)&static Capability.listExtended, "LIST-EXTENDED");
  unk_100761B36 = -4864;
  qword_100761B38 = v0;
  byte_100761B40 = v5 & 1;
  return result;
}

uint64_t *Capability.listExtended.unsafeMutableAddressor()
{
  if (qword_10070FBE8 != -1) {
    swift_once();
  }
  return &static Capability.listExtended;
}

uint64_t static Capability.listExtended.getter()
{
  if (qword_10070FBE8 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_1002431F4()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xD0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  strcpy((char *)&static Capability.loginDisabled, "LOGINDISABLED");
  unk_100761B56 = -4864;
  qword_100761B58 = v0;
  byte_100761B60 = v5 & 1;
  return result;
}

uint64_t *Capability.loginDisabled.unsafeMutableAddressor()
{
  if (qword_10070FBF0 != -1) {
    swift_once();
  }
  return &static Capability.loginDisabled;
}

uint64_t static Capability.loginDisabled.getter()
{
  if (qword_10070FBF0 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_1002433B8()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xF0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.loginReferrals = 0x45522D4E49474F4CLL;
  unk_100761B70 = 0xEF534C4152524546;
  qword_100761B78 = v0;
  byte_100761B80 = v5 & 1;
  return result;
}

uint64_t *Capability.loginReferrals.unsafeMutableAddressor()
{
  if (qword_10070FBF8 != -1) {
    swift_once();
  }
  return &static Capability.loginReferrals;
}

uint64_t static Capability.loginReferrals.getter()
{
  if (qword_10070FBF8 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_10024357C()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.mailboxSpecificAppendLimit = 0x494C444E45505041;
  unk_100761B90 = 0xEB0000000054494DLL;
  qword_100761B98 = v0;
  byte_100761BA0 = v5 & 1;
  return result;
}

uint64_t *Capability.mailboxSpecificAppendLimit.unsafeMutableAddressor()
{
  if (qword_10070FC00 != -1) {
    swift_once();
  }
  return &static Capability.mailboxSpecificAppendLimit;
}

uint64_t static Capability.mailboxSpecificAppendLimit.getter()
{
  if (qword_10070FC00 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100243734()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.metadata = 0x415441444154454DLL;
  unk_100761BB0 = 0xE800000000000000;
  qword_100761BB8 = v0;
  byte_100761BC0 = v5 & 1;
  return result;
}

uint64_t *Capability.metadata.unsafeMutableAddressor()
{
  if (qword_10070FC08 != -1) {
    swift_once();
  }
  return &static Capability.metadata;
}

uint64_t static Capability.metadata.getter()
{
  if (qword_10070FC08 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_1002438D4()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xF0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.metadataServer = 0x415441444154454DLL;
  unk_100761BD0 = 0xEF5245565245532DLL;
  qword_100761BD8 = v0;
  byte_100761BE0 = v5 & 1;
  return result;
}

uint64_t *Capability.metadataServer.unsafeMutableAddressor()
{
  if (qword_10070FC10 != -1) {
    swift_once();
  }
  return &static Capability.metadataServer;
}

uint64_t static Capability.metadataServer.getter()
{
  if (qword_10070FC10 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100243A98()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x40000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.move = 1163284301;
  unk_100761BF0 = 0xE400000000000000;
  qword_100761BF8 = v0;
  byte_100761C00 = v5 & 1;
  return result;
}

uint64_t *Capability.move.unsafeMutableAddressor()
{
  if (qword_10070FC18 != -1) {
    swift_once();
  }
  return &static Capability.move;
}

uint64_t static Capability.move.getter()
{
  if (qword_10070FC18 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100243C20()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.multiSearch = 0x41455349544C554DLL;
  unk_100761C10 = 0xEB00000000484352;
  qword_100761C18 = v0;
  byte_100761C20 = v5 & 1;
  return result;
}

uint64_t *Capability.multiSearch.unsafeMutableAddressor()
{
  if (qword_10070FC20 != -1) {
    swift_once();
  }
  return &static Capability.multiSearch;
}

uint64_t static Capability.multiSearch.getter()
{
  if (qword_10070FC20 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100243DD8()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x90000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.namespace = 0x43415053454D414ELL;
  unk_100761C30 = 0xE900000000000045;
  qword_100761C38 = v0;
  byte_100761C40 = v5 & 1;
  return result;
}

uint64_t *Capability.namespace.unsafeMutableAddressor()
{
  if (qword_10070FC28 != -1) {
    swift_once();
  }
  return &static Capability.namespace;
}

uint64_t static Capability.namespace.getter()
{
  if (qword_10070FC28 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100243F84()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.qresync = 0x434E5953455251;
  unk_100761C50 = 0xE700000000000000;
  qword_100761C58 = v0;
  byte_100761C60 = v5 & 1;
  return result;
}

uint64_t *Capability.qresync.unsafeMutableAddressor()
{
  if (qword_10070FC30 != -1) {
    swift_once();
  }
  return &static Capability.qresync;
}

uint64_t static Capability.qresync.getter()
{
  if (qword_10070FC30 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100244124()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x50000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.quota = 0x41544F5551;
  unk_100761C70 = 0xE500000000000000;
  qword_100761C78 = v0;
  byte_100761C80 = v5 & 1;
  return result;
}

uint64_t *Capability.quota.unsafeMutableAddressor()
{
  if (qword_10070FC38 != -1) {
    swift_once();
  }
  return &static Capability.quota;
}

uint64_t static Capability.quota.getter()
{
  if (qword_10070FC38 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_1002442B8()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.saslIR = 0x52492D4C534153;
  unk_100761C90 = 0xE700000000000000;
  qword_100761C98 = v0;
  byte_100761CA0 = v5 & 1;
  return result;
}

uint64_t *Capability.saslIR.unsafeMutableAddressor()
{
  if (qword_10070FC40 != -1) {
    swift_once();
  }
  return &static Capability.saslIR;
}

uint64_t static Capability.saslIR.getter()
{
  if (qword_10070FC40 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100244458()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x90000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.searchRes = 0x4552484352414553;
  unk_100761CB0 = 0xE900000000000053;
  qword_100761CB8 = v0;
  byte_100761CC0 = v5 & 1;
  return result;
}

uint64_t *Capability.searchRes.unsafeMutableAddressor()
{
  if (qword_10070FC48 != -1) {
    swift_once();
  }
  return &static Capability.searchRes;
}

uint64_t static Capability.searchRes.getter()
{
  if (qword_10070FC48 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100244604()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.specialUse = 0x2D4C414943455053;
  unk_100761CD0 = 0xEB00000000455355;
  qword_100761CD8 = v0;
  byte_100761CE0 = v5 & 1;
  return result;
}

uint64_t *Capability.specialUse.unsafeMutableAddressor()
{
  if (qword_10070FC50 != -1) {
    swift_once();
  }
  return &static Capability.specialUse;
}

uint64_t static Capability.specialUse.getter()
{
  if (qword_10070FC50 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_1002447BC()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.startTLS = 0x534C545452415453;
  unk_100761CF0 = 0xE800000000000000;
  qword_100761CF8 = v0;
  byte_100761D00 = v5 & 1;
  return result;
}

uint64_t *Capability.startTLS.unsafeMutableAddressor()
{
  if (qword_10070FC58 != -1) {
    swift_once();
  }
  return &static Capability.startTLS;
}

uint64_t static Capability.startTLS.getter()
{
  if (qword_10070FC58 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_10024495C()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.uidPlus = 0x53554C50444955;
  unk_100761D10 = 0xE700000000000000;
  qword_100761D18 = v0;
  byte_100761D20 = v5 & 1;
  return result;
}

uint64_t *Capability.uidPlus.unsafeMutableAddressor()
{
  if (qword_10070FC60 != -1) {
    swift_once();
  }
  return &static Capability.uidPlus;
}

uint64_t static Capability.uidPlus.getter()
{
  if (qword_10070FC60 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100244AFC()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x80000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.unselect = 0x5443454C45534E55;
  unk_100761D30 = 0xE800000000000000;
  qword_100761D38 = v0;
  byte_100761D40 = v5 & 1;
  return result;
}

uint64_t *Capability.unselect.unsafeMutableAddressor()
{
  if (qword_10070FC68 != -1) {
    swift_once();
  }
  return &static Capability.unselect;
}

uint64_t static Capability.unselect.getter()
{
  if (qword_10070FC68 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100244C9C()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xB0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.partialURL = 0x545241502D4C5255;
  unk_100761D50 = 0xEB000000004C4149;
  qword_100761D58 = v0;
  byte_100761D60 = v5 & 1;
  return result;
}

uint64_t *Capability.partialURL.unsafeMutableAddressor()
{
  if (qword_10070FC70 != -1) {
    swift_once();
  }
  return &static Capability.partialURL;
}

uint64_t static Capability.partialURL.getter()
{
  if (qword_10070FC70 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100244E54()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.partial = 0x4C414954524150;
  unk_100761D70 = 0xE700000000000000;
  qword_100761D78 = v0;
  byte_100761D80 = v5 & 1;
  return result;
}

uint64_t *Capability.partial.unsafeMutableAddressor()
{
  if (qword_10070FC78 != -1) {
    swift_once();
  }
  return &static Capability.partial;
}

uint64_t static Capability.partial.getter()
{
  if (qword_10070FC78 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100244FF4()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.authenticatedURL = 0x485455414C5255;
  unk_100761D90 = 0xE700000000000000;
  qword_100761D98 = v0;
  byte_100761DA0 = v5 & 1;
  return result;
}

uint64_t *Capability.authenticatedURL.unsafeMutableAddressor()
{
  if (qword_10070FC80 != -1) {
    swift_once();
  }
  return &static Capability.authenticatedURL;
}

uint64_t static Capability.authenticatedURL.getter()
{
  if (qword_10070FC80 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100245194()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x60000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.within = 0x4E4948544957;
  unk_100761DB0 = 0xE600000000000000;
  qword_100761DB8 = v0;
  byte_100761DC0 = v5 & 1;
  return result;
}

uint64_t *Capability.within.unsafeMutableAddressor()
{
  if (qword_10070FC88 != -1) {
    swift_once();
  }
  return &static Capability.within;
}

uint64_t static Capability.within.getter()
{
  if (qword_10070FC88 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100245328()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0xA0000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.gmailExtensions = 0x5458452D4D472D58;
  unk_100761DD0 = 0xEA0000000000312DLL;
  qword_100761DD8 = v0;
  byte_100761DE0 = v5 & 1;
  return result;
}

uint64_t *Capability.gmailExtensions.unsafeMutableAddressor()
{
  if (qword_10070FC90 != -1) {
    swift_once();
  }
  return &static Capability.gmailExtensions;
}

uint64_t static Capability.gmailExtensions.getter()
{
  if (qword_10070FC90 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

void sub_1002454D4()
{
  if ((0x80000001005E6250 & 0x2000000000000000) != 0) {
    unint64_t v0 = (0x80000001005E6250 & 0xF00000000000000) >> 54;
  }
  else {
    unint64_t v0 = 64;
  }
  if ((((unint64_t)"QUOTED-PRINTABLE" >> 61) & ((0x80000001005E6250 & 0xF00000000000000) >> 54 == 0)) != 0)
  {
    unint64_t v1 = 0;
    char v2 = 1;
  }
  else
  {
    unint64_t v1 = 15;
    while (sub_1005E1F30() != 61 || v3 != 0xE100000000000000)
    {
      char v5 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_14;
      }
      unint64_t v1 = sub_1005E1DD0();
      if (v0 == v1 >> 14)
      {
        unint64_t v1 = 0;
LABEL_14:
        char v2 = v5 ^ 1;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
LABEL_16:
  static Capability.yahooMailHighestModificationSequence = 0xD000000000000010;
  unk_100761DF0 = 0x80000001005E6250;
  qword_100761DF8 = v1;
  byte_100761E00 = v2 & 1;
}

uint64_t *Capability.yahooMailHighestModificationSequence.unsafeMutableAddressor()
{
  if (qword_10070FC98 != -1) {
    swift_once();
  }
  return &static Capability.yahooMailHighestModificationSequence;
}

uint64_t static Capability.yahooMailHighestModificationSequence.getter()
{
  if (qword_10070FC98 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

void sub_1002456A0()
{
  while (1)
  {
    sub_100246618();
    if (sub_1005E1F30() == 61 && v0 == 0xE100000000000000) {
      break;
    }
    char v2 = sub_1002465B4();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      sub_100246618();
      if ((sub_1005E1DD0() & 0xFFFFFFFFFFFFC000) != 0x80000) {
        continue;
      }
    }
    char v3 = v2 ^ 1;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  char v3 = 0;
LABEL_9:
  sub_1002465E8(v3);
}

uint64_t static Capability.literalPlus.getter()
{
  if (qword_10070FCA0 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

void sub_1002457B4()
{
  while (1)
  {
    sub_100246634();
    if (sub_1005E1F30() == 61 && v0 == 0xE100000000000000) {
      break;
    }
    char v2 = sub_1002465B4();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      sub_100246634();
      if ((sub_1005E1DD0() & 0xFFFFFFFFFFFFC000) != 0x80000) {
        continue;
      }
    }
    char v3 = v2 ^ 1;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  char v3 = 0;
LABEL_9:
  sub_1002465E8(v3);
}

uint64_t static Capability.literalMinus.getter()
{
  if (qword_10070FCA8 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_1002458C8()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.preview = 0x57454956455250;
  unk_100761E50 = 0xE700000000000000;
  qword_100761E58 = v0;
  byte_100761E60 = v5 & 1;
  return result;
}

uint64_t *Capability.preview.unsafeMutableAddressor()
{
  if (qword_10070FCB0 != -1) {
    swift_once();
  }
  return &static Capability.preview;
}

uint64_t static Capability.preview.getter()
{
  if (qword_10070FCB0 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t sub_100245A68()
{
  uint64_t v0 = 15;
  while (sub_1005E1F30() != 61 || v1 != 0xE100000000000000)
  {
    char v3 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_9;
    }
    uint64_t result = sub_1005E1DD0();
    uint64_t v0 = result;
    if ((result & 0xFFFFFFFFFFFFC000) == 0x70000)
    {
      uint64_t v0 = 0;
LABEL_9:
      char v5 = v3 ^ 1;
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  char v5 = 0;
LABEL_11:
  static Capability.uidOnly = 0x594C4E4F444955;
  unk_100761E70 = 0xE700000000000000;
  qword_100761E78 = v0;
  byte_100761E80 = v5 & 1;
  return result;
}

uint64_t *Capability.uidOnly.unsafeMutableAddressor()
{
  if (qword_10070FCB8 != -1) {
    swift_once();
  }
  return &static Capability.uidOnly;
}

uint64_t static Capability.uidOnly.getter()
{
  if (qword_10070FCB8 != -1) {
    swift_once();
  }
  sub_100246580();
  return sub_1002465A0();
}

uint64_t static Capability.appendLimit(_:)(uint64_t a1)
{
  return sub_100245C68(a1, 0x494C444E45505041);
}

uint64_t static Capability.messageLimit(_:)(uint64_t a1)
{
  return sub_100245C68(a1, 0x4C4547415353454DLL);
}

uint64_t static Capability.saveLimit(_:)(uint64_t a1)
{
  return sub_100245C68(a1, 0x494D494C45564153);
}

uint64_t sub_100245C68(uint64_t a1, uint64_t a2)
{
  v8._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v8);
  swift_bridgeObjectRelease();
  sub_100246650();
  if (v2)
  {
    while (sub_1005E1F30() != 61 || v3 != 0xE100000000000000)
    {
      char v5 = sub_1002465B4();
      swift_bridgeObjectRelease();
      if ((v5 & 1) != 0 || 4 * v2 == (unint64_t)sub_1005E1DD0() >> 14) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t static Capability.authenticate(_:)(uint64_t a1, void *a2)
{
  return sub_1002465DC(a1, a2, 1213486401);
}

uint64_t static Capability.context(_:)(uint64_t a1, void *a2)
{
  return sub_100245F94(a1, a2, 0x3D545845544E4F43);
}

uint64_t static Capability.sort(_:)(uint64_t a1, void *a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    v12._uint64_t countAndFlagsBits = a1;
    v12._object = a2;
    sub_1005E1E30(v12);
    swift_bridgeObjectRelease();
    uint64_t v4 = 0x3D54524F53;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100246674();
      if (sub_1005E1F30() == 61 && v5 == 0xE100000000000000) {
        break;
      }
      char v7 = sub_1002465B4();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0)
      {
        sub_100246674();
        if ((unint64_t)sub_1005E1DD0() >> 14 != 20) {
          continue;
        }
      }
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 1414680403;
    while (1)
    {
      sub_1002466E8();
      if (sub_1005E1F30() == 61 && v8 == 0xE100000000000000) {
        break;
      }
      char v10 = sub_1002465B4();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        sub_1002466E8();
        if ((sub_1005E1DD0() & 0xFFFFFFFFFFFFC000) != 0x40000) {
          continue;
        }
      }
      return v4;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static Capability.utf8(_:)(uint64_t a1, void *a2)
{
  return sub_1002465DC(a1, a2, 944133205);
}

uint64_t static Capability.thread(_:)(uint64_t a1, void *a2)
{
  return sub_1002465D0(a1, a2, 0x444145524854);
}

uint64_t static Capability.status(_:)(uint64_t a1, void *a2)
{
  return sub_1002465D0(a1, a2, 0x535554415453);
}

uint64_t static Capability.rights(_:)(uint64_t a1, void *a2)
{
  return sub_1002465D0(a1, a2, 0x535448474952);
}

uint64_t static Capability.compression(_:)(uint64_t a1, void *a2)
{
  return sub_100245F94(a1, a2, 0x53534552504D4F43);
}

uint64_t sub_100245F94(uint64_t a1, void *a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  v10._uint64_t countAndFlagsBits = a1;
  v10._object = a2;
  sub_1005E1E30(v10);
  swift_bridgeObjectRelease();
  sub_100246650();
  if (a1)
  {
    while (sub_1005E1F30() != 61 || v5 != 0xE100000000000000)
    {
      char v7 = sub_1002465B4();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0 || 4 * a1 == (unint64_t)sub_1005E1DD0() >> 14) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return a3;
}

unint64_t sub_1002460A4()
{
  unint64_t result = qword_100710870;
  if (!qword_100710870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710870);
  }
  return result;
}

unint64_t sub_1002460F4()
{
  unint64_t result = qword_100710878;
  if (!qword_100710878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710878);
  }
  return result;
}

unint64_t sub_100246144()
{
  unint64_t result = qword_100710880;
  if (!qword_100710880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710880);
  }
  return result;
}

unint64_t sub_100246194()
{
  unint64_t result = qword_100710888;
  if (!qword_100710888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710888);
  }
  return result;
}

unint64_t sub_1002461E4()
{
  unint64_t result = qword_100710890;
  if (!qword_100710890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710890);
  }
  return result;
}

unint64_t sub_100246234()
{
  unint64_t result = qword_100710898;
  if (!qword_100710898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710898);
  }
  return result;
}

unint64_t sub_100246284()
{
  unint64_t result = qword_1007108A0;
  if (!qword_1007108A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007108A0);
  }
  return result;
}

unint64_t sub_1002462D4()
{
  unint64_t result = qword_1007108A8;
  if (!qword_1007108A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007108A8);
  }
  return result;
}

uint64_t initializeWithCopy for Capability(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Capability(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for Capability(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for Capability(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for Capability()
{
}

void type metadata accessor for Capability.ContextKind()
{
}

void type metadata accessor for Capability.SortKind()
{
}

void type metadata accessor for Capability.ThreadKind()
{
}

void type metadata accessor for Capability.StatusKind()
{
}

void type metadata accessor for Capability.UTF8Kind()
{
}

void type metadata accessor for Capability.RightsKind()
{
}

void type metadata accessor for Capability.CompressionKind()
{
}

void sub_1002464B4(uint64_t a1)
{
  Swift::Int v3 = *(unsigned int *)(v1 + 20);
  uint64_t v4 = sub_1002465FC();
  sub_100210AD0(v4, v5, v1 + 8, v3);
  if (v7)
  {
    v8._uint64_t countAndFlagsBits = sub_1002465FC();
    Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v3);
  }
  int v9 = *(_DWORD *)(v1 + 20);
  BOOL v10 = __CFADD__(v9, v6);
  int v11 = v9 + v6;
  if (v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v1 + 20) = v11;
  if (__OFADD__(v6, sub_1001E9324(a1))) {
LABEL_7:
  }
    __break(1u);
}

uint64_t sub_100246580()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002465A0()
{
  return v0;
}

uint64_t sub_1002465B4()
{
  return sub_1005E3290();
}

uint64_t sub_1002465D0(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_100245F94(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0x3D000000000000);
}

uint64_t sub_1002465DC(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_100245F94(a1, a2, a3 & 0xFFFF0000FFFFFFFFLL | 0x3D00000000);
}

void sub_1002465E8(char a1@<W8>)
{
  *(void *)uint64_t v1 = v4;
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = a1 & 1;
}

uint64_t sub_1002465FC()
{
  return 0x494C494241504143;
}

uint64_t sub_100246618()
{
  return v0;
}

uint64_t sub_100246634()
{
  return v0;
}

uint64_t sub_100246650()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100246674()
{
  return v0;
}

uint64_t sub_100246684()
{
  return v0;
}

uint64_t sub_10024669C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002466C8()
{
  return sub_1005E1D00();
}

uint64_t sub_1002466E8()
{
  return v0;
}

void ModificationSequenceValue.hash(into:)(uint64_t a1, Swift::UInt64 a2)
{
}

uint64_t sub_10024672C()
{
  return UnchangedSinceModifier.hashValue.getter(*v0);
}

void sub_100246734(uint64_t a1)
{
  ModificationSequenceValue.hash(into:)(a1, *v1);
}

uint64_t sub_100246740(void *a1, void *a2)
{
  return static UnchangedSinceModifier.__derived_struct_equals(_:_:)(*a1, *a2);
}

BOOL static FetchModificationResponse.__derived_struct_equals(_:_:)(BOOL result, uint64_t a2)
{
  if (((a2 | result) & 0x8000000000000000) == 0) {
    return a2 == result;
  }
  __break(1u);
  return result;
}

Swift::Int ModificationSequenceValue.hashValue.getter(Swift::UInt64 a1)
{
  return sub_1005E3470();
}

Swift::Int sub_1002467AC()
{
  Swift::UInt64 v1 = *v0;
  sub_1005E33F0();
  sub_1005E3450(v1);
  return sub_1005E3470();
}

unint64_t sub_1002467F4()
{
  unint64_t result = qword_1007108B0;
  if (!qword_1007108B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007108B0);
  }
  return result;
}

unint64_t sub_100246844()
{
  unint64_t result = qword_1007108B8;
  if (!qword_1007108B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007108B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangedSinceModifier()
{
  return &type metadata for ChangedSinceModifier;
}

ValueMetadata *type metadata accessor for UnchangedSinceModifier()
{
  return &type metadata for UnchangedSinceModifier;
}

void Command.hash(into:)()
{
  sub_1001FE5B4();
  uint64_t v175 = v0;
  uint64_t v176 = v6;
  uint64_t v174 = sub_10000566C(&qword_1007108C0);
  sub_1001F3BBC();
  __chkstk_darwin(v7);
  sub_100208054();
  unint64_t v172 = v8;
  uint64_t v9 = sub_10000566C(&qword_1007108C8);
  uint64_t v10 = sub_100224550(v9);
  __chkstk_darwin(v10);
  sub_1001F3FE0();
  sub_1002540C8();
  __chkstk_darwin(v11);
  sub_1002540E8();
  uint64_t v168 = v12;
  __chkstk_darwin(v13);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v14);
  sub_1002540E8();
  uint64_t v171 = v15;
  __chkstk_darwin(v16);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v17);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v18);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v19);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v20);
  sub_100254D64();
  __chkstk_darwin(v21);
  uint64_t v163 = (uint64_t)&v160 - v22;
  uint64_t v173 = sub_10000566C(&qword_1007104C8);
  sub_1001F3BBC();
  __chkstk_darwin(v23);
  sub_100208054();
  uint64_t v169 = v24;
  uint64_t v25 = sub_10000566C(&qword_1007104D8);
  uint64_t v26 = sub_100224550(v25);
  __chkstk_darwin(v26);
  sub_100224A54();
  sub_100254920();
  __chkstk_darwin(v27);
  sub_100254D78();
  __chkstk_darwin(v28);
  sub_100254910();
  __chkstk_darwin(v29);
  sub_1002540E8();
  uint64_t v170 = v30;
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (uint64_t)&v160 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v160 - v36;
  __chkstk_darwin(v35);
  sub_10025463C();
  __chkstk_darwin(v38);
  uint64_t v40 = (uint64_t)&v160 - v39;
  type metadata accessor for Command();
  sub_1001F3BBC();
  __chkstk_darwin(v41);
  sub_100254978();
  sub_10024EB28(v175, v0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100254C88();
      Swift::UInt v42 = 4;
      goto LABEL_58;
    case 2u:
      sub_10025447C();
      Swift::UInt v43 = 5;
      goto LABEL_13;
    case 3u:
      unint64_t v44 = *(void *)v0;
      unint64_t v45 = *(void *)(v0 + 8);
      unint64_t v47 = *(void *)(v0 + 16);
      unint64_t v46 = *(void *)(v0 + 24);
      unint64_t v49 = *(void *)(v0 + 32);
      unint64_t v48 = *(void *)(v0 + 40);
      uint64_t v50 = *(void *)(v0 + 48);
      unint64_t v172 = *(void *)(v0 + 56);
      unint64_t v51 = *(void *)(v0 + 64);
      uint64_t v162 = *(void *)(v0 + 72);
      uint64_t v161 = *(unsigned int *)(v0 + 80);
      uint64_t v175 = *(void *)(v0 + 88);
      sub_100254BF4();
      uint64_t v170 = v53 | (v52 << 32);
      uint64_t v171 = v54;
      LODWORD(v173) = *(unsigned __int8 *)(v0 + 111);
      uint64_t v163 = *(void *)(v0 + 112);
      uint64_t v55 = v176;
      sub_1005E3410(6uLL);
      uint64_t v174 = v45;
      unint64_t v166 = v49;
      unint64_t v164 = v51;
      if (v51)
      {
        v177[0] = v44;
        v177[1] = v45;
        v177[2] = v47;
        v177[3] = v46;
        v177[4] = v49;
        v177[5] = v48;
        uint64_t v56 = v172;
        v177[6] = v50;
        v177[7] = v172;
        uint64_t v160 = v50;
        v177[8] = v51;
        sub_1005E3420(1u);
        uint64_t v57 = sub_1002546F4();
        sub_10024EF70(v57, v58, v59, v60, v61, v62, v50, v56, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F33C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F3404);
        swift_bridgeObjectRetain();
        ListSelectOptions.hash(into:)(v55);
        uint64_t v159 = v51;
        uint64_t v63 = sub_1002546F4();
        uint64_t v64 = v160;
        sub_10024EEF4(v63, v65, v66, v67, v68, v69, v160, v56, v159);
      }
      else
      {
        uint64_t v64 = v50;
        sub_1005E3420(0);
      }
      unint64_t v165 = v48;
      unint64_t v167 = v46;
      uint64_t v168 = v47;
      uint64_t v169 = v44;
      sub_1005E3410(v161 | (v161 << 32));
      swift_bridgeObjectRelease();
      if (v173)
      {
        sub_1005E3410(1uLL);
        Swift::UInt v151 = *(void *)(v175 + 16);
        sub_1005E3410(v151);
        if (v151)
        {
          uint64_t v152 = v175 + 54;
          do
          {
            v152 += 24;
            sub_1001F969C();
            sub_1005E3400();
            --v151;
          }
          while (v151);
        }
      }
      else
      {
        sub_1005E3410(0);
        sub_1001F969C();
        sub_1005E3400();
      }
      sub_100228BE4(v55, v163);
      sub_1001F33B8(v175, v171, v170, v173);
      sub_100254DB4();
      sub_10024EEF4(v169, v174, v168, v167, v166, v165, v64, v172, v160);
      goto LABEL_120;
    case 4u:
      uint64_t v70 = *(unsigned int *)(v0 + 16);
      uint64_t v71 = *(void *)(v0 + 24);
      sub_100254AA8();
      uint64_t v74 = v73 | (v72 << 32);
      char v75 = *(unsigned char *)(v0 + 47);
      uint64_t v175 = *(void *)(v0 + 48);
      uint64_t v76 = v176;
      sub_1005E3410(7uLL);
      sub_1002289BC();
      swift_bridgeObjectRelease();
      sub_1005E3410(v70 | (v70 << 32));
      swift_bridgeObjectRelease();
      uint64_t v174 = v74;
      if (v75)
      {
        sub_1005E3410(1uLL);
        Swift::UInt v77 = *(void *)(v71 + 16);
        sub_1005E3410(v77);
        if (v77)
        {
          uint64_t v78 = v71 + 54;
          do
          {
            v78 += 24;
            sub_1002541BC();
            uint64_t v76 = v176;
            sub_1005E3400();
            --v77;
          }
          while (v77);
        }
      }
      else
      {
        sub_1005E3410(0);
        sub_1002541BC();
        sub_1005E3400();
      }
      sub_100228BE4(v76, v175);
      uint64_t v136 = sub_100254C7C();
      sub_1001F33B8(v136, v137, v174, v75);
      goto LABEL_120;
    case 5u:
      sub_10025447C();
      sub_1005E3410(8uLL);
      sub_1005E3410(v40 | (v40 << 32));
      swift_bridgeObjectRelease();
      sub_1002541BC();
      sub_10025461C();
      goto LABEL_86;
    case 6u:
      uint64_t v107 = *(unsigned int *)(v0 + 8);
      uint64_t v108 = *(unsigned int *)(v0 + 24);
      sub_1005E3410(9uLL);
      sub_1005E3410(v107 | (v107 << 32));
      swift_bridgeObjectRelease();
      sub_1005E3410(v108 | (v108 << 32));
      swift_bridgeObjectRelease();
      sub_100225748();
      swift_release();
      swift_release();
      goto LABEL_86;
    case 7u:
      sub_10025447C();
      Swift::UInt v43 = 10;
LABEL_13:
      sub_1005E3410(v43);
      sub_1005E3410(v40 | (v40 << 32));
      swift_bridgeObjectRelease();
      sub_1002132AC();
      sub_100228F34();
      goto LABEL_120;
    case 8u:
      sub_10025447C();
      sub_1005E3410(0xBuLL);
      sub_1005E3410(v40 | (v40 << 32));
      swift_bridgeObjectRelease();
      uint64_t v109 = sub_1002132AC();
      sub_100228898(v109, v110);
      goto LABEL_120;
    case 9u:
      sub_100254C88();
      Swift::UInt v42 = 12;
      goto LABEL_58;
    case 0xAu:
      sub_100254C88();
      Swift::UInt v42 = 13;
      goto LABEL_58;
    case 0xBu:
      uint64_t v79 = *(void *)(v0 + 16);
      sub_1005E3410(0xEuLL);
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease_n();
      if (v79)
      {
        sub_1005E3420(1u);
        sub_1002541BC();
LABEL_78:
        sub_1005E3400();
LABEL_86:
        swift_release();
      }
      else
      {
        sub_1005E3420(0);
      }
      break;
    case 0xCu:
      sub_1005E3410(0xFuLL);
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      sub_1005E1DB0();
      goto LABEL_120;
    case 0xDu:
      sub_1005E3410(0x14uLL);
      uint64_t v111 = sub_10022C948();
      sub_100228800(v111, v112);
      goto LABEL_120;
    case 0xEu:
      uint64_t v80 = *(unsigned int *)(v0 + *(int *)(sub_10000566C(&qword_1007108E8) + 48) + 8);
      sub_10025406C(v0, v40, &qword_1007104D8);
      sub_1005E3410(0x17uLL);
      sub_1001F36E4(v40, v3, &qword_1007104D8);
      sub_100207FC4(v3, 1, v173);
      if (v81)
      {
        sub_1005E3410(1uLL);
      }
      else
      {
        uint64_t v138 = v3;
        uint64_t v139 = v169;
        sub_10025406C(v138, v169, &qword_1007104C8);
        sub_1005E3410(0);
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v139, &qword_1007104C8);
      }
      sub_1005E3410(v80 | (v80 << 32));
      uint64_t v140 = &qword_1007104D8;
      uint64_t v141 = v40;
      goto LABEL_119;
    case 0xFu:
      sub_10000566C(&qword_1007108F8);
      sub_100254DD4();
      uint64_t v82 = sub_10022C948();
      sub_10025406C(v82, v83, &qword_1007104D8);
      uint64_t v84 = v176;
      sub_1005E3410(0x18uLL);
      uint64_t v85 = sub_100254C7C();
      sub_1001F36E4(v85, v86, &qword_1007104D8);
      sub_100207FC4(v34, 1, v173);
      if (v81)
      {
        sub_1005E3410(1uLL);
      }
      else
      {
        uint64_t v142 = v169;
        sub_10025406C(v34, v169, &qword_1007104C8);
        sub_1005E3410(0);
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v142, &qword_1007104C8);
      }
      sub_100228340(v84, v40);
      swift_bridgeObjectRelease();
      sub_100227EAC();
      sub_1001F3A28((uint64_t)v37, &qword_1007104D8);
      goto LABEL_120;
    case 0x10u:
      sub_10000566C(&qword_1007108F0);
      sub_1002549C0();
      uint64_t v87 = v170;
      sub_10025406C(v0, v170, &qword_1007104D8);
      uint64_t v88 = v176;
      sub_1005E3410(0x19uLL);
      sub_1001F36E4(v87, v2, &qword_1007104D8);
      sub_100207FC4(v2, 1, v173);
      if (v81)
      {
        sub_100254A64();
      }
      else
      {
        uint64_t v143 = v169;
        sub_10025406C(v2, v169, &qword_1007104C8);
        sub_100254CD0();
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v143, &qword_1007104C8);
      }
      sub_100227A54();
      swift_bridgeObjectRelease();
      if (v1 < 0)
      {
        sub_100254A64();
        if ((_BYTE)v1)
        {
          if (v1 == 1) {
            sub_1002549F8();
          }
          else {
            sub_100254D44();
          }
        }
        else
        {
          sub_1002549EC();
        }
        sub_100254AD0();
        swift_bridgeObjectRelease();
        sub_1005E3420(BYTE1(v1) & 1);
        Swift::UInt v155 = *(void *)(v40 + 16);
        sub_1005E3410(v155);
        if (v155)
        {
          uint64_t v156 = v40 + 54;
          do
          {
            v156 += 24;
            sub_1002541BC();
            sub_1005E3400();
            --v155;
          }
          while (v155);
        }
      }
      else
      {
        sub_100254CD0();
        if ((_BYTE)v1)
        {
          if (v1 == 1) {
            sub_1002549F8();
          }
          else {
            sub_100254D44();
          }
        }
        else
        {
          sub_1002549EC();
        }
        sub_100254AD0();
        swift_bridgeObjectRelease();
        sub_1005E3420(BYTE1(v1) & 1);
        swift_bridgeObjectRetain();
        sub_10022A804(v88, v40);
        sub_10024EEEC();
      }
      sub_1001F3A28(v170, &qword_1007104D8);
      goto LABEL_157;
    case 0x11u:
      unint64_t v113 = *(void *)v0;
      uint64_t v114 = *(void *)(v0 + 16);
      Swift::UInt v115 = 26;
      goto LABEL_75;
    case 0x12u:
      sub_10000566C(&qword_1007108E8);
      sub_100254690();
      sub_10025406C(v0, v4, &qword_1007104D8);
      sub_100254B84(0x1BuLL);
      sub_1001F36E4(v4, v1, &qword_1007104D8);
      sub_100207FC4(v1, 1, v173);
      if (v81)
      {
        sub_100254A7C();
      }
      else
      {
        uint64_t v146 = v169;
        sub_10025406C(v1, v169, &qword_1007104C8);
        sub_100254CE8();
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v146, &qword_1007104C8);
      }
      sub_1005E3410(v34 | (v34 << 32));
      uint64_t v140 = &qword_1007104D8;
      uint64_t v141 = v4;
      goto LABEL_119;
    case 0x13u:
      sub_1005E3410(0x1CuLL);
      sub_100225638();
      swift_release();
      swift_release();
      goto LABEL_86;
    case 0x14u:
      sub_10000566C(&qword_1007108E0);
      sub_100254690();
      uint64_t v116 = v163;
      sub_10025406C(v0, v163, &qword_1007108C8);
      sub_100254B84(0x1EuLL);
      sub_1001F36E4(v116, v5, &qword_1007108C8);
      sub_100207FC4(v5, 1, v174);
      if (v81)
      {
        sub_100254A7C();
      }
      else
      {
        uint64_t v147 = v172;
        sub_10025406C(v5, v172, &qword_1007108C0);
        sub_100254CE8();
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_100254A2C();
        sub_1001F3A28(v147, &qword_1007108C0);
      }
      Swift::UInt v148 = v34 | (v34 << 32);
      goto LABEL_116;
    case 0x15u:
      sub_10000566C(&qword_1007108E0);
      sub_100254690();
      uint64_t v116 = v164;
      sub_10025406C(v0, v164, &qword_1007108C8);
      sub_100254B84(0x1FuLL);
      uint64_t v117 = v161;
      sub_1001F36E4(v116, v161, &qword_1007108C8);
      sub_100207FC4(v117, 1, v174);
      if (v81)
      {
        sub_100254A7C();
      }
      else
      {
        uint64_t v149 = v172;
        sub_10025406C(v117, v172, &qword_1007108C0);
        sub_100254CE8();
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_100254A2C();
        sub_1001F3A28(v149, &qword_1007108C0);
      }
      Swift::UInt v148 = v34 | (v34 << 32);
LABEL_116:
      sub_1005E3410(v148);
      goto LABEL_118;
    case 0x16u:
      uint64_t v118 = *(void *)(v0 + *(int *)(sub_10000566C(&qword_1007108D8) + 48));
      uint64_t v116 = v165;
      sub_10025406C(v0, v165, &qword_1007108C8);
      sub_100254B84(0x20uLL);
      uint64_t v119 = v162;
      sub_1001F36E4(v116, v162, &qword_1007108C8);
      sub_100207FC4(v119, 1, v174);
      if (v81)
      {
        sub_100254A7C();
      }
      else
      {
        uint64_t v150 = v172;
        sub_10025406C(v119, v172, &qword_1007108C0);
        sub_100254CE8();
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v150, &qword_1007108C0);
      }
      sub_100228340(v2, v118);
      swift_bridgeObjectRelease();
      sub_100227EAC();
LABEL_118:
      uint64_t v140 = &qword_1007108C8;
      uint64_t v141 = v116;
LABEL_119:
      sub_1001F3A28(v141, v140);
      goto LABEL_120;
    case 0x17u:
      unint64_t v113 = *(void *)v0;
      uint64_t v114 = *(void *)(v0 + 16);
      Swift::UInt v115 = 33;
LABEL_75:
      sub_1005E3410(v115);
      uint64_t v120 = sub_10022C948();
      SearchKey.hash(into:)(v120, v121);
      if (v114)
      {
        sub_1005E3420(1u);
        swift_bridgeObjectRetain();
        sub_1005E1DB0();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1005E3420(0);
      }
      sub_1002132AC();
      sub_100227530();
      sub_1002239B4(v113);
      goto LABEL_120;
    case 0x18u:
      sub_10000566C(&qword_1007108D0);
      sub_100254DC0();
      uint64_t v90 = *v89;
      uint64_t v91 = v89[1];
      uint64_t v92 = v171;
      sub_10025406C(v0, v171, &qword_1007108C8);
      uint64_t v93 = v176;
      sub_1005E3410(0x22uLL);
      uint64_t v94 = v166;
      sub_1001F36E4(v92, v166, &qword_1007108C8);
      sub_100207FC4(v94, 1, v174);
      if (v81)
      {
        sub_100254A64();
      }
      else
      {
        uint64_t v144 = v172;
        sub_10025406C(v94, v172, &qword_1007108C0);
        sub_100254CD0();
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v144, &qword_1007108C0);
      }
      sub_100227A54();
      swift_bridgeObjectRelease();
      if (v90 < 0)
      {
        sub_100254A64();
        if ((_BYTE)v90)
        {
          if (v90 == 1) {
            sub_1002549F8();
          }
          else {
            sub_100254D44();
          }
        }
        else
        {
          sub_1002549EC();
        }
        sub_100254AD0();
        swift_bridgeObjectRelease();
        sub_1005E3420(BYTE1(v90) & 1);
        Swift::UInt v157 = *(void *)(v91 + 16);
        sub_1005E3410(v157);
        if (v157)
        {
          uint64_t v158 = v91 + 54;
          do
          {
            v158 += 24;
            sub_1002541BC();
            sub_1005E3400();
            --v157;
          }
          while (v157);
        }
      }
      else
      {
        sub_100254CD0();
        if ((_BYTE)v90)
        {
          if (v90 == 1) {
            sub_1002549F8();
          }
          else {
            sub_100254D44();
          }
        }
        else
        {
          sub_1002549EC();
        }
        sub_100254AD0();
        swift_bridgeObjectRelease();
        sub_1005E3420(BYTE1(v90) & 1);
        swift_bridgeObjectRetain();
        sub_10022A804(v93, v91);
        sub_10024EEEC();
      }
      sub_1001F3A28(v171, &qword_1007108C8);
LABEL_157:
      sub_10024EEEC();
      break;
    case 0x19u:
      uint64_t v95 = v168;
      sub_10025406C(v0, v168, &qword_1007108C8);
      sub_1005E3410(0x23uLL);
      uint64_t v96 = v167;
      sub_1001F36E4(v95, v167, &qword_1007108C8);
      sub_100207FC4(v96, 1, v174);
      if (v81)
      {
        sub_1005E3410(1uLL);
      }
      else
      {
        uint64_t v145 = v172;
        sub_10025406C(v96, v172, &qword_1007108C0);
        sub_1005E3410(0);
        sub_10000566C(&qword_100710538);
        sub_10022AAC0();
        sub_1005E19C0();
        sub_1001F3A28(v145, &qword_1007108C0);
      }
      sub_1001F3A28(v95, &qword_1007108C8);
      break;
    case 0x1Au:
      sub_1005E3410(0x24uLL);
      sub_1002541BC();
      goto LABEL_78;
    case 0x1Bu:
      sub_100254C88();
      Swift::UInt v42 = 37;
LABEL_58:
      sub_1005E3410(v42);
      sub_1005E3410(v1 | (v1 << 32));
      goto LABEL_120;
    case 0x1Cu:
      sub_1005E3410(0x26uLL);
      sub_1002541BC();
      sub_1005E3400();
      uint64_t v122 = sub_1002132AC();
      sub_1002274CC(v122, v123);
      swift_bridgeObjectRelease();
      goto LABEL_86;
    case 0x1Du:
      uint64_t v124 = *(unsigned int *)(v0 + 16);
      uint64_t v125 = *(void *)(v0 + 24);
      sub_1005E3410(0x27uLL);
      sub_1002132AC();
      sub_100227010();
      swift_bridgeObjectRelease();
      sub_1005E3410(v124 | (v124 << 32));
      swift_bridgeObjectRelease();
      sub_1005E3410(*(void *)(v125 + 16));
      uint64_t v126 = *(void *)(v125 + 16);
      if (v126)
      {
        uint64_t v127 = v125 + 54;
        do
        {
          v127 += 24;
          sub_1002541BC();
          sub_10025461C();
          --v126;
        }
        while (v126);
      }
      goto LABEL_120;
    case 0x1Eu:
      uint64_t v128 = *(unsigned int *)(v0 + 8);
      uint64_t v129 = *(void *)(v0 + 16);
      uint64_t v130 = *(void *)(v0 + 24);
      uint64_t v131 = *(void *)(v0 + 32);
      uint64_t v132 = v176;
      sub_1005E3410(0x28uLL);
      sub_1005E3410(v128 | (v128 << 32));
      swift_bridgeObjectRelease();
      sub_1002254E8(v132, v129, v130, v131);
      swift_release();
      swift_release();
      goto LABEL_86;
    case 0x1Fu:
      sub_100254A94();
      uint64_t v133 = v176;
      sub_1005E3410(0x29uLL);
      ExtendedSearchOptions.hash(into:)(v133);
      sub_10024EE20(v177);
      break;
    case 0x20u:
      unint64_t v134 = *(void *)v0;
      uint64_t v135 = *(unsigned int *)(v0 + 8);
      sub_1005E3410(0x2AuLL);
      if (v134)
      {
        sub_1005E3420(1u);
        sub_1005E3410(v135 | (v135 << 32));
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1005E3420(0);
      }
      uint64_t v153 = sub_10022C948();
      sub_100226FB4(v153, v154);
      goto LABEL_120;
    case 0x21u:
      unint64_t v97 = *(void *)v0;
      sub_1005E3410(0x2BuLL);
      sub_1005E3410(*(void *)(v97 + 16));
      uint64_t v98 = *(void *)(v97 + 16);
      if (v98)
      {
        uint64_t v99 = 0;
        do
        {
          sub_1002541BC();
          sub_1005E3400();
          swift_retain();
          swift_bridgeObjectRetain_n();
          sub_1005E1DB0();
          swift_release();
          sub_100254DE0();
          v99 += 40;
          --v98;
        }
        while (v98);
      }
      goto LABEL_120;
    case 0x22u:
      unint64_t v100 = *(void *)v0;
      sub_1005E3410(0x2CuLL);
      sub_1005E3410(*(void *)(v100 + 16));
      uint64_t v101 = *(void *)(v100 + 16);
      if (v101)
      {
        unint64_t v102 = v100 + 54;
        do
        {
          v102 += 24;
          sub_1002541BC();
          sub_10025461C();
          --v101;
        }
        while (v101);
      }
      goto LABEL_120;
    case 0x23u:
      sub_1005E3410(0x2DuLL);
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease_n();
      break;
    case 0x24u:
      uint64_t v103 = *(void *)(v0 + 16);
      sub_1005E3410(0x2EuLL);
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      sub_1005E3410(*(void *)(v103 + 16));
      uint64_t v104 = *(void *)(v103 + 16);
      if (v104)
      {
        uint64_t v105 = v103 + 48;
        do
        {
          if ((*(void *)(v105 - 16) & 0x8000000000000000) != 0) {
            sub_1005E3410(1uLL);
          }
          else {
            sub_1005E3410(0);
          }
          sub_1001F969C();
          v105 += 24;
          sub_1005E3400();
          --v104;
        }
        while (v104);
      }
      goto LABEL_120;
    case 0x25u:
      Swift::UInt v106 = 0;
      goto LABEL_96;
    case 0x26u:
      Swift::UInt v106 = 1;
      goto LABEL_96;
    case 0x27u:
      Swift::UInt v106 = 2;
      goto LABEL_96;
    case 0x28u:
      Swift::UInt v106 = 16;
      goto LABEL_96;
    case 0x29u:
      Swift::UInt v106 = 17;
      goto LABEL_96;
    case 0x2Au:
      Swift::UInt v106 = 18;
      goto LABEL_96;
    case 0x2Bu:
      Swift::UInt v106 = 19;
      goto LABEL_96;
    case 0x2Cu:
      Swift::UInt v106 = 21;
      goto LABEL_96;
    case 0x2Du:
      Swift::UInt v106 = 22;
      goto LABEL_96;
    case 0x2Eu:
      Swift::UInt v106 = 29;
LABEL_96:
      sub_1005E3410(v106);
      break;
    default:
      sub_10025447C();
      sub_1005E3410(3uLL);
      sub_1005E3410(v40 | (v40 << 32));
      swift_bridgeObjectRelease();
      sub_1002132AC();
      sub_1002295B0();
LABEL_120:
      swift_bridgeObjectRelease();
      break;
  }
  sub_1001FE57C();
}

void static Command.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FE5B4();
  a19 = v27;
  a20 = v28;
  uint64_t v536 = v29;
  uint64_t v535 = v30;
  uint64_t v31 = sub_10000566C(&qword_1007108C8);
  uint64_t v32 = sub_100224550(v31);
  __chkstk_darwin(v32);
  sub_1001F3FE0();
  sub_1002540C8();
  __chkstk_darwin(v33);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v34);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v35);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v36);
  uint64_t v502 = (uint64_t)&v497 - v37;
  uint64_t v38 = sub_10000566C(&qword_1007104D8);
  uint64_t v39 = sub_100224550(v38);
  __chkstk_darwin(v39);
  sub_1001F3FE0();
  sub_1002540C8();
  __chkstk_darwin(v40);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v41);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v42);
  uint64_t v498 = (uint64_t)&v497 - v43;
  uint64_t v534 = type metadata accessor for Command();
  sub_1001F3BBC();
  __chkstk_darwin(v44);
  sub_1001F3FE0();
  sub_1002540C8();
  __chkstk_darwin(v45);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v46);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v47);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v48);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v49);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v50);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v51);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v52);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v53);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v54);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v55);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v56);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v57);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v58);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v59);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v60);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v61);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v62);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v63);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v64);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v65);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v66);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v67);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v68);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v69);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v70);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v71);
  sub_1002540E8();
  sub_1002540C8();
  __chkstk_darwin(v72);
  sub_1002540E8();
  sub_1002540C8();
  uint64_t v74 = __chkstk_darwin(v73);
  uint64_t v76 = (char *)&v497 - v75;
  __chkstk_darwin(v74);
  sub_100254910();
  __chkstk_darwin(v77);
  sub_100254D50();
  __chkstk_darwin(v78);
  sub_10025463C();
  __chkstk_darwin(v79);
  sub_100254920();
  __chkstk_darwin(v80);
  sub_100254D78();
  __chkstk_darwin(v81);
  sub_100254D64();
  __chkstk_darwin(v82);
  uint64_t v84 = (char *)&v497 - v83;
  uint64_t v85 = sub_10000566C(&qword_100710900);
  uint64_t v86 = sub_100224550(v85);
  __chkstk_darwin(v86);
  sub_1002244C0();
  uint64_t v88 = v21 + *(int *)(v87 + 56);
  sub_10024EB28(v535, v21);
  uint64_t v89 = sub_10025444C();
  uint64_t v535 = v88;
  sub_10024EB28(v89, v88);
  uint64_t v536 = v21;
  uint64_t v90 = v534;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v93 = v536;
      sub_10024EB28(v536, v26);
      uint64_t v94 = sub_100254204();
      if (v94 == 1)
      {
        sub_100254BD4(v94, *(_DWORD *)(v26 + 8));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v95 = v93;
        goto LABEL_260;
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = v93;
      goto LABEL_190;
    case 2u:
      uint64_t v96 = sub_1002540D8();
      sub_10024EB28(v96, v25);
      uint64_t v97 = *(void *)v25;
      if (sub_100254224() != 2) {
        goto LABEL_188;
      }
      int v98 = *(_DWORD *)(v25 + 8);
      goto LABEL_31;
    case 3u:
      uint64_t v99 = sub_10025444C();
      sub_10024EB28(v99, v20);
      uint64_t v101 = *(void *)v20;
      uint64_t v100 = *(void *)(v20 + 8);
      long long v531 = *(_OWORD *)(v20 + 16);
      long long v532 = *(_OWORD *)(v20 + 32);
      uint64_t v533 = *(void *)(v20 + 48);
      uint64_t v530 = *(void *)(v20 + 56);
      uint64_t v102 = *(void *)(v20 + 64);
      uint64_t v103 = *(void *)(v20 + 72);
      LODWORD(v527) = *(_DWORD *)(v20 + 80);
      uint64_t v105 = *(void *)(v20 + 88);
      uint64_t v104 = *(void *)(v20 + 96);
      sub_100254B1C();
      uint64_t v108 = v107 | (v106 << 32);
      int v109 = *(unsigned __int8 *)(v20 + 111);
      uint64_t v110 = *(void *)(v20 + 112);
      uint64_t v111 = v535;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_bridgeObjectRelease();
        sub_1001F33B8(v105, v104, v108, v109);
        swift_bridgeObjectRelease();
        uint64_t v390 = sub_1002540F4();
        sub_10024EEF4(v390, v391, v392, v393, v394, v395, v396, v530, v102);
        goto LABEL_169;
      }
      uint64_t v518 = v103;
      uint64_t v522 = v108;
      uint64_t v525 = v105;
      LODWORD(v526) = v109;
      unint64_t v524 = v104;
      uint64_t v516 = v110;
      uint64_t v529 = v101;
      uint64_t v112 = *(void *)(v111 + 24);
      uint64_t v113 = *(void *)(v111 + 48);
      uint64_t v517 = *(void *)(v111 + 72);
      uint64_t v523 = *(void *)(v111 + 88);
      uint64_t v520 = *(void *)(v111 + 96);
      sub_100254B1C();
      uint64_t v519 = v123 | (v122 << 32);
      LODWORD(v521) = *(unsigned __int8 *)(v111 + 111);
      uint64_t v535 = *(void *)(v111 + 112);
      uint64_t v528 = (void *)v102;
      if (v102)
      {
        uint64_t v124 = v100;
        if (v120)
        {
          *(void *)&long long v550 = v529;
          *((void *)&v550 + 1) = v100;
          long long v551 = v531;
          long long v552 = v532;
          uint64_t v125 = v114;
          uint64_t v126 = v116;
          uint64_t v127 = v530;
          *(void *)&long long v553 = v533;
          *((void *)&v553 + 1) = v530;
          uint64_t v128 = v121;
          uint64_t v129 = v528;
          uint64_t v554 = v528;
          *(void *)&long long v537 = v119;
          *((void *)&v537 + 1) = v118;
          *(void *)&long long v538 = v114;
          *((void *)&v538 + 1) = v112;
          *(void *)&long long v539 = v116;
          *((void *)&v539 + 1) = v117;
          *(void *)&long long v540 = v113;
          *((void *)&v540 + 1) = v121;
          uint64_t v541 = v120;
          uint64_t v513 = v119;
          uint64_t v512 = v118;
          LODWORD(v511) = v115;
          uint64_t v130 = v117;
          uint64_t v534 = v120;
          sub_10024F050(v119, v118, v114, v112, v116, v117, v113, v121, v120);
          uint64_t v131 = sub_1002540F4();
          sub_10024F050(v131, v132, v133, v134, v135, v136, v137, v127, (uint64_t)v129);
          LODWORD(v510) = static ListSelectOptions.__derived_struct_equals(_:_:)((uint64_t)&v550, (uint64_t)&v537);
          sub_100254DB4();
          sub_10024EEF4(v513, v512, v125, v112, v126, v130, v113, v128, (uint64_t)v497);
          uint64_t v497 = v129;
          uint64_t v138 = v128;
          uint64_t v139 = sub_1002540F4();
          uint64_t v140 = v126;
          uint64_t v124 = v100;
          sub_10024EEF4(v139, v141, v142, v143, v144, v145, v146, v127, (uint64_t)v497);
          int v115 = v511;
          uint64_t v114 = v125;
          uint64_t v121 = v138;
          uint64_t v116 = v140;
          uint64_t v120 = v534;
          uint64_t v119 = v513;
          uint64_t v118 = v512;
          uint64_t v117 = v130;
          if ((v510 & 1) == 0)
          {
            uint64_t v147 = v513;
            uint64_t v148 = v113;
            char v149 = v140;
            uint64_t v150 = v130;
            uint64_t v527 = (uint64_t *)v125;
            uint64_t v151 = v512;
            uint64_t v515 = v138;
            swift_bridgeObjectRelease();
            sub_10025417C();
            uint64_t v152 = v530;
LABEL_225:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1001F33B8(v525, v524, v522, v526);
            swift_bridgeObjectRelease();
            sub_100254DB4();
            sub_10024EEF4(v147, v151, (uint64_t)v527, v112, v149, v150, v148, v515, (uint64_t)v497);
            sub_100254AE8();
            sub_100254128();
            uint64_t v425 = v152;
            goto LABEL_280;
          }
LABEL_231:
          uint64_t v514 = v116;
          uint64_t v426 = v114;
          uint64_t v508 = v117;
          uint64_t v427 = v121;
          uint64_t v509 = v113;
          uint64_t v428 = v120;
          uint64_t v429 = v119;
          uint64_t v430 = v118;
          char v431 = static MailboxName.== infix(_:_:)(v518, (int)v527, v517, v115);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v431 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            sub_10025417C();
            swift_bridgeObjectRelease();
            sub_1001F33B8(v525, v524, v522, v526);
            sub_10024EEF4(v429, v430, v426, v112, v514, v508, v509, v427, v428);
            sub_100254DB4();
LABEL_279:
            sub_100254348();
LABEL_280:
            sub_10024EEF4(v418, v419, v420, v421, v422, v423, v424, v425, v499);
LABEL_281:
            uint64_t v95 = sub_10025444C();
            goto LABEL_260;
          }
          uint64_t v432 = (uint64_t)v528;
          uint64_t v515 = v427;
          if (v526)
          {
            if ((v521 & 1) == 0)
            {
              char v442 = 0;
              goto LABEL_278;
            }
            sub_10021A1B4();
            if (v433) {
              goto LABEL_277;
            }
          }
          else if ((v521 & 1) == 0)
          {
            uint64_t v464 = v525;
            uint64_t v527 = (uint64_t *)v124;
            uint64_t v465 = v522;
            sub_1001F33AC(v525, v524, v522, 0);
            uint64_t v466 = v523;
            uint64_t v467 = v520;
            uint64_t v468 = v519;
            sub_1001F33AC(v523, v520, v519, 0);
            uint64_t v469 = v464;
            uint64_t v470 = v524;
            LODWORD(v518) = static ByteBuffer.== infix(_:_:)(v469, v524, v465 & 0xFFFFFFFFFFFFFFLL, v466, v467, v468 & 0xFFFFFFFFFFFFFFLL);
            uint64_t v471 = v466;
            uint64_t v432 = (uint64_t)v528;
            sub_1001F33B8(v471, v467, v468, 0);
            sub_1001F33B8(v525, v470, v465, 0);
            char v442 = 0;
            if (v518)
            {
LABEL_277:
              sub_10021C55C(v516, v535);
              sub_10025417C();
              uint64_t v472 = sub_1001F33B8(v525, v524, v522, v526);
              sub_100254304(v472, v473, v474, v475, v476, v477, v478, v479, v499);
              uint64_t v499 = v432;
              sub_100254348();
              sub_10024EEF4(v480, v481, v482, v483, v484, v485, v486, v487, v499);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_281;
            }
            goto LABEL_278;
          }
          char v442 = 1;
LABEL_278:
          swift_bridgeObjectRelease();
          sub_1001F33B8(v523, v520, v519, v442);
          swift_bridgeObjectRelease();
          uint64_t v488 = sub_1001F33B8(v525, v524, v522, v526);
          sub_100254304(v488, v489, v490, v491, v492, v493, v494, v495, v499);
          uint64_t v499 = v432;
          goto LABEL_279;
        }
      }
      else
      {
        uint64_t v124 = v100;
        if (!v120) {
          goto LABEL_231;
        }
      }
      *(void *)&long long v537 = v529;
      *((void *)&v537 + 1) = v124;
      long long v538 = v531;
      long long v539 = v532;
      uint64_t v152 = v530;
      *(void *)&long long v540 = v533;
      *((void *)&v540 + 1) = v530;
      uint64_t v541 = (uint64_t)v528;
      uint64_t v542 = v119;
      v543[0] = v118;
      v543[1] = v114;
      uint64_t v544 = v112;
      uint64_t v545 = v116;
      uint64_t v546 = v117;
      uint64_t v547 = v113;
      uint64_t v548 = v121;
      uint64_t v549 = v120;
      uint64_t v147 = v119;
      uint64_t v151 = v118;
      uint64_t v527 = (uint64_t *)v114;
      uint64_t v514 = v116;
      uint64_t v410 = v117;
      uint64_t v515 = v121;
      uint64_t v534 = v120;
      sub_10024F050(v119, v118, v114, v112, v116, v117, v113, v121, v120);
      sub_100254AE8();
      sub_100254128();
      uint64_t v148 = v113;
      uint64_t v150 = v410;
      char v149 = v514;
      sub_10024F050(v411, v412, v413, v414, v415, v416, v417, v152, v496);
      sub_10024F0CC((uint64_t *)&v537);
      swift_bridgeObjectRelease();
      sub_10025417C();
      goto LABEL_225;
    case 4u:
      uint64_t v153 = sub_10025444C();
      sub_10024EB28(v153, v23);
      uint64_t v155 = *(void *)v23;
      uint64_t v154 = *(void *)(v23 + 8);
      int v156 = *(_DWORD *)(v23 + 16);
      uint64_t v158 = *(void *)(v23 + 24);
      uint64_t v157 = *(void *)(v23 + 32);
      unint64_t v159 = *(unsigned int *)(v23 + 40) | ((unint64_t)(*(unsigned __int16 *)(v23 + 44) | (*(unsigned __int8 *)(v23 + 46) << 16)) << 32);
      int v160 = *(unsigned __int8 *)(v23 + 47);
      uint64_t v161 = *(void *)(v23 + 48);
      if (sub_1002542B0() != 4)
      {
        swift_bridgeObjectRelease();
        sub_1001F33B8(v158, v157, v159, v160);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_169;
      }
      LODWORD(v531) = v156;
      uint64_t v534 = v161;
      *((void *)&v531 + 1) = v158;
      *((void *)&v532 + 1) = v159;
      LODWORD(v533) = v160;
      *(void *)&long long v532 = v157;
      uint64_t v162 = *(void *)v90;
      uint64_t v163 = *(void *)(v90 + 8);
      LODWORD(v530) = *(_DWORD *)(v90 + 16);
      uint64_t v164 = *(void *)(v90 + 24);
      uint64_t v165 = *(void *)(v90 + 32);
      unint64_t v166 = *(unsigned int *)(v90 + 40) | ((unint64_t)(*(unsigned __int16 *)(v90 + 44) | (*(unsigned __int8 *)(v90 + 46) << 16)) << 32);
      int v167 = *(unsigned __int8 *)(v90 + 47);
      uint64_t v168 = *(void *)(v90 + 48);
      char v169 = sub_10021CB78(v155, v162);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v169 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1001F33B8(v164, v165, v166, v167);
        sub_100254D2C();
        swift_bridgeObjectRelease();
        uint64_t v400 = sub_1002544A4();
        sub_1001F33B8(v400, v401, v402, v403);
        swift_bridgeObjectRelease();
        goto LABEL_281;
      }
      LODWORD(v535) = v167;
      char v170 = static MailboxName.== infix(_:_:)(v154, v531, v163, v530);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v171 = v536;
      if ((v170 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1001F33B8(v164, v165, v166, v535);
        sub_100254D2C();
        uint64_t v434 = sub_1002544A4();
        goto LABEL_273;
      }
      long long v172 = v532;
      uint64_t v173 = v165;
      if (v533)
      {
        if ((v535 & 1) == 0)
        {
          char v441 = 0;
          goto LABEL_272;
        }
        sub_10021A1B4();
        if (v174) {
          goto LABEL_271;
        }
      }
      else
      {
        uint64_t v440 = *((void *)&v531 + 1);
        if ((v535 & 1) == 0)
        {
          uint64_t v443 = sub_100254A18();
          sub_1001F33AC(v443, v444, v445, v446);
          uint64_t v447 = sub_100254ABC();
          sub_1001F33AC(v447, v448, v449, v450);
          LODWORD(v531) = static ByteBuffer.== infix(_:_:)(v440, v172, *((void *)&v172 + 1) & 0xFFFFFFFFFFFFFFLL, v164, v173, v166 & 0xFFFFFFFFFFFFFFLL);
          uint64_t v451 = sub_100254ABC();
          sub_1001F33B8(v451, v452, v453, v454);
          uint64_t v455 = sub_100254A18();
          sub_1001F33B8(v455, v456, v457, v458);
          char v441 = 0;
          if (v531)
          {
LABEL_271:
            uint64_t v459 = sub_100254D20();
            sub_10021C55C(v459, v168);
            sub_1001F33B8(v164, v173, v166, v535);
            uint64_t v460 = sub_100254A04();
            sub_1001F33B8(v460, v461, v462, v463);
            swift_bridgeObjectRelease();
            sub_100254D2C();
            uint64_t v95 = v171;
            goto LABEL_260;
          }
          goto LABEL_272;
        }
      }
      char v441 = 1;
LABEL_272:
      swift_bridgeObjectRelease();
      sub_1001F33B8(v164, v173, v166, v441);
      sub_100254D2C();
      uint64_t v434 = sub_100254A04();
LABEL_273:
      sub_1001F33B8(v434, v435, v436, v437);
LABEL_274:
      uint64_t v95 = v171;
      goto LABEL_260;
    case 5u:
      uint64_t v175 = sub_10025444C();
      sub_10024EB28(v175, v24);
      uint64_t v176 = *(void *)v24;
      uint64_t v177 = *(void *)(v24 + 16);
      unint64_t v178 = *(void *)(v24 + 24);
      uint64_t v179 = *(unsigned int *)(v24 + 32);
      uint64_t v180 = *(unsigned __int16 *)(v24 + 36);
      uint64_t v181 = *(unsigned __int8 *)(v24 + 38);
      uint64_t v182 = v535;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_167;
      }
      int v183 = *(_DWORD *)(v24 + 8);
      uint64_t v184 = *(void *)v182;
      int v185 = *(_DWORD *)(v182 + 8);
      uint64_t v186 = *(void *)(v182 + 16);
      uint64_t v534 = *(void *)(v182 + 24);
      uint64_t v533 = *(unsigned int *)(v182 + 32);
      uint64_t v187 = *(unsigned __int16 *)(v182 + 36);
      uint64_t v535 = *(unsigned __int8 *)(v182 + 38);
      char v188 = static MailboxName.== infix(_:_:)(v176, v183, v184, v185);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v188 & 1) == 0) {
        goto LABEL_241;
      }
      static ByteBuffer.== infix(_:_:)(v177, v178, v179 | (v180 << 32) | (v181 << 48), v186, v534, v533 | (v187 << 32) | (v535 << 48));
      swift_release();
      swift_release();
      goto LABEL_281;
    case 6u:
      uint64_t v189 = sub_10025444C();
      sub_10024EB28(v189, v22);
      uint64_t v190 = *(void *)v22;
      uint64_t v191 = *(void *)(v22 + 16);
      int v192 = *(_DWORD *)(v22 + 24);
      uint64_t v193 = *(void *)(v22 + 32);
      if (sub_1002542B0() != 6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_168;
      }
      uint64_t v534 = v193;
      int v194 = *(_DWORD *)(v22 + 8);
      uint64_t v195 = *(void *)v90;
      int v196 = *(_DWORD *)(v90 + 8);
      uint64_t v197 = *(void *)(v90 + 16);
      DWORD2(v532) = *(_DWORD *)(v90 + 24);
      uint64_t v533 = *(void *)(v90 + 32);
      static MailboxName.== infix(_:_:)(v190, v194, v195, v196);
      sub_100254930();
      swift_bridgeObjectRelease();
      if ((v90 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        sub_100254D20();
        goto LABEL_242;
      }
      char v198 = static MailboxName.== infix(_:_:)(v191, v192, v197, SDWORD2(v532));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v171 = v536;
      if (v198)
      {
        sub_100221B3C();
        if (v199)
        {
          sub_100222384();
          char v201 = v200;
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          if ((v201 & 1) == 0) {
            goto LABEL_274;
          }
          uint64_t v95 = v171;
          goto LABEL_260;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_100254D20();
      }
      swift_release();
      goto LABEL_274;
    case 7u:
      uint64_t v202 = sub_1002540D8();
      sub_10024EB28(v202, (uint64_t)v76);
      uint64_t v97 = *(void *)v76;
      if (sub_100254224() != 7) {
        goto LABEL_188;
      }
      int v98 = *((_DWORD *)v76 + 2);
LABEL_31:
      static MailboxName.== infix(_:_:)(v97, v98, *(void *)v88, *(_DWORD *)(v88 + 8));
      sub_100254930();
      swift_bridgeObjectRelease();
      if ((v90 & 1) == 0) {
        goto LABEL_257;
      }
      sub_100240798();
      sub_10021BEF8();
      goto LABEL_237;
    case 8u:
      uint64_t v203 = sub_1002540D8();
      sub_100254510(v203, (uint64_t)&v537);
      uint64_t v204 = *(void *)v88;
      if (sub_1002542B0() != 8) {
        goto LABEL_188;
      }
      static MailboxName.== infix(_:_:)(v204, *(_DWORD *)(v88 + 8), *(void *)v90, *(_DWORD *)(v90 + 8));
      sub_100254930();
      swift_bridgeObjectRelease();
      if ((v90 & 1) == 0) {
        goto LABEL_257;
      }
      uint64_t v205 = sub_100240798();
      sub_10021CE30(v205, v206);
      goto LABEL_237;
    case 9u:
      uint64_t v207 = sub_1002540D8();
      sub_100254510(v207, (uint64_t)&v537 + 8);
      uint64_t v208 = sub_100254204();
      if (v208 != 9) {
        goto LABEL_189;
      }
      goto LABEL_109;
    case 0xAu:
      uint64_t v209 = sub_1002540D8();
      sub_100254510(v209, (uint64_t)&v538);
      uint64_t v208 = sub_100254204();
      if (v208 != 10) {
        goto LABEL_189;
      }
      goto LABEL_109;
    case 0xBu:
      uint64_t v210 = sub_10025444C();
      sub_1002543AC(v210, (uint64_t)&v538 + 8);
      uint64_t v212 = *(void *)v84;
      uint64_t v211 = *((void *)v84 + 1);
      uint64_t v213 = *((void *)v84 + 2);
      unint64_t v214 = *((void *)v84 + 3);
      int v215 = v84[38];
      int v216 = *((unsigned __int16 *)v84 + 18);
      uint64_t v217 = *((unsigned int *)v84 + 8);
      uint64_t v218 = v535;
      if (swift_getEnumCaseMultiPayload() != 11)
      {
LABEL_167:
        swift_bridgeObjectRelease();
LABEL_168:
        swift_release();
LABEL_169:
        uint64_t v26 = v536;
        goto LABEL_190;
      }
      uint64_t v219 = *(void *)v218;
      uint64_t v220 = *(void *)(v218 + 8);
      uint64_t v221 = *(void *)(v218 + 16);
      uint64_t v534 = *(void *)(v218 + 24);
      LODWORD(v533) = *(unsigned __int8 *)(v218 + 38);
      DWORD2(v532) = *(unsigned __int16 *)(v218 + 36);
      uint64_t v222 = *(unsigned int *)(v218 + 32);
      if (v212 == v219 && v211 == v220)
      {
        sub_100254DE0();
      }
      else
      {
        char v224 = sub_100254B30();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v224 & 1) == 0) {
          goto LABEL_241;
        }
      }
      if (v213)
      {
        if (v221)
        {
          unint64_t v404 = (v222 | ((unint64_t)(DWORD2(v532) | (v533 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL;
          swift_retain();
          uint64_t v405 = swift_retain();
          static ByteBuffer.== infix(_:_:)(v405, v214, (v217 | ((unint64_t)(v216 | (v215 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL, v221, v534, v404);
          sub_100254878();
          swift_release_n();
          swift_release_n();
          goto LABEL_281;
        }
      }
      else if (!v221)
      {
        goto LABEL_281;
      }
LABEL_241:
      swift_release();
LABEL_242:
      swift_release();
      goto LABEL_281;
    case 0xCu:
      uint64_t v225 = sub_1002540D8();
      sub_1002543AC(v225, (uint64_t)&v539);
      uint64_t v227 = *(void *)v84;
      uint64_t v226 = *((void *)v84 + 1);
      uint64_t v229 = *((void *)v84 + 2);
      uint64_t v228 = *((void *)v84 + 3);
      uint64_t v230 = (uint64_t *)v535;
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_188;
      }
      uint64_t v231 = *v230;
      uint64_t v232 = v230[1];
      uint64_t v234 = v230[2];
      uint64_t v233 = v230[3];
      if (v227 == v231 && v226 == v232)
      {
        sub_100254DE0();
      }
      else
      {
        char v236 = sub_100254B30();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v236 & 1) == 0) {
          goto LABEL_257;
        }
      }
      if (v229 == v234 && v228 == v233)
      {
LABEL_212:
        swift_bridgeObjectRelease_n();
        goto LABEL_160;
      }
LABEL_210:
      sub_10022C948();
      char v407 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v407) {
        goto LABEL_160;
      }
      goto LABEL_259;
    case 0xDu:
      uint64_t v237 = sub_1002540D8();
      sub_1002543AC(v237, (uint64_t)&v539 + 8);
      if (sub_100254224() != 13) {
        goto LABEL_189;
      }
      sub_100240798();
      sub_10021B068();
      goto LABEL_237;
    case 0xEu:
      uint64_t v238 = sub_1002540D8();
      sub_100254710(v238, (uint64_t)&v541);
      sub_10000566C(&qword_1007108E8);
      if (sub_10025414C() != 14) {
        goto LABEL_172;
      }
      sub_100254590();
      uint64_t v239 = v22;
      uint64_t v240 = &v530;
      goto LABEL_78;
    case 0xFu:
      uint64_t v241 = sub_1002540D8();
      sub_100254710(v241, (uint64_t)&v542);
      uint64_t v242 = *(int *)(sub_10000566C(&qword_1007108F8) + 48);
      uint64_t v243 = *(void *)(v24 + v242);
      if (sub_100254290() != 15)
      {
        swift_bridgeObjectRelease();
LABEL_172:
        swift_bridgeObjectRelease();
        uint64_t v397 = &qword_1007104D8;
        goto LABEL_181;
      }
      uint64_t v244 = *(void *)(v22 + v242);
      uint64_t v245 = sub_100254558(v22, (uint64_t)&v531 + 8);
      sub_100254574(v245, v246, (uint64_t)&qword_1007104C8, v247, (uint64_t)&qword_1007104D0, v248, v249, v250, (uint64_t)v497, v498, v499, v500, v501, v502, v503, v504, v505, v506, v507,
        v508);
      sub_1002545C0();
      if ((v22 & 1) == 0)
      {
        uint64_t v408 = &qword_1007104D8;
        goto LABEL_216;
      }
      char v251 = sub_10021D0E4(v243, v244);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v251)
      {
        sub_10021D1C0();
        goto LABEL_80;
      }
      uint64_t v398 = &qword_1007104D8;
      goto LABEL_249;
    case 0x10u:
      uint64_t v252 = sub_1002540D8();
      uint64_t v253 = v518;
      sub_10024EB28(v252, v518);
      sub_10000566C(&qword_1007108F0);
      if (sub_1002543F4() != 16)
      {
        sub_10024EEEC();
        swift_bridgeObjectRelease();
        uint64_t v397 = &qword_1007104D8;
        goto LABEL_183;
      }
      sub_100254838();
      uint64_t v254 = v503;
      sub_10025406C(v24, v503, &qword_1007104D8);
      sub_10024A990(v253, v254, (uint64_t)&qword_1007104C8, (uint64_t)&qword_1007104D8, (uint64_t)&qword_1007104D0, v255, v256, v257, (uint64_t)v497, v498, v499, v500, v501, v502, v503, v504, v505, v506, v507,
        v508);
      char v259 = v258;
      sub_1001F3A28(v253, &qword_1007104D8);
      if ((v259 & 1) == 0)
      {
        uint64_t v409 = &qword_1007104D8;
        goto LABEL_218;
      }
      sub_100254D00();
      char v261 = v260;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v261)
      {
        sub_100254DF8();
        sub_100254B9C();
        uint64_t v262 = &qword_1007104D8;
        goto LABEL_102;
      }
      uint64_t v438 = &qword_1007104D8;
      goto LABEL_251;
    case 0x11u:
      uint64_t v263 = sub_1002540D8();
      sub_100254510(v263, (uint64_t)&v540);
      unint64_t v264 = *(void *)v88;
      uint64_t v265 = *(void *)(v88 + 8);
      uint64_t v266 = *(void *)(v88 + 16);
      if (sub_1002542B0() == 17) {
        goto LABEL_67;
      }
      goto LABEL_97;
    case 0x12u:
      uint64_t v275 = sub_1002540D8();
      sub_100254710(v275, (uint64_t)&v544);
      sub_10000566C(&qword_1007108E8);
      if (sub_10025414C() != 18) {
        goto LABEL_172;
      }
      sub_100254590();
      uint64_t v239 = v22;
      uint64_t v240 = (uint64_t *)&v531;
LABEL_78:
      uint64_t v276 = sub_100254558(v239, (uint64_t)v240);
      sub_100254574(v276, v277, (uint64_t)&qword_1007104C8, v278, (uint64_t)&qword_1007104D0, v279, v280, v281, (uint64_t)v497, v498, v499, v500, v501, v502, v503, v504, v505, v506, v507,
        v508);
      sub_1002545C0();
      if ((v22 & 1) == 0)
      {
        uint64_t v398 = &qword_1007104D8;
        goto LABEL_249;
      }
      sub_100254C5C();
      sub_100254878();
LABEL_80:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v262 = &qword_1007104D8;
      goto LABEL_91;
    case 0x13u:
      uint64_t v282 = sub_1002540D8();
      sub_100254510(v282, (uint64_t)&v540 + 8);
      if (swift_getEnumCaseMultiPayload() != 19) {
        goto LABEL_192;
      }
      sub_100254C94();
      sub_100221B3C();
      if ((v283 & 1) == 0) {
        goto LABEL_161;
      }
      char v284 = sub_100222EF4();
      goto LABEL_122;
    case 0x14u:
      uint64_t v285 = sub_1002540D8();
      sub_100254710(v285, (uint64_t)&v545);
      sub_10000566C(&qword_1007108E0);
      if (sub_10025414C() != 20) {
        goto LABEL_180;
      }
      sub_100254590();
      uint64_t v286 = v22;
      uint64_t v287 = (uint64_t *)&v532 + 1;
      goto LABEL_88;
    case 0x15u:
      uint64_t v288 = sub_1002540D8();
      sub_100254710(v288, (uint64_t)&v546);
      sub_10000566C(&qword_1007108E0);
      if (sub_10025414C() != 21) {
        goto LABEL_180;
      }
      sub_100254590();
      uint64_t v286 = v22;
      uint64_t v287 = &v534;
LABEL_88:
      uint64_t v289 = sub_100254558(v286, (uint64_t)v287);
      sub_100254574(v289, v290, (uint64_t)&qword_1007108C0, v291, (uint64_t)&unk_100710A18, v292, v293, v294, (uint64_t)v497, v498, v499, v500, v501, v502, v503, v504, v505, v506, v507,
        v508);
      sub_1002545C0();
      if (v22)
      {
        sub_100254C5C();
        sub_100254878();
        goto LABEL_90;
      }
      uint64_t v398 = &qword_1007108C8;
      goto LABEL_249;
    case 0x16u:
      uint64_t v296 = sub_1002540D8();
      sub_100254710(v296, (uint64_t)&v549);
      uint64_t v297 = *(int *)(sub_10000566C(&qword_1007108D8) + 48);
      uint64_t v298 = *(void *)(v24 + v297);
      if (sub_100254290() != 22)
      {
        swift_bridgeObjectRelease();
LABEL_180:
        swift_bridgeObjectRelease();
        uint64_t v397 = &qword_1007108C8;
LABEL_181:
        uint64_t v399 = v24;
        goto LABEL_185;
      }
      uint64_t v299 = *(void *)(v22 + v297);
      uint64_t v300 = sub_100254558(v22, (uint64_t)&v535);
      sub_100254574(v300, v301, (uint64_t)&qword_1007108C0, v302, (uint64_t)&unk_100710A18, v303, v304, v305, (uint64_t)v497, v498, v499, v500, v501, v502, v503, v504, v505, v506, v507,
        v508);
      sub_1002545C0();
      if ((v22 & 1) == 0)
      {
        uint64_t v408 = &qword_1007108C8;
LABEL_216:
        sub_1001F3A28(v23, v408);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_257;
      }
      char v306 = sub_10021D0E4(v298, v299);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v306)
      {
        sub_10021D1C0();
LABEL_90:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v262 = &qword_1007108C8;
LABEL_91:
        uint64_t v295 = v23;
        goto LABEL_105;
      }
      uint64_t v398 = &qword_1007108C8;
LABEL_249:
      sub_1001F3A28(v23, v398);
      goto LABEL_257;
    case 0x17u:
      uint64_t v307 = sub_1002540D8();
      sub_100254510(v307, (uint64_t)v543);
      unint64_t v264 = *(void *)v88;
      uint64_t v265 = *(void *)(v88 + 8);
      uint64_t v266 = *(void *)(v88 + 16);
      if (sub_1002542B0() != 23)
      {
LABEL_97:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1002239B4(v264);
        goto LABEL_190;
      }
LABEL_67:
      unint64_t v267 = *(void *)v90;
      uint64_t v268 = *(void *)(v90 + 8);
      uint64_t v269 = *(void *)(v90 + 16);
      unint64_t v270 = sub_100240798();
      static SearchKey.__derived_enum_equals(_:_:)(v270, v271);
      if (v272)
      {
        if (!v266)
        {
          if (v269)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_176;
          }
LABEL_256:
          sub_100219B48();
          unint64_t v439 = sub_100254878();
          sub_1002239B4(v439);
          sub_1002239B4(v264);
          swift_bridgeObjectRelease();
LABEL_238:
          swift_bridgeObjectRelease();
          goto LABEL_239;
        }
        if (v269)
        {
          if (v265 == v268 && v266 == v269)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v274 = sub_1005E3290();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v274 & 1) == 0) {
              goto LABEL_175;
            }
          }
          goto LABEL_256;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_175:
      swift_bridgeObjectRelease();
LABEL_176:
      swift_bridgeObjectRelease();
      sub_1002239B4(v267);
      sub_1002239B4(v264);
      goto LABEL_259;
    case 0x18u:
      uint64_t v308 = sub_1002540D8();
      uint64_t v253 = v529;
      sub_10024EB28(v308, v529);
      sub_10000566C(&qword_1007108D0);
      if (sub_1002543F4() == 24)
      {
        sub_100254838();
        uint64_t v254 = v506;
        sub_10025406C(v24, v506, &qword_1007108C8);
        sub_10024A990(v253, v254, (uint64_t)&qword_1007108C0, (uint64_t)&qword_1007108C8, (uint64_t)&unk_100710A18, v309, v310, v311, (uint64_t)v497, v498, v499, v500, v501, v502, v503, v504, v505, v506, v507,
          v508);
        char v313 = v312;
        sub_1001F3A28(v253, &qword_1007108C8);
        if (v313)
        {
          sub_100254D00();
          char v315 = v314;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v315)
          {
            sub_100254DF8();
            sub_100254B9C();
            uint64_t v262 = &qword_1007108C8;
LABEL_102:
            uint64_t v295 = v254;
LABEL_105:
            sub_1001F3A28(v295, v262);
LABEL_239:
            uint64_t v95 = v26;
LABEL_260:
            sub_10024EFF4(v95);
            goto LABEL_261;
          }
          uint64_t v438 = &qword_1007108C8;
LABEL_251:
          sub_1001F3A28(v254, v438);
          sub_10024EEEC();
        }
        else
        {
          uint64_t v409 = &qword_1007108C8;
LABEL_218:
          sub_1001F3A28(v254, v409);
          sub_10024EEEC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100254D20();
        }
        sub_10024EEEC();
        goto LABEL_259;
      }
      sub_10024EEEC();
      swift_bridgeObjectRelease();
      uint64_t v397 = &qword_1007108C8;
LABEL_183:
      uint64_t v399 = v253;
LABEL_185:
      sub_1001F3A28(v399, v397);
LABEL_190:
      sub_1001F3A28(v26, &qword_100710900);
LABEL_261:
      sub_1001FE57C();
      return;
    case 0x19u:
      uint64_t v316 = sub_1002540D8();
      uint64_t v317 = v526;
      sub_10024EB28(v316, v526);
      if (sub_100254224() == 25)
      {
        uint64_t v318 = v88;
        uint64_t v319 = v501;
        sub_10025406C(v318, v501, &qword_1007108C8);
        sub_10024A990(v317, v319, (uint64_t)&qword_1007108C0, (uint64_t)&qword_1007108C8, (uint64_t)&unk_100710A18, v320, v321, v322, (uint64_t)v497, v498, v499, v500, v501, v502, v503, v504, v505, v506, v507,
          v508);
        uint64_t v323 = sub_10022C948();
        sub_1001F3A28(v323, v324);
        uint64_t v295 = v317;
        uint64_t v262 = &qword_1007108C8;
        goto LABEL_105;
      }
      uint64_t v397 = &qword_1007108C8;
      uint64_t v399 = v317;
      goto LABEL_185;
    case 0x1Au:
      uint64_t v325 = sub_1002540D8();
      sub_100254510(v325, (uint64_t)&v547);
      uint64_t v326 = *(void *)v88;
      if (sub_100254204() != 26) {
        goto LABEL_193;
      }
      uint64_t v327 = *(void *)v20;
      sub_1002549D8();
      static ByteBuffer.== infix(_:_:)(v326, v328, v329, v327, v330, v331);
      swift_release();
      goto LABEL_113;
    case 0x1Bu:
      uint64_t v332 = sub_1002540D8();
      sub_100254510(v332, (uint64_t)&v548);
      uint64_t v208 = sub_100254204();
      if (v208 != 27) {
        goto LABEL_189;
      }
LABEL_109:
      sub_100254BD4(v208, *(_DWORD *)(v88 + 8));
      goto LABEL_237;
    case 0x1Cu:
      uint64_t v333 = sub_1002540D8();
      uint64_t v334 = v527;
      sub_10024EB28(v333, (uint64_t)v527);
      uint64_t v335 = *v334;
      if (sub_100254204() != 28)
      {
        swift_release();
        goto LABEL_189;
      }
      uint64_t v336 = *(void *)v20;
      sub_1002549D8();
      if (!static ByteBuffer.== infix(_:_:)(v335, v337, v338, v336, v339, v340))
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_258;
      }
      sub_100254C7C();
      sub_10021DE14();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_113:
      swift_release();
      goto LABEL_239;
    case 0x1Du:
      uint64_t v341 = sub_1002540D8();
      sub_1002543AC(v341, (uint64_t)&v550);
      uint64_t v342 = *((void *)v84 + 1);
      int v343 = *((_DWORD *)v84 + 4);
      uint64_t v344 = v535;
      if (swift_getEnumCaseMultiPayload() != 29)
      {
        swift_bridgeObjectRelease();
LABEL_188:
        swift_bridgeObjectRelease();
LABEL_189:
        swift_bridgeObjectRelease();
        goto LABEL_190;
      }
      uint64_t v345 = *(void *)(v344 + 8);
      int v346 = *(_DWORD *)(v344 + 16);
      sub_10021DF1C();
      char v348 = v347;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v348 & 1) == 0)
      {
LABEL_230:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_257;
      }
      static MailboxName.== infix(_:_:)(v342, v343, v345, v346);
      sub_100254930();
      swift_bridgeObjectRelease();
      if ((v343 & 1) == 0) {
        goto LABEL_257;
      }
      sub_100240798();
      sub_10021B064();
      goto LABEL_237;
    case 0x1Eu:
      uint64_t v349 = sub_1002540D8();
      uint64_t v350 = v530;
      sub_10024EB28(v349, v530);
      uint64_t v351 = *(void *)v350;
      uint64_t v352 = v535;
      if (swift_getEnumCaseMultiPayload() != 30)
      {
        swift_bridgeObjectRelease();
LABEL_192:
        swift_release();
        swift_release();
LABEL_193:
        swift_release();
        goto LABEL_190;
      }
      char v353 = static MailboxName.== infix(_:_:)(v351, *(_DWORD *)(v350 + 8), *(void *)v352, *(_DWORD *)(v352 + 8));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v353 & 1) != 0 && (sub_100254C94(), sub_100221CD0(), (v354))
      {
        sub_100222DD0();
LABEL_122:
        char v355 = v284;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if (v355)
        {
LABEL_160:
          uint64_t v95 = v26;
          goto LABEL_260;
        }
      }
      else
      {
LABEL_161:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      goto LABEL_259;
    case 0x1Fu:
      uint64_t v356 = sub_1002540D8();
      sub_1002543AC(v356, (uint64_t)&v551 + 8);
      long long v357 = *((_OWORD *)v84 + 1);
      long long v550 = *(_OWORD *)v84;
      long long v551 = v357;
      long long v358 = *((_OWORD *)v84 + 3);
      long long v552 = *((_OWORD *)v84 + 2);
      long long v553 = v358;
      uint64_t v359 = (long long *)v535;
      sub_100254C7C();
      if (swift_getEnumCaseMultiPayload() == 31)
      {
        long long v360 = v359[1];
        long long v537 = *v359;
        long long v538 = v360;
        long long v361 = v359[3];
        long long v539 = v359[2];
        long long v540 = v361;
        static ExtendedSearchOptions.__derived_struct_equals(_:_:)((unint64_t *)&v550, (uint64_t *)&v537);
        sub_10024EE20((unint64_t *)&v537);
        sub_10024EE20((unint64_t *)&v550);
        goto LABEL_239;
      }
      sub_10024EE20((unint64_t *)&v550);
      goto LABEL_190;
    case 0x20u:
      uint64_t v362 = sub_1002540D8();
      sub_1002543AC(v362, (uint64_t)&v553);
      uint64_t v363 = *(void *)v84;
      int v364 = *((_DWORD *)v84 + 2);
      uint64_t v365 = v535;
      if (swift_getEnumCaseMultiPayload() != 32) {
        goto LABEL_188;
      }
      uint64_t v366 = *(void *)v365;
      if (v363)
      {
        if (!v366)
        {
          swift_bridgeObjectRelease();
LABEL_257:
          swift_bridgeObjectRelease();
LABEL_258:
          swift_bridgeObjectRelease();
LABEL_259:
          uint64_t v95 = v26;
          goto LABEL_260;
        }
        char v367 = static MailboxName.== infix(_:_:)(v363, v364, *(void *)v365, *(_DWORD *)(v365 + 8));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v367 & 1) == 0) {
          goto LABEL_257;
        }
      }
      else if (v366)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_258;
      }
      sub_100240798();
      sub_100219898();
      goto LABEL_237;
    case 0x21u:
      uint64_t v368 = sub_1002540D8();
      sub_1002543AC(v368, (uint64_t)&v553 + 8);
      if (sub_100254224() != 33) {
        goto LABEL_189;
      }
      int v369 = sub_100240798();
      sub_10021E62C(v369, v370, v371, v372, v373, v374, v375, v376, v497, v498, v499, v500, v501, v502, v503, v504, v505, v506, v507,
        v508,
        v509,
        v510,
        v511,
        v512,
        v513,
        v514,
        v515,
        v516,
        v517,
        v518,
        v519,
        v520,
        v521,
        v522);
      goto LABEL_237;
    case 0x22u:
      uint64_t v377 = sub_1002540D8();
      sub_1002543AC(v377, (uint64_t)&v554);
      if (sub_100254224() != 34) {
        goto LABEL_189;
      }
      sub_100240798();
      sub_10021A1B4();
      goto LABEL_237;
    case 0x23u:
      uint64_t v378 = sub_1002540D8();
      sub_1002543AC(v378, (uint64_t)&v555);
      uint64_t v380 = *(void *)v84;
      uint64_t v379 = *((void *)v84 + 1);
      if (sub_100254204() != 35) {
        goto LABEL_189;
      }
      uint64_t v381 = *(void *)v20;
      uint64_t v382 = *(void *)(v20 + 8);
      if (v380 != v381 || v379 != v382) {
        goto LABEL_210;
      }
      goto LABEL_212;
    case 0x24u:
      uint64_t v384 = sub_1002540D8();
      sub_1002543AC(v384, (uint64_t)&a9);
      uint64_t v386 = *(void *)v84;
      uint64_t v385 = *((void *)v84 + 1);
      if (sub_100254224() != 36) {
        goto LABEL_188;
      }
      if (v386 == *(void *)v88 && v385 == *(void *)(v88 + 8))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v388 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v388 & 1) == 0) {
          goto LABEL_257;
        }
      }
      sub_100240798();
      sub_10021E838();
LABEL_237:
      swift_bridgeObjectRelease();
      goto LABEL_238;
    case 0x25u:
      BOOL v389 = sub_100254244() == 37;
      goto LABEL_158;
    case 0x26u:
      BOOL v389 = sub_100254244() == 38;
      goto LABEL_158;
    case 0x27u:
      BOOL v389 = sub_100254244() == 39;
      goto LABEL_158;
    case 0x28u:
      BOOL v389 = sub_100254244() == 40;
      goto LABEL_158;
    case 0x29u:
      BOOL v389 = sub_100254244() == 41;
      goto LABEL_158;
    case 0x2Au:
      BOOL v389 = sub_100254244() == 42;
      goto LABEL_158;
    case 0x2Bu:
      BOOL v389 = sub_100254244() == 43;
      goto LABEL_158;
    case 0x2Cu:
      BOOL v389 = sub_100254244() == 44;
      goto LABEL_158;
    case 0x2Du:
      BOOL v389 = sub_100254244() == 45;
      goto LABEL_158;
    case 0x2Eu:
      BOOL v389 = sub_100254244() == 46;
LABEL_158:
      uint64_t v26 = v536;
      if (!v389) {
        goto LABEL_190;
      }
      goto LABEL_160;
    default:
      uint64_t v91 = sub_1002540D8();
      sub_10024EB28(v91, (uint64_t)v84);
      uint64_t v92 = *(void *)v84;
      if (sub_1002542B0()) {
        goto LABEL_188;
      }
      if ((*((unsigned int *)v84 + 2) | ((unint64_t)*((unsigned int *)v84 + 2) << 32)) != (*(unsigned int *)(v90 + 8) | ((unint64_t)*(unsigned int *)(v90 + 8) << 32))) {
        goto LABEL_230;
      }
      sub_100219B44(v92, *(void *)v90);
      sub_100254930();
      swift_bridgeObjectRelease();
      if ((v90 & 1) == 0) {
        goto LABEL_257;
      }
      sub_10022C948();
      sub_10021B7F8();
      swift_bridgeObjectRelease();
      goto LABEL_238;
  }
}

void sub_10024A958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10024A990(a1, a2, (uint64_t)&unk_1007108C0, (uint64_t)&unk_1007108C8, (uint64_t)&unk_100710A18, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_10024A974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10024A990(a1, a2, (uint64_t)&unk_1007104C8, (uint64_t)&unk_1007104D8, (uint64_t)&unk_1007104D0, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_10024A990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FE5B4();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = sub_10000566C(v28);
  sub_1001F3BBC();
  __chkstk_darwin(v35);
  sub_1002244C0();
  uint64_t v36 = sub_10000566C(v27);
  uint64_t v37 = sub_100224550(v36);
  __chkstk_darwin(v37);
  uint64_t v38 = (uint64_t *)sub_100254744();
  uint64_t v39 = sub_10000566C(v38);
  uint64_t v40 = sub_100224550(v39);
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v43 = (char *)&a9 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (uint64_t)&v43[*(int *)(v41 + 56)];
  sub_1001F36E4(v33, (uint64_t)v43, v27);
  sub_1001F36E4(v31, v44, v27);
  sub_100207FC4((uint64_t)v43, 1, v34);
  if (v45)
  {
    sub_100207FC4(v44, 1, v34);
    if (!v45) {
      uint64_t v27 = v25;
    }
  }
  else
  {
    sub_1001F36E4((uint64_t)v43, v21, v27);
    sub_100207FC4(v44, 1, v34);
    if (v45)
    {
      sub_1001F3A28(v21, v29);
      uint64_t v27 = v25;
    }
    else
    {
      sub_10025406C(v44, v20, v29);
      sub_100223B18();
      sub_1005E35A0();
      sub_1001F3A28(v20, v29);
      sub_1001F3A28(v21, v29);
    }
  }
  sub_1001F3A28((uint64_t)v43, v27);
  sub_1001FE57C();
}

void sub_10024AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10024A990(a1, a2, (uint64_t)&unk_100710520, (uint64_t)&qword_100710530, (uint64_t)&unk_100710A08, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

Swift::Int Command.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10024ABC4()
{
  return sub_1005E3470();
}

unint64_t Command.debugDescription.getter()
{
  return sub_10020F670(0, (int64_t)sub_10024F170);
}

void sub_10024AC44()
{
  sub_1001FE5B4();
  uint64_t v321 = v0;
  uint64_t v6 = v5;
  uint64_t v7 = sub_10000566C(&qword_1007104D8);
  uint64_t v8 = sub_100224550(v7);
  __chkstk_darwin(v8);
  sub_100224A54();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  sub_100254920();
  __chkstk_darwin(v13);
  Swift::Int v15 = (Swift::Int)&v318[-v14];
  uint64_t v16 = sub_10000566C(&qword_1007108C8);
  uint64_t v17 = sub_100224550(v16);
  __chkstk_darwin(v17);
  sub_100224A54();
  sub_100254910();
  __chkstk_darwin(v18);
  sub_100254D50();
  __chkstk_darwin(v19);
  sub_10025463C();
  __chkstk_darwin(v20);
  uint64_t v22 = &v318[-v21];
  uint64_t v23 = type metadata accessor for Command();
  sub_1001F3BBC();
  __chkstk_darwin(v24);
  sub_100254978();
  sub_10024EB28(v6, (uint64_t)v0);
  sub_10022C948();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100254398();
      uint64_t v31 = sub_1002547E4();
      sub_1002542D0(v31, v32, (uint64_t)v0);
      if (v33)
      {
        v34._uint64_t countAndFlagsBits = sub_1002547E4();
        ByteBuffer._setStringSlowpath(_:at:)(v34, v15);
      }
      sub_100254260();
      if (v28) {
        goto LABEL_232;
      }
      uint64_t v36 = sub_100254A4C(v35);
      sub_10025E538(v36);
      sub_1002542E8();
      uint64_t v0 = (void *)(v1 + v23);
      if (!__OFADD__(v1, v23)) {
        break;
      }
      __break(1u);
LABEL_14:
      sub_1002543DC();
      uint64_t v37 = sub_10025479C();
      sub_100210AD0(v37, v38, (uint64_t)v0, v2);
      if (v39)
      {
        v40._uint64_t countAndFlagsBits = sub_10025479C();
        ByteBuffer._setStringSlowpath(_:at:)(v40, v2);
      }
      sub_10025477C();
      if (v28) {
        goto LABEL_233;
      }
      *(_DWORD *)(v3 + 20) = v41;
      uint64_t v42 = swift_bridgeObjectRetain();
      sub_10025E538(v42);
      sub_100254380();
      sub_1002B56B8(v11);
      sub_100254380();
      swift_bridgeObjectRelease();
      uint64_t v0 = (void *)(2 * v23);
      if (__OFADD__(v23, v23))
      {
        __break(1u);
LABEL_20:
        sub_10025406C((uint64_t)v0, (uint64_t)&v323, &qword_100710A10);
        uint64_t v43 = v0[9];
        uint64_t v44 = v0[11];
        unint64_t v45 = v0[12];
        sub_100254BF4();
        uint64_t v48 = v47 | (v46 << 32);
        uint64_t v50 = (uint64_t *)v0[14];
        unsigned __int8 v322 = *((unsigned char *)v0 + 111);
        char v49 = v322;
        sub_10024C1D4(&v323, v43, v51, v44, v45, v48 | ((unint64_t)v322 << 56), v50);
        swift_bridgeObjectRelease();
        sub_1001F33B8(v44, v45, v48, v49);
        swift_bridgeObjectRelease();
        sub_10025401C(&v323, (void (*)(void, void, void, void, void, void, void, void, void))sub_10024EEF4);
      }
      break;
    case 2u:
      goto LABEL_14;
    case 3u:
      goto LABEL_20;
    case 4u:
      uint64_t v52 = *v0;
      uint64_t v53 = v0[1];
      uint64_t v54 = v0[3];
      unint64_t v55 = v0[4];
      sub_100254AA8();
      uint64_t v59 = (uint64_t *)v0[6];
      LOBYTE(v323) = *((unsigned char *)v0 + 47);
      char v58 = v323;
      sub_10024C5A4(v52, v53, v60, v54, v55, v57 | (v56 << 32) | ((unint64_t)v323 << 56), v59);
      swift_bridgeObjectRelease();
      uint64_t v61 = sub_10025478C();
      sub_1001F33B8(v61, v62, v63, v58);
      goto LABEL_32;
    case 5u:
      sub_10024C848(*v0, *((unsigned int *)v0 + 2), v0[2], v0[3], *((unsigned int *)v0 + 8) | ((unint64_t)*((unsigned __int16 *)v0 + 18) << 32) | ((unint64_t)*((unsigned __int8 *)v0 + 38) << 48));
      sub_1002546A4();
      goto LABEL_152;
    case 6u:
      sub_10024C9F0(*v0, *((unsigned int *)v0 + 2), v0[2], *((unsigned int *)v0 + 6), v0[4], v0[5], v0[6]);
      sub_1002546A4();
      goto LABEL_150;
    case 7u:
      sub_1002543DC();
      sub_100254814(0x5443454C4553);
      if (v64)
      {
        v65._uint64_t countAndFlagsBits = 0x205443454C4553;
        v65._object = (void *)0xE700000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v65, v2);
      }
      sub_10025477C();
      if (v28) {
        goto LABEL_234;
      }
      *(_DWORD *)(v3 + 20) = v66;
      uint64_t v67 = swift_bridgeObjectRetain();
      sub_10025E538(v67);
      sub_100254380();
      BOOL v68 = __OFADD__(v1, v23);
      uint64_t v69 = v1 + v23;
      if (v68) {
        goto LABEL_235;
      }
      sub_1002B56B8(v11);
      sub_100254380();
      swift_bridgeObjectRelease();
      if (!__OFADD__(v69, v23)) {
        break;
      }
      __break(1u);
LABEL_31:
      uint64_t v70 = sub_100254728();
      sub_10024CBD0(v70);
LABEL_32:
      swift_bridgeObjectRelease();
      goto LABEL_165;
    case 8u:
      goto LABEL_31;
    case 9u:
      sub_100254398();
      uint64_t v71 = sub_100254760();
      sub_1002542D0(v71, v72, (uint64_t)v0);
      if (v73)
      {
        v74._uint64_t countAndFlagsBits = sub_100254760();
        ByteBuffer._setStringSlowpath(_:at:)(v74, v15);
      }
      sub_100254260();
      if (v28) {
        goto LABEL_236;
      }
      uint64_t v76 = sub_100254A4C(v75);
      sub_10025E538(v76);
      sub_1002542E8();
      uint64_t v0 = (void *)(v1 + v23);
      if (!__OFADD__(v1, v23)) {
        break;
      }
      __break(1u);
LABEL_39:
      sub_100254398();
      uint64_t v77 = sub_100254650();
      sub_1002542D0(v77, v78, (uint64_t)v0);
      if (v79)
      {
        v80._uint64_t countAndFlagsBits = sub_100254650();
        ByteBuffer._setStringSlowpath(_:at:)(v80, v15);
      }
      sub_100254260();
      if (v28) {
        goto LABEL_237;
      }
      uint64_t v82 = sub_100254A4C(v81);
      sub_10025E538(v82);
      sub_1002542E8();
      uint64_t v0 = (void *)(v1 + v23);
      if (!__OFADD__(v1, v23)) {
        break;
      }
      __break(1u);
LABEL_45:
      uint64_t v84 = *v0;
      uint64_t v83 = (void *)v0[1];
      uint64_t v85 = v0[2];
      unint64_t v86 = v0[3];
      int v319 = *((unsigned __int8 *)v0 + 38);
      int v87 = *((unsigned __int16 *)v0 + 18);
      uint64_t v320 = *((unsigned int *)v0 + 8);
      uint64_t v88 = (uint64_t)(v321 + 1);
      Swift::Int v89 = *((unsigned int *)v321 + 5);
      uint64_t v90 = sub_1002544EC();
      sub_100210AD0(v90, v91, v88, v89);
      if (v93)
      {
        v94._uint64_t countAndFlagsBits = sub_1002544EC();
        Swift::Int v92 = ByteBuffer._setStringSlowpath(_:at:)(v94, v89);
      }
      Swift::Int v95 = v92;
      int v96 = *((_DWORD *)v321 + 5);
      Swift::Int v97 = (v96 + v92);
      if (__CFADD__(v96, v92)) {
        goto LABEL_238;
      }
      *((_DWORD *)v321 + 5) = v97;
      swift_bridgeObjectRetain();
      sub_100210AD0(v84, (unint64_t)v83, v88, v97);
      Swift::Int v99 = v98;
      uint64_t v101 = v100;
      swift_bridgeObjectRelease();
      if (v101)
      {
        v102._uint64_t countAndFlagsBits = v84;
        v102._object = v83;
        Swift::Int v99 = ByteBuffer._setStringSlowpath(_:at:)(v102, v97);
      }
      int v103 = *((_DWORD *)v321 + 5);
      BOOL v28 = __CFADD__(v103, v99);
      int v104 = v103 + v99;
      if (v28) {
        goto LABEL_239;
      }
      *((_DWORD *)v321 + 5) = v104;
      uint64_t v105 = v95 + v99;
      if (__OFADD__(v95, v99)) {
        goto LABEL_240;
      }
      if (v85)
      {
        uint64_t v323 = v85;
        unint64_t v324 = v86;
        int v325 = v320;
        __int16 v326 = (v320 | ((unint64_t)(v87 | (v319 << 16)) << 32)) >> 32;
        char v327 = (v320 | ((unint64_t)(v87 | (v319 << 16)) << 32)) >> 48;
        sub_10024DEE0(&v323, (uint64_t)v321);
        sub_100254380();
        swift_release();
      }
      else
      {
LABEL_226:
        swift_bridgeObjectRelease();
        uint64_t v101 = 0;
      }
      if (__OFADD__(v105, v101))
      {
        __break(1u);
LABEL_230:
        __break(1u);
LABEL_231:
        __break(1u);
LABEL_232:
        __break(1u);
LABEL_233:
        __break(1u);
        __break(1u);
LABEL_234:
        __break(1u);
LABEL_235:
        __break(1u);
LABEL_236:
        __break(1u);
LABEL_237:
        __break(1u);
LABEL_238:
        __break(1u);
LABEL_239:
        __break(1u);
LABEL_240:
        __break(1u);
LABEL_241:
        __break(1u);
LABEL_242:
        __break(1u);
LABEL_243:
        __break(1u);
LABEL_244:
        __break(1u);
LABEL_245:
        __break(1u);
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
LABEL_249:
        __break(1u);
LABEL_250:
        __break(1u);
LABEL_251:
        __break(1u);
LABEL_252:
        __break(1u);
LABEL_253:
        __break(1u);
LABEL_254:
        __break(1u);
LABEL_255:
        __break(1u);
LABEL_256:
        __break(1u);
LABEL_257:
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
LABEL_263:
        __break(1u);
LABEL_264:
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
LABEL_271:
        __break(1u);
LABEL_272:
        __break(1u);
LABEL_273:
        __break(1u);
LABEL_274:
        __break(1u);
LABEL_275:
        __break(1u);
LABEL_276:
        __break(1u);
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
LABEL_279:
        __break(1u);
LABEL_280:
        __break(1u);
        JUMPOUT(0x10024C114);
      }
      return;
    case 0xAu:
      goto LABEL_39;
    case 0xBu:
      goto LABEL_45;
    case 0xCu:
      unint64_t v107 = *v0;
      unint64_t v106 = v0[1];
      unint64_t v109 = v0[2];
      unint64_t v108 = v0[3];
      uint64_t v110 = (uint64_t)v321;
      Swift::Int v111 = *((unsigned int *)v321 + 5);
      uint64_t v112 = sub_100254CA8();
      sub_1002407A4(v112, v113, v110 + 8);
      if (v115)
      {
        v116._uint64_t countAndFlagsBits = sub_100254CA8();
        Swift::Int v114 = ByteBuffer._setStringSlowpath(_:at:)(v116, v111);
      }
      Swift::Int v117 = v114;
      int v118 = *(_DWORD *)(v110 + 20);
      BOOL v28 = __CFADD__(v118, v114);
      int v119 = v118 + v114;
      if (v28) {
        goto LABEL_241;
      }
      *(_DWORD *)(v110 + 20) = v119;
      swift_bridgeObjectRetain();
      sub_10025DCBC(v107, v106);
      sub_100254380();
      BOOL v68 = __OFADD__(v117, v23);
      Swift::Int v120 = v117 + v23;
      if (v68) {
        goto LABEL_242;
      }
      Swift::Int v121 = *(unsigned int *)(v110 + 20);
      sub_100210AD0(32, 0xE100000000000000, v110 + 8, *(_DWORD *)(v110 + 20));
      if (v123)
      {
        v124._uint64_t countAndFlagsBits = 32;
        v124._object = (void *)0xE100000000000000;
        Swift::Int v122 = ByteBuffer._setStringSlowpath(_:at:)(v124, v121);
      }
      int v125 = *(_DWORD *)(v110 + 20);
      BOOL v28 = __CFADD__(v125, v122);
      int v126 = v125 + v122;
      if (v28) {
        goto LABEL_243;
      }
      *(_DWORD *)(v110 + 20) = v126;
      Swift::Int v127 = v120 + v122;
      if (__OFADD__(v120, v122)) {
        goto LABEL_244;
      }
      swift_bridgeObjectRetain();
      sub_10025DCBC(v109, v108);
      sub_100254380();
      swift_bridgeObjectRelease_n();
      if (!__OFADD__(v127, v120)) {
        break;
      }
      __break(1u);
LABEL_65:
      sub_1002548E8();
      sub_10024CD7C();
      goto LABEL_165;
    case 0xDu:
      goto LABEL_65;
    case 0xEu:
      sub_10000566C(&qword_1007108E8);
      sub_100254DD4();
      sub_10025406C((uint64_t)v0, v15, &qword_1007104D8);
      uint64_t v128 = (uint64_t)v321;
      Swift::Int v129 = *((unsigned int *)v321 + 5);
      uint64_t v130 = sub_100254C48();
      sub_1002407A4(v130, v131, v128 + 8);
      if (v132)
      {
        v133._uint64_t countAndFlagsBits = sub_100254C48();
        ByteBuffer._setStringSlowpath(_:at:)(v133, v129);
      }
      sub_100254868();
      if (v28) {
        goto LABEL_245;
      }
      *(_DWORD *)(v128 + 20) = v134;
      uint64_t v135 = sub_1002A4E78(v15);
      uint64_t v136 = v3 + v135;
      if (__OFADD__(v3, v135)) {
        goto LABEL_246;
      }
      sub_1002548AC();
      if (v137) {
        sub_100254B50();
      }
      sub_100254C3C();
      if (v28) {
        goto LABEL_247;
      }
      sub_100254C30(v138);
      if (v68) {
        goto LABEL_248;
      }
      uint64_t v139 = swift_bridgeObjectRetain();
      sub_10025E538(v139);
      sub_1002542E8();
      if (__OFADD__(v1, v136)) {
        goto LABEL_249;
      }
      uint64_t v140 = &qword_1007104D8;
      uint64_t v141 = v15;
      goto LABEL_124;
    case 0xFu:
      uint64_t v142 = sub_10000566C(&qword_1007108F8);
      uint64_t v143 = *(void *)((char *)v0 + *(int *)(v142 + 48));
      uint64_t v144 = *(void *)((char *)v0 + *(int *)(v142 + 64));
      uint64_t v145 = &qword_1007104D8;
      uint64_t v146 = sub_1002132AC();
      sub_10025406C(v146, v147, &qword_1007104D8);
      sub_10024CE18(v1, v143, v144);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v141 = v1;
      goto LABEL_119;
    case 0x10u:
      sub_10000566C(&qword_1007108F0);
      sub_100254DC0();
      uint64_t v149 = *v148;
      uint64_t v150 = v148[1];
      uint64_t v151 = sub_1002132AC();
      sub_10025406C(v151, v152, &qword_1007104D8);
      sub_10024D0B0(v1, v23, v149, v150);
      sub_1002546A4();
      sub_10024EEEC();
      uint64_t v141 = v1;
      uint64_t v140 = &qword_1007104D8;
      goto LABEL_124;
    case 0x11u:
      unint64_t v153 = *v0;
      sub_10024D458(*v0, v0[1], v0[2], v0[3]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1002239B4(v153);
      break;
    case 0x12u:
      sub_10000566C(&qword_1007108E8);
      sub_10025406C((uint64_t)v0, v11, &qword_1007104D8);
      uint64_t v154 = (uint64_t)v321;
      Swift::Int v155 = *((unsigned int *)v321 + 5);
      uint64_t v156 = sub_100254C1C();
      sub_1002407A4(v156, v157, v154 + 8);
      if (v158)
      {
        v159._uint64_t countAndFlagsBits = sub_100254C1C();
        ByteBuffer._setStringSlowpath(_:at:)(v159, v155);
      }
      sub_100254868();
      if (v28) {
        goto LABEL_250;
      }
      *(_DWORD *)(v154 + 20) = v160;
      if (__OFADD__(v3, sub_1002A4E78(v11))) {
        goto LABEL_251;
      }
      sub_1002548AC();
      if (v161) {
        sub_100254B50();
      }
      sub_100254C3C();
      if (v28) {
        goto LABEL_252;
      }
      sub_100254C30(v162);
      if (v68) {
        goto LABEL_253;
      }
      uint64_t v163 = swift_bridgeObjectRetain();
      Swift::Int v164 = sub_10025E538(v163);
      sub_100254DE0();
      if (__OFADD__(v1, v164)) {
        goto LABEL_254;
      }
      uint64_t v140 = &qword_1007104D8;
      uint64_t v141 = v11;
      goto LABEL_124;
    case 0x13u:
      uint64_t v165 = (uint64_t)v321;
      Swift::Int v166 = *((unsigned int *)v321 + 5);
      sub_100210AD0(2114633, 0xE300000000000000, (uint64_t)(v321 + 1), *((_DWORD *)v321 + 5));
      if (v167)
      {
        v168._uint64_t countAndFlagsBits = 2114633;
        v168._object = (void *)0xE300000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v168, v166);
      }
      sub_100254260();
      if (v28) {
        goto LABEL_255;
      }
      *(_DWORD *)(v165 + 20) = v169;
      uint64_t v170 = sub_10025478C();
      sub_100275BF8(v170, v171, v172);
      goto LABEL_151;
    case 0x14u:
      sub_10000566C(&qword_1007108E0);
      sub_100254DD4();
      sub_10025406C((uint64_t)v0, v3, &qword_1007108C8);
      unsigned int v173 = sub_1002548D0();
      sub_100254458(v173 | 0x59504F4300000000);
      if (v175) {
        Swift::Int v174 = sub_1002545DC(0x59504F4320444955);
      }
      Swift::Int v176 = v174;
      int v177 = *(_DWORD *)(v4 + 20);
      BOOL v28 = __CFADD__(v177, v174);
      int v178 = v177 + v174;
      if (v28) {
        goto LABEL_256;
      }
      *(_DWORD *)(v4 + 20) = v178;
      uint64_t v179 = sub_1002A4EA0(v3);
      Swift::Int v180 = v176 + v179;
      if (__OFADD__(v176, v179)) {
        goto LABEL_257;
      }
      sub_100254270();
      if (v181) {
        sub_1002407BC();
      }
      sub_100254C3C();
      if (v28) {
        goto LABEL_258;
      }
      sub_100254C30(v182);
      if (v68) {
        goto LABEL_259;
      }
      uint64_t v183 = swift_bridgeObjectRetain();
      sub_10025E538(v183);
      sub_1002542E8();
      if (__OFADD__(v1, v180)) {
        goto LABEL_260;
      }
      uint64_t v140 = &qword_1007108C8;
      uint64_t v141 = v3;
      goto LABEL_124;
    case 0x15u:
      sub_10000566C(&qword_1007108E0);
      sub_100254DD4();
      sub_10025406C((uint64_t)v0, v2, &qword_1007108C8);
      unsigned int v184 = sub_1002548D0();
      sub_100254458(v184 | 0x45564F4D00000000);
      if (v185) {
        sub_1002545DC(0x45564F4D20444955);
      }
      sub_100254868();
      if (v28) {
        goto LABEL_261;
      }
      *(_DWORD *)(v4 + 20) = v186;
      uint64_t v187 = sub_1002A4EA0(v2);
      uint64_t v188 = v3 + v187;
      if (__OFADD__(v3, v187)) {
        goto LABEL_262;
      }
      sub_100254270();
      if (v189) {
        sub_1002407BC();
      }
      sub_100254C3C();
      if (v28) {
        goto LABEL_263;
      }
      sub_100254C30(v190);
      if (v68) {
        goto LABEL_264;
      }
      uint64_t v191 = swift_bridgeObjectRetain();
      sub_10025E538(v191);
      sub_1002542E8();
      if (__OFADD__(v1, v188)) {
        goto LABEL_265;
      }
      uint64_t v140 = &qword_1007108C8;
      uint64_t v141 = v2;
LABEL_124:
      sub_1001F3A28(v141, v140);
      break;
    case 0x16u:
      uint64_t v192 = sub_10000566C(&qword_1007108D8);
      uint64_t v193 = *(void *)((char *)v0 + *(int *)(v192 + 48));
      uint64_t v194 = *(void *)((char *)v0 + *(int *)(v192 + 64));
      sub_10025406C((uint64_t)v0, v4, &qword_1007108C8);
      sub_10024CF5C(v4, v193, v194);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v141 = v4;
      uint64_t v140 = &qword_1007108C8;
      goto LABEL_124;
    case 0x17u:
      unint64_t v195 = *v0;
      uint64_t v196 = v0[1];
      uint64_t v197 = v0[2];
      uint64_t v198 = v0[3];
      uint64_t v199 = (uint64_t)v321;
      Swift::Int v200 = *((unsigned int *)v321 + 5);
      sub_100210AD0(541346133, 0xE400000000000000, (uint64_t)(v321 + 1), *((_DWORD *)v321 + 5));
      if (v201)
      {
        v202._uint64_t countAndFlagsBits = 541346133;
        v202._object = (void *)0xE400000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v202, v200);
      }
      sub_100254260();
      if (v28) {
        goto LABEL_266;
      }
      *(_DWORD *)(v199 + 20) = v203;
      sub_10024D458(v195, v196, v197, v198);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1002239B4(v195);
      break;
    case 0x18u:
      sub_10000566C(&qword_1007108D0);
      sub_1002549C0();
      uint64_t v145 = &qword_1007108C8;
      sub_10025406C((uint64_t)v0, v4, &qword_1007108C8);
      sub_10024D27C(v4, v23, v1, v11);
      sub_1002546A4();
      sub_10024EEEC();
      uint64_t v141 = v4;
LABEL_119:
      uint64_t v140 = v145;
      goto LABEL_124;
    case 0x19u:
      sub_10025406C((uint64_t)v0, (uint64_t)v22, &qword_1007108C8);
      uint64_t v204 = (uint64_t)v321;
      Swift::Int v205 = *((unsigned int *)v321 + 5);
      uint64_t v206 = sub_1002547CC();
      sub_100210AD0(v206, v207, v204 + 8, v205);
      if (v208)
      {
        v209._uint64_t countAndFlagsBits = sub_1002547CC();
        ByteBuffer._setStringSlowpath(_:at:)(v209, v205);
      }
      sub_100254260();
      if (v28) {
        goto LABEL_267;
      }
      *(_DWORD *)(v204 + 20) = v210;
      sub_1002A4EA0((uint64_t)v22);
      uint64_t v140 = &qword_1007108C8;
      uint64_t v141 = (uint64_t)v22;
      goto LABEL_124;
    case 0x1Au:
      uint64_t v211 = *v0;
      uint64_t v212 = *((unsigned int *)v0 + 2);
      uint64_t v213 = *((unsigned int *)v0 + 3);
      int v214 = *((_DWORD *)v0 + 4);
      int v215 = *((unsigned __int16 *)v0 + 10);
      int v216 = *((unsigned __int8 *)v0 + 22);
      uint64_t v217 = (uint64_t)v321;
      Swift::Int v15 = *((unsigned int *)v321 + 5);
      uint64_t v218 = sub_1002546BC();
      sub_1002542D0(v218, v219, v217 + 8);
      if (v221)
      {
        v222._uint64_t countAndFlagsBits = sub_1002546BC();
        Swift::Int v220 = ByteBuffer._setStringSlowpath(_:at:)(v222, v15);
      }
      uint64_t v1 = v220;
      int v223 = *(_DWORD *)(v217 + 20);
      BOOL v28 = __CFADD__(v223, v220);
      int v224 = v223 + v220;
      if (v28) {
        goto LABEL_268;
      }
      *(_DWORD *)(v217 + 20) = v224;
      if (v213 < v212) {
        goto LABEL_269;
      }
      if (v214 - (v216 | (v215 << 8)) < v213) {
        goto LABEL_270;
      }
      uint64_t v323 = v211;
      unint64_t v324 = __PAIR64__(v213, v212);
      int v325 = v214;
      __int16 v326 = v215;
      char v327 = v216;
      uint64_t v328 = v212;
      uint64_t v329 = v213;
      swift_retain();
      uint64_t v23 = sub_10025E0BC(&v323);
      swift_release_n();
      uint64_t v0 = (void *)(v1 + v23);
      if (!__OFADD__(v1, v23)) {
        break;
      }
      __break(1u);
LABEL_133:
      sub_100254398();
      uint64_t v225 = sub_1002544C8();
      sub_1002542D0(v225, v226, (uint64_t)v0);
      if (v227)
      {
        v228._uint64_t countAndFlagsBits = sub_1002544C8();
        ByteBuffer._setStringSlowpath(_:at:)(v228, v15);
      }
      sub_100254260();
      if (v28) {
        goto LABEL_271;
      }
      uint64_t v230 = sub_100254A4C(v229);
      sub_10025E538(v230);
      sub_1002542E8();
      uint64_t v0 = (void *)(v1 + v23);
      if (__OFADD__(v1, v23))
      {
        __break(1u);
LABEL_139:
        sub_10024D644(*v0, v0[1], *((unsigned int *)v0 + 4) | ((unint64_t)*((unsigned __int16 *)v0 + 10) << 32) | ((unint64_t)*((unsigned __int8 *)v0 + 22) << 48), v0[3]);
        swift_release();
LABEL_165:
        swift_bridgeObjectRelease();
      }
      break;
    case 0x1Bu:
      goto LABEL_133;
    case 0x1Cu:
      goto LABEL_139;
    case 0x1Du:
      sub_10024D79C(*v0, v0[1], *((unsigned int *)v0 + 4), v0[3]);
      sub_1002546A4();
      swift_bridgeObjectRelease();
      goto LABEL_165;
    case 0x1Eu:
      uint64_t v231 = (uint64_t)v321;
      Swift::Int v232 = *((unsigned int *)v321 + 5);
      uint64_t v233 = sub_100254670();
      sub_1002407A4(v233, v234, v231 + 8);
      if (v236)
      {
        v237._uint64_t countAndFlagsBits = sub_100254670();
        Swift::Int v235 = ByteBuffer._setStringSlowpath(_:at:)(v237, v232);
      }
      Swift::Int v238 = v235;
      int v239 = *(_DWORD *)(v231 + 20);
      BOOL v28 = __CFADD__(v239, v235);
      int v240 = v239 + v235;
      if (v28) {
        goto LABEL_272;
      }
      *(_DWORD *)(v231 + 20) = v240;
      uint64_t v241 = swift_bridgeObjectRetain();
      Swift::Int v242 = sub_10025E538(v241);
      swift_bridgeObjectRelease();
      BOOL v68 = __OFADD__(v238, v242);
      Swift::Int v243 = v238 + v242;
      if (v68) {
        goto LABEL_273;
      }
      Swift::Int v244 = *(unsigned int *)(v231 + 20);
      sub_100210AD0(32, 0xE100000000000000, v231 + 8, *(_DWORD *)(v231 + 20));
      if (v246)
      {
        v247._uint64_t countAndFlagsBits = 32;
        v247._object = (void *)0xE100000000000000;
        Swift::Int v245 = ByteBuffer._setStringSlowpath(_:at:)(v247, v244);
      }
      int v248 = *(_DWORD *)(v231 + 20);
      BOOL v28 = __CFADD__(v248, v245);
      int v249 = v248 + v245;
      if (v28) {
        goto LABEL_274;
      }
      *(_DWORD *)(v231 + 20) = v249;
      BOOL v68 = __OFADD__(v243, v245);
      Swift::Int v250 = v243 + v245;
      if (v68) {
        goto LABEL_275;
      }
      sub_10025478C();
      sub_1001F225C();
      if (__OFADD__(v250, v251)) {
        goto LABEL_280;
      }
LABEL_150:
      swift_bridgeObjectRelease();
LABEL_151:
      swift_release();
      swift_release();
LABEL_152:
      swift_release();
      break;
    case 0x1Fu:
      sub_100254A94();
      uint64_t v252 = (uint64_t)v321;
      Swift::Int v253 = *((unsigned int *)v321 + 5);
      uint64_t v254 = sub_1002547FC();
      sub_100210AD0(v254, v255, v252 + 8, v253);
      if (v256)
      {
        v257._uint64_t countAndFlagsBits = sub_1002547FC();
        ByteBuffer._setStringSlowpath(_:at:)(v257, v253);
      }
      sub_100254260();
      if (v28) {
        goto LABEL_276;
      }
      *(_DWORD *)(v252 + 20) = v258;
      sub_100268E60((unint64_t *)&v323);
      sub_10024EE20((unint64_t *)&v323);
      break;
    case 0x20u:
      uint64_t v259 = sub_100254728();
      sub_10024DA38(v259);
      swift_bridgeObjectRelease();
      goto LABEL_165;
    case 0x21u:
      sub_1002548E8();
      sub_10024DBA4();
      goto LABEL_165;
    case 0x22u:
      uint64_t v260 = sub_1002548E8();
      sub_10024DC40(v260);
      goto LABEL_165;
    case 0x23u:
      uint64_t v261 = *v0;
      uint64_t v262 = (void *)v0[1];
      uint64_t v323 = 0x53534552504D4F43;
      unint64_t v324 = 0xE900000000000020;
      swift_bridgeObjectRetain();
      v330._uint64_t countAndFlagsBits = v261;
      v330._object = v262;
      sub_1005E1E30(v330);
      swift_bridgeObjectRelease();
      uint64_t v263 = (uint64_t)v321;
      swift_bridgeObjectRetain();
      sub_100254428();
      int v265 = v264;
      LOBYTE(v261) = v266;
      swift_bridgeObjectRelease();
      if (v261) {
        int v265 = sub_1002545A0();
      }
      swift_bridgeObjectRelease();
      int v267 = *(_DWORD *)(v263 + 20);
      BOOL v28 = __CFADD__(v267, v265);
      int v268 = v267 + v265;
      if (v28) {
        goto LABEL_277;
      }
      *(_DWORD *)(v263 + 20) = v268;
      goto LABEL_165;
    case 0x24u:
      uint64_t v269 = v0[2];
      uint64_t v23 = (uint64_t)v321;
      swift_bridgeObjectRetain();
      sub_100254428();
      if (v271) {
        Swift::Int v270 = sub_1002545A0();
      }
      Swift::Int v272 = v270;
      swift_bridgeObjectRelease();
      int v273 = *(_DWORD *)(v23 + 20);
      BOOL v28 = __CFADD__(v273, v272);
      int v274 = v273 + v272;
      if (v28) {
        goto LABEL_278;
      }
      *(_DWORD *)(v23 + 20) = v274;
      sub_1001EB9B4(v269, 32, 0xE100000000000000, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, v23);
      sub_100254380();
      swift_bridgeObjectRelease();
      if (!__OFADD__(v272, v23)) {
        break;
      }
      __break(1u);
LABEL_172:
      sub_1002541F4();
      uint64_t v275 = sub_1002465FC();
      sub_1002541D8(v275, v276);
      if (v277)
      {
        uint64_t v278 = sub_1002465FC();
        sub_1002543C4(v278, v279);
      }
      sub_1002541AC();
      if (v28)
      {
        __break(1u);
LABEL_177:
        sub_1002541F4();
        uint64_t v281 = sub_100254CBC();
        sub_1002541D8(v281, v282);
        if (v283)
        {
          uint64_t v284 = sub_100254CBC();
          sub_1002543C4(v284, v285);
        }
        sub_1002541AC();
        if (v28)
        {
          __break(1u);
LABEL_182:
          sub_1002541F4();
          sub_1002541D8(1347374926, 0xE400000000000000);
          if (v286) {
            sub_1002543C4(1347374926, 0xE400000000000000);
          }
          sub_1002541AC();
          if (v28)
          {
            __break(1u);
LABEL_187:
            sub_1002541F4();
            uint64_t v287 = sub_1002549A8();
            sub_1002541D8(v287, v288);
            if (v289)
            {
              uint64_t v290 = sub_1002549A8();
              sub_1002543C4(v290, v291);
            }
            sub_1002541AC();
            if (v28)
            {
              __break(1u);
LABEL_192:
              sub_1002541F4();
              uint64_t v292 = sub_100254DA0();
              sub_1002541D8(v292, v293);
              if (v294)
              {
                uint64_t v295 = sub_100254DA0();
                sub_1002543C4(v295, v296);
              }
              sub_1002541AC();
              if (v28)
              {
                __break(1u);
LABEL_197:
                sub_1002541F4();
                uint64_t v297 = sub_100254D8C();
                sub_1002541D8(v297, v298);
                if (v299)
                {
                  uint64_t v300 = sub_100254D8C();
                  sub_1002543C4(v300, v301);
                }
                sub_1002541AC();
                if (v28)
                {
                  __break(1u);
LABEL_202:
                  sub_1002541F4();
                  uint64_t v302 = sub_1002547B4();
                  sub_1002541D8(v302, v303);
                  if (v304)
                  {
                    uint64_t v305 = sub_1002547B4();
                    sub_1002543C4(v305, v306);
                  }
                  sub_1002541AC();
                  if (v28)
                  {
                    __break(1u);
LABEL_207:
                    sub_1002541F4();
                    uint64_t v307 = sub_100254990();
                    sub_1002541D8(v307, v308);
                    if (v309)
                    {
                      uint64_t v310 = sub_100254990();
                      sub_1002543C4(v310, v311);
                    }
                    sub_1002541AC();
                    if (v28)
                    {
                      __break(1u);
LABEL_212:
                      sub_1002541F4();
                      sub_1002541D8(1162626121, 0xE400000000000000);
                      if (v312) {
                        sub_1002543C4(1162626121, 0xE400000000000000);
                      }
                      sub_1002541AC();
                      if (v28)
                      {
                        __break(1u);
LABEL_217:
                        sub_1002541F4();
                        uint64_t v313 = sub_100254948();
                        sub_1002541D8(v313, v314);
                        if (v315)
                        {
                          uint64_t v316 = sub_100254948();
                          sub_1002543C4(v316, v317);
                        }
                        sub_1002541AC();
                        if (v28) {
                          goto LABEL_279;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      *(_DWORD *)(v23 + 20) = v280;
      break;
    case 0x25u:
      goto LABEL_172;
    case 0x26u:
      goto LABEL_177;
    case 0x27u:
      goto LABEL_182;
    case 0x28u:
      goto LABEL_187;
    case 0x29u:
      goto LABEL_192;
    case 0x2Au:
      goto LABEL_197;
    case 0x2Bu:
      goto LABEL_202;
    case 0x2Cu:
      goto LABEL_207;
    case 0x2Du:
      goto LABEL_212;
    case 0x2Eu:
      goto LABEL_217;
    default:
      sub_1002543DC();
      sub_100254814(0x455441455243);
      if (v25)
      {
        v26._uint64_t countAndFlagsBits = 0x20455441455243;
        v26._object = (void *)0xE700000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v26, v2);
      }
      sub_10025477C();
      if (v28) {
        goto LABEL_230;
      }
      *(_DWORD *)(v3 + 20) = v27;
      uint64_t v29 = swift_bridgeObjectRetain();
      sub_10025E538(v29);
      sub_100254380();
      uint64_t v30 = v1 + v23;
      if (__OFADD__(v1, v23)) {
        goto LABEL_231;
      }
      if (*(void *)(v11 + 16))
      {
        swift_retain();
        swift_retain();
        sub_10024E09C(v3, v11, 0, 0xE000000000000000, (uint64_t)sub_10024DEBC, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, void, unint64_t, uint64_t, uint64_t, void))sub_1002C2970);
        sub_100254380();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = 0;
      }
      uint64_t v105 = v30 + v23;
      if (!__OFADD__(v30, v23)) {
        break;
      }
      __break(1u);
      goto LABEL_226;
  }
  sub_1001FE57C();
}

void sub_10024C1D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v8 = v7;
  uint64_t v11 = v7 + 8;
  Swift::Int v12 = *(unsigned int *)(v7 + 20);
  sub_100210AD0(1414744396, 0xE400000000000000, v11, v12);
  if (v14)
  {
    v15._uint64_t countAndFlagsBits = 1414744396;
    v15._object = (void *)0xE400000000000000;
    Swift::Int v13 = ByteBuffer._setStringSlowpath(_:at:)(v15, v12);
  }
  Swift::Int v16 = v13;
  int v17 = *(_DWORD *)(v8 + 20);
  Swift::Int v18 = (v17 + v13);
  if (__CFADD__(v17, v13))
  {
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  *(_DWORD *)(v8 + 20) = v18;
  sub_10025406C((uint64_t)a1, (uint64_t)v64, &qword_100710A10);
  Swift::Int v19 = v65;
  if (v65)
  {
    uint64_t v60 = a4;
    swift_retain();
    swift_retain();
    sub_10025401C(a1, (void (*)(void, void, void, void, void, void, void, void, void))sub_10024F050);
    sub_100210AD0(32, 0xE100000000000000, v11, v18);
    if (v21)
    {
      v22._uint64_t countAndFlagsBits = 32;
      v22._object = (void *)0xE100000000000000;
      Swift::Int v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v18);
    }
    Swift::Int v23 = v20;
    int v24 = *(_DWORD *)(v8 + 20);
    BOOL v25 = __CFADD__(v24, v20);
    int v26 = v24 + v20;
    if (v25) {
      goto LABEL_42;
    }
    *(_DWORD *)(v8 + 20) = v26;
    sub_10027C56C((uint64_t)a1);
    uint64_t v28 = v27;
    sub_10025401C(a1, (void (*)(void, void, void, void, void, void, void, void, void))sub_10024EEF4);
    swift_release();
    swift_release();
    Swift::Int v19 = v23 + v28;
    if (__OFADD__(v23, v28))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    a4 = v60;
  }
  Swift::Int v29 = v16 + v19;
  if (__OFADD__(v16, v19)) {
    goto LABEL_34;
  }
  Swift::Int v30 = *(unsigned int *)(v8 + 20);
  sub_100210AD0(32, 0xE100000000000000, v11, *(_DWORD *)(v8 + 20));
  if (v32)
  {
    v33._uint64_t countAndFlagsBits = 32;
    v33._object = (void *)0xE100000000000000;
    Swift::Int v31 = ByteBuffer._setStringSlowpath(_:at:)(v33, v30);
  }
  int v34 = *(_DWORD *)(v8 + 20);
  BOOL v25 = __CFADD__(v34, v31);
  int v35 = v34 + v31;
  if (v25) {
    goto LABEL_35;
  }
  *(_DWORD *)(v8 + 20) = v35;
  BOOL v36 = __OFADD__(v29, v31);
  Swift::Int v37 = v29 + v31;
  if (v36)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v38 = swift_bridgeObjectRetain();
  Swift::Int v39 = sub_10025E538(v38);
  swift_bridgeObjectRelease();
  BOOL v36 = __OFADD__(v37, v39);
  Swift::Int v40 = v37 + v39;
  if (v36)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  Swift::Int v41 = *(unsigned int *)(v8 + 20);
  sub_100210AD0(32, 0xE100000000000000, v11, *(_DWORD *)(v8 + 20));
  if (v43)
  {
    v44._uint64_t countAndFlagsBits = 32;
    v44._object = (void *)0xE100000000000000;
    Swift::Int v42 = ByteBuffer._setStringSlowpath(_:at:)(v44, v41);
  }
  int v45 = *(_DWORD *)(v8 + 20);
  BOOL v25 = __CFADD__(v45, v42);
  int v46 = v45 + v42;
  if (v25) {
    goto LABEL_38;
  }
  *(_DWORD *)(v8 + 20) = v46;
  BOOL v36 = __OFADD__(v40, v42);
  Swift::Int v47 = v40 + v42;
  if (v36)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if ((a6 & 0x100000000000000) != 0)
  {
    Swift::Int v48 = sub_1001E9624(a4, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v8);
  }
  else
  {
    if (HIDWORD(a5) < a5)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (a6 - (BYTE6(a6) | (WORD2(a6) << 8)) < HIDWORD(a5))
    {
LABEL_47:
      __break(1u);
      return;
    }
    v66[0] = a4;
    v66[1] = a5;
    int v67 = a6;
    __int16 v68 = WORD2(a6);
    char v69 = BYTE6(a6);
    uint64_t v70 = a5;
    unint64_t v71 = HIDWORD(a5);
    swift_retain();
    Swift::Int v48 = sub_10025E0BC(v66);
    sub_1001F33B8(a4, a5, a6, 0);
  }
  Swift::Int v49 = v47 + v48;
  if (__OFADD__(v47, v48)) {
    goto LABEL_40;
  }
  uint64_t v50 = a7[2];
  if (v50)
  {
    Swift::Int v51 = *(unsigned int *)(v8 + 20);
    swift_retain();
    swift_retain();
    sub_100210AD0(32, 0xE100000000000000, v11, v51);
    if (v53)
    {
      v54._uint64_t countAndFlagsBits = 32;
      v54._object = (void *)0xE100000000000000;
      Swift::Int v52 = ByteBuffer._setStringSlowpath(_:at:)(v54, v51);
    }
    Swift::Int v55 = v52;
    int v56 = *(_DWORD *)(v8 + 20);
    BOOL v25 = __CFADD__(v56, v52);
    int v57 = v56 + v52;
    if (v25) {
      goto LABEL_44;
    }
    *(_DWORD *)(v8 + 20) = v57;
    sub_10027ACA4(a7);
    uint64_t v59 = v58;
    swift_release();
    swift_release();
    uint64_t v50 = v55 + v59;
    if (__OFADD__(v55, v59))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
  }
  if (__OFADD__(v49, v50)) {
    goto LABEL_41;
  }
}

void sub_10024C5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v8 = v7;
  Swift::Int v12 = *(unsigned int *)(v7 + 20);
  sub_100210AD0(1414744396, 0xE400000000000000, v7 + 8, *(_DWORD *)(v7 + 20));
  if (v13)
  {
    v14._uint64_t countAndFlagsBits = 1414744396;
    v14._object = (void *)0xE400000000000000;
    v7 += 8;
    ByteBuffer._setStringSlowpath(_:at:)(v14, v12);
  }
  sub_1002541AC();
  if (v16)
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  *(_DWORD *)(v8 + 20) = v15;
  if (*(void *)(a1 + 16))
  {
    swift_retain();
    swift_retain();
    sub_1001F41F4();
    sub_1001EC770(v17, v18, v19, v20, v21, v22, v23, v24, v8);
    uint64_t v26 = v25;
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v26 = 0;
  }
  BOOL v27 = __OFADD__(v7, v26);
  uint64_t v28 = v7 + v26;
  if (v27) {
    goto LABEL_32;
  }
  sub_100254270();
  if (v30) {
    Swift::Int v29 = sub_1002407BC();
  }
  int v31 = *(_DWORD *)(v8 + 20);
  BOOL v16 = __CFADD__(v31, v29);
  int v32 = v31 + v29;
  if (v16) {
    goto LABEL_33;
  }
  *(_DWORD *)(v8 + 20) = v32;
  BOOL v27 = __OFADD__(v28, v29);
  Swift::Int v33 = v28 + v29;
  if (v27)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v34 = swift_bridgeObjectRetain();
  Swift::Int v35 = sub_10025E538(v34);
  swift_bridgeObjectRelease();
  BOOL v27 = __OFADD__(v33, v35);
  Swift::Int v36 = v33 + v35;
  if (v27)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  sub_100254270();
  if (v38) {
    Swift::Int v37 = sub_1002407BC();
  }
  int v39 = *(_DWORD *)(v8 + 20);
  BOOL v16 = __CFADD__(v39, v37);
  int v40 = v39 + v37;
  if (v16) {
    goto LABEL_36;
  }
  *(_DWORD *)(v8 + 20) = v40;
  BOOL v27 = __OFADD__(v36, v37);
  Swift::Int v41 = v36 + v37;
  if (v27)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if ((a6 & 0x100000000000000) != 0)
  {
    sub_1001F41F4();
    Swift::Int v44 = sub_1001E9624(v45, v46, v47, v48, v49, v50, v51, v52, v8);
  }
  else
  {
    if (HIDWORD(a5) < a5)
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return;
    }
    sub_1002548F8();
    if (!v16) {
      goto LABEL_42;
    }
    uint64_t v61 = a4;
    int v62 = a5;
    int v63 = v42;
    int v64 = a6;
    __int16 v65 = v43;
    char v66 = BYTE6(a6);
    uint64_t v67 = a5;
    uint64_t v68 = v42;
    swift_retain();
    Swift::Int v44 = sub_10025E0BC(&v61);
    sub_1001F33B8(a4, a5, a6, 0);
  }
  BOOL v27 = __OFADD__(v41, v44);
  Swift::Int v53 = v41 + v44;
  if (v27) {
    goto LABEL_38;
  }
  uint64_t v54 = a7[2];
  if (v54)
  {
    swift_retain();
    swift_retain();
    sub_100254270();
    if (v55) {
      sub_1002407BC();
    }
    sub_100254260();
    if (v16) {
      goto LABEL_40;
    }
    *(_DWORD *)(v8 + 20) = v56;
    sub_10027ACA4(a7);
    uint64_t v58 = v57;
    swift_release();
    swift_release();
    uint64_t v54 = v58;
  }
  if (__OFADD__(v53, v54))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    __break(1u);
    goto LABEL_41;
  }
}

void sub_10024C848(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v10 = v5 + 8;
  Swift::Int v11 = *(unsigned int *)(v5 + 20);
  sub_100210AD0(0x204255534CLL, 0xE500000000000000, v10, v11);
  if (v13)
  {
    v14._uint64_t countAndFlagsBits = 0x204255534CLL;
    v14._object = (void *)0xE500000000000000;
    Swift::Int v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  Swift::Int v15 = v12;
  int v16 = *(_DWORD *)(v6 + 20);
  BOOL v17 = __CFADD__(v16, v12);
  int v18 = v16 + v12;
  if (v17)
  {
    __break(1u);
    goto LABEL_14;
  }
  *(_DWORD *)(v6 + 20) = v18;
  uint64_t v19 = swift_bridgeObjectRetain();
  Swift::Int v20 = sub_10025E538(v19);
  swift_bridgeObjectRelease();
  Swift::Int v21 = v15 + v20;
  if (__OFADD__(v15, v20))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  Swift::Int v22 = *(unsigned int *)(v6 + 20);
  sub_100210AD0(32, 0xE100000000000000, v10, *(_DWORD *)(v6 + 20));
  if (v24)
  {
    v25._uint64_t countAndFlagsBits = 32;
    v25._object = (void *)0xE100000000000000;
    Swift::Int v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
  }
  int v26 = *(_DWORD *)(v6 + 20);
  BOOL v17 = __CFADD__(v26, v23);
  int v27 = v26 + v23;
  if (v17) {
    goto LABEL_15;
  }
  *(_DWORD *)(v6 + 20) = v27;
  Swift::Int v28 = v21 + v23;
  if (__OFADD__(v21, v23))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (HIDWORD(a4) < a4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a5 - (BYTE6(a5) | (WORD2(a5) << 8)) < HIDWORD(a4))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v30[0] = a3;
  v30[1] = a4;
  int v31 = a5;
  __int16 v32 = WORD2(a5);
  char v33 = BYTE6(a5);
  uint64_t v34 = a4;
  unint64_t v35 = HIDWORD(a4);
  swift_retain();
  Swift::Int v29 = sub_10025E0BC(v30);
  swift_release();
  if (__OFADD__(v28, v29)) {
LABEL_19:
  }
    __break(1u);
}

void sub_10024C9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v12 = v7 + 8;
  Swift::Int v13 = *(unsigned int *)(v7 + 20);
  sub_100210AD0(0x20454D414E4552, 0xE700000000000000, v12, v13);
  if (v15)
  {
    v16._uint64_t countAndFlagsBits = 0x20454D414E4552;
    v16._object = (void *)0xE700000000000000;
    Swift::Int v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v13);
  }
  Swift::Int v17 = v14;
  int v18 = *(_DWORD *)(v8 + 20);
  BOOL v19 = __CFADD__(v18, v14);
  int v20 = v18 + v14;
  if (v19)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v8 + 20) = v20;
  uint64_t v21 = swift_bridgeObjectRetain();
  Swift::Int v22 = sub_10025E538(v21);
  swift_bridgeObjectRelease();
  Swift::Int v23 = v17 + v22;
  if (__OFADD__(v17, v22))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::Int v24 = *(unsigned int *)(v8 + 20);
  sub_100210AD0(32, 0xE100000000000000, v12, *(_DWORD *)(v8 + 20));
  if (v26)
  {
    v27._uint64_t countAndFlagsBits = 32;
    v27._object = (void *)0xE100000000000000;
    Swift::Int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v24);
  }
  int v28 = *(_DWORD *)(v8 + 20);
  BOOL v19 = __CFADD__(v28, v25);
  int v29 = v28 + v25;
  if (v19) {
    goto LABEL_14;
  }
  *(_DWORD *)(v8 + 20) = v29;
  Swift::Int v30 = v23 + v25;
  if (__OFADD__(v23, v25))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v31 = swift_bridgeObjectRetain();
  Swift::Int v32 = sub_10025E538(v31);
  swift_bridgeObjectRelease();
  Swift::Int v33 = v30 + v32;
  if (__OFADD__(v30, v32))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1002BE234(a5, a6, a7);
  uint64_t v35 = v34;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (__OFADD__(v33, v35)) {
LABEL_17:
  }
    __break(1u);
}

#error "10024CCF0: call analysis failed (funcsize=101)"

void sub_10024CD7C()
{
  sub_100254C08();
  uint64_t v3 = sub_100254884();
  sub_100210AD0(v3, v4, v1, v2);
  if (v6)
  {
    v7._uint64_t countAndFlagsBits = sub_100254884();
    Swift::Int v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v2);
  }
  Swift::Int v8 = v5;
  int v9 = *(_DWORD *)(v0 + 20);
  BOOL v10 = __CFADD__(v9, v5);
  int v11 = v9 + v5;
  if (v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 20) = v11;
  sub_10025448C();
  if (__OFADD__(v8, sub_1001E9324(v12))) {
LABEL_7:
  }
    __break(1u);
}

void sub_10024CE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = v3 + 8;
  Swift::Int v9 = *(unsigned int *)(v3 + 20);
  sub_100210AD0(0x204843544546, 0xE600000000000000, v8, v9);
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = 0x204843544546;
    v12._object = (void *)0xE600000000000000;
    Swift::Int v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  Swift::Int v13 = v10;
  int v14 = *(_DWORD *)(v4 + 20);
  BOOL v15 = __CFADD__(v14, v10);
  int v16 = v14 + v10;
  if (v15)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v4 + 20) = v16;
  uint64_t v17 = sub_1002A4E78(a1);
  Swift::Int v18 = v13 + v17;
  if (__OFADD__(v13, v17))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::Int v19 = *(unsigned int *)(v4 + 20);
  sub_100210AD0(32, 0xE100000000000000, v8, *(_DWORD *)(v4 + 20));
  if (v21)
  {
    v22._uint64_t countAndFlagsBits = 32;
    v22._object = (void *)0xE100000000000000;
    Swift::Int v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v19);
  }
  int v23 = *(_DWORD *)(v4 + 20);
  BOOL v15 = __CFADD__(v23, v20);
  int v24 = v23 + v20;
  if (v15) {
    goto LABEL_14;
  }
  *(_DWORD *)(v4 + 20) = v24;
  Swift::Int v25 = v18 + v20;
  if (__OFADD__(v18, v20))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10026DC2C(a2);
  BOOL v27 = __OFADD__(v25, v26);
  Swift::Int v28 = v25 + v26;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_100270710(a3);
  if (__OFADD__(v28, v29)) {
LABEL_17:
  }
    __break(1u);
}

void sub_10024CF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = v3 + 8;
  Swift::Int v9 = *(unsigned int *)(v3 + 20);
  sub_100210AD0(0x4354454620444955, 0xEA00000000002048, v8, v9);
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = 0x4354454620444955;
    v12._object = (void *)0xEA00000000002048;
    Swift::Int v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  Swift::Int v13 = v10;
  int v14 = *(_DWORD *)(v4 + 20);
  BOOL v15 = __CFADD__(v14, v10);
  int v16 = v14 + v10;
  if (v15)
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v4 + 20) = v16;
  uint64_t v17 = sub_1002A4EA0(a1);
  Swift::Int v18 = v13 + v17;
  if (__OFADD__(v13, v17))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::Int v19 = *(unsigned int *)(v4 + 20);
  sub_100210AD0(32, 0xE100000000000000, v8, *(_DWORD *)(v4 + 20));
  if (v21)
  {
    v22._uint64_t countAndFlagsBits = 32;
    v22._object = (void *)0xE100000000000000;
    Swift::Int v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v19);
  }
  int v23 = *(_DWORD *)(v4 + 20);
  BOOL v15 = __CFADD__(v23, v20);
  int v24 = v23 + v20;
  if (v15) {
    goto LABEL_14;
  }
  *(_DWORD *)(v4 + 20) = v24;
  Swift::Int v25 = v18 + v20;
  if (__OFADD__(v18, v20))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10026DC2C(a2);
  BOOL v27 = __OFADD__(v25, v26);
  Swift::Int v28 = v25 + v26;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_100270710(a3);
  if (__OFADD__(v28, v29)) {
LABEL_17:
  }
    __break(1u);
}

void sub_10024D0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = v4 + 8;
  Swift::Int v11 = *(unsigned int *)(v4 + 20);
  sub_100210AD0(0x2045524F5453, 0xE600000000000000, v10, v11);
  if (v13)
  {
    v14._uint64_t countAndFlagsBits = 0x2045524F5453;
    v14._object = (void *)0xE600000000000000;
    Swift::Int v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  Swift::Int v15 = v12;
  int v16 = *(_DWORD *)(v5 + 20);
  BOOL v17 = __CFADD__(v16, v12);
  int v18 = v16 + v12;
  if (v17)
  {
    __break(1u);
    goto LABEL_19;
  }
  *(_DWORD *)(v5 + 20) = v18;
  uint64_t v19 = sub_1002A4E78(a1);
  Swift::Int v20 = v15 + v19;
  if (__OFADD__(v15, v19))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(void *)(a2 + 16))
  {
    swift_retain();
    swift_retain();
    sub_10024E09C(v5, a2, 32, 0xE100000000000000, (uint64_t)sub_10024E174, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, void, unint64_t, uint64_t, uint64_t, void))sub_1002C29DC);
    uint64_t v22 = v21;
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v22 = 0;
  }
  Swift::Int v23 = v20 + v22;
  if (__OFADD__(v20, v22)) {
    goto LABEL_20;
  }
  Swift::Int v24 = *(unsigned int *)(v5 + 20);
  sub_100210AD0(32, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
  if (v26)
  {
    v27._uint64_t countAndFlagsBits = 32;
    v27._object = (void *)0xE100000000000000;
    Swift::Int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v24);
  }
  int v28 = *(_DWORD *)(v5 + 20);
  BOOL v17 = __CFADD__(v28, v25);
  int v29 = v28 + v25;
  if (v17) {
    goto LABEL_21;
  }
  *(_DWORD *)(v5 + 20) = v29;
  Swift::Int v30 = v23 + v25;
  if (__OFADD__(v23, v25))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  if (a3 < 0) {
    sub_100273968();
  }
  else {
    uint64_t v31 = sub_100273840(a3 & 0x1FF, a4);
  }
  if (__OFADD__(v30, v31)) {
    goto LABEL_23;
  }
}

void sub_10024D27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = v4 + 8;
  Swift::Int v11 = *(unsigned int *)(v4 + 20);
  sub_100210AD0(0x524F545320444955, 0xEA00000000002045, v10, v11);
  if (v13)
  {
    v14._uint64_t countAndFlagsBits = 0x524F545320444955;
    v14._object = (void *)0xEA00000000002045;
    Swift::Int v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  Swift::Int v15 = v12;
  int v16 = *(_DWORD *)(v5 + 20);
  BOOL v17 = __CFADD__(v16, v12);
  int v18 = v16 + v12;
  if (v17)
  {
    __break(1u);
    goto LABEL_19;
  }
  *(_DWORD *)(v5 + 20) = v18;
  uint64_t v19 = sub_1002A4EA0(a1);
  Swift::Int v20 = v15 + v19;
  if (__OFADD__(v15, v19))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(void *)(a2 + 16))
  {
    swift_retain();
    swift_retain();
    uint64_t v21 = sub_1002C29DC(a2, 32, 0, 32, 0, 0, 0, 1, (uint64_t)sub_10024E174, 0);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v21 = 0;
  }
  Swift::Int v22 = v20 + v21;
  if (__OFADD__(v20, v21)) {
    goto LABEL_20;
  }
  Swift::Int v23 = *(unsigned int *)(v5 + 20);
  sub_100210AD0(32, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
  if (v25)
  {
    v26._uint64_t countAndFlagsBits = 32;
    v26._object = (void *)0xE100000000000000;
    Swift::Int v24 = ByteBuffer._setStringSlowpath(_:at:)(v26, v23);
  }
  int v27 = *(_DWORD *)(v5 + 20);
  BOOL v17 = __CFADD__(v27, v24);
  int v28 = v27 + v24;
  if (v17) {
    goto LABEL_21;
  }
  *(_DWORD *)(v5 + 20) = v28;
  Swift::Int v29 = v22 + v24;
  if (__OFADD__(v22, v24))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  if (a3 < 0) {
    sub_100273968();
  }
  else {
    uint64_t v30 = sub_100273840(a3 & 0x1FF, a4);
  }
  if (__OFADD__(v29, v30)) {
    goto LABEL_23;
  }
}

void sub_10024D458(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = v4 + 8;
  Swift::Int v11 = *(unsigned int *)(v4 + 20);
  sub_100210AD0(0x484352414553, 0xE600000000000000, v10, v11);
  if (v13)
  {
    v14._uint64_t countAndFlagsBits = 0x484352414553;
    v14._object = (void *)0xE600000000000000;
    Swift::Int v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  Swift::Int v15 = v12;
  int v16 = *(_DWORD *)(v5 + 20);
  BOOL v17 = __CFADD__(v16, v12);
  int v18 = v16 + v12;
  if (v17)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v31 = a2;
  *(_DWORD *)(v5 + 20) = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1002B252C(a4);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  Swift::Int v21 = v15 + v20;
  if (__OFADD__(v15, v20))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  Swift::Int v22 = *(unsigned int *)(v5 + 20);
  sub_100210AD0(32, 0xE100000000000000, v10, *(_DWORD *)(v5 + 20));
  if (v24)
  {
    v25._uint64_t countAndFlagsBits = 32;
    v25._object = (void *)0xE100000000000000;
    Swift::Int v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
  }
  int v26 = *(_DWORD *)(v5 + 20);
  BOOL v17 = __CFADD__(v26, v23);
  int v27 = v26 + v23;
  if (v17) {
    goto LABEL_19;
  }
  *(_DWORD *)(v5 + 20) = v27;
  BOOL v28 = __OFADD__(v21, v23);
  Swift::Int v29 = v21 + v23;
  if (v28)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_retain();
  swift_retain();
  if (sub_1002ACEC4(a1))
  {
    if (a3)
    {
      v32[0] = v31;
      v32[1] = a3;
      a3 = sub_10024E198(v32, v5);
    }
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    a3 = 0;
  }
  if (__OFADD__(v29, a3)) {
    goto LABEL_21;
  }
  sub_1002ADB34(a1);
  if (__OFADD__(v29 + a3, v30)) {
LABEL_22:
  }
    __break(1u);
}

#error "10024D754: call analysis failed (funcsize=80)"

void sub_10024D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = v4 + 8;
  Swift::Int v9 = *(unsigned int *)(v4 + 20);
  sub_100210AD0(0x444154454D544547, 0xEB00000000415441, v4 + 8, *(_DWORD *)(v4 + 20));
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = 0x444154454D544547;
    v12._object = (void *)0xEB00000000415441;
    Swift::Int v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  Swift::Int v13 = v10;
  int v14 = *(_DWORD *)(v4 + 20);
  Swift::Int v15 = (v14 + v10);
  if (__CFADD__(v14, v10))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(_DWORD *)(v5 + 20) = v15;
  Swift::Int v16 = *(void *)(a1 + 16);
  if (v16)
  {
    swift_retain();
    swift_retain();
    sub_100210AD0(32, 0xE100000000000000, v8, v15);
    if (v18)
    {
      v19._uint64_t countAndFlagsBits = 32;
      v19._object = (void *)0xE100000000000000;
      Swift::Int v17 = ByteBuffer._setStringSlowpath(_:at:)(v19, v15);
    }
    Swift::Int v20 = v17;
    int v21 = *(_DWORD *)(v5 + 20);
    BOOL v22 = __CFADD__(v21, v17);
    int v23 = v21 + v17;
    if (v22) {
      goto LABEL_29;
    }
    *(_DWORD *)(v5 + 20) = v23;
    uint64_t v24 = sub_1002C2904(a1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, sub_10028C4CC, 0);
    swift_release();
    swift_release();
    Swift::Int v16 = v20 + v24;
    if (__OFADD__(v20, v24))
    {
LABEL_30:
      __break(1u);
      return;
    }
  }
  BOOL v25 = __OFADD__(v13, v16);
  Swift::Int v26 = v13 + v16;
  if (v25) {
    goto LABEL_22;
  }
  Swift::Int v27 = *(unsigned int *)(v5 + 20);
  sub_100210AD0(32, 0xE100000000000000, v8, *(_DWORD *)(v5 + 20));
  if (v29)
  {
    v30._uint64_t countAndFlagsBits = 32;
    v30._object = (void *)0xE100000000000000;
    Swift::Int v28 = ByteBuffer._setStringSlowpath(_:at:)(v30, v27);
  }
  int v31 = *(_DWORD *)(v5 + 20);
  BOOL v22 = __CFADD__(v31, v28);
  int v32 = v31 + v28;
  if (v22) {
    goto LABEL_23;
  }
  *(_DWORD *)(v5 + 20) = v32;
  BOOL v25 = __OFADD__(v26, v28);
  Swift::Int v33 = v26 + v28;
  if (v25)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v34 = swift_bridgeObjectRetain();
  Swift::Int v35 = sub_10025E538(v34);
  swift_bridgeObjectRelease();
  Swift::Int v36 = v33 + v35;
  if (__OFADD__(v33, v35))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  Swift::Int v37 = *(unsigned int *)(v5 + 20);
  sub_100210AD0(32, 0xE100000000000000, v8, *(_DWORD *)(v5 + 20));
  if (v39)
  {
    v40._uint64_t countAndFlagsBits = 32;
    v40._object = (void *)0xE100000000000000;
    Swift::Int v38 = ByteBuffer._setStringSlowpath(_:at:)(v40, v37);
  }
  int v41 = *(_DWORD *)(v5 + 20);
  BOOL v22 = __CFADD__(v41, v38);
  int v42 = v41 + v38;
  if (v22) {
    goto LABEL_26;
  }
  *(_DWORD *)(v5 + 20) = v42;
  if (__OFADD__(v36, v38))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (__OFADD__(v36 + v38, sub_1001EB2F0(a4, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v5)))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
}

void sub_10024DA38(uint64_t a1)
{
  Swift::Int v3 = *(unsigned int *)(v1 + 20);
  uint64_t v4 = sub_100254850();
  sub_100210AD0(v4, v5, v1 + 8, v3);
  if (v7)
  {
    v8._uint64_t countAndFlagsBits = sub_100254850();
    Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v3);
  }
  Swift::Int v9 = v6;
  int v10 = *(_DWORD *)(v1 + 20);
  Swift::Int v11 = (v10 + v6);
  if (__CFADD__(v10, v6))
  {
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v1 + 20) = v11;
  if (!a1) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100254B70();
  sub_100210AD0(v12, v13, v14, v15);
  if (v17)
  {
    v18._uint64_t countAndFlagsBits = 32;
    v18._object = (void *)0xE100000000000000;
    Swift::Int v16 = ByteBuffer._setStringSlowpath(_:at:)(v18, v11);
  }
  Swift::Int v19 = v16;
  int v20 = *(_DWORD *)(v1 + 20);
  BOOL v21 = __CFADD__(v20, v16);
  int v22 = v20 + v16;
  if (v21) {
    goto LABEL_17;
  }
  *(_DWORD *)(v1 + 20) = v22;
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_10025E538(v23);
  sub_1002546A4();
  BOOL v24 = __OFADD__(v19, v1);
  Swift::Int v25 = v19 + v1;
  if (v24)
  {
LABEL_18:
    __break(1u);
    return;
  }
  sub_10025448C();
  uint64_t v34 = sub_1001E8CEC(v26, v27, v28, v29, v30, v31, v32, v33, v1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::Int v35 = v25 + v34;
  if (__OFADD__(v25, v34))
  {
    __break(1u);
LABEL_12:
    Swift::Int v35 = 0;
  }
  if (__OFADD__(v9, v35))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

void sub_10024DBA4()
{
  sub_100254C08();
  uint64_t v3 = sub_1002546D8();
  sub_100210AD0(v3, v4, v1, v2);
  if (v6)
  {
    v7._uint64_t countAndFlagsBits = sub_1002546D8();
    Swift::Int v5 = ByteBuffer._setStringSlowpath(_:at:)(v7, v2);
  }
  Swift::Int v8 = v5;
  int v9 = *(_DWORD *)(v0 + 20);
  BOOL v10 = __CFADD__(v9, v5);
  int v11 = v9 + v5;
  if (v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 20) = v11;
  sub_10025448C();
  if (__OFADD__(v8, sub_1001EB6D8(v12))) {
LABEL_7:
  }
    __break(1u);
}

#error "10024DCEC: call analysis failed (funcsize=48)"

void sub_10024DD18(uint64_t *a1, uint64_t a2)
{
  unint64_t v2 = *((unsigned int *)a1 + 2);
  uint64_t v3 = *((unsigned int *)a1 + 3);
  if (v3 < v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  int v4 = *((_DWORD *)a1 + 4);
  int v5 = *((unsigned __int16 *)a1 + 10);
  int v6 = *((unsigned __int8 *)a1 + 22);
  unsigned int v7 = v6 | (v5 << 8);
  if (v4 - v7 < v3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v9 = *a1;
  uint64_t v20 = *a1;
  int v21 = v2;
  int v22 = v3;
  int v23 = v4;
  __int16 v24 = v5;
  char v25 = v6;
  unint64_t v26 = v2;
  uint64_t v27 = v3;
  if (*(unsigned char *)a2 == 1)
  {
    swift_retain();
    sub_1001F8DE0((uint64_t)&v20);
    swift_release();
    v28._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v28);
    swift_bridgeObjectRelease();
    v29._uint64_t countAndFlagsBits = 0x5D736574796220;
    v29._object = (void *)0xE700000000000000;
    sub_1005E1E30(v29);
    uint64_t v3 = 91;
    unint64_t v2 = 0xE100000000000000;
    unsigned int v7 = a2 + 8;
    swift_bridgeObjectRetain();
    sub_100254428();
    int v11 = v10;
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13) {
      int v11 = sub_1002545A0();
    }
    swift_release();
    swift_bridgeObjectRelease();
    int v14 = *(_DWORD *)(a2 + 20);
    BOOL v15 = __CFADD__(v14, v11);
    int v16 = v14 + v11;
    if (!v15) {
      goto LABEL_10;
    }
    __break(1u);
  }
  Swift::UInt32 v17 = *(_DWORD *)(a2 + 20);
  sub_1001F969C();
  ByteBuffer._setBytes(_:at:)(*(void *)(v9 + 24) + v7 + v2, *(void *)(v9 + 24) + v7 + v3, v17);
  int v18 = *(_DWORD *)(a2 + 20);
  BOOL v15 = __CFADD__(v18, v19);
  int v16 = v18 + v19;
  if (!v15)
  {
LABEL_10:
    *(_DWORD *)(a2 + 20) = v16;
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_10024DEBC(uint64_t a1)
{
}

void sub_10024DEE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 8;
  Swift::Int v5 = *(unsigned int *)(a2 + 20);
  sub_100210AD0(32, 0xE100000000000000, a2 + 8, v5);
  if (v7)
  {
    v8._uint64_t countAndFlagsBits = 32;
    v8._object = (void *)0xE100000000000000;
    Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  Swift::Int v9 = v6;
  int v10 = *(_DWORD *)(a2 + 20);
  Swift::Int v11 = (v10 + v6);
  if (__CFADD__(v10, v6))
  {
    __break(1u);
    goto LABEL_22;
  }
  *(_DWORD *)(a2 + 20) = v11;
  if (*(unsigned char *)a2 != 1) {
    goto LABEL_11;
  }
  sub_100210AD0(8751330, 0xA300000000000000, v4, v11);
  if (v13)
  {
    v14._uint64_t countAndFlagsBits = 8751330;
    v14._object = (void *)0xA300000000000000;
    Swift::Int v12 = ByteBuffer._setStringSlowpath(_:at:)(v14, v11);
  }
  int v15 = *(_DWORD *)(a2 + 20);
  BOOL v16 = __CFADD__(v15, v12);
  int v17 = v15 + v12;
  if (v16)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(_DWORD *)(a2 + 20) = v17;
  if (!__OFADD__(v9, v12)) {
    return;
  }
  __break(1u);
LABEL_11:
  uint64_t v18 = *((unsigned int *)a1 + 2);
  uint64_t v19 = *((unsigned int *)a1 + 3);
  if (v19 == v18)
  {
    sub_100210AD0(61, 0xE100000000000000, v4, v11);
    if (v21)
    {
      v22._uint64_t countAndFlagsBits = 61;
      v22._object = (void *)0xE100000000000000;
      Swift::Int v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v11);
    }
    Swift::Int v23 = v20;
    int v24 = *(_DWORD *)(a2 + 20);
    BOOL v16 = __CFADD__(v24, v20);
    int v25 = v24 + v20;
    if (v16) {
      goto LABEL_24;
    }
    *(_DWORD *)(a2 + 20) = v25;
  }
  else
  {
    if (v19 < v18)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    int v26 = *((_DWORD *)a1 + 4);
    int v27 = *((unsigned __int16 *)a1 + 10);
    int v28 = *((unsigned __int8 *)a1 + 22);
    if (v26 - (v28 | (v27 << 8)) < v19)
    {
LABEL_26:
      __break(1u);
      return;
    }
    uint64_t v31 = *a1;
    int v32 = v18;
    int v33 = v19;
    int v34 = v26;
    __int16 v35 = v27;
    char v36 = v28;
    uint64_t v37 = v18;
    uint64_t v38 = v19;
    swift_retain();
    Swift::String v29 = sub_1001E6610(&v31);
    swift_release();
    sub_100254F34((uint64_t)v29);
    Swift::Int v23 = v30;
    swift_bridgeObjectRelease();
  }
  if (__OFADD__(v9, v23))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
}

void sub_10024E09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, void, unint64_t, uint64_t, uint64_t, void, unint64_t, uint64_t, uint64_t, void))
{
  Swift::Int v12 = *(unsigned int *)(a1 + 20);
  uint64_t v13 = sub_100254B70();
  sub_100210AD0(v13, v14, v15, v16);
  if (v18)
  {
    v19._uint64_t countAndFlagsBits = 32;
    v19._object = (void *)0xE100000000000000;
    Swift::Int v17 = ByteBuffer._setStringSlowpath(_:at:)(v19, v12);
  }
  int v20 = *(_DWORD *)(a1 + 20);
  BOOL v21 = __CFADD__(v20, v17);
  int v22 = v20 + v17;
  if (v21)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(a1 + 20) = v22;
  if (__OFADD__(v17, a6(a2, 0, 0xE000000000000000, a3, a4, 0, 0xE000000000000000, 1, a5, 0))) {
LABEL_7:
  }
    __break(1u);
}

void sub_10024E174(uint64_t a1)
{
}

uint64_t sub_10024E198(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)a1[1];
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v3;
  v15._object = v4;
  sub_1005E1E30(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 32;
  v16._object = (void *)0xE100000000000000;
  sub_1005E1E30(v16);
  Swift::Int v5 = *(unsigned int *)(a2 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(0x2054455352414843, 0xE800000000000000, a2 + 8, v5);
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  if (v9)
  {
    v11._uint64_t countAndFlagsBits = 0x2054455352414843;
    v11._object = (void *)0xE800000000000000;
    uint64_t result = ByteBuffer._setStringSlowpath(_:at:)(v11, v5);
    uint64_t v7 = result;
  }
  int v12 = *(_DWORD *)(a2 + 20);
  BOOL v13 = __CFADD__(v12, v7);
  int v14 = v12 + v7;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a2 + 20) = v14;
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

void static Command.uidMove(messages:mailbox:)()
{
}

uint64_t sub_10024E2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10024E2E0(a1, &qword_1007108C0, &qword_10070FD90, a2);
}

uint64_t sub_10024E2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10024E2E0(a1, &qword_100710520, &qword_100710528, a2);
}

uint64_t sub_10024E2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10024E2E0(a1, &qword_1007104C8, &qword_100710A00, a2);
}

uint64_t sub_10024E2E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10000566C(a2);
  sub_1001F3BBC();
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024EB8C();
  if (v12 < 1)
  {
    sub_1001F3A28(a1, a3);
    return storeEnumTagSinglePayload for ClientCommand(a4, 1, 1, v8);
  }
  else
  {
    sub_10025406C(a1, (uint64_t)v11, a3);
    sub_10025406C((uint64_t)v11, a4, a2);
    return storeEnumTagSinglePayload for ClientCommand(a4, 0, 1, v8);
  }
}

void static Command.uidCopy(messages:mailbox:)()
{
}

void sub_10024E3F0()
{
  sub_1001FE5B4();
  int v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_10000566C(&qword_10070FD90);
  uint64_t v10 = sub_100224550(v9);
  __chkstk_darwin(v10);
  sub_100254960();
  uint64_t v11 = sub_10000566C(&qword_100710908);
  uint64_t v12 = sub_100224550(v11);
  __chkstk_darwin(v12);
  sub_100224A64();
  uint64_t v13 = sub_10000566C(&qword_1007108C0);
  sub_1001F3BBC();
  __chkstk_darwin(v14);
  sub_100254528();
  sub_10024E2E0(v2, &qword_1007108C0, &qword_10070FD90, v0);
  sub_100207FC4(v0, 1, v13);
  if (v15)
  {
    sub_1001F3A28(v0, &qword_100710908);
    uint64_t v16 = type metadata accessor for Command();
    sub_100254AFC(v16);
  }
  else
  {
    sub_10025406C(v0, v1, &qword_1007108C0);
    uint64_t v17 = v8 + *(int *)(sub_10000566C(&qword_1007108E0) + 48);
    sub_10025406C(v1, v8, &qword_1007108C0);
    uint64_t v18 = sub_10025489C();
    storeEnumTagSinglePayload for ClientCommand(v18, v19, v20, v13);
    *(void *)uint64_t v17 = v6;
    *(_DWORD *)(v17 + 8) = v4;
    uint64_t v21 = type metadata accessor for Command();
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = sub_10025489C();
    storeEnumTagSinglePayload for ClientCommand(v22, v23, v24, v21);
    swift_bridgeObjectRetain();
  }
  sub_1001FE57C();
}

void static Command.uidFetch(messages:attributes:modifiers:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FE5B4();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = sub_10000566C(&qword_10070FD90);
  uint64_t v33 = sub_100224550(v32);
  __chkstk_darwin(v33);
  __int16 v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10000566C(&qword_100710908);
  uint64_t v37 = sub_100224550(v36);
  __chkstk_darwin(v37);
  sub_100224A7C();
  uint64_t v38 = sub_10000566C(&qword_1007108C0);
  sub_1001F3BBC();
  __chkstk_darwin(v39);
  sub_100224A64();
  sub_1001F36E4(v29, (uint64_t)v35, &qword_10070FD90);
  sub_10024E2E0((uint64_t)v35, &qword_1007108C0, &qword_10070FD90, v20);
  sub_100207FC4(v20, 1, v38);
  if (v40)
  {
    sub_1001F3A28(v20, &qword_100710908);
    uint64_t v41 = type metadata accessor for Command();
    sub_100254AFC(v41);
  }
  else
  {
    sub_10025406C(v20, v21, &qword_1007108C0);
    uint64_t v42 = sub_10000566C(&qword_1007108D8);
    uint64_t v43 = *(int *)(v42 + 48);
    uint64_t v44 = *(int *)(v42 + 64);
    sub_10025406C(v21, v31, &qword_1007108C0);
    sub_1002545FC();
    *(void *)(v31 + v43) = v27;
    *(void *)(v31 + v44) = v25;
    type metadata accessor for Command();
    swift_storeEnumTagMultiPayload();
    sub_1002545FC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_1001FE57C();
}

void static Command.uidStore(messages:modifiers:data:)()
{
  sub_1001FE5B4();
  uint64_t v22 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_10000566C(&qword_10070FD90);
  uint64_t v11 = sub_100224550(v10);
  __chkstk_darwin(v11);
  sub_100254960();
  uint64_t v12 = sub_10000566C(&qword_100710908);
  uint64_t v13 = sub_100224550(v12);
  __chkstk_darwin(v13);
  sub_100224A64();
  uint64_t v14 = sub_10000566C(&qword_1007108C0);
  sub_1001F3BBC();
  __chkstk_darwin(v15);
  sub_100254528();
  sub_10024E2E0(v2, &qword_1007108C0, &qword_10070FD90, v0);
  sub_100207FC4(v0, 1, v14);
  if (v16)
  {
    sub_1001F3A28(v0, &qword_100710908);
    uint64_t v17 = type metadata accessor for Command();
    storeEnumTagSinglePayload for ClientCommand(v9, 1, 1, v17);
  }
  else
  {
    sub_10025406C(v0, v1, &qword_1007108C0);
    uint64_t v18 = sub_10000566C(&qword_1007108D0);
    uint64_t v19 = *(int *)(v18 + 48);
    uint64_t v20 = (void *)(v9 + *(int *)(v18 + 64));
    sub_10025406C(v1, v9, &qword_1007108C0);
    storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v14);
    *(void *)(v9 + v19) = v7;
    *uint64_t v20 = v5;
    v20[1] = v22;
    uint64_t v21 = type metadata accessor for Command();
    sub_10022C948();
    swift_storeEnumTagMultiPayload();
    storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v21);
    swift_bridgeObjectRetain();
    MailboxPriorityInfo.mailboxPriorityOrder.getter();
  }
  sub_1001FE57C();
}

uint64_t static Command.uidExpunge(messages:mailbox:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = sub_10000566C(&qword_10070FD90);
  uint64_t v6 = sub_100224550(v5);
  __chkstk_darwin(v6);
  sub_100224A7C();
  uint64_t v7 = sub_10000566C(&qword_100710908);
  uint64_t v8 = sub_100224550(v7);
  __chkstk_darwin(v8);
  sub_1002244C0();
  uint64_t v9 = sub_10000566C(&qword_1007108C0);
  sub_1001F3BBC();
  __chkstk_darwin(v10);
  uint64_t v11 = sub_100254744();
  sub_1001F36E4(v11, v3, &qword_10070FD90);
  sub_10024E2E0(v3, &qword_1007108C0, &qword_10070FD90, v1);
  sub_100207FC4(v1, 1, v9);
  if (v12)
  {
    sub_1001F3A28(v1, &qword_100710908);
    uint64_t v17 = type metadata accessor for Command();
    uint64_t v14 = a1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
  }
  else
  {
    sub_10025406C(v1, v2, &qword_1007108C0);
    sub_10025406C(v2, a1, &qword_1007108C0);
    sub_1002545FC();
    uint64_t v13 = type metadata accessor for Command();
    sub_100240798();
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = sub_10025489C();
    uint64_t v17 = v13;
  }
  return storeEnumTagSinglePayload for ClientCommand(v14, v15, v16, v17);
}

uint64_t sub_10024EB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Command();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10024EB8C()
{
  sub_1001FE5B4();
  uint64_t v0 = sub_10000566C(&qword_1007109E0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_1007109E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_100224A54();
  uint64_t v8 = (char *)(v6 - v7);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - v10;
  sub_10000566C(&qword_100710538);
  sub_1005E3600();
  char v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v23 = v11;
  uint64_t v24 = v12;
  v12(v8, v11, v4);
  sub_100253FD4(&qword_1007109F0);
  sub_1005E1F60();
  uint64_t v13 = &v3[*(int *)(v1 + 44)];
  sub_100253FD4(&qword_1007109F8);
  uint64_t v14 = 0;
  uint64_t v25 = v5 + 16;
  uint64_t v15 = (void (**)(char *, uint64_t))(v5 + 8);
  while (1)
  {
    uint64_t v16 = *(void *)v13;
    sub_1005E23E0();
    if (v16 == v26) {
      break;
    }
    uint64_t v17 = (void (*)(uint64_t *, void))sub_1005E24D0();
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    v17(&v26, 0);
    v24(v8, v3, v4);
    sub_1005E23F0();
    (*v15)(v8, v4);
    BOOL v21 = __OFADD__(v14, v20 - v19);
    v14 += v20 - v19;
    if (v21)
    {
      __break(1u);
      break;
    }
  }
  sub_1001F3A28((uint64_t)v3, &qword_1007109E0);
  (*v15)(v23, v4);
  sub_1001FE57C();
}

unint64_t *sub_10024EE20(unint64_t *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  sub_1002239B4(*a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024EE94(v2, v3, v4);
  return a1;
}

uint64_t sub_10024EE94(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1000A6FC4(a2, a3);
  }
  return result;
}

uint64_t sub_10024EEEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10024EEF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a9)
  {
    sub_10024EF70(result, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10024EF70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if (a5 != -1)
  {
    a9(result, a2, a3, a4, a5 & 1);
    return a10(a6, a7, a8);
  }
  return result;
}

uint64_t sub_10024EFF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Command();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10024F050(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a9)
  {
    sub_10024EF70(result, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F33C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F3404);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_10024F0CC(uint64_t *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[14];
  uint64_t v8 = a1[15];
  uint64_t v9 = a1[16];
  uint64_t v10 = a1[17];
  sub_10024EEF4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  sub_10024EEF4(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

void sub_10024F170()
{
}

unint64_t sub_10024F1A0()
{
  unint64_t result = qword_100710910;
  if (!qword_100710910)
  {
    type metadata accessor for Command();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710910);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Command(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v7 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 7u:
      case 8u:
      case 0x20u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 1u:
      case 9u:
      case 0xAu:
      case 0x1Bu:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 3u:
        if (*(void *)(a2 + 64))
        {
          uint64_t v8 = *(unsigned __int8 *)(a2 + 32);
          if (v8 == 255)
          {
            long long v9 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v9;
            long long v10 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v10;
          }
          else
          {
            char v79 = v8 & 1;
            uint64_t v80 = *(void *)a2;
            uint64_t v81 = *(void *)(a2 + 8);
            uint64_t v82 = *(void *)(a2 + 16);
            uint64_t v83 = *(void *)(a2 + 24);
            sub_1001F33C4(*(void *)a2, v81, v82, v83, v8 & 1);
            *(void *)a1 = v80;
            *(void *)(a1 + 8) = v81;
            *(void *)(a1 + 16) = v82;
            *(void *)(a1 + 24) = v83;
            *(unsigned char *)(a1 + 32) = v79;
            unint64_t v84 = *(void *)(a2 + 56);
            if (HIBYTE(v84) == 255)
            {
              *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
              *(void *)(a1 + 56) = *(void *)(a2 + 56);
            }
            else
            {
              uint64_t v85 = *(void *)(a2 + 40);
              uint64_t v86 = *(void *)(a2 + 48);
              sub_1001F33AC(v85, v86, *(void *)(a2 + 56), HIBYTE(v84) & 1);
              *(void *)(a1 + 40) = v85;
              *(void *)(a1 + 48) = v86;
              *(unsigned char *)(a1 + 62) = BYTE6(v84);
              *(_WORD *)(a1 + 60) = WORD2(v84);
              *(_DWORD *)(a1 + 56) = v84;
              *(unsigned char *)(a1 + 63) = HIBYTE(v84) & 1;
            }
          }
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy((void *)a1, (const void *)a2, 0x48uLL);
        }
        unsigned int v88 = *(_DWORD *)(a2 + 104);
        uint64_t v87 = a2 + 104;
        *(void *)(a1 + 72) = *(void *)(v87 - 32);
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(v87 - 24);
        uint64_t v89 = *(void *)(v87 - 16);
        uint64_t v90 = *(void *)(v87 - 8);
        int v91 = *(unsigned __int8 *)(v87 + 6);
        uint64_t v92 = *(unsigned __int16 *)(v87 + 4) | (v91 << 16);
        char v93 = *(unsigned char *)(v87 + 7);
        swift_bridgeObjectRetain();
        sub_1001F33AC(v89, v90, v88 | (unint64_t)(v92 << 32), v93);
        *(void *)(a1 + 88) = v89;
        *(void *)(a1 + 96) = v90;
        *(unsigned char *)(a1 + 110) = v91;
        *(_WORD *)(a1 + 108) = v92;
        *(_DWORD *)(a1 + 104) = v88;
        *(unsigned char *)(a1 + 111) = v93;
        *(void *)(a1 + 112) = *(void *)(v87 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 4u:
        uint64_t v11 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v11;
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        uint64_t v12 = *(void *)(a2 + 24);
        uint64_t v13 = *(void *)(a2 + 32);
        uint64_t v95 = *(unsigned int *)(a2 + 40);
        int v14 = *(unsigned __int8 *)(a2 + 46);
        uint64_t v15 = *(unsigned __int16 *)(a2 + 44) | (v14 << 16);
        char v16 = *(unsigned char *)(a2 + 47);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001F33AC(v12, v13, v95 | (v15 << 32), v16);
        *(void *)(a1 + 24) = v12;
        *(void *)(a1 + 32) = v13;
        *(unsigned char *)(a1 + 46) = v14;
        *(_WORD *)(a1 + 44) = v15;
        *(_DWORD *)(a1 + 40) = v95;
        *(unsigned char *)(a1 + 47) = v16;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_68;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
        uint64_t v17 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v17;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0xBu:
        uint64_t v18 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v18;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_68;
      case 0xCu:
        uint64_t v19 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v19;
        uint64_t v20 = *(void *)(a2 + 16);
        uint64_t v21 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = v20;
        *(void *)(a1 + 24) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xDu:
      case 0x21u:
      case 0x22u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xEu:
        uint64_t v22 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v22)) {
          goto LABEL_15;
        }
        goto LABEL_46;
      case 0xFu:
        uint64_t v24 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v24))
        {
          uint64_t v25 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v55 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v24);
        }
        uint64_t v56 = sub_10000566C(&qword_1007108F8);
        *(void *)(a1 + *(int *)(v56 + 48)) = *(void *)(a2 + *(int *)(v56 + 48));
        *(void *)(a1 + *(int *)(v56 + 64)) = *(void *)(a2 + *(int *)(v56 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x10u:
        uint64_t v26 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v26))
        {
          uint64_t v27 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          uint64_t v57 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v26);
        }
        uint64_t v58 = sub_10000566C(&qword_1007108F0);
        *(void *)(a1 + *(int *)(v58 + 48)) = *(void *)(a2 + *(int *)(v58 + 48));
        uint64_t v59 = *(int *)(v58 + 64);
        uint64_t v60 = (void *)(a1 + v59);
        uint64_t v61 = (uint64_t *)(a2 + v59);
        uint64_t v62 = *v61;
        uint64_t v63 = v61[1];
        swift_bridgeObjectRetain();
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        void *v60 = v62;
        v60[1] = v63;
        goto LABEL_68;
      case 0x11u:
      case 0x17u:
        uint64_t v28 = *(void *)a2;
        sub_1002238FC(*(void *)a2);
        uint64_t v30 = *(void *)(a2 + 8);
        uint64_t v29 = *(void *)(a2 + 16);
        *(void *)a1 = v28;
        *(void *)(a1 + 8) = v30;
        uint64_t v31 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = v29;
        *(void *)(a1 + 24) = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x12u:
        uint64_t v22 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v22))
        {
LABEL_15:
          uint64_t v23 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
LABEL_46:
          uint64_t v51 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v22);
        }
        uint64_t v52 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
        uint64_t v53 = a1 + v52;
        uint64_t v54 = a2 + v52;
        *(void *)uint64_t v53 = *(void *)v54;
        *(_DWORD *)(v53 + 8) = *(_DWORD *)(v54 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x13u:
        uint64_t v32 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v32;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0x14u:
        uint64_t v33 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v33)) {
          goto LABEL_25;
        }
        goto LABEL_53;
      case 0x15u:
        uint64_t v33 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v33))
        {
LABEL_25:
          uint64_t v34 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
LABEL_53:
          uint64_t v64 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v33);
        }
        uint64_t v65 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
        uint64_t v66 = a1 + v65;
        uint64_t v67 = a2 + v65;
        *(void *)uint64_t v66 = *(void *)v67;
        *(_DWORD *)(v66 + 8) = *(_DWORD *)(v67 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x16u:
        uint64_t v35 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v35))
        {
          uint64_t v36 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          uint64_t v68 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v35);
        }
        uint64_t v69 = sub_10000566C(&qword_1007108D8);
        *(void *)(a1 + *(int *)(v69 + 48)) = *(void *)(a2 + *(int *)(v69 + 48));
        *(void *)(a1 + *(int *)(v69 + 64)) = *(void *)(a2 + *(int *)(v69 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x18u:
        uint64_t v37 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v37))
        {
          uint64_t v38 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v70 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(a1, a2, v70);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v37);
        }
        uint64_t v71 = sub_10000566C(&qword_1007108D0);
        *(void *)(a1 + *(int *)(v71 + 48)) = *(void *)(a2 + *(int *)(v71 + 48));
        uint64_t v72 = *(int *)(v71 + 64);
        char v73 = (void *)(a1 + v72);
        Swift::String v74 = (uint64_t *)(a2 + v72);
        uint64_t v75 = *v74;
        uint64_t v76 = v74[1];
        swift_bridgeObjectRetain();
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *char v73 = v75;
        v73[1] = v76;
        goto LABEL_68;
      case 0x19u:
        uint64_t v39 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v39))
        {
          uint64_t v40 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v77 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v39);
        }
        goto LABEL_68;
      case 0x1Au:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
        swift_retain();
        goto LABEL_68;
      case 0x1Cu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x1Du:
        uint64_t v41 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v41;
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x1Eu:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        uint64_t v42 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v42;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0x1Fu:
        uint64_t v43 = *(void *)a2;
        sub_1002238FC(*(void *)a2);
        uint64_t v44 = *(void *)(a2 + 32);
        uint64_t v46 = *(void *)(a2 + 8);
        uint64_t v45 = *(void *)(a2 + 16);
        *(void *)a1 = v43;
        *(void *)(a1 + 8) = v46;
        uint64_t v47 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = v45;
        *(void *)(a1 + 24) = v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v44)
        {
          *(void *)(a1 + 32) = v44;
          uint64_t v48 = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          if (v48)
          {
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = v48;
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            swift_retain();
            swift_retain();
            swift_retain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
          }
        }
        else
        {
          long long v78 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v78;
        }
        goto LABEL_68;
      case 0x23u:
        uint64_t v49 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v49;
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x24u:
        uint64_t v50 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v50;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_68:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for Command(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 7:
    case 8:
    case 12:
    case 32:
    case 36:
      goto LABEL_43;
    case 1:
    case 9:
    case 10:
    case 13:
    case 27:
    case 33:
    case 34:
    case 35:
      goto LABEL_44;
    case 3:
      if (*(void *)(a1 + 64))
      {
        uint64_t v8 = *(unsigned __int8 *)(a1 + 32);
        if (v8 != 255)
        {
          sub_1001F3480(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v8 & 1);
          unint64_t v9 = *(void *)(a1 + 56);
          if (HIBYTE(v9) != 255) {
            sub_1001F33B8(*(void *)(a1 + 40), *(void *)(a1 + 48), v9, HIBYTE(v9) & 1);
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1001F33B8(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned int *)(a1 + 104) | ((unint64_t)(*(unsigned __int16 *)(a1 + 108) | (*(unsigned __int8 *)(a1 + 110) << 16)) << 32), *(unsigned char *)(a1 + 111));
      goto LABEL_44;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001F33B8(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)(*(unsigned __int16 *)(a1 + 44) | (*(unsigned __int8 *)(a1 + 46) << 16)) << 32), *(unsigned char *)(a1 + 47));
      goto LABEL_44;
    case 5:
    case 11:
      swift_bridgeObjectRelease();
      goto LABEL_51;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_51;
    case 14:
    case 18:
      uint64_t v3 = sub_10000566C(&qword_1007104C8);
      if (!getEnumTagSinglePayload for ClientCommand(a1, 1, v3))
      {
        uint64_t v4 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      }
      int v5 = &qword_1007108E8;
      goto LABEL_9;
    case 15:
      uint64_t v10 = sub_10000566C(&qword_1007104C8);
      if (!getEnumTagSinglePayload for ClientCommand(a1, 1, v10))
      {
        uint64_t v11 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
      }
      uint64_t v12 = &qword_1007108F8;
      goto LABEL_30;
    case 16:
      uint64_t v13 = sub_10000566C(&qword_1007104C8);
      if (!getEnumTagSinglePayload for ClientCommand(a1, 1, v13))
      {
        uint64_t v14 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      }
      uint64_t v15 = &qword_1007108F0;
      goto LABEL_34;
    case 17:
    case 23:
      sub_1002239B4(*(void *)a1);
      goto LABEL_43;
    case 19:
      swift_release();
      swift_release();
      goto LABEL_51;
    case 20:
    case 21:
      uint64_t v6 = sub_10000566C(&qword_1007108C0);
      if (!getEnumTagSinglePayload for ClientCommand(a1, 1, v6))
      {
        uint64_t v7 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      }
      int v5 = &qword_1007108E0;
LABEL_9:
      sub_10000566C(v5);
      goto LABEL_44;
    case 22:
      uint64_t v16 = sub_10000566C(&qword_1007108C0);
      if (!getEnumTagSinglePayload for ClientCommand(a1, 1, v16))
      {
        uint64_t v17 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
      }
      uint64_t v12 = &qword_1007108D8;
LABEL_30:
      sub_10000566C(v12);
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 24:
      uint64_t v18 = sub_10000566C(&qword_1007108C0);
      if (!getEnumTagSinglePayload for ClientCommand(a1, 1, v18))
      {
        uint64_t v19 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
      }
      uint64_t v15 = &qword_1007108D0;
LABEL_34:
      sub_10000566C(v15);
      swift_bridgeObjectRelease();
      return sub_10024EEEC();
    case 25:
      uint64_t v20 = sub_10000566C(&qword_1007108C0);
      uint64_t result = getEnumTagSinglePayload for ClientCommand(a1, 1, v20);
      if (!result)
      {
        uint64_t v21 = sub_10000566C(&qword_100710538);
        uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
        return v22(a1, v21);
      }
      return result;
    case 26:
      goto LABEL_51;
    case 28:
      swift_release();
      goto LABEL_44;
    case 29:
      swift_bridgeObjectRelease();
LABEL_43:
      swift_bridgeObjectRelease();
LABEL_44:
      return swift_bridgeObjectRelease();
    case 30:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_51;
    case 31:
      sub_1002239B4(*(void *)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = *(void *)(a1 + 32);
      if (!result) {
        return result;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (!*(void *)(a1 + 48)) {
        return result;
      }
      swift_release();
      swift_release();
LABEL_51:
      return swift_release();
    default:
      return result;
  }
}

{
  return sub_10044C910(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t assignWithCopy for Command(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10024EFF4(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 7u:
      case 8u:
      case 0x20u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 1u:
      case 9u:
      case 0xAu:
      case 0x1Bu:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 3u:
        if (*(void *)(a2 + 64))
        {
          uint64_t v6 = *(unsigned __int8 *)(a2 + 32);
          if (v6 == 255)
          {
            long long v7 = *(_OWORD *)a2;
            long long v8 = *(_OWORD *)(a2 + 16);
            long long v9 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v9;
            *(_OWORD *)a1 = v7;
            *(_OWORD *)(a1 + 16) = v8;
          }
          else
          {
            char v68 = v6 & 1;
            uint64_t v69 = *(void *)a2;
            uint64_t v70 = *(void *)(a2 + 8);
            uint64_t v71 = *(void *)(a2 + 16);
            uint64_t v72 = *(void *)(a2 + 24);
            sub_1001F33C4(*(void *)a2, v70, v71, v72, v6 & 1);
            *(void *)a1 = v69;
            *(void *)(a1 + 8) = v70;
            *(void *)(a1 + 16) = v71;
            *(void *)(a1 + 24) = v72;
            *(unsigned char *)(a1 + 32) = v68;
            unint64_t v73 = *(void *)(a2 + 56);
            if (HIBYTE(v73) == 255)
            {
              long long v74 = *(_OWORD *)(a2 + 40);
              *(void *)(a1 + 56) = *(void *)(a2 + 56);
              *(_OWORD *)(a1 + 40) = v74;
            }
            else
            {
              uint64_t v75 = *(void *)(a2 + 40);
              uint64_t v76 = *(void *)(a2 + 48);
              sub_1001F33AC(v75, v76, *(void *)(a2 + 56), HIBYTE(v73) & 1);
              *(void *)(a1 + 40) = v75;
              *(void *)(a1 + 48) = v76;
              *(unsigned char *)(a1 + 62) = BYTE6(v73);
              *(_WORD *)(a1 + 60) = WORD2(v73);
              *(_DWORD *)(a1 + 56) = v73;
              *(unsigned char *)(a1 + 63) = HIBYTE(v73) & 1;
            }
          }
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy((void *)a1, (const void *)a2, 0x48uLL);
        }
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        unsigned int v78 = *(_DWORD *)(a2 + 104);
        uint64_t v77 = a2 + 104;
        uint64_t v79 = *(void *)(v77 - 16);
        uint64_t v80 = *(void *)(v77 - 8);
        int v81 = *(unsigned __int8 *)(v77 + 6);
        uint64_t v82 = *(unsigned __int16 *)(v77 + 4) | (v81 << 16);
        char v83 = *(unsigned char *)(v77 + 7);
        swift_bridgeObjectRetain();
        sub_1001F33AC(v79, v80, v78 | (unint64_t)(v82 << 32), v83);
        *(void *)(a1 + 88) = v79;
        *(void *)(a1 + 96) = v80;
        *(unsigned char *)(a1 + 110) = v81;
        *(_WORD *)(a1 + 108) = v82;
        *(_DWORD *)(a1 + 104) = v78;
        *(unsigned char *)(a1 + 111) = v83;
        *(void *)(a1 + 112) = *(void *)(v77 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        unsigned int v11 = *(_DWORD *)(a2 + 40);
        uint64_t v10 = a2 + 40;
        uint64_t v12 = *(void *)(v10 - 16);
        uint64_t v13 = *(void *)(v10 - 8);
        int v14 = *(unsigned __int8 *)(v10 + 6);
        uint64_t v15 = *(unsigned __int16 *)(v10 + 4) | (v14 << 16);
        char v16 = *(unsigned char *)(v10 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001F33AC(v12, v13, v11 | (unint64_t)(v15 << 32), v16);
        *(void *)(a1 + 24) = v12;
        *(void *)(a1 + 32) = v13;
        *(unsigned char *)(a1 + 46) = v14;
        *(_WORD *)(a1 + 44) = v15;
        *(_DWORD *)(a1 + 40) = v11;
        *(unsigned char *)(a1 + 47) = v16;
        *(void *)(a1 + 48) = *(void *)(v10 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
        *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
        int v17 = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        *(_DWORD *)(a1 + 32) = v17;
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_68;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
        *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
        int v18 = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        *(_DWORD *)(a1 + 32) = v18;
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_68;
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xDu:
      case 0x21u:
      case 0x22u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xEu:
        uint64_t v19 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v19)) {
          goto LABEL_14;
        }
        goto LABEL_45;
      case 0xFu:
        uint64_t v21 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v21))
        {
          uint64_t v22 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v43 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v21);
        }
        uint64_t v44 = sub_10000566C(&qword_1007108F8);
        *(void *)(a1 + *(int *)(v44 + 48)) = *(void *)(a2 + *(int *)(v44 + 48));
        *(void *)(a1 + *(int *)(v44 + 64)) = *(void *)(a2 + *(int *)(v44 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x10u:
        uint64_t v23 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v23))
        {
          uint64_t v24 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v45 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v23);
        }
        uint64_t v46 = sub_10000566C(&qword_1007108F0);
        *(void *)(a1 + *(int *)(v46 + 48)) = *(void *)(a2 + *(int *)(v46 + 48));
        uint64_t v47 = *(int *)(v46 + 64);
        uint64_t v48 = (void *)(a1 + v47);
        uint64_t v49 = (uint64_t *)(a2 + v47);
        uint64_t v50 = *v49;
        uint64_t v51 = v49[1];
        swift_bridgeObjectRetain();
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *uint64_t v48 = v50;
        v48[1] = v51;
        goto LABEL_68;
      case 0x11u:
      case 0x17u:
        uint64_t v25 = *(void *)a2;
        sub_1002238FC(*(void *)a2);
        *(void *)a1 = v25;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x12u:
        uint64_t v19 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v19))
        {
LABEL_14:
          uint64_t v20 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
LABEL_45:
          uint64_t v39 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v19);
        }
        uint64_t v40 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
        uint64_t v41 = a1 + v40;
        uint64_t v42 = a2 + v40;
        *(void *)uint64_t v41 = *(void *)v42;
        *(_DWORD *)(v41 + 8) = *(_DWORD *)(v42 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x13u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0x14u:
        uint64_t v26 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v26)) {
          goto LABEL_24;
        }
        goto LABEL_52;
      case 0x15u:
        uint64_t v26 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v26))
        {
LABEL_24:
          uint64_t v27 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
LABEL_52:
          uint64_t v52 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v26);
        }
        uint64_t v53 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
        uint64_t v54 = a1 + v53;
        uint64_t v55 = a2 + v53;
        *(void *)uint64_t v54 = *(void *)v55;
        *(_DWORD *)(v54 + 8) = *(_DWORD *)(v55 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x16u:
        uint64_t v28 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v28))
        {
          uint64_t v29 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          uint64_t v56 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v28);
        }
        uint64_t v57 = sub_10000566C(&qword_1007108D8);
        *(void *)(a1 + *(int *)(v57 + 48)) = *(void *)(a2 + *(int *)(v57 + 48));
        *(void *)(a1 + *(int *)(v57 + 64)) = *(void *)(a2 + *(int *)(v57 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x18u:
        uint64_t v30 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v30))
        {
          uint64_t v31 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v58 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v30);
        }
        uint64_t v59 = sub_10000566C(&qword_1007108D0);
        *(void *)(a1 + *(int *)(v59 + 48)) = *(void *)(a2 + *(int *)(v59 + 48));
        uint64_t v60 = *(int *)(v59 + 64);
        uint64_t v61 = (void *)(a1 + v60);
        uint64_t v62 = (uint64_t *)(a2 + v60);
        uint64_t v63 = *v62;
        uint64_t v64 = v62[1];
        swift_bridgeObjectRetain();
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *uint64_t v61 = v63;
        v61[1] = v64;
        goto LABEL_68;
      case 0x19u:
        uint64_t v32 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(a2, 1, v32))
        {
          uint64_t v33 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          uint64_t v65 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
          storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v32);
        }
        goto LABEL_68;
      case 0x1Au:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
        int v34 = *(_DWORD *)(a2 + 16);
        *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
        *(_DWORD *)(a1 + 16) = v34;
        swift_retain();
        goto LABEL_68;
      case 0x1Cu:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
        int v35 = *(_DWORD *)(a2 + 16);
        *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
        *(_DWORD *)(a1 + 16) = v35;
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x1Du:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x1Eu:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0x1Fu:
        uint64_t v36 = *(void *)a2;
        sub_1002238FC(*(void *)a2);
        *(void *)a1 = v36;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v37 = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37)
        {
          *(void *)(a1 + 32) = v37;
          uint64_t v38 = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          if (v38)
          {
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_68;
          }
          uint64_t v66 = (_OWORD *)(a1 + 40);
          long long v67 = *(_OWORD *)(a2 + 40);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
        }
        else
        {
          uint64_t v66 = (_OWORD *)(a1 + 32);
          long long v67 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        }
        *uint64_t v66 = v67;
LABEL_68:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x23u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x24u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

char *initializeWithTake for Command(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xEu:
      uint64_t v6 = sub_10000566C(&qword_1007104C8);
      if (!getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v6)) {
        goto LABEL_21;
      }
      goto LABEL_3;
    case 0xFu:
      uint64_t v8 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_10000566C(&qword_1007104D8);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v24 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v8);
      }
      uint64_t v25 = sub_10000566C(&qword_1007108F8);
      *(void *)&a1[*(int *)(v25 + 48)] = *(void *)&a2[*(int *)(v25 + 48)];
      *(void *)&a1[*(int *)(v25 + 64)] = *(void *)&a2[*(int *)(v25 + 64)];
      goto LABEL_36;
    case 0x10u:
      uint64_t v10 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_10000566C(&qword_1007104D8);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v26 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v27 = sub_10000566C(&qword_1007108F0);
      *(void *)&a1[*(int *)(v27 + 48)] = *(void *)&a2[*(int *)(v27 + 48)];
      *(_OWORD *)&a1[*(int *)(v27 + 64)] = *(_OWORD *)&a2[*(int *)(v27 + 64)];
      goto LABEL_36;
    case 0x12u:
      uint64_t v6 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v6))
      {
LABEL_3:
        uint64_t v7 = sub_10000566C(&qword_1007104D8);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
LABEL_21:
        uint64_t v20 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v21 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      *((_DWORD *)v22 + 2) = *((_DWORD *)v23 + 2);
      goto LABEL_36;
    case 0x14u:
      uint64_t v12 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v12)) {
        goto LABEL_12;
      }
      goto LABEL_28;
    case 0x15u:
      uint64_t v12 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v12))
      {
LABEL_12:
        uint64_t v13 = sub_10000566C(&qword_1007108C8);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
LABEL_28:
        uint64_t v28 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v12);
      }
      uint64_t v29 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      *((_DWORD *)v30 + 2) = *((_DWORD *)v31 + 2);
      goto LABEL_36;
    case 0x16u:
      uint64_t v14 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v14))
      {
        uint64_t v15 = sub_10000566C(&qword_1007108C8);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v32 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v14);
      }
      uint64_t v33 = sub_10000566C(&qword_1007108D8);
      *(void *)&a1[*(int *)(v33 + 48)] = *(void *)&a2[*(int *)(v33 + 48)];
      *(void *)&a1[*(int *)(v33 + 64)] = *(void *)&a2[*(int *)(v33 + 64)];
      goto LABEL_36;
    case 0x18u:
      uint64_t v16 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v16))
      {
        uint64_t v17 = sub_10000566C(&qword_1007108C8);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v34 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v16);
      }
      uint64_t v35 = sub_10000566C(&qword_1007108D0);
      *(void *)&a1[*(int *)(v35 + 48)] = *(void *)&a2[*(int *)(v35 + 48)];
      *(_OWORD *)&a1[*(int *)(v35 + 64)] = *(_OWORD *)&a2[*(int *)(v35 + 64)];
      goto LABEL_36;
    case 0x19u:
      uint64_t v18 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v18))
      {
        uint64_t v19 = sub_10000566C(&qword_1007108C8);
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v36 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v18);
      }
LABEL_36:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for Command(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10024EFF4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0xEu:
        uint64_t v6 = sub_10000566C(&qword_1007104C8);
        if (!getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v6)) {
          goto LABEL_22;
        }
        goto LABEL_4;
      case 0xFu:
        uint64_t v8 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v8))
        {
          uint64_t v9 = sub_10000566C(&qword_1007104D8);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          uint64_t v24 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v8);
        }
        uint64_t v25 = sub_10000566C(&qword_1007108F8);
        *(void *)&a1[*(int *)(v25 + 48)] = *(void *)&a2[*(int *)(v25 + 48)];
        *(void *)&a1[*(int *)(v25 + 64)] = *(void *)&a2[*(int *)(v25 + 64)];
        goto LABEL_37;
      case 0x10u:
        uint64_t v10 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v10))
        {
          uint64_t v11 = sub_10000566C(&qword_1007104D8);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          uint64_t v26 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v10);
        }
        uint64_t v27 = sub_10000566C(&qword_1007108F0);
        *(void *)&a1[*(int *)(v27 + 48)] = *(void *)&a2[*(int *)(v27 + 48)];
        *(_OWORD *)&a1[*(int *)(v27 + 64)] = *(_OWORD *)&a2[*(int *)(v27 + 64)];
        goto LABEL_37;
      case 0x12u:
        uint64_t v6 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v6))
        {
LABEL_4:
          uint64_t v7 = sub_10000566C(&qword_1007104D8);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
LABEL_22:
          uint64_t v20 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v6);
        }
        uint64_t v21 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        *(void *)uint64_t v22 = *(void *)v23;
        *((_DWORD *)v22 + 2) = *((_DWORD *)v23 + 2);
        goto LABEL_37;
      case 0x14u:
        uint64_t v12 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v12)) {
          goto LABEL_13;
        }
        goto LABEL_29;
      case 0x15u:
        uint64_t v12 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v12))
        {
LABEL_13:
          uint64_t v13 = sub_10000566C(&qword_1007108C8);
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
LABEL_29:
          uint64_t v28 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v12);
        }
        uint64_t v29 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        *(void *)uint64_t v30 = *(void *)v31;
        *((_DWORD *)v30 + 2) = *((_DWORD *)v31 + 2);
        goto LABEL_37;
      case 0x16u:
        uint64_t v14 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v14))
        {
          uint64_t v15 = sub_10000566C(&qword_1007108C8);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          uint64_t v32 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v14);
        }
        uint64_t v33 = sub_10000566C(&qword_1007108D8);
        *(void *)&a1[*(int *)(v33 + 48)] = *(void *)&a2[*(int *)(v33 + 48)];
        *(void *)&a1[*(int *)(v33 + 64)] = *(void *)&a2[*(int *)(v33 + 64)];
        goto LABEL_37;
      case 0x18u:
        uint64_t v16 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v16))
        {
          uint64_t v17 = sub_10000566C(&qword_1007108C8);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          uint64_t v34 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v16);
        }
        uint64_t v35 = sub_10000566C(&qword_1007108D0);
        *(void *)&a1[*(int *)(v35 + 48)] = *(void *)&a2[*(int *)(v35 + 48)];
        *(_OWORD *)&a1[*(int *)(v35 + 64)] = *(_OWORD *)&a2[*(int *)(v35 + 64)];
        goto LABEL_37;
      case 0x19u:
        uint64_t v18 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v18))
        {
          uint64_t v19 = sub_10000566C(&qword_1007108C8);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          uint64_t v36 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v18);
        }
LABEL_37:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_100253C44()
{
  uint64_t v12 = &unk_1005FA478;
  uint64_t v13 = &unk_1005FA490;
  uint64_t v14 = &unk_1005FA478;
  uint64_t v15 = &unk_1005FA4A8;
  uint64_t v16 = &unk_1005FA4C0;
  uint64_t v17 = &unk_1005FA4D8;
  uint64_t v18 = &unk_1005FA4C0;
  uint64_t v19 = &unk_1005FA478;
  uint64_t v20 = &unk_1005FA478;
  uint64_t v21 = &unk_1005FA490;
  uint64_t v22 = &unk_1005FA490;
  uint64_t v23 = &unk_1005FA4D8;
  uint64_t v24 = &unk_1005FA4F0;
  uint64_t v25 = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100253F28(319, (unint64_t *)&qword_100710998, (void (*)(void))sub_100253EDC);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v26 = &v11;
    swift_getTupleTypeLayout3();
    uint64_t v27 = &v10;
    swift_getTupleTypeLayout3();
    uint64_t v28 = &v9;
    uint64_t v29 = &unk_1005FA4F0;
    swift_getTupleTypeLayout2();
    uint64_t v30 = &v8;
    uint64_t v31 = &unk_1005FA478;
    sub_100253F28(319, (unint64_t *)&qword_1007109A8, (void (*)(void))sub_100253F88);
    if (v2 <= 0x3F)
    {
      uint64_t v3 = *(void *)(v1 - 8) + 64;
      swift_getTupleTypeLayout2();
      uint64_t v32 = &v7;
      swift_getTupleTypeLayout2();
      uint64_t v33 = &v6;
      swift_getTupleTypeLayout3();
      uint64_t v34 = &v5;
      uint64_t v35 = &unk_1005FA4F0;
      swift_getTupleTypeLayout3();
      uint64_t v36 = &v4;
      uint64_t v37 = v3;
      uint64_t v38 = &unk_1005FA520;
      uint64_t v39 = &unk_1005FA490;
      uint64_t v40 = &unk_1005FA4F0;
      uint64_t v41 = &unk_1005FA4F0;
      uint64_t v42 = &unk_1005FA538;
      uint64_t v43 = &unk_1005FA550;
      uint64_t v44 = &unk_1005FA478;
      uint64_t v45 = (char *)&value witness table for Builtin.BridgeObject + 64;
      uint64_t v46 = (char *)&value witness table for Builtin.BridgeObject + 64;
      uint64_t v47 = &unk_1005FA508;
      uint64_t v48 = &unk_1005FA478;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

unint64_t sub_100253EDC()
{
  unint64_t result = qword_1007109A0;
  if (!qword_1007109A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007109A0);
  }
  return result;
}

void sub_100253F28(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t CommandSet = type metadata accessor for LastCommandSet();
    if (!v5) {
      atomic_store(CommandSet, a2);
    }
  }
}

unint64_t sub_100253F88()
{
  unint64_t result = qword_1007109B0;
  if (!qword_1007109B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007109B0);
  }
  return result;
}

uint64_t sub_100253FD4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(&qword_1007109E8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10025401C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10025406C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000566C(a3);
  sub_1001F3BBC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_1002540C8()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_1002540D8()
{
  return *(void *)(v0 - 312);
}

uint64_t sub_1002540F4()
{
  return v0;
}

uint64_t sub_10025414C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10025417C()
{
  uint64_t v2 = *(void *)(v0 - 432);
  uint64_t v3 = *(void *)(v0 - 456);
  uint64_t v4 = *(void *)(v0 - 464);
  int v5 = *(_DWORD *)(v0 - 448);
  return sub_1001F33B8(v2, v3, v4, v5);
}

uint64_t sub_1002541BC()
{
  return swift_beginAccess();
}

void sub_1002541D8(uint64_t a1, unint64_t a2)
{
  sub_100210AD0(a1, a2, v2, v3);
}

uint64_t sub_100254204()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100254224()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100254244()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_100254270()
{
  sub_100210AD0(32, 0xE100000000000000, v1, v0);
}

uint64_t sub_100254290()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1002542B0()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_1002542D0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_100210AD0(a1, a2, a3, v3);
}

uint64_t sub_1002542E8()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100254304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = *(void *)(v13 - 504);
  uint64_t v16 = *(void *)(v13 - 552);
  uint64_t v17 = *(void *)(v13 - 544);
  uint64_t v18 = *(void *)(v13 - 496);
  return sub_10024EEF4(v9, v12, v10, v11, v15, v16, v17, v18, a9);
}

uint64_t sub_100254380()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002543AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_10024EB28(a1, v3);
}

Swift::Int sub_1002543C4(uint64_t a1, uint64_t a2)
{
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

uint64_t sub_1002543F4()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_100254428()
{
  sub_100210AD0(v1, v0, v2, v3);
}

uint64_t sub_10025444C()
{
  return *(void *)(v0 - 312);
}

void sub_100254458(uint64_t a1)
{
  sub_100210AD0(a1, 0xE900000000000020, v2, v1);
}

uint64_t sub_1002544A4()
{
  return *(void *)(v0 - 360);
}

uint64_t sub_1002544C8()
{
  return 0x41544F5551544547;
}

uint64_t sub_1002544EC()
{
  return 0x49544E4548545541;
}

uint64_t sub_100254510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_10024EB28(a1, v3);
}

uint64_t sub_100254528()
{
  return sub_1001F36E4(v1, v2, v0);
}

uint64_t sub_100254558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  return sub_10025406C(a1, v4, v2);
}

void sub_100254574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10024A990(v22, v21, a3, v20, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

Swift::Int sub_1002545A0()
{
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v2);
}

uint64_t sub_1002545C0()
{
  return sub_1001F3A28(v1, v0);
}

Swift::Int sub_1002545DC(uint64_t a1)
{
  unint64_t v3 = 0xE900000000000020;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t sub_1002545FC()
{
  return storeEnumTagSinglePayload for ClientCommand(v0, 0, 1, v1);
}

uint64_t sub_10025461C()
{
  return sub_1005E3400();
}

uint64_t sub_100254650()
{
  return 0x5243534255534E55;
}

uint64_t sub_100254670()
{
  return 0x444154454D544553;
}

uint64_t sub_1002546A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002546BC()
{
  return 0x41544F5551544547;
}

uint64_t sub_1002546D8()
{
  return 0x55414C52554E4547;
}

uint64_t sub_1002546F4()
{
  return v0;
}

uint64_t sub_100254710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_10024EB28(a1, v3);
}

uint64_t sub_100254728()
{
  return *(void *)v0;
}

uint64_t sub_100254744()
{
  return v0;
}

uint64_t sub_100254760()
{
  return 0x4249524353425553;
}

uint64_t sub_10025478C()
{
  return v0;
}

uint64_t sub_10025479C()
{
  return 0x20454E494D415845;
}

uint64_t sub_1002547B4()
{
  return 0x45474E55505845;
}

uint64_t sub_1002547CC()
{
  return 0x2045474E55505845;
}

uint64_t sub_1002547E4()
{
  return 0x204554454C4544;
}

uint64_t sub_1002547FC()
{
  return 0x48435241455345;
}

void sub_100254814(uint64_t a1)
{
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL | 0x20000000000000;
  sub_100210AD0(v4, 0xE700000000000000, v1, v2);
}

void sub_100254838()
{
  *(void *)(v2 - 328) = *(void *)(v1 + v0);
}

uint64_t sub_100254850()
{
  return 0x59454B5445534552;
}

uint64_t sub_100254878()
{
  return v0;
}

uint64_t sub_100254884()
{
  return 0x20454C42414E45;
}

uint64_t sub_10025489C()
{
  return v0;
}

void sub_1002548AC()
{
  Swift::UInt32 v3 = *(_DWORD *)(v1 + 20);
  sub_100210AD0(32, 0xE100000000000000, v0, v3);
}

uint64_t sub_1002548D0()
{
  return 541346133;
}

uint64_t sub_1002548E8()
{
  return *(void *)v0;
}

uint64_t sub_100254930()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100254948()
{
  return 0x43415053454D414ELL;
}

uint64_t sub_100254990()
{
  return 0x5443454C45534E55;
}

uint64_t sub_1002549A8()
{
  return 0x534C545452415453;
}

uint64_t sub_100254A04()
{
  return v0;
}

uint64_t sub_100254A18()
{
  return v0;
}

uint64_t sub_100254A2C()
{
  return sub_1005E19C0();
}

uint64_t sub_100254A4C@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v1 + 20) = a1;
  return swift_bridgeObjectRetain();
}

void sub_100254A64()
{
  sub_1005E3410(1uLL);
}

void sub_100254A7C()
{
  sub_1005E3410(1uLL);
}

__n128 sub_100254A94()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 - 160) = *(_OWORD *)v0;
  *(_OWORD *)(v1 - 144) = v2;
  __n128 result = *(__n128 *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(__n128 *)(v1 - 128) = result;
  *(_OWORD *)(v1 - 112) = v4;
  return result;
}

uint64_t sub_100254ABC()
{
  return v0;
}

uint64_t sub_100254AD0()
{
  return sub_1005E1DB0();
}

uint64_t sub_100254AE8()
{
  return v0;
}

uint64_t sub_100254AFC(uint64_t a1)
{
  return storeEnumTagSinglePayload for ClientCommand(v1, 1, 1, a1);
}

uint64_t sub_100254B30()
{
  return sub_1005E3290();
}

Swift::Int sub_100254B50()
{
  uint64_t v2 = 32;
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v2, v0);
}

uint64_t sub_100254B70()
{
  return 32;
}

void sub_100254B84(Swift::UInt a1)
{
  sub_1005E3410(a1);
}

uint64_t sub_100254B9C()
{
  sub_10024EEEC();
  return sub_10024EEEC();
}

uint64_t sub_100254BD4(uint64_t a1, int a2)
{
  int v5 = *(_DWORD *)(v3 + 8);
  uint64_t v6 = *(void *)v3;
  return static MailboxName.== infix(_:_:)(v2, a2, v6, v5);
}

uint64_t sub_100254C1C()
{
  return 0x2045564F4DLL;
}

void sub_100254C30(int a1@<W8>)
{
  *(_DWORD *)(v1 + 20) = a1;
}

uint64_t sub_100254C48()
{
  return 0x2059504F43;
}

uint64_t sub_100254C5C()
{
  return static MailboxName.== infix(_:_:)(v0, v2, v1, v3);
}

uint64_t sub_100254C7C()
{
  return v0;
}

uint64_t sub_100254C94()
{
  return v0;
}

uint64_t sub_100254CA8()
{
  return 0x204E49474F4CLL;
}

uint64_t sub_100254CBC()
{
  return 0x54554F474F4CLL;
}

void sub_100254CD0()
{
  sub_1005E3410(0);
}

void sub_100254CE8()
{
  sub_1005E3410(0);
}

void sub_100254D00()
{
  sub_10021D82C();
}

uint64_t sub_100254D20()
{
  return *(void *)(v0 - 328);
}

uint64_t sub_100254D2C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100254D8C()
{
  return 0x45534F4C43;
}

uint64_t sub_100254DA0()
{
  return 0x4B43454843;
}

uint64_t sub_100254DE0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100254DF8()
{
  return static StoreData.__derived_enum_equals(_:_:)(v2, v1, v3, v0);
}

void sub_100254E18(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)v2 == 1)
  {
    swift_bridgeObjectRetain();
    sub_10028479C(a1, a2);
    swift_bridgeObjectRelease();
    swift_release();
    v10._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v10);
    swift_bridgeObjectRelease();
    sub_10025DB64();
    sub_10025DC44();
    sub_10025DBD8(v3, a2);
    char v7 = v6;
    swift_bridgeObjectRelease();
    if (v7) {
      sub_100213390();
    }
    swift_bridgeObjectRelease();
    sub_1001F4120();
    if (v9) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v2 + 20) = v8;
    }
  }
  else
  {
    sub_100282B50(a1, a2);
  }
}

void sub_100254F34(uint64_t a1)
{
  if (*(unsigned char *)v1 == 1)
  {
    v8._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v8);
    swift_bridgeObjectRelease();
    sub_10025DB64();
    sub_10025DC44();
    sub_10025DBD8(v3, v2);
    char v5 = v4;
    swift_bridgeObjectRelease();
    if (v5) {
      sub_100213390();
    }
    swift_bridgeObjectRelease();
    sub_1001F4120();
    if (v7) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v1 + 20) = v6;
    }
  }
  else
  {
    sub_100282BCC(a1);
  }
}

uint64_t AppendCommand.tag.getter()
{
  sub_1002550FC(v0, &v3);
  uint64_t v1 = v3;
  uint64_t result = 0;
  switch(v4 >> 5)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      return result;
    case 5:
      v4 &= 0x1Fu;
      sub_100216A28(&v3, (uint64_t)v5);
      goto LABEL_4;
    case 6:
LABEL_4:
      uint64_t result = 0;
      break;
    default:
      swift_bridgeObjectRetain();
      uint64_t result = v1;
      break;
  }
  return result;
}

_OWORD *sub_1002550FC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(long long *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

void AppendCommand.hash(into:)(uint64_t a1)
{
  sub_1002550FC(v1, &v11);
  sub_1002550FC(v1, &v12);
  unsigned __int8 v3 = v17;
  switch(v17 >> 5)
  {
    case 1:
      v17 &= 0x1Fu;
      long long v19 = v12;
      char v20 = v13;
      uint64_t v22 = v14;
      long long v23 = v15;
      uint64_t v24 = v16;
      char v25 = v3 & 1;
      sub_1005E3410(1uLL);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      AppendMessage.hash(into:)(a1);
      sub_100258114((uint64_t)v1, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      return;
    case 2:
      sub_10025DBF4();
      Swift::UInt v6 = 2;
      goto LABEL_7;
    case 3:
      v17 &= 0x1Fu;
      long long v19 = v12;
      char v20 = v13;
      uint64_t v22 = v14;
      long long v23 = v15;
      sub_1005E3410(4uLL);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      AppendOptions.hash(into:)(a1);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    case 4:
      sub_10025DBF4();
      Swift::UInt v6 = 5;
LABEL_7:
      sub_1005E3410(v6);
      goto LABEL_8;
    case 5:
      v17 &= 0x1Fu;
      sub_100216A28(&v12, (uint64_t)&v18);
      sub_1005E3410(6uLL);
      sub_100216A28(&v18, (uint64_t)&v19);
      if (!v21)
      {
        Swift::UInt v10 = v19;
        sub_1005E3410(0);
        Swift::UInt v5 = v10;
LABEL_25:
        sub_1005E3410(v5);
        return;
      }
      if (v21 != 1)
      {
        Swift::UInt v5 = 2;
        goto LABEL_25;
      }
      sub_1005E3410(1uLL);
LABEL_8:
      sub_1001F969C();
      sub_10025DC0C();
      return;
    case 6:
      uint64_t v7 = *((void *)&v15 + 1) | v16;
      uint64_t v8 = v14 | v13 | *((void *)&v12 + 1);
      if (v17 != 192 || v7 | (unint64_t)v12 | (unint64_t)v15 | v8)
      {
        BOOL v9 = v17 == 192 && (void)v12 == 1;
        if (!v9 || v7 | (unint64_t)v15 | v8) {
          Swift::UInt v5 = 8;
        }
        else {
          Swift::UInt v5 = 7;
        }
      }
      else
      {
        Swift::UInt v5 = 3;
      }
      goto LABEL_25;
    default:
      v17 &= 0x1Fu;
      uint64_t v4 = v14;
      sub_1005E3410(0);
      sub_1005E1DB0();
      Swift::UInt v5 = v4 | (v4 << 32);
      goto LABEL_25;
  }
}

BOOL static AppendCommand.__derived_enum_equals(_:_:)(long long *a1, long long *a2)
{
  sub_1002550FC(a2, &v80);
  uint64_t v4 = sub_1002550FC(a1, &v92);
  uint64_t v5 = v92;
  int v6 = v98;
  switch(v98 >> 5)
  {
    case 1:
      sub_10025DCB0();
      uint64_t v24 = *((void *)&v92 + 1);
      char v77 = v93;
      uint64_t v25 = v97;
      sub_1002550FC(a2, &v87);
      int v26 = v91;
      if ((v91 & 0xE0) != 0x20) {
        return 0;
      }
      uint64_t v71 = v24;
      v91 &= 0x1Fu;
      uint64_t v27 = v87;
      int v74 = v88;
      uint64_t v69 = *((void *)&v87 + 1);
      uint64_t v68 = v90.i64[1];
      sub_100258114((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void))sub_100258158);
      sub_100258114((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void))sub_100258158);
      if ((sub_10021E990(v5, v27) & 1) == 0) {
        goto LABEL_77;
      }
      if (v77)
      {
        if (!v74) {
          goto LABEL_77;
        }
      }
      else
      {
        char v59 = v74;
        if (v71 != v69) {
          char v59 = 1;
        }
        if (v59) {
          goto LABEL_77;
        }
      }
      sub_100221B3C();
      if ((v60 & 1) == 0)
      {
LABEL_77:
        sub_100258114((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
        uint64_t v58 = (uint64_t)a1;
        goto LABEL_78;
      }
      sub_100222F7C();
      char v62 = v61;
      sub_100258114((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      sub_100258114((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      return (v62 & 1) != 0 && v25 == v68 && ((v6 ^ v26) & 1) == 0;
    case 2:
      v98 &= 0x1Fu;
      unint64_t v14 = *((void *)&v92 + 1);
      uint64_t v15 = v93;
      uint64_t v16 = WORD2(v93);
      uint64_t v17 = BYTE6(v93);
      sub_10025DB44((uint64_t)v4, &v87);
      if (v19 != 64) {
        return 0;
      }
      goto LABEL_14;
    case 3:
      sub_10025DCB0();
      uint64_t v28 = *((void *)&v92 + 1);
      char v29 = v93;
      sub_10025DB44(v30, &v87);
      if (v32 != 96) {
        return 0;
      }
      unsigned __int8 v91 = v31 & 0x1F;
      long long v33 = v87;
      int v78 = v88;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((sub_10021E990(v5, v33) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v29)
      {
        if (!v78)
        {
LABEL_24:
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_86;
        }
      }
      else
      {
        char v63 = v78;
        if (v28 != *((void *)&v33 + 1)) {
          char v63 = 1;
        }
        if (v63) {
          goto LABEL_24;
        }
      }
      sub_100221B3C();
      if (v64)
      {
        sub_100222F7C();
        char v66 = v65;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        if (v66)
        {
          swift_release();
          return 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
LABEL_86:
      swift_release();
      return 0;
    case 4:
      v98 &= 0x1Fu;
      unint64_t v14 = *((void *)&v92 + 1);
      uint64_t v15 = v93;
      uint64_t v16 = WORD2(v93);
      uint64_t v17 = BYTE6(v93);
      sub_10025DB44((uint64_t)v4, &v87);
      if (v20 != 128) {
        return 0;
      }
LABEL_14:
      unsigned __int8 v91 = v18 & 0x1F;
      uint64_t v73 = *((void *)&v87 + 1);
      uint64_t v76 = v87;
      uint64_t v21 = v88;
      uint64_t v22 = WORD2(v88);
      unint64_t v70 = v14;
      uint64_t v23 = BYTE6(v88);
      sub_100258114((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void))sub_100258158);
      sub_100258114((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void))sub_100258158);
      BOOL v11 = static ByteBuffer.== infix(_:_:)(v5, v70, v15 | (v16 << 32) | (v17 << 48), v76, v73, v21 | (v22 << 32) | (v23 << 48));
      sub_100258114((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      sub_100258114((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      return v11;
    case 5:
      sub_10025DCB0();
      uint64_t v34 = sub_100216A28(&v92, (uint64_t)&v99);
      sub_10025DB44(v34, &v87);
      if (v36 != 160) {
        return 0;
      }
      unsigned __int8 v91 = v35 & 0x1F;
      sub_100216A28(&v87, (uint64_t)&v81);
      sub_100216A28(&v99, (uint64_t)v100);
      if (v104)
      {
        if (v104 == 1)
        {
          uint64_t v37 = v100[0];
          unint64_t v38 = v100[1];
          uint64_t v39 = v101;
          uint64_t v40 = v102;
          uint64_t v41 = v103;
          sub_100216A28(&v81, (uint64_t)&v82);
          if (v86 == 1)
          {
            uint64_t v75 = *((void *)&v82 + 1);
            uint64_t v79 = v82;
            uint64_t v72 = v83;
            uint64_t v42 = v84;
            uint64_t v43 = v85;
            sub_100258114((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void))sub_100258158);
            sub_100258114((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void))sub_100258158);
            LOBYTE(v43) = static ByteBuffer.== infix(_:_:)(v37, v38, v39 | (v40 << 32) | (v41 << 48), v79, v75, v72 | (v42 << 32) | (v43 << 48));
            sub_100258114((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
            sub_100258114((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
            if (v43) {
              return 1;
            }
          }
          return 0;
        }
        sub_100216A28(&v81, (uint64_t)&v82);
        if (v86 == 2 && !(v83 | ((unint64_t)(v84 | (v85 << 16)) << 32)) && v82 == 0)
        {
          sub_10025DC7C();
          return 1;
        }
LABEL_68:
        uint64_t v58 = (uint64_t)a1;
LABEL_78:
        sub_100258114(v58, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
        return 0;
      }
      uint64_t v56 = v100[0];
      sub_100216A28(&v81, (uint64_t)&v82);
      if (v86) {
        goto LABEL_68;
      }
      uint64_t v57 = v82;
      sub_10025DC7C();
      return v56 == v57;
    case 6:
      uint64_t v44 = v96 | v97;
      uint64_t v45 = v94 | v93 | *((void *)&v92 + 1);
      if (v98 != 192 || v44 | (unint64_t)v92 | v95 | v45)
      {
        BOOL v50 = v98 == 192 && (void)v92 == 1;
        if (!v50 || v44 | v95 | v45)
        {
          sub_10025DBB4((uint64_t)v4, &v87);
          if (!v10) {
            return 0;
          }
          if (v53 != 192 || (void)v87 != 2) {
            return 0;
          }
        }
        else
        {
          sub_10025DBB4((uint64_t)v4, &v87);
          if (!v10) {
            return 0;
          }
          if (v51 != 192 || (void)v87 != 1) {
            return 0;
          }
        }
        uint64_t v49 = *((void *)&v87 + 1);
        int8x16_t v55 = vorrq_s8(v89, v90);
        uint64_t v48 = *(void *)&vorr_s8(*(int8x8_t *)v55.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v55, v55, 8uLL)) | v88;
      }
      else
      {
        sub_10025DBB4((uint64_t)v4, &v87);
        if (!v10 || v46 != 192) {
          return 0;
        }
        int8x16_t v47 = vorrq_s8(v89, v90);
        uint64_t v48 = *(void *)&vorr_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL)) | v88;
        uint64_t v49 = *((void *)&v87 + 1) | v87;
      }
      return !(v48 | v49);
    default:
      sub_10025DCB0();
      uint64_t v7 = *((void *)&v92 + 1);
      uint64_t v8 = v94;
      sub_1002550FC(a2, &v87);
      if (v91 > 0x1Fu) {
        return 0;
      }
      uint64_t v9 = v89.u32[0];
      BOOL v10 = v5 == (void)v87 && v7 == *((void *)&v87 + 1);
      if (!v10)
      {
        BOOL v11 = 0;
        if ((sub_1005E3290() & 1) == 0) {
          return v11;
        }
      }
      if ((v8 | (v8 << 32)) != (v9 | (v9 << 32))) {
        return 0;
      }
      uint64_t v12 = sub_100240798();
      return (sub_100219B44(v12, v13) & 1) != 0;
  }
}

BOOL static AppendCommand.CatenateData.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v8 = HIBYTE(a6);
  if (HIBYTE(a3))
  {
    if (HIBYTE(a3) == 1)
    {
      if (v8 == 1)
      {
        sub_100258100(a1, a2, a3, 1);
        uint64_t v13 = sub_10025DC9C();
        sub_100258100(v13, v14, v15, v16);
        BOOL v17 = static ByteBuffer.== infix(_:_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, a4, a5, a6 & 0xFFFFFFFFFFFFFFLL);
        uint64_t v18 = sub_10025DC9C();
        sub_1002560F0(v18, v19, v20, v21);
        sub_1002560F0(a1, a2, a3, 1);
        return v17;
      }
    }
    else if (v8 == 2 && !(a5 | a4) && (a6 & 0xFFFFFFFFFFFFFFLL) == 0)
    {
      return 1;
    }
  }
  else if (!v8)
  {
    return a1 == a4;
  }
  return 0;
}

Swift::Int AppendCommand.hashValue.getter()
{
  sub_1005E33F0();
  AppendCommand.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_100255D90()
{
  sub_1002550FC(v0, v2);
  return AppendCommand.hashValue.getter();
}

void sub_100255DC8(uint64_t a1)
{
  sub_1002550FC(v1, v3);
  AppendCommand.hash(into:)(a1);
}

Swift::Int sub_100255E08()
{
  sub_1002550FC(v0, v3);
  sub_1005E33F0();
  AppendCommand.hash(into:)((uint64_t)v2);
  return sub_1005E3470();
}

BOOL sub_100255E5C(long long *a1, long long *a2)
{
  sub_1002550FC(a1, v4);
  sub_1002550FC(a2, v5);
  return static AppendCommand.__derived_enum_equals(_:_:)(v4, v5);
}

void AppendCommand.CatenateData.hash(into:)(uint64_t a1, Swift::UInt a2, uint64_t a3, unint64_t a4)
{
  if (HIBYTE(a4))
  {
    if (HIBYTE(a4) == 1)
    {
      sub_1005E3410(1uLL);
      sub_1001F969C();
      sub_10025DB24();
      sub_1005E3400();
      return;
    }
    Swift::UInt v5 = 2;
  }
  else
  {
    sub_1005E3410(0);
    Swift::UInt v5 = a2;
  }
  sub_1005E3410(v5);
}

Swift::Int AppendCommand.CatenateData.hashValue.getter(Swift::UInt a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = HIBYTE(a3);
  sub_1005E33F0();
  if (!v4)
  {
    sub_1005E3410(0);
    Swift::UInt v5 = a1;
LABEL_6:
    sub_1005E3410(v5);
    return sub_1005E3470();
  }
  if (v4 != 1)
  {
    Swift::UInt v5 = 2;
    goto LABEL_6;
  }
  sub_1005E3410(1uLL);
  sub_1001F969C();
  sub_10025DB24();
  sub_1005E3400();
  return sub_1005E3470();
}

Swift::Int sub_100255FD4()
{
  return AppendCommand.CatenateData.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

void sub_100255FE0(uint64_t a1)
{
  AppendCommand.CatenateData.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_100255FEC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a8 >> 5)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_3;
    case 2:
    case 4:
LABEL_3:
      uint64_t result = swift_release();
      break;
    case 5:
      uint64_t result = sub_1002560F0(result, a2, a3, SHIBYTE(a3));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002560F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_release();
  }
  return result;
}

Swift::Int sub_100256104()
{
  Swift::UInt v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 23);
  sub_1005E33F0();
  if (!v2)
  {
    sub_1005E3410(0);
    Swift::UInt v3 = v1;
LABEL_6:
    sub_1005E3410(v3);
    return sub_1005E3470();
  }
  if (v2 != 1)
  {
    Swift::UInt v3 = 2;
    goto LABEL_6;
  }
  sub_1005E3410(1uLL);
  swift_beginAccess();
  sub_1005E3400();
  return sub_1005E3470();
}

BOOL sub_1002561DC(uint64_t a1, uint64_t a2)
{
  return static AppendCommand.CatenateData.__derived_enum_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t CommandStreamPart.tag.getter()
{
  uint64_t v2 = type metadata accessor for TaggedCommand();
  __chkstk_darwin(v2 - 8);
  sub_10025DB8C();
  sub_1001F3BBC();
  __chkstk_darwin(v3);
  sub_1001F40C0();
  uint64_t v6 = v5 - v4;
  sub_1002582B4(v0, v5 - v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      switch(*(unsigned __int8 *)(v6 + 56) >> 5)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          sub_10025DAF4();
          break;
        case 6:
          return sub_100240798();
        default:
          swift_bridgeObjectRetain();
          sub_10025DAF4();
          break;
      }
      break;
    case 2u:
      swift_release();
      break;
    case 3u:
      return sub_100240798();
    default:
      sub_10025DA98(v6, v1, (void (*)(void))type metadata accessor for TaggedCommand);
      swift_bridgeObjectRetain();
      sub_100258378(v1, (void (*)(void))type metadata accessor for TaggedCommand);
      break;
  }
  return sub_100240798();
}

void CommandStreamPart.hash(into:)(uint64_t a1)
{
  type metadata accessor for TaggedCommand();
  sub_1001F3BBC();
  __chkstk_darwin(v3);
  sub_1001F40C0();
  uint64_t v6 = v5 - v4;
  type metadata accessor for CommandStreamPart();
  sub_1001F3BBC();
  __chkstk_darwin(v7);
  sub_100254978();
  sub_1002582B4((uint64_t)v1, (uint64_t)v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1002550FC(v1, v8);
      sub_1005E3410(2uLL);
      AppendCommand.hash(into:)(a1);
      sub_100258114((uint64_t)v8, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      break;
    case 2u:
      sub_1005E3410(3uLL);
      sub_1001F969C();
      sub_10025DC0C();
      swift_release();
      break;
    case 3u:
      sub_1005E3410(0);
      break;
    default:
      sub_10025DA98((uint64_t)v1, v6, (void (*)(void))type metadata accessor for TaggedCommand);
      sub_1005E3410(1uLL);
      swift_bridgeObjectRetain();
      sub_100240798();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      Command.hash(into:)();
      sub_100258378(v6, (void (*)(void))type metadata accessor for TaggedCommand);
      break;
  }
}

BOOL static CommandStreamPart.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaggedCommand();
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_100254978();
  type metadata accessor for CommandStreamPart();
  sub_1001F3BBC();
  uint64_t v8 = __chkstk_darwin(v7);
  BOOL v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (long long *)((char *)&v33 - v12);
  __chkstk_darwin(v11);
  uint64_t v15 = (void *)((char *)&v33 - v14);
  uint64_t v16 = sub_10000566C(&qword_100710A20);
  __chkstk_darwin(v16 - 8);
  sub_1001F40C0();
  uint64_t v19 = v18 - v17;
  uint64_t v21 = v18 - v17 + *(int *)(v20 + 56);
  sub_1002582B4(a1, v18 - v17);
  sub_1002582B4(a2, v21);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1002582B4(v19, (uint64_t)v13);
      sub_1002550FC(v13, &v33);
      if (sub_10025DC64() == 1)
      {
        sub_1002550FC((long long *)v21, &v40);
        BOOL v22 = static AppendCommand.__derived_enum_equals(_:_:)(&v33, &v40);
        sub_100258114((uint64_t)&v40, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
        sub_100258114((uint64_t)&v33, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
        goto LABEL_8;
      }
      sub_100258114((uint64_t)&v33, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      goto LABEL_13;
    case 2u:
      sub_1002582B4(v19, (uint64_t)v10);
      uint64_t v23 = *(void *)v10;
      if (sub_10025DC64() != 2)
      {
        swift_release();
        goto LABEL_13;
      }
      BOOL v22 = static ByteBuffer.== infix(_:_:)(v23, *((void *)v10 + 1), *((unsigned int *)v10 + 4) | ((unint64_t)v10[22] << 48) | ((unint64_t)*((unsigned __int16 *)v10 + 10) << 32), *(void *)v21, *(void *)(v21 + 8), *(unsigned int *)(v21 + 16) | ((unint64_t)*(unsigned __int16 *)(v21 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v21 + 22) << 48));
      swift_release();
      swift_release();
LABEL_8:
      sub_100258378(v19, (void (*)(void))type metadata accessor for CommandStreamPart);
      return v22;
    case 3u:
      if (sub_10025DC64() == 3) {
        goto LABEL_22;
      }
      goto LABEL_13;
    default:
      sub_1002582B4(v19, (uint64_t)v15);
      if (sub_10025DC64())
      {
        sub_100258378((uint64_t)v15, (void (*)(void))type metadata accessor for TaggedCommand);
LABEL_13:
        sub_100258318(v19);
        return 0;
      }
      sub_10025DA98(v21, (uint64_t)v2, (void (*)(void))type metadata accessor for TaggedCommand);
      uint64_t v28 = *v2;
      uint64_t v29 = v2[1];
      BOOL v30 = *v15 == *v2 && v15[1] == v29;
      if (!v30 && (sub_1005E3290() & 1) == 0
        || (static Command.__derived_enum_equals(_:_:)((uint64_t)v15 + *(int *)(v5 + 20), (uint64_t)v2 + *(int *)(v5 + 20), v28, v29, v24, v25, v26, v27, v33, *((uint64_t *)&v33 + 1), v34, v35, v36, v37, v38, v39, v40, *((uint64_t *)&v40 + 1), v41,
              v42),
            (v31 & 1) == 0))
      {
        sub_100258378((uint64_t)v2, (void (*)(void))type metadata accessor for TaggedCommand);
        sub_100258378((uint64_t)v15, (void (*)(void))type metadata accessor for TaggedCommand);
        sub_100258378(v19, (void (*)(void))type metadata accessor for CommandStreamPart);
        return 0;
      }
      sub_100258378((uint64_t)v2, (void (*)(void))type metadata accessor for TaggedCommand);
      sub_100258378((uint64_t)v15, (void (*)(void))type metadata accessor for TaggedCommand);
LABEL_22:
      sub_100258378(v19, (void (*)(void))type metadata accessor for CommandStreamPart);
      return 1;
  }
}

Swift::Int CommandStreamPart.hashValue.getter()
{
  sub_1005E33F0();
  CommandStreamPart.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_100256A24()
{
  sub_1005E33F0();
  CommandStreamPart.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

unint64_t CommandStreamPart.debugDescription.getter()
{
  return sub_10020F670(0, (int64_t)sub_1002583D0);
}

void sub_100256AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TaggedCommand();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (Swift::String *)&v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for CommandStreamPart();
  __chkstk_darwin(v7);
  uint64_t v9 = (long long *)&v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1002582B4(a2, (uint64_t)v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1002550FC(v9, &v30);
      sub_1002577E4(&v30);
      sub_100258114((uint64_t)&v30, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      return;
    case 2u:
      uint64_t v10 = *((unsigned int *)v9 + 2);
      uint64_t v11 = *((unsigned int *)v9 + 3);
      if (v11 < v10)
      {
        __break(1u);
        goto LABEL_17;
      }
      int v12 = *((_DWORD *)v9 + 4);
      int v13 = *((unsigned __int16 *)v9 + 10);
      int v14 = *((unsigned __int8 *)v9 + 22);
      if (v12 - (v14 | (v13 << 8)) < v11)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      *(void *)&long long v30 = *(void *)v9;
      *((void *)&v30 + 1) = __PAIR64__(v11, v10);
      int v31 = v12;
      __int16 v32 = v13;
      char v33 = v14;
      uint64_t v34 = v10;
      uint64_t v35 = v11;
      swift_retain();
      uint64_t v15 = sub_1001E6610(&v30);
      swift_release();
      sub_100254F34((uint64_t)v15);
      swift_bridgeObjectRelease();
      Swift::Int v16 = *(unsigned int *)(a1 + 20);
      sub_100210AD0(2573, 0xE200000000000000, a1 + 8, *(_DWORD *)(a1 + 20));
      if (v18)
      {
        v19._uint64_t countAndFlagsBits = 2573;
        v19._object = (void *)0xE200000000000000;
        int v17 = ByteBuffer._setStringSlowpath(_:at:)(v19, v16);
      }
      int v20 = v17;
      swift_release();
      int v21 = *(_DWORD *)(a1 + 20);
      BOOL v22 = __CFADD__(v21, v20);
      int v23 = v21 + v20;
      if (v22)
      {
        __break(1u);
LABEL_11:
        Swift::Int v24 = *(unsigned int *)(a1 + 20);
        sub_100210AD0(0xA0D454E4F44, 0xE600000000000000, a1 + 8, *(_DWORD *)(a1 + 20));
        if (v26)
        {
          v27._uint64_t countAndFlagsBits = 0xA0D454E4F44;
          v27._object = (void *)0xE600000000000000;
          int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v24);
        }
        int v28 = *(_DWORD *)(a1 + 20);
        BOOL v22 = __CFADD__(v28, v25);
        int v23 = v28 + v25;
        if (v22)
        {
LABEL_18:
          __break(1u);
          JUMPOUT(0x100256D4CLL);
        }
      }
      *(_DWORD *)(a1 + 20) = v23;
      return;
    case 3u:
      goto LABEL_11;
    default:
      sub_10025DA98((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for TaggedCommand);
      CommandEncodeBuffer.writeCommand(_:)(v6);
      sub_100258378((uint64_t)v6, (void (*)(void))type metadata accessor for TaggedCommand);
      return;
  }
}

Swift::Int CommandEncodeBuffer.writeCommandStream(_:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for TaggedCommand();
  __chkstk_darwin(v5 - 8);
  sub_10025DB8C();
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_100254978();
  sub_1002582B4(a1, v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1002550FC((long long *)v1, &v33);
      Swift::Int v8 = sub_1002577E4(&v33);
      sub_100258114((uint64_t)&v33, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      return v8;
    case 2u:
      uint64_t v9 = *(unsigned int *)(v1 + 8);
      uint64_t v10 = *(unsigned int *)(v1 + 12);
      if (v10 < v9)
      {
        __break(1u);
        goto LABEL_18;
      }
      int v11 = *(_DWORD *)(v1 + 16);
      int v12 = *(unsigned __int16 *)(v1 + 20);
      int v13 = *(unsigned __int8 *)(v1 + 22);
      if (v11 - (v13 | (v12 << 8)) < v10)
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      *(void *)&long long v33 = *(void *)v1;
      *((void *)&v33 + 1) = __PAIR64__(v10, v9);
      int v34 = v11;
      __int16 v35 = v12;
      char v36 = v13;
      uint64_t v37 = v9;
      uint64_t v38 = v10;
      swift_retain();
      int v14 = sub_1001E6610(&v33);
      swift_release();
      sub_100254F34((uint64_t)v14);
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      Swift::Int v17 = *(unsigned int *)(v1 + 20);
      sub_10025DBD8(2573, 0xE200000000000000);
      if (v19)
      {
        v20._uint64_t countAndFlagsBits = 2573;
        v20._object = (void *)0xE200000000000000;
        Swift::Int v18 = ByteBuffer._setStringSlowpath(_:at:)(v20, v17);
      }
      Swift::Int v21 = v18;
      swift_release();
      sub_1001F4120();
      if (v23) {
        goto LABEL_19;
      }
      *(_DWORD *)(v3 + 20) = v22;
      BOOL v24 = __OFADD__(v16, v21);
      Swift::Int v8 = v16 + v21;
      if (!v24) {
        return v8;
      }
      __break(1u);
LABEL_12:
      Swift::Int v25 = *(unsigned int *)(v3 + 20);
      uint64_t v26 = sub_10025DC30();
      sub_100210AD0(v26, v27, v3 + 8, v25);
      if (v29)
      {
        v30._uint64_t countAndFlagsBits = sub_10025DC30();
        Swift::Int v28 = ByteBuffer._setStringSlowpath(_:at:)(v30, v25);
      }
      Swift::Int v8 = v28;
      sub_1001F4120();
      if (v23)
      {
LABEL_20:
        __break(1u);
        JUMPOUT(0x100256FDCLL);
      }
      *(_DWORD *)(v3 + 20) = v31;
      return v8;
    case 3u:
      goto LABEL_12;
    default:
      sub_10025DA98(v1, (uint64_t)v2, (void (*)(void))type metadata accessor for TaggedCommand);
      CommandEncodeBuffer.writeCommand(_:)(v2);
      Swift::Int v8 = v7;
      sub_100258378((uint64_t)v2, (void (*)(void))type metadata accessor for TaggedCommand);
      return v8;
  }
}

unint64_t static CommandStreamPart.descriptionWithoutPII<A>(_:)()
{
  return sub_10020F670(1, (int64_t)sub_1002583D8);
}

uint64_t sub_100257030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v81 = a2;
  uint64_t v76 = type metadata accessor for TaggedCommand();
  __chkstk_darwin(v76);
  uint64_t v6 = (uint64_t *)((char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = type metadata accessor for CommandStreamPart();
  uint64_t v7 = __chkstk_darwin(v72);
  uint64_t v9 = (long long *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  int v11 = (char *)&v70 - v10;
  uint64_t v12 = sub_10000566C(&qword_100710AE8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v82 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a3 - 8);
  __chkstk_darwin(v13);
  Swift::Int v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  Swift::String v20 = (char *)&v70 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v81, a3);
  uint64_t v21 = v72;
  sub_1005E1F60();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v23 = v82;
  uint64_t v80 = AssociatedConformanceWitness;
  sub_1005E2950();
  uint64_t v24 = v23;
  if (getEnumTagSinglePayload for ClientCommand(v23, 1, v21) != 1)
  {
    uint64_t v25 = a1 + 8;
    uint64_t v75 = (uint64_t)v84 + 6;
    long long v74 = xmmword_1005F6990;
    int v78 = v11;
    uint64_t v77 = AssociatedTypeWitness;
    uint64_t v79 = v20;
    uint64_t v81 = a1 + 8;
    uint64_t v73 = v6;
    while (1)
    {
      sub_10025DA98(v24, (uint64_t)v11, (void (*)(void))type metadata accessor for CommandStreamPart);
      sub_1002582B4((uint64_t)v11, (uint64_t)v9);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1002550FC(v9, v85);
          sub_1002577E4(v85);
          sub_100258114((uint64_t)v85, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
          goto LABEL_28;
        case 2u:
          uint64_t v41 = *((unsigned int *)v9 + 2);
          uint64_t v42 = *((unsigned int *)v9 + 3);
          if (v42 < v41) {
            goto LABEL_32;
          }
          int v43 = *((_DWORD *)v9 + 4);
          int v44 = *((unsigned __int16 *)v9 + 10);
          int v45 = *((unsigned __int8 *)v9 + 22);
          if (v43 - (v45 | (v44 << 8)) < v42) {
            goto LABEL_33;
          }
          uint64_t v86 = *(void *)v9;
          int v87 = v41;
          int v88 = v42;
          int v89 = v43;
          __int16 v90 = v44;
          char v91 = v45;
          uint64_t v92 = v41;
          uint64_t v93 = v42;
          swift_retain();
          int v46 = sub_1001E6610(&v86);
          swift_release();
          if (*(unsigned char *)a1 == 1)
          {
            *(void *)&v84[0] = 91;
            *((void *)&v84[0] + 1) = 0xE100000000000000;
            uint64_t v83 = v46[2];
            v95._uint64_t countAndFlagsBits = sub_1005E3230();
            sub_1005E1E30(v95);
            swift_bridgeObjectRelease();
            v96._uint64_t countAndFlagsBits = 0x5D736574796220;
            v96._object = (void *)0xE700000000000000;
            sub_1005E1E30(v96);
            Swift::String v47 = (Swift::String)v84[0];
            Swift::Int v48 = *(unsigned int *)(a1 + 20);
            swift_bridgeObjectRetain();
            sub_100210AD0(v47._countAndFlagsBits, (unint64_t)v47._object, v25, v48);
            int v50 = v49;
            char v52 = v51;
            swift_bridgeObjectRelease();
            if (v52) {
              int v50 = ByteBuffer._setStringSlowpath(_:at:)(v47, v48);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v53 = *(_DWORD *)(a1 + 20);
            BOOL v33 = __CFADD__(v53, v50);
            Swift::UInt32 v54 = v53 + v50;
            uint64_t v21 = v72;
            int v11 = v78;
            uint64_t AssociatedTypeWitness = v77;
            if (v33) {
              goto LABEL_36;
            }
          }
          else
          {
            ByteBuffer._setBytes(_:at:)((uint64_t)(v46 + 4), (uint64_t)v46 + v46[2] + 32, *(_DWORD *)(a1 + 20));
            int v60 = v59;
            swift_bridgeObjectRelease();
            int v61 = *(_DWORD *)(a1 + 20);
            BOOL v33 = __CFADD__(v61, v60);
            Swift::UInt32 v54 = v61 + v60;
            if (v33) {
              goto LABEL_37;
            }
          }
          *(_DWORD *)(a1 + 20) = v54;
          Swift::Int v62 = v54;
          sub_100210AD0(2573, 0xE200000000000000, v81, v54);
          if (v64)
          {
            v65._uint64_t countAndFlagsBits = 2573;
            v65._object = (void *)0xE200000000000000;
            int v63 = ByteBuffer._setStringSlowpath(_:at:)(v65, v62);
          }
          int v66 = v63;
          swift_release();
          Swift::String v20 = v79;
          int v67 = *(_DWORD *)(a1 + 20);
          BOOL v33 = __CFADD__(v67, v66);
          int v58 = v67 + v66;
          uint64_t v6 = v73;
          if (v33) {
            goto LABEL_35;
          }
LABEL_27:
          *(_DWORD *)(a1 + 20) = v58;
          goto LABEL_28;
        case 3u:
          Swift::UInt32 v55 = *(_DWORD *)(a1 + 20);
          v84[0] = v74;
          ByteBuffer._setBytes(_:at:)((uint64_t)v84, v75, v55);
          int v56 = *(_DWORD *)(a1 + 20);
          BOOL v33 = __CFADD__(v56, v57);
          int v58 = v56 + v57;
          if (!v33) {
            goto LABEL_27;
          }
          goto LABEL_34;
        default:
          sub_10025DA98((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for TaggedCommand);
          uint64_t v26 = v6[1];
          *(void *)&v84[0] = *v6;
          *((void *)&v84[0] + 1) = v26;
          swift_bridgeObjectRetain();
          v94._uint64_t countAndFlagsBits = 32;
          v94._object = (void *)0xE100000000000000;
          sub_1005E1E30(v94);
          Swift::String v27 = (Swift::String)v84[0];
          Swift::Int v28 = *(unsigned int *)(a1 + 20);
          sub_100210AD0(*(uint64_t *)&v84[0], *((unint64_t *)&v84[0] + 1), v25, *(_DWORD *)(a1 + 20));
          if (v30) {
            int v29 = ByteBuffer._setStringSlowpath(_:at:)(v27, v28);
          }
          int v31 = v29;
          swift_bridgeObjectRelease();
          int v32 = *(_DWORD *)(a1 + 20);
          BOOL v33 = __CFADD__(v32, v31);
          int v34 = v32 + v31;
          int v11 = v78;
          uint64_t AssociatedTypeWitness = v77;
          Swift::String v20 = v79;
          if (v33)
          {
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
            JUMPOUT(0x1002577D0);
          }
          *(_DWORD *)(a1 + 20) = v34;
          sub_10024AC44();
          Swift::Int v35 = *(unsigned int *)(a1 + 20);
          sub_100210AD0(2573, 0xE200000000000000, v81, *(_DWORD *)(a1 + 20));
          if (v37)
          {
            v38._uint64_t countAndFlagsBits = 2573;
            v38._object = (void *)0xE200000000000000;
            int v36 = ByteBuffer._setStringSlowpath(_:at:)(v38, v35);
          }
          int v39 = *(_DWORD *)(a1 + 20);
          BOOL v33 = __CFADD__(v39, v36);
          int v40 = v39 + v36;
          if (v33) {
            goto LABEL_31;
          }
          *(_DWORD *)(a1 + 20) = v40;
          sub_100258378((uint64_t)v6, (void (*)(void))type metadata accessor for TaggedCommand);
LABEL_28:
          sub_100258378((uint64_t)v11, (void (*)(void))type metadata accessor for CommandStreamPart);
          sub_1005E2950();
          uint64_t v24 = v82;
          int EnumTagSingle = getEnumTagSinglePayload for ClientCommand(v82, 1, v21);
          uint64_t v25 = v81;
          if (EnumTagSingle == 1) {
            return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v20, AssociatedTypeWitness);
          }
          break;
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v20, AssociatedTypeWitness);
}

Swift::Int sub_1002577E4(long long *a1)
{
  Swift::Int v2 = v1;
  uint64_t v3 = a1;
  Swift::Int v4 = (Swift::Int)&v112;
  sub_1002550FC(a1, &v105);
  sub_1002550FC(v3, v106);
  uint64_t v5 = *(void **)v106;
  LODWORD(v6) = v110;
  switch(v110 >> 5)
  {
    case 1:
      goto LABEL_8;
    case 2:
      goto LABEL_15;
    case 3:
      v110 &= 0x1Fu;
      uint64_t v3 = (long long *)v108;
      long long v112 = *(_OWORD *)v106;
      LOBYTE(v113) = v106[16];
      uint64_t v117 = v107;
      long long v118 = v108;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100224DDC((uint64_t *)&v112);
      uint64_t v30 = v29;
      Swift::Int v6 = *(unsigned int *)(v1 + 20);
      sub_100210AD0(0x54414E4554414320, 0xEB00000000282045, v1 + 8, *(_DWORD *)(v1 + 20));
      if (v32)
      {
        v33._uint64_t countAndFlagsBits = 0x54414E4554414320;
        v33._object = (void *)0xEB00000000282045;
        Swift::Int v31 = ByteBuffer._setStringSlowpath(_:at:)(v33, v6);
      }
      Swift::Int v34 = v31;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      int v35 = *(_DWORD *)(v2 + 20);
      BOOL v14 = __CFADD__(v35, v34);
      int v36 = v35 + v34;
      if (v14) {
        goto LABEL_93;
      }
      *(_DWORD *)(v2 + 20) = v36;
      Swift::Int v18 = v30 + v34;
      if (!__OFADD__(v30, v34)) {
        return v18;
      }
      __break(1u);
LABEL_23:
      unsigned __int8 v110 = v6 & 0x1F;
      uint64_t v37 = *(unsigned int *)&v106[8];
      Swift::Int v6 = *(unsigned int *)&v106[12];
      int v102 = *(unsigned __int16 *)&v106[20];
      int v104 = *(_DWORD *)&v106[16];
      int v101 = v106[22];
      Swift::Int v38 = *(unsigned int *)(v2 + 20);
      if (*(unsigned char *)(v2 + 56) == 1)
      {
        swift_retain();
        sub_100210AD0(32, 0xE100000000000000, v2 + 8, v38);
        if (v40)
        {
          v41._uint64_t countAndFlagsBits = 32;
          v41._object = (void *)0xE100000000000000;
          Swift::Int v39 = ByteBuffer._setStringSlowpath(_:at:)(v41, v38);
        }
        Swift::Int v42 = v39;
        int v43 = *(_DWORD *)(v2 + 20);
        LODWORD(v38) = v43 + v39;
        if (__CFADD__(v43, v39)) {
          goto LABEL_99;
        }
        *(_DWORD *)(v2 + 20) = v38;
      }
      else
      {
        swift_retain();
        Swift::Int v42 = 0;
      }
      sub_100210AD0(541872725, 0xE400000000000000, v2 + 8, v38);
      if (v55)
      {
        v56._uint64_t countAndFlagsBits = 541872725;
        v56._object = (void *)0xE400000000000000;
        Swift::Int v54 = ByteBuffer._setStringSlowpath(_:at:)(v56, v38);
      }
      int v57 = *(_DWORD *)(v2 + 20);
      BOOL v14 = __CFADD__(v57, v54);
      int v58 = v57 + v54;
      if (v14) {
        goto LABEL_94;
      }
      *(_DWORD *)(v2 + 20) = v58;
      BOOL v17 = __OFADD__(v42, v54);
      Swift::Int v59 = v42 + v54;
      if (v17) {
        goto LABEL_96;
      }
      if (v6 < v37) {
        goto LABEL_97;
      }
      if (v104 - (v101 | (v102 << 8)) < v6) {
        goto LABEL_98;
      }
      *(void *)&long long v112 = v5;
      *((void *)&v112 + 1) = __PAIR64__(v6, v37);
      int v113 = v104;
      __int16 v114 = v102;
      char v115 = v101;
      uint64_t v117 = v37;
      *(void *)&long long v118 = v6;
      swift_retain();
      Swift::Int v60 = sub_10025E0BC((uint64_t *)&v112);
      sub_100258114((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      sub_100258114((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      Swift::Int v18 = v59 + v60;
      if (__OFADD__(v59, v60))
      {
        __break(1u);
LABEL_50:
        BOOL v61 = v6 == 192 && v5 == (void *)1;
        if (!v61 || v46 | v45 | v47)
        {
          Swift::Int v74 = *(unsigned int *)(v2 + 20);
          sub_100210AD0(2573, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
          if (v76)
          {
            v77._uint64_t countAndFlagsBits = 2573;
            v77._object = (void *)0xE200000000000000;
            Swift::Int v75 = ByteBuffer._setStringSlowpath(_:at:)(v77, v74);
          }
          Swift::Int v18 = v75;
          int v78 = *(_DWORD *)(v2 + 20);
          BOOL v14 = __CFADD__(v78, v75);
          int v53 = v78 + v75;
          if (!v14) {
            goto LABEL_71;
          }
          goto LABEL_102;
        }
        *(unsigned char *)(v2 + 56) = 0;
        Swift::Int v62 = *(unsigned int *)(v2 + 20);
        sub_100210AD0(41, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
        if (v64)
        {
          v65._uint64_t countAndFlagsBits = 41;
          v65._object = (void *)0xE100000000000000;
          Swift::Int v63 = ByteBuffer._setStringSlowpath(_:at:)(v65, v62);
        }
        Swift::Int v18 = v63;
        int v66 = *(_DWORD *)(v2 + 20);
        BOOL v14 = __CFADD__(v66, v63);
        int v53 = v66 + v63;
        if (!v14)
        {
LABEL_71:
          *(_DWORD *)(v2 + 20) = v53;
          return v18;
        }
        __break(1u);
LABEL_61:
        if (*(unsigned char *)(v2 + 56))
        {
          Swift::Int v67 = *(unsigned int *)(v2 + 20);
          sub_100210AD0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
          if (v69)
          {
            v70._uint64_t countAndFlagsBits = 32;
            v70._object = (void *)0xE100000000000000;
            Swift::Int v68 = ByteBuffer._setStringSlowpath(_:at:)(v70, v67);
          }
          Swift::Int v71 = v68;
          int v72 = *(_DWORD *)(v2 + 20);
          BOOL v14 = __CFADD__(v72, v68);
          Swift::UInt32 v73 = v72 + v68;
          if (v14) {
            goto LABEL_103;
          }
          *(_DWORD *)(v2 + 20) = v73;
        }
        else
        {
          Swift::Int v71 = 0;
          Swift::UInt32 v73 = *(_DWORD *)(v2 + 20);
        }
        Swift::Int v80 = v73;
        sub_100210AD0(0x2054584554, 0xE500000000000000, v2 + 8, v73);
        if (v82)
        {
          v83._uint64_t countAndFlagsBits = 0x2054584554;
          v83._object = (void *)0xE500000000000000;
          Swift::Int v81 = ByteBuffer._setStringSlowpath(_:at:)(v83, v80);
        }
        int v84 = *(_DWORD *)(v2 + 20);
        Swift::Int v85 = (v84 + v81);
        if (__CFADD__(v84, v81)) {
          goto LABEL_100;
        }
        *(_DWORD *)(v2 + 20) = v85;
        Swift::Int v86 = v71 + v81;
        if (__OFADD__(v71, v81))
        {
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
          goto LABEL_107;
        }
        if (((*(unsigned int *)(v2 + 1) | ((unint64_t)*(unsigned __int8 *)(v2 + 5) << 32)) & 0x8000000000) != 0)
        {
LABEL_107:
          __break(1u);
          JUMPOUT(0x1002580E4);
        }
        if ((*(_DWORD *)(v2 + 1) & 0x10000) == 0)
        {
          v120._uint64_t countAndFlagsBits = sub_1005E3230();
          sub_1005E1E30(v120);
          swift_bridgeObjectRelease();
          v121._uint64_t countAndFlagsBits = 658813;
          v121._object = (void *)0xE300000000000000;
          sub_1005E1E30(v121);
          swift_bridgeObjectRetain();
          sub_100210AD0(123, 0xE100000000000000, v2 + 8, v85);
          Swift::Int v88 = v87;
          char v90 = v89;
          swift_bridgeObjectRelease();
          if (v90)
          {
            v91._uint64_t countAndFlagsBits = 123;
            v91._object = (void *)0xE100000000000000;
            Swift::Int v88 = ByteBuffer._setStringSlowpath(_:at:)(v91, v85);
          }
          swift_bridgeObjectRelease();
          int v92 = *(_DWORD *)(v2 + 20);
          uint64_t v93 = (v92 + v88);
          if (!__CFADD__(v92, v88))
          {
            *(_DWORD *)(v2 + 20) = v93;
            Swift::Int v18 = v86 + v88;
            if (!__OFADD__(v86, v88))
            {
              sub_100210E34(v93);
              return v18;
            }
            goto LABEL_106;
          }
          goto LABEL_104;
        }
        v122._uint64_t countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v122);
        swift_bridgeObjectRelease();
        v123._uint64_t countAndFlagsBits = 168656171;
        v123._object = (void *)0xE400000000000000;
        sub_1005E1E30(v123);
        swift_bridgeObjectRetain();
        sub_100210AD0(123, 0xE100000000000000, v2 + 8, v85);
        Swift::Int v95 = v94;
        char v97 = v96;
        swift_bridgeObjectRelease();
        if (v97)
        {
          v98._uint64_t countAndFlagsBits = 123;
          v98._object = (void *)0xE100000000000000;
          Swift::Int v95 = ByteBuffer._setStringSlowpath(_:at:)(v98, v85);
        }
        swift_bridgeObjectRelease();
        int v99 = *(_DWORD *)(v2 + 20);
        BOOL v14 = __CFADD__(v99, v95);
        int v100 = v99 + v95;
        if (v14) {
          goto LABEL_105;
        }
        *(_DWORD *)(v2 + 20) = v100;
        Swift::Int v18 = v86 + v95;
        if (!__OFADD__(v86, v95)) {
          return v18;
        }
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
LABEL_67:
      *(unsigned char *)(v2 + 56) = 1;
      return v18;
    case 4:
      goto LABEL_23;
    case 5:
      v110 &= 0x1Fu;
      sub_100216A28((long long *)v106, (uint64_t)&v111);
      sub_100216A28(&v111, (uint64_t)&v112);
      if (!v116) {
        goto LABEL_61;
      }
      if (v116 == 1) {
        goto LABEL_30;
      }
      Swift::Int v18 = 0;
      goto LABEL_67;
    case 6:
      uint64_t v45 = v108;
      uint64_t v46 = *((void *)&v108 + 1) | v109;
      uint64_t v47 = v107 | *(void *)&v106[16] | *(void *)&v106[8];
      if (v110 != 192 || v46 | *(void *)v106 | (unint64_t)v108 | v47) {
        goto LABEL_50;
      }
      if (*(unsigned char *)v1 != 1) {
        return 0;
      }
      Swift::Int v48 = *(unsigned int *)(v1 + 20);
      sub_100210AD0(8751330, 0xA300000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
      if (v50)
      {
        v51._uint64_t countAndFlagsBits = 8751330;
        v51._object = (void *)0xA300000000000000;
        Swift::Int v49 = ByteBuffer._setStringSlowpath(_:at:)(v51, v48);
      }
      Swift::Int v18 = v49;
      int v52 = *(_DWORD *)(v1 + 20);
      BOOL v14 = __CFADD__(v52, v49);
      int v53 = v52 + v49;
      if (!v14) {
        goto LABEL_71;
      }
      __break(1u);
      return 0;
    default:
      v110 &= 0x1Fu;
      uint64_t v3 = *(long long **)&v106[16];
      long long v112 = *(_OWORD *)v106;
      swift_bridgeObjectRetain();
      v119._uint64_t countAndFlagsBits = 0x20444E4550504120;
      v119._object = (void *)0xE800000000000000;
      sub_1005E1E30(v119);
      uint64_t v5 = (void *)*((void *)&v112 + 1);
      uint64_t v7 = v112;
      Swift::Int v4 = *(unsigned int *)(v2 + 20);
      swift_bridgeObjectRetain();
      sub_100210AD0(v7, (unint64_t)v5, v2 + 8, v4);
      Swift::Int v9 = v8;
      char v11 = v10;
      swift_bridgeObjectRelease();
      if (v11)
      {
        v12._uint64_t countAndFlagsBits = v7;
        v12._object = v5;
        Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v12, v4);
      }
      swift_bridgeObjectRelease();
      int v13 = *(_DWORD *)(v2 + 20);
      BOOL v14 = __CFADD__(v13, v9);
      int v15 = v13 + v9;
      if (v14) {
        goto LABEL_91;
      }
      *(_DWORD *)(v2 + 20) = v15;
      uint64_t v16 = swift_bridgeObjectRetain();
      Swift::Int v2 = sub_10025E538(v16);
      swift_bridgeObjectRelease();
      BOOL v17 = __OFADD__(v9, v2);
      Swift::Int v18 = v9 + v2;
      if (!v17) {
        return v18;
      }
      __break(1u);
LABEL_8:
      unsigned __int8 v110 = v6 & 0x1F;
      uint64_t v103 = v109;
      *(void *)&long long v112 = v5;
      *((void *)&v112 + 1) = *(void *)&v106[8];
      LOBYTE(v113) = v106[16];
      uint64_t v117 = v107;
      *(_OWORD *)(v4 + 32) = v108;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_100224DDC((uint64_t *)&v112);
      uint64_t v20 = v19;
      Swift::Int v21 = *(unsigned int *)(v2 + 20);
      sub_100210AD0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
      if (v23)
      {
        v24._uint64_t countAndFlagsBits = 32;
        v24._object = (void *)0xE100000000000000;
        Swift::Int v22 = ByteBuffer._setStringSlowpath(_:at:)(v24, v21);
      }
      int v25 = *(_DWORD *)(v2 + 20);
      BOOL v14 = __CFADD__(v25, v22);
      int v26 = v25 + v22;
      if (v14) {
        goto LABEL_92;
      }
      *(_DWORD *)(v2 + 20) = v26;
      Swift::Int v27 = v20 + v22;
      if (__OFADD__(v20, v22)) {
        goto LABEL_95;
      }
      sub_100219038(v103, v6 & 1);
      Swift::Int v2 = v28;
      sub_100258114((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void))sub_100255FEC);
      BOOL v17 = __OFADD__(v27, v2);
      Swift::Int v18 = v27 + v2;
      if (v17)
      {
        __break(1u);
LABEL_15:
        unsigned __int8 v110 = v6 & 0x1F;
        *(_OWORD *)Swift::Int v4 = *(_OWORD *)v106;
        *(void *)(v4 + 15) = *(void *)&v106[15];
        if (*(unsigned char *)v2)
        {
          return 0;
        }
        else
        {
LABEL_30:
          EncodeBuffer.writeBuffer(_:)();
          return v44;
        }
      }
      return v18;
  }
}

uint64_t sub_100258100(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100258114(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100258158(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  switch(a8 >> 5)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 1:
    case 3:
      swift_retain();
      swift_retain();
      swift_retain();
LABEL_7:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 2:
    case 4:
      uint64_t result = swift_retain();
      break;
    case 5:
      uint64_t result = sub_100258100(result, a2, a3, SHIBYTE(a3));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for CommandStreamPart()
{
  uint64_t result = qword_100710AB0;
  if (!qword_100710AB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002582B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommandStreamPart();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100258318(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100710A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100258378(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_1002583D0(uint64_t a1)
{
  sub_100256AA4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1002583D8(uint64_t a1)
{
  return sub_100257030(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

unint64_t sub_1002583E8()
{
  unint64_t result = qword_100710A28;
  if (!qword_100710A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710A28);
  }
  return result;
}

unint64_t sub_100258438()
{
  unint64_t result = qword_100710A30;
  if (!qword_100710A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710A30);
  }
  return result;
}

unint64_t sub_100258488()
{
  unint64_t result = qword_100710A38;
  if (!qword_100710A38)
  {
    type metadata accessor for CommandStreamPart();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710A38);
  }
  return result;
}

uint64_t destroy for AppendCommand(uint64_t a1)
{
  return sub_100255FEC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
}

uint64_t initializeWithCopy for AppendCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 56);
  sub_100258158(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for AppendCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 56);
  sub_100258158(*(void *)a2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  unsigned __int8 v18 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v10;
  sub_100255FEC(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for AppendCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v4;
  sub_100255FEC(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppendCommand(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x1FFFF9 && *(unsigned char *)(a1 + 57))
    {
      int v2 = *(_DWORD *)a1 + 2097145;
    }
    else if ((((*(unsigned __int8 *)(a1 + 56) >> 5) | (8 {
                                                      * ((*(void *)(a1 + 32) >> 57) & 0x78 | *(void *)(a1 + 32) & 7 | (*(void *)(a1 + 40) >> 50) & 0x3C00 | ((*(void *)(a1 + 40) & 7) << 7) & 0x3FFF | (((*(unsigned __int8 *)(a1 + 56) >> 1) & 0xFu) << 14)))) ^ 0x1FFFFF) >= 0x1FFFF9)
    }
    {
      int v2 = -1;
    }
    else
    {
      int v2 = ((*(unsigned __int8 *)(a1 + 56) >> 5) | (8
                                                  * ((*(void *)(a1 + 32) >> 57) & 0x78 | *(void *)(a1 + 32) & 7 | (*(void *)(a1 + 40) >> 50) & 0x3C00 | ((*(void *)(a1 + 40) & 7) << 7) & 0x3FFF | (((*(unsigned __int8 *)(a1 + 56) >> 1) & 0xF) << 14)))) ^ 0x1FFFFF;
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppendCommand(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x1FFFFA)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 2097146;
    if (a3 > 0x1FFFF9) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 > 0x1FFFF9) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2)
    {
      unint64_t v3 = ((-a2 >> 3) & 0x3FFFF) - (a2 << 18);
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(void *)(result + 32) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 40) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(void *)(result + 48) = 0;
      *(unsigned char *)(result + 56) = (v3 >> 13) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_10025879C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 <= 0xBF) {
    return v1 >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_1002587B8(uint64_t result)
{
  *(unsigned char *)(result + 56) &= 0x1Fu;
  return result;
}

uint64_t sub_1002587C8(uint64_t result, unsigned int a2)
{
  if (a2 < 6)
  {
    char v2 = *(unsigned char *)(result + 56) & 1 | (32 * a2);
    *(int8x16_t *)(result + 32) = vandq_s8(*(int8x16_t *)(result + 32), (int8x16_t)vdupq_n_s64(0xFFFFFFFFFFFFFF8uLL));
  }
  else
  {
    *(void *)unint64_t result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    char v2 = -64;
  }
  *(unsigned char *)(result + 56) = v2;
  return result;
}

ValueMetadata *type metadata accessor for AppendCommand()
{
  return &type metadata for AppendCommand;
}

uint64_t destroy for AppendCommand.CatenateData(uint64_t a1)
{
  return sub_1002560F0(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(unsigned char *)(a1 + 23));
}

uint64_t _s12NIOIMAPCore213AppendCommandO12CatenateDataOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 23);
  int v7 = *(unsigned __int8 *)(a2 + 22);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_100258100(*(void *)a2, v4, v5 | (v8 << 32), v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 23) = v6;
  return a1;
}

uint64_t assignWithCopy for AppendCommand.CatenateData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(unsigned int *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 23);
  int v7 = *(unsigned __int8 *)(a2 + 22);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 20) | (v7 << 16);
  sub_100258100(*(void *)a2, v4, v5 | (v8 << 32), v6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  char v12 = *(unsigned char *)(a1 + 23);
  *(unsigned char *)(a1 + 23) = v6;
  sub_1002560F0(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AppendCommand.CatenateData(uint64_t a1, long long *a2)
{
  char v3 = *((unsigned char *)a2 + 23);
  long long v4 = *a2;
  int v7 = *((_DWORD *)a2 + 4);
  uint64_t v5 = a2 + 1;
  int v6 = v7;
  LOWORD(v7) = *((_WORD *)v5 + 2);
  char v8 = *((unsigned char *)v5 + 6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32);
  *(_OWORD *)a1 = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 20) = v7;
  *(unsigned char *)(a1 + 22) = v8;
  char v12 = *(unsigned char *)(a1 + 23);
  *(unsigned char *)(a1 + 23) = v3;
  sub_1002560F0(v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppendCommand.CatenateData(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 23);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppendCommand.CatenateData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 23) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100258A68(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 23) <= 1u) {
    return *(unsigned __int8 *)(a1 + 23);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100258A80(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    LOBYTE(a2) = 2;
    *(_DWORD *)(result + 16) = 0;
  }
  *(unsigned char *)(result + 23) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppendCommand.CatenateData()
{
  return &type metadata for AppendCommand.CatenateData;
}

char *initializeBufferWithCopyOfBuffer for CommandStreamPart(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
      *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
      swift_retain();
LABEL_75:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v14 = *(void *)a2;
      uint64_t v15 = *((void *)a2 + 1);
      uint64_t v16 = *((void *)a2 + 2);
      uint64_t v17 = *((void *)a2 + 3);
      uint64_t v18 = *((void *)a2 + 4);
      uint64_t v19 = *((void *)a2 + 5);
      uint64_t v20 = *((void *)a2 + 6);
      unsigned __int8 v21 = a2[56];
      sub_100258158(v14, v15, v16, v17, v18, v19, v20, v21);
      *(void *)a1 = v14;
      *((void *)a1 + 1) = v15;
      *((void *)a1 + 2) = v16;
      *((void *)a1 + 3) = v17;
      *((void *)a1 + 4) = v18;
      *((void *)a1 + 5) = v19;
      *((void *)a1 + 6) = v20;
      a1[56] = v21;
      goto LABEL_75;
    case 0:
      uint64_t v8 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v8;
      uint64_t v9 = *(int *)(type metadata accessor for TaggedCommand() + 20);
      uint64_t v10 = (uint64_t)&a1[v9];
      uint64_t v11 = (uint64_t)&a2[v9];
      uint64_t v12 = type metadata accessor for Command();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 0x20u:
          *(void *)uint64_t v10 = *(void *)v11;
          *(_DWORD *)(v10 + 8) = *(_DWORD *)(v11 + 8);
          *(void *)(v10 + 16) = *(void *)(v11 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 1u:
        case 9u:
        case 0xAu:
        case 0x1Bu:
          *(void *)uint64_t v10 = *(void *)v11;
          *(_DWORD *)(v10 + 8) = *(_DWORD *)(v11 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 3u:
          if (*(void *)(v11 + 64))
          {
            uint64_t v22 = *(unsigned __int8 *)(v11 + 32);
            if (v22 == 255)
            {
              long long v23 = *(_OWORD *)(v11 + 16);
              *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
              *(_OWORD *)(v10 + 16) = v23;
              long long v24 = *(_OWORD *)(v11 + 48);
              *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
              *(_OWORD *)(v10 + 48) = v24;
            }
            else
            {
              char v92 = v22 & 1;
              uint64_t v93 = *(void *)v11;
              uint64_t v94 = *(void *)(v11 + 8);
              uint64_t v95 = *(void *)(v11 + 16);
              uint64_t v96 = *(void *)(v11 + 24);
              sub_1001F33C4(*(void *)v11, v94, v95, v96, v22 & 1);
              *(void *)uint64_t v10 = v93;
              *(void *)(v10 + 8) = v94;
              *(void *)(v10 + 16) = v95;
              *(void *)(v10 + 24) = v96;
              *(unsigned char *)(v10 + 32) = v92;
              unint64_t v97 = *(void *)(v11 + 56);
              if (HIBYTE(v97) == 255)
              {
                *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
                *(void *)(v10 + 56) = *(void *)(v11 + 56);
              }
              else
              {
                uint64_t v98 = *(void *)(v11 + 40);
                uint64_t v99 = *(void *)(v11 + 48);
                sub_1001F33AC(v98, v99, *(void *)(v11 + 56), HIBYTE(v97) & 1);
                *(void *)(v10 + 40) = v98;
                *(void *)(v10 + 48) = v99;
                *(unsigned char *)(v10 + 62) = BYTE6(v97);
                *(_WORD *)(v10 + 60) = WORD2(v97);
                *(_DWORD *)(v10 + 56) = v97;
                *(unsigned char *)(v10 + 63) = HIBYTE(v97) & 1;
              }
            }
            *(void *)(v10 + 64) = *(void *)(v11 + 64);
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy((void *)v10, (const void *)v11, 0x48uLL);
          }
          unsigned int v101 = *(_DWORD *)(v11 + 104);
          uint64_t v100 = v11 + 104;
          *(void *)(v10 + 72) = *(void *)(v100 - 32);
          *(_DWORD *)(v10 + 80) = *(_DWORD *)(v100 - 24);
          uint64_t v102 = *(void *)(v100 - 16);
          uint64_t v103 = *(void *)(v100 - 8);
          int v104 = *(unsigned __int8 *)(v100 + 6);
          uint64_t v105 = *(unsigned __int16 *)(v100 + 4) | (v104 << 16);
          char v106 = *(unsigned char *)(v100 + 7);
          swift_bridgeObjectRetain();
          sub_1001F33AC(v102, v103, v101 | (unint64_t)(v105 << 32), v106);
          *(void *)(v10 + 88) = v102;
          *(void *)(v10 + 96) = v103;
          *(unsigned char *)(v10 + 110) = v104;
          *(_WORD *)(v10 + 108) = v105;
          *(_DWORD *)(v10 + 104) = v101;
          *(unsigned char *)(v10 + 111) = v106;
          *(void *)(v10 + 112) = *(void *)(v100 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 4u:
          uint64_t v25 = *(void *)(v11 + 8);
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = v25;
          *(_DWORD *)(v10 + 16) = *(_DWORD *)(v11 + 16);
          uint64_t v26 = *(void *)(v11 + 32);
          uint64_t v108 = *(void *)(v11 + 24);
          uint64_t v109 = *(unsigned int *)(v11 + 40);
          int v27 = *(unsigned __int8 *)(v11 + 46);
          uint64_t v28 = *(unsigned __int16 *)(v11 + 44) | (v27 << 16);
          char v29 = *(unsigned char *)(v11 + 47);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1001F33AC(v108, v26, v109 | (v28 << 32), v29);
          *(void *)(v10 + 24) = v108;
          *(void *)(v10 + 32) = v26;
          *(unsigned char *)(v10 + 46) = v27;
          *(_WORD *)(v10 + 44) = v28;
          *(_DWORD *)(v10 + 40) = v109;
          *(unsigned char *)(v10 + 47) = v29;
          *(void *)(v10 + 48) = *(void *)(v11 + 48);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 5u:
          *(void *)uint64_t v10 = *(void *)v11;
          *(_DWORD *)(v10 + 8) = *(_DWORD *)(v11 + 8);
          *(void *)(v10 + 16) = *(void *)(v11 + 16);
          *(void *)(v10 + 24) = *(void *)(v11 + 24);
          *(_DWORD *)(v10 + 32) = *(_DWORD *)(v11 + 32);
          *(_DWORD *)(v10 + 35) = *(_DWORD *)(v11 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_74;
        case 6u:
          *(void *)uint64_t v10 = *(void *)v11;
          *(_DWORD *)(v10 + 8) = *(_DWORD *)(v11 + 8);
          *(void *)(v10 + 16) = *(void *)(v11 + 16);
          *(_DWORD *)(v10 + 24) = *(_DWORD *)(v11 + 24);
          uint64_t v30 = *(void *)(v11 + 40);
          *(void *)(v10 + 32) = *(void *)(v11 + 32);
          *(void *)(v10 + 40) = v30;
          *(void *)(v10 + 48) = *(void *)(v11 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_74;
        case 0xBu:
          uint64_t v31 = *(void *)(v11 + 8);
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = v31;
          *(void *)(v10 + 16) = *(void *)(v11 + 16);
          *(void *)(v10 + 24) = *(void *)(v11 + 24);
          *(_DWORD *)(v10 + 32) = *(_DWORD *)(v11 + 32);
          *(_DWORD *)(v10 + 35) = *(_DWORD *)(v11 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_74;
        case 0xCu:
          uint64_t v32 = *(void *)(v11 + 8);
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = v32;
          uint64_t v33 = *(void *)(v11 + 16);
          uint64_t v34 = *(void *)(v11 + 24);
          *(void *)(v10 + 16) = v33;
          *(void *)(v10 + 24) = v34;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0xDu:
        case 0x21u:
        case 0x22u:
          *(void *)uint64_t v10 = *(void *)v11;
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0xEu:
          uint64_t v35 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v35)) {
            goto LABEL_21;
          }
          goto LABEL_52;
        case 0xFu:
          uint64_t v37 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v37))
          {
            uint64_t v38 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            uint64_t v68 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v10, v11, v68);
            storeEnumTagSinglePayload for ClientCommand(v10, 0, 1, v37);
          }
          uint64_t v69 = sub_10000566C(&qword_1007108F8);
          *(void *)(v10 + *(int *)(v69 + 48)) = *(void *)(v11 + *(int *)(v69 + 48));
          *(void *)(v10 + *(int *)(v69 + 64)) = *(void *)(v11 + *(int *)(v69 + 64));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x10u:
          uint64_t v39 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v39))
          {
            uint64_t v40 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v40 - 8) + 64));
          }
          else
          {
            uint64_t v70 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v10, v11, v70);
            storeEnumTagSinglePayload for ClientCommand(v10, 0, 1, v39);
          }
          uint64_t v71 = sub_10000566C(&qword_1007108F0);
          *(void *)(v10 + *(int *)(v71 + 48)) = *(void *)(v11 + *(int *)(v71 + 48));
          uint64_t v72 = *(int *)(v71 + 64);
          Swift::UInt32 v73 = (void *)(v10 + v72);
          Swift::Int v74 = (uint64_t *)(v11 + v72);
          uint64_t v75 = *v74;
          uint64_t v76 = v74[1];
          swift_bridgeObjectRetain();
          MailboxPriorityInfo.mailboxPriorityOrder.getter();
          *Swift::UInt32 v73 = v75;
          v73[1] = v76;
          goto LABEL_74;
        case 0x11u:
        case 0x17u:
          uint64_t v41 = *(void *)v11;
          sub_1002238FC(*(void *)v11);
          uint64_t v43 = *(void *)(v11 + 8);
          uint64_t v42 = *(void *)(v11 + 16);
          *(void *)uint64_t v10 = v41;
          *(void *)(v10 + 8) = v43;
          uint64_t v44 = *(void *)(v11 + 24);
          *(void *)(v10 + 16) = v42;
          *(void *)(v10 + 24) = v44;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x12u:
          uint64_t v35 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v35))
          {
LABEL_21:
            uint64_t v36 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
LABEL_52:
            uint64_t v64 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v10, v11, v64);
            storeEnumTagSinglePayload for ClientCommand(v10, 0, 1, v35);
          }
          uint64_t v65 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
          uint64_t v66 = v10 + v65;
          uint64_t v67 = v11 + v65;
          *(void *)uint64_t v66 = *(void *)v67;
          *(_DWORD *)(v66 + 8) = *(_DWORD *)(v67 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x13u:
          uint64_t v45 = *(void *)(v11 + 8);
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = v45;
          *(void *)(v10 + 16) = *(void *)(v11 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_74;
        case 0x14u:
          uint64_t v46 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v46)) {
            goto LABEL_31;
          }
          goto LABEL_59;
        case 0x15u:
          uint64_t v46 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v46))
          {
LABEL_31:
            uint64_t v47 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
LABEL_59:
            uint64_t v77 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16))(v10, v11, v77);
            storeEnumTagSinglePayload for ClientCommand(v10, 0, 1, v46);
          }
          uint64_t v78 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
          uint64_t v79 = v10 + v78;
          uint64_t v80 = v11 + v78;
          *(void *)uint64_t v79 = *(void *)v80;
          *(_DWORD *)(v79 + 8) = *(_DWORD *)(v80 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x16u:
          uint64_t v48 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v48))
          {
            uint64_t v49 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            uint64_t v81 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v10, v11, v81);
            storeEnumTagSinglePayload for ClientCommand(v10, 0, 1, v48);
          }
          uint64_t v82 = sub_10000566C(&qword_1007108D8);
          *(void *)(v10 + *(int *)(v82 + 48)) = *(void *)(v11 + *(int *)(v82 + 48));
          *(void *)(v10 + *(int *)(v82 + 64)) = *(void *)(v11 + *(int *)(v82 + 64));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x18u:
          uint64_t v50 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v50))
          {
            uint64_t v51 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v51 - 8) + 64));
          }
          else
          {
            uint64_t v83 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v10, v11, v83);
            storeEnumTagSinglePayload for ClientCommand(v10, 0, 1, v50);
          }
          uint64_t v84 = sub_10000566C(&qword_1007108D0);
          *(void *)(v10 + *(int *)(v84 + 48)) = *(void *)(v11 + *(int *)(v84 + 48));
          uint64_t v85 = *(int *)(v84 + 64);
          Swift::Int v86 = (void *)(v10 + v85);
          Swift::Int v87 = (uint64_t *)(v11 + v85);
          uint64_t v88 = *v87;
          uint64_t v89 = v87[1];
          swift_bridgeObjectRetain();
          MailboxPriorityInfo.mailboxPriorityOrder.getter();
          *Swift::Int v86 = v88;
          v86[1] = v89;
          goto LABEL_74;
        case 0x19u:
          uint64_t v52 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v11, 1, v52))
          {
            uint64_t v53 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            uint64_t v90 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v10, v11, v90);
            storeEnumTagSinglePayload for ClientCommand(v10, 0, 1, v52);
          }
          goto LABEL_74;
        case 0x1Au:
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = *(void *)(v11 + 8);
          *(_DWORD *)(v10 + 16) = *(_DWORD *)(v11 + 16);
          *(_DWORD *)(v10 + 19) = *(_DWORD *)(v11 + 19);
          swift_retain();
          goto LABEL_74;
        case 0x1Cu:
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = *(void *)(v11 + 8);
          *(_DWORD *)(v10 + 16) = *(_DWORD *)(v11 + 16);
          *(_DWORD *)(v10 + 19) = *(_DWORD *)(v11 + 19);
          *(void *)(v10 + 24) = *(void *)(v11 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x1Du:
          uint64_t v54 = *(void *)(v11 + 8);
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = v54;
          *(_DWORD *)(v10 + 16) = *(_DWORD *)(v11 + 16);
          *(void *)(v10 + 24) = *(void *)(v11 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x1Eu:
          *(void *)uint64_t v10 = *(void *)v11;
          *(_DWORD *)(v10 + 8) = *(_DWORD *)(v11 + 8);
          uint64_t v55 = *(void *)(v11 + 24);
          *(void *)(v10 + 16) = *(void *)(v11 + 16);
          *(void *)(v10 + 24) = v55;
          *(void *)(v10 + 32) = *(void *)(v11 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_74;
        case 0x1Fu:
          uint64_t v56 = *(void *)v11;
          sub_1002238FC(*(void *)v11);
          uint64_t v57 = *(void *)(v11 + 32);
          uint64_t v59 = *(void *)(v11 + 8);
          uint64_t v58 = *(void *)(v11 + 16);
          *(void *)uint64_t v10 = v56;
          *(void *)(v10 + 8) = v59;
          uint64_t v60 = *(void *)(v11 + 24);
          *(void *)(v10 + 16) = v58;
          *(void *)(v10 + 24) = v60;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v57)
          {
            *(void *)(v10 + 32) = v57;
            uint64_t v61 = *(void *)(v11 + 48);
            swift_bridgeObjectRetain();
            if (v61)
            {
              *(void *)(v10 + 40) = *(void *)(v11 + 40);
              *(void *)(v10 + 48) = v61;
              *(void *)(v10 + 56) = *(void *)(v11 + 56);
              swift_retain();
              swift_retain();
              swift_retain();
            }
            else
            {
              *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
              *(void *)(v10 + 56) = *(void *)(v11 + 56);
            }
          }
          else
          {
            long long v91 = *(_OWORD *)(v11 + 48);
            *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
            *(_OWORD *)(v10 + 48) = v91;
          }
          goto LABEL_74;
        case 0x23u:
          uint64_t v62 = *(void *)(v11 + 8);
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = v62;
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x24u:
          uint64_t v63 = *(void *)(v11 + 8);
          *(void *)uint64_t v10 = *(void *)v11;
          *(void *)(v10 + 8) = v63;
          *(void *)(v10 + 16) = *(void *)(v11 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_74:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v10, (const void *)v11, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      goto LABEL_75;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t destroy for CommandStreamPart(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
LABEL_5:
    return swift_release();
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for TaggedCommand() + 20);
    type metadata accessor for Command();
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
      case 2:
      case 7:
      case 8:
      case 12:
      case 32:
      case 36:
        goto LABEL_52;
      case 1:
      case 9:
      case 10:
      case 13:
      case 27:
      case 33:
      case 34:
      case 35:
        goto LABEL_53;
      case 3:
        if (*(void *)(v3 + 64))
        {
          uint64_t v17 = *(unsigned __int8 *)(v3 + 32);
          if (v17 != 255)
          {
            sub_1001F3480(*(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), v17 & 1);
            unint64_t v18 = *(void *)(v3 + 56);
            if (HIBYTE(v18) != 255) {
              sub_1001F33B8(*(void *)(v3 + 40), *(void *)(v3 + 48), v18, HIBYTE(v18) & 1);
            }
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1001F33B8(*(void *)(v3 + 88), *(void *)(v3 + 96), *(unsigned int *)(v3 + 104) | ((unint64_t)(*(unsigned __int16 *)(v3 + 108) | (*(unsigned __int8 *)(v3 + 110) << 16)) << 32), *(unsigned char *)(v3 + 111));
        goto LABEL_53;
      case 4:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1001F33B8(*(void *)(v3 + 24), *(void *)(v3 + 32), *(unsigned int *)(v3 + 40) | ((unint64_t)(*(unsigned __int16 *)(v3 + 44) | (*(unsigned __int8 *)(v3 + 46) << 16)) << 32), *(unsigned char *)(v3 + 47));
        goto LABEL_53;
      case 5:
      case 11:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      case 6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_5;
      case 14:
      case 18:
        uint64_t v12 = sub_10000566C(&qword_1007104C8);
        if (!getEnumTagSinglePayload for ClientCommand(v3, 1, v12))
        {
          uint64_t v13 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v3, v13);
        }
        uint64_t v14 = &qword_1007108E8;
        goto LABEL_18;
      case 15:
        uint64_t v19 = sub_10000566C(&qword_1007104C8);
        if (!getEnumTagSinglePayload for ClientCommand(v3, 1, v19))
        {
          uint64_t v20 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v3, v20);
        }
        unsigned __int8 v21 = &qword_1007108F8;
        goto LABEL_39;
      case 16:
        uint64_t v22 = sub_10000566C(&qword_1007104C8);
        if (!getEnumTagSinglePayload for ClientCommand(v3, 1, v22))
        {
          uint64_t v23 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v3, v23);
        }
        long long v24 = &qword_1007108F0;
        goto LABEL_43;
      case 17:
      case 23:
        sub_1002239B4(*(void *)v3);
        goto LABEL_52;
      case 19:
        swift_release();
        swift_release();
        goto LABEL_5;
      case 20:
      case 21:
        uint64_t v15 = sub_10000566C(&qword_1007108C0);
        if (!getEnumTagSinglePayload for ClientCommand(v3, 1, v15))
        {
          uint64_t v16 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v3, v16);
        }
        uint64_t v14 = &qword_1007108E0;
LABEL_18:
        sub_10000566C(v14);
        goto LABEL_53;
      case 22:
        uint64_t v25 = sub_10000566C(&qword_1007108C0);
        if (!getEnumTagSinglePayload for ClientCommand(v3, 1, v25))
        {
          uint64_t v26 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v3, v26);
        }
        unsigned __int8 v21 = &qword_1007108D8;
LABEL_39:
        sub_10000566C(v21);
        swift_bridgeObjectRelease();
        goto LABEL_53;
      case 24:
        uint64_t v27 = sub_10000566C(&qword_1007108C0);
        if (!getEnumTagSinglePayload for ClientCommand(v3, 1, v27))
        {
          uint64_t v28 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v3, v28);
        }
        long long v24 = &qword_1007108D0;
LABEL_43:
        sub_10000566C(v24);
        swift_bridgeObjectRelease();
        return sub_10024EEEC();
      case 25:
        uint64_t v29 = sub_10000566C(&qword_1007108C0);
        uint64_t result = getEnumTagSinglePayload for ClientCommand(v3, 1, v29);
        if (!result)
        {
          uint64_t v30 = sub_10000566C(&qword_100710538);
          uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);
          return v31(v3, v30);
        }
        return result;
      case 26:
        goto LABEL_5;
      case 28:
        swift_release();
        goto LABEL_53;
      case 29:
        swift_bridgeObjectRelease();
LABEL_52:
        swift_bridgeObjectRelease();
LABEL_53:
        return swift_bridgeObjectRelease();
      case 30:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_5;
      case 31:
        sub_1002239B4(*(void *)v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = *(void *)(v3 + 32);
        if (!result) {
          return result;
        }
        uint64_t result = swift_bridgeObjectRelease();
        if (!*(void *)(v3 + 48)) {
          return result;
        }
        swift_release();
        swift_release();
        break;
      default:
        return result;
    }
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 56);
  return sub_100255FEC(v4, v5, v6, v7, v8, v9, v10, v11);
}

char *initializeWithCopy for CommandStreamPart(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
      *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
      swift_retain();
LABEL_73:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v12 = *(void *)a2;
      uint64_t v13 = *((void *)a2 + 1);
      uint64_t v14 = *((void *)a2 + 2);
      uint64_t v15 = *((void *)a2 + 3);
      uint64_t v16 = *((void *)a2 + 4);
      uint64_t v17 = *((void *)a2 + 5);
      uint64_t v18 = *((void *)a2 + 6);
      unsigned __int8 v19 = a2[56];
      sub_100258158(v12, v13, v14, v15, v16, v17, v18, v19);
      *(void *)a1 = v12;
      *((void *)a1 + 1) = v13;
      *((void *)a1 + 2) = v14;
      *((void *)a1 + 3) = v15;
      *((void *)a1 + 4) = v16;
      *((void *)a1 + 5) = v17;
      *((void *)a1 + 6) = v18;
      a1[56] = v19;
      goto LABEL_73;
    case 0:
      uint64_t v7 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v7;
      uint64_t v8 = *(int *)(type metadata accessor for TaggedCommand() + 20);
      uint64_t v9 = (uint64_t)&a1[v8];
      uint64_t v10 = (uint64_t)&a2[v8];
      uint64_t v11 = type metadata accessor for Command();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 0x20u:
          *(void *)uint64_t v9 = *(void *)v10;
          *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
          *(void *)(v9 + 16) = *(void *)(v10 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 1u:
        case 9u:
        case 0xAu:
        case 0x1Bu:
          *(void *)uint64_t v9 = *(void *)v10;
          *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 3u:
          if (*(void *)(v10 + 64))
          {
            uint64_t v20 = *(unsigned __int8 *)(v10 + 32);
            if (v20 == 255)
            {
              long long v21 = *(_OWORD *)(v10 + 16);
              *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
              *(_OWORD *)(v9 + 16) = v21;
              long long v22 = *(_OWORD *)(v10 + 48);
              *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
              *(_OWORD *)(v9 + 48) = v22;
            }
            else
            {
              char v90 = v20 & 1;
              uint64_t v91 = *(void *)v10;
              uint64_t v92 = *(void *)(v10 + 8);
              uint64_t v93 = *(void *)(v10 + 16);
              uint64_t v94 = *(void *)(v10 + 24);
              sub_1001F33C4(*(void *)v10, v92, v93, v94, v20 & 1);
              *(void *)uint64_t v9 = v91;
              *(void *)(v9 + 8) = v92;
              *(void *)(v9 + 16) = v93;
              *(void *)(v9 + 24) = v94;
              *(unsigned char *)(v9 + 32) = v90;
              unint64_t v95 = *(void *)(v10 + 56);
              if (HIBYTE(v95) == 255)
              {
                *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
                *(void *)(v9 + 56) = *(void *)(v10 + 56);
              }
              else
              {
                uint64_t v96 = *(void *)(v10 + 40);
                uint64_t v97 = *(void *)(v10 + 48);
                sub_1001F33AC(v96, v97, *(void *)(v10 + 56), HIBYTE(v95) & 1);
                *(void *)(v9 + 40) = v96;
                *(void *)(v9 + 48) = v97;
                *(unsigned char *)(v9 + 62) = BYTE6(v95);
                *(_WORD *)(v9 + 60) = WORD2(v95);
                *(_DWORD *)(v9 + 56) = v95;
                *(unsigned char *)(v9 + 63) = HIBYTE(v95) & 1;
              }
            }
            *(void *)(v9 + 64) = *(void *)(v10 + 64);
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy((void *)v9, (const void *)v10, 0x48uLL);
          }
          unsigned int v99 = *(_DWORD *)(v10 + 104);
          uint64_t v98 = v10 + 104;
          *(void *)(v9 + 72) = *(void *)(v98 - 32);
          *(_DWORD *)(v9 + 80) = *(_DWORD *)(v98 - 24);
          uint64_t v100 = *(void *)(v98 - 16);
          uint64_t v101 = *(void *)(v98 - 8);
          int v102 = *(unsigned __int8 *)(v98 + 6);
          uint64_t v103 = *(unsigned __int16 *)(v98 + 4) | (v102 << 16);
          char v104 = *(unsigned char *)(v98 + 7);
          swift_bridgeObjectRetain();
          sub_1001F33AC(v100, v101, v99 | (unint64_t)(v103 << 32), v104);
          *(void *)(v9 + 88) = v100;
          *(void *)(v9 + 96) = v101;
          *(unsigned char *)(v9 + 110) = v102;
          *(_WORD *)(v9 + 108) = v103;
          *(_DWORD *)(v9 + 104) = v99;
          *(unsigned char *)(v9 + 111) = v104;
          *(void *)(v9 + 112) = *(void *)(v98 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 4u:
          uint64_t v23 = *(void *)(v10 + 8);
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = v23;
          *(_DWORD *)(v9 + 16) = *(_DWORD *)(v10 + 16);
          uint64_t v24 = *(void *)(v10 + 32);
          uint64_t v106 = *(void *)(v10 + 24);
          uint64_t v107 = *(unsigned int *)(v10 + 40);
          int v25 = *(unsigned __int8 *)(v10 + 46);
          uint64_t v26 = *(unsigned __int16 *)(v10 + 44) | (v25 << 16);
          char v27 = *(unsigned char *)(v10 + 47);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1001F33AC(v106, v24, v107 | (v26 << 32), v27);
          *(void *)(v9 + 24) = v106;
          *(void *)(v9 + 32) = v24;
          *(unsigned char *)(v9 + 46) = v25;
          *(_WORD *)(v9 + 44) = v26;
          *(_DWORD *)(v9 + 40) = v107;
          *(unsigned char *)(v9 + 47) = v27;
          *(void *)(v9 + 48) = *(void *)(v10 + 48);
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 5u:
          *(void *)uint64_t v9 = *(void *)v10;
          *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
          *(void *)(v9 + 16) = *(void *)(v10 + 16);
          *(void *)(v9 + 24) = *(void *)(v10 + 24);
          *(_DWORD *)(v9 + 32) = *(_DWORD *)(v10 + 32);
          *(_DWORD *)(v9 + 35) = *(_DWORD *)(v10 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_72;
        case 6u:
          *(void *)uint64_t v9 = *(void *)v10;
          *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
          *(void *)(v9 + 16) = *(void *)(v10 + 16);
          *(_DWORD *)(v9 + 24) = *(_DWORD *)(v10 + 24);
          uint64_t v28 = *(void *)(v10 + 40);
          *(void *)(v9 + 32) = *(void *)(v10 + 32);
          *(void *)(v9 + 40) = v28;
          *(void *)(v9 + 48) = *(void *)(v10 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_72;
        case 0xBu:
          uint64_t v29 = *(void *)(v10 + 8);
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = v29;
          *(void *)(v9 + 16) = *(void *)(v10 + 16);
          *(void *)(v9 + 24) = *(void *)(v10 + 24);
          *(_DWORD *)(v9 + 32) = *(_DWORD *)(v10 + 32);
          *(_DWORD *)(v9 + 35) = *(_DWORD *)(v10 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_72;
        case 0xCu:
          uint64_t v30 = *(void *)(v10 + 8);
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = v30;
          uint64_t v31 = *(void *)(v10 + 16);
          uint64_t v32 = *(void *)(v10 + 24);
          *(void *)(v9 + 16) = v31;
          *(void *)(v9 + 24) = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0xDu:
        case 0x21u:
        case 0x22u:
          *(void *)uint64_t v9 = *(void *)v10;
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0xEu:
          uint64_t v33 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v33)) {
            goto LABEL_19;
          }
          goto LABEL_50;
        case 0xFu:
          uint64_t v35 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v35))
          {
            uint64_t v36 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            uint64_t v66 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v9, v10, v66);
            storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v35);
          }
          uint64_t v67 = sub_10000566C(&qword_1007108F8);
          *(void *)(v9 + *(int *)(v67 + 48)) = *(void *)(v10 + *(int *)(v67 + 48));
          *(void *)(v9 + *(int *)(v67 + 64)) = *(void *)(v10 + *(int *)(v67 + 64));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0x10u:
          uint64_t v37 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v37))
          {
            uint64_t v38 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            uint64_t v68 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v9, v10, v68);
            storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v37);
          }
          uint64_t v69 = sub_10000566C(&qword_1007108F0);
          *(void *)(v9 + *(int *)(v69 + 48)) = *(void *)(v10 + *(int *)(v69 + 48));
          uint64_t v70 = *(int *)(v69 + 64);
          uint64_t v71 = (void *)(v9 + v70);
          uint64_t v72 = (uint64_t *)(v10 + v70);
          uint64_t v73 = *v72;
          uint64_t v74 = v72[1];
          swift_bridgeObjectRetain();
          MailboxPriorityInfo.mailboxPriorityOrder.getter();
          *uint64_t v71 = v73;
          v71[1] = v74;
          goto LABEL_72;
        case 0x11u:
        case 0x17u:
          uint64_t v39 = *(void *)v10;
          sub_1002238FC(*(void *)v10);
          uint64_t v41 = *(void *)(v10 + 8);
          uint64_t v40 = *(void *)(v10 + 16);
          *(void *)uint64_t v9 = v39;
          *(void *)(v9 + 8) = v41;
          uint64_t v42 = *(void *)(v10 + 24);
          *(void *)(v9 + 16) = v40;
          *(void *)(v9 + 24) = v42;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0x12u:
          uint64_t v33 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v33))
          {
LABEL_19:
            uint64_t v34 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
LABEL_50:
            uint64_t v62 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v9, v10, v62);
            storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v33);
          }
          uint64_t v63 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
          uint64_t v64 = v9 + v63;
          uint64_t v65 = v10 + v63;
          *(void *)uint64_t v64 = *(void *)v65;
          *(_DWORD *)(v64 + 8) = *(_DWORD *)(v65 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0x13u:
          uint64_t v43 = *(void *)(v10 + 8);
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = v43;
          *(void *)(v9 + 16) = *(void *)(v10 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_72;
        case 0x14u:
          uint64_t v44 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v44)) {
            goto LABEL_29;
          }
          goto LABEL_57;
        case 0x15u:
          uint64_t v44 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v44))
          {
LABEL_29:
            uint64_t v45 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
LABEL_57:
            uint64_t v75 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16))(v9, v10, v75);
            storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v44);
          }
          uint64_t v76 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
          uint64_t v77 = v9 + v76;
          uint64_t v78 = v10 + v76;
          *(void *)uint64_t v77 = *(void *)v78;
          *(_DWORD *)(v77 + 8) = *(_DWORD *)(v78 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0x16u:
          uint64_t v46 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v46))
          {
            uint64_t v47 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            uint64_t v79 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(v9, v10, v79);
            storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v46);
          }
          uint64_t v80 = sub_10000566C(&qword_1007108D8);
          *(void *)(v9 + *(int *)(v80 + 48)) = *(void *)(v10 + *(int *)(v80 + 48));
          *(void *)(v9 + *(int *)(v80 + 64)) = *(void *)(v10 + *(int *)(v80 + 64));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0x18u:
          uint64_t v48 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v48))
          {
            uint64_t v49 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            uint64_t v81 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v9, v10, v81);
            storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v48);
          }
          uint64_t v82 = sub_10000566C(&qword_1007108D0);
          *(void *)(v9 + *(int *)(v82 + 48)) = *(void *)(v10 + *(int *)(v82 + 48));
          uint64_t v83 = *(int *)(v82 + 64);
          uint64_t v84 = (void *)(v9 + v83);
          uint64_t v85 = (uint64_t *)(v10 + v83);
          uint64_t v86 = *v85;
          uint64_t v87 = v85[1];
          swift_bridgeObjectRetain();
          MailboxPriorityInfo.mailboxPriorityOrder.getter();
          *uint64_t v84 = v86;
          v84[1] = v87;
          goto LABEL_72;
        case 0x19u:
          uint64_t v50 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v10, 1, v50))
          {
            uint64_t v51 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v51 - 8) + 64));
          }
          else
          {
            uint64_t v88 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16))(v9, v10, v88);
            storeEnumTagSinglePayload for ClientCommand(v9, 0, 1, v50);
          }
          goto LABEL_72;
        case 0x1Au:
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = *(void *)(v10 + 8);
          *(_DWORD *)(v9 + 16) = *(_DWORD *)(v10 + 16);
          *(_DWORD *)(v9 + 19) = *(_DWORD *)(v10 + 19);
          swift_retain();
          goto LABEL_72;
        case 0x1Cu:
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = *(void *)(v10 + 8);
          *(_DWORD *)(v9 + 16) = *(_DWORD *)(v10 + 16);
          *(_DWORD *)(v9 + 19) = *(_DWORD *)(v10 + 19);
          *(void *)(v9 + 24) = *(void *)(v10 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0x1Du:
          uint64_t v52 = *(void *)(v10 + 8);
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = v52;
          *(_DWORD *)(v9 + 16) = *(_DWORD *)(v10 + 16);
          *(void *)(v9 + 24) = *(void *)(v10 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0x1Eu:
          *(void *)uint64_t v9 = *(void *)v10;
          *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
          uint64_t v53 = *(void *)(v10 + 24);
          *(void *)(v9 + 16) = *(void *)(v10 + 16);
          *(void *)(v9 + 24) = v53;
          *(void *)(v9 + 32) = *(void *)(v10 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_72;
        case 0x1Fu:
          uint64_t v54 = *(void *)v10;
          sub_1002238FC(*(void *)v10);
          uint64_t v55 = *(void *)(v10 + 32);
          uint64_t v57 = *(void *)(v10 + 8);
          uint64_t v56 = *(void *)(v10 + 16);
          *(void *)uint64_t v9 = v54;
          *(void *)(v9 + 8) = v57;
          uint64_t v58 = *(void *)(v10 + 24);
          *(void *)(v9 + 16) = v56;
          *(void *)(v9 + 24) = v58;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v55)
          {
            *(void *)(v9 + 32) = v55;
            uint64_t v59 = *(void *)(v10 + 48);
            swift_bridgeObjectRetain();
            if (v59)
            {
              *(void *)(v9 + 40) = *(void *)(v10 + 40);
              *(void *)(v9 + 48) = v59;
              *(void *)(v9 + 56) = *(void *)(v10 + 56);
              swift_retain();
              swift_retain();
              swift_retain();
            }
            else
            {
              *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
              *(void *)(v9 + 56) = *(void *)(v10 + 56);
            }
          }
          else
          {
            long long v89 = *(_OWORD *)(v10 + 48);
            *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
            *(_OWORD *)(v9 + 48) = v89;
          }
          goto LABEL_72;
        case 0x23u:
          uint64_t v60 = *(void *)(v10 + 8);
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = v60;
          swift_bridgeObjectRetain();
          goto LABEL_72;
        case 0x24u:
          uint64_t v61 = *(void *)(v10 + 8);
          *(void *)uint64_t v9 = *(void *)v10;
          *(void *)(v9 + 8) = v61;
          *(void *)(v9 + 16) = *(void *)(v10 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_72:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v9, (const void *)v10, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      goto LABEL_73;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for CommandStreamPart(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_100258378((uint64_t)a1, (void (*)(void))type metadata accessor for CommandStreamPart);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *(void *)a1 = *(void *)a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
      int v11 = *((_DWORD *)a2 + 4);
      *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
      *((_DWORD *)a1 + 4) = v11;
      swift_retain();
LABEL_75:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v12 = *(void *)a2;
      uint64_t v13 = *((void *)a2 + 1);
      uint64_t v14 = *((void *)a2 + 2);
      uint64_t v15 = *((void *)a2 + 3);
      uint64_t v16 = *((void *)a2 + 4);
      uint64_t v17 = *((void *)a2 + 5);
      uint64_t v18 = *((void *)a2 + 6);
      unsigned __int8 v19 = a2[56];
      sub_100258158(v12, v13, v14, v15, v16, v17, v18, v19);
      *(void *)a1 = v12;
      *((void *)a1 + 1) = v13;
      *((void *)a1 + 2) = v14;
      *((void *)a1 + 3) = v15;
      *((void *)a1 + 4) = v16;
      *((void *)a1 + 5) = v17;
      *((void *)a1 + 6) = v18;
      a1[56] = v19;
      goto LABEL_75;
    case 0:
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      uint64_t v7 = *(int *)(type metadata accessor for TaggedCommand() + 20);
      uint64_t v8 = (uint64_t)&a1[v7];
      uint64_t v9 = (uint64_t)&a2[v7];
      uint64_t v10 = type metadata accessor for Command();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 7u:
        case 8u:
        case 0x20u:
          *(void *)uint64_t v8 = *(void *)v9;
          *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 1u:
        case 9u:
        case 0xAu:
        case 0x1Bu:
          *(void *)uint64_t v8 = *(void *)v9;
          *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 3u:
          if (*(void *)(v9 + 64))
          {
            uint64_t v20 = *(unsigned __int8 *)(v9 + 32);
            if (v20 == 255)
            {
              long long v21 = *(_OWORD *)v9;
              long long v22 = *(_OWORD *)(v9 + 16);
              long long v23 = *(_OWORD *)(v9 + 48);
              *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
              *(_OWORD *)(v8 + 48) = v23;
              *(_OWORD *)uint64_t v8 = v21;
              *(_OWORD *)(v8 + 16) = v22;
            }
            else
            {
              char v81 = v20 & 1;
              uint64_t v82 = *(void *)v9;
              uint64_t v83 = *(void *)(v9 + 8);
              uint64_t v84 = *(void *)(v9 + 16);
              uint64_t v85 = *(void *)(v9 + 24);
              sub_1001F33C4(*(void *)v9, v83, v84, v85, v20 & 1);
              *(void *)uint64_t v8 = v82;
              *(void *)(v8 + 8) = v83;
              *(void *)(v8 + 16) = v84;
              *(void *)(v8 + 24) = v85;
              *(unsigned char *)(v8 + 32) = v81;
              unint64_t v86 = *(void *)(v9 + 56);
              if (HIBYTE(v86) == 255)
              {
                long long v87 = *(_OWORD *)(v9 + 40);
                *(void *)(v8 + 56) = *(void *)(v9 + 56);
                *(_OWORD *)(v8 + 40) = v87;
              }
              else
              {
                uint64_t v88 = *(void *)(v9 + 40);
                uint64_t v89 = *(void *)(v9 + 48);
                sub_1001F33AC(v88, v89, *(void *)(v9 + 56), HIBYTE(v86) & 1);
                *(void *)(v8 + 40) = v88;
                *(void *)(v8 + 48) = v89;
                *(unsigned char *)(v8 + 62) = BYTE6(v86);
                *(_WORD *)(v8 + 60) = WORD2(v86);
                *(_DWORD *)(v8 + 56) = v86;
                *(unsigned char *)(v8 + 63) = HIBYTE(v86) & 1;
              }
            }
            *(void *)(v8 + 64) = *(void *)(v9 + 64);
            swift_bridgeObjectRetain();
          }
          else
          {
            memcpy((void *)v8, (const void *)v9, 0x48uLL);
          }
          *(void *)(v8 + 72) = *(void *)(v9 + 72);
          *(_DWORD *)(v8 + 80) = *(_DWORD *)(v9 + 80);
          unsigned int v91 = *(_DWORD *)(v9 + 104);
          uint64_t v90 = v9 + 104;
          uint64_t v92 = *(void *)(v90 - 16);
          uint64_t v93 = *(void *)(v90 - 8);
          int v94 = *(unsigned __int8 *)(v90 + 6);
          uint64_t v95 = *(unsigned __int16 *)(v90 + 4) | (v94 << 16);
          char v96 = *(unsigned char *)(v90 + 7);
          swift_bridgeObjectRetain();
          sub_1001F33AC(v92, v93, v91 | (unint64_t)(v95 << 32), v96);
          *(void *)(v8 + 88) = v92;
          *(void *)(v8 + 96) = v93;
          *(unsigned char *)(v8 + 110) = v94;
          *(_WORD *)(v8 + 108) = v95;
          *(_DWORD *)(v8 + 104) = v91;
          *(unsigned char *)(v8 + 111) = v96;
          *(void *)(v8 + 112) = *(void *)(v90 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 4u:
          *(void *)uint64_t v8 = *(void *)v9;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
          unsigned int v25 = *(_DWORD *)(v9 + 40);
          uint64_t v24 = v9 + 40;
          uint64_t v26 = *(void *)(v24 - 16);
          uint64_t v27 = *(void *)(v24 - 8);
          int v28 = *(unsigned __int8 *)(v24 + 6);
          uint64_t v98 = *(unsigned __int16 *)(v24 + 4) | (v28 << 16);
          char v29 = *(unsigned char *)(v24 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1001F33AC(v26, v27, v25 | (unint64_t)(v98 << 32), v29);
          *(void *)(v8 + 24) = v26;
          *(void *)(v8 + 32) = v27;
          *(unsigned char *)(v8 + 46) = v28;
          *(_WORD *)(v8 + 44) = v98;
          *(_DWORD *)(v8 + 40) = v25;
          *(unsigned char *)(v8 + 47) = v29;
          *(void *)(v8 + 48) = *(void *)(v24 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 5u:
          *(void *)uint64_t v8 = *(void *)v9;
          *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
          *(_DWORD *)(v8 + 28) = *(_DWORD *)(v9 + 28);
          int v30 = *(_DWORD *)(v9 + 32);
          *(_DWORD *)(v8 + 35) = *(_DWORD *)(v9 + 35);
          *(_DWORD *)(v8 + 32) = v30;
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_74;
        case 6u:
          *(void *)uint64_t v8 = *(void *)v9;
          *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
          *(void *)(v8 + 32) = *(void *)(v9 + 32);
          *(void *)(v8 + 40) = *(void *)(v9 + 40);
          *(void *)(v8 + 48) = *(void *)(v9 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_74;
        case 0xBu:
          *(void *)uint64_t v8 = *(void *)v9;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          *(_DWORD *)(v8 + 24) = *(_DWORD *)(v9 + 24);
          *(_DWORD *)(v8 + 28) = *(_DWORD *)(v9 + 28);
          int v31 = *(_DWORD *)(v9 + 32);
          *(_DWORD *)(v8 + 35) = *(_DWORD *)(v9 + 35);
          *(_DWORD *)(v8 + 32) = v31;
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_74;
        case 0xCu:
          *(void *)uint64_t v8 = *(void *)v9;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          *(void *)(v8 + 24) = *(void *)(v9 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0xDu:
        case 0x21u:
        case 0x22u:
          *(void *)uint64_t v8 = *(void *)v9;
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0xEu:
          uint64_t v32 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v32)) {
            goto LABEL_20;
          }
          goto LABEL_51;
        case 0xFu:
          uint64_t v34 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v34))
          {
            uint64_t v35 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            uint64_t v56 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v8, v9, v56);
            storeEnumTagSinglePayload for ClientCommand(v8, 0, 1, v34);
          }
          uint64_t v57 = sub_10000566C(&qword_1007108F8);
          *(void *)(v8 + *(int *)(v57 + 48)) = *(void *)(v9 + *(int *)(v57 + 48));
          *(void *)(v8 + *(int *)(v57 + 64)) = *(void *)(v9 + *(int *)(v57 + 64));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x10u:
          uint64_t v36 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v36))
          {
            uint64_t v37 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v37 - 8) + 64));
          }
          else
          {
            uint64_t v58 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v8, v9, v58);
            storeEnumTagSinglePayload for ClientCommand(v8, 0, 1, v36);
          }
          uint64_t v59 = sub_10000566C(&qword_1007108F0);
          *(void *)(v8 + *(int *)(v59 + 48)) = *(void *)(v9 + *(int *)(v59 + 48));
          uint64_t v60 = *(int *)(v59 + 64);
          uint64_t v61 = (void *)(v8 + v60);
          uint64_t v62 = (uint64_t *)(v9 + v60);
          uint64_t v63 = *v62;
          uint64_t v64 = v62[1];
          swift_bridgeObjectRetain();
          MailboxPriorityInfo.mailboxPriorityOrder.getter();
          *uint64_t v61 = v63;
          v61[1] = v64;
          goto LABEL_74;
        case 0x11u:
        case 0x17u:
          uint64_t v38 = *(void *)v9;
          sub_1002238FC(*(void *)v9);
          *(void *)uint64_t v8 = v38;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          *(void *)(v8 + 24) = *(void *)(v9 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x12u:
          uint64_t v32 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v32))
          {
LABEL_20:
            uint64_t v33 = sub_10000566C(&qword_1007104D8);
            memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
LABEL_51:
            uint64_t v52 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v8, v9, v52);
            storeEnumTagSinglePayload for ClientCommand(v8, 0, 1, v32);
          }
          uint64_t v53 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
          uint64_t v54 = v8 + v53;
          uint64_t v55 = v9 + v53;
          *(void *)uint64_t v54 = *(void *)v55;
          *(_DWORD *)(v54 + 8) = *(_DWORD *)(v55 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x13u:
          *(void *)uint64_t v8 = *(void *)v9;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_74;
        case 0x14u:
          uint64_t v39 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v39)) {
            goto LABEL_30;
          }
          goto LABEL_58;
        case 0x15u:
          uint64_t v39 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v39))
          {
LABEL_30:
            uint64_t v40 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v40 - 8) + 64));
          }
          else
          {
LABEL_58:
            uint64_t v65 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v8, v9, v65);
            storeEnumTagSinglePayload for ClientCommand(v8, 0, 1, v39);
          }
          uint64_t v66 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
          uint64_t v67 = v8 + v66;
          uint64_t v68 = v9 + v66;
          *(void *)uint64_t v67 = *(void *)v68;
          *(_DWORD *)(v67 + 8) = *(_DWORD *)(v68 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x16u:
          uint64_t v41 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v41))
          {
            uint64_t v42 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            uint64_t v69 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v8, v9, v69);
            storeEnumTagSinglePayload for ClientCommand(v8, 0, 1, v41);
          }
          uint64_t v70 = sub_10000566C(&qword_1007108D8);
          *(void *)(v8 + *(int *)(v70 + 48)) = *(void *)(v9 + *(int *)(v70 + 48));
          *(void *)(v8 + *(int *)(v70 + 64)) = *(void *)(v9 + *(int *)(v70 + 64));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x18u:
          uint64_t v43 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v43))
          {
            uint64_t v44 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            uint64_t v71 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v8, v9, v71);
            storeEnumTagSinglePayload for ClientCommand(v8, 0, 1, v43);
          }
          uint64_t v72 = sub_10000566C(&qword_1007108D0);
          *(void *)(v8 + *(int *)(v72 + 48)) = *(void *)(v9 + *(int *)(v72 + 48));
          uint64_t v73 = *(int *)(v72 + 64);
          uint64_t v74 = (void *)(v8 + v73);
          uint64_t v75 = (uint64_t *)(v9 + v73);
          uint64_t v76 = *v75;
          uint64_t v77 = v75[1];
          swift_bridgeObjectRetain();
          MailboxPriorityInfo.mailboxPriorityOrder.getter();
          *uint64_t v74 = v76;
          v74[1] = v77;
          goto LABEL_74;
        case 0x19u:
          uint64_t v45 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand(v9, 1, v45))
          {
            uint64_t v46 = sub_10000566C(&qword_1007108C8);
            memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            uint64_t v78 = sub_10000566C(&qword_100710538);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v8, v9, v78);
            storeEnumTagSinglePayload for ClientCommand(v8, 0, 1, v45);
          }
          goto LABEL_74;
        case 0x1Au:
          *(void *)uint64_t v8 = *(void *)v9;
          *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
          *(_DWORD *)(v8 + 12) = *(_DWORD *)(v9 + 12);
          int v47 = *(_DWORD *)(v9 + 16);
          *(_DWORD *)(v8 + 19) = *(_DWORD *)(v9 + 19);
          *(_DWORD *)(v8 + 16) = v47;
          swift_retain();
          goto LABEL_74;
        case 0x1Cu:
          *(void *)uint64_t v8 = *(void *)v9;
          *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
          *(_DWORD *)(v8 + 12) = *(_DWORD *)(v9 + 12);
          int v48 = *(_DWORD *)(v9 + 16);
          *(_DWORD *)(v8 + 19) = *(_DWORD *)(v9 + 19);
          *(_DWORD *)(v8 + 16) = v48;
          *(void *)(v8 + 24) = *(void *)(v9 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x1Du:
          *(void *)uint64_t v8 = *(void *)v9;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
          *(void *)(v8 + 24) = *(void *)(v9 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x1Eu:
          *(void *)uint64_t v8 = *(void *)v9;
          *(_DWORD *)(v8 + 8) = *(_DWORD *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          *(void *)(v8 + 24) = *(void *)(v9 + 24);
          *(void *)(v8 + 32) = *(void *)(v9 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_74;
        case 0x1Fu:
          uint64_t v49 = *(void *)v9;
          sub_1002238FC(*(void *)v9);
          *(void *)uint64_t v8 = v49;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          *(void *)(v8 + 24) = *(void *)(v9 + 24);
          uint64_t v50 = *(void *)(v9 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v50)
          {
            *(void *)(v8 + 32) = v50;
            uint64_t v51 = *(void *)(v9 + 48);
            swift_bridgeObjectRetain();
            if (v51)
            {
              *(void *)(v8 + 40) = *(void *)(v9 + 40);
              *(void *)(v8 + 48) = *(void *)(v9 + 48);
              *(void *)(v8 + 56) = *(void *)(v9 + 56);
              swift_retain();
              swift_retain();
              swift_retain();
              goto LABEL_74;
            }
            uint64_t v79 = (_OWORD *)(v8 + 40);
            long long v80 = *(_OWORD *)(v9 + 40);
            *(void *)(v8 + 56) = *(void *)(v9 + 56);
          }
          else
          {
            uint64_t v79 = (_OWORD *)(v8 + 32);
            long long v80 = *(_OWORD *)(v9 + 32);
            *(_OWORD *)(v8 + 48) = *(_OWORD *)(v9 + 48);
          }
          *uint64_t v79 = v80;
LABEL_74:
          swift_storeEnumTagMultiPayload();
          break;
        case 0x23u:
          *(void *)uint64_t v8 = *(void *)v9;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_74;
        case 0x24u:
          *(void *)uint64_t v8 = *(void *)v9;
          *(void *)(v8 + 8) = *(void *)(v9 + 8);
          *(void *)(v8 + 16) = *(void *)(v9 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_74;
        default:
          memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v10 - 8) + 64));
          goto LABEL_75;
      }
      goto LABEL_75;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *initializeWithTake for CommandStreamPart(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for TaggedCommand() + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Command();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0xEu:
        uint64_t v10 = sub_10000566C(&qword_1007104C8);
        if (!getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v10)) {
          goto LABEL_23;
        }
        goto LABEL_5;
      case 0xFu:
        uint64_t v12 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v12))
        {
          uint64_t v13 = sub_10000566C(&qword_1007104D8);
          memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v28 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v7, v8, v28);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v12);
        }
        uint64_t v29 = sub_10000566C(&qword_1007108F8);
        *(void *)&v7[*(int *)(v29 + 48)] = *(void *)&v8[*(int *)(v29 + 48)];
        *(void *)&v7[*(int *)(v29 + 64)] = *(void *)&v8[*(int *)(v29 + 64)];
        goto LABEL_38;
      case 0x10u:
        uint64_t v14 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v14))
        {
          uint64_t v15 = sub_10000566C(&qword_1007104D8);
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          uint64_t v30 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v7, v8, v30);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v14);
        }
        uint64_t v31 = sub_10000566C(&qword_1007108F0);
        *(void *)&v7[*(int *)(v31 + 48)] = *(void *)&v8[*(int *)(v31 + 48)];
        *(_OWORD *)&v7[*(int *)(v31 + 64)] = *(_OWORD *)&v8[*(int *)(v31 + 64)];
        goto LABEL_38;
      case 0x12u:
        uint64_t v10 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v10))
        {
LABEL_5:
          uint64_t v11 = sub_10000566C(&qword_1007104D8);
          memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
LABEL_23:
          uint64_t v24 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v7, v8, v24);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v10);
        }
        uint64_t v25 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
        uint64_t v26 = &v7[v25];
        uint64_t v27 = &v8[v25];
        *(void *)uint64_t v26 = *(void *)v27;
        *((_DWORD *)v26 + 2) = *((_DWORD *)v27 + 2);
        goto LABEL_38;
      case 0x14u:
        uint64_t v16 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v16)) {
          goto LABEL_14;
        }
        goto LABEL_30;
      case 0x15u:
        uint64_t v16 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v16))
        {
LABEL_14:
          uint64_t v17 = sub_10000566C(&qword_1007108C8);
          memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
LABEL_30:
          uint64_t v32 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v7, v8, v32);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v16);
        }
        uint64_t v33 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
        uint64_t v34 = &v7[v33];
        uint64_t v35 = &v8[v33];
        *(void *)uint64_t v34 = *(void *)v35;
        *((_DWORD *)v34 + 2) = *((_DWORD *)v35 + 2);
        goto LABEL_38;
      case 0x16u:
        uint64_t v18 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v18))
        {
          uint64_t v19 = sub_10000566C(&qword_1007108C8);
          memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          uint64_t v36 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v7, v8, v36);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v18);
        }
        uint64_t v37 = sub_10000566C(&qword_1007108D8);
        *(void *)&v7[*(int *)(v37 + 48)] = *(void *)&v8[*(int *)(v37 + 48)];
        *(void *)&v7[*(int *)(v37 + 64)] = *(void *)&v8[*(int *)(v37 + 64)];
        goto LABEL_38;
      case 0x18u:
        uint64_t v20 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v20))
        {
          uint64_t v21 = sub_10000566C(&qword_1007108C8);
          memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          uint64_t v38 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v7, v8, v38);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v20);
        }
        uint64_t v39 = sub_10000566C(&qword_1007108D0);
        *(void *)&v7[*(int *)(v39 + 48)] = *(void *)&v8[*(int *)(v39 + 48)];
        *(_OWORD *)&v7[*(int *)(v39 + 64)] = *(_OWORD *)&v8[*(int *)(v39 + 64)];
        goto LABEL_38;
      case 0x19u:
        uint64_t v22 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v22))
        {
          uint64_t v23 = sub_10000566C(&qword_1007108C8);
          memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v40 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v7, v8, v40);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v22);
        }
LABEL_38:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for CommandStreamPart(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100258378((uint64_t)a1, (void (*)(void))type metadata accessor for CommandStreamPart);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for TaggedCommand() + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for Command();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0xEu:
          uint64_t v10 = sub_10000566C(&qword_1007104C8);
          if (!getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v10)) {
            goto LABEL_24;
          }
          goto LABEL_6;
        case 0xFu:
          uint64_t v12 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v12))
          {
            uint64_t v13 = sub_10000566C(&qword_1007104D8);
            memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            uint64_t v28 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v7, v8, v28);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v12);
          }
          uint64_t v29 = sub_10000566C(&qword_1007108F8);
          *(void *)&v7[*(int *)(v29 + 48)] = *(void *)&v8[*(int *)(v29 + 48)];
          *(void *)&v7[*(int *)(v29 + 64)] = *(void *)&v8[*(int *)(v29 + 64)];
          goto LABEL_39;
        case 0x10u:
          uint64_t v14 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v14))
          {
            uint64_t v15 = sub_10000566C(&qword_1007104D8);
            memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
          }
          else
          {
            uint64_t v30 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v7, v8, v30);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v14);
          }
          uint64_t v31 = sub_10000566C(&qword_1007108F0);
          *(void *)&v7[*(int *)(v31 + 48)] = *(void *)&v8[*(int *)(v31 + 48)];
          *(_OWORD *)&v7[*(int *)(v31 + 64)] = *(_OWORD *)&v8[*(int *)(v31 + 64)];
          goto LABEL_39;
        case 0x12u:
          uint64_t v10 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v10))
          {
LABEL_6:
            uint64_t v11 = sub_10000566C(&qword_1007104D8);
            memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
LABEL_24:
            uint64_t v24 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v7, v8, v24);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v10);
          }
          uint64_t v25 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
          uint64_t v26 = &v7[v25];
          uint64_t v27 = &v8[v25];
          *(void *)uint64_t v26 = *(void *)v27;
          *((_DWORD *)v26 + 2) = *((_DWORD *)v27 + 2);
          goto LABEL_39;
        case 0x14u:
          uint64_t v16 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v16)) {
            goto LABEL_15;
          }
          goto LABEL_31;
        case 0x15u:
          uint64_t v16 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v16))
          {
LABEL_15:
            uint64_t v17 = sub_10000566C(&qword_1007108C8);
            memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
LABEL_31:
            uint64_t v32 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v7, v8, v32);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v16);
          }
          uint64_t v33 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
          uint64_t v34 = &v7[v33];
          uint64_t v35 = &v8[v33];
          *(void *)uint64_t v34 = *(void *)v35;
          *((_DWORD *)v34 + 2) = *((_DWORD *)v35 + 2);
          goto LABEL_39;
        case 0x16u:
          uint64_t v18 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v18))
          {
            uint64_t v19 = sub_10000566C(&qword_1007108C8);
            memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
          }
          else
          {
            uint64_t v36 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v7, v8, v36);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v18);
          }
          uint64_t v37 = sub_10000566C(&qword_1007108D8);
          *(void *)&v7[*(int *)(v37 + 48)] = *(void *)&v8[*(int *)(v37 + 48)];
          *(void *)&v7[*(int *)(v37 + 64)] = *(void *)&v8[*(int *)(v37 + 64)];
          goto LABEL_39;
        case 0x18u:
          uint64_t v20 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v20))
          {
            uint64_t v21 = sub_10000566C(&qword_1007108C8);
            memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            uint64_t v38 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v7, v8, v38);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v20);
          }
          uint64_t v39 = sub_10000566C(&qword_1007108D0);
          *(void *)&v7[*(int *)(v39 + 48)] = *(void *)&v8[*(int *)(v39 + 48)];
          *(_OWORD *)&v7[*(int *)(v39 + 64)] = *(_OWORD *)&v8[*(int *)(v39 + 64)];
          goto LABEL_39;
        case 0x19u:
          uint64_t v22 = sub_10000566C(&qword_1007108C0);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v22))
          {
            uint64_t v23 = sub_10000566C(&qword_1007108C8);
            memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            uint64_t v40 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v7, v8, v40);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v22);
          }
LABEL_39:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10025D9FC()
{
  uint64_t result = type metadata accessor for TaggedCommand();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10025DA98(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  uint64_t v4 = sub_100240798();
  v5(v4);
  return a2;
}

uint64_t sub_10025DAF4()
{
  return sub_100255FEC(v0, v1, v7, v6, v5, v4, v3, v2);
}

uint64_t sub_10025DB24()
{
  return *(void *)(v0 + 24) + ((v2 >> 24) & 0xFFFF00 | BYTE6(v2)) + v1;
}

_OWORD *sub_10025DB44(uint64_t a1, _OWORD *a2)
{
  return sub_1002550FC(v2, a2);
}

void sub_10025DB64()
{
  v1._uint64_t countAndFlagsBits = 0x5D736574796220;
  v1._object = (void *)0xE700000000000000;
  sub_1005E1E30(v1);
}

uint64_t sub_10025DB8C()
{
  return type metadata accessor for CommandStreamPart();
}

_OWORD *sub_10025DBB4(uint64_t a1, _OWORD *a2)
{
  return sub_1002550FC(v2, a2);
}

void sub_10025DBD8(uint64_t a1, unint64_t a2)
{
  sub_100210AD0(a1, a2, v2, v3);
}

uint64_t sub_10025DC0C()
{
  return sub_1005E3400();
}

uint64_t sub_10025DC30()
{
  return 0xA0D454E4F44;
}

uint64_t sub_10025DC44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10025DC64()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10025DC7C()
{
  return sub_100258100(v0, v1, v2, SHIBYTE(v2));
}

uint64_t sub_10025DC9C()
{
  return v0;
}

void sub_10025DCB0()
{
  *(unsigned char *)(v1 - 144) = v0 & 0x1F;
}

Swift::Int sub_10025DCBC(unint64_t a1, unint64_t a2)
{
  unint64_t v4 = a2;
  if (*(unsigned char *)v2 == 1)
  {
    return sub_10025E894(a1, a2);
  }
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = *(char *)(v2 + 5);
  uint64_t v8 = *(unsigned int *)(v2 + 1);
  uint64_t v9 = v8 | (v7 << 32);
  int v10 = *(_DWORD *)(v2 + 16);
  __int16 v11 = *(_WORD *)(v2 + 28);
  char v12 = *(unsigned char *)(v2 + 30);
  uint64_t v13 = *(void *)(v2 + 32);
  char v43 = 0;
  char v45 = v7;
  int v44 = v8;
  uint64_t v46 = v6;
  int v47 = v10;
  Swift::UInt32 v41 = *(void *)(v2 + 20);
  uint64_t v48 = *(void *)(v2 + 20);
  __int16 v49 = v11;
  char v50 = v12;
  uint64_t v51 = v13;
  long long v52 = *(_OWORD *)(v2 + 40);
  switch(sub_10025F4C8(a1, a2))
  {
    case 1u:
      goto LABEL_16;
    case 2u:
      sub_10026045C();
      uint64_t v40 = v9;
      if ((v4 & 0x1000000000000000) != 0) {
        sub_1005E1E80();
      }
      goto LABEL_28;
    case 3u:
      sub_10026045C();
      if ((v4 & 0x1000000000000000) != 0) {
        sub_1005E1E80();
      }
      goto LABEL_36;
    default:
      uint64_t v14 = sub_10026052C();
      sub_100210AD0(v14, v15, v2 + 8, (Swift::UInt32)&v43);
      if (v17) {
        Swift::Int v16 = sub_1002605C0();
      }
      Swift::Int v18 = v16;
      int v19 = *(_DWORD *)(v2 + 20);
      BOOL v20 = __CFADD__(v19, v16);
      int v21 = v19 + v16;
      if (v20)
      {
        __break(1u);
        goto LABEL_42;
      }
      *(_DWORD *)(v2 + 20) = v21;
      sub_1002603DC();
      unint64_t v4 = v18 + v22;
      if (__OFADD__(v18, v22))
      {
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        sub_1005E1E80();
        goto LABEL_22;
      }
      sub_100210AD0(34, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
      if (v23) {
        sub_1002605C0();
      }
      sub_1001F4888();
      if (v20) {
        goto LABEL_43;
      }
      *(_DWORD *)(v2 + 20) = v25;
      BOOL v26 = __OFADD__(v4, v24);
      Swift::Int result = v4 + v24;
      if (!v26) {
        return result;
      }
      __break(1u);
LABEL_16:
      sub_10026045C();
      if ((v4 & 0x1000000000000000) != 0) {
        goto LABEL_44;
      }
LABEL_22:
      v54._uint64_t countAndFlagsBits = sub_1005E3230();
      Swift::Int object = (Swift::Int)v54._object;
      sub_1005E1E30(v54);
      swift_bridgeObjectRelease();
      sub_100260350();
      sub_10026059C();
      sub_1002604B4();
      sub_100260414();
      if (v3) {
        Swift::Int object = sub_10026057C();
      }
      swift_bridgeObjectRelease();
      sub_1002605B4();
      if (v20)
      {
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      *(_DWORD *)(v2 + 20) = v28;
      sub_1002603DC();
      BOOL v26 = __OFADD__(object, v29);
      Swift::Int result = object + v29;
      if (!v26) {
        return result;
      }
      __break(1u);
LABEL_28:
      v55._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v55);
      swift_bridgeObjectRelease();
      sub_100260350();
      char v3 = v41;
      swift_bridgeObjectRetain();
      sub_100210AD0(v42._countAndFlagsBits, (unint64_t)v42._object, v2 + 8, v41);
      Swift::Int v31 = v30;
      char v33 = v32;
      swift_bridgeObjectRelease();
      if (v33) {
        Swift::Int v31 = ByteBuffer._setStringSlowpath(_:at:)(v42, v41);
      }
      swift_bridgeObjectRelease();
      int v34 = *(_DWORD *)(v2 + 20);
      uint64_t v35 = (v34 + v31);
      if (__CFADD__(v34, v31)) {
        goto LABEL_48;
      }
      *(_DWORD *)(v2 + 20) = v35;
      if ((v40 & 0x8000000000000000) == 0) {
        sub_100210E34(v35);
      }
      sub_1002603DC();
      BOOL v26 = __OFADD__(v31, v36);
      Swift::Int result = v31 + v36;
      if (v26)
      {
        __break(1u);
LABEL_36:
        v56._uint64_t countAndFlagsBits = sub_1005E3230();
        Swift::Int v37 = (Swift::Int)v56._object;
        sub_1005E1E30(v56);
        swift_bridgeObjectRelease();
        sub_1002604F4();
        sub_10026059C();
        sub_1002604B4();
        sub_100260414();
        if (v3) {
          Swift::Int v37 = sub_10026057C();
        }
        swift_bridgeObjectRelease();
        sub_1002605B4();
        if (!v20)
        {
          *(_DWORD *)(v2 + 20) = v38;
          sub_1002603DC();
          BOOL v26 = __OFADD__(v37, v39);
          Swift::Int result = v37 + v39;
          if (!v26) {
            return result;
          }
LABEL_50:
          __break(1u);
          JUMPOUT(0x10025E0ACLL);
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      return result;
  }
}

Swift::Int sub_10025E0BC(uint64_t *a1)
{
  uint64_t v4 = v1;
  uint64_t v5 = a1;
  if (*(unsigned char *)v1 != 1)
  {
    uint64_t v7 = *(void *)(v1 + 8);
    uint64_t v8 = *(char *)(v1 + 5);
    uint64_t v9 = *(unsigned int *)(v1 + 1);
    uint64_t v10 = v9 | (v8 << 32);
    int v11 = *(_DWORD *)(v1 + 16);
    __int16 v12 = *(_WORD *)(v1 + 28);
    char v13 = *(unsigned char *)(v1 + 30);
    uint64_t v14 = *(void *)(v1 + 32);
    char v58 = 0;
    char v60 = v8;
    int v59 = v9;
    uint64_t v61 = v7;
    int v62 = v11;
    uint64_t v63 = *(void *)(v1 + 20);
    __int16 v64 = v12;
    char v65 = v13;
    uint64_t v66 = v14;
    long long v67 = *(_OWORD *)(v1 + 40);
    switch(sub_10025F618(a1))
    {
      case 1u:
        goto LABEL_18;
      case 2u:
        goto LABEL_26;
      case 3u:
        goto LABEL_39;
      default:
        uint64_t v15 = sub_10026052C();
        sub_100210AD0(v15, v16, v1 + 8, (Swift::UInt32)&v58);
        if (v18) {
          Swift::Int v17 = sub_100260600();
        }
        Swift::Int v19 = v17;
        int v20 = *(_DWORD *)(v1 + 20);
        Swift::UInt32 v21 = v20 + v17;
        if (__CFADD__(v20, v17))
        {
          __break(1u);
        }
        else
        {
          *(_DWORD *)(v4 + 20) = v21;
          Swift::Int v2 = *((unsigned __int16 *)v5 + 10);
          uint64_t v3 = *((unsigned __int8 *)v5 + 22);
          uint64_t v22 = (void *)(*v5 + 24);
          sub_1001F969C();
          uint64_t v23 = v5[3];
          uint64_t v24 = v5[4];
          BOOL v25 = __OFSUB__(v24, v23);
          uint64_t v26 = v24 - v23;
          if (!v25)
          {
            uint64_t v27 = *v22 + (v3 | (v2 << 8)) + v23;
            ByteBuffer._setBytes(_:at:)(v27, v27 + v26, v21);
            int v29 = *(_DWORD *)(v4 + 20);
            Swift::UInt32 v30 = v29 + v28;
            if (!__CFADD__(v29, v28))
            {
              *(_DWORD *)(v4 + 20) = v30;
              uint64_t v5 = (uint64_t *)(v19 + v28);
              if (!__OFADD__(v19, v28))
              {
                sub_100210AD0(34, 0xE100000000000000, v4 + 8, v30);
                if (v31) {
                  sub_100260600();
                }
                sub_1001F4888();
                if (!v34)
                {
                  *(_DWORD *)(v4 + 20) = v33;
                  BOOL v25 = __OFADD__(v5, v32);
                  Swift::Int result = (Swift::Int)v5 + v32;
                  if (!v25) {
                    return result;
                  }
                  __break(1u);
LABEL_18:
                  sub_1002603B8();
                  v69._uint64_t countAndFlagsBits = sub_1005E3230();
                  Swift::Int object = (Swift::Int)v69._object;
                  sub_1005E1E30(v69);
                  swift_bridgeObjectRelease();
                  sub_100260350();
                  sub_100260620();
                  sub_10026046C();
                  sub_1002603F8();
                  if (v2) {
                    Swift::Int object = sub_10026055C();
                  }
                  swift_bridgeObjectRelease();
                  if (!__CFADD__(*(_DWORD *)(v4 + 20), object))
                  {
                    sub_100260384();
                    if ((v57 & 1) == 0)
                    {
                      sub_100260430();
                      sub_1001F4888();
                      if (!v34)
                      {
                        *(_DWORD *)(v4 + 20) = v37;
                        BOOL v25 = __OFADD__(object, v36);
                        Swift::Int result = object + v36;
                        if (!v25) {
                          return result;
                        }
                        __break(1u);
LABEL_26:
                        uint64_t v38 = v5[4];
                        uint64_t v56 = v5[3];
                        BOOL v25 = __OFSUB__(v38, v56);
                        uint64_t v39 = v38 - v56;
                        char v40 = v25;
                        char v57 = v40;
                        uint64_t v55 = v39;
                        v70._uint64_t countAndFlagsBits = sub_1005E3230();
                        sub_1005E1E30(v70);
                        swift_bridgeObjectRelease();
                        sub_100260350();
                        sub_10026059C();
                        Swift::Int v41 = 0;
                        sub_100210AD0(123, 0xE100000000000000, v4 + 8, v2);
                        sub_100260414();
                        if (v3)
                        {
                          v42._uint64_t countAndFlagsBits = 123;
                          v42._Swift::Int object = (void *)0xE100000000000000;
                          Swift::Int v41 = ByteBuffer._setStringSlowpath(_:at:)(v42, v2);
                        }
                        swift_bridgeObjectRelease();
                        int v43 = *(_DWORD *)(v4 + 20);
                        Swift::UInt32 v44 = v43 + v41;
                        if (!__CFADD__(v43, v41))
                        {
                          *(_DWORD *)(v4 + 20) = v44;
                          if ((v10 & 0x8000000000000000) == 0) {
                            sub_100210E34((v43 + v41));
                          }
                          uint64_t v45 = *v5;
                          uint64_t v46 = *((unsigned __int16 *)v5 + 10);
                          uint64_t v47 = *((unsigned __int8 *)v5 + 22);
                          uint64_t v48 = (void *)(v45 + 24);
                          sub_1001F969C();
                          if ((v57 & 1) == 0)
                          {
                            uint64_t v49 = *v48 + (v47 | (v46 << 8)) + v56;
                            ByteBuffer._setBytes(_:at:)(v49, v49 + v55, v44);
                            sub_1001F4888();
                            if (!v34)
                            {
                              *(_DWORD *)(v4 + 20) = v51;
                              BOOL v25 = __OFADD__(v41, v50);
                              Swift::Int result = v41 + v50;
                              if (!v25) {
                                return result;
                              }
                              __break(1u);
LABEL_39:
                              sub_1002603B8();
                              v71._uint64_t countAndFlagsBits = sub_1005E3230();
                              Swift::Int v52 = (Swift::Int)v71._object;
                              sub_1005E1E30(v71);
                              swift_bridgeObjectRelease();
                              sub_1002604F4();
                              sub_100260620();
                              sub_10026046C();
                              sub_1002603F8();
                              if (v2) {
                                Swift::Int v52 = sub_10026055C();
                              }
                              swift_bridgeObjectRelease();
                              if (!__CFADD__(*(_DWORD *)(v4 + 20), v52))
                              {
                                sub_100260384();
                                if ((v57 & 1) == 0)
                                {
                                  sub_100260430();
                                  sub_1001F4888();
                                  if (!v34)
                                  {
                                    *(_DWORD *)(v4 + 20) = v54;
                                    BOOL v25 = __OFADD__(v52, v53);
                                    Swift::Int result = v52 + v53;
                                    if (!v25) {
                                      return result;
                                    }
LABEL_60:
                                    __break(1u);
                                    JUMPOUT(0x10025E528);
                                  }
LABEL_59:
                                  __break(1u);
                                  goto LABEL_60;
                                }
LABEL_58:
                                __break(1u);
                                goto LABEL_59;
                              }
LABEL_57:
                              __break(1u);
                              goto LABEL_58;
                            }
LABEL_56:
                            __break(1u);
                            goto LABEL_57;
                          }
LABEL_55:
                          __break(1u);
                          goto LABEL_56;
                        }
LABEL_54:
                        __break(1u);
                        goto LABEL_55;
                      }
LABEL_53:
                      __break(1u);
                      goto LABEL_54;
                    }
LABEL_52:
                    __break(1u);
                    goto LABEL_53;
                  }
LABEL_51:
                  __break(1u);
                  goto LABEL_52;
                }
LABEL_50:
                __break(1u);
                goto LABEL_51;
              }
LABEL_49:
              __break(1u);
              goto LABEL_50;
            }
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
        }
        __break(1u);
        goto LABEL_48;
    }
  }
  return sub_10025ECE4(a1);
}

Swift::Int sub_10025E538(uint64_t a1)
{
  uint64_t v4 = a1;
  if (*(unsigned char *)v1 == 1)
  {
    return sub_10025F0DC(a1);
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(char *)(v1 + 5);
  uint64_t v8 = *(unsigned int *)(v1 + 1);
  uint64_t v9 = v8 | (v7 << 32);
  int v10 = *(_DWORD *)(v1 + 16);
  __int16 v11 = *(_WORD *)(v1 + 28);
  char v12 = *(unsigned char *)(v1 + 30);
  uint64_t v13 = *(void *)(v1 + 32);
  char v38 = 0;
  char v40 = v7;
  int v39 = v8;
  uint64_t v41 = v6;
  int v42 = v10;
  uint64_t v43 = *(void *)(v1 + 20);
  __int16 v44 = v11;
  char v45 = v12;
  uint64_t v46 = v13;
  long long v47 = *(_OWORD *)(v1 + 40);
  switch(sub_10025F6F0(a1))
  {
    case 1u:
      goto LABEL_16;
    case 2u:
      goto LABEL_22;
    case 3u:
      goto LABEL_30;
    default:
      uint64_t v14 = sub_10026052C();
      sub_100210AD0(v14, v15, v1 + 8, (Swift::UInt32)&v38);
      if (v17) {
        Swift::Int v16 = sub_1002605E0();
      }
      Swift::Int v18 = v16;
      int v19 = *(_DWORD *)(v1 + 20);
      BOOL v20 = __CFADD__(v19, v16);
      int v21 = v19 + v16;
      if (v20)
      {
        __break(1u);
        goto LABEL_36;
      }
      sub_1002604D8(v21);
      uint64_t v4 = v18 + v22;
      if (__OFADD__(v18, v22))
      {
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      sub_100210AD0(34, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
      if (v23) {
        sub_1002605E0();
      }
      sub_1001F4888();
      if (v20) {
        goto LABEL_37;
      }
      *(_DWORD *)(v1 + 20) = v25;
      BOOL v26 = __OFADD__(v4, v24);
      Swift::Int result = v4 + v24;
      if (!v26) {
        return result;
      }
      __break(1u);
LABEL_16:
      sub_10026036C();
      v49._uint64_t countAndFlagsBits = sub_1005E3230();
      Swift::Int object = (Swift::Int)v49._object;
      sub_1005E1E30(v49);
      swift_bridgeObjectRelease();
      sub_100260350();
      sub_100260620();
      sub_100260490();
      sub_1002603F8();
      if (v2) {
        Swift::Int object = sub_10026053C();
      }
      swift_bridgeObjectRelease();
      sub_1002605B4();
      if (v20) {
        goto LABEL_38;
      }
      sub_1002604D8(v28);
      BOOL v26 = __OFADD__(object, v29);
      Swift::Int result = object + v29;
      if (!v26) {
        return result;
      }
      __break(1u);
LABEL_22:
      sub_10026036C();
      v50._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v50);
      swift_bridgeObjectRelease();
      sub_100260350();
      sub_10026059C();
      Swift::Int v30 = 0;
      sub_100210AD0(v37._countAndFlagsBits, (unint64_t)v37._object, v1 + 8, v2);
      sub_100260414();
      if (v3) {
        Swift::Int v30 = ByteBuffer._setStringSlowpath(_:at:)(v37, v2);
      }
      swift_bridgeObjectRelease();
      int v31 = *(_DWORD *)(v1 + 20);
      uint64_t v32 = (v31 + v30);
      if (__CFADD__(v31, v30)) {
        goto LABEL_39;
      }
      *(_DWORD *)(v1 + 20) = v32;
      if ((v9 & 0x8000000000000000) == 0) {
        sub_100210E34(v32);
      }
      sub_100254F34(v4);
      BOOL v26 = __OFADD__(v30, v33);
      Swift::Int result = v30 + v33;
      if (v26)
      {
        __break(1u);
LABEL_30:
        sub_10026036C();
        v51._uint64_t countAndFlagsBits = sub_1005E3230();
        Swift::Int v34 = (Swift::Int)v51._object;
        sub_1005E1E30(v51);
        swift_bridgeObjectRelease();
        sub_1002604F4();
        sub_100260620();
        sub_100260490();
        sub_1002603F8();
        if (v2) {
          Swift::Int v34 = sub_10026053C();
        }
        swift_bridgeObjectRelease();
        sub_1002605B4();
        if (!v20)
        {
          sub_1002604D8(v35);
          BOOL v26 = __OFADD__(v34, v36);
          Swift::Int result = v34 + v36;
          if (!v26) {
            return result;
          }
LABEL_41:
          __break(1u);
          JUMPOUT(0x10025E884);
        }
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      return result;
  }
}

Swift::Int sub_10025E894(unint64_t a1, unint64_t a2)
{
  char v3 = (_DWORD *)v2;
  unint64_t v4 = a2;
  unint64_t v5 = a1;
  long long v6 = *(_OWORD *)(v2 + 16);
  v40[0] = *(_OWORD *)v2;
  v40[1] = v6;
  uint64_t v40[2] = *(_OWORD *)(v2 + 32);
  uint64_t v41 = *(void *)(v2 + 48);
  Swift::Int v7 = DWORD1(v6);
  switch(sub_10025F4C8(a1, a2))
  {
    case 1u:
      goto LABEL_7;
    case 2u:
      v39._uint64_t countAndFlagsBits = 123;
      v39._Swift::Int object = (void *)0xE100000000000000;
      if ((v4 & 0x1000000000000000) != 0)
      {
        Swift::Int v15 = sub_1005E1E80();
      }
      else
      {
        if ((v4 & 0x2000000000000000) != 0) {
          goto LABEL_22;
        }
        Swift::Int v15 = v5 & 0xFFFFFFFFFFFFLL;
      }
      goto LABEL_23;
    case 3u:
      v39._uint64_t countAndFlagsBits = 123;
      v39._Swift::Int object = (void *)0xE100000000000000;
      if ((v4 & 0x1000000000000000) != 0)
      {
        Swift::Int v16 = sub_1005E1E80();
      }
      else if ((v4 & 0x2000000000000000) != 0)
      {
        Swift::Int v16 = HIBYTE(v4) & 0xF;
      }
      else
      {
        Swift::Int v16 = v5 & 0xFFFFFFFFFFFFLL;
      }
      Swift::Int v38 = v16;
      v46._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v46);
      swift_bridgeObjectRelease();
      v47._uint64_t countAndFlagsBits = 0x8588E20A0D7D2BLL;
      v47._Swift::Int object = (void *)0xA700000000000000;
      sub_1005E1E30(v47);
      swift_bridgeObjectRetain();
      sub_100210AD0(v39._countAndFlagsBits, (unint64_t)v39._object, v2 + 8, v7);
      Swift::Int v11 = v27;
      char v29 = v28;
      swift_bridgeObjectRelease();
      if (v29) {
        Swift::Int v11 = ByteBuffer._setStringSlowpath(_:at:)(v39, v7);
      }
      swift_bridgeObjectRelease();
      int v30 = v3[5];
      v3 += 5;
      int v13 = v30 + v11;
      if (!__CFADD__(v30, v11)) {
        goto LABEL_32;
      }
      goto LABEL_43;
    default:
      unint64_t v5 = v2 + 8;
      unint64_t v4 = 0;
      sub_100210AD0(0x228588E222, 0xA500000000000000, v2 + 8, v7);
      if (v9)
      {
        v10._uint64_t countAndFlagsBits = 0x228588E222;
        v10._Swift::Int object = (void *)0xA500000000000000;
        Swift::Int v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v7);
      }
      Swift::Int v11 = v8;
      int v12 = v3[5];
      v3 += 5;
      int v13 = v12 + v8;
      if (!__CFADD__(v12, v8)) {
        goto LABEL_32;
      }
      __break(1u);
LABEL_7:
      v39._uint64_t countAndFlagsBits = 123;
      v39._Swift::Int object = (void *)0xE100000000000000;
      if ((v4 & 0x1000000000000000) != 0)
      {
        Swift::Int v14 = sub_1005E1E80();
      }
      else if ((v4 & 0x2000000000000000) != 0)
      {
        Swift::Int v14 = HIBYTE(v4) & 0xF;
      }
      else
      {
        Swift::Int v14 = v5 & 0xFFFFFFFFFFFFLL;
      }
      Swift::Int v38 = v14;
      v42._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v42);
      swift_bridgeObjectRelease();
      v43._uint64_t countAndFlagsBits = 0x8588E20A0D7DLL;
      v43._Swift::Int object = (void *)0xA600000000000000;
      sub_1005E1E30(v43);
      swift_bridgeObjectRetain();
      sub_100210AD0(v39._countAndFlagsBits, (unint64_t)v39._object, (uint64_t)(v3 + 2), v7);
      Swift::Int v11 = v17;
      unint64_t v4 = v18;
      swift_bridgeObjectRelease();
      if (v4) {
        Swift::Int v11 = ByteBuffer._setStringSlowpath(_:at:)(v39, v7);
      }
      swift_bridgeObjectRelease();
      int v19 = v3[5];
      v3 += 5;
      int v13 = v19 + v11;
      if (__CFADD__(v19, v11))
      {
        __break(1u);
LABEL_22:
        Swift::Int v15 = HIBYTE(v4) & 0xF;
LABEL_23:
        Swift::Int v38 = v15;
        v44._uint64_t countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v44);
        swift_bridgeObjectRelease();
        v45._uint64_t countAndFlagsBits = 658813;
        v45._Swift::Int object = (void *)0xE300000000000000;
        sub_1005E1E30(v45);
        swift_bridgeObjectRetain();
        sub_100210AD0(v39._countAndFlagsBits, (unint64_t)v39._object, (uint64_t)(v3 + 2), v7);
        Swift::Int v21 = v20;
        char v23 = v22;
        swift_bridgeObjectRelease();
        if (v23) {
          Swift::Int v21 = ByteBuffer._setStringSlowpath(_:at:)(v39, v7);
        }
        swift_bridgeObjectRelease();
        sub_10020FEDC((uint64_t)v40 + 1, (uint64_t)&v38);
        int v24 = v3[5];
        uint64_t v25 = (v24 + v21);
        if (__CFADD__(v24, v21))
        {
          __break(1u);
LABEL_43:
          __break(1u);
        }
        else
        {
          v3[5] = v25;
          sub_10020FEDC((uint64_t)&v38, (uint64_t)&v39);
          unint64_t v26 = LODWORD(v39._countAndFlagsBits) | (unint64_t)((uint64_t)SBYTE4(v39._countAndFlagsBits) << 32);
          if ((v26 & 0x8000000000000000) != 0) {
            BYTE4(v39._countAndFlagsBits) = BYTE4(v26) & 0x7F;
          }
          else {
            sub_100210E34(v25);
          }
          sub_100210AD0(8751330, 0xA300000000000000, (uint64_t)(v3 + 2), v25);
          if (v32)
          {
            v33._uint64_t countAndFlagsBits = 8751330;
            v33._Swift::Int object = (void *)0xA300000000000000;
            Swift::Int v31 = ByteBuffer._setStringSlowpath(_:at:)(v33, v25);
          }
          int v34 = v3[5];
          BOOL v35 = __CFADD__(v34, v31);
          int v36 = v34 + v31;
          if (!v35)
          {
            v3[5] = v36;
            Swift::Int v11 = v21 + v31;
            if (!__OFADD__(v21, v31)) {
              return v11;
            }
LABEL_45:
            __break(1u);
            JUMPOUT(0x10025ECD4);
          }
        }
        __break(1u);
        goto LABEL_45;
      }
LABEL_32:
      *char v3 = v13;
      return v11;
  }
}

Swift::Int sub_10025ECE4(uint64_t *a1)
{
  uint64_t v2 = (_DWORD *)v1;
  char v3 = a1;
  long long v4 = *(_OWORD *)(v1 + 16);
  v39[0] = *(_OWORD *)v1;
  v39[1] = v4;
  void v39[2] = *(_OWORD *)(v1 + 32);
  uint64_t v40 = *(void *)(v1 + 48);
  Swift::Int v5 = DWORD1(v4);
  switch(sub_10025F618(a1))
  {
    case 1u:
      goto LABEL_7;
    case 2u:
      goto LABEL_12;
    case 3u:
      uint64_t v37 = 123;
      unint64_t v38 = 0xE100000000000000;
      uint64_t v36 = v3[4] - v3[3];
      v45._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v45);
      swift_bridgeObjectRelease();
      v46._uint64_t countAndFlagsBits = 0x8588E20A0D7D2BLL;
      v46._Swift::Int object = (void *)0xA700000000000000;
      sub_1005E1E30(v46);
      swift_bridgeObjectRetain();
      sub_100210AD0(123, 0xE100000000000000, v1 + 8, v5);
      Swift::Int v9 = v24;
      char v26 = v25;
      swift_bridgeObjectRelease();
      if (v26)
      {
        v27._uint64_t countAndFlagsBits = 123;
        v27._Swift::Int object = (void *)0xE100000000000000;
        Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v27, v5);
      }
      swift_bridgeObjectRelease();
      int v28 = v2[5];
      v2 += 5;
      int v11 = v28 + v9;
      if (!__CFADD__(v28, v9)) {
        goto LABEL_20;
      }
      goto LABEL_28;
    default:
      char v3 = 0;
      sub_100210AD0(0x228588E222, 0xA500000000000000, v1 + 8, v5);
      if (v7)
      {
        v8._uint64_t countAndFlagsBits = 0x228588E222;
        v8._Swift::Int object = (void *)0xA500000000000000;
        Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
      }
      Swift::Int v9 = v6;
      int v10 = v2[5];
      v2 += 5;
      int v11 = v10 + v6;
      if (!__CFADD__(v10, v6)) {
        goto LABEL_20;
      }
      __break(1u);
LABEL_7:
      uint64_t v37 = 123;
      unint64_t v38 = 0xE100000000000000;
      uint64_t v36 = v3[4] - v3[3];
      v41._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v41);
      swift_bridgeObjectRelease();
      v42._uint64_t countAndFlagsBits = 0x8588E20A0D7DLL;
      v42._Swift::Int object = (void *)0xA600000000000000;
      sub_1005E1E30(v42);
      swift_bridgeObjectRetain();
      sub_100210AD0(123, 0xE100000000000000, (uint64_t)(v2 + 2), v5);
      Swift::Int v9 = v12;
      char v3 = v13;
      swift_bridgeObjectRelease();
      if (v3)
      {
        v14._uint64_t countAndFlagsBits = 123;
        v14._Swift::Int object = (void *)0xE100000000000000;
        Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v14, v5);
      }
      swift_bridgeObjectRelease();
      int v15 = v2[5];
      v2 += 5;
      int v11 = v15 + v9;
      if (__CFADD__(v15, v9))
      {
        __break(1u);
LABEL_12:
        uint64_t v37 = 123;
        unint64_t v38 = 0xE100000000000000;
        uint64_t v36 = v3[4] - v3[3];
        v43._uint64_t countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v43);
        swift_bridgeObjectRelease();
        v44._uint64_t countAndFlagsBits = 658813;
        v44._Swift::Int object = (void *)0xE300000000000000;
        sub_1005E1E30(v44);
        swift_bridgeObjectRetain();
        sub_100210AD0(123, 0xE100000000000000, (uint64_t)(v2 + 2), v5);
        Swift::Int v17 = v16;
        char v19 = v18;
        swift_bridgeObjectRelease();
        if (v19)
        {
          v20._uint64_t countAndFlagsBits = 123;
          v20._Swift::Int object = (void *)0xE100000000000000;
          Swift::Int v17 = ByteBuffer._setStringSlowpath(_:at:)(v20, v5);
        }
        swift_bridgeObjectRelease();
        sub_10020FEDC((uint64_t)v39 + 1, (uint64_t)&v36);
        int v21 = v2[5];
        uint64_t v22 = (v21 + v17);
        if (__CFADD__(v21, v17))
        {
          __break(1u);
LABEL_28:
          __break(1u);
        }
        else
        {
          v2[5] = v22;
          sub_10020FEDC((uint64_t)&v36, (uint64_t)&v37);
          unint64_t v23 = v37 | (unint64_t)((uint64_t)SBYTE4(v37) << 32);
          if ((v23 & 0x8000000000000000) != 0) {
            BYTE4(v37) = BYTE4(v23) & 0x7F;
          }
          else {
            sub_100210E34(v22);
          }
          sub_100210AD0(8751330, 0xA300000000000000, (uint64_t)(v2 + 2), v22);
          if (v30)
          {
            v31._uint64_t countAndFlagsBits = 8751330;
            v31._Swift::Int object = (void *)0xA300000000000000;
            Swift::Int v29 = ByteBuffer._setStringSlowpath(_:at:)(v31, v22);
          }
          int v32 = v2[5];
          BOOL v33 = __CFADD__(v32, v29);
          int v34 = v32 + v29;
          if (!v33)
          {
            v2[5] = v34;
            Swift::Int v9 = v17 + v29;
            if (!__OFADD__(v17, v29)) {
              return v9;
            }
LABEL_30:
            __break(1u);
            JUMPOUT(0x10025F0CCLL);
          }
        }
        __break(1u);
        goto LABEL_30;
      }
LABEL_20:
      *uint64_t v2 = v11;
      return v9;
  }
}

Swift::Int sub_10025F0DC(uint64_t a1)
{
  uint64_t v2 = (_DWORD *)v1;
  uint64_t v3 = a1;
  long long v4 = *(_OWORD *)(v1 + 16);
  v39[0] = *(_OWORD *)v1;
  v39[1] = v4;
  void v39[2] = *(_OWORD *)(v1 + 32);
  uint64_t v40 = *(void *)(v1 + 48);
  Swift::Int v5 = DWORD1(v4);
  switch(sub_10025F6F0(a1))
  {
    case 1u:
      goto LABEL_7;
    case 2u:
      goto LABEL_12;
    case 3u:
      uint64_t v37 = 123;
      unint64_t v38 = 0xE100000000000000;
      uint64_t v36 = *(void *)(v3 + 16);
      v45._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v45);
      swift_bridgeObjectRelease();
      v46._uint64_t countAndFlagsBits = 0x8588E20A0D7D2BLL;
      v46._Swift::Int object = (void *)0xA700000000000000;
      sub_1005E1E30(v46);
      swift_bridgeObjectRetain();
      sub_100210AD0(123, 0xE100000000000000, v1 + 8, v5);
      Swift::Int v9 = v24;
      char v26 = v25;
      swift_bridgeObjectRelease();
      if (v26)
      {
        v27._uint64_t countAndFlagsBits = 123;
        v27._Swift::Int object = (void *)0xE100000000000000;
        Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v27, v5);
      }
      swift_bridgeObjectRelease();
      int v28 = v2[5];
      v2 += 5;
      int v11 = v28 + v9;
      if (!__CFADD__(v28, v9)) {
        goto LABEL_20;
      }
      goto LABEL_28;
    default:
      uint64_t v3 = 0;
      sub_100210AD0(0x228588E222, 0xA500000000000000, v1 + 8, v5);
      if (v7)
      {
        v8._uint64_t countAndFlagsBits = 0x228588E222;
        v8._Swift::Int object = (void *)0xA500000000000000;
        Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
      }
      Swift::Int v9 = v6;
      int v10 = v2[5];
      v2 += 5;
      int v11 = v10 + v6;
      if (!__CFADD__(v10, v6)) {
        goto LABEL_20;
      }
      __break(1u);
LABEL_7:
      uint64_t v37 = 123;
      unint64_t v38 = 0xE100000000000000;
      uint64_t v36 = *(void *)(v3 + 16);
      v41._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v41);
      swift_bridgeObjectRelease();
      v42._uint64_t countAndFlagsBits = 0x8588E20A0D7DLL;
      v42._Swift::Int object = (void *)0xA600000000000000;
      sub_1005E1E30(v42);
      swift_bridgeObjectRetain();
      sub_100210AD0(123, 0xE100000000000000, (uint64_t)(v2 + 2), v5);
      Swift::Int v9 = v12;
      uint64_t v3 = v13;
      swift_bridgeObjectRelease();
      if (v3)
      {
        v14._uint64_t countAndFlagsBits = 123;
        v14._Swift::Int object = (void *)0xE100000000000000;
        Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v14, v5);
      }
      swift_bridgeObjectRelease();
      int v15 = v2[5];
      v2 += 5;
      int v11 = v15 + v9;
      if (__CFADD__(v15, v9))
      {
        __break(1u);
LABEL_12:
        uint64_t v37 = 123;
        unint64_t v38 = 0xE100000000000000;
        uint64_t v36 = *(void *)(v3 + 16);
        v43._uint64_t countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v43);
        swift_bridgeObjectRelease();
        v44._uint64_t countAndFlagsBits = 658813;
        v44._Swift::Int object = (void *)0xE300000000000000;
        sub_1005E1E30(v44);
        swift_bridgeObjectRetain();
        sub_100210AD0(123, 0xE100000000000000, (uint64_t)(v2 + 2), v5);
        Swift::Int v17 = v16;
        char v19 = v18;
        swift_bridgeObjectRelease();
        if (v19)
        {
          v20._uint64_t countAndFlagsBits = 123;
          v20._Swift::Int object = (void *)0xE100000000000000;
          Swift::Int v17 = ByteBuffer._setStringSlowpath(_:at:)(v20, v5);
        }
        swift_bridgeObjectRelease();
        sub_10020FEDC((uint64_t)v39 + 1, (uint64_t)&v36);
        int v21 = v2[5];
        uint64_t v22 = (v21 + v17);
        if (__CFADD__(v21, v17))
        {
          __break(1u);
LABEL_28:
          __break(1u);
        }
        else
        {
          v2[5] = v22;
          sub_10020FEDC((uint64_t)&v36, (uint64_t)&v37);
          unint64_t v23 = v37 | (unint64_t)((uint64_t)SBYTE4(v37) << 32);
          if ((v23 & 0x8000000000000000) != 0) {
            BYTE4(v37) = BYTE4(v23) & 0x7F;
          }
          else {
            sub_100210E34(v22);
          }
          sub_100210AD0(8751330, 0xA300000000000000, (uint64_t)(v2 + 2), v22);
          if (v30)
          {
            v31._uint64_t countAndFlagsBits = 8751330;
            v31._Swift::Int object = (void *)0xA300000000000000;
            Swift::Int v29 = ByteBuffer._setStringSlowpath(_:at:)(v31, v22);
          }
          int v32 = v2[5];
          BOOL v33 = __CFADD__(v32, v29);
          int v34 = v32 + v29;
          if (!v33)
          {
            v2[5] = v34;
            Swift::Int v9 = v17 + v29;
            if (!__OFADD__(v17, v29)) {
              return v9;
            }
LABEL_30:
            __break(1u);
            JUMPOUT(0x10025F4B8);
          }
        }
        __break(1u);
        goto LABEL_30;
      }
LABEL_20:
      *uint64_t v2 = v11;
      return v9;
  }
}

uint64_t sub_10025F4C8(unint64_t a1, unint64_t a2)
{
  sub_10020FEDC(v2 + 1, (uint64_t)v14);
  sub_10020FEDC((uint64_t)v14, (uint64_t)&v15);
  unint64_t v5 = v15 | ((unint64_t)v16 << 32);
  if ((v5 & 0x8000000000) != 0)
  {
    unsigned __int8 v16 = BYTE4(v5) & 0x7F;
    if ((v5 & 0x100) != 0)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        Swift::Int v9 = sub_1005E1E80();
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0) {
          goto LABEL_14;
        }
        Swift::Int v9 = a1 & 0xFFFFFFFFFFFFLL;
      }
      if (v9 <= 70)
      {
LABEL_14:
        if (sub_10025F924(a1, a2)) {
          return 0;
        }
      }
    }
    return 1;
  }
  char v6 = BYTE2(v15);
  int v7 = HIBYTE(v15);
  if ((v15 & 1) == 0) {
    goto LABEL_7;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v8 = sub_1005E1E80();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0) {
      goto LABEL_17;
    }
    Swift::Int v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8 > 70)
  {
LABEL_7:
    if (v6) {
      return 3;
    }
LABEL_21:
    if (!v7) {
      return 2;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      Swift::Int v13 = sub_1005E1E80();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0) {
        return 3;
      }
      Swift::Int v13 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v13 > 4096) {
      return 2;
    }
    return 3;
  }
LABEL_17:
  char v11 = sub_10025F924(a1, a2);
  char v12 = v11 | v6;
  if (v11) {
    uint64_t result = 0;
  }
  else {
    uint64_t result = 3;
  }
  if ((v12 & 1) == 0) {
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_10025F618(uint64_t *a1)
{
  sub_10020FEDC(v1 + 1, (uint64_t)v9);
  sub_10020FEDC((uint64_t)v9, (uint64_t)&v10);
  unint64_t v3 = v10 | ((unint64_t)v11 << 32);
  if ((v3 & 0x8000000000) != 0)
  {
    unsigned __int8 v11 = BYTE4(v3) & 0x7F;
    return (v3 & 0x100) == 0 || (sub_10025F82C(a1) & 1) == 0;
  }
  else
  {
    char v4 = BYTE2(v10);
    int v5 = HIBYTE(v10);
    if ((v10 & 1) == 0)
    {
      if ((v10 & 0x10000) != 0) {
        return 3;
      }
LABEL_12:
      if (!v5 || a1[4] - a1[3] > 4096) {
        return 2;
      }
      return 3;
    }
    char v7 = sub_10025F82C(a1);
    char v8 = v7 | v4;
    if (v7) {
      uint64_t result = 0;
    }
    else {
      uint64_t result = 3;
    }
    if ((v8 & 1) == 0) {
      goto LABEL_12;
    }
  }
  return result;
}

uint64_t sub_10025F6F0(uint64_t a1)
{
  sub_10020FEDC(v1 + 1, (uint64_t)v15);
  sub_10020FEDC((uint64_t)v15, (uint64_t)&v16);
  unint64_t v3 = v16 | ((unint64_t)v17 << 32);
  if ((v3 & 0x8000000000) != 0)
  {
    unsigned __int8 v17 = BYTE4(v3) & 0x7F;
    if ((v3 & 0x100) != 0)
    {
      unint64_t v6 = *(void *)(a1 + 16);
      if (v6 <= 0x46)
      {
        if (!v6) {
          return 0;
        }
        unsigned __int8 v11 = (unsigned __int8 *)(a1 + 32);
        while (1)
        {
          int v13 = *v11++;
          int v12 = v13;
          BOOL v14 = v13 == 10 || v12 == 13;
          if (v14 || (v12 & 0x80) != 0) {
            break;
          }
          uint64_t result = 1;
          if (v12)
          {
            if (v12 != 34 && v12 != 92)
            {
              uint64_t result = 0;
              if (--v6) {
                continue;
              }
            }
          }
          return result;
        }
      }
    }
    return 1;
  }
  if (v16)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 <= 0x46)
    {
      if (v4)
      {
        char v7 = (unsigned __int8 *)(a1 + 32);
        while (1)
        {
          int v9 = *v7++;
          int v8 = v9;
          BOOL v10 = v9 == 10 || v8 == 13;
          if (v10 || (v8 & 0x80) != 0 || !v8 || v8 == 34 || v8 == 92) {
            break;
          }
          uint64_t result = 0;
          if (!--v4) {
            return result;
          }
        }
        goto LABEL_4;
      }
      return 0;
    }
  }
LABEL_4:
  if ((v16 & 0x10000) != 0 || HIBYTE(v16) && *(void *)(a1 + 16) <= 0x1000uLL) {
    return 3;
  }
  else {
    return 2;
  }
}

uint64_t sub_10025F82C(uint64_t *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  if (v2 - v1 > 70) {
    return 0;
  }
  if (v2 == v1) {
    return 1;
  }
  uint64_t v4 = *a1;
  uint64_t v5 = *((unsigned int *)a1 + 2);
  uint64_t v6 = (*((_DWORD *)a1 + 3) - v5);
  unint64_t v7 = *((unsigned __int8 *)a1 + 22) | ((unint64_t)*((unsigned __int16 *)a1 + 10) << 8);
  uint64_t result = swift_beginAccess();
  uint64_t v8 = v1;
  while (v8 < v2)
  {
    if (v1 < v5) {
      goto LABEL_21;
    }
    if (v8 - v5 >= v6) {
      goto LABEL_22;
    }
    int v9 = *(unsigned __int8 *)(*(void *)(v4 + 24) + v7 + v8);
    BOOL v10 = v9 == 10 || v9 == 13;
    if (v10 || (v9 & 0x80) != 0) {
      return 0;
    }
    uint64_t result = 0;
    if (!*(unsigned char *)(*(void *)(v4 + 24) + v7 + v8) || v9 == 34 || v9 == 92) {
      return result;
    }
    if (v2 == ++v8) {
      return 1;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_10025F924(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v5 = 4 * v4;
  uint64_t v6 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v6) = 1;
  }
  uint64_t v7 = 4 << v6;
  uint64_t v16 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v14 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  unint64_t v8 = 15;
  while (1)
  {
    unint64_t v9 = v8 >> 14;
    if (v8 >> 14 == v5) {
      return v9 == v5;
    }
    unint64_t result = v8;
    if ((v8 & 0xC) == v7) {
      unint64_t result = sub_100272294(v8, a1, a2);
    }
    unint64_t v11 = result >> 16;
    if (result >> 16 >= v4) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1005E1EC0();
      char v12 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v15[0] = a1;
      v15[1] = v16;
      char v12 = *((unsigned char *)v15 + v11);
    }
    else
    {
      unint64_t result = v14;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_1005E2D30();
      }
      char v12 = *(unsigned char *)(result + v11);
    }
    if ((v8 & 0xC) == v7)
    {
      unint64_t result = sub_100272294(v8, a1, a2);
      unint64_t v8 = result;
      if ((a2 & 0x1000000000000000) != 0)
      {
LABEL_22:
        if (v4 <= v8 >> 16) {
          goto LABEL_34;
        }
        unint64_t v8 = sub_1005E1E90();
        goto LABEL_24;
      }
    }
    else if ((a2 & 0x1000000000000000) != 0)
    {
      goto LABEL_22;
    }
    unint64_t v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_24:
    BOOL v13 = v12 == 10 || v12 == 13;
    if (v13 || v12 < 0 || !v12 || v12 == 34 || v12 == 92) {
      return v9 == v5;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void *sub_10025FAD0()
{
  uint64_t v1 = sub_1001F8DE0(v0);
  sub_1000811E8(v0);
  return v1;
}

uint64_t sub_10025FB04()
{
  uint64_t v1 = sub_1001F8E94(v0);
  sub_1002602E4(v0);
  return v1;
}

void EncodeBuffer.writeCustomCommandPayload(_:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if ((a1 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(a2) < a2)
    {
      __break(1u);
    }
    else if (a3 - (BYTE6(a3) | (WORD2(a3) << 8)) >= HIDWORD(a2))
    {
      uint64_t v18 = a1;
      unint64_t v19 = a2;
      int v20 = a3;
      __int16 v21 = WORD2(a3);
      char v22 = BYTE6(a3);
      uint64_t v23 = a2;
      unint64_t v24 = HIDWORD(a2);
      swift_retain();
      sub_10025E0BC(&v18);
      sub_100260510();
      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v5 = HIDWORD(a2);
  if (HIDWORD(a2) < a2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unsigned int v6 = BYTE6(a3) | (WORD2(a3) << 8);
  if (v5 > a3 - v6)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v8 = a2;
  uint64_t v18 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v19 = a2;
  int v20 = a3;
  __int16 v21 = WORD2(a3);
  char v22 = BYTE6(a3);
  uint64_t v23 = a2;
  unint64_t v24 = HIDWORD(a2);
  if (*(unsigned char *)v3 == 1)
  {
    swift_retain_n();
    sub_1001F8DE0((uint64_t)&v18);
    swift_release();
    v25._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v25);
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0x5D736574796220;
    v26._Swift::Int object = (void *)0xE700000000000000;
    sub_1005E1E30(v26);
    unsigned int v6 = 91;
    unint64_t v5 = 0xE100000000000000;
    uint64_t v8 = v3 + 8;
    Swift::Int v9 = *(unsigned int *)(v3 + 20);
    swift_bridgeObjectRetain();
    sub_100210AD0(91, 0xE100000000000000, v3 + 8, v9);
    int v11 = v10;
    uint64_t v7 = v12;
    swift_bridgeObjectRelease();
    if (v7)
    {
      v13._uint64_t countAndFlagsBits = 91;
      v13._Swift::Int object = (void *)0xE100000000000000;
      int v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v9);
    }
    swift_bridgeObjectRelease();
    sub_100260510();
    sub_100260510();
    int v14 = *(_DWORD *)(v4 + 20);
    BOOL v15 = __CFADD__(v14, v11);
    int v16 = v14 + v11;
    if (!v15) {
      goto LABEL_14;
    }
    __break(1u);
  }
  Swift::UInt32 v17 = *(_DWORD *)(v4 + 20);
  sub_1001F969C();
  ByteBuffer._setBytes(_:at:)(*(void *)(v7 + 24) + v6 + v8, *(void *)(v7 + 24) + v6 + v5, v17);
  sub_1001F4888();
  if (!v15)
  {
LABEL_14:
    *(_DWORD *)(v4 + 20) = v16;
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t Command.CustomCommandPayload.hash(into:)(uint64_t a1, uint64_t a2)
{
  return sub_1005E3400();
}

BOOL static Command.CustomCommandPayload.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 < 0)
  {
    if ((a4 & 0x8000000000000000) == 0) {
      return 0;
    }
    uint64_t v11 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v10 = a4 & 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v10 = a4;
    uint64_t v11 = a1;
    if (a4 < 0) {
      return 0;
    }
  }
  sub_1001F396C();
  sub_1001F396C();
  BOOL v13 = static ByteBuffer.== infix(_:_:)(v11, a2, a3 & 0xFFFFFFFFFFFFFFLL, v10, a5, a6 & 0xFFFFFFFFFFFFFFLL);
  sub_10003BC80();
  sub_10003BC80();
  return v13;
}

Swift::Int Command.CustomCommandPayload.hashValue.getter(uint64_t a1)
{
  sub_1005E33F0();
  Command.CustomCommandPayload.hash(into:)((uint64_t)v3, a1);
  return sub_1005E3470();
}

Swift::Int sub_10025FF40()
{
  return Command.CustomCommandPayload.hashValue.getter(*v0);
}

uint64_t sub_10025FF5C(uint64_t a1)
{
  return Command.CustomCommandPayload.hash(into:)(a1, *v1);
}

Swift::Int sub_10025FF78()
{
  uint64_t v1 = *v0;
  sub_1005E33F0();
  Command.CustomCommandPayload.hash(into:)((uint64_t)v3, v1);
  return sub_1005E3470();
}

BOOL sub_10025FFE0(uint64_t a1, uint64_t a2)
{
  return static Command.CustomCommandPayload.__derived_enum_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)(*(unsigned __int16 *)(a1 + 20) | (*(unsigned __int8 *)(a1 + 22) << 16)) << 32), *(void *)a2, *(void *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)(*(unsigned __int16 *)(a2 + 20) | (*(unsigned __int8 *)(a2 + 22) << 16)) << 32));
}

unint64_t sub_100260020()
{
  unint64_t result = qword_100710AF0;
  if (!qword_100710AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710AF0);
  }
  return result;
}

uint64_t _s20CustomCommandPayloadOwxx()
{
  return sub_10003BC80();
}

uint64_t _s20CustomCommandPayloadOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  int v6 = *((_DWORD *)a2 + 4);
  unint64_t v5 = a2 + 2;
  char v7 = *((unsigned char *)v5 + 6);
  __int16 v8 = *((_WORD *)v5 + 2);
  sub_1001F396C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(_DWORD *)(a1 + 16) = v6;
  return a1;
}

uint64_t _s20CustomCommandPayloadOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  int v6 = *((_DWORD *)a2 + 4);
  unint64_t v5 = a2 + 2;
  char v7 = *((unsigned char *)v5 + 6);
  __int16 v8 = *((_WORD *)v5 + 2);
  sub_1001F396C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 22) = v7;
  *(_WORD *)(a1 + 20) = v8;
  sub_10003BC80();
  return a1;
}

uint64_t _s20CustomCommandPayloadOwta(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  int v6 = *((_DWORD *)a2 + 4);
  uint64_t v4 = a2 + 1;
  int v5 = v6;
  LOWORD(v6) = *((_WORD *)v4 + 2);
  char v7 = *((unsigned char *)v4 + 6);
  *(_OWORD *)a1 = v3;
  *(_DWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 20) = v6;
  *(unsigned char *)(a1 + 22) = v7;
  sub_10003BC80();
  return a1;
}

uint64_t _s20CustomCommandPayloadOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 23))
    {
      unsigned int v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s20CustomCommandPayloadOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 23) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 23) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 22) = 0;
      *(_WORD *)(result + 20) = 0;
      *(_DWORD *)(result + 16) = 0;
    }
  }
  return result;
}

uint64_t sub_1002602A4(void *a1)
{
  return *a1 >> 63;
}

void *sub_1002602B0(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1002602C0(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for Command.CustomCommandPayload()
{
  return &type metadata for Command.CustomCommandPayload;
}

uint64_t sub_1002602E4(uint64_t a1)
{
  sub_100061440(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
  return a1;
}

void sub_100260350()
{
  v1._uint64_t countAndFlagsBits = 658813;
  v1._Swift::Int object = (void *)0xE300000000000000;
  sub_1005E1E30(v1);
}

uint64_t sub_100260384()
{
  *(_DWORD *)(v0 + 20) = v1;
  return swift_beginAccess();
}

void sub_1002603DC()
{
  sub_100254E18(v1, v0);
}

uint64_t sub_1002603F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100260414()
{
  return swift_bridgeObjectRelease();
}

void sub_100260430()
{
  uint64_t v7 = *v1 + (v3 | (v2 << 8)) + v4;
  ByteBuffer._setBytes(_:at:)(v7, v7 + v5, v0);
}

void sub_10026046C()
{
  sub_100210AD0(v0, v2, v1, v3);
}

void sub_100260490()
{
  sub_100210AD0(v0, v2, v1, v3);
}

void sub_1002604B4()
{
  sub_100210AD0(v0, v2, v1, v3);
}

void sub_1002604D8(int a1@<W8>)
{
  *(_DWORD *)(v1 + 20) = a1;
  sub_100254F34(v2);
}

void sub_1002604F4()
{
  v1._uint64_t countAndFlagsBits = 168656171;
  v1._Swift::Int object = (void *)0xE400000000000000;
  sub_1005E1E30(v1);
}

uint64_t sub_100260510()
{
  return sub_10003BC80();
}

uint64_t sub_10026052C()
{
  return 34;
}

Swift::Int sub_10026053C()
{
  uint64_t v4 = v0;
  uint64_t v5 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v2);
}

Swift::Int sub_10026055C()
{
  uint64_t v4 = v0;
  uint64_t v5 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v2);
}

Swift::Int sub_10026057C()
{
  uint64_t v4 = v0;
  uint64_t v5 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v2);
}

uint64_t sub_10026059C()
{
  return swift_bridgeObjectRetain();
}

Swift::Int sub_1002605C0()
{
  uint64_t v2 = 34;
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v2, v0);
}

Swift::Int sub_1002605E0()
{
  uint64_t v2 = 34;
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v2, v0);
}

Swift::Int sub_100260600()
{
  uint64_t v2 = 34;
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v2, v0);
}

uint64_t sub_100260620()
{
  return swift_bridgeObjectRetain();
}

void static TaggedCommand.__derived_struct_equals(_:_:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  BOOL v22 = *a1 == *a2 && a1[1] == a2[1];
  if (v22 || (sub_1005E3290() & 1) != 0)
  {
    uint64_t v29 = *(int *)(type metadata accessor for TaggedCommand() + 20);
    static Command.__derived_enum_equals(_:_:)((uint64_t)a1 + v29, (uint64_t)a2 + v29, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20);
  }
}

uint64_t type metadata accessor for TaggedCommand()
{
  uint64_t result = qword_100710B58;
  if (!qword_100710B58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void CommandEncodeBuffer.writeCommand(_:)(Swift::String *a1)
{
  uint64_t v2 = v1;
  Swift::String v19 = *a1;
  swift_bridgeObjectRetain();
  v20._uint64_t countAndFlagsBits = 32;
  v20._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v20);
  Swift::Int v3 = *(unsigned int *)(v1 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(v19._countAndFlagsBits, (unint64_t)v19._object, v1 + 8, v3);
  Swift::Int v5 = v4;
  char v7 = v6;
  swift_bridgeObjectRelease();
  if (v7) {
    Swift::Int v5 = ByteBuffer._setStringSlowpath(_:at:)(v19, v3);
  }
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(v1 + 20);
  BOOL v9 = __CFADD__(v8, v5);
  int v10 = v8 + v5;
  if (v9)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v10;
  type metadata accessor for TaggedCommand();
  sub_10024AC44();
  Swift::Int v12 = v5 + v11;
  if (__OFADD__(v5, v11))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  Swift::Int v13 = *(unsigned int *)(v1 + 20);
  sub_100210AD0(2573, 0xE200000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if (v15)
  {
    v16._uint64_t countAndFlagsBits = 2573;
    v16._Swift::Int object = (void *)0xE200000000000000;
    Swift::Int v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v13);
  }
  int v17 = *(_DWORD *)(v2 + 20);
  BOOL v9 = __CFADD__(v17, v14);
  int v18 = v17 + v14;
  if (v9) {
    goto LABEL_12;
  }
  *(_DWORD *)(v2 + 20) = v18;
  if (__OFADD__(v12, v14)) {
LABEL_13:
  }
    __break(1u);
}

uint64_t TaggedCommand.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TaggedCommand() + 20);
  return sub_10024EB28(v3, a1);
}

uint64_t TaggedCommand.command.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TaggedCommand() + 20);
  return sub_1002608D4(a1, v3);
}

uint64_t sub_1002608D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Command();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::UInt32 (__swiftcall *TaggedCommand.command.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t TaggedCommand.init(tag:command:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (uint64_t)a4 + *(int *)(type metadata accessor for TaggedCommand() + 20);
  return sub_1002609CC(a3, v5);
}

uint64_t sub_1002609CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Command();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void TaggedCommand.hash(into:)()
{
}

Swift::Int TaggedCommand.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_100260B18()
{
  return sub_1005E3470();
}

unint64_t TaggedCommand.debugDescription.getter()
{
  return sub_10020F670(0, (int64_t)sub_100260BD0);
}

void sub_100260BD0()
{
  CommandEncodeBuffer.writeCommand(_:)(*(Swift::String **)(v0 + 16));
}

unint64_t sub_100260C00()
{
  unint64_t result = qword_100710AF8;
  if (!qword_100710AF8)
  {
    type metadata accessor for TaggedCommand();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710AF8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TaggedCommand(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t)a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = type metadata accessor for Command();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 7u:
      case 8u:
      case 0x20u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 1u:
      case 9u:
      case 0xAu:
      case 0x1Bu:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 3u:
        if (*(void *)(v8 + 64))
        {
          uint64_t v11 = *(unsigned __int8 *)(v8 + 32);
          if (v11 == 255)
          {
            long long v12 = *(_OWORD *)(v8 + 16);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
            *(_OWORD *)(v7 + 16) = v12;
            long long v13 = *(_OWORD *)(v8 + 48);
            *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
            *(_OWORD *)(v7 + 48) = v13;
          }
          else
          {
            char v82 = v11 & 1;
            uint64_t v83 = *(void *)v8;
            uint64_t v84 = *(void *)(v8 + 8);
            uint64_t v85 = *(void *)(v8 + 16);
            uint64_t v86 = *(void *)(v8 + 24);
            sub_1001F33C4(*(void *)v8, v84, v85, v86, v11 & 1);
            *(void *)uint64_t v7 = v83;
            *(void *)(v7 + 8) = v84;
            *(void *)(v7 + 16) = v85;
            *(void *)(v7 + 24) = v86;
            *(unsigned char *)(v7 + 32) = v82;
            unint64_t v87 = *(void *)(v8 + 56);
            if (HIBYTE(v87) == 255)
            {
              *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
              *(void *)(v7 + 56) = *(void *)(v8 + 56);
            }
            else
            {
              uint64_t v88 = *(void *)(v8 + 40);
              uint64_t v89 = *(void *)(v8 + 48);
              sub_1001F33AC(v88, v89, *(void *)(v8 + 56), HIBYTE(v87) & 1);
              *(void *)(v7 + 40) = v88;
              *(void *)(v7 + 48) = v89;
              *(unsigned char *)(v7 + 62) = BYTE6(v87);
              *(_WORD *)(v7 + 60) = WORD2(v87);
              *(_DWORD *)(v7 + 56) = v87;
              *(unsigned char *)(v7 + 63) = HIBYTE(v87) & 1;
            }
          }
          *(void *)(v7 + 64) = *(void *)(v8 + 64);
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy((void *)v7, (const void *)v8, 0x48uLL);
        }
        unsigned int v91 = *(_DWORD *)(v8 + 104);
        uint64_t v90 = v8 + 104;
        *(void *)(v7 + 72) = *(void *)(v90 - 32);
        *(_DWORD *)(v7 + 80) = *(_DWORD *)(v90 - 24);
        uint64_t v92 = *(void *)(v90 - 16);
        uint64_t v93 = *(void *)(v90 - 8);
        int v94 = *(unsigned __int8 *)(v90 + 6);
        uint64_t v95 = *(unsigned __int16 *)(v90 + 4) | (v94 << 16);
        char v96 = *(unsigned char *)(v90 + 7);
        swift_bridgeObjectRetain();
        sub_1001F33AC(v92, v93, v91 | (unint64_t)(v95 << 32), v96);
        *(void *)(v7 + 88) = v92;
        *(void *)(v7 + 96) = v93;
        *(unsigned char *)(v7 + 110) = v94;
        *(_WORD *)(v7 + 108) = v95;
        *(_DWORD *)(v7 + 104) = v91;
        *(unsigned char *)(v7 + 111) = v96;
        *(void *)(v7 + 112) = *(void *)(v90 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 4u:
        uint64_t v14 = *(void *)(v8 + 8);
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = v14;
        *(_DWORD *)(v7 + 16) = *(_DWORD *)(v8 + 16);
        uint64_t v15 = *(void *)(v8 + 24);
        uint64_t v16 = *(void *)(v8 + 32);
        int v17 = *(unsigned __int8 *)(v8 + 46);
        uint64_t v18 = *(unsigned __int16 *)(v8 + 44) | (v17 << 16);
        uint64_t v98 = *(unsigned int *)(v8 + 40) | (unint64_t)(v18 << 32);
        int v99 = *(_DWORD *)(v8 + 40);
        char v19 = *(unsigned char *)(v8 + 47);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001F33AC(v15, v16, v98, v19);
        *(void *)(v7 + 24) = v15;
        *(void *)(v7 + 32) = v16;
        *(unsigned char *)(v7 + 46) = v17;
        *(_WORD *)(v7 + 44) = v18;
        *(_DWORD *)(v7 + 40) = v99;
        *(unsigned char *)(v7 + 47) = v19;
        *(void *)(v7 + 48) = *(void *)(v8 + 48);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 5u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
        *(_DWORD *)(v7 + 35) = *(_DWORD *)(v8 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_68;
      case 6u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(_DWORD *)(v7 + 24) = *(_DWORD *)(v8 + 24);
        uint64_t v20 = *(void *)(v8 + 40);
        *(void *)(v7 + 32) = *(void *)(v8 + 32);
        *(void *)(v7 + 40) = v20;
        *(void *)(v7 + 48) = *(void *)(v8 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0xBu:
        uint64_t v21 = *(void *)(v8 + 8);
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = v21;
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
        *(_DWORD *)(v7 + 35) = *(_DWORD *)(v8 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_68;
      case 0xCu:
        uint64_t v22 = *(void *)(v8 + 8);
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = v22;
        uint64_t v23 = *(void *)(v8 + 16);
        uint64_t v24 = *(void *)(v8 + 24);
        *(void *)(v7 + 16) = v23;
        *(void *)(v7 + 24) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xDu:
      case 0x21u:
      case 0x22u:
        *(void *)uint64_t v7 = *(void *)v8;
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xEu:
        uint64_t v25 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v25)) {
          goto LABEL_15;
        }
        goto LABEL_46;
      case 0xFu:
        uint64_t v27 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v27))
        {
          uint64_t v28 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v58 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v7, v8, v58);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v27);
        }
        uint64_t v59 = sub_10000566C(&qword_1007108F8);
        *(void *)(v7 + *(int *)(v59 + 48)) = *(void *)(v8 + *(int *)(v59 + 48));
        *(void *)(v7 + *(int *)(v59 + 64)) = *(void *)(v8 + *(int *)(v59 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x10u:
        uint64_t v29 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v29))
        {
          uint64_t v30 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v60 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v7, v8, v60);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v29);
        }
        uint64_t v61 = sub_10000566C(&qword_1007108F0);
        *(void *)(v7 + *(int *)(v61 + 48)) = *(void *)(v8 + *(int *)(v61 + 48));
        uint64_t v62 = *(int *)(v61 + 64);
        uint64_t v63 = (void *)(v7 + v62);
        __int16 v64 = (uint64_t *)(v8 + v62);
        uint64_t v65 = *v64;
        uint64_t v66 = v64[1];
        swift_bridgeObjectRetain();
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *uint64_t v63 = v65;
        v63[1] = v66;
        goto LABEL_68;
      case 0x11u:
      case 0x17u:
        uint64_t v31 = *(void *)v8;
        sub_1002238FC(*(void *)v8);
        uint64_t v33 = *(void *)(v8 + 8);
        uint64_t v32 = *(void *)(v8 + 16);
        *(void *)uint64_t v7 = v31;
        *(void *)(v7 + 8) = v33;
        uint64_t v34 = *(void *)(v8 + 24);
        *(void *)(v7 + 16) = v32;
        *(void *)(v7 + 24) = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x12u:
        uint64_t v25 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v25))
        {
LABEL_15:
          uint64_t v26 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
LABEL_46:
          uint64_t v54 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v7, v8, v54);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v25);
        }
        uint64_t v55 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
        uint64_t v56 = v7 + v55;
        uint64_t v57 = v8 + v55;
        *(void *)uint64_t v56 = *(void *)v57;
        *(_DWORD *)(v56 + 8) = *(_DWORD *)(v57 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x13u:
        uint64_t v35 = *(void *)(v8 + 8);
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = v35;
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0x14u:
        uint64_t v36 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v36)) {
          goto LABEL_25;
        }
        goto LABEL_53;
      case 0x15u:
        uint64_t v36 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v36))
        {
LABEL_25:
          uint64_t v37 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
LABEL_53:
          uint64_t v67 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v7, v8, v67);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v36);
        }
        uint64_t v68 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
        uint64_t v69 = v7 + v68;
        uint64_t v70 = v8 + v68;
        *(void *)uint64_t v69 = *(void *)v70;
        *(_DWORD *)(v69 + 8) = *(_DWORD *)(v70 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x16u:
        uint64_t v38 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v38))
        {
          uint64_t v39 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          uint64_t v71 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v7, v8, v71);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v38);
        }
        uint64_t v72 = sub_10000566C(&qword_1007108D8);
        *(void *)(v7 + *(int *)(v72 + 48)) = *(void *)(v8 + *(int *)(v72 + 48));
        *(void *)(v7 + *(int *)(v72 + 64)) = *(void *)(v8 + *(int *)(v72 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x18u:
        uint64_t v40 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v40))
        {
          uint64_t v41 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v73 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v7, v8, v73);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v40);
        }
        uint64_t v74 = sub_10000566C(&qword_1007108D0);
        *(void *)(v7 + *(int *)(v74 + 48)) = *(void *)(v8 + *(int *)(v74 + 48));
        uint64_t v75 = *(int *)(v74 + 64);
        uint64_t v76 = (void *)(v7 + v75);
        uint64_t v77 = (uint64_t *)(v8 + v75);
        uint64_t v78 = *v77;
        uint64_t v79 = v77[1];
        swift_bridgeObjectRetain();
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *uint64_t v76 = v78;
        v76[1] = v79;
        goto LABEL_68;
      case 0x19u:
        uint64_t v42 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v42))
        {
          uint64_t v43 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          uint64_t v80 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v7, v8, v80);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v42);
        }
        goto LABEL_68;
      case 0x1Au:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(_DWORD *)(v7 + 16) = *(_DWORD *)(v8 + 16);
        *(_DWORD *)(v7 + 19) = *(_DWORD *)(v8 + 19);
        swift_retain();
        goto LABEL_68;
      case 0x1Cu:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(_DWORD *)(v7 + 16) = *(_DWORD *)(v8 + 16);
        *(_DWORD *)(v7 + 19) = *(_DWORD *)(v8 + 19);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x1Du:
        uint64_t v44 = *(void *)(v8 + 8);
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = v44;
        *(_DWORD *)(v7 + 16) = *(_DWORD *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x1Eu:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        uint64_t v45 = *(void *)(v8 + 24);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(void *)(v7 + 24) = v45;
        *(void *)(v7 + 32) = *(void *)(v8 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0x1Fu:
        uint64_t v46 = *(void *)v8;
        sub_1002238FC(*(void *)v8);
        uint64_t v47 = *(void *)(v8 + 32);
        uint64_t v49 = *(void *)(v8 + 8);
        uint64_t v48 = *(void *)(v8 + 16);
        *(void *)uint64_t v7 = v46;
        *(void *)(v7 + 8) = v49;
        uint64_t v50 = *(void *)(v8 + 24);
        *(void *)(v7 + 16) = v48;
        *(void *)(v7 + 24) = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v47)
        {
          *(void *)(v7 + 32) = v47;
          uint64_t v51 = *(void *)(v8 + 48);
          swift_bridgeObjectRetain();
          if (v51)
          {
            *(void *)(v7 + 40) = *(void *)(v8 + 40);
            *(void *)(v7 + 48) = v51;
            *(void *)(v7 + 56) = *(void *)(v8 + 56);
            swift_retain();
            swift_retain();
            swift_retain();
          }
          else
          {
            *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
            *(void *)(v7 + 56) = *(void *)(v8 + 56);
          }
        }
        else
        {
          long long v81 = *(_OWORD *)(v8 + 48);
          *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
          *(_OWORD *)(v7 + 48) = v81;
        }
        goto LABEL_68;
      case 0x23u:
        uint64_t v52 = *(void *)(v8 + 8);
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = v52;
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x24u:
        uint64_t v53 = *(void *)(v8 + 8);
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = v53;
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_68:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return v3;
}

uint64_t destroy for TaggedCommand(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Command();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 7:
    case 8:
    case 12:
    case 32:
    case 36:
      goto LABEL_43;
    case 1:
    case 9:
    case 10:
    case 13:
    case 27:
    case 33:
    case 34:
    case 35:
      goto LABEL_44;
    case 3:
      if (*(void *)(v4 + 64))
      {
        uint64_t v11 = *(unsigned __int8 *)(v4 + 32);
        if (v11 != 255)
        {
          sub_1001F3480(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), v11 & 1);
          unint64_t v12 = *(void *)(v4 + 56);
          if (HIBYTE(v12) != 255) {
            sub_1001F33B8(*(void *)(v4 + 40), *(void *)(v4 + 48), v12, HIBYTE(v12) & 1);
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1001F33B8(*(void *)(v4 + 88), *(void *)(v4 + 96), *(unsigned int *)(v4 + 104) | ((unint64_t)(*(unsigned __int16 *)(v4 + 108) | (*(unsigned __int8 *)(v4 + 110) << 16)) << 32), *(unsigned char *)(v4 + 111));
      goto LABEL_44;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001F33B8(*(void *)(v4 + 24), *(void *)(v4 + 32), *(unsigned int *)(v4 + 40) | ((unint64_t)(*(unsigned __int16 *)(v4 + 44) | (*(unsigned __int8 *)(v4 + 46) << 16)) << 32), *(unsigned char *)(v4 + 47));
      goto LABEL_44;
    case 5:
    case 11:
      swift_bridgeObjectRelease();
      goto LABEL_51;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_51;
    case 14:
    case 18:
      uint64_t v6 = sub_10000566C(&qword_1007104C8);
      if (!getEnumTagSinglePayload for ClientCommand(v4, 1, v6))
      {
        uint64_t v7 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
      }
      uint64_t v8 = &qword_1007108E8;
      goto LABEL_9;
    case 15:
      uint64_t v13 = sub_10000566C(&qword_1007104C8);
      if (!getEnumTagSinglePayload for ClientCommand(v4, 1, v13))
      {
        uint64_t v14 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
      }
      uint64_t v15 = &qword_1007108F8;
      goto LABEL_30;
    case 16:
      uint64_t v16 = sub_10000566C(&qword_1007104C8);
      if (!getEnumTagSinglePayload for ClientCommand(v4, 1, v16))
      {
        uint64_t v17 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v4, v17);
      }
      uint64_t v18 = &qword_1007108F0;
      goto LABEL_34;
    case 17:
    case 23:
      sub_1002239B4(*(void *)v4);
      goto LABEL_43;
    case 19:
      swift_release();
      swift_release();
      goto LABEL_51;
    case 20:
    case 21:
      uint64_t v9 = sub_10000566C(&qword_1007108C0);
      if (!getEnumTagSinglePayload for ClientCommand(v4, 1, v9))
      {
        uint64_t v10 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
      }
      uint64_t v8 = &qword_1007108E0;
LABEL_9:
      sub_10000566C(v8);
      goto LABEL_44;
    case 22:
      uint64_t v19 = sub_10000566C(&qword_1007108C0);
      if (!getEnumTagSinglePayload for ClientCommand(v4, 1, v19))
      {
        uint64_t v20 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v4, v20);
      }
      uint64_t v15 = &qword_1007108D8;
LABEL_30:
      sub_10000566C(v15);
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 24:
      uint64_t v21 = sub_10000566C(&qword_1007108C0);
      if (!getEnumTagSinglePayload for ClientCommand(v4, 1, v21))
      {
        uint64_t v22 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v4, v22);
      }
      uint64_t v18 = &qword_1007108D0;
LABEL_34:
      sub_10000566C(v18);
      swift_bridgeObjectRelease();
      return sub_10024EEEC();
    case 25:
      uint64_t v23 = sub_10000566C(&qword_1007108C0);
      uint64_t result = getEnumTagSinglePayload for ClientCommand(v4, 1, v23);
      if (!result)
      {
        uint64_t v24 = sub_10000566C(&qword_100710538);
        uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
        return v25(v4, v24);
      }
      return result;
    case 26:
      goto LABEL_51;
    case 28:
      swift_release();
      goto LABEL_44;
    case 29:
      swift_bridgeObjectRelease();
LABEL_43:
      swift_bridgeObjectRelease();
LABEL_44:
      return swift_bridgeObjectRelease();
    case 30:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_51;
    case 31:
      sub_1002239B4(*(void *)v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = *(void *)(v4 + 32);
      if (!result) {
        return result;
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (!*(void *)(v4 + 48)) {
        return result;
      }
      swift_release();
      swift_release();
LABEL_51:
      return swift_release();
    default:
      return result;
  }
}

void *initializeWithCopy for TaggedCommand(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (uint64_t)a1 + v5;
  uint64_t v7 = (uint64_t)a2 + v5;
  uint64_t v8 = type metadata accessor for Command();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 7u:
    case 8u:
    case 0x20u:
      *(void *)uint64_t v6 = *(void *)v7;
      *(_DWORD *)(v6 + 8) = *(_DWORD *)(v7 + 8);
      *(void *)(v6 + 16) = *(void *)(v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 1u:
    case 9u:
    case 0xAu:
    case 0x1Bu:
      *(void *)uint64_t v6 = *(void *)v7;
      *(_DWORD *)(v6 + 8) = *(_DWORD *)(v7 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 3u:
      if (*(void *)(v7 + 64))
      {
        uint64_t v9 = *(unsigned __int8 *)(v7 + 32);
        if (v9 == 255)
        {
          long long v10 = *(_OWORD *)(v7 + 16);
          *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
          *(_OWORD *)(v6 + 16) = v10;
          long long v11 = *(_OWORD *)(v7 + 48);
          *(_OWORD *)(v6 + 32) = *(_OWORD *)(v7 + 32);
          *(_OWORD *)(v6 + 48) = v11;
        }
        else
        {
          char v80 = v9 & 1;
          uint64_t v81 = *(void *)v7;
          uint64_t v82 = *(void *)(v7 + 8);
          uint64_t v83 = *(void *)(v7 + 16);
          uint64_t v84 = *(void *)(v7 + 24);
          sub_1001F33C4(*(void *)v7, v82, v83, v84, v9 & 1);
          *(void *)uint64_t v6 = v81;
          *(void *)(v6 + 8) = v82;
          *(void *)(v6 + 16) = v83;
          *(void *)(v6 + 24) = v84;
          *(unsigned char *)(v6 + 32) = v80;
          unint64_t v85 = *(void *)(v7 + 56);
          if (HIBYTE(v85) == 255)
          {
            *(_OWORD *)(v6 + 40) = *(_OWORD *)(v7 + 40);
            *(void *)(v6 + 56) = *(void *)(v7 + 56);
          }
          else
          {
            uint64_t v86 = *(void *)(v7 + 40);
            uint64_t v87 = *(void *)(v7 + 48);
            sub_1001F33AC(v86, v87, *(void *)(v7 + 56), HIBYTE(v85) & 1);
            *(void *)(v6 + 40) = v86;
            *(void *)(v6 + 48) = v87;
            *(unsigned char *)(v6 + 62) = BYTE6(v85);
            *(_WORD *)(v6 + 60) = WORD2(v85);
            *(_DWORD *)(v6 + 56) = v85;
            *(unsigned char *)(v6 + 63) = HIBYTE(v85) & 1;
          }
        }
        *(void *)(v6 + 64) = *(void *)(v7 + 64);
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy((void *)v6, (const void *)v7, 0x48uLL);
      }
      unsigned int v89 = *(_DWORD *)(v7 + 104);
      uint64_t v88 = v7 + 104;
      *(void *)(v6 + 72) = *(void *)(v88 - 32);
      *(_DWORD *)(v6 + 80) = *(_DWORD *)(v88 - 24);
      uint64_t v90 = *(void *)(v88 - 16);
      uint64_t v91 = *(void *)(v88 - 8);
      int v92 = *(unsigned __int8 *)(v88 + 6);
      uint64_t v93 = *(unsigned __int16 *)(v88 + 4) | (v92 << 16);
      char v94 = *(unsigned char *)(v88 + 7);
      swift_bridgeObjectRetain();
      sub_1001F33AC(v90, v91, v89 | (unint64_t)(v93 << 32), v94);
      *(void *)(v6 + 88) = v90;
      *(void *)(v6 + 96) = v91;
      *(unsigned char *)(v6 + 110) = v92;
      *(_WORD *)(v6 + 108) = v93;
      *(_DWORD *)(v6 + 104) = v89;
      *(unsigned char *)(v6 + 111) = v94;
      *(void *)(v6 + 112) = *(void *)(v88 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 4u:
      uint64_t v12 = *(void *)(v7 + 8);
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = v12;
      *(_DWORD *)(v6 + 16) = *(_DWORD *)(v7 + 16);
      uint64_t v13 = *(void *)(v7 + 24);
      uint64_t v14 = *(void *)(v7 + 32);
      int v15 = *(unsigned __int8 *)(v7 + 46);
      uint64_t v16 = *(unsigned __int16 *)(v7 + 44) | (v15 << 16);
      uint64_t v96 = *(unsigned int *)(v7 + 40) | (unint64_t)(v16 << 32);
      int v97 = *(_DWORD *)(v7 + 40);
      char v17 = *(unsigned char *)(v7 + 47);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001F33AC(v13, v14, v96, v17);
      *(void *)(v6 + 24) = v13;
      *(void *)(v6 + 32) = v14;
      *(unsigned char *)(v6 + 46) = v15;
      *(_WORD *)(v6 + 44) = v16;
      *(_DWORD *)(v6 + 40) = v97;
      *(unsigned char *)(v6 + 47) = v17;
      *(void *)(v6 + 48) = *(void *)(v7 + 48);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 5u:
      *(void *)uint64_t v6 = *(void *)v7;
      *(_DWORD *)(v6 + 8) = *(_DWORD *)(v7 + 8);
      *(void *)(v6 + 16) = *(void *)(v7 + 16);
      *(void *)(v6 + 24) = *(void *)(v7 + 24);
      *(_DWORD *)(v6 + 32) = *(_DWORD *)(v7 + 32);
      *(_DWORD *)(v6 + 35) = *(_DWORD *)(v7 + 35);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_66;
    case 6u:
      *(void *)uint64_t v6 = *(void *)v7;
      *(_DWORD *)(v6 + 8) = *(_DWORD *)(v7 + 8);
      *(void *)(v6 + 16) = *(void *)(v7 + 16);
      *(_DWORD *)(v6 + 24) = *(_DWORD *)(v7 + 24);
      uint64_t v18 = *(void *)(v7 + 40);
      *(void *)(v6 + 32) = *(void *)(v7 + 32);
      *(void *)(v6 + 40) = v18;
      *(void *)(v6 + 48) = *(void *)(v7 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_66;
    case 0xBu:
      uint64_t v19 = *(void *)(v7 + 8);
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = v19;
      *(void *)(v6 + 16) = *(void *)(v7 + 16);
      *(void *)(v6 + 24) = *(void *)(v7 + 24);
      *(_DWORD *)(v6 + 32) = *(_DWORD *)(v7 + 32);
      *(_DWORD *)(v6 + 35) = *(_DWORD *)(v7 + 35);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_66;
    case 0xCu:
      uint64_t v20 = *(void *)(v7 + 8);
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = v20;
      uint64_t v21 = *(void *)(v7 + 16);
      uint64_t v22 = *(void *)(v7 + 24);
      *(void *)(v6 + 16) = v21;
      *(void *)(v6 + 24) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0xDu:
    case 0x21u:
    case 0x22u:
      *(void *)uint64_t v6 = *(void *)v7;
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0xEu:
      uint64_t v23 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v23)) {
        goto LABEL_13;
      }
      goto LABEL_44;
    case 0xFu:
      uint64_t v25 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v25))
      {
        uint64_t v26 = sub_10000566C(&qword_1007104D8);
        memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        uint64_t v56 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v6, v7, v56);
        storeEnumTagSinglePayload for ClientCommand(v6, 0, 1, v25);
      }
      uint64_t v57 = sub_10000566C(&qword_1007108F8);
      *(void *)(v6 + *(int *)(v57 + 48)) = *(void *)(v7 + *(int *)(v57 + 48));
      *(void *)(v6 + *(int *)(v57 + 64)) = *(void *)(v7 + *(int *)(v57 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x10u:
      uint64_t v27 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v27))
      {
        uint64_t v28 = sub_10000566C(&qword_1007104D8);
        memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v58 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v6, v7, v58);
        storeEnumTagSinglePayload for ClientCommand(v6, 0, 1, v27);
      }
      uint64_t v59 = sub_10000566C(&qword_1007108F0);
      *(void *)(v6 + *(int *)(v59 + 48)) = *(void *)(v7 + *(int *)(v59 + 48));
      uint64_t v60 = *(int *)(v59 + 64);
      uint64_t v61 = (void *)(v6 + v60);
      uint64_t v62 = (uint64_t *)(v7 + v60);
      uint64_t v63 = *v62;
      uint64_t v64 = v62[1];
      swift_bridgeObjectRetain();
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *uint64_t v61 = v63;
      v61[1] = v64;
      goto LABEL_66;
    case 0x11u:
    case 0x17u:
      uint64_t v29 = *(void *)v7;
      sub_1002238FC(*(void *)v7);
      uint64_t v31 = *(void *)(v7 + 8);
      uint64_t v30 = *(void *)(v7 + 16);
      *(void *)uint64_t v6 = v29;
      *(void *)(v6 + 8) = v31;
      uint64_t v32 = *(void *)(v7 + 24);
      *(void *)(v6 + 16) = v30;
      *(void *)(v6 + 24) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x12u:
      uint64_t v23 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v23))
      {
LABEL_13:
        uint64_t v24 = sub_10000566C(&qword_1007104D8);
        memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
LABEL_44:
        uint64_t v52 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v6, v7, v52);
        storeEnumTagSinglePayload for ClientCommand(v6, 0, 1, v23);
      }
      uint64_t v53 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
      uint64_t v54 = v6 + v53;
      uint64_t v55 = v7 + v53;
      *(void *)uint64_t v54 = *(void *)v55;
      *(_DWORD *)(v54 + 8) = *(_DWORD *)(v55 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x13u:
      uint64_t v33 = *(void *)(v7 + 8);
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = v33;
      *(void *)(v6 + 16) = *(void *)(v7 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_66;
    case 0x14u:
      uint64_t v34 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v34)) {
        goto LABEL_23;
      }
      goto LABEL_51;
    case 0x15u:
      uint64_t v34 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v34))
      {
LABEL_23:
        uint64_t v35 = sub_10000566C(&qword_1007108C8);
        memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
LABEL_51:
        uint64_t v65 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v6, v7, v65);
        storeEnumTagSinglePayload for ClientCommand(v6, 0, 1, v34);
      }
      uint64_t v66 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
      uint64_t v67 = v6 + v66;
      uint64_t v68 = v7 + v66;
      *(void *)uint64_t v67 = *(void *)v68;
      *(_DWORD *)(v67 + 8) = *(_DWORD *)(v68 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x16u:
      uint64_t v36 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v36))
      {
        uint64_t v37 = sub_10000566C(&qword_1007108C8);
        memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        uint64_t v69 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v6, v7, v69);
        storeEnumTagSinglePayload for ClientCommand(v6, 0, 1, v36);
      }
      uint64_t v70 = sub_10000566C(&qword_1007108D8);
      *(void *)(v6 + *(int *)(v70 + 48)) = *(void *)(v7 + *(int *)(v70 + 48));
      *(void *)(v6 + *(int *)(v70 + 64)) = *(void *)(v7 + *(int *)(v70 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x18u:
      uint64_t v38 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v38))
      {
        uint64_t v39 = sub_10000566C(&qword_1007108C8);
        memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v71 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v6, v7, v71);
        storeEnumTagSinglePayload for ClientCommand(v6, 0, 1, v38);
      }
      uint64_t v72 = sub_10000566C(&qword_1007108D0);
      *(void *)(v6 + *(int *)(v72 + 48)) = *(void *)(v7 + *(int *)(v72 + 48));
      uint64_t v73 = *(int *)(v72 + 64);
      uint64_t v74 = (void *)(v6 + v73);
      uint64_t v75 = (uint64_t *)(v7 + v73);
      uint64_t v76 = *v75;
      uint64_t v77 = v75[1];
      swift_bridgeObjectRetain();
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *uint64_t v74 = v76;
      v74[1] = v77;
      goto LABEL_66;
    case 0x19u:
      uint64_t v40 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(v7, 1, v40))
      {
        uint64_t v41 = sub_10000566C(&qword_1007108C8);
        memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        uint64_t v78 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v6, v7, v78);
        storeEnumTagSinglePayload for ClientCommand(v6, 0, 1, v40);
      }
      goto LABEL_66;
    case 0x1Au:
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = *(void *)(v7 + 8);
      *(_DWORD *)(v6 + 16) = *(_DWORD *)(v7 + 16);
      *(_DWORD *)(v6 + 19) = *(_DWORD *)(v7 + 19);
      swift_retain();
      goto LABEL_66;
    case 0x1Cu:
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = *(void *)(v7 + 8);
      *(_DWORD *)(v6 + 16) = *(_DWORD *)(v7 + 16);
      *(_DWORD *)(v6 + 19) = *(_DWORD *)(v7 + 19);
      *(void *)(v6 + 24) = *(void *)(v7 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x1Du:
      uint64_t v42 = *(void *)(v7 + 8);
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = v42;
      *(_DWORD *)(v6 + 16) = *(_DWORD *)(v7 + 16);
      *(void *)(v6 + 24) = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x1Eu:
      *(void *)uint64_t v6 = *(void *)v7;
      *(_DWORD *)(v6 + 8) = *(_DWORD *)(v7 + 8);
      uint64_t v43 = *(void *)(v7 + 24);
      *(void *)(v6 + 16) = *(void *)(v7 + 16);
      *(void *)(v6 + 24) = v43;
      *(void *)(v6 + 32) = *(void *)(v7 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_66;
    case 0x1Fu:
      uint64_t v44 = *(void *)v7;
      sub_1002238FC(*(void *)v7);
      uint64_t v45 = *(void *)(v7 + 32);
      uint64_t v47 = *(void *)(v7 + 8);
      uint64_t v46 = *(void *)(v7 + 16);
      *(void *)uint64_t v6 = v44;
      *(void *)(v6 + 8) = v47;
      uint64_t v48 = *(void *)(v7 + 24);
      *(void *)(v6 + 16) = v46;
      *(void *)(v6 + 24) = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45)
      {
        *(void *)(v6 + 32) = v45;
        uint64_t v49 = *(void *)(v7 + 48);
        swift_bridgeObjectRetain();
        if (v49)
        {
          *(void *)(v6 + 40) = *(void *)(v7 + 40);
          *(void *)(v6 + 48) = v49;
          *(void *)(v6 + 56) = *(void *)(v7 + 56);
          swift_retain();
          swift_retain();
          swift_retain();
        }
        else
        {
          *(_OWORD *)(v6 + 40) = *(_OWORD *)(v7 + 40);
          *(void *)(v6 + 56) = *(void *)(v7 + 56);
        }
      }
      else
      {
        long long v79 = *(_OWORD *)(v7 + 48);
        *(_OWORD *)(v6 + 32) = *(_OWORD *)(v7 + 32);
        *(_OWORD *)(v6 + 48) = v79;
      }
      goto LABEL_66;
    case 0x23u:
      uint64_t v50 = *(void *)(v7 + 8);
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = v50;
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x24u:
      uint64_t v51 = *(void *)(v7 + 8);
      *(void *)uint64_t v6 = *(void *)v7;
      *(void *)(v6 + 8) = v51;
      *(void *)(v6 + 16) = *(void *)(v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_66:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v8 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for TaggedCommand(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t)a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    sub_10024EFF4((uint64_t)a1 + v6);
    uint64_t v9 = type metadata accessor for Command();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 7u:
      case 8u:
      case 0x20u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 1u:
      case 9u:
      case 0xAu:
      case 0x1Bu:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 3u:
        if (*(void *)(v8 + 64))
        {
          uint64_t v10 = *(unsigned __int8 *)(v8 + 32);
          if (v10 == 255)
          {
            long long v11 = *(_OWORD *)v8;
            long long v12 = *(_OWORD *)(v8 + 16);
            long long v13 = *(_OWORD *)(v8 + 48);
            *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
            *(_OWORD *)(v7 + 48) = v13;
            *(_OWORD *)uint64_t v7 = v11;
            *(_OWORD *)(v7 + 16) = v12;
          }
          else
          {
            char v72 = v10 & 1;
            uint64_t v73 = *(void *)v8;
            uint64_t v74 = *(void *)(v8 + 8);
            uint64_t v75 = *(void *)(v8 + 16);
            uint64_t v76 = *(void *)(v8 + 24);
            sub_1001F33C4(*(void *)v8, v74, v75, v76, v10 & 1);
            *(void *)uint64_t v7 = v73;
            *(void *)(v7 + 8) = v74;
            *(void *)(v7 + 16) = v75;
            *(void *)(v7 + 24) = v76;
            *(unsigned char *)(v7 + 32) = v72;
            unint64_t v77 = *(void *)(v8 + 56);
            if (HIBYTE(v77) == 255)
            {
              long long v78 = *(_OWORD *)(v8 + 40);
              *(void *)(v7 + 56) = *(void *)(v8 + 56);
              *(_OWORD *)(v7 + 40) = v78;
            }
            else
            {
              uint64_t v79 = *(void *)(v8 + 40);
              uint64_t v80 = *(void *)(v8 + 48);
              sub_1001F33AC(v79, v80, *(void *)(v8 + 56), HIBYTE(v77) & 1);
              *(void *)(v7 + 40) = v79;
              *(void *)(v7 + 48) = v80;
              *(unsigned char *)(v7 + 62) = BYTE6(v77);
              *(_WORD *)(v7 + 60) = WORD2(v77);
              *(_DWORD *)(v7 + 56) = v77;
              *(unsigned char *)(v7 + 63) = HIBYTE(v77) & 1;
            }
          }
          *(void *)(v7 + 64) = *(void *)(v8 + 64);
          swift_bridgeObjectRetain();
        }
        else
        {
          memcpy((void *)v7, (const void *)v8, 0x48uLL);
        }
        *(void *)(v7 + 72) = *(void *)(v8 + 72);
        *(_DWORD *)(v7 + 80) = *(_DWORD *)(v8 + 80);
        unsigned int v82 = *(_DWORD *)(v8 + 104);
        uint64_t v81 = v8 + 104;
        uint64_t v83 = *(void *)(v81 - 16);
        uint64_t v84 = *(void *)(v81 - 8);
        int v85 = *(unsigned __int8 *)(v81 + 6);
        uint64_t v86 = *(unsigned __int16 *)(v81 + 4) | (v85 << 16);
        char v87 = *(unsigned char *)(v81 + 7);
        swift_bridgeObjectRetain();
        sub_1001F33AC(v83, v84, v82 | (unint64_t)(v86 << 32), v87);
        *(void *)(v7 + 88) = v83;
        *(void *)(v7 + 96) = v84;
        *(unsigned char *)(v7 + 110) = v85;
        *(_WORD *)(v7 + 108) = v86;
        *(_DWORD *)(v7 + 104) = v82;
        *(unsigned char *)(v7 + 111) = v87;
        *(void *)(v7 + 112) = *(void *)(v81 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 4u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(_DWORD *)(v7 + 16) = *(_DWORD *)(v8 + 16);
        unsigned int v15 = *(_DWORD *)(v8 + 40);
        uint64_t v14 = v8 + 40;
        uint64_t v16 = *(void *)(v14 - 16);
        uint64_t v17 = *(void *)(v14 - 8);
        int v18 = *(unsigned __int8 *)(v14 + 6);
        uint64_t v19 = *(unsigned __int16 *)(v14 + 4) | (v18 << 16);
        char v20 = *(unsigned char *)(v14 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001F33AC(v16, v17, v15 | (unint64_t)(v19 << 32), v20);
        *(void *)(v7 + 24) = v16;
        *(void *)(v7 + 32) = v17;
        *(unsigned char *)(v7 + 46) = v18;
        *(_WORD *)(v7 + 44) = v19;
        *(_DWORD *)(v7 + 40) = v15;
        *(unsigned char *)(v7 + 47) = v20;
        *(void *)(v7 + 48) = *(void *)(v14 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 5u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(_DWORD *)(v7 + 24) = *(_DWORD *)(v8 + 24);
        *(_DWORD *)(v7 + 28) = *(_DWORD *)(v8 + 28);
        int v21 = *(_DWORD *)(v8 + 32);
        *(_DWORD *)(v7 + 35) = *(_DWORD *)(v8 + 35);
        *(_DWORD *)(v7 + 32) = v21;
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_68;
      case 6u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(_DWORD *)(v7 + 24) = *(_DWORD *)(v8 + 24);
        *(void *)(v7 + 32) = *(void *)(v8 + 32);
        *(void *)(v7 + 40) = *(void *)(v8 + 40);
        *(void *)(v7 + 48) = *(void *)(v8 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0xBu:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(_DWORD *)(v7 + 24) = *(_DWORD *)(v8 + 24);
        *(_DWORD *)(v7 + 28) = *(_DWORD *)(v8 + 28);
        int v22 = *(_DWORD *)(v8 + 32);
        *(_DWORD *)(v7 + 35) = *(_DWORD *)(v8 + 35);
        *(_DWORD *)(v7 + 32) = v22;
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_68;
      case 0xCu:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xDu:
      case 0x21u:
      case 0x22u:
        *(void *)uint64_t v7 = *(void *)v8;
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xEu:
        uint64_t v23 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v23)) {
          goto LABEL_14;
        }
        goto LABEL_45;
      case 0xFu:
        uint64_t v25 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v25))
        {
          uint64_t v26 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          uint64_t v47 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v7, v8, v47);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v25);
        }
        uint64_t v48 = sub_10000566C(&qword_1007108F8);
        *(void *)(v7 + *(int *)(v48 + 48)) = *(void *)(v8 + *(int *)(v48 + 48));
        *(void *)(v7 + *(int *)(v48 + 64)) = *(void *)(v8 + *(int *)(v48 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x10u:
        uint64_t v27 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v27))
        {
          uint64_t v28 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v49 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v7, v8, v49);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v27);
        }
        uint64_t v50 = sub_10000566C(&qword_1007108F0);
        *(void *)(v7 + *(int *)(v50 + 48)) = *(void *)(v8 + *(int *)(v50 + 48));
        uint64_t v51 = *(int *)(v50 + 64);
        uint64_t v52 = (void *)(v7 + v51);
        uint64_t v53 = (uint64_t *)(v8 + v51);
        uint64_t v54 = *v53;
        uint64_t v55 = v53[1];
        swift_bridgeObjectRetain();
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *uint64_t v52 = v54;
        v52[1] = v55;
        goto LABEL_68;
      case 0x11u:
      case 0x17u:
        uint64_t v29 = *(void *)v8;
        sub_1002238FC(*(void *)v8);
        *(void *)uint64_t v7 = v29;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x12u:
        uint64_t v23 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v23))
        {
LABEL_14:
          uint64_t v24 = sub_10000566C(&qword_1007104D8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
LABEL_45:
          uint64_t v43 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v7, v8, v43);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v23);
        }
        uint64_t v44 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
        uint64_t v45 = v7 + v44;
        uint64_t v46 = v8 + v44;
        *(void *)uint64_t v45 = *(void *)v46;
        *(_DWORD *)(v45 + 8) = *(_DWORD *)(v46 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x13u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0x14u:
        uint64_t v30 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v30)) {
          goto LABEL_24;
        }
        goto LABEL_52;
      case 0x15u:
        uint64_t v30 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v30))
        {
LABEL_24:
          uint64_t v31 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
LABEL_52:
          uint64_t v56 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v7, v8, v56);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v30);
        }
        uint64_t v57 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
        uint64_t v58 = v7 + v57;
        uint64_t v59 = v8 + v57;
        *(void *)uint64_t v58 = *(void *)v59;
        *(_DWORD *)(v58 + 8) = *(_DWORD *)(v59 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x16u:
        uint64_t v32 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v32))
        {
          uint64_t v33 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          uint64_t v60 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v7, v8, v60);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v32);
        }
        uint64_t v61 = sub_10000566C(&qword_1007108D8);
        *(void *)(v7 + *(int *)(v61 + 48)) = *(void *)(v8 + *(int *)(v61 + 48));
        *(void *)(v7 + *(int *)(v61 + 64)) = *(void *)(v8 + *(int *)(v61 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x18u:
        uint64_t v34 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v34))
        {
          uint64_t v35 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v62 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v7, v8, v62);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v34);
        }
        uint64_t v63 = sub_10000566C(&qword_1007108D0);
        *(void *)(v7 + *(int *)(v63 + 48)) = *(void *)(v8 + *(int *)(v63 + 48));
        uint64_t v64 = *(int *)(v63 + 64);
        uint64_t v65 = (void *)(v7 + v64);
        uint64_t v66 = (uint64_t *)(v8 + v64);
        uint64_t v67 = *v66;
        uint64_t v68 = v66[1];
        swift_bridgeObjectRetain();
        MailboxPriorityInfo.mailboxPriorityOrder.getter();
        *uint64_t v65 = v67;
        v65[1] = v68;
        goto LABEL_68;
      case 0x19u:
        uint64_t v36 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand(v8, 1, v36))
        {
          uint64_t v37 = sub_10000566C(&qword_1007108C8);
          memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          uint64_t v69 = sub_10000566C(&qword_100710538);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v7, v8, v69);
          storeEnumTagSinglePayload for ClientCommand(v7, 0, 1, v36);
        }
        goto LABEL_68;
      case 0x1Au:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(_DWORD *)(v7 + 12) = *(_DWORD *)(v8 + 12);
        int v38 = *(_DWORD *)(v8 + 16);
        *(_DWORD *)(v7 + 19) = *(_DWORD *)(v8 + 19);
        *(_DWORD *)(v7 + 16) = v38;
        swift_retain();
        goto LABEL_68;
      case 0x1Cu:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(_DWORD *)(v7 + 12) = *(_DWORD *)(v8 + 12);
        int v39 = *(_DWORD *)(v8 + 16);
        *(_DWORD *)(v7 + 19) = *(_DWORD *)(v8 + 19);
        *(_DWORD *)(v7 + 16) = v39;
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x1Du:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(_DWORD *)(v7 + 16) = *(_DWORD *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x1Eu:
        *(void *)uint64_t v7 = *(void *)v8;
        *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        *(void *)(v7 + 32) = *(void *)(v8 + 32);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_68;
      case 0x1Fu:
        uint64_t v40 = *(void *)v8;
        sub_1002238FC(*(void *)v8);
        *(void *)uint64_t v7 = v40;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        *(void *)(v7 + 24) = *(void *)(v8 + 24);
        uint64_t v41 = *(void *)(v8 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v41)
        {
          *(void *)(v7 + 32) = v41;
          uint64_t v42 = *(void *)(v8 + 48);
          swift_bridgeObjectRetain();
          if (v42)
          {
            *(void *)(v7 + 40) = *(void *)(v8 + 40);
            *(void *)(v7 + 48) = *(void *)(v8 + 48);
            *(void *)(v7 + 56) = *(void *)(v8 + 56);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_68;
          }
          uint64_t v70 = (_OWORD *)(v7 + 40);
          long long v71 = *(_OWORD *)(v8 + 40);
          *(void *)(v7 + 56) = *(void *)(v8 + 56);
        }
        else
        {
          uint64_t v70 = (_OWORD *)(v7 + 32);
          long long v71 = *(_OWORD *)(v8 + 32);
          *(_OWORD *)(v7 + 48) = *(_OWORD *)(v8 + 48);
        }
        *uint64_t v70 = v71;
LABEL_68:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x23u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x24u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(void *)(v7 + 8) = *(void *)(v8 + 8);
        *(void *)(v7 + 16) = *(void *)(v8 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      default:
        memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v9 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for TaggedCommand(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Command();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xEu:
      uint64_t v8 = sub_10000566C(&qword_1007104C8);
      if (!getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v8)) {
        goto LABEL_21;
      }
      goto LABEL_3;
    case 0xFu:
      uint64_t v10 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v10))
      {
        uint64_t v11 = sub_10000566C(&qword_1007104D8);
        memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v26 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v5, v6, v26);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v10);
      }
      uint64_t v27 = sub_10000566C(&qword_1007108F8);
      *(void *)&v5[*(int *)(v27 + 48)] = *(void *)&v6[*(int *)(v27 + 48)];
      *(void *)&v5[*(int *)(v27 + 64)] = *(void *)&v6[*(int *)(v27 + 64)];
      goto LABEL_36;
    case 0x10u:
      uint64_t v12 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v12))
      {
        uint64_t v13 = sub_10000566C(&qword_1007104D8);
        memcpy(v5, v6, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v28 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v5, v6, v28);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v12);
      }
      uint64_t v29 = sub_10000566C(&qword_1007108F0);
      *(void *)&v5[*(int *)(v29 + 48)] = *(void *)&v6[*(int *)(v29 + 48)];
      *(_OWORD *)&v5[*(int *)(v29 + 64)] = *(_OWORD *)&v6[*(int *)(v29 + 64)];
      goto LABEL_36;
    case 0x12u:
      uint64_t v8 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v8))
      {
LABEL_3:
        uint64_t v9 = sub_10000566C(&qword_1007104D8);
        memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
LABEL_21:
        uint64_t v22 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v5, v6, v22);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v8);
      }
      uint64_t v23 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
      uint64_t v24 = &v5[v23];
      uint64_t v25 = &v6[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      *((_DWORD *)v24 + 2) = *((_DWORD *)v25 + 2);
      goto LABEL_36;
    case 0x14u:
      uint64_t v14 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v14)) {
        goto LABEL_12;
      }
      goto LABEL_28;
    case 0x15u:
      uint64_t v14 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v14))
      {
LABEL_12:
        uint64_t v15 = sub_10000566C(&qword_1007108C8);
        memcpy(v5, v6, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
LABEL_28:
        uint64_t v30 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v5, v6, v30);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v14);
      }
      uint64_t v31 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
      uint64_t v32 = &v5[v31];
      uint64_t v33 = &v6[v31];
      *(void *)uint64_t v32 = *(void *)v33;
      *((_DWORD *)v32 + 2) = *((_DWORD *)v33 + 2);
      goto LABEL_36;
    case 0x16u:
      uint64_t v16 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v16))
      {
        uint64_t v17 = sub_10000566C(&qword_1007108C8);
        memcpy(v5, v6, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v34 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v5, v6, v34);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v16);
      }
      uint64_t v35 = sub_10000566C(&qword_1007108D8);
      *(void *)&v5[*(int *)(v35 + 48)] = *(void *)&v6[*(int *)(v35 + 48)];
      *(void *)&v5[*(int *)(v35 + 64)] = *(void *)&v6[*(int *)(v35 + 64)];
      goto LABEL_36;
    case 0x18u:
      uint64_t v18 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v18))
      {
        uint64_t v19 = sub_10000566C(&qword_1007108C8);
        memcpy(v5, v6, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v36 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v5, v6, v36);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v18);
      }
      uint64_t v37 = sub_10000566C(&qword_1007108D0);
      *(void *)&v5[*(int *)(v37 + 48)] = *(void *)&v6[*(int *)(v37 + 48)];
      *(_OWORD *)&v5[*(int *)(v37 + 64)] = *(_OWORD *)&v6[*(int *)(v37 + 64)];
      goto LABEL_36;
    case 0x19u:
      uint64_t v20 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v20))
      {
        uint64_t v21 = sub_10000566C(&qword_1007108C8);
        memcpy(v5, v6, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v38 = sub_10000566C(&qword_100710538);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v5, v6, v38);
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v20);
      }
LABEL_36:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for TaggedCommand(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_10024EFF4((uint64_t)a1 + v7);
    uint64_t v10 = type metadata accessor for Command();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0xEu:
        uint64_t v11 = sub_10000566C(&qword_1007104C8);
        if (!getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v11)) {
          goto LABEL_22;
        }
        goto LABEL_4;
      case 0xFu:
        uint64_t v13 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v13))
        {
          uint64_t v14 = sub_10000566C(&qword_1007104D8);
          memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v29 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v8, v9, v29);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v13);
        }
        uint64_t v30 = sub_10000566C(&qword_1007108F8);
        *(void *)&v8[*(int *)(v30 + 48)] = *(void *)&v9[*(int *)(v30 + 48)];
        *(void *)&v8[*(int *)(v30 + 64)] = *(void *)&v9[*(int *)(v30 + 64)];
        goto LABEL_37;
      case 0x10u:
        uint64_t v15 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v15))
        {
          uint64_t v16 = sub_10000566C(&qword_1007104D8);
          memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          uint64_t v31 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v8, v9, v31);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v15);
        }
        uint64_t v32 = sub_10000566C(&qword_1007108F0);
        *(void *)&v8[*(int *)(v32 + 48)] = *(void *)&v9[*(int *)(v32 + 48)];
        *(_OWORD *)&v8[*(int *)(v32 + 64)] = *(_OWORD *)&v9[*(int *)(v32 + 64)];
        goto LABEL_37;
      case 0x12u:
        uint64_t v11 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v11))
        {
LABEL_4:
          uint64_t v12 = sub_10000566C(&qword_1007104D8);
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
LABEL_22:
          uint64_t v25 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v8, v9, v25);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v11);
        }
        uint64_t v26 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
        uint64_t v27 = &v8[v26];
        uint64_t v28 = &v9[v26];
        *(void *)uint64_t v27 = *(void *)v28;
        *((_DWORD *)v27 + 2) = *((_DWORD *)v28 + 2);
        goto LABEL_37;
      case 0x14u:
        uint64_t v17 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v17)) {
          goto LABEL_13;
        }
        goto LABEL_29;
      case 0x15u:
        uint64_t v17 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v17))
        {
LABEL_13:
          uint64_t v18 = sub_10000566C(&qword_1007108C8);
          memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
LABEL_29:
          uint64_t v33 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v8, v9, v33);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v17);
        }
        uint64_t v34 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
        uint64_t v35 = &v8[v34];
        uint64_t v36 = &v9[v34];
        *(void *)uint64_t v35 = *(void *)v36;
        *((_DWORD *)v35 + 2) = *((_DWORD *)v36 + 2);
        goto LABEL_37;
      case 0x16u:
        uint64_t v19 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v19))
        {
          uint64_t v20 = sub_10000566C(&qword_1007108C8);
          memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v37 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v8, v9, v37);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v19);
        }
        uint64_t v38 = sub_10000566C(&qword_1007108D8);
        *(void *)&v8[*(int *)(v38 + 48)] = *(void *)&v9[*(int *)(v38 + 48)];
        *(void *)&v8[*(int *)(v38 + 64)] = *(void *)&v9[*(int *)(v38 + 64)];
        goto LABEL_37;
      case 0x18u:
        uint64_t v21 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v21))
        {
          uint64_t v22 = sub_10000566C(&qword_1007108C8);
          memcpy(v8, v9, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v39 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v8, v9, v39);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v21);
        }
        uint64_t v40 = sub_10000566C(&qword_1007108D0);
        *(void *)&v8[*(int *)(v40 + 48)] = *(void *)&v9[*(int *)(v40 + 48)];
        *(_OWORD *)&v8[*(int *)(v40 + 64)] = *(_OWORD *)&v9[*(int *)(v40 + 64)];
        goto LABEL_37;
      case 0x19u:
        uint64_t v23 = sub_10000566C(&qword_1007108C0);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v23))
        {
          uint64_t v24 = sub_10000566C(&qword_1007108C8);
          memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v41 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v8, v9, v41);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v23);
        }
LABEL_37:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TaggedCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002657CC);
}

uint64_t sub_1002657CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Command();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return getEnumTagSinglePayload for ClientCommand(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TaggedCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100265868);
}

uint64_t sub_100265868(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Command();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return storeEnumTagSinglePayload for ClientCommand(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1002658E8()
{
  uint64_t result = type metadata accessor for Command();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100265980(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_1002244A8();
  type metadata accessor for CreateParameter();
  sub_1001F3BBC();
  __chkstk_darwin(v7);
  sub_100254978();
  sub_100265DAC(a1, v1);
  if (swift_getEnumCaseMultiPayload() != 1) {
    goto LABEL_8;
  }
  uint64_t v2 = *(uint64_t **)v1;
  uint64_t v5 = v1 + 8;
  Swift::Int v8 = *(unsigned int *)(v1 + 20);
  sub_100210AD0(541414229, 0xE400000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if (v10)
  {
    v11._uint64_t countAndFlagsBits = 541414229;
    v11._Swift::Int object = (void *)0xE400000000000000;
    Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v8);
  }
  uint64_t v1 = v9;
  int v12 = *(_DWORD *)(v3 + 20);
  BOOL v13 = __CFADD__(v12, v9);
  int v14 = v12 + v9;
  if (v13)
  {
    __break(1u);
    goto LABEL_14;
  }
  *(_DWORD *)(v3 + 20) = v14;
  uint64_t v15 = sub_1001E8CEC(v2, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, v3);
  swift_bridgeObjectRelease();
  BOOL v16 = __OFADD__(v1, v15);
  uint64_t v3 = v1 + v15;
  if (v16)
  {
    __break(1u);
LABEL_8:
    sub_1001F39D8(v1, (uint64_t)v2, &qword_10070FE48);
    uint64_t v17 = *v2;
    uint64_t v18 = (void *)v2[1];
    Swift::Int v19 = *(unsigned int *)(v3 + 20);
    swift_bridgeObjectRetain();
    sub_100210AD0(v17, (unint64_t)v18, v3 + 8, v19);
    Swift::Int v21 = v20;
    char v23 = v22;
    swift_bridgeObjectRelease();
    if (v23)
    {
      v24._uint64_t countAndFlagsBits = v17;
      v24._Swift::Int object = v18;
      Swift::Int v21 = ByteBuffer._setStringSlowpath(_:at:)(v24, v19);
    }
    int v25 = *(_DWORD *)(v3 + 20);
    BOOL v13 = __CFADD__(v25, v21);
    int v26 = v25 + v21;
    if (!v13)
    {
      *(_DWORD *)(v3 + 20) = v26;
      int v27 = *(_DWORD *)(v3 + 1);
      char v28 = *(unsigned char *)(v3 + 5);
      uint64_t v29 = *(void *)(v3 + 8);
      int v30 = *(_DWORD *)(v3 + 16);
      int v31 = *(_DWORD *)(v3 + 24);
      __int16 v32 = *(_WORD *)(v3 + 28);
      char v33 = *(unsigned char *)(v3 + 30);
      uint64_t v34 = *(void *)(v3 + 32);
      char v37 = *(unsigned char *)v3;
      char v39 = v28;
      int v38 = v27;
      uint64_t v40 = v29;
      int v41 = v30;
      int v42 = v26;
      int v43 = v31;
      __int16 v44 = v32;
      char v45 = v33;
      uint64_t v46 = v34;
      uint64_t v35 = (uint64_t)v2 + *(int *)(v5 + 52);
      long long v47 = *(_OWORD *)(v3 + 40);
      swift_retain();
      swift_retain();
      uint64_t v36 = sub_1001F2CA0(v35, (uint64_t)&v37, v3);
      swift_release();
      swift_release();
      if (!__OFADD__(v21, v36))
      {
        sub_1001F3A28((uint64_t)v2, &qword_10070FE48);
        return;
      }
      goto LABEL_15;
    }
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
}

uint64_t CreateParameter.hash(into:)(uint64_t a1)
{
  sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v5);
  sub_100224490();
  type metadata accessor for CreateParameter();
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_1002244A8();
  sub_100265DAC(v1, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = *v3;
    sub_1005E3410(1uLL);
    sub_100229AE8(a1, v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001F39D8((uint64_t)v3, v2, &qword_10070FE48);
    sub_1005E3410(0);
    sub_1005E1DB0();
    sub_100266530(a1);
    return sub_1001F3A28(v2, &qword_10070FE48);
  }
}

uint64_t type metadata accessor for CreateParameter()
{
  uint64_t result = qword_100710C08;
  if (!qword_100710C08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100265DAC(uint64_t a1, uint64_t a2)
{
  uint64_t Parameter = type metadata accessor for CreateParameter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Parameter - 8) + 16))(a2, a1, Parameter);
  return a2;
}

uint64_t static CreateParameter.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_10000566C(&qword_10070FE48);
  uint64_t v7 = sub_100224550(v6);
  __chkstk_darwin(v7);
  sub_100254978();
  type metadata accessor for CreateParameter();
  sub_1001F3BBC();
  uint64_t v9 = __chkstk_darwin(v8);
  Swift::String v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  BOOL v13 = (uint64_t *)((char *)&v21 - v12);
  uint64_t v14 = sub_10000566C(&qword_1007104C0);
  uint64_t v15 = sub_100224550(v14);
  __chkstk_darwin(v15);
  sub_1002677E8();
  uint64_t v17 = (uint64_t *)(v2 + *(int *)(v16 + 56));
  sub_100265DAC(a1, v2);
  sub_100265DAC(a2, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100265DAC(v2, (uint64_t)v11);
    uint64_t v18 = *v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char v19 = sub_10021B04C(v18, *v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      sub_10026773C(v2, (void (*)(void))type metadata accessor for CreateParameter);
      return v19 & 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100265DAC(v2, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1001F39D8((uint64_t)v17, (uint64_t)v3, &qword_10070FE48);
      char v19 = sub_10026624C(v13, v3);
      sub_1001F3A28((uint64_t)v3, &qword_10070FE48);
      sub_1001F3A28((uint64_t)v13, &qword_10070FE48);
      goto LABEL_9;
    }
    sub_1001F3A28((uint64_t)v13, &qword_10070FE48);
  }
  sub_1001F3A28(v2, &qword_1007104C0);
  char v19 = 0;
  return v19 & 1;
}

BOOL sub_100266050(void *a1, void *a2)
{
  sub_1002676E0((uint64_t)a1, (uint64_t)v26);
  sub_1002676E0((uint64_t)a2, (uint64_t)v25);
  sub_1002676E0((uint64_t)v26, (uint64_t)v27);
  uint64_t v4 = v27[0];
  uint64_t v5 = v27[1];
  if ((v28 & 1) == 0)
  {
    sub_1002676E0((uint64_t)v25, (uint64_t)&v29);
    if (v33) {
      return 0;
    }
    if (v4 == v29 && v5 == v30) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v6 = v27[2];
  uint64_t v7 = v27[3];
  sub_1002676E0((uint64_t)v25, (uint64_t)&v29);
  if ((v33 & 1) == 0) {
    return 0;
  }
  uint64_t v8 = v31;
  uint64_t v9 = v32;
  BOOL v10 = v4 == v29 && v5 == v30;
  if (v10 || (char v11 = sub_1005E3290(), result = 0, (v11 & 1) != 0))
  {
    if (v6 == v8 && v7 == v9)
    {
LABEL_19:
      uint64_t v17 = a1[5];
      unint64_t v16 = a1[6];
      unint64_t v18 = a1[7];
      uint64_t v20 = a2[5];
      uint64_t v19 = a2[6];
      unint64_t v21 = a2[7];
      if (HIBYTE(v18) == 255)
      {
        if (HIBYTE(v21) == 255) {
          return 1;
        }
      }
      else if (HIBYTE(v21) != 255)
      {
        if ((v18 & 0x100000000000000) != 0)
        {
          if ((v21 & 0x100000000000000) == 0) {
            return 0;
          }
          sub_100267800();
          sub_10021AEB0();
        }
        else
        {
          if ((v21 & 0x100000000000000) != 0) {
            return 0;
          }
          sub_1001F3404(v20, v19, v21);
          sub_1001F3404(v17, v16, v18);
          BOOL v23 = static ByteBuffer.== infix(_:_:)(v17, v16, v18 & 0xFFFFFFFFFFFFFFLL, v20, v19, v21 & 0xFFFFFFFFFFFFFFLL);
        }
        BOOL v24 = v23;
        sub_1001F34D0(v20, v19, v21);
        sub_1001F34D0(v17, v16, v18);
        return v24;
      }
      uint64_t v22 = sub_100267800();
      sub_1001F34D0(v22, v16, v18);
      sub_1001F34D0(v20, v19, v21);
      return 0;
    }
LABEL_18:
    char v15 = sub_1005E3290();
    BOOL result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
    goto LABEL_19;
  }
  return result;
}

BOOL sub_10026624C(void *a1, void *a2)
{
  uint64_t v7 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v8);
  sub_1002677E8();
  uint64_t v9 = sub_10000566C(&qword_10070FE28);
  uint64_t v10 = sub_100224550(v9);
  __chkstk_darwin(v10);
  sub_1002244A8();
  uint64_t v11 = sub_10000566C(&qword_1007104B8);
  sub_1001F3BBC();
  __chkstk_darwin(v12);
  sub_100254978();
  BOOL v13 = *a1 == *a2 && a1[1] == a2[1];
  if (v13 || (char v14 = sub_1005E3290(), result = 0, (v14 & 1) != 0))
  {
    uint64_t v16 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
    uint64_t v17 = (uint64_t)a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = v3 + *(int *)(v11 + 48);
    sub_1001F36E4(v17, v3, &qword_10070FE28);
    sub_1001F36E4(v18, v19, &qword_10070FE28);
    sub_100207FC4(v3, 1, v7);
    if (v13)
    {
      sub_100207FC4(v19, 1, v7);
      if (v13)
      {
        sub_1001F3A28(v3, &qword_10070FE28);
        return 1;
      }
    }
    else
    {
      sub_1001F36E4(v3, v4, &qword_10070FE28);
      sub_100207FC4(v19, 1, v7);
      if (!v20)
      {
        sub_100267794(v19, v2, (void (*)(void))type metadata accessor for ParameterValue);
        char v21 = static ParameterValue.__derived_enum_equals(_:_:)(v4, v2);
        sub_10026773C(v2, (void (*)(void))type metadata accessor for ParameterValue);
        sub_10026773C(v4, (void (*)(void))type metadata accessor for ParameterValue);
        sub_1001F3A28(v3, &qword_10070FE28);
        return (v21 & 1) != 0;
      }
      sub_10026773C(v4, (void (*)(void))type metadata accessor for ParameterValue);
    }
    sub_1001F3A28(v3, &qword_1007104B8);
    return 0;
  }
  return result;
}

Swift::Int CreateParameter.hashValue.getter()
{
  sub_1005E33F0();
  CreateParameter.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_1002664F0()
{
  sub_1005E33F0();
  CreateParameter.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

void sub_100266530(uint64_t a1)
{
  uint64_t v4 = v2;
  uint64_t v6 = type metadata accessor for ParameterValue();
  sub_1001F3BBC();
  __chkstk_darwin(v7);
  sub_1002677E8();
  uint64_t v8 = sub_10000566C(&qword_10070FE28);
  uint64_t v9 = sub_100224550(v8);
  __chkstk_darwin(v9);
  sub_100224490();
  sub_1001F36E4(v4, v3, &qword_10070FE28);
  sub_100207FC4(v3, 1, v6);
  if (v10)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_100267794(v3, v1, (void (*)(void))type metadata accessor for ParameterValue);
    sub_1005E3420(1u);
    ParameterValue.hash(into:)(a1);
    sub_10026773C(v1, (void (*)(void))type metadata accessor for ParameterValue);
  }
}

uint64_t sub_100266654()
{
  return sub_10026738C(&qword_100710B90, (void (*)(uint64_t))type metadata accessor for CreateParameter);
}

uint64_t *initializeBufferWithCopyOfBuffer for CreateParameter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      char v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for ParameterValue();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_10000566C(&qword_10070FE28);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v9 = *v10;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v13 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v10, 1, v13))
          {
            uint64_t v14 = sub_10000566C(&qword_1007104D8);
            memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
          }
          else
          {
            uint64_t v15 = sub_10000566C(&qword_100710538);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v9, 0, 1, v13);
          }
        }
        swift_storeEnumTagMultiPayload();
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v9, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CreateParameter(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    goto LABEL_2;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = a1 + *(int *)(sub_10000566C(&qword_10070FE48) + 52);
  uint64_t v4 = type metadata accessor for ParameterValue();
  uint64_t result = getEnumTagSinglePayload for ClientCommand(v3, 1, v4);
  if (result) {
    return result;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_2:
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = sub_10000566C(&qword_1007104C8);
    uint64_t result = getEnumTagSinglePayload for ClientCommand(v3, 1, v5);
    if (!result)
    {
      uint64_t v6 = sub_10000566C(&qword_100710538);
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      return v7(v3, v6);
    }
  }
  return result;
}

void *initializeWithCopy for CreateParameter(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
    uint64_t v5 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
    uint64_t v6 = (void *)((char *)a1 + v5);
    uint64_t v7 = (void *)((char *)a2 + v5);
    uint64_t v8 = type metadata accessor for ParameterValue();
    if (getEnumTagSinglePayload for ClientCommand((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = sub_10000566C(&qword_10070FE28);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v6 = *v7;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v10 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v7, 1, v10))
        {
          uint64_t v11 = sub_10000566C(&qword_1007104D8);
          memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          uint64_t v12 = sub_10000566C(&qword_100710538);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v6, 0, 1, v10);
        }
      }
      swift_storeEnumTagMultiPayload();
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v6, 0, 1, v8);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for CreateParameter(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10026773C((uint64_t)a1, (void (*)(void))type metadata accessor for CreateParameter);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v4 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
      uint64_t v5 = (void *)((char *)a1 + v4);
      uint64_t v6 = (void *)((char *)a2 + v4);
      uint64_t v7 = type metadata accessor for ParameterValue();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v7))
      {
        uint64_t v8 = sub_10000566C(&qword_10070FE28);
        memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v5 = *v6;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v9 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v6, 1, v9))
          {
            uint64_t v10 = sub_10000566C(&qword_1007104D8);
            memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
          }
          else
          {
            uint64_t v11 = sub_10000566C(&qword_100710538);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v5, v6, v11);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v9);
          }
        }
        swift_storeEnumTagMultiPayload();
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v5, 0, 1, v7);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for CreateParameter(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ParameterValue();
    if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_10000566C(&qword_10070FE28);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v11 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v11))
        {
          uint64_t v12 = sub_10000566C(&qword_1007104D8);
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v13 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v11);
        }
        swift_storeEnumTagMultiPayload();
      }
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for CreateParameter(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10026773C((uint64_t)a1, (void (*)(void))type metadata accessor for CreateParameter);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for ParameterValue();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10000566C(&qword_10070FE28);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          uint64_t v11 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v11))
          {
            uint64_t v12 = sub_10000566C(&qword_1007104D8);
            memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
          }
          else
          {
            uint64_t v13 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v11);
          }
          swift_storeEnumTagMultiPayload();
        }
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1002671D0()
{
  sub_100267264();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_100267264()
{
  if (!qword_100710C18)
  {
    sub_10000744C(&qword_10070FE28);
    sub_1002672E8();
    unint64_t v0 = type metadata accessor for KeyValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100710C18);
    }
  }
}

unint64_t sub_1002672E8()
{
  unint64_t result = qword_100710C20;
  if (!qword_100710C20)
  {
    sub_10000744C(&qword_10070FE28);
    sub_10026738C((unint64_t *)&unk_100710C28, (void (*)(uint64_t))type metadata accessor for ParameterValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C20);
  }
  return result;
}

uint64_t sub_10026738C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1002673D4()
{
  uint64_t v2 = sub_10000566C(&qword_1007108C0);
  sub_1001F3BBC();
  __chkstk_darwin(v3);
  sub_100224490();
  uint64_t v4 = sub_10000566C(&qword_1007108C8);
  uint64_t v5 = sub_100224550(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t matched = type metadata accessor for SequenceMatchData();
  sub_1001F3BBC();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_10070FE50);
  uint64_t v16 = sub_100224550(v15);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F36E4(v0, (uint64_t)v18, &qword_10070FE50);
  sub_100207FC4((uint64_t)v18, 1, matched);
  if (v19)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_100267794((uint64_t)v18, (uint64_t)v14, (void (*)(void))type metadata accessor for SequenceMatchData);
    sub_1005E3420(1u);
    sub_1001F36E4((uint64_t)v14, (uint64_t)v10, &qword_1007108C8);
    sub_100207FC4((uint64_t)v10, 1, v2);
    if (v19)
    {
      sub_1005E3410(1uLL);
    }
    else
    {
      sub_1001F39D8((uint64_t)v10, v1, &qword_1007108C0);
      sub_1005E3410(0);
      sub_10000566C(&qword_100710538);
      sub_10022AAC0();
      sub_1005E19C0();
      sub_1001F3A28(v1, &qword_1007108C0);
    }
    sub_1001F36E4((uint64_t)&v14[*(int *)(matched + 20)], (uint64_t)v8, &qword_1007108C8);
    sub_100207FC4((uint64_t)v8, 1, v2);
    if (v19)
    {
      sub_1005E3410(1uLL);
    }
    else
    {
      sub_1001F39D8((uint64_t)v8, v1, &qword_1007108C0);
      sub_1005E3410(0);
      sub_10000566C(&qword_100710538);
      sub_10022AAC0();
      sub_1005E19C0();
      sub_1001F3A28(v1, &qword_1007108C0);
    }
    sub_10026773C((uint64_t)v14, (void (*)(void))type metadata accessor for SequenceMatchData);
  }
}

uint64_t sub_1002676E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10026773C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100267794(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  uint64_t v4 = sub_1001F4A1C();
  v5(v4);
  return a2;
}

uint64_t sub_100267800()
{
  sub_1001F3404(v5, v4, v0);
  sub_1001F3404(v3, v2, v1);
  return v3;
}

NIOIMAPCore2::IMAPCalendarDay_optional __swiftcall IMAPCalendarDay.init(year:month:day:)(Swift::Int year, Swift::Int month, Swift::Int day)
{
  if ((unint64_t)(day - 32) >= 0xFFFFFFFFFFFFFFE1)
  {
    BOOL v4 = __OFSUB__(month, 1);
    BOOL v3 = month - 1 < 0;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v3 = 1;
  }
  if (v3 != v4)
  {
    BOOL v7 = 0;
    BOOL v5 = 0;
    BOOL v6 = 0;
  }
  else
  {
    BOOL v7 = __OFSUB__(month, 12);
    BOOL v5 = month == 12;
    BOOL v6 = month - 12 < 0;
  }
  if (v6 ^ v7 | v5)
  {
    BOOL v9 = __OFSUB__(year, 1900);
    BOOL v8 = year - 1900 < 0;
  }
  else
  {
    BOOL v9 = 0;
    BOOL v8 = 1;
  }
  if (v8 != v9)
  {
    BOOL v12 = 0;
    BOOL v10 = 0;
    BOOL v11 = 0;
  }
  else
  {
    BOOL v12 = __OFSUB__(year, 2500);
    BOOL v10 = year == 2500;
    BOOL v11 = year - 2500 < 0;
  }
  if (v11 ^ v12 | v10) {
    BOOL v13 = 0;
  }
  else {
    BOOL v13 = 1;
  }
  if (v13)
  {
    year = 0;
    month = 0;
    day = 0;
  }
  result.value.day = day;
  result.value.month = month;
  result.value.year = year;
  result.is_nil = v13;
  return result;
}

void SearchRequest.Predicate.Day.hash(into:)(uint64_t a1, Swift::UInt a2, Swift::UInt a3, Swift::UInt a4)
{
}

BOOL static IndexingStatistics.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

Swift::Int SearchRequest.Predicate.Day.hashValue.getter(Swift::UInt a1, Swift::UInt a2, Swift::UInt a3)
{
  return sub_1005E3470();
}

Swift::Int sub_100267938()
{
  return SearchRequest.Predicate.Day.hashValue.getter(*v0, v0[1], v0[2]);
}

void sub_100267944(uint64_t a1)
{
  SearchRequest.Predicate.Day.hash(into:)(a1, *v1, v1[1], v1[2]);
}

Swift::Int sub_100267950()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  return sub_1005E3470();
}

unint64_t sub_1002679BC()
{
  unint64_t result = qword_100710C58;
  if (!qword_100710C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C58);
  }
  return result;
}

BOOL sub_100267A08(uint64_t *a1, uint64_t *a2)
{
  return static IndexingStatistics.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t getEnumTagSinglePayload for IMAPCalendarDay(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IMAPCalendarDay(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for IMAPCalendarDay()
{
  return &type metadata for IMAPCalendarDay;
}

uint64_t sub_100267A80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v15._uint64_t countAndFlagsBits = sub_1005E3230();
  v15._Swift::Int object = v5;
  v16._uint64_t countAndFlagsBits = 45;
  v16._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v16);
  v17._uint64_t countAndFlagsBits = sub_100267BCC(v6, a2);
  v17._Swift::Int object = (void *)0xE300000000000000;
  sub_1005E1E30(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 45;
  v18._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v18);
  v19._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v19);
  swift_bridgeObjectRelease();
  Swift::Int v7 = *(unsigned int *)(v2 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(v15._countAndFlagsBits, (unint64_t)v15._object, v2 + 8, v7);
  Swift::Int v9 = v8;
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease();
  if (a2) {
    Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v15, v7);
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v12 = *(_DWORD *)(v3 + 20);
  BOOL v13 = __CFADD__(v12, v9);
  int v14 = v12 + v9;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v3 + 20) = v14;
    return v9;
  }
  return result;
}

uint64_t sub_100267BCC(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) <= 0xB) {
    return *(void *)&aJan[8 * a2 - 8];
  }
  __break(1u);
  return result;
}

uint64_t sub_100267BF0()
{
  uint64_t v0 = sub_1005E1CB0();
  BOOL v2 = v0 == 7233898 && v1 == 0xE300000000000000;
  if (v2 || (uint64_t v3 = v0, v4 = v1, (sub_100267F38() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = v3 == 6448486 && v4 == 0xE300000000000000;
    if (v6 || (sub_100267F38() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = v3 == 7496045 && v4 == 0xE300000000000000;
      if (v7 || (sub_100267F38() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = v3 == 7499873 && v4 == 0xE300000000000000;
        if (v8 || (sub_100267F38() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = v3 == 7954797 && v4 == 0xE300000000000000;
          if (v9 || (sub_100267F38() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = v3 == 7239018 && v4 == 0xE300000000000000;
            if (v10 || (sub_100267F38() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              BOOL v11 = v3 == 7107946 && v4 == 0xE300000000000000;
              if (v11 || (sub_100267F38() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                BOOL v12 = v3 == 6780257 && v4 == 0xE300000000000000;
                if (v12 || (sub_100267F38() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  BOOL v13 = v3 == 7366003 && v4 == 0xE300000000000000;
                  if (v13 || (sub_100267F38() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    BOOL v14 = v3 == 7627631 && v4 == 0xE300000000000000;
                    if (v14 || (sub_100267F38() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else
                    {
                      BOOL v15 = v3 == 7761774 && v4 == 0xE300000000000000;
                      if (v15 || (sub_100267F38() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 11;
                      }
                      else if (v3 == 6514020 && v4 == 0xE300000000000000)
                      {
                        swift_bridgeObjectRelease();
                        return 12;
                      }
                      else
                      {
                        char v17 = sub_100267F38();
                        swift_bridgeObjectRelease();
                        if (v17) {
                          return 12;
                        }
                        else {
                          return 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100267F38()
{
  return sub_1005E3290();
}

void sub_100267F58(uint64_t a1)
{
  uint64_t v2 = v1;
  ServerMessageDate.components.getter(a1, (uint64_t)&v35);
  if ((unint64_t)(v36 - 1) > 0xB) {
    goto LABEL_23;
  }
  uint64_t v3 = v38;
  uint64_t v4 = v39;
  uint64_t v33 = v40;
  uint64_t v34 = v37;
  uint64_t v5 = *(void *)&aJan_0[8 * v36 - 8];
  v41._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v41);
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = 45;
  v42._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v42);
  v43._uint64_t countAndFlagsBits = v5;
  v43._Swift::Int object = (void *)0xE300000000000000;
  sub_1005E1E30(v43);
  swift_bridgeObjectRelease();
  v44._uint64_t countAndFlagsBits = 45;
  v44._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v44);
  v45._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v45);
  swift_bridgeObjectRelease();
  v46._uint64_t countAndFlagsBits = 32;
  v46._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v46);
  Swift::Int v6 = *(unsigned int *)(v1 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(34, 0xE100000000000000, v1 + 8, v6);
  Swift::Int v8 = v7;
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    v11._uint64_t countAndFlagsBits = 34;
    v11._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v8 = ByteBuffer._setStringSlowpath(_:at:)(v11, v6);
  }
  swift_bridgeObjectRelease();
  int v12 = *(_DWORD *)(v1 + 20);
  BOOL v13 = __CFADD__(v12, v8);
  int v14 = v12 + v8;
  if (v13)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v1 + 20) = v14;
  uint64_t v15 = sub_100268848(v34, v3, v4);
  Swift::Int v16 = v8 + v15;
  if (__OFADD__(v8, v15))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Swift::Int v17 = *(unsigned int *)(v1 + 20);
  sub_100210AD0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if (v19)
  {
    v20._uint64_t countAndFlagsBits = 32;
    v20._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v18 = ByteBuffer._setStringSlowpath(_:at:)(v20, v17);
  }
  int v21 = *(_DWORD *)(v2 + 20);
  BOOL v13 = __CFADD__(v21, v18);
  int v22 = v21 + v18;
  if (v13) {
    goto LABEL_18;
  }
  *(_DWORD *)(v2 + 20) = v22;
  BOOL v23 = __OFADD__(v16, v18);
  Swift::Int v24 = v16 + v18;
  if (v23)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = sub_100268AAC(v33);
  BOOL v23 = __OFADD__(v24, v25);
  Swift::Int v26 = v24 + v25;
  if (v23)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  Swift::Int v27 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(34, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if (v29)
  {
    v30._uint64_t countAndFlagsBits = 34;
    v30._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v28 = ByteBuffer._setStringSlowpath(_:at:)(v30, v27);
  }
  int v31 = *(_DWORD *)(v2 + 20);
  BOOL v13 = __CFADD__(v31, v28);
  int v32 = v31 + v28;
  if (v13) {
    goto LABEL_21;
  }
  *(_DWORD *)(v2 + 20) = v32;
  if (__OFADD__(v26, v28))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
}

Swift::Int ServerMessageDate.components.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  Swift::Int v5 = sub_10026835C(31, v4);
  Swift::Int v6 = sub_10026835C(12, v4);
  Swift::Int v7 = sub_10026835C(60, v4);
  Swift::Int v8 = sub_10026835C(60, v4);
  Swift::Int v9 = sub_10026835C(60, v4);
  uint64_t v10 = sub_10026835C(1440, v4);
  uint64_t v11 = sub_10026835C(2, v4);
  Swift::Int result = sub_10026835C(65534, v4);
  uint64_t v13 = 1;
  if (v11) {
    uint64_t v13 = -1;
  }
  if ((unsigned __int128)(v10 * (__int128)v13) >> 64 == (v10 * v13) >> 63)
  {
    ServerMessageDate.Components.init(year:month:day:hour:minute:second:timeZoneMinutes:)(&v18, result, v6, v5, v7, v8, v9, v10 * v13);
    Swift::Int result = sub_100268474((uint64_t)&v18, (uint64_t)v19);
    if ((v21 & 1) == 0)
    {
      long long v16 = v19[1];
      long long v17 = v19[0];
      long long v15 = v19[2];
      uint64_t v14 = v20;
      Swift::Int result = swift_release();
      *(_OWORD *)a2 = v17;
      *(_OWORD *)(a2 + 16) = v16;
      *(_OWORD *)(a2 + 32) = v15;
      *(void *)(a2 + 48) = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10026834C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026835C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  unint64_t v5 = a1 + 1;
  if (a1 == -1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = *v3 % v5;
    uint64_t result = swift_beginAccess();
    *v3 /= v5;
    if ((v6 & 0x8000000000000000) == 0) {
      return v6;
    }
  }
  __break(1u);
  return result;
}

void __swiftcall ServerMessageDate.Components.init(year:month:day:hour:minute:second:timeZoneMinutes:)(NIOIMAPCore2::ServerMessageDate::Components_optional *__return_ptr retstr, Swift::Int year, Swift::Int month, Swift::Int day, Swift::Int hour, Swift::Int minute, Swift::Int second, Swift::Int timeZoneMinutes)
{
  Swift::Bool v20 = (unint64_t)(day - 32) < 0xFFFFFFFFFFFFFFE1
     || month < 1
     || month > 12
     || hour < 0
     || hour > 23
     || minute < 0
     || minute > 59
     || second < 0
     || second > 60
     || timeZoneMinutes < -1440
     || timeZoneMinutes > 1440
     || year < 1
     || year >= 0x10000;
  if (v20) {
    Swift::Int v21 = 0;
  }
  else {
    Swift::Int v21 = year;
  }
  if (v20) {
    Swift::Int v22 = 0;
  }
  else {
    Swift::Int v22 = month;
  }
  retstr->value.year = v21;
  retstr->value.month = v22;
  if (v20) {
    Swift::Int v23 = 0;
  }
  else {
    Swift::Int v23 = day;
  }
  if (v20) {
    Swift::Int v24 = 0;
  }
  else {
    Swift::Int v24 = hour;
  }
  if (v20) {
    Swift::Int v25 = 0;
  }
  else {
    Swift::Int v25 = minute;
  }
  retstr->value.day = v23;
  retstr->value.hour = v24;
  if (v20) {
    Swift::Int v26 = 0;
  }
  else {
    Swift::Int v26 = second;
  }
  retstr->value.minute = v25;
  retstr->value.second = v26;
  if (v20) {
    Swift::Int v27 = 0;
  }
  else {
    Swift::Int v27 = timeZoneMinutes;
  }
  retstr->value.zoneMinutes = v27;
  retstr->is_nil = v20;
}

uint64_t sub_100268474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100710C60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

NIOIMAPCore2::ServerMessageDate __swiftcall ServerMessageDate.init(_:)(NIOIMAPCore2::ServerMessageDate::Components *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  result.rawValue = a1->year;
  if (a1->year < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result.rawValue >> 16)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_100268650(result.rawValue, 1u, v2);
  unint64_t zoneMinutes = a1->zoneMinutes;
  result.rawValue = sub_1002686D8(zoneMinutes >> 63, 2u, v2);
  if ((zoneMinutes & 0x8000000000000000) == 0) {
    goto LABEL_6;
  }
  BOOL v5 = __OFSUB__(0, zoneMinutes);
  unint64_t zoneMinutes = -(uint64_t)zoneMinutes;
  if (!v5)
  {
    if ((zoneMinutes & 0x8000000000000000) == 0)
    {
LABEL_6:
      if (!(zoneMinutes >> 16))
      {
        sub_100268650(zoneMinutes, 0x5A0u, v2);
        result.rawValue = a1->second;
        if ((result.rawValue & 0x8000000000000000) == 0)
        {
          if (result.rawValue <= 0xFF)
          {
            sub_1002686D8(result.rawValue, 0x3Cu, v2);
            result.rawValue = a1->minute;
            if ((result.rawValue & 0x8000000000000000) == 0)
            {
              if (result.rawValue <= 0xFF)
              {
                sub_1002686D8(result.rawValue, 0x3Cu, v2);
                result.rawValue = a1->hour;
                if ((result.rawValue & 0x8000000000000000) == 0)
                {
                  if (result.rawValue <= 0xFF)
                  {
                    sub_1002686D8(result.rawValue, 0x3Cu, v2);
                    result.rawValue = a1->month;
                    if ((result.rawValue & 0x8000000000000000) == 0)
                    {
                      if (result.rawValue <= 0xFF)
                      {
                        sub_1002686D8(result.rawValue, 0xCu, v2);
                        result.rawValue = a1->day;
                        if ((result.rawValue & 0x8000000000000000) == 0)
                        {
                          if (result.rawValue <= 0xFF)
                          {
                            sub_1002686D8(result.rawValue, 0x1Fu, v2);
                            v6.rawValue = *(void *)(v2 + 16);
                            swift_release();
                            return v6;
                          }
                          goto LABEL_31;
                        }
LABEL_30:
                        __break(1u);
LABEL_31:
                        __break(1u);
                        goto LABEL_32;
                      }
LABEL_29:
                      __break(1u);
                      goto LABEL_30;
                    }
LABEL_28:
                    __break(1u);
                    goto LABEL_29;
                  }
LABEL_27:
                  __break(1u);
                  goto LABEL_28;
                }
LABEL_26:
                __break(1u);
                goto LABEL_27;
              }
LABEL_25:
              __break(1u);
              goto LABEL_26;
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100268650(uint64_t result, unsigned __int16 a2, uint64_t a3)
{
  if (((a2 + 1) & 0x10000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  unsigned __int16 v3 = result;
  uint64_t v4 = (unint64_t *)(a3 + 16);
  unint64_t v5 = (unsigned __int16)(a2 + 1);
  NIOIMAPCore2::ServerMessageDate result = swift_beginAccess();
  if (!is_mul_ok(*v4, v5))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v6 = *v4 * v5;
  BOOL v7 = __CFADD__(v6, v3);
  unint64_t v8 = v6 + v3;
  if (!v7)
  {
    *uint64_t v4 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1002686D8(uint64_t result, unsigned __int8 a2, uint64_t a3)
{
  if (((a2 + 1) >> 8))
  {
    __break(1u);
    goto LABEL_6;
  }
  unsigned __int8 v3 = result;
  uint64_t v4 = (unint64_t *)(a3 + 16);
  unint64_t v5 = (a2 + 1);
  NIOIMAPCore2::ServerMessageDate result = swift_beginAccess();
  if (!is_mul_ok(*v4, v5))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v6 = *v4 * v5;
  BOOL v7 = __CFADD__(v6, v3);
  unint64_t v8 = v6 + v3;
  if (!v7)
  {
    *uint64_t v4 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

Swift::Int sub_100268760()
{
  return ModificationSequenceValue.hashValue.getter(*v0);
}

uint64_t MessageMetadata.internalDate.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ServerMessageDate.Components.second.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ServerMessageDate.Components.zoneMinutes.getter()
{
  return *(void *)(v0 + 48);
}

unint64_t sub_100268784()
{
  unint64_t result = qword_100710C68;
  if (!qword_100710C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C68);
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerMessageDate()
{
  return &type metadata for ServerMessageDate;
}

uint64_t getEnumTagSinglePayload for ServerMessageDate.Components(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ServerMessageDate.Components(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ServerMessageDate.Components()
{
  return &type metadata for ServerMessageDate.Components;
}

uint64_t sub_100268848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a1 > 9)
  {
    uint64_t v7 = sub_1005E3230();
    unint64_t v8 = v9;
  }
  else
  {
    v27._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v27);
    swift_bridgeObjectRelease();
    uint64_t v7 = 48;
    unint64_t v8 = (void *)0xE100000000000000;
  }
  if (a2 > 9)
  {
    uint64_t v11 = sub_1005E3230();
    uint64_t v10 = v12;
  }
  else
  {
    v28._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v28);
    swift_bridgeObjectRelease();
    uint64_t v11 = 48;
    uint64_t v10 = (void *)0xE100000000000000;
  }
  if (a3 > 9)
  {
    uint64_t v14 = sub_1005E3230();
    uint64_t v13 = v15;
  }
  else
  {
    v29._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v29);
    swift_bridgeObjectRelease();
    uint64_t v14 = 48;
    uint64_t v13 = (void *)0xE100000000000000;
  }
  v30._uint64_t countAndFlagsBits = 58;
  v30._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v30);
  v31._uint64_t countAndFlagsBits = v11;
  v31._Swift::Int object = v10;
  sub_1005E1E30(v31);
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = 58;
  v32._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v32);
  v33._uint64_t countAndFlagsBits = v14;
  v33._Swift::Int object = v13;
  sub_1005E1E30(v33);
  swift_bridgeObjectRelease();
  uint64_t v16 = v7;
  Swift::Int v17 = *(unsigned int *)(v3 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(v7, (unint64_t)v8, v3 + 8, v17);
  Swift::Int v19 = v18;
  char v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    v22._uint64_t countAndFlagsBits = v16;
    v22._Swift::Int object = v8;
    Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v22, v17);
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v24 = *(_DWORD *)(v4 + 20);
  BOOL v25 = __CFADD__(v24, v19);
  int v26 = v24 + v19;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v4 + 20) = v26;
    return v19;
  }
  return result;
}

uint64_t sub_100268AAC(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = result;
  uint64_t v4 = result;
  if (result < 0)
  {
    uint64_t v4 = -result;
    if (__OFSUB__(0, result)) {
      goto LABEL_20;
    }
  }
  uint64_t v5 = v4 % 60;
  BOOL v6 = __OFSUB__(v4, v4 % 60);
  uint64_t v7 = v4 - v4 % 60;
  if (v6)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v7 / 60;
  uint64_t v9 = 100 * (v7 / 60);
  if ((unsigned __int128)(v8 * (__int128)100) >> 64 != v9 >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(v9, v5))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v10 = sub_1005E3230();
  int v12 = v11;
  if (sub_1005E1DC0() > 3) {
    goto LABEL_9;
  }
  sub_1005E1D10(4);
  uint64_t result = sub_1005E1DC0();
  Swift::Int v13 = 4 - result;
  if (!__OFSUB__(4, result))
  {
    v25._uint64_t countAndFlagsBits = 48;
    v25._Swift::Int object = (void *)0xE100000000000000;
    v26._uint64_t countAndFlagsBits = sub_1005E1F10(v25, v13);
    sub_1005E1E10(v26);
    swift_bridgeObjectRelease();
    v27._uint64_t countAndFlagsBits = v10;
    v27._Swift::Int object = v12;
    sub_1005E1E30(v27);
    swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    int v12 = (void *)0xE000000000000000;
LABEL_9:
    uint64_t v14 = 43;
    if (v3 < 0) {
      uint64_t v14 = 45;
    }
    uint64_t v24 = v14;
    v28._uint64_t countAndFlagsBits = v10;
    v28._Swift::Int object = v12;
    sub_1005E1E30(v28);
    swift_bridgeObjectRelease();
    Swift::Int v15 = *(unsigned int *)(v1 + 20);
    swift_bridgeObjectRetain();
    sub_100210AD0(v24, 0xE100000000000000, v1 + 8, v15);
    Swift::Int v17 = v16;
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
    {
      v20._uint64_t countAndFlagsBits = v24;
      v20._Swift::Int object = (void *)0xE100000000000000;
      Swift::Int v17 = ByteBuffer._setStringSlowpath(_:at:)(v20, v15);
    }
    uint64_t result = swift_bridgeObjectRelease();
    int v21 = *(_DWORD *)(v2 + 20);
    BOOL v22 = __CFADD__(v21, v17);
    int v23 = v21 + v17;
    if (!v22)
    {
      *(_DWORD *)(v2 + 20) = v23;
      return v17;
    }
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_100268C90()
{
  unint64_t result = qword_100710C70;
  if (!qword_100710C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for EItemVendorTag()
{
  return &type metadata for EItemVendorTag;
}

BOOL static ExtendedSearchOptions.__derived_struct_equals(_:_:)(unint64_t *a1, uint64_t *a2)
{
  static SearchKey.__derived_enum_equals(_:_:)(*a1, *a2);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = a1[2];
  uint64_t v6 = a2[2];
  if (!v5)
  {
    if (v6) {
      return 0;
    }
LABEL_11:
    sub_100219B48();
    if ((v10 & 1) == 0) {
      return 0;
    }
    uint64_t v11 = a1[4];
    uint64_t v12 = a1[5];
    uint64_t v13 = a1[6];
    uint64_t v14 = a1[7];
    uint64_t v16 = a2[4];
    uint64_t v15 = a2[5];
    uint64_t v17 = a2[6];
    if (v11)
    {
      if (v16)
      {
        sub_10026992C();
        sub_10026996C();
        BOOL v18 = static ExtendedSearchSourceOptions.__derived_struct_equals(_:_:)(v11, v12, v13, v14, v16, v15, v17);
        sub_10026994C();
        sub_10026990C();
        return v18;
      }
    }
    else if (!v16)
    {
      return 1;
    }
    sub_10026992C();
    sub_10026996C();
    sub_10026990C();
    sub_10026994C();
    return 0;
  }
  if (!v6) {
    return 0;
  }
  if (a1[1] == a2[1] && v5 == v6) {
    goto LABEL_11;
  }
  char v8 = sub_1005E3290();
  BOOL result = 0;
  if (v8) {
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_100268E08(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_1000A9450(a2, a3);
  }
  return result;
}

void sub_100268E60(unint64_t *a1)
{
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  v35[0] = *(_OWORD *)v1;
  v35[1] = v4;
  v35[2] = *(_OWORD *)(v1 + 32);
  uint64_t v36 = *(void *)(v1 + 48);
  sub_100269888((uint64_t)v35);
  uint64_t v5 = sub_1002698F8();
  sub_100268E08(v5, v6, v7);
  uint64_t v8 = sub_1002698F8();
  sub_1001F2BB4(v8, v9, v10, v11, v12, v1);
  uint64_t v14 = v13;
  sub_1002698C0((uint64_t)v35);
  uint64_t v15 = sub_1002698F8();
  sub_10024EE94(v15, v16, v17);
  uint64_t v18 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1002B252C(v18);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v21 = v14 + v20;
  if (__OFADD__(v14, v20))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  Swift::Int v22 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if (v24)
  {
    v25._uint64_t countAndFlagsBits = 32;
    v25._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
  }
  int v26 = *(_DWORD *)(v2 + 20);
  BOOL v27 = __CFADD__(v26, v23);
  int v28 = v26 + v23;
  if (v27) {
    goto LABEL_13;
  }
  *(_DWORD *)(v2 + 20) = v28;
  Swift::Int v29 = v21 + v23;
  if (__OFADD__(v21, v23))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v30 = a1[2];
  if (v30)
  {
    v34[0] = a1[1];
    v34[1] = v30;
    uint64_t v31 = sub_10024E198(v34, v2);
  }
  else
  {
    uint64_t v31 = 0;
  }
  Swift::Int v32 = v29 + v31;
  if (__OFADD__(v29, v31)) {
    goto LABEL_15;
  }
  sub_1002ADB34(*a1);
  if (__OFADD__(v32, v33)) {
LABEL_16:
  }
    __break(1u);
}

unint64_t ExtendedSearchOptions.key.getter()
{
  unint64_t v1 = *v0;
  sub_1002238FC(*v0);
  return v1;
}

unint64_t ExtendedSearchOptions.key.setter(unint64_t a1)
{
  unint64_t result = sub_1002239B4(*v1);
  unint64_t *v1 = a1;
  return result;
}

uint64_t WatchOSHeaderInfo.cc.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t ExtendedSearchOptions.sourceOptions.getter()
{
  uint64_t v0 = sub_1002381C4();
  sub_100268E08(v0, v1, v2);
  return sub_1002381C4();
}

uint64_t ExtendedSearchOptions.sourceOptions.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_10024EE94(v4[4], v4[5], v4[6]);
  long long v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  v4[7] = a4;
  return result;
}

uint64_t ExtendedSearchOptions.init(key:charset:returnOptions:sourceOptions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

void ExtendedSearchOptions.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *v2;
  sub_1002238FC(*v2);
  SearchKey.hash(into:)(a1, v4);
  sub_1002239B4(v4);
  if (v2[2])
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  swift_bridgeObjectRetain();
  sub_100227530();
  swift_bridgeObjectRelease();
  uint64_t v5 = v2[4];
  if (v5)
  {
    uint64_t v6 = v2[6];
    uint64_t v7 = v2[5];
    sub_1005E3420(1u);
    uint64_t v8 = sub_100238190();
    sub_100268E08(v8, v9, v10);
    swift_bridgeObjectRetain();
    sub_1000A9450(v7, v6);
    ExtendedSearchSourceOptions.hash(into:)(a1, v5, v7, v6);
    swift_bridgeObjectRelease();
    sub_1000A6FC4(v7, v6);
    uint64_t v11 = sub_100238190();
    sub_10024EE94(v11, v12, v13);
  }
  else
  {
    sub_1005E3420(0);
  }
}

Swift::Int ExtendedSearchOptions.hashValue.getter()
{
  sub_1005E33F0();
  ExtendedSearchOptions.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_1002692A4()
{
  sub_1005E33F0();
  ExtendedSearchOptions.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

unint64_t sub_1002692E8()
{
  unint64_t result = qword_100710C78;
  if (!qword_100710C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C78);
  }
  return result;
}

uint64_t destroy for ExtendedSearchOptions(unint64_t *a1)
{
  sub_1002239B4(*a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[4];
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = a1[6];
    if (result)
    {
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

unint64_t *initializeWithCopy for ExtendedSearchOptions(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_1002238FC(*a2);
  unint64_t v5 = a2[4];
  unint64_t v7 = a2[1];
  unint64_t v6 = a2[2];
  *a1 = v4;
  a1[1] = v7;
  unint64_t v8 = a2[3];
  a1[2] = v6;
  a1[3] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[4] = v5;
    unint64_t v9 = a2[6];
    swift_bridgeObjectRetain();
    if (v9)
    {
      a1[5] = a2[5];
      a1[6] = v9;
      a1[7] = a2[7];
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      a1[7] = a2[7];
    }
  }
  else
  {
    long long v10 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for ExtendedSearchOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_1002238FC(*(void *)a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_1002239B4(v5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (long long *)(a1 + 32);
  unint64_t v8 = (long long *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v7)
    {
      *(void *)(a1 + 32) = v7;
      uint64_t v11 = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      if (!v11)
      {
        long long v12 = *(_OWORD *)(a2 + 40);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = v12;
        return a1;
      }
LABEL_11:
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_retain();
      swift_retain();
      swift_retain();
      return a1;
    }
    long long v14 = *v8;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_15:
    *unint64_t v6 = v14;
    return a1;
  }
  if (!v7)
  {
    sub_100269698(a1 + 32);
    long long v13 = *(_OWORD *)(a2 + 48);
    *unint64_t v6 = *v8;
    *(_OWORD *)(a1 + 48) = v13;
    return a1;
  }
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (long long *)(a1 + 40);
  unint64_t v9 = (long long *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v10) {
      goto LABEL_11;
    }
    long long v14 = *v9;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    goto LABEL_15;
  }
  if (v10)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_retain();
    swift_release();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_retain();
    swift_release();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_retain();
    swift_release();
  }
  else
  {
    sub_100269644(a1 + 40);
    uint64_t v15 = *(void *)(a2 + 56);
    *unint64_t v6 = *v9;
    *(void *)(a1 + 56) = v15;
  }
  return a1;
}

uint64_t sub_100269644(uint64_t a1)
{
  return a1;
}

uint64_t sub_100269698(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ExtendedSearchOptions(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_1002239B4(v4);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_7;
  }
  if (!v6)
  {
    sub_100269698(a1 + 32);
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    return a1;
  }
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 48))
  {
LABEL_9:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    return a1;
  }
  uint64_t v7 = *(void *)(a2 + 48);
  if (!v7)
  {
    sub_100269644(a1 + 40);
    goto LABEL_9;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = v7;
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedSearchOptions(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedSearchOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedSearchOptions()
{
  return &type metadata for ExtendedSearchOptions;
}

uint64_t sub_100269888(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002698C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002698F8()
{
  return v0;
}

uint64_t sub_10026990C()
{
  return sub_10024EE94(v0, v1, v2);
}

uint64_t sub_10026992C()
{
  return sub_100268E08(v0, v1, v2);
}

uint64_t sub_10026994C()
{
  return sub_10024EE94(v2, v0, v1);
}

uint64_t sub_10026996C()
{
  return sub_100268E08(v2, v0, v1);
}

uint64_t SearchModificationSequence.extensions.getter(uint64_t a1)
{
  return a1;
}

uint64_t ExtendedSearchScopeOptions.hash(into:)()
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100225748();
  swift_release();
  swift_release();
  return swift_release();
}

BOOL static ExtendedSearchScopeOptions.__derived_struct_equals(_:_:)()
{
  sub_100221B3C();
  BOOL result = 0;
  if (v0)
  {
    sub_100222384();
    if (v1) {
      return 1;
    }
  }
  return result;
}

Swift::Int ExtendedSearchScopeOptions.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_100269B4C()
{
  return ExtendedSearchScopeOptions.hashValue.getter();
}

uint64_t sub_100269B58()
{
  return ExtendedSearchScopeOptions.hash(into:)();
}

Swift::Int sub_100269B64()
{
  return sub_1005E3470();
}

BOOL sub_100269BEC()
{
  return static ExtendedSearchScopeOptions.__derived_struct_equals(_:_:)();
}

unint64_t sub_100269C0C()
{
  unint64_t result = qword_100710C80;
  if (!qword_100710C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C80);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedSearchScopeOptions()
{
  return &type metadata for ExtendedSearchScopeOptions;
}

#error "100269D18: call analysis failed (funcsize=88)"

uint64_t ExtendedSearchSourceOptions.scopeOptions.getter()
{
  sub_10026A55C();
  sub_1000A9450(v1, v2);
  return v0;
}

uint64_t ExtendedSearchSourceOptions.init(sourceMailbox:scopeOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (!*(void *)(a1 + 16))
  {
    sub_1000A6FC4(a2, a3);
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void ExtendedSearchSourceOptions.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100229B00(a1, a2);
  if (a4)
  {
    sub_1005E3420(1u);
    sub_1000A9450(a3, a4);
    sub_1000A9450(a3, a4);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100225748();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    sub_1000A6FC4(a3, a4);
  }
  else
  {
    sub_1005E3420(0);
  }
}

BOOL static ExtendedSearchSourceOptions.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10026A55C();
  if ((sub_100219948() & 1) == 0) {
    return 0;
  }
  BOOL v11 = (v7 | a7) == 0;
  if (v7 && a7)
  {
    sub_1000A9450(v8, v7);
    sub_1000A9450(v8, v7);
    sub_1000A9450(a6, a7);
    sub_100221B3C();
    BOOL v11 = 0;
    if (v12)
    {
      sub_100222384();
      if (v13) {
        BOOL v11 = 1;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1000A6FC4(v8, v7);
  }
  return v11;
}

Swift::Int ExtendedSearchSourceOptions.hashValue.getter()
{
  sub_10026A55C();
  uint64_t v3 = v2;
  sub_1005E33F0();
  ExtendedSearchSourceOptions.hash(into:)((uint64_t)v5, v3, v1, v0);
  return sub_1005E3470();
}

Swift::Int sub_10026A0C4()
{
  return ExtendedSearchSourceOptions.hashValue.getter();
}

void sub_10026A0D0(uint64_t a1)
{
  ExtendedSearchSourceOptions.hash(into:)(a1, *v1, v1[1], v1[2]);
}

Swift::Int sub_10026A0DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_1005E33F0();
  ExtendedSearchSourceOptions.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_1005E3470();
}

BOOL sub_10026A138(uint64_t *a1, uint64_t *a2)
{
  return static ExtendedSearchSourceOptions.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2]);
}

void sub_10026A154(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 8;
  Swift::Int v5 = *(unsigned int *)(a2 + 20);
  sub_100210AD0(10272, 0xE200000000000000, a2 + 8, v5);
  if (v7)
  {
    v8._uint64_t countAndFlagsBits = 10272;
    v8._Swift::Int object = (void *)0xE200000000000000;
    Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  Swift::Int v9 = v6;
  int v10 = *(_DWORD *)(a2 + 20);
  BOOL v11 = __CFADD__(v10, v6);
  int v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 20) = v12;
  uint64_t v13 = sub_1001F2294(*a1, a1[1], a1[2], 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 0, a2);
  BOOL v14 = __OFADD__(v9, v13);
  Swift::Int v15 = v9 + v13;
  if (v14)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  Swift::Int v16 = *(unsigned int *)(a2 + 20);
  sub_100210AD0(41, 0xE100000000000000, v4, *(_DWORD *)(a2 + 20));
  if (v18)
  {
    v19._uint64_t countAndFlagsBits = 41;
    v19._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v17 = ByteBuffer._setStringSlowpath(_:at:)(v19, v16);
  }
  int v20 = *(_DWORD *)(a2 + 20);
  BOOL v11 = __CFADD__(v20, v17);
  int v21 = v20 + v17;
  if (v11) {
    goto LABEL_12;
  }
  *(_DWORD *)(a2 + 20) = v21;
  if (__OFADD__(v15, v17)) {
LABEL_13:
  }
    __break(1u);
}

unint64_t sub_10026A268()
{
  unint64_t result = qword_100710C88;
  if (!qword_100710C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C88);
  }
  return result;
}

uint64_t destroy for ExtendedSearchSourceOptions(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for ExtendedSearchSourceOptions(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a1 + 1;
  uint64_t v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[1] = a2[1];
    a1[2] = v5;
    a1[3] = a2[3];
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *uint64_t v4 = *(_OWORD *)(a2 + 1);
    a1[3] = a2[3];
  }
  return a1;
}

void *assignWithCopy for ExtendedSearchSourceOptions(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 1;
  uint64_t v5 = a2 + 1;
  uint64_t v6 = a2[2];
  if (a1[2])
  {
    if (v6)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_release();
      a1[2] = a2[2];
      swift_retain();
      swift_release();
      a1[3] = a2[3];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100269644((uint64_t)(a1 + 1));
      uint64_t v7 = a2[3];
      *uint64_t v4 = *v5;
      a1[3] = v7;
    }
  }
  else if (v6)
  {
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v8 = *v5;
    a1[3] = a2[3];
    *uint64_t v4 = v8;
  }
  return a1;
}

uint64_t assignWithTake for ExtendedSearchSourceOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    sub_100269644(a1 + 8);
LABEL_5:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    return a1;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ExtendedSearchSourceOptions()
{
  return &type metadata for ExtendedSearchSourceOptions;
}

void EmailAddress.personName.getter()
{
}

uint64_t EmailAddress.personName.setter()
{
  sub_10026B45C();
  uint64_t result = swift_release();
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 22) = BYTE6(v0);
  *(_WORD *)(v1 + 20) = WORD2(v0);
  *(_DWORD *)(v1 + 16) = v0;
  return result;
}

void EmailAddress.sourceRoot.getter()
{
}

uint64_t EmailAddress.sourceRoot.setter()
{
  sub_10026B45C();
  uint64_t result = swift_release();
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 32) = v2;
  *(unsigned char *)(v1 + 46) = BYTE6(v0);
  *(_WORD *)(v1 + 44) = WORD2(v0);
  *(_DWORD *)(v1 + 40) = v0;
  return result;
}

void EmailAddress.mailbox.getter()
{
}

uint64_t EmailAddress.mailbox.setter()
{
  sub_10026B45C();
  uint64_t result = swift_release();
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 56) = v2;
  *(unsigned char *)(v1 + 70) = BYTE6(v0);
  *(_WORD *)(v1 + 68) = WORD2(v0);
  *(_DWORD *)(v1 + 64) = v0;
  return result;
}

void EmailAddress.host.getter()
{
}

uint64_t EmailAddress.host.setter()
{
  sub_10026B45C();
  uint64_t result = swift_release();
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v2;
  *(unsigned char *)(v1 + 94) = BYTE6(v0);
  *(_WORD *)(v1 + 92) = WORD2(v0);
  *(_DWORD *)(v1 + 88) = v0;
  return result;
}

uint64_t EmailAddress.init(personName:sourceRoot:mailbox:host:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(_DWORD *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 22) = BYTE6(a3);
  *(_WORD *)(a9 + 20) = WORD2(a3);
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(_DWORD *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 46) = BYTE6(a6);
  *(_WORD *)(a9 + 44) = WORD2(a6);
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_DWORD *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 70) = a12;
  *(_WORD *)(a9 + 68) = a11;
  *(void *)(a9 + 72) = a13;
  *(void *)(a9 + 80) = a14;
  *(_DWORD *)(a9 + 88) = a15;
  *(unsigned char *)(a9 + 94) = a17;
  *(_WORD *)(a9 + 92) = a16;
  return result;
}

void EmailAddress.hash(into:)()
{
  if (*v0)
  {
    sub_1005E3420(1u);
    sub_1001F969C();
    sub_10026B41C();
  }
  else
  {
    sub_1005E3420(0);
  }
  if (v0[3])
  {
    sub_1005E3420(1u);
    sub_1001F969C();
    sub_10026B41C();
  }
  else
  {
    sub_1005E3420(0);
  }
  if (v0[6])
  {
    sub_1005E3420(1u);
    sub_1001F969C();
    sub_10026B41C();
  }
  else
  {
    sub_1005E3420(0);
  }
  if (v0[9])
  {
    sub_1005E3420(1u);
    sub_1001F969C();
    sub_1005E3400();
  }
  else
  {
    sub_1005E3420(0);
  }
}

uint64_t static EmailAddress.__derived_struct_equals(_:_:)(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (!v4) {
      return 0;
    }
    sub_10026B4C4();
    sub_10026B46C();
    swift_retain();
    BOOL v5 = sub_10026B3F4();
    swift_release();
    swift_release();
    if (!v5) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  uint64_t v6 = a2[3];
  if (a1[3])
  {
    if (!v6) {
      return 0;
    }
    sub_100254AA8();
    sub_10026B46C();
    swift_retain();
    BOOL v7 = sub_10026B3F4();
    swift_release();
    swift_release();
    if (!v7) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  uint64_t v8 = a2[6];
  if (a1[6])
  {
    if (!v8) {
      return 0;
    }
    sub_10026B498();
    sub_10026B46C();
    swift_retain();
    BOOL v9 = sub_10026B3F4();
    swift_release();
    swift_release();
    if (!v9) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  uint64_t v10 = a1[9];
  uint64_t v11 = a2[9];
  if (v10)
  {
    if (v11)
    {
      unint64_t v12 = a1[10];
      sub_10026B4D8();
      uint64_t v15 = v14 | (v13 << 32);
      uint64_t v16 = a2[10];
      unint64_t v17 = *((unsigned int *)a2 + 22) | ((unint64_t)(*((unsigned __int16 *)a2 + 46) | (*((unsigned __int8 *)a2
                                                                                               + 94) << 16)) << 32);
      unint64_t v18 = v15 & 0xFFFFFFFFFFFFFFLL;
      unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain();
      LOBYTE(v18) = static ByteBuffer.== infix(_:_:)(v10, v12, v18, v11, v16, v19);
      swift_release();
      swift_release();
      if (v18) {
        return 1;
      }
    }
  }
  else if (!v11)
  {
    return 1;
  }
  return 0;
}

Swift::Int EmailAddress.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10026AB1C()
{
  return sub_1005E3470();
}

unint64_t sub_10026AB5C()
{
  unint64_t result = qword_100710C90;
  if (!qword_100710C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C90);
  }
  return result;
}

uint64_t destroy for EmailAddress()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

{
  uint64_t vars8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmailAddress(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 43) = *(_DWORD *)(a2 + 43);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 67) = *(_DWORD *)(a2 + 67);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 91) = *(_DWORD *)(a2 + 91);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  BOOL v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmailAddress(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  *(unsigned char *)(a1 + 70) = *(unsigned char *)(a2 + 70);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_WORD *)(a1 + 92) = *(_WORD *)(a2 + 92);
  *(unsigned char *)(a1 + 94) = *(unsigned char *)(a2 + 94);
  return a1;
}

void *initializeWithTake for EmailAddress(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x5FuLL);
}

uint64_t assignWithTake for EmailAddress(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_WORD *)(a1 + 44) = *(_WORD *)(a2 + 44);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  *(unsigned char *)(a1 + 70) = *(unsigned char *)(a2 + 70);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_WORD *)(a1 + 92) = *(_WORD *)(a2 + 92);
  *(unsigned char *)(a1 + 94) = *(unsigned char *)(a2 + 94);
  return a1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  BOOL v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  BOOL v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmailAddress(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 95))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmailAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 94) = 0;
    *(_WORD *)(result + 92) = 0;
    *(_DWORD *)(result + 88) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 95) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 95) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmailAddress()
{
  return &type metadata for EmailAddress;
}

{
  return &type metadata for EmailAddress;
}

void sub_10026AFB8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 8;
  sub_100210AD0(40, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if (v6) {
    Swift::Int v5 = sub_10026B440(40);
  }
  Swift::Int v7 = v5;
  int v8 = *(_DWORD *)(v1 + 20);
  Swift::Int v9 = (v8 + v5);
  if (__CFADD__(v8, v5))
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  *(_DWORD *)(v1 + 20) = v9;
  uint64_t v10 = *a1;
  if (*a1)
  {
    sub_10026B4B8();
    if (!v11) {
      goto LABEL_74;
    }
    sub_10026B3D4();
    if (!v12 && v11)
    {
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    uint64_t v106 = v10;
    sub_10026B48C();
    int v107 = v14;
    int v108 = v13;
    int v109 = v15;
    __int16 v110 = v16;
    char v111 = v17;
    uint64_t v112 = v18;
    uint64_t v113 = v13;
    swift_retain();
    Swift::Int v19 = sub_10025E0BC(&v106);
    swift_release();
  }
  else
  {
    sub_100210AD0(4999502, 0xE300000000000000, v1 + 8, v9);
    if (v21)
    {
      v22._uint64_t countAndFlagsBits = 4999502;
      v22._Swift::Int object = (void *)0xE300000000000000;
      Swift::Int v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v9);
    }
    Swift::Int v19 = v20;
    int v23 = *(_DWORD *)(v2 + 20);
    BOOL v11 = __CFADD__(v23, v20);
    int v24 = v23 + v20;
    if (v11) {
      goto LABEL_82;
    }
    *(_DWORD *)(v2 + 20) = v24;
  }
  BOOL v25 = __OFADD__(v7, v19);
  Swift::Int v26 = v7 + v19;
  if (v25) {
    goto LABEL_62;
  }
  sub_100238EE0();
  if (v28) {
    Swift::Int v27 = sub_10026B440(32);
  }
  int v29 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v29, v27)) {
    goto LABEL_63;
  }
  *(_DWORD *)(v2 + 20) = v29 + v27;
  Swift::Int v30 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v31 = a1[3];
  if (v31)
  {
    sub_10026B4B8();
    if (!v11) {
      goto LABEL_76;
    }
    sub_10026B3D4();
    if (!v12 && v11)
    {
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    uint64_t v98 = v31;
    sub_10026B48C();
    int v99 = v33;
    int v100 = v32;
    int v101 = v34;
    __int16 v102 = v35;
    char v103 = v36;
    uint64_t v104 = v37;
    uint64_t v105 = v32;
    swift_retain();
    Swift::Int v38 = sub_10025E0BC(&v98);
    swift_release();
  }
  else
  {
    sub_100238F28();
    if (v40) {
      Swift::Int v39 = sub_100238F04();
    }
    Swift::Int v38 = v39;
    int v41 = *(_DWORD *)(v2 + 20);
    BOOL v11 = __CFADD__(v41, v39);
    int v42 = v41 + v39;
    if (v11) {
      goto LABEL_83;
    }
    *(_DWORD *)(v2 + 20) = v42;
  }
  Swift::Int v43 = v30 + v38;
  if (__OFADD__(v30, v38)) {
    goto LABEL_65;
  }
  sub_100238EE0();
  if (v45) {
    Swift::Int v44 = sub_10026B440(32);
  }
  int v46 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v46, v44)) {
    goto LABEL_66;
  }
  *(_DWORD *)(v2 + 20) = v46 + v44;
  Swift::Int v47 = v43 + v44;
  if (__OFADD__(v43, v44))
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v48 = a1[6];
  if (v48)
  {
    sub_10026B4B8();
    if (!v11) {
      goto LABEL_78;
    }
    sub_10026B3D4();
    if (!v12 && v11)
    {
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    uint64_t v90 = v48;
    sub_10026B48C();
    int v91 = v50;
    int v92 = v49;
    int v93 = v51;
    __int16 v94 = v52;
    char v95 = v53;
    uint64_t v96 = v54;
    uint64_t v97 = v49;
    swift_retain();
    Swift::Int v55 = sub_10025E0BC(&v90);
    swift_release();
  }
  else
  {
    sub_100238F28();
    if (v57) {
      Swift::Int v56 = sub_100238F04();
    }
    Swift::Int v55 = v56;
    int v58 = *(_DWORD *)(v2 + 20);
    BOOL v11 = __CFADD__(v58, v56);
    int v59 = v58 + v56;
    if (v11) {
      goto LABEL_84;
    }
    *(_DWORD *)(v2 + 20) = v59;
  }
  Swift::Int v60 = v47 + v55;
  if (__OFADD__(v47, v55)) {
    goto LABEL_68;
  }
  sub_100238EE0();
  if (v62) {
    Swift::Int v61 = sub_10026B440(32);
  }
  int v63 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v63, v61)) {
    goto LABEL_69;
  }
  *(_DWORD *)(v2 + 20) = v63 + v61;
  Swift::Int v64 = v60 + v61;
  if (__OFADD__(v60, v61))
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v65 = a1[9];
  if (v65)
  {
    sub_10026B4B8();
    if (!v11) {
      goto LABEL_80;
    }
    sub_10026B3D4();
    if (!v12 && v11)
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      return;
    }
    uint64_t v82 = v65;
    sub_10026B48C();
    int v83 = v67;
    int v84 = v66;
    int v85 = v68;
    __int16 v86 = v69;
    char v87 = v70;
    uint64_t v88 = v71;
    uint64_t v89 = v66;
    swift_retain();
    Swift::Int v72 = sub_10025E0BC(&v82);
    swift_release();
  }
  else
  {
    sub_100238F28();
    if (v74) {
      Swift::Int v73 = sub_100238F04();
    }
    Swift::Int v72 = v73;
    int v75 = *(_DWORD *)(v2 + 20);
    BOOL v11 = __CFADD__(v75, v73);
    int v76 = v75 + v73;
    if (v11) {
      goto LABEL_85;
    }
    *(_DWORD *)(v2 + 20) = v76;
  }
  BOOL v25 = __OFADD__(v64, v72);
  Swift::Int v77 = v64 + v72;
  if (v25) {
    goto LABEL_71;
  }
  sub_100210AD0(41, 0xE100000000000000, v4, *(_DWORD *)(v2 + 20));
  if (v79) {
    Swift::Int v78 = sub_10026B440(41);
  }
  int v80 = *(_DWORD *)(v2 + 20);
  BOOL v11 = __CFADD__(v80, v78);
  int v81 = v80 + v78;
  if (v11) {
    goto LABEL_72;
  }
  *(_DWORD *)(v2 + 20) = v81;
  if (__OFADD__(v77, v78))
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
}

BOOL sub_10026B3F4()
{
  return static ByteBuffer.== infix(_:_:)(v1, v2, v4, v0, v3, v5);
}

uint64_t sub_10026B41C()
{
  return sub_1005E3400();
}

Swift::Int sub_10026B440(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t sub_10026B46C()
{
  return swift_retain();
}

unint64_t sub_10026B4F0()
{
  unint64_t result = qword_100710C98;
  if (!qword_100710C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710C98);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedAuthenticationType()
{
  return &type metadata for EncodedAuthenticationType;
}

unint64_t sub_10026B550()
{
  unint64_t result = qword_100710CA0;
  if (!qword_100710CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedMailbox()
{
  return &type metadata for EncodedMailbox;
}

unint64_t sub_10026B5B0()
{
  unint64_t result = qword_100710CA8;
  if (!qword_100710CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedSearch()
{
  return &type metadata for EncodedSearch;
}

uint64_t EncodedSearchQuery.mailboxUIDValidity.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EncodedSearchQuery.mailboxUIDValidity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v3 = a1;
  *(void *)(v3 + 8) = a2;
  *(_DWORD *)(v3 + 16) = a3;
  *(unsigned char *)(v3 + 20) = BYTE4(a3) & 1;
  return result;
}

void __swiftcall EncodedSearchQuery.init(mailboxUIDValidity:encodedSearch:)(NIOIMAPCore2::EncodedSearchQuery *__return_ptr retstr, NIOIMAPCore2::MailboxUIDValidity mailboxUIDValidity, NIOIMAPCore2::EncodedSearch_optional encodedSearch)
{
  retstr->mailboxUIDValidity.encodedMailbox.mailbox._uint64_t countAndFlagsBits = mailboxUIDValidity.encodedMailbox.mailbox._countAndFlagsBits;
  retstr->mailboxUIDValidity.encodedMailbox.mailbox._Swift::Int object = mailboxUIDValidity.encodedMailbox.mailbox._object;
  retstr->mailboxUIDValidity.uidValidity.value.rawValue = mailboxUIDValidity.uidValidity.value.rawValue;
  retstr->mailboxUIDValidity.uidValidity.is_nil = mailboxUIDValidity.uidValidity.is_nil;
  retstr->encodedSearch = encodedSearch;
}

void EncodedSearchQuery.hash(into:)()
{
  *(_OWORD *)uint64_t v1 = *(_OWORD *)v0;
  *(void *)&v1[13] = *(void *)(v0 + 13);
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  if (v1[20] == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3440(*(Swift::UInt32 *)&v1[16]);
  }
  sub_10002A77C((uint64_t)v1);
  if (*(void *)(v0 + 32))
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
}

uint64_t static EncodedSearchQuery.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 20);
  int v6 = *(_DWORD *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 20);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_1005E3290(), result = 0, (v9 & 1) != 0))
  {
    if (v5)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if ((v7 & 1) != 0 || v4 != v6) {
        return result;
      }
    }
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a2 + 32);
    if (v11)
    {
      if (v12)
      {
        BOOL v13 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && v11 == v12;
        if (v13 || (sub_1005E3290() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

Swift::Int EncodedSearchQuery.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10026B8A8()
{
  return sub_1005E3470();
}

void sub_10026B8E8(uint64_t a1)
{
  uint64_t v2 = v1;
  *(_OWORD *)char v28 = *(_OWORD *)a1;
  *(void *)&v28[13] = *(void *)(a1 + 13);
  Swift::String v4 = *(Swift::String *)v28;
  uint64_t v5 = v1 + 8;
  Swift::Int v6 = *(unsigned int *)(v2 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(*(uint64_t *)v28, *(unint64_t *)&v28[8], v5, v6);
  Swift::Int v8 = v7;
  char v10 = v9;
  sub_10002A77C((uint64_t)v28);
  if (v10) {
    Swift::Int v8 = ByteBuffer._setStringSlowpath(_:at:)(v4, v6);
  }
  int v11 = *(_DWORD *)(v2 + 20);
  Swift::Int v12 = (v11 + v8);
  if (__CFADD__(v11, v8))
  {
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(_DWORD *)(v2 + 20) = v12;
  if (v28[20])
  {
    Swift::Int v13 = 0;
  }
  else
  {
    uint64_t v14 = sub_10026BD08();
    sub_100210AD0(v14, v15, v5, v12);
    if (v17)
    {
      v18._uint64_t countAndFlagsBits = sub_10026BD08();
      Swift::Int v16 = ByteBuffer._setStringSlowpath(_:at:)(v18, v12);
    }
    Swift::Int v19 = v16;
    int v20 = *(_DWORD *)(v2 + 20);
    BOOL v21 = __CFADD__(v20, v16);
    int v22 = v20 + v16;
    if (v21) {
      goto LABEL_19;
    }
    *(_DWORD *)(v2 + 20) = v22;
    uint64_t v23 = sub_1002BA570();
    Swift::Int v13 = v19 + v23;
    if (__OFADD__(v19, v23))
    {
LABEL_20:
      __break(1u);
      return;
    }
  }
  Swift::Int v24 = v8 + v13;
  if (__OFADD__(v8, v13)) {
    goto LABEL_17;
  }
  uint64_t v25 = *(void *)(a1 + 32);
  if (v25)
  {
    v27[0] = *(void *)(a1 + 24);
    v27[1] = v25;
    sub_10026BA4C(v27, v2);
  }
  else
  {
    uint64_t v26 = 0;
  }
  if (__OFADD__(v24, v26)) {
    goto LABEL_18;
  }
}

void sub_10026BA4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 8;
  Swift::Int v5 = *(unsigned int *)(a2 + 20);
  sub_100210AD0(63, 0xE100000000000000, a2 + 8, v5);
  if (v7)
  {
    v8._uint64_t countAndFlagsBits = 63;
    v8._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v5);
  }
  Swift::Int v9 = v6;
  int v10 = *(_DWORD *)(a2 + 20);
  Swift::Int v11 = (v10 + v6);
  if (__CFADD__(v10, v6))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 20) = v11;
  uint64_t v13 = *a1;
  Swift::Int v12 = (void *)a1[1];
  swift_bridgeObjectRetain();
  sub_100210AD0(v13, (unint64_t)v12, v4, v11);
  Swift::Int v15 = v14;
  char v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18._uint64_t countAndFlagsBits = v13;
    v18._Swift::Int object = v12;
    Swift::Int v15 = ByteBuffer._setStringSlowpath(_:at:)(v18, v11);
  }
  int v19 = *(_DWORD *)(a2 + 20);
  BOOL v20 = __CFADD__(v19, v15);
  int v21 = v19 + v15;
  if (v20) {
    goto LABEL_10;
  }
  *(_DWORD *)(a2 + 20) = v21;
  if (__OFADD__(v9, v15)) {
LABEL_11:
  }
    __break(1u);
}

unint64_t sub_10026BB48()
{
  unint64_t result = qword_100710CB0;
  if (!qword_100710CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CB0);
  }
  return result;
}

uint64_t destroy for EncodedSearchQuery()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EncodedSearchQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EncodedSearchQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EncodedSearchQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EncodedSearchQuery()
{
  return &type metadata for EncodedSearchQuery;
}

uint64_t sub_10026BD08()
{
  return 0x494C41564449553BLL;
}

unint64_t sub_10026BD30()
{
  unint64_t result = qword_100710CB8;
  if (!qword_100710CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedSection()
{
  return &type metadata for EncodedSection;
}

unint64_t sub_10026BD90()
{
  unint64_t result = qword_100710CC0;
  if (!qword_100710CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedAuthenticatedURL()
{
  return &type metadata for EncodedAuthenticatedURL;
}

unint64_t sub_10026BDF0()
{
  unint64_t result = qword_100710CC8;
  if (!qword_100710CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedUser()
{
  return &type metadata for EncodedUser;
}

unint64_t sub_10026BE50()
{
  unint64_t result = qword_100710CD0;
  if (!qword_100710CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EntryFlagName()
{
  return &type metadata for EntryFlagName;
}

void sub_10026BEAC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + 8;
  Swift::Int v7 = *(unsigned int *)(v3 + 20);
  uint64_t v8 = sub_10026BFEC();
  sub_100210AD0(v8, v9, v6, v7);
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = sub_10026BFEC();
    Swift::Int v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v7);
  }
  Swift::Int v13 = v10;
  int v14 = *(_DWORD *)(v3 + 20);
  Swift::Int v15 = (v14 + v10);
  if (__CFADD__(v14, v10))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(_DWORD *)(v3 + 20) = v15;
  swift_bridgeObjectRetain();
  sub_100210AD0(a1, (unint64_t)a2, v6, v15);
  Swift::Int v17 = v16;
  char v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    v20._uint64_t countAndFlagsBits = a1;
    v20._Swift::Int object = a2;
    Swift::Int v17 = ByteBuffer._setStringSlowpath(_:at:)(v20, v15);
  }
  int v21 = *(_DWORD *)(v3 + 20);
  Swift::Int v22 = (v21 + v17);
  if (__CFADD__(v21, v17)) {
    goto LABEL_14;
  }
  *(_DWORD *)(v3 + 20) = v22;
  if (__OFADD__(v13, v17))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_100210AD0(34, 0xE100000000000000, v6, v21 + v17);
  if (v24)
  {
    v25._uint64_t countAndFlagsBits = 34;
    v25._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
  }
  int v26 = *(_DWORD *)(v3 + 20);
  BOOL v27 = __CFADD__(v26, v23);
  int v28 = v26 + v23;
  if (v27) {
    goto LABEL_16;
  }
  *(_DWORD *)(v3 + 20) = v28;
  if (__OFADD__(v13 + v17, v23)) {
LABEL_17:
  }
    __break(1u);
}

uint64_t sub_10026BFEC()
{
  return 0x2F7367616C662F22;
}

const char *EntryKindRequest.private.unsafeMutableAddressor()
{
  return "priv";
}

uint64_t static EntryKindResponse.private.getter()
{
  return 1986622064;
}

const char *EntryKindRequest.shared.unsafeMutableAddressor()
{
  return "shared";
}

uint64_t static EntryKindResponse.shared.getter()
{
  return 0x646572616873;
}

void *EntryKindRequest.all.unsafeMutableAddressor()
{
  return &static EntryKindRequest.all;
}

uint64_t static EntryKindRequest.all.getter()
{
  return 7105633;
}

unint64_t sub_10026C060()
{
  unint64_t result = qword_100710CD8;
  if (!qword_100710CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for EntryKindRequest()
{
  return &type metadata for EntryKindRequest;
}

const char *EntryKindResponse.private.unsafeMutableAddressor()
{
  return "priv";
}

const char *EntryKindResponse.shared.unsafeMutableAddressor()
{
  return "shared";
}

unint64_t sub_10026C0D8()
{
  unint64_t result = qword_100710CE0;
  if (!qword_100710CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EntryKindResponse()
{
  return &type metadata for EntryKindResponse;
}

void sub_10026C134(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  BOOL v6 = __OFSUB__(v4, v5);
  uint64_t v7 = v4 - v5;
  char v8 = v6;
  char v34 = v8;
  uint64_t v33 = v7;
  v35._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v35);
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = 658813;
  v36._Swift::Int object = (void *)0xE300000000000000;
  sub_1005E1E30(v36);
  Swift::Int v9 = *(unsigned int *)(v1 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(31614, 0xE200000000000000, v1 + 8, v9);
  Swift::Int v11 = v10;
  char v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    v15._uint64_t countAndFlagsBits = 31614;
    v15._Swift::Int object = (void *)0xE200000000000000;
    Swift::Int v14 = ByteBuffer._setStringSlowpath(_:at:)(v15, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    Swift::Int v14 = v11;
  }
  int v16 = *(_DWORD *)(v1 + 20);
  uint64_t v17 = (v16 + v14);
  if (__CFADD__(v16, v14))
  {
    __break(1u);
    goto LABEL_22;
  }
  *(_DWORD *)(v1 + 20) = v17;
  if (((*(unsigned int *)(v1 + 1) | (unint64_t)((uint64_t)*(char *)(v1 + 5) << 32)) & 0x8000000000000000) == 0) {
    sub_100210E34(v17);
  }
  if (*(unsigned char *)v1 == 1)
  {
    sub_1000811BC(v3);
    sub_1001F8DE0(v3);
    sub_1000811E8(v3);
    swift_release();
    v37._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v37);
    swift_bridgeObjectRelease();
    v38._uint64_t countAndFlagsBits = 0x5D736574796220;
    v38._Swift::Int object = (void *)0xE700000000000000;
    sub_1005E1E30(v38);
    uint64_t v3 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_100210AD0(91, 0xE100000000000000, v1 + 8, v17);
    Swift::Int v19 = v18;
    char v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      v22._uint64_t countAndFlagsBits = 91;
      v22._Swift::Int object = (void *)0xE100000000000000;
      Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v22, v17);
    }
    swift_bridgeObjectRelease();
    int v23 = *(_DWORD *)(v2 + 20);
    BOOL v24 = __CFADD__(v23, v19);
    int v25 = v23 + v19;
    if (!v24) {
      goto LABEL_19;
    }
    __break(1u);
  }
  uint64_t v26 = *(void *)v3;
  uint64_t v27 = *(unsigned __int16 *)(v3 + 20);
  uint64_t v28 = *(unsigned __int8 *)(v3 + 22);
  int v29 = (void *)(v26 + 24);
  swift_beginAccess();
  if (v34)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v30 = *v29 + (v28 | (v27 << 8)) + v5;
  ByteBuffer._setBytes(_:at:)(v30, v30 + v33, v17);
  int v32 = *(_DWORD *)(v2 + 20);
  BOOL v24 = __CFADD__(v32, v31);
  int v25 = v32 + v31;
  if (v24)
  {
LABEL_24:
    __break(1u);
    return;
  }
  Swift::Int v19 = v31;
LABEL_19:
  *(_DWORD *)(v2 + 20) = v25;
  if (__OFADD__(v14, v19))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
}

void sub_10026C3EC(uint64_t a1)
{
  uint64_t v2 = v1;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)a1;
  *(void *)&v26[15] = *(void *)(a1 + 15);
  swift_beginAccess();
  sub_1000811BC((uint64_t)v26);
  unint64_t v4 = sub_1005E1D70();
  unint64_t v6 = v5;
  sub_1000811E8((uint64_t)v26);
  swift_bridgeObjectRetain();
  Swift::Int v7 = sub_10025DCBC(v4, v6);
  swift_bridgeObjectRelease_n();
  Swift::Int v8 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(32, 0xE100000000000000, v2 + 8, *(_DWORD *)(v2 + 20));
  if (v10)
  {
    v11._uint64_t countAndFlagsBits = 32;
    v11._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v9 = ByteBuffer._setStringSlowpath(_:at:)(v11, v8);
  }
  int v12 = *(_DWORD *)(v2 + 20);
  Swift::Int v13 = (v12 + v9);
  if (__CFADD__(v12, v9))
  {
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v2 + 20) = v13;
  BOOL v14 = __OFADD__(v7, v9);
  Swift::Int v15 = v7 + v9;
  if (v14)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(_OWORD *)int v25 = *(_OWORD *)(a1 + 24);
  *(void *)&v25[15] = *(void *)(a1 + 39);
  if (*(void *)v25)
  {
    if (HIDWORD(*(void *)&v25[8]) < (unint64_t)*(unsigned int *)&v25[8])
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    int v16 = *(unsigned __int16 *)&v25[20] | (v25[22] << 16);
    if (HIDWORD(*(void *)&v25[8]) > *(_DWORD *)&v25[16]
                                     - (((*(unsigned int *)&v25[16] | ((unint64_t)(v16 & 0xFFFFFF) << 32)) >> 48) | (*(unsigned __int16 *)&v25[20] << 8)))
    {
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return;
    }
    long long v27 = *(_OWORD *)v25;
    int v28 = *(_DWORD *)&v25[16];
    __int16 v29 = *(_WORD *)&v25[20];
    char v30 = BYTE2(v16);
    uint64_t v31 = *(unsigned int *)&v25[8];
    uint64_t v32 = HIDWORD(*(void *)&v25[8]);
    swift_retain();
    sub_10026C134((uint64_t)&v27);
    Swift::Int v18 = v17;
    sub_1000811E8((uint64_t)v25);
  }
  else
  {
    sub_100210AD0(4999502, 0xE300000000000000, v2 + 8, v13);
    if (v20)
    {
      v21._uint64_t countAndFlagsBits = 4999502;
      v21._Swift::Int object = (void *)0xE300000000000000;
      Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v21, v13);
    }
    Swift::Int v18 = v19;
    int v22 = *(_DWORD *)(v2 + 20);
    BOOL v23 = __CFADD__(v22, v19);
    int v24 = v22 + v19;
    if (v23) {
      goto LABEL_20;
    }
    *(_DWORD *)(v2 + 20) = v24;
  }
  if (__OFADD__(v15, v18))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

BOOL static Envelope.__derived_struct_equals(_:_:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *(void *)a2 && v4 == v5;
  if (v6 || (char v7 = sub_1005E3290(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = a1[2];
    uint64_t v10 = *(void *)(a2 + 16);
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      unint64_t v11 = a1[3];
      sub_10026D94C();
      uint64_t v14 = *(void *)(a2 + 24);
      unint64_t v15 = (v13 | (v12 << 32)) & 0xFFFFFFFFFFFFFFLL;
      unint64_t v16 = (*(unsigned int *)(a2 + 32) | ((unint64_t)(*(unsigned __int16 *)(a2 + 36) | (*(unsigned __int8 *)(a2 + 38) << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain();
      LOBYTE(v11) = static ByteBuffer.== infix(_:_:)(v9, v11, v15, v10, v14, v16);
      swift_release();
      swift_release();
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    sub_10021A368();
    if ((v17 & 1) == 0) {
      return 0;
    }
    sub_10021A368();
    if ((v18 & 1) == 0) {
      return 0;
    }
    sub_10021A368();
    if ((v19 & 1) == 0) {
      return 0;
    }
    sub_10021A368();
    if ((v20 & 1) == 0) {
      return 0;
    }
    sub_10021A368();
    if ((v21 & 1) == 0) {
      return 0;
    }
    sub_10021A368();
    if ((v22 & 1) == 0) {
      return 0;
    }
    uint64_t v23 = a1[12];
    uint64_t v24 = *(void *)(a2 + 96);
    if (v23)
    {
      if (!v24) {
        return 0;
      }
      if (a1[11] != *(void *)(a2 + 88) || v23 != v24)
      {
        char v26 = sub_1005E3290();
        BOOL result = 0;
        if ((v26 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v24)
    {
      return 0;
    }
    uint64_t v27 = a1[14];
    uint64_t v28 = *(void *)(a2 + 112);
    if (v27)
    {
      if (!v28) {
        return 0;
      }
      BOOL v29 = a1[13] == *(void *)(a2 + 104) && v27 == v28;
      return v29 || (sub_1005E3290() & 1) != 0;
    }
    return !v28;
  }
  return result;
}

void sub_10026C7F0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100210AD0(40, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
  if (v5) {
    Swift::Int v4 = sub_10026D8F8(40, 0xE100000000000000);
  }
  Swift::Int v6 = v4;
  int v7 = *(_DWORD *)(v1 + 20);
  if (__CFADD__(v7, v4))
  {
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  *(_DWORD *)(v1 + 20) = v7 + v4;
  sub_10026D898(a1, (uint64_t)v84, &qword_100710CF0);
  sub_10026D898((uint64_t)v84, (uint64_t)&v91, &qword_100710CF0);
  unint64_t v8 = v92;
  if (v92)
  {
    unint64_t v9 = v91;
    swift_bridgeObjectRetain();
    Swift::Int v10 = sub_10025DCBC(v9, v8);
    sub_10002A77C((uint64_t)v84);
  }
  else
  {
    sub_10026D910(4999502, 0xE300000000000000);
    if (v12) {
      Swift::Int v11 = sub_10026D8F8(4999502, 0xE300000000000000);
    }
    Swift::Int v10 = v11;
    int v13 = *(_DWORD *)(v1 + 20);
    BOOL v14 = __CFADD__(v13, v11);
    int v15 = v13 + v11;
    if (v14) {
      goto LABEL_114;
    }
    *(_DWORD *)(v1 + 20) = v15;
  }
  BOOL v16 = __OFADD__(v6, v10);
  Swift::Int v17 = v6 + v10;
  if (v16) {
    goto LABEL_82;
  }
  sub_100238EE0();
  if (v19) {
    Swift::Int v18 = sub_100238EC0();
  }
  int v20 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v20, v18)) {
    goto LABEL_83;
  }
  *(_DWORD *)(v2 + 20) = v20 + v18;
  Swift::Int v21 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  if (*(void *)(a1 + 16))
  {
    unint64_t v22 = *(void *)(a1 + 24);
    if (HIDWORD(v22) < v22)
    {
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    int v23 = *(unsigned __int16 *)(a1 + 36) | (*(unsigned __int8 *)(a1 + 38) << 16);
    unsigned int v24 = *(_DWORD *)(a1 + 32);
    if (HIDWORD(v22) > v24 - (((v24 | ((*(void *)&v23 & 0xFFFFFFuLL) << 32)) >> 48) | ((unsigned __int16)v23 << 8)))
    {
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      return;
    }
    v85[0] = *(void *)(a1 + 16);
    v85[1] = v22;
    unsigned int v86 = v24;
    __int16 v87 = v23;
    char v88 = BYTE2(v23);
    uint64_t v89 = v22;
    unint64_t v90 = HIDWORD(v22);
    swift_retain();
    Swift::Int v25 = sub_10025E0BC(v85);
    swift_release();
  }
  else
  {
    sub_10026D910(4999502, 0xE300000000000000);
    if (v27) {
      Swift::Int v26 = sub_10026D8F8(4999502, 0xE300000000000000);
    }
    Swift::Int v25 = v26;
    int v28 = *(_DWORD *)(v2 + 20);
    BOOL v14 = __CFADD__(v28, v26);
    int v29 = v28 + v26;
    if (v14) {
      goto LABEL_115;
    }
    *(_DWORD *)(v2 + 20) = v29;
  }
  Swift::Int v30 = v21 + v25;
  if (__OFADD__(v21, v25)) {
    goto LABEL_85;
  }
  sub_100238EE0();
  if (v31) {
    sub_100238EC0();
  }
  sub_1001F4888();
  if (v14) {
    goto LABEL_86;
  }
  sub_10026D928(v32);
  if (v16)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  sub_10026D2C0(*(void *)(a1 + 40));
  BOOL v16 = __OFADD__(v30, v33);
  Swift::Int v34 = v30 + v33;
  if (v16)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  sub_100238EE0();
  if (v35) {
    sub_100238EC0();
  }
  sub_1001F4888();
  if (v14) {
    goto LABEL_89;
  }
  sub_10026D928(v36);
  if (v16)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  sub_10026D2C0(*(void *)(a1 + 48));
  BOOL v16 = __OFADD__(v34, v37);
  Swift::Int v38 = v34 + v37;
  if (v16)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  sub_100238EE0();
  if (v39) {
    sub_100238EC0();
  }
  sub_1001F4888();
  if (v14) {
    goto LABEL_92;
  }
  sub_10026D928(v40);
  if (v16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  sub_10026D2C0(*(void *)(a1 + 56));
  BOOL v16 = __OFADD__(v38, v41);
  uint64_t v42 = v38 + v41;
  if (v16)
  {
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  sub_100238EE0();
  if (v43) {
    sub_100238EC0();
  }
  sub_1001F4888();
  if (v14) {
    goto LABEL_95;
  }
  sub_10026D928(v44);
  if (v16)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  sub_10026D2C0(*(void *)(a1 + 64));
  BOOL v16 = __OFADD__(v42, v45);
  uint64_t v46 = v42 + v45;
  if (v16)
  {
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  sub_100238EE0();
  if (v47) {
    sub_100238EC0();
  }
  sub_1001F4888();
  if (v14) {
    goto LABEL_98;
  }
  sub_10026D928(v48);
  if (v16)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  sub_10026D2C0(*(void *)(a1 + 72));
  BOOL v16 = __OFADD__(v46, v49);
  uint64_t v50 = v46 + v49;
  if (v16)
  {
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  sub_100238EE0();
  if (v51) {
    sub_100238EC0();
  }
  sub_1001F4888();
  if (v14) {
    goto LABEL_101;
  }
  sub_10026D928(v52);
  if (v16)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  sub_10026D2C0(*(void *)(a1 + 80));
  BOOL v16 = __OFADD__(v50, v53);
  uint64_t v54 = v50 + v53;
  if (v16)
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  sub_100238EE0();
  if (v56) {
    Swift::Int v55 = sub_100238EC0();
  }
  int v57 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v57, v55)) {
    goto LABEL_104;
  }
  *(_DWORD *)(v2 + 20) = v57 + v55;
  Swift::Int v58 = v54 + v55;
  if (__OFADD__(v54, v55))
  {
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
  sub_10026D898(a1 + 88, (uint64_t)v83, &qword_100710CF8);
  sub_10026D898((uint64_t)v83, (uint64_t)&v93, &qword_100710CF8);
  unint64_t v59 = v94;
  if (v94)
  {
    unint64_t v60 = v93;
    swift_bridgeObjectRetain();
    Swift::Int v61 = sub_10025DCBC(v60, v59);
    sub_10002A77C((uint64_t)v83);
  }
  else
  {
    sub_10026D910(4999502, 0xE300000000000000);
    if (v63) {
      Swift::Int v62 = sub_10026D8F8(4999502, 0xE300000000000000);
    }
    Swift::Int v61 = v62;
    int v64 = *(_DWORD *)(v2 + 20);
    BOOL v14 = __CFADD__(v64, v62);
    int v65 = v64 + v62;
    if (v14) {
      goto LABEL_116;
    }
    *(_DWORD *)(v2 + 20) = v65;
  }
  BOOL v16 = __OFADD__(v58, v61);
  Swift::Int v66 = v58 + v61;
  if (v16) {
    goto LABEL_106;
  }
  sub_100238EE0();
  if (v68) {
    Swift::Int v67 = sub_100238EC0();
  }
  int v69 = *(_DWORD *)(v2 + 20);
  if (__CFADD__(v69, v67)) {
    goto LABEL_107;
  }
  *(_DWORD *)(v2 + 20) = v69 + v67;
  BOOL v16 = __OFADD__(v66, v67);
  Swift::Int v70 = v66 + v67;
  if (v16)
  {
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  sub_10026D898(a1 + 104, (uint64_t)v82, &qword_100710CF8);
  sub_10026D898((uint64_t)v82, (uint64_t)&v95, &qword_100710CF8);
  unint64_t v71 = v96;
  if (v96)
  {
    unint64_t v72 = v95;
    swift_bridgeObjectRetain();
    Swift::Int v73 = sub_10025DCBC(v72, v71);
    sub_10002A77C((uint64_t)v82);
  }
  else
  {
    sub_10026D910(4999502, 0xE300000000000000);
    if (v75) {
      Swift::Int v74 = sub_10026D8F8(4999502, 0xE300000000000000);
    }
    Swift::Int v73 = v74;
    int v76 = *(_DWORD *)(v2 + 20);
    BOOL v14 = __CFADD__(v76, v74);
    int v77 = v76 + v74;
    if (v14) {
      goto LABEL_117;
    }
    *(_DWORD *)(v2 + 20) = v77;
  }
  BOOL v16 = __OFADD__(v70, v73);
  Swift::Int v78 = v70 + v73;
  if (v16) {
    goto LABEL_109;
  }
  sub_10026D910(41, 0xE100000000000000);
  if (v79) {
    sub_10026D8F8(41, 0xE100000000000000);
  }
  sub_1001F4888();
  if (v14) {
    goto LABEL_110;
  }
  *(_DWORD *)(v2 + 20) = v81;
  if (__OFADD__(v78, v80))
  {
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
}

uint64_t Envelope.subject.getter()
{
  return swift_retain();
}

uint64_t Envelope.subject.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_release();
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 38) = BYTE6(a3);
  *(_WORD *)(v3 + 36) = WORD2(a3);
  *(_DWORD *)(v3 + 32) = a3;
  return result;
}

uint64_t ContentType.attributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t Envelope.sender.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t PushRegistrationInfo.mailboxes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t Envelope.to.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Envelope.to.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t Envelope.cc.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Envelope.cc.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t Envelope.bcc.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Envelope.bcc.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *DisplayPart.Attachment.contentID.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t Envelope.inReplyTo.getter()
{
  return sub_100240798();
}

uint64_t Envelope.inReplyTo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t Envelope.messageID.getter()
{
  return sub_100240798();
}

uint64_t Envelope.messageID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

Swift::UInt32 (__swiftcall *DisplayPart.Attachment.estimatedDecodedSize.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

__n128 Envelope.init(date:subject:from:sender:reply:to:cc:bcc:inReplyTo:messageID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, __n128 a12, uint64_t a13)
{
  __n128 result = a12;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(_DWORD *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 38) = BYTE6(a5);
  *(_WORD *)(a9 + 36) = WORD2(a5);
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(__n128 *)(a9 + 96) = a12;
  *(void *)(a9 + 112) = a13;
  return result;
}

void Envelope.hash(into:)()
{
  if (v0[1])
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  if (v0[2])
  {
    sub_1005E3420(1u);
    swift_beginAccess();
    sub_1005E3400();
  }
  else
  {
    sub_1005E3420(0);
  }
  swift_bridgeObjectRetain();
  sub_10026D934();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10026D934();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10026D934();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10026D934();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10026D934();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10026D934();
  swift_bridgeObjectRelease();
  if (v0[12])
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  if (v0[14])
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
}

Swift::Int Envelope.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10026D280()
{
  return sub_1005E3470();
}

void sub_10026D2C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = v1 + 8;
  Swift::Int v4 = *(unsigned int *)(v2 + 20);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_12;
  }
  sub_100210AD0(40, 0xE100000000000000, v3, *(_DWORD *)(v2 + 20));
  if (v7)
  {
    v8._uint64_t countAndFlagsBits = 40;
    v8._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v4);
  }
  Swift::Int v9 = v6;
  int v10 = *(_DWORD *)(v2 + 20);
  BOOL v11 = __CFADD__(v10, v6);
  int v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v2 + 20) = v12;
  sub_1001E8CF0(a1, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, v2);
  Swift::Int v4 = v9 + v13;
  if (__OFADD__(v9, v13))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  Swift::Int v14 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(41, 0xE100000000000000, v3, *(_DWORD *)(v2 + 20));
  if (v15)
  {
    v16._uint64_t countAndFlagsBits = 41;
    v16._Swift::Int object = (void *)0xE100000000000000;
    ByteBuffer._setStringSlowpath(_:at:)(v16, v14);
  }
  sub_1001F4888();
  if (v11) {
    goto LABEL_18;
  }
  *(_DWORD *)(v2 + 20) = v18;
  if (__OFADD__(v4, v17))
  {
    __break(1u);
LABEL_12:
    sub_100210AD0(4999502, 0xE300000000000000, v3, v4);
    if (v19)
    {
      v20._uint64_t countAndFlagsBits = 4999502;
      v20._Swift::Int object = (void *)0xE300000000000000;
      ByteBuffer._setStringSlowpath(_:at:)(v20, v4);
    }
    sub_1001F4888();
    if (!v11)
    {
      *(_DWORD *)(v2 + 20) = v21;
      return;
    }
    goto LABEL_19;
  }
}

unint64_t sub_10026D414()
{
  unint64_t result = qword_100710CE8;
  if (!qword_100710CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710CE8);
  }
  return result;
}

uint64_t destroy for Envelope()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Envelope(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Envelope(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Envelope(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Envelope(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Envelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Envelope()
{
  return &type metadata for Envelope;
}

uint64_t sub_10026D898(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000566C(a3);
  uint64_t v4 = sub_100240798();
  v5(v4);
  return a2;
}

Swift::Int sub_10026D8F8(uint64_t a1, uint64_t a2)
{
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

void sub_10026D910(uint64_t a1, unint64_t a2)
{
  sub_100210AD0(a1, a2, v3, v2);
}

void sub_10026D928(int a1@<W8>)
{
  *(_DWORD *)(v1 + 20) = a1;
}

void sub_10026D934()
{
  sub_100226CD4(v0, v1);
}

__n128 Expire.dateTime.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  char v3 = *(unsigned char *)(v1 + 56);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  return result;
}

__n128 Expire.dateTime.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  *(void *)(v1 + 48) = v2;
  *(unsigned char *)(v1 + 56) = v3 & 1;
  return result;
}

void __swiftcall Expire.init(dateTime:)(NIOIMAPCore2::Expire *__return_ptr retstr, NIOIMAPCore2::FullDateTime *dateTime)
{
  Swift::Int value = dateTime->time.fraction.value;
  Swift::Bool is_nil = dateTime->time.fraction.is_nil;
  long long v4 = *(_OWORD *)&dateTime->date.day;
  *(_OWORD *)&retstr->dateTime.date.year = *(_OWORD *)&dateTime->date.year;
  *(_OWORD *)&retstr->dateTime.date.day = v4;
  *(_OWORD *)&retstr->dateTime.time.minute = *(_OWORD *)&dateTime->time.minute;
  retstr->dateTime.time.fraction.Swift::Int value = value;
  retstr->dateTime.time.fraction.Swift::Bool is_nil = is_nil;
}

void Expire.hash(into:)()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  Swift::UInt v2 = *(void *)(v0 + 16);
  Swift::UInt v3 = *(void *)(v0 + 24);
  Swift::UInt v4 = *(void *)(v0 + 32);
  Swift::UInt v5 = *(void *)(v0 + 40);
  Swift::UInt v6 = *(void *)(v0 + 48);
  char v7 = *(unsigned char *)(v0 + 56);
  sub_1005E3410(*(void *)v0);
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  sub_1005E3410(v4);
  sub_1005E3410(v5);
  if (v7)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(v6);
  }
}

uint64_t static Expire.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  BOOL v2 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  BOOL v3 = v2 && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  BOOL v4 = v3 && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (!v4 || *(void *)(a1 + 40) != *(void *)(a2 + 40)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 56))
  {
    if ((*(unsigned char *)(a2 + 56) & 1) == 0) {
      return 0;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 1) != 0 || *(void *)(a1 + 48) != *(void *)(a2 + 48))
  {
    return 0;
  }
  return 1;
}

Swift::Int Expire.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10026DB30()
{
  return sub_1005E3470();
}

unint64_t sub_10026DB74()
{
  unint64_t result = qword_100710D00;
  if (!qword_100710D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710D00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FullDateTime(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FullDateTime(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 57) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Expire()
{
  return &type metadata for Expire;
}

void sub_10026DC2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    goto LABEL_63;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  unint64_t v7 = *(unsigned int *)(a1 + 64) | ((unint64_t)*(unsigned __int8 *)(a1 + 68) << 32);
  if (*(unsigned __int8 *)(a1 + 68) >> 5 >= 6u && (v6 | v4 | v3 | v5 || v7 != 0xC000000000))
  {
    BOOL v9 = v7 == 0xC000000000 && v3 == 1;
    if (v9 && (v6 | v4 | v5) == 0) {
      goto LABEL_40;
    }
  }
  if (v2 == 1) {
    goto LABEL_63;
  }
  sub_100270434();
  while (1)
  {
    uint64_t v14 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v15 = *v12 | ((unint64_t)*((unsigned __int8 *)v12 + 4) << 32);
    if (((v15 >> 37) & 7) >= 6)
    {
      uint64_t v16 = *((void *)v12 - 4);
      uint64_t v17 = *((void *)v12 - 1);
      uint64_t v18 = *((void *)v12 - 2) | *((void *)v12 - 3);
      uint64_t v19 = v15 & 0xFFFFFFFFFFLL;
      if (v18 | v16 | v17 || v19 != 0xC000000000)
      {
        uint64_t v21 = v18 | v17;
        BOOL v22 = v19 == 0xC000000000 && v16 == 1;
        if (v22 && v21 == 0) {
          break;
        }
      }
    }
    v12 += 10;
    ++v13;
    if (v14 == v2) {
      goto LABEL_63;
    }
  }
  if (v11 < 6
    || (sub_100270480(), !(v26 | v25)) && v24 == 0xC000000000
    || ((sub_100270440(), v28 == v34) ? (BOOL v35 = v27 == 1) : (BOOL v35 = 0),
        v35 && !v33 || (v28 == v34 ? (BOOL v50 = v27 == 2) : (BOOL v50 = 0), !v50 || v33)))
  {
LABEL_40:
    if (v2 == 1) {
      goto LABEL_63;
    }
    sub_100270434();
    while (1)
    {
      uint64_t v38 = v37 + 1;
      if (__OFADD__(v37, 1)) {
        break;
      }
      unint64_t v39 = *v36 | ((unint64_t)*((unsigned __int8 *)v36 + 4) << 32);
      if (((v39 >> 37) & 7) >= 6)
      {
        uint64_t v40 = *((void *)v36 - 4);
        uint64_t v41 = *((void *)v36 - 1);
        uint64_t v42 = *((void *)v36 - 2) | *((void *)v36 - 3);
        uint64_t v43 = v39 & 0xFFFFFFFFFFLL;
        if (v42 | v40 | v41 || v43 != 0xC000000000)
        {
          uint64_t v45 = v42 | v41;
          BOOL v46 = v43 == 0xC000000000 && v40 == 1;
          if (!v46 || v45 != 0)
          {
            BOOL v48 = (v39 & 0xFFFFFFFFFFLL) == 0xC000000000 && v40 == 2;
            if (v48 && v45 == 0) {
              goto LABEL_70;
            }
          }
        }
      }
      v36 += 10;
      ++v37;
      if (v38 == v2) {
        goto LABEL_63;
      }
    }
    __break(1u);
    goto LABEL_286;
  }
LABEL_70:
  if (v2 == 5)
  {
LABEL_211:
    if (v32 >= 6)
    {
      sub_100270480();
      if (v101 | v100 || v99 != 0xC000000000)
      {
        sub_100270440();
        BOOL v106 = v103 == v105 && v102 == 1;
        if (!v106 || v104)
        {
          BOOL v107 = v103 == v105 && v102 == 2;
          if (!v107 || v104)
          {
            BOOL v108 = v103 == v105 && v102 == 3;
            if (!v108 || v104)
            {
              BOOL v109 = v103 == v105 && v102 == 4;
              if (!v109 || v104)
              {
                BOOL v110 = v103 == v105 && v102 == 5;
                if (v110 && !v104) {
                  goto LABEL_292;
                }
              }
            }
          }
        }
      }
    }
    sub_100270434();
    while (1)
    {
      uint64_t v113 = v112 + 1;
      if (__OFADD__(v112, 1)) {
        break;
      }
      unint64_t v114 = *v111 | ((unint64_t)*((unsigned __int8 *)v111 + 4) << 32);
      if (((v114 >> 37) & 7) >= 6)
      {
        uint64_t v115 = *((void *)v111 - 4);
        uint64_t v116 = *((void *)v111 - 1);
        uint64_t v117 = *((void *)v111 - 2) | *((void *)v111 - 3);
        uint64_t v118 = v114 & 0xFFFFFFFFFFLL;
        if (v117 | v115 | v116 || v118 != 0xC000000000)
        {
          uint64_t v120 = v117 | v116;
          BOOL v121 = v118 == 0xC000000000 && v115 == 1;
          if (!v121 || v120 != 0)
          {
            BOOL v123 = (v114 & 0xFFFFFFFFFFLL) == 0xC000000000 && v115 == 2;
            if (!v123 || v120 != 0)
            {
              BOOL v125 = (v114 & 0xFFFFFFFFFFLL) == 0xC000000000 && v115 == 3;
              if (!v125 || v120)
              {
                BOOL v126 = (v114 & 0xFFFFFFFFFFLL) == 0xC000000000 && v115 == 4;
                if (!v126 || v120)
                {
                  BOOL v127 = (v114 & 0xFFFFFFFFFFLL) == 0xC000000000 && v115 == 5;
                  if (v127 && !v120) {
                    goto LABEL_287;
                  }
                }
              }
            }
          }
        }
      }
      v111 += 10;
      ++v112;
      if (v113 == v2) {
        goto LABEL_63;
      }
    }
LABEL_286:
    __break(1u);
LABEL_287:
    if (v32 >= 6)
    {
      sub_100270480();
      if (!(v131 | v130) && v129 == 0xC000000000) {
        goto LABEL_340;
      }
      sub_100270440();
    }
    if (v2 == 1) {
      goto LABEL_63;
    }
LABEL_292:
    sub_100270434();
    while (1)
    {
      uint64_t v136 = v135 + 1;
      if (__OFADD__(v135, 1))
      {
        __break(1u);
        goto LABEL_360;
      }
      unint64_t v137 = *v134 | ((unint64_t)*((unsigned __int8 *)v134 + 4) << 32);
      if (((v137 >> 37) & 7) >= 6
        && !(*((void *)v134 - 2) | *((void *)v134 - 3) | *((void *)v134 - 4) | *((void *)v134 - 1))
        && (v137 & 0xFFFFFFFFFFLL) == 0xC000000000)
      {
        break;
      }
      v134 += 10;
      ++v135;
      if (v136 == v128) {
        goto LABEL_63;
      }
    }
    if ((v133 - 1) >= 5 && !v133 && (v132 & 1) == 0)
    {
LABEL_353:
      Swift::Int v160 = *(unsigned int *)(v1 + 20);
      sub_100270464(1280070982, 0xE400000000000000);
      if (v161)
      {
        v162._uint64_t countAndFlagsBits = 1280070982;
        v162._Swift::Int object = (void *)0xE400000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v162, v160);
      }
      sub_1001F4888();
      if (v143)
      {
        __break(1u);
        goto LABEL_340;
      }
      goto LABEL_338;
    }
LABEL_340:
    if (v128 != 1)
    {
      uint64_t v156 = (unsigned int *)(a1 + 104);
      uint64_t v157 = 1;
      while (1)
      {
        uint64_t v158 = v157 + 1;
        if (__OFADD__(v157, 1)) {
          break;
        }
        unint64_t v159 = *v156 | ((unint64_t)*((unsigned __int8 *)v156 + 4) << 32);
        if ((v159 >> 37) - 1 >= 5 && !(v159 >> 37) && (*((void *)v156 - 4) & 1) == 0) {
          goto LABEL_353;
        }
        v156 += 10;
        ++v157;
        if (v158 == v128) {
          goto LABEL_63;
        }
      }
LABEL_361:
      __break(1u);
      goto LABEL_362;
    }
    goto LABEL_63;
  }
  if (v2 == 4)
  {
    if (v32 < 6
      || (sub_100270480(), !(v73 | v72)) && v71 == 0xC000000000
      || ((sub_100270440(), v75 == v77) ? (BOOL v78 = v74 == 1) : (BOOL v78 = 0),
          v78 && !v76
       || (v75 == v77 ? (BOOL v79 = v74 == 2) : (BOOL v79 = 0),
           v79 && !v76
        || (v75 == v77 ? (BOOL v80 = v74 == 3) : (BOOL v80 = 0),
            v80 && !v76 || (v75 == v77 ? (BOOL v81 = v74 == 4) : (BOOL v81 = 0), v81 && !v76)))))
    {
LABEL_170:
      sub_100270434();
      while (1)
      {
        int v84 = (unsigned int *)(v83 + 1);
        if (__OFADD__(v83, 1)) {
          goto LABEL_320;
        }
        unint64_t v85 = *v82 | ((unint64_t)*((unsigned __int8 *)v82 + 4) << 32);
        if (((v85 >> 37) & 7) >= 6)
        {
          uint64_t v86 = *((void *)v82 - 4);
          uint64_t v87 = *((void *)v82 - 1);
          uint64_t v88 = *((void *)v82 - 2) | *((void *)v82 - 3);
          uint64_t v89 = v85 & 0xFFFFFFFFFFLL;
          if (v88 | v86 | v87 || v89 != 0xC000000000)
          {
            uint64_t v91 = v88 | v87;
            BOOL v92 = v89 == 0xC000000000 && v86 == 1;
            if (!v92 || v91 != 0)
            {
              BOOL v94 = (v85 & 0xFFFFFFFFFFLL) == 0xC000000000 && v86 == 2;
              if (!v94 || v91 != 0)
              {
                BOOL v96 = (v85 & 0xFFFFFFFFFFLL) == 0xC000000000 && v86 == 3;
                if (!v96 || v91)
                {
                  BOOL v97 = (v85 & 0xFFFFFFFFFFLL) == 0xC000000000 && v86 == 4;
                  if (!v97 || v91)
                  {
                    BOOL v98 = (v85 & 0xFFFFFFFFFFLL) == 0xC000000000 && v86 == 5;
                    if (v98 && !v91) {
                      goto LABEL_321;
                    }
                  }
                }
              }
            }
          }
        }
        v82 += 10;
        ++v83;
        if (v84 == v56)
        {
LABEL_210:
          if (v56 != (unsigned int *)5) {
            goto LABEL_63;
          }
          goto LABEL_211;
        }
      }
    }
LABEL_312:
    BOOL v144 = v75 == v77 && v74 == 5;
    if (v144 && !v76)
    {
LABEL_323:
      sub_100270434();
      while (1)
      {
        uint64_t v147 = (unsigned int *)(v146 + 1);
        if (__OFADD__(v146, 1)) {
          break;
        }
        unint64_t v148 = *v145 | ((unint64_t)*((unsigned __int8 *)v145 + 4) << 32);
        if (((v148 >> 37) & 7) >= 6
          && !(*((void *)v145 - 2) | *((void *)v145 - 3) | *((void *)v145 - 4) | *((void *)v145 - 1))
          && (v148 & 0xFFFFFFFFFFLL) == 0xC000000000)
        {
          goto LABEL_335;
        }
        v145 += 10;
        ++v146;
        if (v147 == v56) {
          goto LABEL_210;
        }
      }
LABEL_360:
      __break(1u);
      goto LABEL_361;
    }
    goto LABEL_170;
  }
  if (v2 != 3) {
    goto LABEL_63;
  }
  if (v32 >= 6 && (v31 | v30 | v27 | v29 || v28 != 0xC000000000))
  {
    uint64_t v51 = v31 | v30 | v29;
    BOOL v52 = v28 == 0xC000000000 && v27 == 1;
    if (!v52 || v51)
    {
      BOOL v53 = v28 == 0xC000000000 && v27 == 2;
      if (!v53 || v51)
      {
        BOOL v54 = v28 == 0xC000000000 && v27 == 3;
        if (!v54 || v51)
        {
          BOOL v55 = v28 == 0xC000000000 && v27 == 4;
          if (!v55 || v51)
          {
            BOOL v139 = v28 == 0xC000000000 && v27 == 5;
            if (v139 && !v51)
            {
LABEL_307:
              Swift::Int v140 = *(unsigned int *)(v1 + 20);
              sub_100270464(1414742342, 0xE400000000000000);
              if (v141)
              {
                v142._uint64_t countAndFlagsBits = 1414742342;
                v142._Swift::Int object = (void *)0xE400000000000000;
                ByteBuffer._setStringSlowpath(_:at:)(v142, v140);
              }
              sub_1001F4888();
              if (!v143) {
                goto LABEL_338;
              }
              __break(1u);
              goto LABEL_312;
            }
          }
        }
      }
    }
  }
  char v56 = (unsigned int *)(a1 + 104);
  uint64_t v57 = 1;
  while (1)
  {
    uint64_t v58 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    unint64_t v59 = *v56 | ((unint64_t)*((unsigned __int8 *)v56 + 4) << 32);
    if (((v59 >> 37) & 7) >= 6)
    {
      uint64_t v60 = *((void *)v56 - 4);
      uint64_t v32 = *((void *)v56 - 1);
      uint64_t v61 = *((void *)v56 - 2) | *((void *)v56 - 3);
      uint64_t v62 = v59 & 0xFFFFFFFFFFLL;
      if (v61 | v60 | v32 || v62 != 0xC000000000)
      {
        v32 |= v61;
        BOOL v64 = v62 == 0xC000000000 && v60 == 1;
        if (!v64 || v32 != 0)
        {
          BOOL v66 = (v59 & 0xFFFFFFFFFFLL) == 0xC000000000 && v60 == 2;
          if (!v66 || v32 != 0)
          {
            BOOL v68 = (v59 & 0xFFFFFFFFFFLL) == 0xC000000000 && v60 == 3;
            if (!v68 || v32)
            {
              BOOL v69 = (v59 & 0xFFFFFFFFFFLL) == 0xC000000000 && v60 == 4;
              if (!v69 || v32)
              {
                BOOL v70 = (v59 & 0xFFFFFFFFFFLL) == 0xC000000000 && v60 == 5;
                if (v70 && !v32) {
                  goto LABEL_307;
                }
              }
            }
          }
        }
      }
    }
    v56 += 10;
    ++v57;
    if (v58 == 3) {
      goto LABEL_63;
    }
  }
  __break(1u);
LABEL_320:
  __break(1u);
LABEL_321:
  if (v32 < 6)
  {
LABEL_322:
    if (v56 != (unsigned int *)1) {
      goto LABEL_323;
    }
LABEL_63:
    sub_1001EA384(a1);
    return;
  }
  sub_100270480();
  if (v152 | v151 || v150 != 0xC000000000)
  {
    sub_100270440();
    goto LABEL_322;
  }
LABEL_335:
  Swift::Int v153 = *(unsigned int *)(v1 + 20);
  sub_100270464(5000257, 0xE300000000000000);
  if (v154)
  {
    v155._uint64_t countAndFlagsBits = 5000257;
    v155._Swift::Int object = (void *)0xE300000000000000;
    ByteBuffer._setStringSlowpath(_:at:)(v155, v153);
  }
  sub_1001F4888();
  if (!v143)
  {
LABEL_338:
    *(_DWORD *)(v1 + 20) = v128;
    return;
  }
LABEL_362:
  __break(1u);
}

void FetchAttribute.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1001F3740(v2, (uint64_t)&v34);
  Swift::UInt64 v4 = v34;
  unint64_t v5 = *(unsigned int *)&v37[8] | ((unint64_t)v38 << 32);
  Swift::UInt8 v6 = v34 & 1;
  switch(v38 >> 5)
  {
    case 1:
      sub_100270348();
      uint64_t v8 = v35;
      uint64_t v9 = v36;
      uint64_t v10 = *(void *)&v37[4];
      int v12 = v11;
      char v13 = v37[0];
      sub_1005E3410(8uLL);
      sub_1005E3420(v6);
      sub_100226C94(a1, v8);
      sub_10013B5CC(v9, v13);
      SectionSpecifier.Kind.hash(into:)(a1, v9, v13);
      sub_10013B5E0(v9, v13);
      if (v12 != 1) {
        goto LABEL_7;
      }
      goto LABEL_4;
    case 2:
      sub_100270348();
      sub_1005E3410(0xBuLL);
      sub_1005E3450(v4);
      return;
    case 3:
      sub_100270348();
      uint64_t v15 = v35;
      uint64_t v10 = v36;
      int v16 = v37[0];
      sub_1005E3410(0xCuLL);
      sub_1005E3420(v6);
      sub_100226C94(a1, v15);
      if (v16 == 1)
      {
LABEL_4:
        Swift::UInt8 v14 = 0;
LABEL_11:
        sub_1005E3420(v14);
      }
      else
      {
LABEL_7:
        sub_1005E3420(1u);
        sub_1005E3440(v10);
        sub_1005E3440(HIDWORD(v10));
      }
      return;
    case 4:
      sub_100270348();
      sub_1005E3410(0xDuLL);
      sub_100226C94(a1, v4);
      return;
    case 5:
      sub_100270348();
      Swift::UInt v7 = 17;
      goto LABEL_10;
    case 6:
      BOOL v17 = v5 == 0xC000000000 && (v36 | *(void *)v37 | v34 | v35) == 0;
      if (v17)
      {
        Swift::UInt v26 = 0;
      }
      else if (v5 == 0xC000000000 && v34 == 1 && (v36 | *(void *)v37 | v35) == 0)
      {
        Swift::UInt v26 = 1;
      }
      else
      {
        sub_100270428();
        if (v17 && v4 == 2 && v21 == 0)
        {
          Swift::UInt v26 = 2;
        }
        else
        {
          BOOL v25 = v20 == v22 && v4 == 3;
          if (!v25 || v21)
          {
            BOOL v27 = v20 == v22 && v4 == 4;
            if (!v27 || v21)
            {
              BOOL v28 = v20 == v22 && v4 == 5;
              if (!v28 || v21)
              {
                BOOL v29 = v20 == v22 && v4 == 6;
                if (!v29 || v21)
                {
                  BOOL v30 = v20 == v22 && v4 == 7;
                  if (!v30 || v21)
                  {
                    BOOL v31 = v20 == v22 && v4 == 8;
                    if (!v31 || v21)
                    {
                      BOOL v32 = v20 == v22 && v4 == 9;
                      if (!v32 || v21)
                      {
                        BOOL v33 = v20 == v22 && v4 == 10;
                        if (!v33 || v21) {
                          Swift::UInt v26 = 16;
                        }
                        else {
                          Swift::UInt v26 = 15;
                        }
                      }
                      else
                      {
                        Swift::UInt v26 = 14;
                      }
                    }
                    else
                    {
                      Swift::UInt v26 = 10;
                    }
                  }
                  else
                  {
                    Swift::UInt v26 = 9;
                  }
                }
                else
                {
                  Swift::UInt v26 = 6;
                }
              }
              else
              {
                Swift::UInt v26 = 5;
              }
            }
            else
            {
              Swift::UInt v26 = 4;
            }
          }
          else
          {
            Swift::UInt v26 = 3;
          }
        }
      }
      sub_1005E3410(v26);
      return;
    default:
      sub_100270348();
      Swift::UInt v7 = 7;
LABEL_10:
      sub_1005E3410(v7);
      Swift::UInt8 v14 = v6;
      goto LABEL_11;
  }
}

uint64_t static FetchAttribute.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1001F3740(a1, (uint64_t)&v82);
  unint64_t v4 = v82;
  unint64_t v5 = *(unsigned int *)&v85[8] | ((unint64_t)v86 << 32);
  switch(v86 >> 5)
  {
    case 1:
      unsigned __int8 v86 = BYTE4(v5) & 0x1F;
      Swift::UInt v7 = (void *)v83;
      uint64_t v6 = v84;
      int v8 = v85[0];
      uint64_t v9 = *(void *)&v85[4];
      char v10 = BYTE4(v5) & 0x1F;
      sub_100270320(v3, (uint64_t)&v78);
      if (v11 != 0x2000000000) {
        goto LABEL_151;
      }
      sub_1002704C8();
      if (v12) {
        goto LABEL_151;
      }
      int v13 = v80[8];
      uint64_t v14 = *(void *)&v80[12];
      char v15 = v81;
      uint64_t v16 = *(void *)v80;
      if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(v7, (void *)v79) & 1) == 0) {
        goto LABEL_151;
      }
      if (!v8)
      {
        if (v13) {
          goto LABEL_151;
        }
LABEL_97:
        sub_100219898();
        if ((v52 & 1) == 0) {
          goto LABEL_151;
        }
LABEL_144:
        if (v10)
        {
          if (v15) {
            goto LABEL_77;
          }
        }
        else
        {
          if (v9 == v14) {
            char v62 = v15;
          }
          else {
            char v62 = 1;
          }
          if ((v62 & 1) == 0) {
            goto LABEL_77;
          }
        }
        goto LABEL_151;
      }
      if (v8 == 1)
      {
        if (v13 != 1) {
          goto LABEL_151;
        }
        goto LABEL_97;
      }
      switch(v6)
      {
        case 1:
          if (v13 != 2 || v16 != 1) {
            goto LABEL_151;
          }
          goto LABEL_144;
        case 2:
          if (v13 != 2 || v16 != 2) {
            goto LABEL_151;
          }
          goto LABEL_144;
        case 3:
          if (v13 != 2 || v16 != 3) {
            goto LABEL_151;
          }
          goto LABEL_144;
        default:
          char v19 = 0;
          if (v13 == 2 && !v16) {
            goto LABEL_144;
          }
          break;
      }
      return v19 & 1;
    case 2:
      unsigned __int8 v86 = BYTE4(v5) & 0x1F;
      sub_100270320(v3, (uint64_t)&v78);
      if (v18 != 0x4000000000) {
        goto LABEL_151;
      }
      *(_DWORD *)&v80[16] = v17;
      unsigned __int8 v81 = BYTE4(v17) & 0x1F;
      if (((v78 | v4) & 0x8000000000000000) != 0)
      {
        __break(1u);
        JUMPOUT(0x10026F338);
      }
      char v19 = v78 == v4;
      return v19 & 1;
    case 3:
      unsigned __int8 v86 = BYTE4(v5) & 0x1F;
      uint64_t v20 = (void *)v83;
      uint64_t v21 = v84;
      char v22 = v85[0];
      sub_100270320(v3, (uint64_t)&v78);
      if (v23 != 0x6000000000) {
        goto LABEL_151;
      }
      sub_1002704C8();
      if (v24) {
        goto LABEL_151;
      }
      char v25 = v80[8];
      uint64_t v26 = *(void *)v80;
      if ((_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(v20, (void *)v79) & 1) == 0) {
        goto LABEL_151;
      }
      if (v22)
      {
        if (v25) {
          goto LABEL_77;
        }
      }
      else
      {
        if (v21 == v26) {
          char v44 = v25;
        }
        else {
          char v44 = 1;
        }
        if ((v44 & 1) == 0) {
          goto LABEL_77;
        }
      }
      goto LABEL_151;
    case 4:
      unsigned __int8 v86 = BYTE4(v5) & 0x1F;
      sub_100270320(v3, (uint64_t)&v78);
      if (v28 != 0x8000000000) {
        goto LABEL_151;
      }
      *(_DWORD *)&v80[16] = v27;
      unsigned __int8 v81 = BYTE4(v27) & 0x1F;
      char v19 = _s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0((void *)v4, (void *)v78);
      return v19 & 1;
    case 5:
      unsigned __int8 v86 = BYTE4(v5) & 0x1F;
      sub_1001F3740(a2, (uint64_t)&v78);
      if ((((unint64_t)v81 << 32) & 0xE000000000) == 0xA000000000) {
        goto LABEL_23;
      }
      goto LABEL_151;
    case 6:
      BOOL v29 = v5 == 0xC000000000 && (v84 | *(void *)v85 | v82 | v83) == 0;
      if (v29)
      {
        sub_10027036C(v3, (uint64_t)&v78);
        if (!v29) {
          goto LABEL_151;
        }
        sub_100270428();
        if (!v29 || v38 != 0) {
          goto LABEL_151;
        }
        goto LABEL_77;
      }
      unint64_t v30 = v84 | *(void *)v85 | v83;
      if (v5 == 0xC000000000 && v82 == 1 && v30 == 0)
      {
        sub_1002702D8(v3, (uint64_t)&v78);
        if (!v29) {
          goto LABEL_151;
        }
        sub_100270398();
        if (!v29 || v40 != 1) {
          goto LABEL_151;
        }
      }
      else if (v5 == 0xC000000000 && v82 == 2 && v30 == 0)
      {
        sub_10027036C(v3, (uint64_t)&v78);
        if (!v29) {
          goto LABEL_151;
        }
        sub_100270428();
        if (!v29 || v42 != 2) {
          goto LABEL_151;
        }
      }
      else
      {
        BOOL v35 = v5 == 0xC000000000 && v82 == 3;
        if (!v35 || v30)
        {
          sub_100270428();
          BOOL v49 = v29 && v4 == 4;
          if (!v49 || v47)
          {
            BOOL v53 = v46 == v48 && v4 == 5;
            if (!v53 || v47)
            {
              BOOL v56 = v46 == v48 && v4 == 6;
              if (!v56 || v47)
              {
                BOOL v64 = v46 == v48 && v4 == 7;
                if (!v64 || v47)
                {
                  BOOL v67 = v46 == v48 && v4 == 8;
                  if (!v67 || v47)
                  {
                    BOOL v70 = v46 == v48 && v4 == 9;
                    if (!v70 || v47)
                    {
                      BOOL v73 = v46 == 0xC000000000 && v4 == 10;
                      if (!v73 || v47)
                      {
                        sub_10027036C(v45, (uint64_t)&v78);
                        if (!v29) {
                          goto LABEL_151;
                        }
                        sub_100270428();
                        if (!v29 || v76 != 11) {
                          goto LABEL_151;
                        }
                      }
                      else
                      {
                        sub_1002702D8(v45, (uint64_t)&v78);
                        if (!v29) {
                          goto LABEL_151;
                        }
                        sub_100270398();
                        if (!v29 || v74 != 10) {
                          goto LABEL_151;
                        }
                      }
                    }
                    else
                    {
                      sub_1002702D8(v45, (uint64_t)&v78);
                      if (!v29) {
                        goto LABEL_151;
                      }
                      sub_100270398();
                      if (!v29 || v71 != 9) {
                        goto LABEL_151;
                      }
                    }
                  }
                  else
                  {
                    sub_1002702D8(v45, (uint64_t)&v78);
                    if (!v29) {
                      goto LABEL_151;
                    }
                    sub_100270398();
                    if (!v29 || v68 != 8) {
                      goto LABEL_151;
                    }
                  }
                }
                else
                {
                  sub_1002702D8(v45, (uint64_t)&v78);
                  if (!v29) {
                    goto LABEL_151;
                  }
                  sub_100270398();
                  if (!v29 || v65 != 7) {
                    goto LABEL_151;
                  }
                }
              }
              else
              {
                sub_1002702D8(v45, (uint64_t)&v78);
                if (!v29) {
                  goto LABEL_151;
                }
                sub_100270398();
                if (!v29 || v57 != 6) {
                  goto LABEL_151;
                }
              }
            }
            else
            {
              sub_1002702D8(v45, (uint64_t)&v78);
              if (!v29) {
                goto LABEL_151;
              }
              sub_100270398();
              if (!v29 || v54 != 5) {
                goto LABEL_151;
              }
            }
          }
          else
          {
            sub_1002702D8(v45, (uint64_t)&v78);
            if (!v29) {
              goto LABEL_151;
            }
            sub_100270398();
            if (!v29 || v50 != 4) {
              goto LABEL_151;
            }
          }
        }
        else
        {
          sub_1002702D8(v3, (uint64_t)&v78);
          if (!v29) {
            goto LABEL_151;
          }
          sub_100270398();
          if (!v29 || v36 != 3) {
            goto LABEL_151;
          }
        }
      }
      if (!(*(void *)v80 | *(void *)&v80[8] | v79))
      {
LABEL_77:
        char v19 = 1;
        return v19 & 1;
      }
LABEL_151:
      char v19 = 0;
      return v19 & 1;
    default:
      unsigned __int8 v86 = BYTE4(v5) & 0x1F;
      sub_1001F3740(a2, (uint64_t)&v78);
      if (v81 >> 5) {
        goto LABEL_151;
      }
LABEL_23:
      char v19 = v4 ^ v78 ^ 1;
      return v19 & 1;
  }
}

Swift::Int FetchAttribute.hashValue.getter()
{
  sub_1005E33F0();
  FetchAttribute.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_10026F3A4()
{
  sub_1001F3740(v0, (uint64_t)v2);
  return FetchAttribute.hashValue.getter();
}

void sub_10026F3DC(uint64_t a1)
{
  sub_1001F3740(v1, (uint64_t)v3);
  FetchAttribute.hash(into:)(a1);
}

Swift::Int sub_10026F41C()
{
  sub_1001F3740(v0, (uint64_t)v3);
  sub_1005E33F0();
  FetchAttribute.hash(into:)((uint64_t)&v2);
  return sub_1005E3470();
}

uint64_t sub_10026F470(uint64_t a1, uint64_t a2)
{
  sub_1001F3740(a1, (uint64_t)v4);
  sub_1001F3740(a2, (uint64_t)v5);
  return static FetchAttribute.__derived_enum_equals(_:_:)((uint64_t)v4, (uint64_t)v5) & 1;
}

void sub_10026F4BC()
{
  static Array<A>.all = (uint64_t)&off_1006CCAC0;
}

uint64_t *Array<A>.all.unsafeMutableAddressor()
{
  if (qword_10070FCC0 != -1) {
    swift_once();
  }
  return &static Array<A>.all;
}

uint64_t static Array<A>.all.getter()
{
  return sub_1001E8344(&qword_10070FCC0);
}

void sub_10026F540()
{
  static Array<A>.fast = (uint64_t)&off_1006CCB80;
}

uint64_t *Array<A>.fast.unsafeMutableAddressor()
{
  if (qword_10070FCC8 != -1) {
    swift_once();
  }
  return &static Array<A>.fast;
}

uint64_t static Array<A>.fast.getter()
{
  return sub_1001E8344(&qword_10070FCC8);
}

void sub_10026F5C4()
{
  static Array<A>.full = (uint64_t)&off_1006CCC18;
}

uint64_t *Array<A>.full.unsafeMutableAddressor()
{
  if (qword_10070FCD0 != -1) {
    swift_once();
  }
  return &static Array<A>.full;
}

uint64_t static Array<A>.full.getter()
{
  return sub_1001E8344(&qword_10070FCD0);
}

void FetchAttribute.debugDescription.getter()
{
  sub_1001F3814(v0, (void (*)(void, void, void, void, unint64_t))sub_1001F379C);
  sub_100211718();
}

#error "10026F858: call analysis failed (funcsize=338)"

void sub_10026FC78()
{
  sub_1001F3740(v0, (uint64_t)v1);
  FetchAttribute.debugDescription.getter();
}

void sub_10026FCB0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  if (a1) {
    uint64_t v11 = 0x4545502E59444F42;
  }
  else {
    uint64_t v11 = 1497648962;
  }
  if (a1) {
    char v12 = (void *)0xE90000000000004BLL;
  }
  else {
    char v12 = (void *)0xE400000000000000;
  }
  Swift::Int v13 = *(unsigned int *)(v7 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(v11, (unint64_t)v12, v7 + 8, v13);
  Swift::Int v15 = v14;
  char v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18._uint64_t countAndFlagsBits = v11;
    v18._Swift::Int object = v12;
    Swift::Int v15 = ByteBuffer._setStringSlowpath(_:at:)(v18, v13);
  }
  swift_bridgeObjectRelease();
  int v19 = *(_DWORD *)(v7 + 20);
  BOOL v20 = __CFADD__(v19, v15);
  int v21 = v19 + v15;
  if (v20)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(_DWORD *)(v7 + 20) = v21;
  sub_1002B3FD4(a2, a3, a4);
  BOOL v23 = __OFADD__(v15, v22);
  Swift::Int v24 = v15 + v22;
  if (v23)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  if (a6) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = sub_100240A78(a5);
  }
  if (__OFADD__(v24, v25)) {
    goto LABEL_18;
  }
}

#error "10026FEE8: call analysis failed (funcsize=110)"

unint64_t sub_10026FFB0()
{
  unint64_t result = qword_100710D08;
  if (!qword_100710D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710D08);
  }
  return result;
}

void destroy for FetchAttribute(uint64_t a1)
{
}

uint64_t initializeWithCopy for FetchAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(unsigned __int8 *)(a2 + 36);
  uint64_t v8 = *(unsigned int *)(a2 + 32);
  sub_1001F379C(*(void *)a2, v4, v5, v6, v8 | (v7 << 32));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 36) = v7;
  *(_DWORD *)(a1 + 32) = v8;
  return a1;
}

uint64_t assignWithCopy for FetchAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(unsigned __int8 *)(a2 + 36);
  uint64_t v8 = *(unsigned int *)(a2 + 32);
  sub_1001F379C(*(void *)a2, v4, v5, v6, v8 | (v7 << 32));
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  unint64_t v13 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 36) << 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_DWORD *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 36) = v7;
  sub_1001F385C(v9, v10, v11, v12, v13);
  return a1;
}

__n128 initializeWithTake for FetchAttribute(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 29) = *(void *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FetchAttribute(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 36);
  int v4 = *(_DWORD *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  unint64_t v9 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 36) << 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 36) = v3;
  sub_1001F385C(v5, v7, v6, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchAttribute(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 37))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unsigned int v2 = (*(_DWORD *)(a1 + 24) >> 2) & 0x3FFFFFFF | (*(unsigned char *)(a1 + 36) >> 1 << 30);
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchAttribute(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 37) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (-4 * a2);
      *(_DWORD *)(result + 32) = 0;
      *(unsigned char *)(result + 36) = (-a2 >> 29) & 6;
      return result;
    }
    *(unsigned char *)(result + 37) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100270244(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 36) >> 5;
  if (v1 <= 5) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_100270260(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 32);
  uint64_t result = a1 + 32;
  unint64_t v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)uint64_t result = v2;
  *(unsigned char *)(result + 4) = BYTE4(v3) & 0x1F;
  return result;
}

uint64_t sub_10027027C(uint64_t result, uint64_t a2)
{
  if (a2 < 6)
  {
    int v2 = *(_DWORD *)(result + 32);
    result += 32;
    unint64_t v3 = (a2 << 37) | ((unint64_t)(*(unsigned char *)(result + 4) & 1) << 32);
    *(void *)(result - 8) &= 0xFFFFFFFF00000003;
    *(_DWORD *)uint64_t result = v2;
    *(unsigned char *)(result + 4) = BYTE4(v3);
  }
  else
  {
    *(void *)uint64_t result = (a2 - 6);
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(unsigned char *)(result + 36) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchAttribute()
{
  return &type metadata for FetchAttribute;
}

uint64_t sub_1002702D8(uint64_t a1, uint64_t a2)
{
  return sub_1001F3740(v2, a2);
}

uint64_t sub_100270308()
{
  return 0x323238434652;
}

uint64_t sub_100270320(uint64_t a1, uint64_t a2)
{
  return sub_1001F3740(v2, a2);
}

uint64_t sub_100270358(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x532E000000000000;
}

uint64_t sub_10027036C(uint64_t a1, uint64_t a2)
{
  return sub_1001F3740(v2, a2);
}

uint64_t sub_1002703A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,Swift::String a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_1001EDA24(a1, 0, 0, 46, 0, 0, 0, 0, v36, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1002703D4()
{
  return 0x4C414E5245544E49;
}

uint64_t sub_1002703F4()
{
  return 0x42414C2D4D472D58;
}

uint64_t sub_100270414()
{
  return 1296510296;
}

uint64_t sub_10027044C()
{
  return v0 & 1;
}

void sub_100270464(uint64_t a1, unint64_t a2)
{
  sub_100210AD0(a1, a2, v2, v3);
}

uint64_t sub_10027048C()
{
  return 0x45504F4C45564E45;
}

uint64_t sub_1002704A4(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x482E000000000000;
}

uint64_t sub_1002704E0(unsigned int a1)
{
  return a1 | 0x47534D2D00000000;
}

uint64_t sub_1002704F4()
{
  return 0x5347414C46;
}

uint64_t sub_100270508()
{
  return 0x514553444F4DLL;
}

void sub_10027051C()
{
  sub_100210AD0(91, 0xE100000000000000, v0, v1);
}

uint64_t sub_10027053C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x542E000000000000;
}

uint64_t sub_100270550()
{
  return 0x4B4545502ELL;
}

uint64_t sub_100270578()
{
  return 0x5952414E4942;
}

uint64_t sub_10027058C(unsigned int a1)
{
  return a1 | 0x5248542D00000000;
}

BOOL sub_1002705A0(BOOL *a1, uint64_t *a2)
{
  return static FetchModificationResponse.__derived_struct_equals(_:_:)(*a1, *a2);
}

void sub_1002705AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 8;
  Swift::Int v3 = *(unsigned int *)(v0 + 20);
  uint64_t v4 = sub_1002706F8();
  sub_100210AD0(v4, v5, v2, v3);
  if (v7)
  {
    v8._uint64_t countAndFlagsBits = sub_1002706F8();
    Swift::Int v6 = ByteBuffer._setStringSlowpath(_:at:)(v8, v3);
  }
  Swift::Int v9 = v6;
  int v10 = *(_DWORD *)(v1 + 20);
  BOOL v11 = __CFADD__(v10, v6);
  int v12 = v10 + v6;
  if (v11)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(_DWORD *)(v1 + 20) = v12;
  uint64_t v13 = sub_10028DBEC();
  Swift::Int v14 = v9 + v13;
  if (__OFADD__(v9, v13))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  Swift::Int v15 = *(unsigned int *)(v1 + 20);
  sub_100210AD0(41, 0xE100000000000000, v2, *(_DWORD *)(v1 + 20));
  if (v17)
  {
    v18._uint64_t countAndFlagsBits = 41;
    v18._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v16 = ByteBuffer._setStringSlowpath(_:at:)(v18, v15);
  }
  int v19 = *(_DWORD *)(v1 + 20);
  BOOL v11 = __CFADD__(v19, v16);
  int v20 = v19 + v16;
  if (v11) {
    goto LABEL_12;
  }
  *(_DWORD *)(v1 + 20) = v20;
  if (__OFADD__(v14, v16)) {
LABEL_13:
  }
    __break(1u);
}

unint64_t sub_10027069C()
{
  unint64_t result = qword_100710D10;
  if (!qword_100710D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710D10);
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchModificationResponse()
{
  return &type metadata for FetchModificationResponse;
}

uint64_t sub_1002706F8()
{
  return 0x2820514553444F4DLL;
}

void sub_100270710(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    Swift::Int v3 = *(unsigned int *)(v1 + 20);
    sub_100210AD0(32, 0xE100000000000000, v1 + 8, *(_DWORD *)(v1 + 20));
    if (v4)
    {
      v5._uint64_t countAndFlagsBits = 32;
      v5._Swift::Int object = (void *)0xE100000000000000;
      ByteBuffer._setStringSlowpath(_:at:)(v5, v3);
    }
    sub_100254260();
    if (v7)
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(v1 + 20) = v6;
      sub_1002C2898(a1, 0, 0xE000000000000000, 32, 0xE100000000000000, 0, 0xE000000000000000, 1, sub_100270F48, 0);
    }
  }
}

void FetchModifier.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v5);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FetchModifier();
  sub_1001F3BBC();
  __chkstk_darwin(v8);
  sub_1002244A8();
  sub_100270FC0(v3, v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      Swift::UInt32 v11 = *(_DWORD *)v2;
      Swift::UInt32 v10 = *(_DWORD *)(v2 + 4);
      char v12 = *(unsigned char *)(v2 + 8);
      sub_1005E3410(1uLL);
      sub_1005E3410((v12 & 1) != 0);
      sub_1005E3440(v11);
      sub_1005E3440(v10);
    }
    else
    {
      sub_100271024(v2, (uint64_t)v7);
      sub_1005E3410(2uLL);
      sub_1005E1DB0();
      sub_100266530(a1);
      sub_1001F3A28((uint64_t)v7, &qword_10070FE48);
    }
  }
  else
  {
    Swift::UInt64 v13 = *(void *)v2;
    sub_1005E3410(0);
    sub_1005E3450(v13);
  }
}

uint64_t static FetchModifier.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000566C(&qword_10070FE48);
  __chkstk_darwin(v5 - 8);
  sub_100254978();
  type metadata accessor for FetchModifier();
  sub_1001F3BBC();
  uint64_t v7 = __chkstk_darwin(v6);
  Swift::Int v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v7);
  char v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v26 - v13);
  uint64_t v15 = sub_10000566C(&qword_1007104F8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  Swift::String v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_100270FC0(a1, (uint64_t)v18);
  sub_100270FC0(a2, v19);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100270FC0((uint64_t)v18, (uint64_t)v12);
      uint64_t v21 = *(void *)v12;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v22 = *(unsigned __int8 *)(v19 + 8);
        if (v12[8])
        {
          if (*(void *)v19 != v21) {
            int v22 = 0;
          }
          if (v22 != 1)
          {
LABEL_8:
            sub_10027108C((uint64_t)v18);
            return 0;
          }
        }
        else
        {
          if (*(void *)v19 != v21) {
            LOBYTE(v22) = 1;
          }
          if (v22) {
            goto LABEL_8;
          }
        }
        sub_10027108C((uint64_t)v18);
        return 1;
      }
LABEL_16:
      sub_1001F3A28((uint64_t)v18, &qword_1007104F8);
      return 0;
    }
    sub_100270FC0((uint64_t)v18, (uint64_t)v9);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_1001F3A28((uint64_t)v9, &qword_10070FE48);
      goto LABEL_16;
    }
    sub_100271024(v19, (uint64_t)v2);
    BOOL v25 = sub_10026624C(v9, v2);
    sub_1001F3A28((uint64_t)v2, &qword_10070FE48);
    sub_1001F3A28((uint64_t)v9, &qword_10070FE48);
LABEL_14:
    sub_10027108C((uint64_t)v18);
    return v25;
  }
  sub_100270FC0((uint64_t)v18, (uint64_t)v14);
  uint64_t v23 = *v14;
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result) {
    goto LABEL_16;
  }
  if (((*(void *)v19 | v23) & 0x8000000000000000) == 0)
  {
    BOOL v25 = *(void *)v19 == v23;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

Swift::Int FetchModifier.hashValue.getter()
{
  sub_1005E33F0();
  FetchModifier.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_100270C50()
{
  sub_1005E33F0();
  FetchModifier.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

void sub_100270C90(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_10070FE48);
  sub_1001F3BBC();
  __chkstk_darwin(v6);
  sub_1002244A8();
  type metadata accessor for FetchModifier();
  sub_1001F3BBC();
  __chkstk_darwin(v7);
  sub_100254978();
  sub_100270FC0(a1, v1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    Swift::Int v18 = *(unsigned int *)(v1 + 20);
    uint64_t v19 = sub_100271D48();
    sub_100210AD0(v19, v20, v1 + 8, v18);
    if (v21)
    {
      v22._uint64_t countAndFlagsBits = sub_100271D48();
      ByteBuffer._setStringSlowpath(_:at:)(v22, v18);
    }
    sub_100254260();
    if (!v17)
    {
      *(_DWORD *)(v1 + 20) = v23;
      sub_10028DBEC();
      return;
    }
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload == 1)
  {
    unint64_t v9 = *(void *)v1;
    char v10 = *(unsigned char *)(v1 + 8);
    Swift::Int v11 = *(unsigned int *)(v1 + 20);
    uint64_t v12 = sub_100271D6C();
    sub_100210AD0(v12, v13, v1 + 8, v11);
    if (v14)
    {
      v15._uint64_t countAndFlagsBits = sub_100271D6C();
      ByteBuffer._setStringSlowpath(_:at:)(v15, v11);
    }
    sub_100254260();
    if (!v17)
    {
      *(_DWORD *)(v1 + 20) = v16;
      sub_100291C48(v9, v10);
      return;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_100271024(v1, (uint64_t)v2);
  uint64_t v24 = *v2;
  BOOL v25 = (void *)v2[1];
  Swift::Int v26 = *(unsigned int *)(v1 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(v24, (unint64_t)v25, v1 + 8, v26);
  Swift::Int v28 = v27;
  char v30 = v29;
  swift_bridgeObjectRelease();
  if (v30)
  {
    v31._uint64_t countAndFlagsBits = v24;
    v31._Swift::Int object = v25;
    Swift::Int v28 = ByteBuffer._setStringSlowpath(_:at:)(v31, v26);
  }
  int v32 = *(_DWORD *)(v3 + 20);
  BOOL v17 = __CFADD__(v32, v28);
  int v33 = v32 + v28;
  if (v17) {
    goto LABEL_18;
  }
  *(_DWORD *)(v3 + 20) = v33;
  int v34 = *(_DWORD *)(v3 + 1);
  char v35 = *(unsigned char *)(v3 + 5);
  uint64_t v36 = *(void *)(v3 + 8);
  int v37 = *(_DWORD *)(v3 + 16);
  int v38 = *(_DWORD *)(v3 + 24);
  __int16 v39 = *(_WORD *)(v3 + 28);
  char v40 = *(unsigned char *)(v3 + 30);
  uint64_t v41 = *(void *)(v3 + 32);
  char v44 = *(unsigned char *)v3;
  char v46 = v35;
  int v45 = v34;
  uint64_t v47 = v36;
  int v48 = v37;
  int v49 = v33;
  int v50 = v38;
  __int16 v51 = v39;
  char v52 = v40;
  uint64_t v53 = v41;
  uint64_t v42 = (uint64_t)v2 + *(int *)(v5 + 52);
  long long v54 = *(_OWORD *)(v3 + 40);
  swift_retain();
  swift_retain();
  uint64_t v43 = sub_1001F2CA0(v42, (uint64_t)&v44, v3);
  swift_release();
  swift_release();
  if (!__OFADD__(v28, v43))
  {
    sub_1001F3A28((uint64_t)v2, &qword_10070FE48);
    return;
  }
LABEL_19:
  __break(1u);
}

void sub_100270F48(uint64_t a1)
{
}

BOOL static FetchedWindow.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a2 == a1;
}

uint64_t type metadata accessor for FetchModifier()
{
  uint64_t result = qword_100710D90;
  if (!qword_100710D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100270FC0(uint64_t a1, uint64_t a2)
{
  uint64_t Modifier = type metadata accessor for FetchModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Modifier - 8) + 16))(a2, a1, Modifier);
  return a2;
}

uint64_t sub_100271024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070FE48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027108C(uint64_t a1)
{
  uint64_t Modifier = type metadata accessor for FetchModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(Modifier - 8) + 8))(a1, Modifier);
  return a1;
}

uint64_t sub_1002710E8()
{
  return sub_100271D00(&qword_100710D18, (void (*)(uint64_t))type metadata accessor for FetchModifier);
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
      unint64_t v9 = (uint64_t *)((char *)a1 + v8);
      char v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for ParameterValue();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_10000566C(&qword_10070FE28);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *unint64_t v9 = *v10;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v14 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v10, 1, v14))
          {
            uint64_t v15 = sub_10000566C(&qword_1007104D8);
            memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
          }
          else
          {
            uint64_t v16 = sub_10000566C(&qword_100710538);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v9, 0, 1, v14);
          }
        }
        swift_storeEnumTagMultiPayload();
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v9, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for FetchModifier(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(sub_10000566C(&qword_10070FE48) + 52);
    uint64_t v4 = type metadata accessor for ParameterValue();
    uint64_t result = getEnumTagSinglePayload for ClientCommand(v3, 1, v4);
    if (!result)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        return swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v5 = sub_10000566C(&qword_1007104C8);
        uint64_t result = getEnumTagSinglePayload for ClientCommand(v3, 1, v5);
        if (!result)
        {
          uint64_t v6 = sub_10000566C(&qword_100710538);
          uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
          return v7(v3, v6);
        }
      }
    }
  }
  return result;
}

void *initializeWithCopy for FetchModifier(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
    uint64_t v7 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
    uint64_t v8 = (void *)((char *)a1 + v7);
    unint64_t v9 = (void *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for ParameterValue();
    if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10000566C(&qword_10070FE28);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v8 = *v9;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v12 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v9, 1, v12))
        {
          uint64_t v13 = sub_10000566C(&qword_1007104D8);
          memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v14 = sub_10000566C(&qword_100710538);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v12);
        }
      }
      swift_storeEnumTagMultiPayload();
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for FetchModifier(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10027108C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v6 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
      uint64_t v7 = (void *)((char *)a1 + v6);
      uint64_t v8 = (void *)((char *)a2 + v6);
      uint64_t v9 = type metadata accessor for ParameterValue();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10000566C(&qword_10070FE28);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v7 = *v8;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v11 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v11))
          {
            uint64_t v12 = sub_10000566C(&qword_1007104D8);
            memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
          }
          else
          {
            uint64_t v13 = sub_10000566C(&qword_100710538);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v11);
          }
        }
        swift_storeEnumTagMultiPayload();
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FetchModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ParameterValue();
    if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_10000566C(&qword_10070FE28);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v11 = sub_10000566C(&qword_1007104C8);
        if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v11))
        {
          uint64_t v12 = sub_10000566C(&qword_1007104D8);
          memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v13 = sub_10000566C(&qword_100710538);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
          storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v11);
        }
        swift_storeEnumTagMultiPayload();
      }
      storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for FetchModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10027108C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_10000566C(&qword_10070FE48) + 52);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for ParameterValue();
      if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10000566C(&qword_10070FE28);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          uint64_t v11 = sub_10000566C(&qword_1007104C8);
          if (getEnumTagSinglePayload for ClientCommand((uint64_t)v8, 1, v11))
          {
            uint64_t v12 = sub_10000566C(&qword_1007104D8);
            memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
          }
          else
          {
            uint64_t v13 = sub_10000566C(&qword_100710538);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
            storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v11);
          }
          swift_storeEnumTagMultiPayload();
        }
        storeEnumTagSinglePayload for ClientCommand((uint64_t)v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_100271C60()
{
  sub_100267264();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_100271D00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100271D48()
{
  return 0x534445474E414843;
}

uint64_t sub_100271D6C()
{
  return 0x204C414954524150;
}

uint64_t sub_100271D84()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  if (v1 == v2)
  {
    int v3 = 0;
    return v3 | ((v1 == v2) << 8);
  }
  if (v1 >= v2)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v4 = *((unsigned int *)v0 + 2);
  if (v1 < v4) {
    goto LABEL_9;
  }
  if (v1 - v4 < (*((_DWORD *)v0 + 3) - v4))
  {
    uint64_t v5 = *v0;
    uint64_t v6 = *((unsigned __int16 *)v0 + 10);
    uint64_t v7 = *((unsigned __int8 *)v0 + 22);
    swift_beginAccess();
    int v3 = *(unsigned __int8 *)(*(void *)(v5 + 24) + (v7 | (v6 << 8)) + v1);
    return v3 | ((v1 == v2) << 8);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_100271E34(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1005E1F30();
  }
  else {
    return 0;
  }
}

uint64_t sub_100271E7C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    unsigned __int8 v4 = a1;
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned __int8 v4 = sub_1005E1EC0();
    }
    else if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0) {
        uint64_t v5 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v5 = (unsigned __int8 *)sub_1005E2D30();
      }
      unsigned __int8 v4 = *v5;
    }
  }
  else
  {
    unsigned __int8 v4 = 0;
  }
  return v4 | ((v3 == 0) << 8);
}

uint64_t static Flag.Keyword.== infix(_:_:)()
{
  uint64_t v0 = sub_1005E1CD0();
  uint64_t v2 = v1;
  if (v0 == sub_1005E1CD0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1005E3290();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t Flag.Keyword.hash(into:)()
{
  sub_1005E1CD0();
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int Flag.hashValue.getter()
{
  sub_1005E3480();
  sub_10022C948();
  sub_1005E1CD0();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1005E3460();
}

Swift::Int sub_100272068()
{
  return Flag.hashValue.getter();
}

uint64_t sub_100272070()
{
  return Flag.Keyword.hash(into:)();
}

Swift::Int sub_100272078()
{
  return sub_1005E3470();
}

uint64_t sub_1002720DC()
{
  return static Flag.Keyword.== infix(_:_:)();
}

const char *Flag.answered.unsafeMutableAddressor()
{
  return "\\Answered";
}

uint64_t static Flag.answered.getter()
{
  return 0x65726577736E415CLL;
}

const char *Flag.flagged.unsafeMutableAddressor()
{
  return "\\Flagged";
}

uint64_t static Flag.flagged.getter()
{
  return sub_100272308(0x6767616C465CLL);
}

const char *Flag.deleted.unsafeMutableAddressor()
{
  return "\\Deleted";
}

uint64_t static Flag.deleted.getter()
{
  return sub_100272308(0x74656C65445CLL);
}

const char *Flag.seen.unsafeMutableAddressor()
{
  return "\\Seen";
}

uint64_t static Flag.seen.getter()
{
  return 0x6E6565535CLL;
}

const char *Flag.draft.unsafeMutableAddressor()
{
  return "\\Draft";
}

uint64_t static Flag.draft.getter()
{
  return 0x74666172445CLL;
}

uint64_t static Flag.extension(_:)()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_10022C948();
  uint64_t v2 = sub_100271E34(v0, v1);
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    if (v2 != 92 || v4 != 0xE100000000000000)
    {
      char v7 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if (v7)
      {
LABEL_9:
        swift_bridgeObjectRetain();
        return sub_10022C948();
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

unint64_t sub_100272238()
{
  unint64_t result = qword_100710DC8;
  if (!qword_100710DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710DC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Flag()
{
  return &type metadata for Flag;
}

uint64_t sub_100272294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_1005E1ED0();
    sub_1002722F0(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = sub_1005E1EA0();
    sub_1002722F0(v3);
    return v4 | 8;
  }
}

unint64_t sub_1002722F0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_100272308(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
}

unint64_t sub_100272314(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 1;
  }
  uint64_t v5 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  uint64_t v6 = 4 << v5;
  uint64_t v14 = a2 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v7 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  unint64_t v8 = 15;
  while (1)
  {
    unint64_t result = v8;
    if ((v8 & 0xC) == v6) {
      unint64_t result = sub_100272294(v8, a1, a2);
    }
    unint64_t v10 = result >> 16;
    if (result >> 16 >= v2) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1005E1EC0();
      unsigned __int8 v11 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v13[0] = a1;
      v13[1] = v14;
      unsigned __int8 v11 = *((unsigned char *)v13 + v10);
    }
    else
    {
      unint64_t result = v7;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_1005E2D30();
      }
      unsigned __int8 v11 = *(unsigned char *)(result + v10);
    }
    if ((v8 & 0xC) == v6)
    {
      unint64_t result = sub_100272294(v8, a1, a2);
      unint64_t v8 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_19:
        unint64_t v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_24;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_19;
    }
    if (v2 <= v8 >> 16) {
      goto LABEL_35;
    }
    unint64_t v8 = sub_1005E1E90();
LABEL_24:
    uint64_t v12 = v11 - 32;
    if (v11 < 0x20u) {
      return 0;
    }
    unint64_t result = 0;
    if (v12 <= 0x3D)
    {
      if (v12 == 61) {
        goto LABEL_30;
      }
      if (((1 << (v11 - 32)) & 0x1000000000000725) != 0) {
        return result;
      }
    }
    if (v11 == 123) {
      return result;
    }
    if ((v11 & 0x80) != 0) {
      return 0;
    }
LABEL_30:
    if (4 * v2 == v8 >> 14) {
      return 1;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

unint64_t Flag.Keyword.init(_:)(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = a1;
  if ((sub_100272314(a1, a2) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v2;
}

Swift::Int Flag.Keyword.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_1002725A0()
{
  return Flag.Keyword.hashValue.getter();
}

const char *Flag.Keyword.forwarded.unsafeMutableAddressor()
{
  return "$Forwarded";
}

void static Flag.Keyword.forwarded.getter()
{
}

const char *Flag.Keyword.junk.unsafeMutableAddressor()
{
  return "$Junk";
}

uint64_t static Flag.Keyword.junk.getter()
{
  return 0x6B6E754A24;
}

const char *Flag.Keyword.notJunk.unsafeMutableAddressor()
{
  return "$NotJunk";
}

uint64_t static Flag.Keyword.notJunk.getter()
{
  return 0x6B6E754A746F4E24;
}

const char *Flag.Keyword.unregistered_redirected.unsafeMutableAddressor()
{
  return "Redirected";
}

void static Flag.Keyword.unregistered_redirected.getter()
{
}

const char *Flag.Keyword.unregistered_forwarded.unsafeMutableAddressor()
{
  return "Forwarded";
}

uint64_t static Flag.Keyword.unregistered_forwarded.getter()
{
  return 0x6564726177726F46;
}

const char *Flag.Keyword.unregistered_junk.unsafeMutableAddressor()
{
  return "Junk";
}

uint64_t static Flag.Keyword.unregistered_junk.getter()
{
  return 1802401098;
}

const char *Flag.Keyword.unregistered_notJunk.unsafeMutableAddressor()
{
  return "NotJunk";
}

uint64_t static Flag.Keyword.unregistered_notJunk.getter()
{
  return 0x6B6E754A746F4ELL;
}

const char *Flag.Keyword.colorBit0.unsafeMutableAddressor()
{
  return "$MailFlagBit0";
}

void static Flag.Keyword.colorBit0.getter()
{
}

const char *Flag.Keyword.colorBit1.unsafeMutableAddressor()
{
  return "$MailFlagBit1";
}

void static Flag.Keyword.colorBit1.getter()
{
}

const char *Flag.Keyword.colorBit2.unsafeMutableAddressor()
{
  return "$MailFlagBit2";
}

void static Flag.Keyword.colorBit2.getter()
{
}

const char *Flag.Keyword.mdnSent.unsafeMutableAddressor()
{
  return "$MDNSent";
}

uint64_t static Flag.Keyword.mdnSent.getter()
{
  return 0x746E65534E444D24;
}

unint64_t sub_10027271C()
{
  unint64_t result = qword_100710DD0;
  if (!qword_100710DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710DD0);
  }
  return result;
}

unint64_t sub_10027276C()
{
  unint64_t result = qword_100710DD8;
  if (!qword_100710DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710DD8);
  }
  return result;
}

uint64_t sub_1002727B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_1002727EC()
{
  unint64_t result = qword_100710DE0;
  if (!qword_100710DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710DE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Flag.Keyword()
{
  return &type metadata for Flag.Keyword;
}

uint64_t sub_10027284C()
{
  return 0x616C466C69614D24;
}

void PermanentFlag.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1005E3410(0);
    sub_1005E1CD0();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3410(1uLL);
  }
}

uint64_t static PermanentFlag.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4 = (a2 | a4) == 0;
  if (a2 && a4)
  {
    uint64_t v5 = sub_1005E1CD0();
    uint64_t v7 = v6;
    if (v5 == sub_1005E1CD0() && v7 == v8) {
      char v4 = 1;
    }
    else {
      char v4 = sub_1005E3290();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4 & 1;
}

Swift::Int PermanentFlag.hashValue.getter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1005E3410(0);
    sub_1005E1CD0();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3410(1uLL);
  }
  return sub_1005E3470();
}

Swift::Int sub_100272A3C()
{
  return PermanentFlag.hashValue.getter(*v0, v0[1]);
}

void sub_100272A44(uint64_t a1)
{
  PermanentFlag.hash(into:)(a1, *v1, v1[1]);
}

Swift::Int sub_100272A4C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1005E33F0();
  if (v1)
  {
    sub_1005E3410(0);
    sub_1005E1CD0();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3410(1uLL);
  }
  return sub_1005E3470();
}

unint64_t sub_100272AD8()
{
  unint64_t result = qword_100710DE8;
  if (!qword_100710DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710DE8);
  }
  return result;
}

uint64_t sub_100272B24(uint64_t *a1, uint64_t *a2)
{
  return static PermanentFlag.__derived_enum_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t getEnumTagSinglePayload for PermanentFlag(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PermanentFlag(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_100272BDC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PermanentFlag()
{
  return &type metadata for PermanentFlag;
}

uint64_t static StoreData.__derived_enum_equals(_:_:)(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    if ((a3 & 0x8000000000000000) != 0)
    {
      if ((_BYTE)a1)
      {
        sub_1001E8A40();
        if (v12) {
          uint64_t v14 = 45;
        }
        else {
          uint64_t v14 = 0;
        }
        if (v12) {
          unint64_t v15 = v13;
        }
        else {
          unint64_t v15 = 0xE000000000000000;
        }
      }
      else
      {
        unint64_t v15 = 0xE100000000000000;
        uint64_t v14 = 43;
      }
      if ((_BYTE)a3)
      {
        sub_1001E8A40();
        if (v22) {
          uint64_t v24 = 45;
        }
        else {
          uint64_t v24 = 0;
        }
        if (v22) {
          unint64_t v25 = v23;
        }
        else {
          unint64_t v25 = 0xE000000000000000;
        }
      }
      else
      {
        unint64_t v25 = 0xE100000000000000;
        uint64_t v24 = 43;
      }
      if (v14 == v24 && v15 == v25)
      {
        sub_100274100();
        if (a1 != a3) {
          return 0;
        }
      }
      else
      {
        char v27 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0 || ((a1 >> 8) & 1) != ((a3 >> 8) & 1)) {
          return 0;
        }
      }
      sub_10021B064();
      if (v28) {
        return 1;
      }
    }
  }
  else if ((a3 & 0x8000000000000000) == 0)
  {
    if ((_BYTE)a1)
    {
      sub_1001E8A40();
      if (v8) {
        uint64_t v10 = 45;
      }
      else {
        uint64_t v10 = 0;
      }
      if (v8) {
        unint64_t v11 = v9;
      }
      else {
        unint64_t v11 = 0xE000000000000000;
      }
    }
    else
    {
      unint64_t v11 = 0xE100000000000000;
      uint64_t v10 = 43;
    }
    if ((_BYTE)a3)
    {
      sub_1001E8A40();
      if (v16) {
        uint64_t v18 = 45;
      }
      else {
        uint64_t v18 = 0;
      }
      if (v16) {
        unint64_t v19 = v17;
      }
      else {
        unint64_t v19 = 0xE000000000000000;
      }
    }
    else
    {
      unint64_t v19 = 0xE100000000000000;
      uint64_t v18 = 43;
    }
    if (v10 != v18 || v11 != v19)
    {
      char v21 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0 || ((a1 >> 8) & 1) != ((a3 >> 8) & 1)) {
        return 0;
      }
      return (sub_10021E990(a2, a4) & 1) != 0;
    }
    sub_100274100();
    if (a1 == a3) {
      return (sub_10021E990(a2, a4) & 1) != 0;
    }
  }
  return 0;
}

NIOIMAPCore2::StoreOperation_optional __swiftcall StoreOperation.init(rawValue:)(Swift::String rawValue)
{
  Swift::Int object = rawValue._object;
  v5._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &off_1006CCD00;
  v5._Swift::Int object = object;
  unint64_t v3 = sub_1005E3050(v2, v5);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return (NIOIMAPCore2::StoreOperation_optional)3;
  }
  else {
    return (NIOIMAPCore2::StoreOperation_optional)v3;
  }
}

uint64_t StoreOperation.rawValue.getter(char a1)
{
  if (!a1) {
    return 43;
  }
  sub_1001E8A40();
  if (v1) {
    return 45;
  }
  else {
    return 0;
  }
}

uint64_t sub_100272E54(char *a1, char *a2)
{
  return sub_1001E5E98(*a1, *a2);
}

NIOIMAPCore2::StoreOperation_optional sub_100272E60@<W0>(Swift::String *a1@<X0>, NIOIMAPCore2::StoreOperation_optional *a2@<X8>)
{
  result.Swift::Int value = StoreOperation.init(rawValue:)(*a1).value;
  a2->Swift::Int value = result.value;
  return result;
}

uint64_t sub_100272E90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = StoreOperation.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_100272EBC()
{
  return sub_1002AB570(*v0);
}

uint64_t sub_100272EC4()
{
  return sub_100235A4C();
}

Swift::Int sub_100272ECC(uint64_t a1)
{
  return sub_1002AB6F8(a1, *v1);
}

void StoreData.hash(into:)()
{
  sub_1001F9A34();
  uint64_t v1 = v0;
  __int16 v3 = v2;
  uint64_t v5 = v4;
  if (v2 < 0)
  {
    sub_1005E3410(1uLL);
    if ((_BYTE)v3) {
      sub_1001E8A40();
    }
    else {
      sub_100274120();
    }
    sub_1002740E8();
    swift_bridgeObjectRelease();
    sub_1005E3420(HIBYTE(v3) & 1);
    Swift::UInt v7 = *(void *)(v1 + 16);
    sub_1005E3410(v7);
    if (v7)
    {
      uint64_t v8 = v1 + 54;
      do
      {
        v8 += 24;
        sub_10027412C();
        sub_100274088();
        --v7;
      }
      while (v7);
    }
    sub_1001F99EC();
  }
  else
  {
    sub_1005E3410(0);
    if ((_BYTE)v3) {
      sub_1001E8A40();
    }
    else {
      sub_100274120();
    }
    sub_1002740E8();
    swift_bridgeObjectRelease();
    sub_1005E3420(HIBYTE(v3) & 1);
    swift_bridgeObjectRetain();
    sub_10022A804(v5, v1);
    sub_1001F99EC();
    sub_10024EEEC();
  }
}

uint64_t static StoreFlags.__derived_struct_equals(_:_:)(int a1, uint64_t a2, unsigned __int16 a3, uint64_t a4)
{
  return sub_100273038(a1, a2, a3, a4, sub_10021E990);
}

uint64_t static StoreGmailLabels.__derived_struct_equals(_:_:)(int a1, uint64_t a2, unsigned __int16 a3, uint64_t a4)
{
  return sub_100273038(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_10021B064);
}

uint64_t sub_100273038(int a1, uint64_t a2, unsigned __int16 a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  int v8 = a3;
  int v9 = a1;
  if ((_BYTE)a1)
  {
    if (a1 == 1) {
      uint64_t v10 = 45;
    }
    else {
      uint64_t v10 = 0;
    }
    if (v9 == 1) {
      unint64_t v11 = 0xE100000000000000;
    }
    else {
      unint64_t v11 = 0xE000000000000000;
    }
  }
  else
  {
    unint64_t v11 = 0xE100000000000000;
    uint64_t v10 = 43;
  }
  unsigned int v12 = a3;
  unint64_t v13 = 0xE100000000000000;
  uint64_t v14 = 45;
  if (a3 != 1)
  {
    uint64_t v14 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  if ((_BYTE)a3) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 43;
  }
  if (v8) {
    unint64_t v16 = v13;
  }
  else {
    unint64_t v16 = 0xE100000000000000;
  }
  if (v10 == v15 && v11 == v16)
  {
    swift_bridgeObjectRelease_n();
    if (((a1 ^ v12) & 0x100) == 0) {
      goto LABEL_23;
    }
    return 0;
  }
  char v18 = sub_1005E3290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18 & 1) == 0 || (((a1 ^ v12) >> 8)) {
    return 0;
  }
LABEL_23:
  return a5(a2, a4);
}

Swift::Int StoreData.hashValue.getter(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  if (a1 < 0)
  {
    sub_1005E3410(1uLL);
    if ((_BYTE)a1) {
      sub_1001E8A40();
    }
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    sub_1005E3420(BYTE1(a1) & 1);
    Swift::UInt v4 = *(void *)(a2 + 16);
    sub_1005E3410(v4);
    for (; v4; --v4)
    {
      sub_100274014();
      sub_100274048();
    }
  }
  else
  {
    sub_1005E3410(0);
    if ((_BYTE)a1) {
      sub_1001E8A40();
    }
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    sub_1005E3420(BYTE1(a1) & 1);
    swift_bridgeObjectRetain();
    sub_10022A804((uint64_t)v6, a2);
    sub_10024EEEC();
  }
  return sub_1005E3470();
}

Swift::Int sub_1002732C4()
{
  return StoreData.hashValue.getter(*v0, v0[1]);
}

void sub_1002732CC()
{
}

Swift::Int sub_1002732D4()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1005E33F0();
  if (v2 < 0)
  {
    sub_1005E3410(1uLL);
    StoreGmailLabels.hash(into:)();
  }
  else
  {
    sub_1005E3410(0);
    StoreFlags.hash(into:)((uint64_t)v4, v2 & 0x1FF, v1);
  }
  return sub_1005E3470();
}

uint64_t sub_100273354(uint64_t a1, uint64_t a2)
{
  return static StoreData.__derived_enum_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

void StoreGmailLabels.hash(into:)()
{
  sub_1001F9A34();
  uint64_t v1 = v0;
  char v3 = v2;
  if (v4) {
    sub_1001E8A40();
  }
  else {
    sub_100274120();
  }
  sub_1002740E8();
  swift_bridgeObjectRelease();
  sub_1005E3420(v3 & 1);
  Swift::UInt v5 = *(void *)(v1 + 16);
  sub_1005E3410(v5);
  if (v5)
  {
    uint64_t v6 = v1 + 54;
    do
    {
      v6 += 24;
      sub_10027412C();
      sub_100274088();
      --v5;
    }
    while (v5);
  }
  sub_1001F99EC();
}

Swift::Int StoreGmailLabels.hashValue.getter(__int16 a1, uint64_t a2)
{
  sub_1005E33F0();
  if ((_BYTE)a1) {
    sub_1001E8A40();
  }
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3420(HIBYTE(a1) & 1);
  Swift::UInt v4 = *(void *)(a2 + 16);
  sub_1005E3410(v4);
  for (; v4; --v4)
  {
    sub_100274014();
    sub_100274048();
  }
  return sub_1005E3470();
}

Swift::Int sub_1002734DC()
{
  if (v0[1]) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return StoreGmailLabels.hashValue.getter(v1 | *v0, *((void *)v0 + 1));
}

void sub_1002734FC()
{
}

Swift::Int sub_10027351C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10027377C(a1, a2, a3, (void (*)(unsigned char *, void, uint64_t))StoreGmailLabels.hash(into:));
}

uint64_t sub_100273534(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_100273800(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void, void))static StoreGmailLabels.__derived_struct_equals(_:_:));
}

uint64_t static StoreFlags.add(silent:list:)()
{
  sub_1002740AC();
  if (v0) {
    return 256;
  }
  else {
    return 0;
  }
}

uint64_t static StoreFlags.remove(silent:list:)()
{
  sub_1002740AC();
  if (v0) {
    return 257;
  }
  else {
    return 1;
  }
}

uint64_t static StoreFlags.replace(silent:list:)()
{
  sub_1002740AC();
  if (v0) {
    return 258;
  }
  else {
    return 2;
  }
}

uint64_t Environment.appState.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t StoreFlags.hash(into:)(uint64_t a1, __int16 a2, uint64_t a3)
{
  char v4 = HIBYTE(a2);
  if ((_BYTE)a2) {
    sub_1001E8A40();
  }
  else {
    sub_100274120();
  }
  sub_1002740E8();
  swift_bridgeObjectRelease();
  sub_1005E3420(v4 & 1);
  swift_bridgeObjectRetain();
  sub_10022A804(a1, a3);
  return swift_bridgeObjectRelease();
}

Swift::Int StoreFlags.hashValue.getter(__int16 a1, uint64_t a2)
{
  sub_1005E33F0();
  if ((_BYTE)a1) {
    sub_1001E8A40();
  }
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  sub_1005E3420(HIBYTE(a1) & 1);
  swift_bridgeObjectRetain();
  sub_10022A804((uint64_t)v5, a2);
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

Swift::Int sub_100273724()
{
  if (v0[1]) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return StoreFlags.hashValue.getter(v1 | *v0, *((void *)v0 + 1));
}

uint64_t sub_100273744(uint64_t a1)
{
  if (v1[1]) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return StoreFlags.hash(into:)(a1, v2 | *v1, *((void *)v1 + 1));
}

Swift::Int sub_100273764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10027377C(a1, a2, a3, (void (*)(unsigned char *, void, uint64_t))StoreFlags.hash(into:));
}

Swift::Int sub_10027377C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, uint64_t))
{
  unsigned int v6 = *v4;
  int v7 = v4[1];
  uint64_t v8 = *((void *)v4 + 1);
  sub_1005E33F0();
  if (v7) {
    int v9 = 256;
  }
  else {
    int v9 = 0;
  }
  a4(v11, v9 | v6, v8);
  return sub_1005E3470();
}

uint64_t sub_1002737E8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_100273800(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void, void))static StoreFlags.__derived_struct_equals(_:_:));
}

uint64_t sub_100273800(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void, void))
{
  uint64_t v5 = *((void *)a1 + 1);
  if (a1[1]) {
    int v6 = 256;
  }
  else {
    int v6 = 0;
  }
  uint64_t v7 = v6 | *a1;
  if (a2[1]) {
    int v8 = 256;
  }
  else {
    int v8 = 0;
  }
  return a5(v7, v5, v8 | *a2, *((void *)a2 + 1));
}

#error "100273940: call analysis failed (funcsize=69)"

void sub_100273968()
{
  sub_1001F9A34();
  uint64_t v2 = v0;
  char v3 = v1;
  if ((v1 & 0x100) != 0) {
    uint64_t v4 = 0x544E454C49532ELL;
  }
  else {
    uint64_t v4 = 0;
  }
  if ((v1 & 0x100) != 0) {
    uint64_t v5 = (void *)0xE700000000000000;
  }
  else {
    uint64_t v5 = (void *)0xE000000000000000;
  }
  sub_1005E2C80(16);
  if (v3)
  {
    sub_1001E8A40();
    if (v6) {
      v8._uint64_t countAndFlagsBits = 45;
    }
    else {
      v8._uint64_t countAndFlagsBits = 0;
    }
    if (v6) {
      int v9 = v7;
    }
    else {
      int v9 = (void *)0xE000000000000000;
    }
  }
  else
  {
    int v9 = (void *)0xE100000000000000;
    v8._uint64_t countAndFlagsBits = 43;
  }
  v8._Swift::Int object = v9;
  sub_1005E1E30(v8);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0x42414C2D4D472D58;
  v18._Swift::Int object = (void *)0xEB00000000534C45;
  sub_1005E1E30(v18);
  v19._uint64_t countAndFlagsBits = v4;
  v19._Swift::Int object = v5;
  sub_1005E1E30(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 32;
  v20._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v20);
  sub_1002740C8();
  sub_100254428();
  Swift::Int v11 = v10;
  char v13 = v12;
  swift_bridgeObjectRelease();
  if (v13) {
    Swift::Int v11 = sub_1002545A0();
  }
  swift_bridgeObjectRelease();
  int v14 = *(_DWORD *)(v2 + 20);
  BOOL v15 = __CFADD__(v14, v11);
  int v16 = v14 + v11;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = sub_100273FE8(v16);
    if (!__OFADD__(v11, sub_1001EA768(v17)))
    {
      sub_1001F99EC();
      return;
    }
  }
  __break(1u);
}

unint64_t sub_100273AB4()
{
  unint64_t result = qword_100710DF0;
  if (!qword_100710DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710DF0);
  }
  return result;
}

unint64_t sub_100273B04()
{
  unint64_t result = qword_100710DF8;
  if (!qword_100710DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710DF8);
  }
  return result;
}

unint64_t sub_100273B54()
{
  unint64_t result = qword_100710E00;
  if (!qword_100710E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E00);
  }
  return result;
}

unint64_t sub_100273BA4()
{
  unint64_t result = qword_100710E08;
  if (!qword_100710E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StoreOperation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for StoreOperation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100273D44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for StoreOperation()
{
}

void *initializeBufferWithCopyOfBuffer for StoreData(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  MailboxPriorityInfo.mailboxPriorityOrder.getter();
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for StoreData()
{
  return sub_10024EEEC();
}

void *assignWithCopy for StoreData(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  MailboxPriorityInfo.mailboxPriorityOrder.getter();
  *a1 = v3;
  a1[1] = v4;
  sub_10024EEEC();
  return a1;
}

_OWORD *assignWithTake for StoreData(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  sub_10024EEEC();
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreData(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unsigned int v2 = (*(void *)a1 >> 3) & 0xFFFFFFC0 | (*(void *)a1 >> 2);
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (8 * -a2) & 0x7FFFFFE00 | (4 * (-a2 & 0x3FLL));
      *(void *)(result + 8) = 0;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t *sub_100273EDC(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0x103 | (a2 << 63);
  return result;
}

void type metadata accessor for StoreData()
{
}

void type metadata accessor for StoreGmailLabels()
{
}

uint64_t _s12NIOIMAPCore210StoreFlagsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12NIOIMAPCore210StoreFlagsVwca_0(unsigned char *a1, unsigned char *a2)
{
  sub_100274070(a1, a2);
  *(void *)(v2 + 8) = *(void *)(v3 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s12NIOIMAPCore210StoreFlagsVwta_0(unsigned char *a1, unsigned char *a2)
{
  sub_100274070(a1, a2);
  *(void *)(v2 + 8) = *(void *)(v3 + 8);
  swift_bridgeObjectRelease();
  return v2;
}

void type metadata accessor for StoreFlags()
{
}

uint64_t sub_100273FE8@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v2 + 20) = a1;
  return v1;
}

uint64_t sub_100274014()
{
  return swift_beginAccess();
}

uint64_t sub_100274048()
{
  return sub_1005E3400();
}

unsigned char *sub_100274070(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  result[1] = a2[1];
  return result;
}

uint64_t sub_100274088()
{
  return sub_1005E3400();
}

uint64_t sub_1002740AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002740C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002740E8()
{
  return sub_1005E1DB0();
}

uint64_t sub_100274100()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10027412C()
{
  return swift_beginAccess();
}

uint64_t RumpAuthenticatedURL.authenticatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100274158(v1, a1);
}

uint64_t sub_100274158(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t RumpAuthenticatedURL.authenticatedURL.setter(uint64_t a1)
{
  return sub_1002741BC(a1, v1);
}

uint64_t sub_1002741BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t FullAuthenticatedURL.authenticatedURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100274224(v1 + 136, a1);
}

uint64_t sub_100274224(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t FullAuthenticatedURL.authenticatedURL.setter(uint64_t a1)
{
  return sub_100274288(a1, v1 + 136);
}

uint64_t sub_100274288(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 FullAuthenticatedURL.init(networkMessagePath:authenticatedURL:)@<Q0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 48);
  char v6 = *(unsigned char *)(a2 + 56);
  char v7 = *(unsigned char *)(a2 + 57);
  char v8 = *(unsigned char *)(a2 + 80);
  __n128 v13 = *(__n128 *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 112);
  memcpy((void *)a3, __src, 0x82uLL);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 136) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 152) = v11;
  *(_OWORD *)(a3 + 168) = *(_OWORD *)(a2 + 32);
  *(void *)(a3 + 184) = v5;
  *(unsigned char *)(a3 + 192) = v6;
  *(unsigned char *)(a3 + 193) = v7 & 1;
  *(_OWORD *)(a3 + 200) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a3 + 216) = v8;
  __n128 result = v13;
  *(__n128 *)(a3 + 224) = v13;
  *(void *)(a3 + 240) = v9;
  *(void *)(a3 + 248) = v10;
  return result;
}

uint64_t FullAuthenticatedURL.hash(into:)(uint64_t a1)
{
  memcpy(__dst, v1, 0x82uLL);
  long long v3 = v1[1];
  v8[0] = *v1;
  v8[1] = v3;
  v9[0] = v1[2];
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_100274744(__dst);
  sub_1002747F4((uint64_t *)v8);
  IMAPServer.hash(into:)(a1);
  sub_100274834((uint64_t *)v8);
  memcpy(v7, &__dst[8], 0x42uLL);
  sub_1002748C4((uint64_t)v7);
  MessagePath.hash(into:)();
  sub_1002748FC((uint64_t)v7);
  sub_100274934(__dst);
  memcpy(v5, (char *)v1 + 136, sizeof(v5));
  sub_100274994((uint64_t)v5);
  AuthenticatedURL.hash(into:)();
  return sub_1002749E8((uint64_t)v5);
}

uint64_t static FullAuthenticatedURL.__derived_struct_equals(_:_:)(char *__src, _OWORD *a2)
{
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v21, a2, sizeof(v21));
  long long v4 = *((_OWORD *)__src + 1);
  v27[0] = *(_OWORD *)__src;
  v27[1] = v4;
  v28[0] = *((_OWORD *)__src + 2);
  *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)(__src + 41);
  long long v5 = a2[1];
  v23[0] = *a2;
  v23[1] = v5;
  v24[0] = a2[2];
  *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)a2 + 41);
  if ((static IMAPServer.__derived_struct_equals(_:_:)((uint64_t)v27, (uint64_t)v23) & 1) == 0) {
    return 0;
  }
  memcpy(v26, &__dst[64], 0x42uLL);
  memcpy(v22, &v21[64], 0x42uLL);
  if ((static MessagePath.__derived_struct_equals(_:_:)((uint64_t)v26, (uint64_t)v22) & 1) == 0) {
    return 0;
  }
  char v6 = __src + 136;
  uint64_t v7 = *((void *)__src + 28);
  uint64_t v8 = *((void *)__src + 29);
  uint64_t v10 = *((void *)__src + 30);
  uint64_t v9 = *((void *)__src + 31);
  long long v11 = (char *)a2 + 136;
  uint64_t v12 = *((void *)a2 + 28);
  uint64_t v13 = *((void *)a2 + 29);
  uint64_t v15 = *((void *)a2 + 30);
  uint64_t v14 = *((void *)a2 + 31);
  memcpy(v20, v6, 0x51uLL);
  memcpy(v19, v11, 0x51uLL);
  if (!static AuthenticatedURLRump.__derived_struct_equals(_:_:)((uint64_t)v20, (uint64_t)v19)) {
    return 0;
  }
  BOOL v16 = v7 == v12 && v8 == v13;
  if (v16 || (sub_1005E3290())
    && (v10 == v15 ? (BOOL v17 = v9 == v14) : (BOOL v17 = 0), v17 || (sub_1005E3290() & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

Swift::Int FullAuthenticatedURL.hashValue.getter()
{
  sub_1005E33F0();
  memcpy(__dst, v0, 0x82uLL);
  long long v1 = v0[1];
  v7[0] = *v0;
  v7[1] = v1;
  v8[0] = v0[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)v0 + 41);
  sub_100274744(__dst);
  sub_1002747F4((uint64_t *)v7);
  IMAPServer.hash(into:)((uint64_t)&v3);
  sub_100274834((uint64_t *)v7);
  memcpy(v6, &__dst[8], 0x42uLL);
  sub_1002748C4((uint64_t)v6);
  MessagePath.hash(into:)();
  sub_1002748FC((uint64_t)v6);
  sub_100274934(__dst);
  memcpy(v4, (char *)v0 + 136, sizeof(v4));
  sub_100274994((uint64_t)v4);
  AuthenticatedURL.hash(into:)();
  sub_1002749E8((uint64_t)v4);
  return sub_1005E3470();
}

Swift::Int sub_100274704()
{
  sub_1005E33F0();
  FullAuthenticatedURL.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

uint64_t *sub_100274744(uint64_t *a1)
{
  return a1;
}

void sub_1002747A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1001F3264(a3, a4);
  }
}

uint64_t *sub_1002747F4(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_100274834(uint64_t *a1)
{
  return a1;
}

void sub_100274874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1001F3278(a3, a4);
  }
}

uint64_t sub_1002748C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002748FC(uint64_t a1)
{
  return a1;
}

uint64_t *sub_100274934(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100274994(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002749E8(uint64_t a1)
{
  return a1;
}

unint64_t sub_100274A40()
{
  unint64_t result = qword_100710E10;
  if (!qword_100710E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E10);
  }
  return result;
}

uint64_t destroy for FullAuthenticatedURL(uint64_t a1)
{
  if (*(void *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 24) != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1002173AC(*(void *)(a1 + 200), *(void *)(a1 + 208), *(unsigned char *)(a1 + 216));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FullAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    char v6 = (_OWORD *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)v6;
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v11 = *(void *)(a2 + 200);
  uint64_t v12 = *(void *)(a2 + 208);
  unsigned __int8 v13 = *(unsigned char *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100217C58(v11, v12, v13);
  *(void *)(a1 + 200) = v11;
  *(void *)(a1 + 208) = v12;
  *(unsigned char *)(a1 + 216) = v13;
  uint64_t v14 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v14;
  uint64_t v15 = *(void *)(a2 + 240);
  uint64_t v16 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = v15;
  *(void *)(a1 + 248) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FullAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) != 1)
  {
    if (v4 == 1)
    {
      sub_100274F10(a1);
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_15;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(a2 + 24);
    if (*(void *)(a1 + 24) == 1)
    {
      if (v8 != 1) {
        goto LABEL_10;
      }
    }
    else
    {
      if (v8 != 1)
      {
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_100274EBC(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  if (v4 != 1)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      goto LABEL_15;
    }
LABEL_10:
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_15:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v10 = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v11 = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v11;
  long long v12 = *(_OWORD *)(a2 + 136);
  long long v13 = *(_OWORD *)(a2 + 152);
  long long v14 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  *(_OWORD *)(a1 + 168) = v14;
  *(_OWORD *)(a1 + 152) = v13;
  *(_OWORD *)(a1 + 136) = v12;
  uint64_t v15 = *(void *)(a2 + 200);
  uint64_t v16 = *(void *)(a2 + 208);
  unsigned __int8 v17 = *(unsigned char *)(a2 + 216);
  sub_100217C58(v15, v16, v17);
  uint64_t v18 = *(void *)(a1 + 200);
  uint64_t v19 = *(void *)(a1 + 208);
  *(void *)(a1 + 200) = v15;
  *(void *)(a1 + 208) = v16;
  unsigned __int8 v20 = *(unsigned char *)(a1 + 216);
  *(unsigned char *)(a1 + 216) = v17;
  sub_1002173AC(v18, v19, v20);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100274EBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100274F10(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for IMAPURL(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x100uLL);
}

uint64_t assignWithTake for FullAuthenticatedURL(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    sub_100274F10(a1);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_10;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v6 = (void *)(a2 + 16);
  if (*(void *)(a1 + 24) != 1)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7 != 1)
    {
      *(void *)(a1 + 16) = *v6;
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_100274EBC(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_10:
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 178) = *(_OWORD *)(a2 + 178);
  char v11 = *(unsigned char *)(a2 + 216);
  uint64_t v12 = *(void *)(a1 + 200);
  uint64_t v13 = *(void *)(a1 + 208);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  unsigned __int8 v14 = *(unsigned char *)(a1 + 216);
  *(unsigned char *)(a1 + 216) = v11;
  sub_1002173AC(v12, v13, v14);
  uint64_t v15 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IMAPURL(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 256))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMAPURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 256) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 256) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FullAuthenticatedURL()
{
  return &type metadata for FullAuthenticatedURL;
}

uint64_t static FullDateTime.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8) || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  BOOL v3 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (!v3 || *(void *)(a1 + 40) != *(void *)(a2 + 40)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 56))
  {
    if ((*(unsigned char *)(a2 + 56) & 1) == 0) {
      return 0;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 1) != 0 || *(void *)(a1 + 48) != *(void *)(a2 + 48))
  {
    return 0;
  }
  return 1;
}

uint64_t FullDateTime.date.getter()
{
  return *(void *)v0;
}

uint64_t FullDateTime.date.setter(uint64_t result, uint64_t a2, uint64_t a3)
{
  *BOOL v3 = result;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

__n128 FullDateTime.time.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  __n128 result = *(__n128 *)(v1 + 24);
  long long v4 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

__n128 FullDateTime.time.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 56) = *(unsigned char *)(a1 + 32);
  return result;
}

void __swiftcall FullDateTime.init(date:time:)(NIOIMAPCore2::FullDateTime *__return_ptr retstr, NIOIMAPCore2::FullDate date, NIOIMAPCore2::FullTime *time)
{
  long long v3 = *(_OWORD *)&time->second;
  *(_OWORD *)&retstr->time.hour = *(_OWORD *)&time->hour;
  Swift::Bool is_nil = time->fraction.is_nil;
  retstr->date = date;
  *(_OWORD *)&retstr->time.second = v3;
  retstr->time.fraction.Swift::Bool is_nil = is_nil;
}

void FullDateTime.hash(into:)()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  Swift::UInt v2 = *(void *)(v0 + 16);
  sub_1005E3410(*(void *)v0);
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  Swift::UInt v3 = *(void *)(v0 + 32);
  Swift::UInt v5 = *(void *)(v0 + 40);
  Swift::UInt v4 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 56);
  sub_1005E3410(*(void *)(v0 + 24));
  sub_1005E3410(v3);
  sub_1005E3410(v5);
  if (v6)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(v4);
  }
}

uint64_t static FullTime.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 24) != *(void *)(a2 + 24)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

Swift::Int FullDateTime.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_1002753CC()
{
  return sub_1005E3470();
}

NIOIMAPCore2::FullDate __swiftcall FullDate.init(year:month:day:)(Swift::Int year, Swift::Int month, Swift::Int day)
{
  if ((unint64_t)(month - 13) < 0xFFFFFFFFFFFFFFF4 || (unint64_t)(day - 32) < 0xFFFFFFFFFFFFFFE1) {
    __break(1u);
  }
  result.day = day;
  result.month = month;
  result.year = year;
  return result;
}

uint64_t MailboxMetadata.highestModificationSequenceValue.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t MailboxMetadata.highestModificationSequenceValue.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

void __swiftcall FullTime.init(hour:minute:second:fraction:)(NIOIMAPCore2::FullTime *__return_ptr retstr, Swift::Int hour, Swift::Int minute, Swift::Int second, Swift::Int_optional fraction)
{
  retstr->hour = hour;
  retstr->minute = minute;
  retstr->second = second;
  retstr->fraction.Swift::Int value = fraction.value;
  retstr->fraction.Swift::Bool is_nil = fraction.is_nil;
}

void FullTime.hash(into:)()
{
  sub_1005E3410(*(void *)v0);
  sub_1005E3410(*(void *)(v0 + 8));
  sub_1005E3410(*(void *)(v0 + 16));
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    Swift::UInt v1 = *(void *)(v0 + 24);
    sub_1005E3420(1u);
    sub_1005E3410(v1);
  }
}

Swift::Int FullTime.hashValue.getter()
{
  sub_1005E33F0();
  sub_1005E3410(*(void *)v0);
  sub_1005E3410(*(void *)(v0 + 8));
  sub_1005E3410(*(void *)(v0 + 16));
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    Swift::UInt v1 = *(void *)(v0 + 24);
    sub_1005E3420(1u);
    sub_1005E3410(v1);
  }
  return sub_1005E3470();
}

Swift::Int sub_100275560()
{
  Swift::UInt v1 = *(void *)v0;
  Swift::UInt v2 = *(void *)(v0 + 8);
  Swift::UInt v4 = *(void *)(v0 + 16);
  Swift::UInt v3 = *(void *)(v0 + 24);
  int v5 = *(unsigned __int8 *)(v0 + 32);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v4);
  if (v5 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(v3);
  }
  return sub_1005E3470();
}

unint64_t sub_100275604()
{
  unint64_t result = qword_100710E18;
  if (!qword_100710E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E18);
  }
  return result;
}

unint64_t sub_100275654()
{
  unint64_t result = qword_100710E20;
  if (!qword_100710E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E20);
  }
  return result;
}

unint64_t sub_1002756A4()
{
  unint64_t result = qword_100710E28;
  if (!qword_100710E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E28);
  }
  return result;
}

void type metadata accessor for FullDateTime()
{
}

void type metadata accessor for FullDate()
{
}

__n128 initializeWithTake for OptionExtensionKind(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MailboxMetadata(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MailboxMetadata(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

void type metadata accessor for FullTime()
{
}

uint64_t sub_10027577C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  Swift::Int v7 = *(unsigned int *)(v4 + 20);
  uint64_t v8 = sub_100275B38(a1, 4);
  uint64_t v10 = v9;
  uint64_t v11 = sub_100275B38(a2, 2);
  uint64_t v13 = v12;
  uint64_t v14 = sub_100275B38(a3, 2);
  uint64_t v16 = v15;
  v25._uint64_t countAndFlagsBits = 45;
  v25._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v25);
  v26._uint64_t countAndFlagsBits = v11;
  v26._Swift::Int object = v13;
  sub_1005E1E30(v26);
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 45;
  v27._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v27);
  v28._uint64_t countAndFlagsBits = v14;
  v28._Swift::Int object = v16;
  sub_1005E1E30(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100210AD0(v8, (unint64_t)v10, v4 + 8, v7);
  Swift::Int v18 = v17;
  LOBYTE(v11) = v19;
  swift_bridgeObjectRelease();
  if (v11)
  {
    v20._uint64_t countAndFlagsBits = v8;
    v20._Swift::Int object = v10;
    Swift::Int v18 = ByteBuffer._setStringSlowpath(_:at:)(v20, v7);
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v22 = *(_DWORD *)(v4 + 20);
  BOOL v23 = __CFADD__(v22, v18);
  int v24 = v22 + v18;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v4 + 20) = v24;
    return v18;
  }
  return result;
}

uint64_t sub_1002758D0(uint64_t a1)
{
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  v33[0] = *(_OWORD *)v1;
  v33[1] = v4;
  v33[2] = *(_OWORD *)(v1 + 32);
  uint64_t v34 = *(void *)(v1 + 48);
  Swift::Int v5 = DWORD1(v4);
  uint64_t v6 = *(void *)a1;
  sub_100269888((uint64_t)v33);
  uint64_t v7 = sub_100275B38(v6, 2);
  uint64_t v9 = v8;
  sub_1002698C0((uint64_t)v33);
  uint64_t v10 = *(void *)(a1 + 8);
  sub_100269888((uint64_t)v33);
  uint64_t v11 = sub_100275B38(v10, 2);
  uint64_t v13 = v12;
  sub_1002698C0((uint64_t)v33);
  uint64_t v14 = *(void *)(a1 + 16);
  sub_100269888((uint64_t)v33);
  uint64_t v15 = sub_100275B38(v14, 2);
  Swift::Int v17 = v16;
  sub_1002698C0((uint64_t)v33);
  v35._uint64_t countAndFlagsBits = 58;
  v35._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v35);
  v36._uint64_t countAndFlagsBits = v11;
  v36._Swift::Int object = v13;
  sub_1005E1E30(v36);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 58;
  v37._Swift::Int object = (void *)0xE100000000000000;
  sub_1005E1E30(v37);
  v38._uint64_t countAndFlagsBits = v15;
  v38._Swift::Int object = v17;
  sub_1005E1E30(v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100210AD0(v7, (unint64_t)v9, v2 + 8, v5);
  Swift::Int v19 = v18;
  LOBYTE(v17) = v20;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v21._uint64_t countAndFlagsBits = v7;
    v21._Swift::Int object = v9;
    Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v21, v5);
  }
  uint64_t result = swift_bridgeObjectRelease();
  int v23 = *(_DWORD *)(v2 + 20);
  Swift::Int v24 = (v23 + v19);
  if (__CFADD__(v23, v19))
  {
    __break(1u);
    goto LABEL_13;
  }
  *(_DWORD *)(v2 + 20) = v24;
  if (*(unsigned char *)(a1 + 32))
  {
    Swift::Int v25 = 0;
  }
  else
  {
    v39._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_100210AD0(46, 0xE100000000000000, v2 + 8, v24);
    Swift::Int v25 = v26;
    char v28 = v27;
    swift_bridgeObjectRelease();
    if (v28)
    {
      v29._uint64_t countAndFlagsBits = 46;
      v29._Swift::Int object = (void *)0xE100000000000000;
      Swift::Int v25 = ByteBuffer._setStringSlowpath(_:at:)(v29, v24);
    }
    uint64_t result = swift_bridgeObjectRelease();
    int v30 = *(_DWORD *)(v2 + 20);
    BOOL v31 = __CFADD__(v30, v25);
    int v32 = v30 + v25;
    if (v31) {
      goto LABEL_14;
    }
    *(_DWORD *)(v2 + 20) = v32;
  }
  uint64_t result = v19 + v25;
  if (__OFADD__(v19, v25))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_100275B38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1005E3230();
  Swift::Int v5 = v4;
  if (sub_1005E1DC0() >= a2) {
    return v3;
  }
  uint64_t result = sub_1005E1DC0();
  Swift::Int v7 = a2 - result;
  if (!__OFSUB__(a2, result))
  {
    v9._uint64_t countAndFlagsBits = 48;
    v9._Swift::Int object = (void *)0xE100000000000000;
    uint64_t v8 = sub_1005E1F10(v9, v7);
    swift_bridgeObjectRetain();
    v10._uint64_t countAndFlagsBits = v3;
    v10._Swift::Int object = v5;
    sub_1005E1E30(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

void sub_100275BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = v3;
  if (*(void *)(a3 + 16))
  {
    char v5 = *v3;
    *long long v4 = 0;
    sub_1001F2224();
    *long long v4 = v5;
  }
  else
  {
    Swift::Int v6 = *((unsigned int *)v3 + 5);
    sub_100210AD0(4999502, 0xE300000000000000, (uint64_t)(v3 + 8), *((_DWORD *)v3 + 5));
    if (v8)
    {
      v9._uint64_t countAndFlagsBits = 4999502;
      v9._Swift::Int object = (void *)0xE300000000000000;
      int v7 = ByteBuffer._setStringSlowpath(_:at:)(v9, v6);
    }
    int v10 = *((_DWORD *)v3 + 5);
    BOOL v11 = __CFADD__(v10, v7);
    int v12 = v10 + v7;
    if (v11) {
      __break(1u);
    }
    else {
      *((_DWORD *)v3 + 5) = v12;
    }
  }
}

uint64_t IMAPServer.userAuthenticationMechanism.getter()
{
  uint64_t v0 = sub_1002381C4();
  sub_1002747A4(v0, v1, v2, v3);
  return sub_1002381C4();
}

void IMAPServer.userAuthenticationMechanism.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100274874(*v4, v4[1], v4[2], v4[3]);
  *long long v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t ServerID.os.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServerID.os.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t MailboxStatus.unseenCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t IMAPServer.init(userAuthenticationMechanism:host:port:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8 & 1;
  return result;
}

void IMAPServer.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 8);
  if (v4 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 16);
    uint64_t v5 = *(void *)(v2 + 24);
    uint64_t v7 = *(void *)v2;
    sub_1005E3420(1u);
    uint64_t v8 = sub_100276708();
    sub_1002747A4(v8, v9, v10, v11);
    swift_bridgeObjectRetain();
    sub_1001F3264(v6, v5);
    UserAuthenticationMechanism.hash(into:)(a1, v7, v4, v6, v5);
    swift_bridgeObjectRelease();
    sub_1001F3278(v6, v5);
    uint64_t v12 = sub_100276708();
    sub_100274874(v12, v13, v14, v15);
  }
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + 56) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    Swift::UInt v16 = *(void *)(v2 + 48);
    sub_1005E3420(1u);
    sub_1005E3410(v16);
  }
}

uint64_t static IMAPServer.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (v4 == 1)
  {
    if (v7 == 1) {
      goto LABEL_3;
    }
    goto LABEL_12;
  }
  if (v7 == 1)
  {
LABEL_12:
    uint64_t v14 = sub_1002766F4();
    sub_1002747A4(v14, v15, v16, v17);
    uint64_t v18 = sub_1002766E0();
    sub_1002747A4(v18, v19, v20, v21);
    uint64_t v22 = sub_1002766F4();
    sub_100274874(v22, v23, v24, v25);
    uint64_t v26 = sub_1002766E0();
    sub_100274874(v26, v27, v28, v29);
    return 0;
  }
  if (v4)
  {
    if (!v7) {
      return 0;
    }
    if (*(void *)a1 != *(void *)a2 || v4 != v7)
    {
      char v31 = sub_1005E3290();
      uint64_t result = 0;
      if ((v31 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v6 == 1)
  {
    if (v8 != 1) {
      return 0;
    }
  }
  else
  {
    if (v8 == 1) {
      return 0;
    }
    if (v6)
    {
      if (v8)
      {
        if (v5 != v9 || v6 != v8)
        {
          char v33 = sub_1005E3290();
          uint64_t result = 0;
          if ((v33 & 1) == 0) {
            return result;
          }
        }
        goto LABEL_3;
      }
      return 0;
    }
    if (v8) {
      return 0;
    }
  }
LABEL_3:
  BOOL v10 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (v10 || (char v11 = sub_1005E3290(), result = 0, (v11 & 1) != 0))
  {
    char v13 = *(unsigned char *)(a2 + 56);
    if (*(unsigned char *)(a1 + 56))
    {
      if (*(unsigned char *)(a2 + 56)) {
        return 1;
      }
    }
    else
    {
      if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
        char v13 = 1;
      }
      if ((v13 & 1) == 0) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

Swift::Int IMAPServer.hashValue.getter()
{
  sub_1005E33F0();
  IMAPServer.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_1002760A4()
{
  sub_1005E33F0();
  IMAPServer.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

uint64_t sub_1002760E4(uint64_t a1)
{
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  v39[0] = *(_OWORD *)v1;
  v39[1] = v4;
  void v39[2] = *(_OWORD *)(v1 + 32);
  uint64_t v40 = *(void *)(v1 + 48);
  sub_100269888((uint64_t)v39);
  uint64_t v5 = sub_1002766CC();
  sub_1002747A4(v5, v6, v7, v8);
  uint64_t v9 = sub_1002766CC();
  sub_1001F2F84(v9, v10, v11, v12, v13, v1);
  uint64_t v15 = v14;
  sub_1002698C0((uint64_t)v39);
  uint64_t v16 = sub_1002766CC();
  sub_100274874(v16, v17, v18, v19);
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v20 = *(void **)(a1 + 40);
  Swift::Int v22 = *(unsigned int *)(v1 + 20);
  swift_bridgeObjectRetain();
  sub_100210AD0(v21, (unint64_t)v20, v1 + 8, v22);
  if (v24)
  {
    v25._uint64_t countAndFlagsBits = v21;
    v25._Swift::Int object = v20;
    Swift::Int v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
  }
  Swift::Int v26 = v23;
  uint64_t result = swift_bridgeObjectRelease();
  int v28 = *(_DWORD *)(v2 + 20);
  Swift::Int v29 = (v28 + v26);
  if (__CFADD__(v28, v26))
  {
    __break(1u);
    goto LABEL_14;
  }
  *(_DWORD *)(v2 + 20) = v29;
  Swift::Int v30 = v15 + v26;
  if (__OFADD__(v15, v26))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 56))
  {
    Swift::Int v31 = 0;
  }
  else
  {
    v41._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_100210AD0(58, 0xE100000000000000, v2 + 8, v29);
    Swift::Int v31 = v32;
    char v34 = v33;
    swift_bridgeObjectRelease();
    if (v34)
    {
      v35._uint64_t countAndFlagsBits = 58;
      v35._Swift::Int object = (void *)0xE100000000000000;
      Swift::Int v31 = ByteBuffer._setStringSlowpath(_:at:)(v35, v29);
    }
    uint64_t result = swift_bridgeObjectRelease();
    int v36 = *(_DWORD *)(v2 + 20);
    BOOL v37 = __CFADD__(v36, v31);
    int v38 = v36 + v31;
    if (v37) {
      goto LABEL_16;
    }
    *(_DWORD *)(v2 + 20) = v38;
  }
  uint64_t result = v30 + v31;
  if (__OFADD__(v30, v31))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

unint64_t sub_1002762BC()
{
  unint64_t result = qword_100710E30;
  if (!qword_100710E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E30);
  }
  return result;
}

uint64_t destroy for IMAPServer(uint64_t a1)
{
  if (*(void *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 24) != 1) {
      swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IMAPServer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v6 = (_OWORD *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)v6;
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IMAPServer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) != 1)
  {
    if (v4 == 1)
    {
      sub_100274F10(a1);
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_15;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(a2 + 24);
    if (*(void *)(a1 + 24) == 1)
    {
      if (v8 != 1) {
        goto LABEL_10;
      }
    }
    else
    {
      if (v8 != 1)
      {
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_100274EBC(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  if (v4 != 1)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      goto LABEL_15;
    }
LABEL_10:
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_15:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithTake for IMAPServer(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    sub_100274F10(a1);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_10;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v6 = (void *)(a2 + 16);
  if (*(void *)(a1 + 24) != 1)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7 != 1)
    {
      *(void *)(a1 + 16) = *v6;
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_100274EBC(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_10:
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for IMAPServer(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IMAPServer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IMAPServer()
{
  return &type metadata for IMAPServer;
}

uint64_t sub_1002766CC()
{
  return v0;
}

uint64_t sub_1002766E0()
{
  return v0;
}

uint64_t sub_1002766F4()
{
  return v0;
}

uint64_t sub_100276708()
{
  return v0;
}

uint64_t IMAPURL.server.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100276728(v1, a1);
}

uint64_t sub_100276728(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t IMAPURL.server.setter(uint64_t a1)
{
  return sub_10027678C(a1, v1);
}

uint64_t sub_10027678C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t IMAPURL.command.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10021709C(v1 + 64, a1);
}

uint64_t IMAPURL.command.setter(uint64_t a1)
{
  return sub_1002767FC(a1, v1 + 64);
}

uint64_t sub_1002767FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070FD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *IMAPURL.init(server:query:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1001E5424(a2, (uint64_t)v10);
  sub_1001E5424((uint64_t)v10, (uint64_t)v11);
  long long v6 = *(_OWORD *)(a1 + 16);
  long long v5 = *(_OWORD *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 56);
  __src[0] = *(_OWORD *)a1;
  __src[1] = v6;
  __src[2] = v5;
  *(void *)&__src[3] = v7;
  BYTE8(__src[3]) = v8 & 1;
  sub_1001E5424((uint64_t)v11, (uint64_t)&__src[4]);
  return memcpy(a3, __src, 0x100uLL);
}

void IMAPURL.hash(into:)(uint64_t a1)
{
  long long v3 = v1[1];
  v5[0] = *v1;
  v5[1] = v3;
  v6[0] = v1[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)v1 + 41);
  sub_1002747F4((uint64_t *)v5);
  IMAPServer.hash(into:)(a1);
  sub_100274834((uint64_t *)v5);
  sub_1001E5424((uint64_t)(v1 + 4), (uint64_t)v8);
  sub_1001E5424((uint64_t)v8, (uint64_t)v9);
  if (sub_1002174E0((uint64_t)v9) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1001E5424((uint64_t)v8, (uint64_t)v4);
    sub_100217504((uint64_t)v4, (uint64_t)v7);
    sub_1005E3420(1u);
    sub_1002771E8(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217AD0);
    URLCommand.hash(into:)();
    sub_1002771E8(v8, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
  }
}

BOOL static IMAPURL.__derived_struct_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a1[1];
  v18[0] = *a1;
  v18[1] = v4;
  v19[0] = a1[2];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)a1 + 41);
  long long v5 = a2[1];
  v16[0] = *a2;
  v16[1] = v5;
  v17[0] = a2[2];
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)a2 + 41);
  if ((static IMAPServer.__derived_struct_equals(_:_:)((uint64_t)v18, (uint64_t)v16) & 1) == 0) {
    return 0;
  }
  sub_1001E5424((uint64_t)(a1 + 4), (uint64_t)v13);
  sub_1001E5424((uint64_t)(a2 + 4), (uint64_t)v14);
  sub_1001E5424((uint64_t)v13, (uint64_t)v15);
  if (sub_1002174E0((uint64_t)v15) == 1)
  {
    sub_1001E5424((uint64_t)v14, (uint64_t)v11);
    if (sub_1002174E0((uint64_t)v11) == 1) {
      return 1;
    }
    goto LABEL_6;
  }
  sub_1001E5424((uint64_t)v14, (uint64_t)v10);
  if (sub_1002174E0((uint64_t)v10) == 1)
  {
LABEL_6:
    sub_1001E5424((uint64_t)v13, (uint64_t)v11);
    sub_1001E5424((uint64_t)v14, (uint64_t)&v12);
    sub_1002771E8(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
    sub_1002771E8(v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
    sub_100217C70((uint64_t)v11);
    return 0;
  }
  sub_1001E5424((uint64_t)v13, (uint64_t)v8);
  sub_100217504((uint64_t)v8, (uint64_t)v20);
  sub_1001E5424((uint64_t)v14, (uint64_t)v9);
  sub_100217504((uint64_t)v9, (uint64_t)v11);
  sub_1002771E8(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
  sub_1002771E8(v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
  BOOL v6 = static URLCommand.__derived_enum_equals(_:_:)((uint64_t)v20, (uint64_t)v11);
  sub_1002771E8(v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
  sub_1002771E8(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
  return v6;
}

Swift::Int IMAPURL.hashValue.getter()
{
  sub_1005E33F0();
  IMAPURL.hash(into:)((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_100276C2C()
{
  memcpy(v2, v0, sizeof(v2));
  return IMAPURL.hashValue.getter();
}

void sub_100276C68(uint64_t a1)
{
  memcpy(v3, v1, sizeof(v3));
  IMAPURL.hash(into:)(a1);
}

Swift::Int sub_100276CB4()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_1005E33F0();
  IMAPURL.hash(into:)((uint64_t)v2);
  return sub_1005E3470();
}

BOOL sub_100276D14(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static IMAPURL.__derived_struct_equals(_:_:)(v4, __dst);
}

void sub_100276D6C(_OWORD *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 8;
  Swift::Int v5 = *(unsigned int *)(v1 + 20);
  uint64_t v6 = sub_100277BFC();
  sub_100210AD0(v6, v7, v4, v5);
  if (v9)
  {
    v10._uint64_t countAndFlagsBits = sub_100277BFC();
    Swift::Int v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v5);
  }
  Swift::Int v11 = v8;
  int v12 = *(_DWORD *)(v2 + 20);
  BOOL v13 = __CFADD__(v12, v8);
  int v14 = v12 + v8;
  if (v13)
  {
    __break(1u);
    goto LABEL_21;
  }
  *(_DWORD *)(v2 + 20) = v14;
  long long v15 = a1[1];
  v65[0] = *a1;
  v65[1] = v15;
  v66[0] = a1[2];
  *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)a1 + 41);
  uint64_t v16 = sub_1002760E4((uint64_t)v65);
  BOOL v17 = __OFADD__(v11, v16);
  Swift::Int v18 = v11 + v16;
  if (v17)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  Swift::Int v19 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(47, 0xE100000000000000, v4, *(_DWORD *)(v2 + 20));
  if (v21)
  {
    v22._uint64_t countAndFlagsBits = 47;
    v22._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v20 = ByteBuffer._setStringSlowpath(_:at:)(v22, v19);
  }
  int v23 = *(_DWORD *)(v2 + 20);
  BOOL v13 = __CFADD__(v23, v20);
  int v24 = v23 + v20;
  if (v13) {
    goto LABEL_22;
  }
  *(_DWORD *)(v2 + 20) = v24;
  BOOL v17 = __OFADD__(v18, v20);
  Swift::Int v25 = v18 + v20;
  if (v17)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001E5424((uint64_t)(a1 + 4), (uint64_t)v63);
  sub_1001E5424((uint64_t)v63, (uint64_t)v64);
  if (sub_1002174E0((uint64_t)v64) == 1)
  {
    uint64_t v26 = 0;
  }
  else
  {
    sub_1001E5424((uint64_t)v63, (uint64_t)v61);
    sub_100217504((uint64_t)v61, (uint64_t)v62);
    int v27 = sub_100277BE0((uint64_t)v62);
    uint64_t v28 = sub_100277BEC((uint64_t)v62);
    uint64_t v29 = *(void *)(v28 + 8);
    int v30 = *(_DWORD *)(v28 + 16);
    char v31 = *(unsigned char *)(v28 + 20);
    if (v27 == 1)
    {
      Swift::Int v54 = v25;
      int v32 = *(_DWORD *)(v28 + 24);
      char v33 = *(unsigned char *)(v28 + 64);
      char v34 = *(unsigned char *)(v28 + 65);
      v77[0] = *(void *)v28;
      v77[1] = v29;
      int v78 = v30;
      char v79 = v31;
      int v80 = v32;
      long long v35 = *(_OWORD *)(v28 + 48);
      long long v81 = *(_OWORD *)(v28 + 32);
      long long v82 = v35;
      char v83 = v33;
      char v84 = v34;
      uint64_t v37 = *(void *)(v28 + 72);
      uint64_t v36 = *(void *)(v28 + 80);
      uint64_t v38 = *(void *)(v28 + 88);
      uint64_t v39 = *(void *)(v28 + 96);
      uint64_t v40 = *(void *)(v28 + 104);
      uint64_t v59 = *(void *)(v28 + 120);
      uint64_t v60 = *(void *)(v28 + 112);
      uint64_t v57 = *(void *)(v28 + 136);
      uint64_t v58 = *(void *)(v28 + 128);
      uint64_t v55 = *(void *)(v28 + 152);
      uint64_t v56 = *(void *)(v28 + 144);
      Swift::String v41 = *(void **)(v28 + 168);
      uint64_t v53 = *(void *)(v28 + 160);
      uint64_t v42 = *(void **)(v28 + 184);
      uint64_t v52 = *(void *)(v28 + 176);
      swift_retain();
      swift_retain();
      sub_1002771E8(v63, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
      sub_10028B554((uint64_t)v77);
      uint64_t v44 = v43;
      if (v41)
      {
        uint64_t v50 = v43;
        uint64_t v67 = v37;
        uint64_t v68 = v36;
        uint64_t v69 = v38;
        *(void *)&long long v70 = v39;
        *((void *)&v70 + 1) = v40;
        uint64_t v71 = v60;
        uint64_t v72 = v59;
        __int16 v73 = v58 & 0x1FF;
        uint64_t v74 = v57;
        uint64_t v75 = v56;
        char v76 = v55;
        swift_retain();
        swift_retain();
        sub_100217BFC(v37, v36, v38, v39, v40, v60, v59, v58, v57, v56, v55, v53, (uint64_t)v41);
        sub_10022DAD0((uint64_t)&v67);
        uint64_t v51 = v45;
        sub_10022E5E0(v53, v41, v52, v42);
        uint64_t v47 = v46;
        sub_100217350(v37, v36, v38, v39, v40, v60, v59, v58, v57, v56, v55, v53, (uint64_t)v41);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1002771E8(v63, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
        uint64_t v48 = v51 + v47;
        if (__OFADD__(v51, v47))
        {
LABEL_26:
          __break(1u);
          return;
        }
        uint64_t v44 = v50;
      }
      else
      {
        swift_release();
        swift_release();
        sub_1002771E8(v63, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
        uint64_t v48 = 0;
      }
      Swift::Int v25 = v54;
      uint64_t v26 = v44 + v48;
      if (__OFADD__(v44, v48))
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v67 = *(void *)v28;
      uint64_t v68 = v29;
      LODWORD(v69) = v30;
      BYTE4(v69) = v31;
      long long v70 = *(_OWORD *)(v28 + 24);
      swift_retain();
      swift_retain();
      sub_1002771E8(v63, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217A34);
      sub_10026B8E8((uint64_t)&v67);
      uint64_t v26 = v49;
      swift_release();
      swift_release();
      sub_1002771E8(v63, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100217184);
    }
  }
  if (__OFADD__(v25, v26))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
}

void *sub_1002771E8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

unint64_t sub_100277260()
{
  unint64_t result = qword_100710E38;
  if (!qword_100710E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E38);
  }
  return result;
}

uint64_t destroy for IMAPURL(uint64_t a1)
{
  if (*(void *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 24) != 1) {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 128);
  if (v3 < 0xFFFFFFFE00000000 || (v4 & 0xFFFFFFFFFFFFFE00) != 0x200) {
    return sub_100217220(*(void *)(a1 + 64), *(void *)(a1 + 72), v3, *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4, *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160), *(void *)(a1 + 168), *(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208),
  }
             *(_OWORD *)(a1 + 216),
             *(void *)(a1 + 224),
             *(void *)(a1 + 232));
  return result;
}

uint64_t initializeWithCopy for IMAPURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v6 = (_OWORD *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v6;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)v6;
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  unint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  if (v9 >= 0xFFFFFFFE00000000 && (v10 & 0xFFFFFFFFFFFFFE00) == 0x200)
  {
    memcpy((void *)(a1 + 64), (const void *)(a2 + 64), 0xC0uLL);
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 88);
    uint64_t v12 = *(void *)(a2 + 96);
    uint64_t v13 = *(void *)(a2 + 104);
    uint64_t v14 = *(void *)(a2 + 112);
    uint64_t v15 = *(void *)(a2 + 120);
    uint64_t v21 = *(void *)(a2 + 136);
    uint64_t v22 = *(void *)(a2 + 144);
    uint64_t v23 = *(void *)(a2 + 152);
    uint64_t v24 = *(void *)(a2 + 160);
    uint64_t v25 = *(void *)(a2 + 168);
    uint64_t v26 = *(void *)(a2 + 176);
    uint64_t v27 = *(void *)(a2 + 184);
    uint64_t v28 = *(void *)(a2 + 192);
    uint64_t v29 = *(void *)(a2 + 200);
    uint64_t v30 = *(void *)(a2 + 208);
    uint64_t v31 = *(void *)(a2 + 216);
    uint64_t v32 = *(void *)(a2 + 224);
    uint64_t v33 = *(void *)(a2 + 232);
    uint64_t v34 = *(void *)(a2 + 240);
    uint64_t v35 = *(void *)(a2 + 248);
    uint64_t v16 = *(void *)(a2 + 64);
    uint64_t v17 = *(void *)(a2 + 72);
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    sub_100217AD0(v16, v17, v9, v11, v12, v13, v14, v15, v10, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30,
      v31,
      v32,
      v33);
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = v11;
    *(void *)(a1 + 96) = v12;
    *(void *)(a1 + 104) = v18;
    *(void *)(a1 + 112) = v19;
    *(void *)(a1 + 120) = v15;
    *(void *)(a1 + 128) = v10;
    *(void *)(a1 + 136) = v21;
    *(void *)(a1 + 144) = v22;
    *(void *)(a1 + 152) = v23;
    *(void *)(a1 + 160) = v24;
    *(void *)(a1 + 168) = v25;
    *(void *)(a1 + 176) = v26;
    *(void *)(a1 + 184) = v27;
    *(void *)(a1 + 192) = v28;
    *(void *)(a1 + 200) = v29;
    *(void *)(a1 + 208) = v30;
    *(void *)(a1 + 216) = v31;
    *(void *)(a1 + 224) = v32;
    *(void *)(a1 + 232) = v33;
    *(void *)(a1 + 240) = v34;
    *(void *)(a1 + 248) = v35;
  }
  return a1;
}

uint64_t assignWithCopy for IMAPURL(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      goto LABEL_15;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    if (v7 == 1)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      goto LABEL_15;
    }
    goto LABEL_10;
  }
  if (v4 == 1)
  {
    sub_100274F10(a1);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_15;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) == 1)
  {
    if (v8 != 1)
    {
LABEL_10:
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v8 == 1)
  {
    sub_100274EBC(a1 + 16);
LABEL_13:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v9;
  unint64_t v10 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 128);
  BOOL v13 = v10 > 0xFFFFFFFDFFFFFFFFLL && (v11 & 0xFFFFFFFFFFFFFE00) == 512;
  if (*(void *)(a1 + 80) < 0xFFFFFFFE00000000 || (*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    if (!v13)
    {
      uint64_t v23 = *(void *)(a2 + 64);
      uint64_t v24 = *(void *)(a2 + 72);
      uint64_t v25 = *(void *)(a2 + 88);
      uint64_t v26 = *(void *)(a2 + 96);
      uint64_t v27 = *(void *)(a2 + 112);
      uint64_t v28 = *(void *)(a2 + 120);
      uint64_t v53 = *(void *)(a2 + 136);
      uint64_t v55 = *(void *)(a2 + 144);
      uint64_t v57 = *(void *)(a2 + 152);
      uint64_t v59 = *(void *)(a2 + 160);
      uint64_t v61 = *(void *)(a2 + 168);
      uint64_t v63 = *(void *)(a2 + 176);
      uint64_t v65 = *(void *)(a2 + 184);
      uint64_t v67 = *(void *)(a2 + 192);
      uint64_t v69 = *(void *)(a2 + 200);
      uint64_t v71 = *(void *)(a2 + 208);
      uint64_t v73 = *(void *)(a2 + 216);
      uint64_t v75 = *(void *)(a2 + 224);
      uint64_t v77 = *(void *)(a2 + 232);
      uint64_t v79 = *(void *)(a2 + 240);
      uint64_t v81 = *(void *)(a2 + 248);
      uint64_t v29 = *(void *)(a2 + 104);
      sub_100217AD0(v23, v24, v10, v25, v26, v29, v27, v28, v11, v53, v55, v57, v59, v61, v63, v65, v67, v69, v71,
        v73,
        v75,
        v77);
      uint64_t v30 = *(void *)(a1 + 64);
      uint64_t v31 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v23;
      *(void *)(a1 + 72) = v24;
      uint64_t v32 = *(void *)(a1 + 80);
      uint64_t v33 = *(void *)(a1 + 88);
      *(void *)(a1 + 80) = v10;
      *(void *)(a1 + 88) = v25;
      uint64_t v34 = *(void *)(a1 + 96);
      uint64_t v35 = *(void *)(a1 + 104);
      *(void *)(a1 + 96) = v26;
      *(void *)(a1 + 104) = v29;
      uint64_t v36 = *(void *)(a1 + 112);
      uint64_t v37 = *(void *)(a1 + 120);
      *(void *)(a1 + 112) = v27;
      *(void *)(a1 + 120) = v28;
      long long v38 = *(_OWORD *)(a1 + 128);
      long long v39 = *(_OWORD *)(a1 + 144);
      *(void *)(a1 + 128) = v11;
      *(void *)(a1 + 136) = v53;
      *(void *)(a1 + 144) = v55;
      *(void *)(a1 + 152) = v57;
      long long v40 = *(_OWORD *)(a1 + 160);
      long long v41 = *(_OWORD *)(a1 + 176);
      *(void *)(a1 + 160) = v59;
      *(void *)(a1 + 168) = v61;
      *(void *)(a1 + 176) = v63;
      *(void *)(a1 + 184) = v65;
      long long v42 = *(_OWORD *)(a1 + 192);
      long long v43 = *(_OWORD *)(a1 + 208);
      *(void *)(a1 + 192) = v67;
      *(void *)(a1 + 200) = v69;
      *(void *)(a1 + 208) = v71;
      *(void *)(a1 + 216) = v73;
      long long v44 = *(_OWORD *)(a1 + 224);
      *(void *)(a1 + 224) = v75;
      *(void *)(a1 + 232) = v77;
      *(void *)(a1 + 240) = v79;
      *(void *)(a1 + 248) = v81;
      sub_100217220(v30, v31, v32, v33, v34, v35, v36, v37, v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43,
        BYTE8(v43),
        v44,
        *((uint64_t *)&v44 + 1));
      return a1;
    }
    sub_100218354(a1 + 64);
    goto LABEL_27;
  }
  if (v13)
  {
LABEL_27:
    memcpy((void *)(a1 + 64), (const void *)(a2 + 64), 0xC0uLL);
    return a1;
  }
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  uint64_t v16 = *(void *)(a2 + 104);
  uint64_t v17 = *(void *)(a2 + 112);
  uint64_t v18 = *(void *)(a2 + 120);
  uint64_t v52 = *(void *)(a2 + 136);
  uint64_t v54 = *(void *)(a2 + 144);
  uint64_t v56 = *(void *)(a2 + 152);
  uint64_t v58 = *(void *)(a2 + 160);
  uint64_t v60 = *(void *)(a2 + 168);
  uint64_t v62 = *(void *)(a2 + 176);
  uint64_t v64 = *(void *)(a2 + 184);
  uint64_t v66 = *(void *)(a2 + 192);
  uint64_t v68 = *(void *)(a2 + 200);
  uint64_t v70 = *(void *)(a2 + 208);
  uint64_t v72 = *(void *)(a2 + 216);
  uint64_t v74 = *(void *)(a2 + 224);
  uint64_t v76 = *(void *)(a2 + 232);
  uint64_t v78 = *(void *)(a2 + 240);
  uint64_t v80 = *(void *)(a2 + 248);
  long long v51 = *(_OWORD *)(a2 + 224);
  long long v50 = *(_OWORD *)(a2 + 208);
  long long v49 = *(_OWORD *)(a2 + 192);
  long long v48 = *(_OWORD *)(a2 + 176);
  long long v47 = *(_OWORD *)(a2 + 160);
  long long v46 = *(_OWORD *)(a2 + 144);
  uint64_t v19 = *(void *)(a2 + 64);
  uint64_t v20 = *(void *)(a2 + 72);
  uint64_t v21 = v16;
  uint64_t v22 = v17;
  sub_100217AD0(v19, v20, v10, v14, v15, v16, v17, v18, v11, v52, v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48, *((uint64_t *)&v48 + 1), v49, *((uint64_t *)&v49 + 1), v50,
    BYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1));
  *(void *)(a1 + 64) = v19;
  *(void *)(a1 + 72) = v20;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v21;
  *(void *)(a1 + 112) = v22;
  *(void *)(a1 + 120) = v18;
  *(void *)(a1 + 128) = v11;
  *(void *)(a1 + 136) = v52;
  *(void *)(a1 + 144) = v54;
  *(void *)(a1 + 152) = v56;
  *(void *)(a1 + 160) = v58;
  *(void *)(a1 + 168) = v60;
  *(void *)(a1 + 176) = v62;
  *(void *)(a1 + 184) = v64;
  *(void *)(a1 + 192) = v66;
  *(void *)(a1 + 200) = v68;
  *(void *)(a1 + 208) = v70;
  *(void *)(a1 + 216) = v72;
  *(void *)(a1 + 224) = v74;
  *(void *)(a1 + 232) = v76;
  *(void *)(a1 + 240) = v78;
  *(void *)(a1 + 248) = v80;
  return a1;
}

uint64_t assignWithTake for IMAPURL(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    sub_100274F10(a1);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_10;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v6 = (void *)(a2 + 16);
  if (*(void *)(a1 + 24) != 1)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7 != 1)
    {
      *(void *)(a1 + 16) = *v6;
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_100274EBC(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
LABEL_10:
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  unint64_t v9 = *(void *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 128);
  unint64_t v11 = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 128);
  if (v9 < 0xFFFFFFFE00000000 || (v10 & 0xFFFFFFFFFFFFFE00) != 0x200)
  {
    if (v11 < 0xFFFFFFFE00000000 || (v12 & 0xFFFFFFFFFFFFFE00) != 0x200)
    {
      uint64_t v13 = *(void *)(a2 + 120);
      uint64_t v14 = *(void *)(a2 + 248);
      uint64_t v15 = *(void *)(a1 + 64);
      uint64_t v16 = *(void *)(a1 + 72);
      uint64_t v17 = *(void *)(a1 + 88);
      uint64_t v18 = *(void *)(a1 + 96);
      uint64_t v19 = *(void *)(a1 + 104);
      uint64_t v20 = *(void *)(a1 + 112);
      uint64_t v21 = *(void *)(a1 + 120);
      long long v22 = *(_OWORD *)(a1 + 136);
      long long v23 = *(_OWORD *)(a1 + 152);
      long long v24 = *(_OWORD *)(a1 + 168);
      long long v25 = *(_OWORD *)(a1 + 184);
      long long v26 = *(_OWORD *)(a1 + 200);
      long long v27 = *(_OWORD *)(a1 + 216);
      long long v28 = *(_OWORD *)(a1 + 232);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(void *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(void *)(a1 + 120) = v13;
      *(void *)(a1 + 128) = v12;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      *(void *)(a1 + 248) = v14;
      sub_100217220(v15, v16, v9, v17, v18, v19, v20, v21, v10, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1),
        v27,
        *((uint64_t *)&v27 + 1),
        v28);
      return a1;
    }
    sub_100218354(a1 + 64);
  }
  memcpy((void *)(a1 + 64), (const void *)(a2 + 64), 0xC0uLL);
  return a1;
}

ValueMetadata *type metadata accessor for IMAPURL()
{
  return &type metadata for IMAPURL;
}

uint64_t sub_100277BE0(uint64_t a1)
{
  return *(void *)(a1 + 64) >> 63;
}

uint64_t sub_100277BEC(uint64_t result)
{
  *(void *)(result + 64) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_100277BFC()
{
  return 0x2F2F3A70616D69;
}

void IMAPURLAuthenticationMechanism.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3410(0);
  }
}

uint64_t static IMAPURLAuthenticationMechanism.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return a4 == 0;
  }
  if (!a4) {
    return 0;
  }
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_1005E3290();
  }
}

Swift::Int IMAPURLAuthenticationMechanism.hashValue.getter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3410(0);
  }
  return sub_1005E3470();
}

Swift::Int sub_100277D50()
{
  return IMAPURLAuthenticationMechanism.hashValue.getter(*v0, v0[1]);
}

void sub_100277D58(uint64_t a1)
{
  IMAPURLAuthenticationMechanism.hash(into:)(a1, *v1, v1[1]);
}

Swift::Int sub_100277D60()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1005E33F0();
  if (v1)
  {
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3410(0);
  }
  return sub_1005E3470();
}

unint64_t sub_100277DE0()
{
  unint64_t result = qword_100710E40;
  if (!qword_100710E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E40);
  }
  return result;
}

uint64_t sub_100277E2C(uint64_t *a1, uint64_t *a2)
{
  return static IMAPURLAuthenticationMechanism.__derived_enum_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

ValueMetadata *type metadata accessor for IMAPURLAuthenticationMechanism()
{
  return &type metadata for IMAPURLAuthenticationMechanism;
}

void sub_100277E50(uint64_t a1, void *a2)
{
  if (!a2) {
    goto LABEL_11;
  }
  Swift::Int v5 = *(unsigned int *)(v2 + 20);
  uint64_t v6 = sub_100277F9C();
  sub_100210AD0(v6, v7, v2 + 8, v5);
  if (v9)
  {
    v10._uint64_t countAndFlagsBits = sub_100277F9C();
    Swift::Int v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v5);
  }
  Swift::Int v11 = v8;
  int v12 = *(_DWORD *)(v2 + 20);
  Swift::Int v13 = (v12 + v8);
  if (__CFADD__(v12, v8))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  *(_DWORD *)(v2 + 20) = v13;
  swift_bridgeObjectRetain();
  sub_100210AD0(a1, (unint64_t)a2, v2 + 8, v13);
  Swift::Int v15 = v14;
  char v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18._uint64_t countAndFlagsBits = a1;
    v18._Swift::Int object = a2;
    Swift::Int v15 = ByteBuffer._setStringSlowpath(_:at:)(v18, v13);
  }
  int v19 = *(_DWORD *)(v2 + 20);
  BOOL v20 = __CFADD__(v19, v15);
  int v21 = v19 + v15;
  if (v20) {
    goto LABEL_16;
  }
  *(_DWORD *)(v2 + 20) = v21;
  if (__OFADD__(v11, v15))
  {
    __break(1u);
LABEL_11:
    Swift::Int v22 = *(unsigned int *)(v2 + 20);
    uint64_t v23 = sub_100277F84();
    sub_100210AD0(v23, v24, v2 + 8, v22);
    if (v26)
    {
      v27._uint64_t countAndFlagsBits = sub_100277F84();
      int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v22);
    }
    int v28 = *(_DWORD *)(v2 + 20);
    BOOL v20 = __CFADD__(v28, v25);
    int v29 = v28 + v25;
    if (!v20)
    {
      *(_DWORD *)(v2 + 20) = v29;
      return;
    }
    goto LABEL_17;
  }
}

uint64_t sub_100277F84()
{
  return 0x2A3D485455413BLL;
}

uint64_t sub_100277F9C()
{
  return 0x3D485455413BLL;
}

uint64_t sub_100277FB0()
{
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  static InitialResponse.empty = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  qword_100761EA8 = qword_100761858;
  dword_100761EB0 = dword_100761860;
  word_100761EB4 = word_100761864;
  byte_100761EB6 = byte_100761866;
  return swift_retain();
}

uint64_t *InitialResponse.empty.unsafeMutableAddressor()
{
  if (qword_10070FCD8 != -1) {
    swift_once();
  }
  return &static InitialResponse.empty;
}

uint64_t static InitialResponse.empty.getter()
{
  if (qword_10070FCD8 != -1) {
    swift_once();
  }
  return swift_retain();
}

unint64_t sub_100278104()
{
  unint64_t result = qword_100710E48;
  if (!qword_100710E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E48);
  }
  return result;
}

ValueMetadata *type metadata accessor for InitialResponse()
{
  return &type metadata for InitialResponse;
}

unint64_t sub_100278164()
{
  unint64_t result = qword_100710E50;
  if (!qword_100710E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E50);
  }
  return result;
}

unint64_t sub_1002781B4()
{
  unint64_t result = qword_100710E58;
  if (!qword_100710E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710E58);
  }
  return result;
}

unint64_t sub_100278204()
{
  unint64_t result = qword_100710E60[0];
  if (!qword_100710E60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100710E60);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternetMessageDate()
{
  return &type metadata for InternetMessageDate;
}

uint64_t KeyValue.init(key:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for KeyValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t type metadata accessor for KeyValue()
{
  return swift_getGenericMetadata();
}

uint64_t static KeyValue.__derived_struct_equals(_:_:)()
{
  if (sub_1005E1BC0())
  {
    type metadata accessor for KeyValue();
    char v0 = sub_1005E1BC0();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t KeyValue.key.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100278FB4(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16), a2);
}

uint64_t KeyValue.key.setter(uint64_t a1, uint64_t a2)
{
  return sub_100278FC4(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40), a1);
}

uint64_t KeyValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100278FB4(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16), a2);
}

uint64_t KeyValue.value.setter(uint64_t a1, uint64_t a2)
{
  return sub_100278FC4(v2 + *(int *)(a2 + 52), *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40), a1);
}

Swift::UInt32 (__swiftcall *KeyValue.value.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t KeyValue.hash(into:)()
{
  return sub_1005E19C0();
}

Swift::Int KeyValue.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_100278548()
{
  return sub_1005E3470();
}

uint64_t sub_10027858C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1002785A8()
{
  return static KeyValue.__derived_struct_equals(_:_:)();
}

uint64_t sub_1002785B8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100278688(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  int v11 = *(_DWORD *)(v5 + 80) | v8;
  uint64_t v12 = v11;
  int v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(void *)(v7 + 64) > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v6);
  }
  return v4;
}

uint64_t sub_1002787E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_100278888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100278930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1002789D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100278A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100278B28(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return getEnumTagSinglePayload for ClientCommand((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_100278D00(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          _OWORD v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x100278F8CLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t sub_100278FB4@<X0>(uint64_t (*a1)(uint64_t)@<X3>, uint64_t a2@<X8>)
{
  return a1(a2);
}

uint64_t sub_100278FC4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  return a2(a1, a3);
}

void LastCommandMessageID.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  sub_100279E58();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100279E58();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, v13, a2);
  if (getEnumTagSinglePayload for ClientCommand((uint64_t)v11, 1, v3) == 1)
  {
    sub_1005E3410(1uLL);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v11, v3);
    sub_1005E3410(0);
    sub_1005E19C0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
}

uint64_t static LastCommandMessageID.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001FE450();
  uint64_t v34 = v5;
  uint64_t v35 = v4;
  __chkstk_darwin(v6);
  uint64_t v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v8;
  uint64_t CommandMessageID = type metadata accessor for LastCommandMessageID();
  sub_1001FE450();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v30 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1001FE450();
  uint64_t v17 = v16;
  uint64_t v19 = __chkstk_darwin(v18);
  int v21 = (char *)&v30 - v20;
  unsigned int v22 = (char *)&v30 + *(int *)(v19 + 48) - v20;
  uint64_t v33 = v11;
  int v23 = *(void (**)(void))(v11 + 16);
  sub_100279E70();
  v23();
  sub_100279E70();
  v23();
  sub_100279E80((uint64_t)v21);
  if (v25)
  {
    char v24 = 1;
    sub_100279E80((uint64_t)v22);
    if (v25) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_100279E70();
    v23();
    sub_100279E80((uint64_t)v22);
    if (!v25)
    {
      uint64_t v26 = v34;
      Swift::String v27 = v31;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v22, a3);
      char v24 = sub_1005E1BC0();
      int v28 = *(void (**)(char *, uint64_t))(v26 + 8);
      v28(v27, a3);
      v28(v14, a3);
LABEL_10:
      uint64_t v17 = v33;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, a3);
  }
  char v24 = 0;
  uint64_t CommandMessageID = TupleTypeMetadata2;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, CommandMessageID);
  return v24 & 1;
}

uint64_t type metadata accessor for LastCommandMessageID()
{
  return sub_1000DAF2C();
}

Swift::Int LastCommandMessageID.hashValue.getter(uint64_t a1)
{
  sub_1005E33F0();
  LastCommandMessageID.hash(into:)((uint64_t)v3, a1);
  return sub_1005E3470();
}

Swift::Int sub_10027941C(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  LastCommandMessageID.hash(into:)((uint64_t)v4, a2);
  return sub_1005E3470();
}

uint64_t sub_100279460()
{
  return swift_getWitnessTable();
}

uint64_t sub_10027947C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static LastCommandMessageID.__derived_enum_equals(_:_:)(a1, a2, *(void *)(a3 + 16));
}

uint64_t sub_100279488()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100279504(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_100279620(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = getEnumTagSinglePayload for ClientCommand(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_10027969C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSingle = getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  if (EnumTagSingle)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v8 = *(void *)(v7 + 64);
    }
    else {
      size_t v8 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_100279760(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSingle = getEnumTagSinglePayload for ClientCommand((uint64_t)a1, 1, v5);
  int v7 = getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (EnumTagSingle)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v5);
      return a1;
    }
    int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v10 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

void *sub_100279888(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSingle = getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  if (EnumTagSingle)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v8 = *(void *)(v7 + 64);
    }
    else {
      size_t v8 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_10027994C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSingle = getEnumTagSinglePayload for ClientCommand((uint64_t)a1, 1, v5);
  int v7 = getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (EnumTagSingle)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v5);
      return a1;
    }
    int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v10 + 1;
  }
  memcpy(a1, a2, v12);
  return a1;
}

uint64_t sub_100279A74(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 > 3) {
            LODWORD(v7) = 4;
          }
          switch((int)v7)
          {
            case 2:
              LODWORD(v7) = *a1;
              break;
            case 3:
              LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v7) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v7) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v6 + (v7 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v5 < 2) {
    return 0;
  }
  unsigned int EnumTagSingle = getEnumTagSinglePayload for ClientCommand((uint64_t)a1, v5, v4);
  if (EnumTagSingle >= 2) {
    return EnumTagSingle - 1;
  }
  else {
    return 0;
  }
}

void sub_100279BF8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v9) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v10;
  unsigned int v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        int v6 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v15 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v16 = ~v10 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v18 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x100279E18);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (a2)
      {
LABEL_28:
        if (v9 >= 2)
        {
          uint64_t v19 = a2 + 1;
          storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, v19, v9, v7);
        }
      }
      return;
  }
}

uint64_t sub_100279E40(uint64_t a1, uint64_t a2)
{
  return getEnumTagSinglePayload for ClientCommand(a1, 1, *(void *)(a2 + 16));
}

uint64_t sub_100279E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return storeEnumTagSinglePayload for ClientCommand(a1, a2, 1, *(void *)(a3 + 16));
}

uint64_t sub_100279E80(uint64_t a1)
{
  return getEnumTagSinglePayload for ClientCommand(a1, 1, v1);
}

uint64_t static LastCommandSet.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v6 = type metadata accessor for MessageIdentifierSetNonEmpty();
  sub_1001FE450();
  uint64_t v34 = v7;
  sub_100207F00();
  __chkstk_darwin(v8);
  uint64_t v31 = (char *)&v31 - v9;
  uint64_t v32 = a4;
  uint64_t CommandSet = type metadata accessor for LastCommandSet();
  sub_1001FE450();
  uint64_t v12 = v11;
  sub_100207F00();
  __chkstk_darwin(v13);
  unsigned int v15 = (char *)&v31 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1001FE450();
  uint64_t v18 = v17;
  sub_100207F00();
  uint64_t v20 = __chkstk_darwin(v19);
  unsigned int v22 = (char *)&v31 - v21;
  int v23 = (char *)&v31 + *(int *)(v20 + 48) - v21;
  uint64_t v33 = v12;
  char v24 = *(void (**)(void))(v12 + 16);
  sub_10027AC94();
  v24();
  sub_10027AC94();
  v24();
  sub_100279E80((uint64_t)v22);
  if (v26)
  {
    char v25 = 1;
    sub_100279E80((uint64_t)v23);
    if (v26) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_10027AC94();
    v24();
    sub_100279E80((uint64_t)v23);
    if (!v26)
    {
      uint64_t v27 = v34;
      int v28 = v31;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v23, v6);
      char v25 = static MessageIdentifierSetNonEmpty.__derived_struct_equals(_:_:)(v15, v28, a3, v32);
      int v29 = *(void (**)(char *, uint64_t))(v27 + 8);
      v29(v28, v6);
      v29(v15, v6);
LABEL_10:
      uint64_t v18 = v33;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v6);
  }
  char v25 = 0;
  uint64_t CommandSet = TupleTypeMetadata2;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v18 + 8))(v22, CommandSet);
  return v25 & 1;
}

uint64_t type metadata accessor for LastCommandSet()
{
  return sub_1000DAF2C();
}

void LastCommandSet.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageIdentifierSetNonEmpty();
  sub_1001FE450();
  uint64_t v6 = v5;
  sub_100207F00();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1001FE450();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v2, a2);
  if (getEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, v4) == 1)
  {
    sub_1005E3410(1uLL);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v12, v4);
    sub_1005E3410(0);
    MessageIdentifierSetNonEmpty.hash(into:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  }
}

Swift::Int LastCommandSet.hashValue.getter(uint64_t a1)
{
  sub_1005E33F0();
  LastCommandSet.hash(into:)((uint64_t)v3, a1);
  return sub_1005E3470();
}

Swift::Int sub_10027A2F0(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  LastCommandSet.hash(into:)((uint64_t)v4, a2);
  return sub_1005E3470();
}

uint64_t sub_10027A334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static LastCommandSet.__derived_enum_equals(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t static LastCommandSet.range(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for MessageIdentifierRange();
  sub_1001FE450();
  sub_100207F00();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v10 - v5;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v10 - v5, a1);
  MessageIdentifierSetNonEmpty.init(range:)((uint64_t)v6, a2);
  uint64_t v8 = type metadata accessor for MessageIdentifierSetNonEmpty();
  return storeEnumTagSinglePayload for ClientCommand(a2, 0, 1, v8);
}

uint64_t sub_10027A41C()
{
  return swift_getWitnessTable();
}

void sub_10027A438()
{
  sub_10027AC38();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t *sub_10027A4B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for MessageIdentifierSetNonEmpty();
    if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_10000566C(&qword_100710538);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10027A5C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageIdentifierSetNonEmpty();
  uint64_t result = getEnumTagSinglePayload for ClientCommand(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_10000566C(&qword_100710538);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_10027A658(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageIdentifierSetNonEmpty();
  if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100710538);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10027A728(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageIdentifierSetNonEmpty();
  int EnumTagSingle = getEnumTagSinglePayload for ClientCommand((uint64_t)a1, 1, v6);
  int v8 = getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v6);
  if (!EnumTagSingle)
  {
    if (!v8)
    {
      uint64_t v11 = sub_10000566C(&qword_100710538);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_10000566C(&qword_100710538);
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_10027A890(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageIdentifierSetNonEmpty();
  if (getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100710538);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10027A960(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessageIdentifierSetNonEmpty();
  int EnumTagSingle = getEnumTagSinglePayload for ClientCommand((uint64_t)a1, 1, v6);
  int v8 = getEnumTagSinglePayload for ClientCommand((uint64_t)a2, 1, v6);
  if (!EnumTagSingle)
  {
    if (!v8)
    {
      uint64_t v11 = sub_10000566C(&qword_100710538);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_10000566C(&qword_100710538);
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  storeEnumTagSinglePayload for ClientCommand((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10027AAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027AADC);
}

uint64_t sub_10027AADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageIdentifierSetNonEmpty();
  unsigned int EnumTagSingle = getEnumTagSinglePayload for ClientCommand(a1, a2, v4);
  if (EnumTagSingle >= 2) {
    return EnumTagSingle - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10027AB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027AB3C);
}

uint64_t sub_10027AB3C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for MessageIdentifierSetNonEmpty();
  return storeEnumTagSinglePayload for ClientCommand(a1, v5, a3, v6);
}

uint64_t sub_10027AB9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageIdentifierSetNonEmpty();
  return getEnumTagSinglePayload for ClientCommand(a1, 1, v2);
}

uint64_t sub_10027ABE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageIdentifierSetNonEmpty();
  return storeEnumTagSinglePayload for ClientCommand(a1, a2, 1, v4);
}

void sub_10027AC38()
{
  if (!qword_100710FE8)
  {
    sub_100223B18();
    unint64_t v0 = sub_1005E3690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100710FE8);
    }
  }
}

void sub_10027ACA4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 8;
  Swift::Int v5 = *(unsigned int *)(v2 + 20);
  uint64_t v6 = sub_10027AE30();
  sub_100210AD0(v6, v7, v4, v5);
  if (v9)
  {
    v10._uint64_t countAndFlagsBits = sub_10027AE30();
    Swift::Int v8 = ByteBuffer._setStringSlowpath(_:at:)(v10, v5);
  }
  Swift::Int v11 = v8;
  int v12 = *(_DWORD *)(v2 + 20);
  Swift::Int v13 = (v12 + v8);
  if (__CFADD__(v12, v8))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(_DWORD *)(v2 + 20) = v13;
  sub_100210AD0(40, 0xE100000000000000, v4, v13);
  if (v15)
  {
    v16._uint64_t countAndFlagsBits = 40;
    v16._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v14 = ByteBuffer._setStringSlowpath(_:at:)(v16, v13);
  }
  int v17 = *(_DWORD *)(v2 + 20);
  BOOL v18 = __CFADD__(v17, v14);
  int v19 = v17 + v14;
  if (v18) {
    goto LABEL_18;
  }
  *(_DWORD *)(v2 + 20) = v19;
  Swift::Int v20 = v11 + v14;
  if (__OFADD__(v11, v14))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a1[2])
  {
    swift_retain();
    swift_retain();
    sub_1001EC104(a1, 0, 0xE000000000000000, 32, (void *)0xE100000000000000, 0, 0xE000000000000000, 0, v2);
    uint64_t v22 = v21;
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v22 = 0;
  }
  Swift::Int v23 = v20 + v22;
  if (__OFADD__(v20, v22)) {
    goto LABEL_20;
  }
  Swift::Int v24 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(41, 0xE100000000000000, v4, *(_DWORD *)(v2 + 20));
  if (v26)
  {
    v27._uint64_t countAndFlagsBits = 41;
    v27._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v24);
  }
  int v28 = *(_DWORD *)(v2 + 20);
  BOOL v18 = __CFADD__(v28, v25);
  int v29 = v28 + v25;
  if (v18) {
    goto LABEL_21;
  }
  *(_DWORD *)(v2 + 20) = v29;
  if (__OFADD__(v23, v25)) {
LABEL_22:
  }
    __break(1u);
}

uint64_t sub_10027AE30()
{
  return 0x204E5255544552;
}

void ListSelectBaseOption.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10027B4F8(v2, &v20);
  char v5 = v21;
  uint64_t v4 = v22;
  uint64_t v7 = v23;
  unint64_t v6 = v24;
  sub_10027B4F8(v2, v25);
  sub_10027BC80();
  if (v8)
  {
    sub_1005E3410(0);
  }
  else
  {
    v26[0] = v25[0];
    v26[1] = v25[1];
    long long v27 = v25[2];
    long long v28 = v25[3];
    sub_1005E3410(1uLL);
    sub_1002676E0((uint64_t)v26, (uint64_t)v29);
    sub_1002676E0((uint64_t)v29, (uint64_t)&v30);
    if (v31)
    {
      sub_1005E3410(1uLL);
      sub_10027BC40(v9, v10, v11, v12, v5 & 1);
      sub_1001F3404(v4, v7, v6);
      sub_1005E1DB0();
    }
    else
    {
      sub_1005E3410(0);
      sub_10027BC40(v13, v14, v15, v16, v5 & 1);
      sub_1001F3404(v4, v7, v6);
    }
    sub_1005E1DB0();
    unint64_t v17 = *((void *)&v28 + 1);
    if (HIBYTE(*((void *)&v28 + 1)) == 255)
    {
      sub_1005E3420(0);
    }
    else
    {
      uint64_t v19 = *((void *)&v27 + 1);
      uint64_t v18 = v28;
      sub_1005E3420(1u);
      if ((v17 & 0x100000000000000) != 0)
      {
        sub_1005E3410(1uLL);
        sub_1001F33AC(v19, v18, v17, 1);
        sub_100228B20(a1, v19);
        sub_1001F34D0(v19, v18, v17);
      }
      else
      {
        sub_1005E3410(0);
        swift_beginAccess();
        sub_10027BC60();
        sub_1005E3400();
      }
    }
    sub_10027B510((uint64_t *)v2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
  }
}

BOOL static ListSelectBaseOption.__derived_enum_equals(_:_:)(long long *a1, long long *a2)
{
  sub_10027B4F8(a1, v9);
  sub_10027BC80();
  if (v5)
  {
    sub_10027B4F8(a2, v10);
    sub_10027BC80();
    return v5 != 0;
  }
  else
  {
    v10[0] = v9[0];
    v10[1] = v9[1];
    void v10[2] = v9[2];
    v10[3] = v9[3];
    sub_10027B4F8(a2, v7);
    sub_10027BC80();
    if (v5)
    {
      return 0;
    }
    else
    {
      v8[0] = v7[0];
      v8[1] = v7[1];
      _OWORD v8[2] = v7[2];
      _OWORD v8[3] = v7[3];
      sub_10027B510((uint64_t *)a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F33C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F3404);
      sub_10027B510((uint64_t *)a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F33C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F3404);
      BOOL v4 = sub_100266050(v10, v8);
      sub_10027B510((uint64_t *)a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
      sub_10027B510((uint64_t *)a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
    }
  }
  return v4;
}

Swift::Int ListSelectBaseOption.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_10027B4F8(v0, &v20);
  char v2 = v21;
  uint64_t v3 = v22;
  uint64_t v5 = v23;
  unint64_t v4 = v24;
  sub_1005E33F0();
  sub_10027B4F8(v1, v25);
  sub_10027BC80();
  if (v6)
  {
    sub_1005E3410(0);
  }
  else
  {
    v26[0] = v25[0];
    v26[1] = v25[1];
    long long v27 = v25[2];
    long long v28 = v25[3];
    sub_1005E3410(1uLL);
    sub_1002676E0((uint64_t)v26, (uint64_t)v29);
    sub_1002676E0((uint64_t)v29, (uint64_t)&v30);
    if (v31)
    {
      sub_1005E3410(1uLL);
      sub_10027BC40(v7, v8, v9, v10, v2 & 1);
      sub_1001F3404(v3, v5, v4);
      sub_1005E1DB0();
    }
    else
    {
      sub_1005E3410(0);
      sub_10027BC40(v11, v12, v13, v14, v2 & 1);
      sub_1001F3404(v3, v5, v4);
    }
    sub_1005E1DB0();
    unint64_t v15 = *((void *)&v28 + 1);
    if (HIBYTE(*((void *)&v28 + 1)) == 255)
    {
      sub_1005E3420(0);
    }
    else
    {
      uint64_t v17 = *((void *)&v27 + 1);
      uint64_t v16 = v28;
      sub_1005E3420(1u);
      if ((v15 & 0x100000000000000) != 0)
      {
        sub_1005E3410(1uLL);
        swift_bridgeObjectRetain();
        sub_100228B20((uint64_t)v19, v17);
        sub_1001F34D0(v17, v16, v15);
      }
      else
      {
        sub_1005E3410(0);
        swift_beginAccess();
        sub_10027BC60();
        sub_1005E3400();
      }
    }
    sub_10027B510((uint64_t *)v1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
  }
  return sub_1005E3470();
}

Swift::Int sub_10027B3E0()
{
  sub_10027B4F8(v0, v2);
  return ListSelectBaseOption.hashValue.getter();
}

void sub_10027B418(uint64_t a1)
{
  sub_10027B4F8(v1, v3);
  ListSelectBaseOption.hash(into:)(a1);
}

Swift::Int sub_10027B458()
{
  sub_10027B4F8(v0, v3);
  sub_1005E33F0();
  ListSelectBaseOption.hash(into:)((uint64_t)v2);
  return sub_1005E3470();
}

BOOL sub_10027B4AC(long long *a1, long long *a2)
{
  sub_10027B4F8(a1, v4);
  sub_10027B4F8(a2, v5);
  return static ListSelectBaseOption.__derived_enum_equals(_:_:)(v4, v5);
}

_OWORD *sub_10027B4F8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t *sub_10027B510(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  return a1;
}

uint64_t sub_10027B560(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if (a5 != -1)
  {
    a9(result, a2, a3, a4, a5 & 1);
    return a10(a6, a7, a8);
  }
  return result;
}

unint64_t sub_10027B5E8()
{
  unint64_t result = qword_100710FF0;
  if (!qword_100710FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710FF0);
  }
  return result;
}

uint64_t destroy for ListSelectBaseOption(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 32);
  if (v1 <= 1)
  {
    long long v2 = (uint64_t *)result;
    unint64_t result = sub_1001F3480(*(void *)result, v2[1], v2[2], v2[3], v1 != 0);
    unint64_t v3 = v2[7];
    if (HIBYTE(v3) != 255)
    {
      uint64_t v4 = v2[5];
      uint64_t v5 = v2[6];
      return sub_1001F33B8(v4, v5, v3, HIBYTE(v3) & 1);
    }
  }
  return result;
}

uint64_t initializeWithCopy for ListSelectBaseOption(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 32);
  if (v4 > 1)
  {
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    long long v12 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v12;
  }
  else
  {
    BOOL v5 = v4 != 0;
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    sub_1001F33C4(*a2, v7, v8, v9, v4 != 0);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v5;
    unint64_t v10 = a2[7];
    if (HIBYTE(v10) == 255)
    {
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(void *)(a1 + 56) = a2[7];
    }
    else
    {
      uint64_t v14 = a2[5];
      uint64_t v13 = a2[6];
      sub_1001F33AC(v14, v13, v10, HIBYTE(v10) & 1);
      *(void *)(a1 + 40) = v14;
      *(void *)(a1 + 48) = v13;
      *(unsigned char *)(a1 + 62) = BYTE6(v10);
      *(_WORD *)(a1 + 60) = WORD2(v10);
      *(_DWORD *)(a1 + 56) = v10;
      *(unsigned char *)(a1 + 63) = HIBYTE(v10) & 1;
    }
  }
  return a1;
}

uint64_t assignWithCopy for ListSelectBaseOption(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  unsigned int v5 = *((unsigned __int8 *)a2 + 32);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      BOOL v20 = v5 != 0;
      uint64_t v21 = *(void *)a2;
      uint64_t v22 = *((void *)a2 + 1);
      uint64_t v23 = *((void *)a2 + 2);
      uint64_t v24 = *((void *)a2 + 3);
      sub_1001F33C4(*(void *)a2, v22, v23, v24, v5 != 0);
      *(void *)a1 = v21;
      *(void *)(a1 + 8) = v22;
      *(void *)(a1 + 16) = v23;
      *(void *)(a1 + 24) = v24;
      *(unsigned char *)(a1 + 32) = v20;
      unint64_t v18 = *((void *)a2 + 7);
      if (HIBYTE(v18) == 255)
      {
        long long v25 = *(long long *)((char *)a2 + 40);
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        *(_OWORD *)(a1 + 40) = v25;
        return a1;
      }
      goto LABEL_12;
    }
LABEL_11:
    long long v27 = *a2;
    long long v28 = a2[1];
    long long v29 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v29;
    *(_OWORD *)a1 = v27;
    *(_OWORD *)(a1 + 16) = v28;
    return a1;
  }
  if (v5 > 1)
  {
    sub_1001F3480(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v4 & 1);
    unint64_t v26 = *(void *)(a1 + 56);
    if (HIBYTE(v26) != 255) {
      sub_1001F33B8(*(void *)(a1 + 40), *(void *)(a1 + 48), v26, HIBYTE(v26) & 1);
    }
    goto LABEL_11;
  }
  BOOL v6 = v5 != 0;
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v10 = *((void *)a2 + 3);
  sub_1001F33C4(*(void *)a2, v8, v9, v10, v5 != 0);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v6;
  sub_1001F3480(v11, v12, v13, v14, v15);
  uint64_t v16 = (long long *)(a1 + 40);
  uint64_t v17 = (long long *)((char *)a2 + 40);
  unint64_t v18 = *((void *)a2 + 7);
  if (*(unsigned __int8 *)(a1 + 63) == 255)
  {
    if (HIBYTE(v18) == 255)
    {
      long long v19 = *v17;
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      *uint64_t v16 = v19;
      return a1;
    }
LABEL_12:
    uint64_t v31 = *((void *)a2 + 5);
    uint64_t v30 = *((void *)a2 + 6);
    sub_1001F33AC(v31, v30, v18, HIBYTE(v18) & 1);
    *(void *)(a1 + 40) = v31;
    *(void *)(a1 + 48) = v30;
    *(unsigned char *)(a1 + 62) = BYTE6(v18);
    *(_WORD *)(a1 + 60) = WORD2(v18);
    *(_DWORD *)(a1 + 56) = v18;
    *(unsigned char *)(a1 + 63) = HIBYTE(v18) & 1;
    return a1;
  }
  if (HIBYTE(v18) == 255)
  {
    sub_10027B9E0(a1 + 40);
    uint64_t v32 = *((void *)a2 + 7);
    *uint64_t v16 = *v17;
    *(void *)(a1 + 56) = v32;
  }
  else
  {
    uint64_t v34 = *((void *)a2 + 5);
    uint64_t v33 = *((void *)a2 + 6);
    sub_1001F33AC(v34, v33, v18, HIBYTE(v18) & 1);
    uint64_t v35 = *(void *)(a1 + 40);
    uint64_t v36 = *(void *)(a1 + 48);
    unint64_t v37 = *(unsigned int *)(a1 + 56) | ((unint64_t)(*(unsigned __int16 *)(a1 + 60) | (*(unsigned __int8 *)(a1 + 62) << 16)) << 32);
    char v38 = *(unsigned char *)(a1 + 63);
    *(void *)(a1 + 40) = v34;
    *(void *)(a1 + 48) = v33;
    *(_DWORD *)(a1 + 56) = v18;
    *(_WORD *)(a1 + 60) = WORD2(v18);
    *(unsigned char *)(a1 + 62) = BYTE6(v18);
    *(unsigned char *)(a1 + 63) = HIBYTE(v18) & 1;
    sub_1001F33B8(v35, v36, v37, v38);
  }
  return a1;
}

uint64_t sub_10027B9E0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ListSelectBaseOption(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 > 1)
  {
LABEL_9:
    long long v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    long long v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
    return a1;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
  char v6 = v4 & 1;
  if (v5 > 1)
  {
    sub_1001F3480(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v6);
    unint64_t v15 = *(void *)(a1 + 56);
    if (HIBYTE(v15) != 255) {
      sub_1001F33B8(*(void *)(a1 + 40), *(void *)(a1 + 48), v15, HIBYTE(v15) & 1);
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 32) = v5 != 0;
  sub_1001F3480(v7, v8, v9, v10, v6);
  uint64_t v12 = (_OWORD *)(a2 + 40);
  unint64_t v13 = *(void *)(a1 + 56);
  if (HIBYTE(v13) != 255)
  {
    unint64_t v14 = *(void *)(a2 + 56);
    if (HIBYTE(v14) != 255)
    {
      uint64_t v19 = *(void *)(a1 + 40);
      uint64_t v20 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 40) = *v12;
      *(_DWORD *)(a1 + 56) = v14;
      *(unsigned char *)(a1 + 62) = BYTE6(v14);
      *(_WORD *)(a1 + 60) = WORD2(v14);
      *(unsigned char *)(a1 + 63) = HIBYTE(v14) & 1;
      sub_1001F33B8(v19, v20, v13, HIBYTE(v13) & 1);
      return a1;
    }
    sub_10027B9E0(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *v12;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListSelectBaseOption(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 + 1 >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ListSelectBaseOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = ~(_BYTE)a2;
    }
  }
  return result;
}

uint64_t sub_10027BBE4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_10027BBF8(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(a1 + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListSelectBaseOption()
{
  return &type metadata for ListSelectBaseOption;
}

uint64_t sub_10027BC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_1001F33C4(v8, v7, v6, v5, a5);
}

uint64_t sub_10027BC60()
{
  return *(void *)(v2 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0)) + v1;
}

void ListSelectIndependentOption.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10027B4F8(v2, &v11);
  uint64_t v4 = v12;
  uint64_t v6 = v13;
  unint64_t v5 = v14;
  sub_10027B4F8(v2, v15);
  if (v16 == 254)
  {
    Swift::UInt v7 = 2;
    goto LABEL_5;
  }
  if (v16 == 255)
  {
    Swift::UInt v7 = 0;
LABEL_5:
    sub_1005E3410(v7);
    return;
  }
  v18[0] = v15[0];
  v18[1] = v15[1];
  long long v19 = v16;
  long long v20 = v17;
  sub_1005E3410(1uLL);
  sub_1002676E0((uint64_t)v18, (uint64_t)v21);
  sub_1002676E0((uint64_t)v21, (uint64_t)&v22);
  if (v23)
  {
    sub_1005E3410(1uLL);
    sub_10027C548();
    sub_1001F3404(v4, v6, v5);
    sub_1005E1DB0();
  }
  else
  {
    sub_1005E3410(0);
    sub_10027C548();
    sub_1001F3404(v4, v6, v5);
  }
  sub_1005E1DB0();
  unint64_t v8 = *((void *)&v20 + 1);
  if (HIBYTE(*((void *)&v20 + 1)) == 255)
  {
    sub_1005E3420(0);
  }
  else
  {
    uint64_t v10 = *((void *)&v19 + 1);
    uint64_t v9 = v20;
    sub_1005E3420(1u);
    if ((v8 & 0x100000000000000) != 0)
    {
      sub_1005E3410(1uLL);
      sub_1001F33AC(v10, v9, v8, 1);
      sub_100228B20(a1, v10);
      sub_1001F34D0(v10, v9, v8);
    }
    else
    {
      sub_1005E3410(0);
      swift_beginAccess();
      sub_10027BC60();
      sub_1005E3400();
    }
  }
  sub_10027C37C((uint64_t *)v2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
}

BOOL static ListSelectIndependentOption.__derived_enum_equals(_:_:)(long long *a1, long long *a2)
{
  sub_10027B4F8(a1, v10);
  if (v11 == 254)
  {
    sub_10027B4F8(a2, v13);
    if (v14 != 254) {
      return 0;
    }
  }
  else
  {
    if (v11 != 255)
    {
      v13[0] = v10[0];
      v13[1] = v10[1];
      long long v14 = v11;
      long long v15 = v12;
      sub_10027B4F8(a2, v6);
      if ((~(_BYTE)v7 & 0xFE) != 0)
      {
        v9[0] = v6[0];
        v9[1] = v6[1];
        _OWORD v9[2] = v7;
        v9[3] = v8;
        sub_10027C37C((uint64_t *)a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F33C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F3404);
        sub_10027C37C((uint64_t *)a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F33C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F3404);
        BOOL v4 = sub_100266050(v13, v9);
        sub_10027C37C((uint64_t *)a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
        sub_10027C37C((uint64_t *)a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
        return v4;
      }
      return 0;
    }
    sub_10027B4F8(a2, v13);
    if ((_BYTE)v14 != 0xFF) {
      return 0;
    }
  }
  return 1;
}

Swift::Int ListSelectIndependentOption.hashValue.getter()
{
  sub_10027B4F8(v0, &v10);
  uint64_t v1 = v11;
  uint64_t v3 = v12;
  unint64_t v2 = v13;
  sub_1005E33F0();
  sub_10027B4F8(v0, v14);
  if (v15 == 254)
  {
    Swift::UInt v4 = 2;
    goto LABEL_5;
  }
  if (v15 == 255)
  {
    Swift::UInt v4 = 0;
LABEL_5:
    sub_1005E3410(v4);
    return sub_1005E3470();
  }
  v17[0] = v14[0];
  v17[1] = v14[1];
  long long v18 = v15;
  long long v19 = v16;
  sub_1005E3410(1uLL);
  sub_1002676E0((uint64_t)v17, (uint64_t)v20);
  sub_1002676E0((uint64_t)v20, (uint64_t)&v21);
  if (v22)
  {
    sub_1005E3410(1uLL);
    sub_10027C548();
    sub_1001F3404(v1, v3, v2);
    sub_1005E1DB0();
  }
  else
  {
    sub_1005E3410(0);
    sub_10027C548();
    sub_1001F3404(v1, v3, v2);
  }
  sub_1005E1DB0();
  unint64_t v5 = *((void *)&v19 + 1);
  if (HIBYTE(*((void *)&v19 + 1)) == 255)
  {
    sub_1005E3420(0);
  }
  else
  {
    uint64_t v7 = *((void *)&v18 + 1);
    uint64_t v6 = v19;
    sub_1005E3420(1u);
    if ((v5 & 0x100000000000000) != 0)
    {
      sub_1005E3410(1uLL);
      swift_bridgeObjectRetain();
      sub_100228B20((uint64_t)v9, v7);
      sub_1001F34D0(v7, v6, v5);
    }
    else
    {
      sub_1005E3410(0);
      swift_beginAccess();
      sub_10027BC60();
      sub_1005E3400();
    }
  }
  sub_10027C37C((uint64_t *)v0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001F3480, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001F34D0);
  return sub_1005E3470();
}

Swift::Int sub_10027C264()
{
  sub_10027B4F8(v0, v2);
  return ListSelectIndependentOption.hashValue.getter();
}

void sub_10027C29C(uint64_t a1)
{
  sub_10027B4F8(v1, v3);
  ListSelectIndependentOption.hash(into:)(a1);
}

Swift::Int sub_10027C2DC()
{
  sub_10027B4F8(v0, v3);
  sub_1005E33F0();
  ListSelectIndependentOption.hash(into:)((uint64_t)v2);
  return sub_1005E3470();
}

BOOL sub_10027C330(long long *a1, long long *a2)
{
  sub_10027B4F8(a1, v4);
  sub_10027B4F8(a2, v5);
  return static ListSelectIndependentOption.__derived_enum_equals(_:_:)(v4, v5);
}

uint64_t *sub_10027C37C(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  return a1;
}

uint64_t sub_10027C3CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, void), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if ((~a5 & 0xFE) != 0)
  {
    a9(result, a2, a3, a4, a5 & 1);
    return a10(a6, a7, a8);
  }
  return result;
}

unint64_t sub_10027C454()
{
  unint64_t result = qword_100710FF8;
  if (!qword_100710FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710FF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ListSelectIndependentOption(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 > 1) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 3) {
    return v4 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ListSelectIndependentOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -2 - a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListSelectIndependentOption()
{
  return &type metadata for ListSelectIndependentOption;
}

uint64_t sub_10027C548()
{
  return sub_1001F33C4(v3, v2, v1, v0, v4 & 1);
}

void sub_10027C56C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10027E030(a1, (uint64_t)v32);
  uint64_t v4 = v32[0];
  uint64_t v5 = v32[1];
  uint64_t v6 = v32[2];
  uint64_t v7 = v32[3];
  uint64_t v29 = v32[5];
  uint64_t v30 = v32[4];
  uint64_t v27 = v32[7];
  uint64_t v28 = v32[6];
  uint64_t v26 = v32[8];
  uint64_t v8 = v1 + 8;
  Swift::Int v9 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(40, 0xE100000000000000, v8, *(_DWORD *)(v2 + 20));
  if (v11)
  {
    v12._uint64_t countAndFlagsBits = 40;
    v12._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v10 = ByteBuffer._setStringSlowpath(_:at:)(v12, v9);
  }
  Swift::Int v13 = v10;
  int v14 = *(_DWORD *)(v2 + 20);
  BOOL v15 = __CFADD__(v14, v10);
  int v16 = v14 + v10;
  if (v15)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(_DWORD *)(v2 + 20) = v16;
  sub_10027E030(a1, (uint64_t)v33);
  if (v34)
  {
    v31[0] = v4;
    v31[1] = v5;
    v31[2] = v6;
    v31[3] = v7;
    v31[4] = v30;
    void v31[5] = v29;
    v31[6] = v28;
    v31[7] = v27;
    v31[8] = v26;
    sub_10027D37C(v31, v2);
  }
  else
  {
    uint64_t v17 = 0;
  }
  BOOL v18 = __OFADD__(v13, v17);
  Swift::Int v19 = v13 + v17;
  if (v18) {
    goto LABEL_14;
  }
  Swift::Int v20 = *(unsigned int *)(v2 + 20);
  sub_100210AD0(41, 0xE100000000000000, v8, *(_DWORD *)(v2 + 20));
  if (v22)
  {
    v23._uint64_t countAndFlagsBits = 41;
    v23._Swift::Int object = (void *)0xE100000000000000;
    Swift::Int v21 = ByteBuffer._setStringSlowpath(_:at:)(v23, v20);
  }
  int v24 = *(_DWORD *)(v2 + 20);
  BOOL v15 = __CFADD__(v24, v21);
  int v25 = v24 + v21;
  if (v15) {
    goto LABEL_15;
  }
  *(_DWORD *)(v2 + 20) = v25;
  if (__OFADD__(v19, v21)) {
LABEL_16:
  }
    __break(1u);
}

void ListSelectOption.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10027B4F8(v2, &v11);
  uint64_t v4 = v12;
  uint64_t v6 = v13;
  unint64_t v5 = v14;
  sub_10027B4F8(v2, v15);
  switch((char)v16)
  {
    case -4:
      Swift::UInt v7 = 3;
      goto LABEL_6;
    case -3:
      Swift::UInt v7 = 2;
      goto LABEL_6;
    case -2:
      Swift::UInt v7 = 1;
      goto LABEL_6;
    case -1:
      Swift::UInt v7 = 0;
LABEL_6:
      sub_1005E3410(v7);
      break;
    default:
      v18[0] = v15[0];
      v18[1] = v15[1];
      long long v19 = v16;
      long long v20 = v17;
      sub_1005E3410(4uLL);
      sub_1002676E0((uint64_t)v18, (uint64_t)v21);
      sub_1002676E0((uint64_t)v21, (uint64_t)&v22);
      if (v23)
      {
        sub_1005E3410(1uLL);
        sub_10027C548();
        sub_1001F3404(v4, v6, v5);
        sub_1005E1DB0();
      }
      else
      {
        sub_1005E3410(0);
        sub_10027C548();
        sub_1001F3404(v4, v6, v5);
      }
      sub_1005E1DB0();
      unint64_t v8 = *((void *)&v20 + 1);
      if (HIBYTE(*((void *)&v20 + 1)) == 255)
      {
        sub_1005E3420(0);
      }
      else
      {
        uint64_t v10 = *((void *)&v19 + 1);
        uint64_t v9 = v20;
        sub_1005E3420(1u);
        if ((v8 & 0x100000000000000) != 0)
        {
          sub_1005E3410(1uLL);
          sub_1001F33AC(v10, v9, v8, 1);
          sub_100228B20(a1, v10);
          sub_1001F34D0(v10, v9, v8);
        }
        else
        {
          sub_1005E3410(0);
          swift_beginAccess();
          sub_10027BC60();
          sub_1005E3400();
        }
      }
      sub_10027D768(v2, (uint64_t)sub_1001F3480, (uint64_t)sub_1001F34D0, (void (*)(void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_10027D7C0);
      break;
  }
}

BOOL static ListSelectOption.__derived_enum_equals(_:_:)(long long *a1, long long *a2)
{
  sub_10027B4F8(a1, v14);
  switch((char)v15)
  {
    case -4:
      sub_10027E1A8();
      if (v4 == 252) {
        goto LABEL_10;
      }
      goto LABEL_12;
    case -3:
      sub_10027E1A8();
      if (v5 != 253) {
        goto LABEL_12;
      }
      goto LABEL_10;
    case -2:
      sub_10027E1A8();
      if (v6 != 254) {
        goto LABEL_12;
      }
      goto LABEL_10;
    case -1:
      sub_10027B4F8(a2, v17);
      sub_10027E140();
      if (!v7) {
        goto LABEL_12;
      }
LABEL_10:
      BOOL v8 = 1;
      break;
    default:
      v17[0] = v14[0];
      v17[1] = v14[1];
      _OWORD v17[2] = v15;
      void v17[3] = v16;
      sub_10027B4F8(a2, v10);
      if ((v11 & 0xFC | 2) == 0xFE)
      {
LABEL_12:
        BOOL v8 = 0;
      }
      else
      {
        v13[0] = v10[0];
        v13[1] = v10[1];
        _OWORD v13[2] = v11;
        v13[3] = v12;
        sub_10027D768(a1, (uint64_t)sub_1001F33C4, (uint64_t)sub_1001F3404, (void (*)(void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_10027D7C0);
        sub_10027D768(a2, (uint64_t)sub_1001F33C4, (uint64_t)sub_1001F3404, (void (*)(void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_10027D7C0);
        BOOL v8 = sub_100266050(v17, v13);
        sub_10027D768(a2, (uint64_t)sub_1001F3480, (uint64_t)sub_1001F34D0, (void (*)(void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_10027D7C0);
        sub_10027D768(a1, (uint64_t)sub_1001F3480, (uint64_t)sub_1001F34D0, (void (*)(void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_10027D7C0);
      }
      break;
  }
  return v8;
}