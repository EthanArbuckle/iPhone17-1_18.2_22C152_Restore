int main(int argc, const char **argv, const char **envp)
{
  int result;
  int v4;
  char v5;

  sub_1005E1D90("com.apple.email.SearchIndexer", 0x1DuLL, 1);
  sub_1005E1CE0();
  swift_retain();
  swift_release();
  swift_retain();
  swift_bridgeObjectRelease();
  v5 = _set_user_dir_suffix();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    type metadata accessor for Service();
    v4 = static Service.main()();
    exit(v4);
  }
  sub_1005E1D90("_set_user_dir_suffix failed", 0x1BuLL, 1);
  sub_1005E2F20();
  __break(1u);
  result = swift_errorInMain();
  __break(1u);
  return result;
}

uint64_t StateWithTasks.makeActivity(makeStatus:accountError:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v9 = sub_10000566C(&qword_100709E00);
  __chkstk_darwin(v9 - 8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = v4[13];
  long long v26 = v4[12];
  long long v27 = v12;
  long long v13 = v4[15];
  long long v28 = v4[14];
  long long v29 = v13;
  long long v14 = v4[9];
  v23[8] = v4[8];
  v23[9] = v14;
  long long v15 = v4[11];
  long long v24 = v4[10];
  long long v25 = v15;
  long long v16 = v4[5];
  v23[4] = v4[4];
  v23[5] = v16;
  long long v17 = v4[7];
  v23[6] = v4[6];
  v23[7] = v17;
  long long v18 = v4[1];
  v23[0] = *v4;
  v23[1] = v18;
  long long v19 = v4[3];
  v23[2] = v4[2];
  v23[3] = v19;
  if (BYTE8(v25))
  {
    uint64_t v21 = v24;
    swift_bridgeObjectRetain();
    v22 = sub_100061B60();
    sub_1000079E4(a3, (uint64_t)v11, &qword_100709E00);
    return sub_1000056B0(v21, (uint64_t)v22, a1, a2, (uint64_t)v11, a4);
  }
  else
  {
    sub_1000079E4(a3, (uint64_t)v11, &qword_100709E00);
    return Activity.init(mailboxesWithPendingWork:accountError:)((unint64_t)&_swiftEmptySetSingleton, (uint64_t)v11, a4);
  }
}

uint64_t sub_10000566C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000056B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v59 = a5;
  uint64_t v55 = a4;
  v56 = a3;
  v58 = a6;
  uint64_t v8 = sub_10000566C(&qword_100709E00);
  __chkstk_darwin(v8 - 8);
  uint64_t v57 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MailboxSyncState();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  long long v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  long long v16 = (char *)&v52 - v15;
  unint64_t v17 = *(void *)(a1 + 16);
  uint64_t v54 = a1;
  if (v17)
  {
    unint64_t v18 = 0;
    uint64_t v19 = a1 + 32;
    unint64_t v52 = v17 - 1;
    v20 = _swiftEmptyArrayStorage;
    uint64_t v53 = a1 + 32;
    do
    {
      if (v18 <= v17) {
        unint64_t v21 = v17;
      }
      else {
        unint64_t v21 = v18;
      }
      v22 = (long long *)(v19 + 176 * v18);
      unint64_t v23 = v18;
      while (1)
      {
        if (v21 == v23)
        {
          __break(1u);
          return result;
        }
        long long v24 = v22[9];
        long long v68 = v22[8];
        long long v69 = v24;
        long long v70 = v22[10];
        long long v25 = v22[5];
        long long v64 = v22[4];
        long long v65 = v25;
        long long v26 = v22[7];
        long long v66 = v22[6];
        long long v67 = v26;
        long long v27 = v22[1];
        long long v60 = *v22;
        long long v28 = v22[2];
        long long v63 = v22[3];
        long long v61 = v27;
        long long v62 = v28;
        uint64_t result = sub_100010004(v27, DWORD2(v27), a2);
        if (result) {
          break;
        }
        if ((void)v66)
        {
          uint64_t v29 = v66
              + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
          swift_beginAccess();
          uint64_t v30 = _s13SelectedStateV7WrappedVMa(0);
          sub_100007914(v29 + *(int *)(v30 + 20), (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
          sub_10000797C((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
          sub_100007780((uint64_t)&v60);
          LOBYTE(v29) = sub_10005CFD4();
          sub_100007AA4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
          if (v29) {
            goto LABEL_15;
          }
          uint64_t result = sub_100007820((uint64_t)&v60);
        }
        ++v23;
        v22 += 11;
        if (v17 == v23) {
          goto LABEL_22;
        }
      }
      sub_100007780((uint64_t)&v60);
LABEL_15:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v71 = (uint64_t)v20;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_10001A4F4(0, v20[2] + 1, 1);
        v20 = (void *)v71;
      }
      unint64_t v32 = v20[2];
      unint64_t v31 = v20[3];
      if (v32 >= v31 >> 1)
      {
        uint64_t result = sub_10001A4F4(v31 > 1, v32 + 1, 1);
        v20 = (void *)v71;
      }
      unint64_t v18 = v23 + 1;
      v20[2] = v32 + 1;
      v33 = &v20[22 * v32];
      long long v34 = v60;
      long long v35 = v62;
      v33[3] = v61;
      v33[4] = v35;
      v33[2] = v34;
      long long v36 = v63;
      long long v37 = v64;
      long long v38 = v66;
      v33[7] = v65;
      v33[8] = v38;
      v33[5] = v36;
      v33[6] = v37;
      long long v39 = v67;
      long long v40 = v68;
      long long v41 = v70;
      v33[11] = v69;
      v33[12] = v41;
      v33[9] = v39;
      v33[10] = v40;
      uint64_t v19 = v53;
    }
    while (v52 != v23);
  }
  else
  {
    v20 = _swiftEmptyArrayStorage;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_bridgeObjectRelease();
  uint64_t v43 = v56(v42);
  v44 = sub_100006FA4((uint64_t)v20, v43);
  swift_bridgeObjectRelease();
  sub_1000078C0();
  uint64_t v71 = sub_1005E2280();
  uint64_t v45 = v20[2];
  if (v45)
  {
    v46 = v20 + 5;
    do
    {
      uint64_t v47 = *(v46 - 1);
      Swift::UInt v48 = *v46;
      swift_bridgeObjectRetain();
      sub_1000189E4(&v60, v47, v48);
      swift_bridgeObjectRelease();
      v46 += 22;
      --v45;
    }
    while (v45);
  }
  swift_release();
  unint64_t v49 = v71;
  uint64_t v50 = v59;
  uint64_t v51 = v57;
  sub_1000079E4(v59, v57, &qword_100709E00);
  sub_100005F6C((uint64_t)v44, v49, v51, v58);
  return sub_100007A48(v50, &qword_100709E00);
}

uint64_t MessageSectionData.mailbox.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessageSectionData.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v2 = a1;
  *(_DWORD *)(v2 + 8) = a2;
  return result;
}

Swift::UInt32 (__swiftcall *UnsafeExtractedAttachment.part.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t StateWithTasks.InSyncMailbox.id.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StateWithTasks.InSyncMailbox.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

Swift::UInt32 (__swiftcall *ContentDisposition.Attribute.value.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t variable initialization expression of Cache._idna()
{
  return 0;
}

uint64_t RemoteMailbox.Status.highestModificationSequence.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t RemoteMailbox.Status.highestModificationSequence.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

Swift::UInt32 (__swiftcall *UnsafeExtractedAttachment.mediaType.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t sub_100005C64(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return _s13IMAP2Behavior14StateWithTasksV13InSyncMailboxV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t StateWithTasks.inSyncMailboxes.getter@<X0>(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 184))
  {
    uint64_t v6 = *(void *)(v1 + 160);
    a1[3] = sub_10000566C(&qword_100709E18);
    uint64_t v4 = sub_100007494(&qword_100709E20, &qword_100709E18);
    long long v5 = (void *)swift_allocObject();
    v5[2] = v6;
    v5[3] = sub_100005DBC;
    v5[4] = 0;
    v5[5] = sub_100005EF4;
    v5[6] = 0;
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    a1[3] = sub_10000566C(&qword_100709E08);
    uint64_t result = sub_100007494(&qword_100709E10, &qword_100709E08);
    uint64_t v4 = result;
    long long v5 = _swiftEmptyArrayStorage;
  }
  a1[4] = v4;
  *a1 = v5;
  return result;
}

uint64_t sub_100005DBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MailboxSyncState();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  long long v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v7 = (char *)&v13 - v6;
  uint64_t v8 = *(void *)(a1 + 96);
  if (v8)
  {
    uint64_t v9 = v8
       + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    uint64_t v10 = _s13SelectedStateV7WrappedVMa(0);
    sub_100007914(v9 + *(int *)(v10 + 20), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    sub_10000797C((uint64_t)v5, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    char v11 = sub_10005CFD4();
    sub_100007AA4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_100005EF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  int v6 = *((_DWORD *)a1 + 6);
  unsigned int v7 = *((unsigned __int8 *)a1 + 168);
  if (v7 < 2) {
    uint64_t v8 = a1[20];
  }
  else {
    uint64_t v8 = 0;
  }
  *(void *)a2 = v5;
  *(_DWORD *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = v7 > 1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100005F6C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v133 = a3;
  unint64_t v170 = a2;
  v158 = a4;
  uint64_t v5 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v5 - 8);
  uint64_t v134 = (uint64_t)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v132 - v11;
  uint64_t v13 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v13 - 8);
  v146 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v149);
  v145 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for MailboxSyncState();
  uint64_t v16 = __chkstk_darwin(v148);
  v159 = (uint64_t *)((char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v163 = (uint64_t)&v132 - v18;
  uint64_t v19 = type metadata accessor for Activity.MailboxStatus(0);
  Swift::UInt v167 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v136 = (uint64_t)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v147 = (char *)&v132 - v23;
  __chkstk_darwin(v22);
  uint64_t v156 = (uint64_t)&v132 - v24;
  uint64_t v25 = sub_10000566C(&qword_100709E40);
  __chkstk_darwin(v25 - 8);
  uint64_t v155 = (uint64_t)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for ConnectionStatus(0);
  uint64_t v27 = __chkstk_darwin(v135);
  uint64_t v143 = (uint64_t)&v132 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v169 = (uint64_t)&v132 - v30;
  __chkstk_darwin(v29);
  uint64_t v168 = (uint64_t)&v132 - v31;
  uint64_t v32 = sub_10000566C(&qword_100709E48);
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  v157 = (_OWORD *)((char *)&v132 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = sub_10000566C(&qword_100709E00);
  __chkstk_darwin(v35 - 8);
  long long v37 = (char *)&v132 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v19;
  sub_1000079E4(v133, (uint64_t)v37, &qword_100709E00);
  uint64_t v39 = (uint64_t)v37;
  uint64_t v40 = (uint64_t)v12;
  Activity.init(mailboxesWithPendingWork:accountError:)(v170, v39, v158);
  uint64_t v154 = *(void *)(a1 + 16);
  if (v154)
  {
    uint64_t v41 = *(int *)(v32 + 48);
    unint64_t v42 = 0;
    uint64_t v153 = (uint64_t)v157 + v41;
    uint64_t v152 = a1 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v150 = *(void *)(v33 + 72);
    v151 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v167 + 56);
    uint64_t v141 = v7;
    uint64_t v142 = a1;
    v139 = v12;
    v140 = v10;
    uint64_t v144 = v19;
    while (1)
    {
      uint64_t v43 = v157;
      sub_1000079E4(v152 + v150 * v42, (uint64_t)v157, &qword_100709E48);
      long long v44 = v43[9];
      long long v174 = v43[8];
      long long v175 = v44;
      long long v176 = v43[10];
      long long v45 = v43[5];
      v171[4] = v43[4];
      v171[5] = v45;
      long long v46 = v43[7];
      long long v172 = v43[6];
      long long v173 = v46;
      long long v47 = v43[1];
      v171[0] = *v43;
      v171[1] = v47;
      long long v48 = v43[3];
      v171[2] = v43[2];
      v171[3] = v48;
      uint64_t v49 = v168;
      sub_10000797C(v153, v168, type metadata accessor for ConnectionStatus);
      Swift::UInt v50 = *((void *)&v171[0] + 1);
      unint64_t v170 = *(void *)&v171[0];
      uint64_t v51 = v49;
      uint64_t v52 = v169;
      sub_100007914(v51, v169, type metadata accessor for ConnectionStatus);
      Swift::UInt v167 = v50;
      if (!(void)v172)
      {
        sub_100007914(v52, v143, type metadata accessor for ConnectionStatus);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v63 = v136;
        switch(EnumCaseMultiPayload)
        {
          case 2:
            sub_10000797C(v143, v136, type metadata accessor for ConnectionStatus.Error);
            goto LABEL_27;
          case 3:
LABEL_27:
            swift_storeEnumTagMultiPayload();
            swift_bridgeObjectRetain();
            sub_100007780((uint64_t)v171);
            goto LABEL_30;
          case 4:
            swift_bridgeObjectRetain();
            sub_100007780((uint64_t)v171);
            goto LABEL_29;
          default:
            swift_bridgeObjectRetain();
            sub_100007780((uint64_t)v171);
            sub_100007AA4(v143, type metadata accessor for ConnectionStatus);
LABEL_29:
            swift_storeEnumTagMultiPayload();
LABEL_30:
            uint64_t v79 = v63;
            uint64_t v80 = v156;
            sub_10000797C(v79, v156, type metadata accessor for Activity.MailboxStatus);
            break;
        }
        goto LABEL_88;
      }
      unint64_t v165 = v42;
      uint64_t v166 = v172;
      uint64_t v53 = v172
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v54 = _s13SelectedStateV7WrappedVMa(0);
      uint64_t v55 = v163;
      sub_100007914(v53 + *(int *)(v54 + 20), v163, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      v56 = v159;
      sub_100007914(v55, (uint64_t)v159, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      uint64_t v58 = v56[19];
      uint64_t v57 = v56[20];
      uint64_t v59 = v56[21];
      if (!sub_100010180(0xCu, v58)) {
        goto LABEL_6;
      }
      if (!sub_100010180(0xCu, v57))
      {
        if (*(void *)(v58 + 16))
        {
          Swift::UInt v64 = 0;
          uint64_t v65 = v58 + 56;
          uint64_t v66 = v57 + 56;
          uint64_t v67 = &_mh_execute_header.magic + 1;
          do
          {
            sub_1005E33F0();
            sub_1005E3410(v64);
            Swift::Int v68 = sub_1005E3470();
            uint64_t v69 = -1 << *(unsigned char *)(v58 + 32);
            unint64_t v70 = v68 & ~v69;
            if (((*(void *)(v65 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70) & 1) == 0) {
              break;
            }
            uint64_t v71 = *(void *)(v58 + 48);
            if (*(unsigned __int8 *)(v71 + v70) != v64)
            {
              uint64_t v72 = ~v69;
              do
              {
                unint64_t v70 = (v70 + 1) & v72;
                if (((*(void *)(v65 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70) & 1) == 0) {
                  goto LABEL_33;
                }
              }
              while (*(unsigned __int8 *)(v71 + v70) != v64);
            }
            if (*(void *)(v57 + 16))
            {
              sub_1005E33F0();
              sub_1005E3410(v64);
              Swift::Int v73 = sub_1005E3470();
              uint64_t v74 = -1 << *(unsigned char *)(v57 + 32);
              unint64_t v75 = v73 & ~v74;
              if ((*(void *)(v66 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75))
              {
                uint64_t v76 = *(void *)(v57 + 48);
                if (*(unsigned __int8 *)(v76 + v75) == v64) {
                  break;
                }
                uint64_t v77 = ~v74;
                while (1)
                {
                  unint64_t v75 = (v75 + 1) & v77;
                  if (((*(void *)(v66 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75) & 1) == 0) {
                    break;
                  }
                  if (*(unsigned __int8 *)(v76 + v75) == v64) {
                    goto LABEL_33;
                  }
                }
              }
            }
            if (v67 == 15)
            {
              if (!sub_100010180(0xCu, v59)) {
                break;
              }
              int v160 = 1;
              goto LABEL_34;
            }
            v78 = (char *)&off_1006B9EB0 + v67++;
            Swift::UInt v64 = v78[32];
          }
          while (*(void *)(v58 + 16));
        }
LABEL_33:
        int v160 = 0;
LABEL_34:
        uint64_t v7 = v141;
        a1 = v142;
        uint64_t v40 = (uint64_t)v139;
        uint64_t v10 = v140;
        uint64_t v60 = (uint64_t)v145;
        uint64_t v61 = (uint64_t)v146;
        v56 = v159;
      }
      else
      {
LABEL_6:
        int v160 = 1;
        uint64_t v60 = (uint64_t)v145;
        uint64_t v61 = (uint64_t)v146;
      }
      unint64_t v42 = v165;
      sub_100007914((uint64_t)v56 + *(int *)(v148 + 68), v60, _s15MissingMessagesOMa);
      int v81 = swift_getEnumCaseMultiPayload();
      if (v81) {
        break;
      }
      sub_10000797C(v60, v61, _s15MissingMessagesO10IncompleteVMa);
      swift_bridgeObjectRetain();
      sub_100007780((uint64_t)v171);
      swift_retain();
      sub_1000716EC();
      uint64_t v84 = v134;
      sub_1000079E4(v61, v134, &qword_100709E30);
      MessageIdentifierSet.intersection(_:)(v40, v7);
      sub_100007A48(v84, &qword_100709E38);
      MessageIdentifierSet.count.getter();
      uint64_t v86 = v85;
      sub_100007A48((uint64_t)v10, &qword_100709E38);
      uint64_t v164 = v86;
      if (v86 < 1)
      {
        sub_100007A48(v40, &qword_100709E38);
        v82 = _s15MissingMessagesO10IncompleteVMa;
        uint64_t v83 = v61;
LABEL_42:
        sub_100007AA4(v83, v82);
        goto LABEL_43;
      }
      _s15MissingMessagesO8ProgressVMa(0);
      MessageIdentifierSet.intersection(_:)(v40, v7);
      MessageIdentifierSet.count.getter();
      uint64_t v162 = v87;
      sub_100007A48((uint64_t)v10, &qword_100709E38);
      sub_100007A48(v40, &qword_100709E38);
      sub_100007AA4(v61, _s15MissingMessagesO10IncompleteVMa);
      int v161 = 0;
LABEL_44:
      uint64_t v88 = (uint64_t)v56;
      uint64_t v89 = v56[19];
      if (*(void *)(v89 + 16))
      {
        uint64_t v90 = v89 + 56;
        uint64_t v91 = *(void *)(v88 + 160);
        uint64_t v92 = v91 + 56;
        uint64_t v137 = *(void *)(v88 + 168);
        uint64_t v138 = v137 + 56;
        Swift::UInt v93 = 2;
        uint64_t v94 = &_mh_execute_header.magic + 1;
        while (1)
        {
          sub_1005E33F0();
          sub_1005E3410(v93);
          Swift::Int v95 = sub_1005E3470();
          uint64_t v96 = -1 << *(unsigned char *)(v89 + 32);
          unint64_t v97 = v95 & ~v96;
          if (((*(void *)(v90 + ((v97 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v97) & 1) == 0) {
            goto LABEL_84;
          }
          uint64_t v98 = *(void *)(v89 + 48);
          if (*(unsigned __int8 *)(v98 + v97) != v93)
          {
            uint64_t v99 = ~v96;
            while (1)
            {
              unint64_t v97 = (v97 + 1) & v99;
              if (((*(void *)(v90 + ((v97 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v97) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v98 + v97) == v93) {
                goto LABEL_51;
              }
            }
LABEL_84:
            char v125 = 1;
            goto LABEL_85;
          }
LABEL_51:
          if (*(void *)(v91 + 16))
          {
            sub_1005E33F0();
            sub_1005E3410(v93);
            Swift::Int v100 = sub_1005E3470();
            uint64_t v101 = -1 << *(unsigned char *)(v91 + 32);
            unint64_t v102 = v100 & ~v101;
            if ((*(void *)(v92 + ((v102 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v102))
            {
              uint64_t v103 = *(void *)(v91 + 48);
              if (*(unsigned __int8 *)(v103 + v102) == v93) {
                goto LABEL_84;
              }
              uint64_t v104 = ~v101;
              while (1)
              {
                unint64_t v102 = (v102 + 1) & v104;
                if (((*(void *)(v92 + ((v102 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v102) & 1) == 0) {
                  break;
                }
                if (*(unsigned __int8 *)(v103 + v102) == v93) {
                  goto LABEL_84;
                }
              }
            }
          }
          if (*(void *)(v89 + 16))
          {
            Swift::UInt v105 = 0;
            uint64_t v106 = &_mh_execute_header.magic + 1;
            do
            {
              sub_1005E33F0();
              sub_1005E3410(v105);
              Swift::Int v107 = sub_1005E3470();
              uint64_t v108 = -1 << *(unsigned char *)(v89 + 32);
              unint64_t v109 = v107 & ~v108;
              if (((*(void *)(v90 + ((v109 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v109) & 1) == 0) {
                break;
              }
              uint64_t v110 = *(void *)(v89 + 48);
              if (*(unsigned __int8 *)(v110 + v109) != v105)
              {
                uint64_t v111 = ~v108;
                do
                {
                  unint64_t v109 = (v109 + 1) & v111;
                  if (((*(void *)(v90 + ((v109 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v109) & 1) == 0) {
                    goto LABEL_82;
                  }
                }
                while (*(unsigned __int8 *)(v110 + v109) != v105);
              }
              if (*(void *)(v91 + 16))
              {
                sub_1005E33F0();
                sub_1005E3410(v105);
                Swift::Int v112 = sub_1005E3470();
                uint64_t v113 = -1 << *(unsigned char *)(v91 + 32);
                unint64_t v114 = v112 & ~v113;
                if ((*(void *)(v92 + ((v114 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v114))
                {
                  uint64_t v115 = *(void *)(v91 + 48);
                  if (*(unsigned __int8 *)(v115 + v114) == v105) {
                    break;
                  }
                  uint64_t v116 = ~v113;
                  while (1)
                  {
                    unint64_t v114 = (v114 + 1) & v116;
                    if (((*(void *)(v92 + ((v114 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v114) & 1) == 0) {
                      break;
                    }
                    if (*(unsigned __int8 *)(v115 + v114) == v105) {
                      goto LABEL_82;
                    }
                  }
                }
              }
              if (v106 == 15)
              {
                if (*(void *)(v137 + 16))
                {
                  uint64_t v118 = v137;
                  sub_1005E33F0();
                  sub_1005E3410(v93);
                  Swift::Int v119 = sub_1005E3470();
                  uint64_t v120 = -1 << *(unsigned char *)(v118 + 32);
                  unint64_t v121 = v119 & ~v120;
                  if ((*(void *)(v138 + ((v121 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v121))
                  {
                    uint64_t v122 = *(void *)(v137 + 48);
                    if (*(unsigned __int8 *)(v122 + v121) == v93) {
                      goto LABEL_84;
                    }
                    uint64_t v123 = ~v120;
                    while (1)
                    {
                      unint64_t v121 = (v121 + 1) & v123;
                      if (((*(void *)(v138 + ((v121 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v121) & 1) == 0) {
                        break;
                      }
                      if (*(unsigned __int8 *)(v122 + v121) == v93) {
                        goto LABEL_84;
                      }
                    }
                  }
                }
                break;
              }
              v117 = (char *)&off_1006B9F60 + v106++;
              Swift::UInt v105 = v117[32];
            }
            while (*(void *)(v89 + 16));
          }
LABEL_82:
          if (v94 == 7) {
            break;
          }
          v124 = (char *)&off_1006B9F38 + v94++;
          Swift::UInt v93 = v124[32];
          if (!*(void *)(v89 + 16)) {
            goto LABEL_84;
          }
        }
        char v125 = 0;
LABEL_85:
        uint64_t v7 = v141;
        a1 = v142;
        uint64_t v40 = (uint64_t)v139;
        uint64_t v10 = v140;
        uint64_t v88 = (uint64_t)v159;
        uint64_t v38 = v144;
        unint64_t v42 = v165;
      }
      else
      {
        char v125 = 1;
        uint64_t v38 = v144;
      }
      sub_100007AA4(v88, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      sub_100007AA4(v163, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      v126 = v147;
      unsigned char *v147 = v160;
      uint64_t v127 = v162;
      *((void *)v126 + 1) = v164;
      *((void *)v126 + 2) = v127;
      v126[24] = v161;
      v126[25] = v125;
      swift_storeEnumTagMultiPayload();
      uint64_t v128 = (uint64_t)v126;
      uint64_t v80 = v156;
      sub_10000797C(v128, v156, type metadata accessor for Activity.MailboxStatus);
      swift_release();
LABEL_88:
      ++v42;
      sub_100007820((uint64_t)v171);
      sub_100007AA4(v169, type metadata accessor for ConnectionStatus);
      uint64_t v129 = v80;
      uint64_t v130 = v155;
      sub_10000797C(v129, v155, type metadata accessor for Activity.MailboxStatus);
      (*v151)(v130, 0, 1, v38);
      Activity.subscript.setter(v130, v170, v167);
      sub_100007820((uint64_t)v171);
      sub_100007AA4(v168, type metadata accessor for ConnectionStatus);
      if (v42 == v154) {
        goto LABEL_92;
      }
      if (v42 >= *(void *)(a1 + 16))
      {
        __break(1u);
        JUMPOUT(0x100006F24);
      }
    }
    if (v81 == 1)
    {
      swift_bridgeObjectRetain();
      sub_100007780((uint64_t)v171);
      swift_retain();
      v82 = _s15MissingMessagesOMa;
      uint64_t v83 = v60;
      goto LABEL_42;
    }
    swift_bridgeObjectRetain();
    sub_100007780((uint64_t)v171);
    swift_retain();
LABEL_43:
    uint64_t v164 = 0;
    uint64_t v162 = 0;
    int v161 = 1;
    goto LABEL_44;
  }
LABEL_92:
  sub_100007A48(v133, &qword_100709E00);
  return swift_bridgeObjectRelease();
}

uint64_t variable initialization expression of MailboxMetadata.validity()
{
  return 0x100000000;
}

uint64_t variable initialization expression of UnsafeExtractedAttachment.filename()
{
  return 0;
}

uint64_t variable initialization expression of Engine.isProcessingUpdates()
{
  return 0;
}

void *variable initialization expression of Activity.mailboxesWithPendingWork()
{
  return &_swiftEmptySetSingleton;
}

void *variable initialization expression of StateWithTasks.mailboxesToSelectLoggingHelper()
{
  _s30MailboxesToSelectLoggingHelperCMa();
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_100006FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ConnectionStatus(0);
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v49 = (uint64_t)&v46 - v9;
  uint64_t v48 = sub_10000566C(&qword_100709E48);
  uint64_t v47 = *(void *)(v48 - 8);
  uint64_t v10 = __chkstk_darwin(v48);
  uint64_t v63 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (_OWORD *)((char *)&v46 - v13);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v46 = v3;
  swift_bridgeObjectRetain();
  long long v18 = *(_OWORD *)(a1 + 176);
  long long v60 = *(_OWORD *)(a1 + 160);
  long long v61 = v18;
  long long v62 = *(_OWORD *)(a1 + 192);
  long long v19 = *(_OWORD *)(a1 + 112);
  long long v56 = *(_OWORD *)(a1 + 96);
  long long v57 = v19;
  long long v20 = *(_OWORD *)(a1 + 144);
  long long v58 = *(_OWORD *)(a1 + 128);
  long long v59 = v20;
  long long v21 = *(_OWORD *)(a1 + 48);
  long long v52 = *(_OWORD *)(a1 + 32);
  long long v22 = *(_OWORD *)(a1 + 64);
  long long v55 = *(_OWORD *)(a1 + 80);
  long long v53 = v21;
  long long v54 = v22;
  uint64_t v23 = v17 - 1;
  uint64_t v24 = 208;
  uint64_t v25 = _swiftEmptyArrayStorage;
  if (!*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
LABEL_3:
  unint64_t v26 = sub_100024264(v53, DWORD2(v53));
  if (v27)
  {
    uint64_t v28 = v50;
    sub_100007914(*(void *)(a2 + 56) + *(void *)(v51 + 72) * v26, v50, type metadata accessor for ConnectionStatus);
    uint64_t v29 = v28;
    uint64_t v30 = v49;
    sub_10000797C(v29, v49, type metadata accessor for ConnectionStatus);
    uint64_t v31 = (uint64_t)v14 + *(int *)(v48 + 48);
    long long v32 = v61;
    v14[8] = v60;
    v14[9] = v32;
    v14[10] = v62;
    long long v33 = v57;
    v14[4] = v56;
    v14[5] = v33;
    long long v34 = v59;
    v14[6] = v58;
    v14[7] = v34;
    long long v35 = v53;
    *uint64_t v14 = v52;
    v14[1] = v35;
    long long v36 = v55;
    v14[2] = v54;
    v14[3] = v36;
    sub_10000797C(v30, v31, type metadata accessor for ConnectionStatus);
    sub_100007B04((uint64_t)v14, (uint64_t)v16);
    sub_100007B04((uint64_t)v16, v63);
    sub_100007780((uint64_t)&v52);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v25 = (void *)sub_100015968(0, v25[2] + 1, 1, (unint64_t)v25);
    }
    unint64_t v38 = v25[2];
    unint64_t v37 = v25[3];
    if (v38 >= v37 >> 1) {
      uint64_t v25 = (void *)sub_100015968(v37 > 1, v38 + 1, 1, (unint64_t)v25);
    }
    v25[2] = v38 + 1;
    sub_100007B04(v63, (uint64_t)v25+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v38);
  }
LABEL_9:
  while (v23)
  {
    long long v39 = *(_OWORD *)(a1 + v24 + 144);
    long long v60 = *(_OWORD *)(a1 + v24 + 128);
    long long v61 = v39;
    long long v62 = *(_OWORD *)(a1 + v24 + 160);
    long long v40 = *(_OWORD *)(a1 + v24 + 80);
    long long v56 = *(_OWORD *)(a1 + v24 + 64);
    long long v57 = v40;
    long long v41 = *(_OWORD *)(a1 + v24 + 112);
    long long v58 = *(_OWORD *)(a1 + v24 + 96);
    long long v59 = v41;
    long long v42 = *(_OWORD *)(a1 + v24 + 16);
    long long v52 = *(_OWORD *)(a1 + v24);
    long long v44 = *(_OWORD *)(a1 + v24 + 32);
    long long v43 = *(_OWORD *)(a1 + v24 + 48);
    v24 += 176;
    --v23;
    long long v55 = v43;
    long long v53 = v42;
    long long v54 = v44;
    if (*(void *)(a2 + 16)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t _s13IMAP2Behavior14StateWithTasksV13InSyncMailboxV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
    || !sub_1000255D4(*(void *)a1, *(void *)a2)
    || *(void *)(a1 + 24) != *(void *)(a2 + 24)
    || !sub_1000255D4(*(void *)(a1 + 16), *(void *)(a2 + 16)))
  {
    return 0;
  }
  char v4 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    if ((*(unsigned char *)(a2 + 40) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_10000744C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100007494(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000074D8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t _s13InSyncMailboxVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s13InSyncMailboxVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13InSyncMailboxVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13InSyncMailboxVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  return a1;
}

__n128 _s13InSyncMailboxVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13InSyncMailboxVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s13InSyncMailboxVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13InSyncMailboxVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateWithTasks.InSyncMailbox()
{
  return &type metadata for StateWithTasks.InSyncMailbox;
}

uint64_t sub_100007780(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100007810(v2);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_100007810(unint64_t result)
{
  if (result >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100007820(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000078B0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

unint64_t sub_1000078B0(unint64_t result)
{
  if (result >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1000078C0()
{
  unint64_t result = qword_100709E28;
  if (!qword_100709E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709E28);
  }
  return result;
}

uint64_t sub_100007914(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000797C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000079E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000566C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100007A48(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000566C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100007AA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100007B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100007B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Command();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ClientCommand(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C7A0(v2, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v12 = 1;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_10000566C(&qword_100709E80);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 2:
    case 3:
      sub_10000B49C((uint64_t)v6);
      uint64_t v12 = 1;
      break;
    case 4:
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v12, 1, v7);
    default:
LABEL_4:
      sub_10000C804((uint64_t)v6, (uint64_t)v10);
      sub_10000C804((uint64_t)v10, a1);
      uint64_t v12 = 0;
      break;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v12, 1, v7);
}

uint64_t MailboxSyncStatus.latestSyncedChange.getter(unint64_t a1)
{
  return a1 | ((HIDWORD(a1) & 1) << 32);
}

uint64_t MailboxSyncStatus.latestSyncedChange.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t EngineAccountMailboxLoggerID.mailbox.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EngineAccountMailboxLoggerID.mailbox.setter(uint64_t a1, int a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(_DWORD *)(v2 + 16) = a2;
  return result;
}

Swift::UInt32 (__swiftcall *UnsafeExtractedAttachment.filename.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

unint64_t initializeBufferWithCopyOfBuffer for Command(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v8 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v8;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
            *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_44;
          case 1u:
            uint64_t v13 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v13;
            uint64_t v14 = *(void *)(a2 + 16);
            uint64_t v15 = *(void *)(a2 + 24);
            *(void *)(a1 + 16) = v14;
            *(void *)(a1 + 24) = v15;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 2u:
          case 8u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 3u:
          case 4u:
          case 5u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 6u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 7u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 9u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v16 = sub_10000566C(&qword_100709E50);
            uint64_t v17 = *(int *)(v16 + 64);
            long long v18 = (void *)(a1 + v17);
            long long v19 = (const void *)(a2 + v17);
            uint64_t v20 = sub_1005E0970();
            uint64_t v21 = *(void *)(v20 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
            {
              uint64_t v22 = sub_10000566C(&qword_100709E58);
              memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
            }
            uint64_t v74 = *(int *)(v16 + 80);
            unint64_t v75 = (uint64_t *)(a1 + v74);
            uint64_t v76 = (uint64_t *)(a2 + v74);
            uint64_t v77 = *v76;
            unint64_t v78 = v76[1];
            sub_100008D24(*v76, v78);
            *unint64_t v75 = v77;
            v75[1] = v78;
            goto LABEL_44;
          case 0xAu:
          case 0xCu:
            unint64_t v23 = *(void *)a2;
            sub_100008D7C(v23);
            *(void *)a1 = v23;
            goto LABEL_44;
          case 0xBu:
          case 0xDu:
            unint64_t v24 = *(void *)a2;
            sub_100008D7C(*(void *)a2);
            uint64_t v25 = *(void *)(a2 + 8);
            *(void *)a1 = v24;
            *(void *)(a1 + 8) = v25;
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 0xEu:
            uint64_t v26 = sub_10000566C(&qword_100709E60);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
            uint64_t v27 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
            uint64_t v28 = a1 + v27;
            uint64_t v29 = (uint64_t *)(a2 + v27);
            *(unsigned char *)(v28 + 16) = *((unsigned char *)v29 + 16);
            uint64_t v30 = *v29;
            uint64_t v31 = v29[1];
            *(void *)uint64_t v28 = v30;
            *(void *)(v28 + 8) = v31;
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 0xFu:
            uint64_t v32 = sub_10000566C(&qword_100709E60);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
            uint64_t v33 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
            uint64_t v34 = a1 + v33;
            uint64_t v35 = a2 + v33;
            *(_WORD *)uint64_t v34 = *(_WORD *)v35;
            *(void *)(v34 + 8) = *(void *)(v35 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 0x10u:
          case 0x11u:
            uint64_t v36 = sub_10000566C(&qword_100709E60);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
            uint64_t v37 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
            uint64_t v38 = a1 + v37;
            uint64_t v39 = a2 + v37;
            *(void *)uint64_t v38 = *(void *)v39;
            *(_DWORD *)(v38 + 8) = *(_DWORD *)(v39 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_44;
          case 0x12u:
            uint64_t v40 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v40;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_44;
          case 0x13u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            uint64_t v41 = *(void *)(a2 + 16);
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = v41;
            uint64_t v42 = *(void *)(a2 + 32);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(void *)(a1 + 32) = v42;
            uint64_t v43 = *(void *)(a2 + 48);
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = v43;
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_44:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v11 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v12 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v12;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
            *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_48;
          case 1u:
            uint64_t v44 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v44;
            uint64_t v45 = *(void *)(a2 + 24);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = v45;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 2u:
          case 8u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 3u:
          case 4u:
          case 5u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 6u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 7u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 9u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v46 = sub_10000566C(&qword_100709E50);
            uint64_t v47 = *(int *)(v46 + 64);
            uint64_t v48 = (void *)(a1 + v47);
            uint64_t v49 = (const void *)(a2 + v47);
            uint64_t v50 = sub_1005E0970();
            uint64_t v51 = *(void *)(v50 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
            {
              uint64_t v52 = sub_10000566C(&qword_100709E58);
              memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v48, v49, v50);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
            }
            uint64_t v79 = *(int *)(v46 + 80);
            uint64_t v80 = (uint64_t *)(a1 + v79);
            int v81 = (uint64_t *)(a2 + v79);
            uint64_t v82 = *v81;
            unint64_t v83 = v81[1];
            sub_100008D24(*v81, v83);
            *uint64_t v80 = v82;
            v80[1] = v83;
            goto LABEL_48;
          case 0xAu:
          case 0xCu:
            unint64_t v53 = *(void *)a2;
            sub_100008D7C(*(void *)a2);
            *(void *)a1 = v53;
            goto LABEL_48;
          case 0xBu:
          case 0xDu:
            unint64_t v54 = *(void *)a2;
            sub_100008D7C(*(void *)a2);
            uint64_t v55 = *(void *)(a2 + 8);
            *(void *)a1 = v54;
            *(void *)(a1 + 8) = v55;
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 0xEu:
            uint64_t v56 = sub_10000566C(&qword_100709E60);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
            uint64_t v57 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
            uint64_t v58 = a1 + v57;
            long long v59 = (uint64_t *)(a2 + v57);
            *(unsigned char *)(v58 + 16) = *((unsigned char *)v59 + 16);
            uint64_t v60 = *v59;
            uint64_t v61 = v59[1];
            *(void *)uint64_t v58 = v60;
            *(void *)(v58 + 8) = v61;
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 0xFu:
            uint64_t v62 = sub_10000566C(&qword_100709E60);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
            uint64_t v63 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
            uint64_t v64 = a1 + v63;
            uint64_t v65 = a2 + v63;
            *(_WORD *)uint64_t v64 = *(_WORD *)v65;
            *(void *)(v64 + 8) = *(void *)(v65 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 0x10u:
          case 0x11u:
            uint64_t v66 = sub_10000566C(&qword_100709E60);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
            uint64_t v67 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
            uint64_t v68 = a1 + v67;
            uint64_t v69 = a2 + v67;
            *(void *)uint64_t v68 = *(void *)v69;
            *(_DWORD *)(v68 + 8) = *(_DWORD *)(v69 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_48;
          case 0x12u:
            uint64_t v70 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v70;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_48;
          case 0x13u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            uint64_t v71 = *(void *)(a2 + 16);
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = v71;
            uint64_t v72 = *(void *)(a2 + 32);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(void *)(a1 + 32) = v72;
            uint64_t v73 = *(void *)(a2 + 48);
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = v73;
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_48:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
            break;
        }
        uint64_t v84 = *(int *)(sub_10000566C(&qword_100709E80) + 48);
        uint64_t v85 = a1 + v84;
        uint64_t v86 = a2 + v84;
        *(_DWORD *)uint64_t v85 = *(_DWORD *)v86;
        *(unsigned char *)(v85 + 4) = *(unsigned char *)(v86 + 4);
        *(void *)(v85 + 8) = *(void *)(v86 + 8);
        *(_DWORD *)(v85 + 16) = *(_DWORD *)(v86 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100008D24(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_100008D7C(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t destroy for Command(unint64_t *a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for ClientCommand(0);
      unint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          swift_bridgeObjectRelease();
          goto LABEL_25;
        case 1:
        case 2:
        case 6:
        case 8:
          swift_bridgeObjectRelease();
          goto LABEL_43;
        case 3:
        case 4:
        case 5:
          goto LABEL_43;
        case 7:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_43;
        case 9:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v8 = sub_10000566C(&qword_100709E50);
          unint64_t v9 = (char *)a1 + *(int *)(v8 + 64);
          uint64_t v10 = sub_1005E0970();
          uint64_t v11 = *(void *)(v10 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
            (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
          }
          uint64_t v12 = (uint64_t *)((char *)a1 + *(int *)(v8 + 80));
          uint64_t v13 = *v12;
          unint64_t v14 = v12[1];
          return sub_1000094D4(v13, v14);
        case 10:
        case 12:
          unint64_t v3 = *a1;
          return sub_10000952C(v3);
        case 11:
        case 13:
          sub_10000952C(*a1);
          goto LABEL_43;
        case 14:
          uint64_t v15 = sub_10000566C(&qword_100709E60);
          (*(void (**)(unint64_t *, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
          int v5 = &qword_100709E68;
          goto LABEL_42;
        case 15:
          uint64_t v16 = sub_10000566C(&qword_100709E60);
          (*(void (**)(unint64_t *, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
          int v5 = &qword_100709E70;
          goto LABEL_42;
        case 16:
        case 17:
          uint64_t v4 = sub_10000566C(&qword_100709E60);
          (*(void (**)(unint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          int v5 = &qword_100709E78;
          goto LABEL_42;
        case 18:
          swift_release();
          swift_release();
LABEL_25:
          unint64_t result = swift_release();
          break;
        case 19:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_43;
        default:
          return result;
      }
      break;
    case 1:
      type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          goto LABEL_38;
        case 1u:
        case 2u:
        case 6u:
        case 8u:
          swift_bridgeObjectRelease();
          goto LABEL_40;
        case 3u:
        case 4u:
        case 5u:
          goto LABEL_40;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_40;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v17 = sub_10000566C(&qword_100709E50);
          long long v18 = (char *)a1 + *(int *)(v17 + 64);
          uint64_t v19 = sub_1005E0970();
          uint64_t v20 = *(void *)(v19 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
            (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
          }
          sub_1000094D4(*(unint64_t *)((char *)a1 + *(int *)(v17 + 80)), *(unint64_t *)((char *)a1 + *(int *)(v17 + 80) + 8));
          break;
        case 0xAu:
        case 0xCu:
          sub_10000952C(*a1);
          break;
        case 0xBu:
        case 0xDu:
          sub_10000952C(*a1);
          goto LABEL_40;
        case 0xEu:
          uint64_t v21 = sub_10000566C(&qword_100709E60);
          (*(void (**)(unint64_t *, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
          uint64_t v7 = &qword_100709E68;
          goto LABEL_35;
        case 0xFu:
          uint64_t v22 = sub_10000566C(&qword_100709E60);
          (*(void (**)(unint64_t *, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
          sub_10000566C(&qword_100709E70);
          goto LABEL_40;
        case 0x10u:
        case 0x11u:
          uint64_t v6 = sub_10000566C(&qword_100709E60);
          (*(void (**)(unint64_t *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
          uint64_t v7 = &qword_100709E78;
LABEL_35:
          sub_10000566C(v7);
          goto LABEL_40;
        case 0x12u:
          swift_release();
          swift_release();
LABEL_38:
          swift_release();
          break;
        case 0x13u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_40:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      int v5 = &qword_100709E80;
LABEL_42:
      sub_10000566C(v5);
      goto LABEL_43;
    case 2:
    case 3:
LABEL_43:
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000094D4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unint64_t sub_10000952C(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for Command(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v7 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v7;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_41;
        case 1u:
          uint64_t v10 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v10;
          uint64_t v11 = *(void *)(a2 + 16);
          uint64_t v12 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = v11;
          *(void *)(a1 + 24) = v12;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 2u:
        case 8u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 3u:
        case 4u:
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = sub_10000566C(&qword_100709E50);
          uint64_t v14 = *(int *)(v13 + 64);
          uint64_t v15 = (void *)(a1 + v14);
          uint64_t v16 = (const void *)(a2 + v14);
          uint64_t v17 = sub_1005E0970();
          uint64_t v18 = *(void *)(v17 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
          {
            uint64_t v19 = sub_10000566C(&qword_100709E58);
            memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
          }
          uint64_t v71 = *(int *)(v13 + 80);
          uint64_t v72 = (uint64_t *)(a1 + v71);
          uint64_t v73 = (uint64_t *)(a2 + v71);
          uint64_t v74 = *v73;
          unint64_t v75 = v73[1];
          sub_100008D24(*v73, v75);
          *uint64_t v72 = v74;
          v72[1] = v75;
          goto LABEL_41;
        case 0xAu:
        case 0xCu:
          unint64_t v20 = *(void *)a2;
          sub_100008D7C(v20);
          *(void *)a1 = v20;
          goto LABEL_41;
        case 0xBu:
        case 0xDu:
          unint64_t v21 = *(void *)a2;
          sub_100008D7C(*(void *)a2);
          uint64_t v22 = *(void *)(a2 + 8);
          *(void *)a1 = v21;
          *(void *)(a1 + 8) = v22;
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 0xEu:
          uint64_t v23 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
          uint64_t v24 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v25 = a1 + v24;
          uint64_t v26 = (uint64_t *)(a2 + v24);
          *(unsigned char *)(v25 + 16) = *((unsigned char *)v26 + 16);
          uint64_t v27 = *v26;
          uint64_t v28 = v26[1];
          *(void *)uint64_t v25 = v27;
          *(void *)(v25 + 8) = v28;
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 0xFu:
          uint64_t v29 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
          uint64_t v30 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
          uint64_t v31 = a1 + v30;
          uint64_t v32 = a2 + v30;
          *(_WORD *)uint64_t v31 = *(_WORD *)v32;
          *(void *)(v31 + 8) = *(void *)(v32 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 0x10u:
        case 0x11u:
          uint64_t v33 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
          uint64_t v34 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v35 = a1 + v34;
          uint64_t v36 = a2 + v34;
          *(void *)uint64_t v35 = *(void *)v36;
          *(_DWORD *)(v35 + 8) = *(_DWORD *)(v36 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_41;
        case 0x12u:
          uint64_t v37 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v37;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_41;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v38 = *(void *)(a2 + 16);
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = v38;
          uint64_t v39 = *(void *)(a2 + 32);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = v39;
          uint64_t v40 = *(void *)(a2 + 48);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = v40;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_41:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v6 - 8) + 64));
          break;
      }
      goto LABEL_47;
    case 1u:
      uint64_t v8 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v9;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_45;
        case 1u:
          uint64_t v41 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v41;
          uint64_t v42 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v42;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 2u:
        case 8u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 3u:
        case 4u:
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v43 = sub_10000566C(&qword_100709E50);
          uint64_t v44 = *(int *)(v43 + 64);
          uint64_t v45 = (void *)(a1 + v44);
          uint64_t v46 = (const void *)(a2 + v44);
          uint64_t v47 = sub_1005E0970();
          uint64_t v48 = *(void *)(v47 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
          {
            uint64_t v49 = sub_10000566C(&qword_100709E58);
            memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          }
          uint64_t v76 = *(int *)(v43 + 80);
          uint64_t v77 = (uint64_t *)(a1 + v76);
          unint64_t v78 = (uint64_t *)(a2 + v76);
          uint64_t v79 = *v78;
          unint64_t v80 = v78[1];
          sub_100008D24(*v78, v80);
          *uint64_t v77 = v79;
          v77[1] = v80;
          goto LABEL_45;
        case 0xAu:
        case 0xCu:
          unint64_t v50 = *(void *)a2;
          sub_100008D7C(*(void *)a2);
          *(void *)a1 = v50;
          goto LABEL_45;
        case 0xBu:
        case 0xDu:
          unint64_t v51 = *(void *)a2;
          sub_100008D7C(*(void *)a2);
          uint64_t v52 = *(void *)(a2 + 8);
          *(void *)a1 = v51;
          *(void *)(a1 + 8) = v52;
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 0xEu:
          uint64_t v53 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          uint64_t v54 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v55 = a1 + v54;
          uint64_t v56 = (uint64_t *)(a2 + v54);
          *(unsigned char *)(v55 + 16) = *((unsigned char *)v56 + 16);
          uint64_t v57 = *v56;
          uint64_t v58 = v56[1];
          *(void *)uint64_t v55 = v57;
          *(void *)(v55 + 8) = v58;
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 0xFu:
          uint64_t v59 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(a1, a2, v59);
          uint64_t v60 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
          uint64_t v61 = a1 + v60;
          uint64_t v62 = a2 + v60;
          *(_WORD *)uint64_t v61 = *(_WORD *)v62;
          *(void *)(v61 + 8) = *(void *)(v62 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 0x10u:
        case 0x11u:
          uint64_t v63 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
          uint64_t v64 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v65 = a1 + v64;
          uint64_t v66 = a2 + v64;
          *(void *)uint64_t v65 = *(void *)v66;
          *(_DWORD *)(v65 + 8) = *(_DWORD *)(v66 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_45;
        case 0x12u:
          uint64_t v67 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v67;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_45;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v68 = *(void *)(a2 + 16);
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = v68;
          uint64_t v69 = *(void *)(a2 + 32);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = v69;
          uint64_t v70 = *(void *)(a2 + 48);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = v70;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_45:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      uint64_t v81 = *(int *)(sub_10000566C(&qword_100709E80) + 48);
      uint64_t v82 = a1 + v81;
      uint64_t v83 = a2 + v81;
      *(_DWORD *)uint64_t v82 = *(_DWORD *)v83;
      *(unsigned char *)(v82 + 4) = *(unsigned char *)(v83 + 4);
      *(void *)(v82 + 8) = *(void *)(v83 + 8);
      *(_DWORD *)(v82 + 16) = *(_DWORD *)(v83 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_47;
    case 2u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_47;
    case 3u:
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
LABEL_47:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

{
  uint64_t v6;
  long long v7;
  long long v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  long long v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  char v91;
  uint64_t v93;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 7u:
    case 8u:
    case 0x20u:
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 1u:
    case 9u:
    case 0xAu:
    case 0x1Bu:
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 3u:
      if (*(void *)(a2 + 64))
      {
        uint64_t v6 = *(unsigned __int8 *)(a2 + 32);
        if (v6 == 255)
        {
          uint64_t v7 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v7;
          uint64_t v8 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v8;
        }
        else
        {
          uint64_t v77 = v6 & 1;
          unint64_t v78 = *(void *)a2;
          uint64_t v79 = *(void *)(a2 + 8);
          unint64_t v80 = *(void *)(a2 + 16);
          uint64_t v81 = *(void *)(a2 + 24);
          sub_1001F33C4(*(void *)a2, v79, v80, v81, v6 & 1);
          *(void *)a1 = v78;
          *(void *)(a1 + 8) = v79;
          *(void *)(a1 + 16) = v80;
          *(void *)(a1 + 24) = v81;
          *(unsigned char *)(a1 + 32) = v77;
          uint64_t v82 = *(void *)(a2 + 56);
          if (HIBYTE(v82) == 255)
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
          }
          else
          {
            uint64_t v83 = *(void *)(a2 + 40);
            uint64_t v84 = *(void *)(a2 + 48);
            sub_1001F33AC(v83, v84, *(void *)(a2 + 56), HIBYTE(v82) & 1);
            *(void *)(a1 + 40) = v83;
            *(void *)(a1 + 48) = v84;
            *(unsigned char *)(a1 + 62) = BYTE6(v82);
            *(_WORD *)(a1 + 60) = WORD2(v82);
            *(_DWORD *)(a1 + 56) = v82;
            *(unsigned char *)(a1 + 63) = HIBYTE(v82) & 1;
          }
        }
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        swift_bridgeObjectRetain();
      }
      else
      {
        memcpy((void *)a1, (const void *)a2, 0x48uLL);
      }
      uint64_t v86 = *(_DWORD *)(a2 + 104);
      uint64_t v85 = a2 + 104;
      *(void *)(a1 + 72) = *(void *)(v85 - 32);
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(v85 - 24);
      uint64_t v87 = *(void *)(v85 - 16);
      uint64_t v88 = *(void *)(v85 - 8);
      uint64_t v89 = *(unsigned __int8 *)(v85 + 6);
      uint64_t v90 = *(unsigned __int16 *)(v85 + 4) | (v89 << 16);
      uint64_t v91 = *(unsigned char *)(v85 + 7);
      swift_bridgeObjectRetain();
      sub_1001F33AC(v87, v88, v86 | (unint64_t)(v90 << 32), v91);
      *(void *)(a1 + 88) = v87;
      *(void *)(a1 + 96) = v88;
      *(unsigned char *)(a1 + 110) = v89;
      *(_WORD *)(a1 + 108) = v90;
      *(_DWORD *)(a1 + 104) = v86;
      *(unsigned char *)(a1 + 111) = v91;
      *(void *)(a1 + 112) = *(void *)(v85 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 4u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      uint64_t v10 = *(void *)(a2 + 24);
      uint64_t v11 = *(void *)(a2 + 32);
      Swift::UInt v93 = *(unsigned int *)(a2 + 40);
      uint64_t v12 = *(unsigned __int8 *)(a2 + 46);
      uint64_t v13 = *(unsigned __int16 *)(a2 + 44) | (v12 << 16);
      uint64_t v14 = *(unsigned char *)(a2 + 47);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001F33AC(v10, v11, v93 | (v13 << 32), v14);
      *(void *)(a1 + 24) = v10;
      *(void *)(a1 + 32) = v11;
      *(unsigned char *)(a1 + 46) = v12;
      *(_WORD *)(a1 + 44) = v13;
      *(_DWORD *)(a1 + 40) = v93;
      *(unsigned char *)(a1 + 47) = v14;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 5u:
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_66;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v15;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_66;
    case 0xBu:
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_66;
    case 0xCu:
      uint64_t v17 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v17;
      uint64_t v18 = *(void *)(a2 + 16);
      uint64_t v19 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v18;
      *(void *)(a1 + 24) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0xDu:
    case 0x21u:
    case 0x22u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0xEu:
      unint64_t v20 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v20)) {
        goto LABEL_13;
      }
      goto LABEL_44;
    case 0xFu:
      uint64_t v22 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v22))
      {
        uint64_t v23 = sub_10000566C(&qword_1007104D8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v53 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
        storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v22);
      }
      uint64_t v54 = sub_10000566C(&qword_1007108F8);
      *(void *)(a1 + *(int *)(v54 + 48)) = *(void *)(a2 + *(int *)(v54 + 48));
      *(void *)(a1 + *(int *)(v54 + 64)) = *(void *)(a2 + *(int *)(v54 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x10u:
      uint64_t v24 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v24))
      {
        uint64_t v25 = sub_10000566C(&qword_1007104D8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        uint64_t v55 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
        storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v24);
      }
      uint64_t v56 = sub_10000566C(&qword_1007108F0);
      *(void *)(a1 + *(int *)(v56 + 48)) = *(void *)(a2 + *(int *)(v56 + 48));
      uint64_t v57 = *(int *)(v56 + 64);
      uint64_t v58 = (void *)(a1 + v57);
      uint64_t v59 = (uint64_t *)(a2 + v57);
      uint64_t v60 = *v59;
      uint64_t v61 = v59[1];
      swift_bridgeObjectRetain();
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      unint64_t *v58 = v60;
      v58[1] = v61;
      goto LABEL_66;
    case 0x11u:
    case 0x17u:
      uint64_t v26 = *(void *)a2;
      sub_1002238FC(*(void *)a2);
      uint64_t v28 = *(void *)(a2 + 8);
      uint64_t v27 = *(void *)(a2 + 16);
      *(void *)a1 = v26;
      *(void *)(a1 + 8) = v28;
      uint64_t v29 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v27;
      *(void *)(a1 + 24) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x12u:
      unint64_t v20 = sub_10000566C(&qword_1007104C8);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v20))
      {
LABEL_13:
        unint64_t v21 = sub_10000566C(&qword_1007104D8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
LABEL_44:
        uint64_t v49 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
        storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v20);
      }
      unint64_t v50 = *(int *)(sub_10000566C(&qword_1007108E8) + 48);
      unint64_t v51 = a1 + v50;
      uint64_t v52 = a2 + v50;
      *(void *)unint64_t v51 = *(void *)v52;
      *(_DWORD *)(v51 + 8) = *(_DWORD *)(v52 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x13u:
      uint64_t v30 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v30;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_66;
    case 0x14u:
      uint64_t v31 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v31)) {
        goto LABEL_23;
      }
      goto LABEL_51;
    case 0x15u:
      uint64_t v31 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v31))
      {
LABEL_23:
        uint64_t v32 = sub_10000566C(&qword_1007108C8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
LABEL_51:
        uint64_t v62 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
        storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v31);
      }
      uint64_t v63 = *(int *)(sub_10000566C(&qword_1007108E0) + 48);
      uint64_t v64 = a1 + v63;
      uint64_t v65 = a2 + v63;
      *(void *)uint64_t v64 = *(void *)v65;
      *(_DWORD *)(v64 + 8) = *(_DWORD *)(v65 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x16u:
      uint64_t v33 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v33))
      {
        uint64_t v34 = sub_10000566C(&qword_1007108C8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        uint64_t v66 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
        storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v33);
      }
      uint64_t v67 = sub_10000566C(&qword_1007108D8);
      *(void *)(a1 + *(int *)(v67 + 48)) = *(void *)(a2 + *(int *)(v67 + 48));
      *(void *)(a1 + *(int *)(v67 + 64)) = *(void *)(a2 + *(int *)(v67 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x18u:
      uint64_t v35 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v35))
      {
        uint64_t v36 = sub_10000566C(&qword_1007108C8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        uint64_t v68 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
        storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v35);
      }
      uint64_t v69 = sub_10000566C(&qword_1007108D0);
      *(void *)(a1 + *(int *)(v69 + 48)) = *(void *)(a2 + *(int *)(v69 + 48));
      uint64_t v70 = *(int *)(v69 + 64);
      uint64_t v71 = (void *)(a1 + v70);
      uint64_t v72 = (uint64_t *)(a2 + v70);
      uint64_t v73 = *v72;
      uint64_t v74 = v72[1];
      swift_bridgeObjectRetain();
      MailboxPriorityInfo.mailboxPriorityOrder.getter();
      *uint64_t v71 = v73;
      v71[1] = v74;
      goto LABEL_66;
    case 0x19u:
      uint64_t v37 = sub_10000566C(&qword_1007108C0);
      if (getEnumTagSinglePayload for ClientCommand(a2, 1, v37))
      {
        uint64_t v38 = sub_10000566C(&qword_1007108C8);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        unint64_t v75 = sub_10000566C(&qword_100710538);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16))(a1, a2, v75);
        storeEnumTagSinglePayload for ClientCommand(a1, 0, 1, v37);
      }
      goto LABEL_66;
    case 0x1Au:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
      swift_retain();
      goto LABEL_66;
    case 0x1Cu:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x1Du:
      uint64_t v39 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v39;
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x1Eu:
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      uint64_t v40 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v40;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_66;
    case 0x1Fu:
      uint64_t v41 = *(void *)a2;
      sub_1002238FC(*(void *)a2);
      uint64_t v42 = *(void *)(a2 + 32);
      uint64_t v44 = *(void *)(a2 + 8);
      uint64_t v43 = *(void *)(a2 + 16);
      *(void *)a1 = v41;
      *(void *)(a1 + 8) = v44;
      uint64_t v45 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v43;
      *(void *)(a1 + 24) = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v42)
      {
        *(void *)(a1 + 32) = v42;
        uint64_t v46 = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        if (v46)
        {
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = v46;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          swift_retain();
          swift_retain();
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
        }
      }
      else
      {
        uint64_t v76 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v76;
      }
      goto LABEL_66;
    case 0x23u:
      uint64_t v47 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v47;
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x24u:
      uint64_t v48 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v48;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_66:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for Command(uint64_t a1, int *a2, uint64_t a3)
{
  if ((int *)a1 != a2)
  {
    sub_10000B49C(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(_DWORD *)(a1 + 24) = a2[6];
            *(_DWORD *)(a1 + 28) = a2[7];
            int v7 = a2[8];
            *(_DWORD *)(a1 + 35) = *(int *)((char *)a2 + 35);
            *(_DWORD *)(a1 + 32) = v7;
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_42;
          case 1u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(void *)(a1 + 24) = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 2u:
          case 8u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 3u:
          case 4u:
          case 5u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 6u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(_DWORD *)(a1 + 24) = a2[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 7u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(_DWORD *)(a1 + 24) = a2[6];
            *(void *)(a1 + 32) = *((void *)a2 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 9u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v11 = sub_10000566C(&qword_100709E50);
            uint64_t v12 = *(int *)(v11 + 64);
            uint64_t v13 = (void *)(a1 + v12);
            uint64_t v14 = (char *)a2 + v12;
            uint64_t v15 = sub_1005E0970();
            uint64_t v16 = *(void *)(v15 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
            {
              uint64_t v17 = sub_10000566C(&qword_100709E58);
              memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
            }
            uint64_t v55 = *(int *)(v11 + 80);
            uint64_t v56 = (uint64_t *)(a1 + v55);
            uint64_t v57 = (uint64_t *)((char *)a2 + v55);
            uint64_t v58 = *v57;
            unint64_t v59 = v57[1];
            sub_100008D24(*v57, v59);
            uint64_t *v56 = v58;
            v56[1] = v59;
            goto LABEL_42;
          case 0xAu:
          case 0xCu:
            unint64_t v18 = *(void *)a2;
            sub_100008D7C(v18);
            *(void *)a1 = v18;
            goto LABEL_42;
          case 0xBu:
          case 0xDu:
            unint64_t v19 = *(void *)a2;
            sub_100008D7C(*(void *)a2);
            *(void *)a1 = v19;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 0xEu:
            uint64_t v20 = sub_10000566C(&qword_100709E60);
            (*(void (**)(uint64_t, int *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
            uint64_t v21 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
            uint64_t v22 = a1 + v21;
            uint64_t v23 = (uint64_t)a2 + v21;
            *(void *)uint64_t v22 = *(void *)v23;
            uint64_t v24 = *(void *)(v23 + 8);
            *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
            *(void *)(v22 + 8) = v24;
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 0xFu:
            uint64_t v25 = sub_10000566C(&qword_100709E60);
            (*(void (**)(uint64_t, int *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
            uint64_t v26 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
            uint64_t v27 = a1 + v26;
            uint64_t v28 = (uint64_t)a2 + v26;
            *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
            *(unsigned char *)(v27 + 1) = *(unsigned char *)(v28 + 1);
            *(void *)(v27 + 8) = *(void *)(v28 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 0x10u:
          case 0x11u:
            uint64_t v29 = sub_10000566C(&qword_100709E60);
            (*(void (**)(uint64_t, int *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
            uint64_t v30 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
            uint64_t v31 = a1 + v30;
            uint64_t v32 = (uint64_t)a2 + v30;
            *(void *)uint64_t v31 = *(void *)v32;
            *(_DWORD *)(v31 + 8) = *(_DWORD *)(v32 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_42;
          case 0x12u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_42;
          case 0x13u:
            *(_DWORD *)a1 = *a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(void *)(a1 + 24) = *((void *)a2 + 3);
            *(void *)(a1 + 32) = *((void *)a2 + 4);
            *(void *)(a1 + 40) = *((void *)a2 + 5);
            *(void *)(a1 + 48) = *((void *)a2 + 6);
            *(void *)(a1 + 56) = *((void *)a2 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_42:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
            break;
        }
        goto LABEL_48;
      case 1u:
        uint64_t v8 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(_DWORD *)(a1 + 24) = a2[6];
            *(_DWORD *)(a1 + 28) = a2[7];
            int v9 = a2[8];
            *(_DWORD *)(a1 + 35) = *(int *)((char *)a2 + 35);
            *(_DWORD *)(a1 + 32) = v9;
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_46;
          case 1u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(void *)(a1 + 24) = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 2u:
          case 8u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 3u:
          case 4u:
          case 5u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 6u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(_DWORD *)(a1 + 24) = a2[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 7u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(_DWORD *)(a1 + 24) = a2[6];
            *(void *)(a1 + 32) = *((void *)a2 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 9u:
            *(void *)a1 = *(void *)a2;
            *(_DWORD *)(a1 + 8) = a2[2];
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v33 = sub_10000566C(&qword_100709E50);
            uint64_t v34 = *(int *)(v33 + 64);
            uint64_t v35 = (void *)(a1 + v34);
            uint64_t v36 = (char *)a2 + v34;
            uint64_t v37 = sub_1005E0970();
            uint64_t v38 = *(void *)(v37 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
            {
              uint64_t v39 = sub_10000566C(&qword_100709E58);
              memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
            }
            uint64_t v60 = *(int *)(v33 + 80);
            uint64_t v61 = (uint64_t *)(a1 + v60);
            uint64_t v62 = (uint64_t *)((char *)a2 + v60);
            uint64_t v63 = *v62;
            unint64_t v64 = v62[1];
            sub_100008D24(*v62, v64);
            *uint64_t v61 = v63;
            v61[1] = v64;
            goto LABEL_46;
          case 0xAu:
          case 0xCu:
            unint64_t v40 = *(void *)a2;
            sub_100008D7C(*(void *)a2);
            *(void *)a1 = v40;
            goto LABEL_46;
          case 0xBu:
          case 0xDu:
            unint64_t v41 = *(void *)a2;
            sub_100008D7C(*(void *)a2);
            *(void *)a1 = v41;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 0xEu:
            uint64_t v42 = sub_10000566C(&qword_100709E60);
            (*(void (**)(uint64_t, int *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
            uint64_t v43 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
            uint64_t v44 = a1 + v43;
            uint64_t v45 = (uint64_t)a2 + v43;
            *(void *)uint64_t v44 = *(void *)v45;
            uint64_t v46 = *(void *)(v45 + 8);
            *(unsigned char *)(v44 + 16) = *(unsigned char *)(v45 + 16);
            *(void *)(v44 + 8) = v46;
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 0xFu:
            uint64_t v47 = sub_10000566C(&qword_100709E60);
            (*(void (**)(uint64_t, int *, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
            uint64_t v48 = *(int *)(sub_10000566C(&qword_100709E70) + 48);
            uint64_t v49 = a1 + v48;
            uint64_t v50 = (uint64_t)a2 + v48;
            *(unsigned char *)uint64_t v49 = *(unsigned char *)v50;
            *(unsigned char *)(v49 + 1) = *(unsigned char *)(v50 + 1);
            *(void *)(v49 + 8) = *(void *)(v50 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 0x10u:
          case 0x11u:
            uint64_t v51 = sub_10000566C(&qword_100709E60);
            (*(void (**)(uint64_t, int *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
            uint64_t v52 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
            uint64_t v53 = a1 + v52;
            uint64_t v54 = (uint64_t)a2 + v52;
            *(void *)uint64_t v53 = *(void *)v54;
            *(_DWORD *)(v53 + 8) = *(_DWORD *)(v54 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_46;
          case 0x12u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_46;
          case 0x13u:
            *(_DWORD *)a1 = *a2;
            *(void *)(a1 + 8) = *((void *)a2 + 1);
            *(void *)(a1 + 16) = *((void *)a2 + 2);
            *(void *)(a1 + 24) = *((void *)a2 + 3);
            *(void *)(a1 + 32) = *((void *)a2 + 4);
            *(void *)(a1 + 40) = *((void *)a2 + 5);
            *(void *)(a1 + 48) = *((void *)a2 + 6);
            *(void *)(a1 + 56) = *((void *)a2 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_46:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        uint64_t v65 = *(int *)(sub_10000566C(&qword_100709E80) + 48);
        uint64_t v66 = a1 + v65;
        uint64_t v67 = (uint64_t)a2 + v65;
        char v68 = *(unsigned char *)(v67 + 4);
        *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
        *(unsigned char *)(v66 + 4) = v68;
        *(void *)(v66 + 8) = *(void *)(v67 + 8);
        *(_DWORD *)(v66 + 16) = *(_DWORD *)(v67 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 2u:
        int v10 = *a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        *(_DWORD *)a1 = v10;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(_DWORD *)(a1 + 16) = a2[4];
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = a2[2];
        swift_bridgeObjectRetain();
LABEL_48:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10000B49C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Command();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Command()
{
  uint64_t result = qword_100709EF8;
  if (!qword_100709EF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

{
  uint64_t result;

  uint64_t result = qword_100710988;
  if (!qword_100710988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithTake for Command(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v16 = sub_10000566C(&qword_100709E50);
        uint64_t v17 = *(int *)(v16 + 64);
        unint64_t v18 = (void *)(a1 + v17);
        unint64_t v19 = (const void *)(a2 + v17);
        uint64_t v20 = sub_1005E0970();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          uint64_t v22 = sub_10000566C(&qword_100709E58);
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        *(_OWORD *)(a1 + *(int *)(v16 + 80)) = *(_OWORD *)(a2 + *(int *)(v16 + 80));
        goto LABEL_24;
      case 0xEu:
        uint64_t v33 = sub_10000566C(&qword_100709E60);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
        uint64_t v34 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
        uint64_t v35 = a1 + v34;
        uint64_t v36 = a2 + v34;
        *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
        *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
        goto LABEL_24;
      case 0xFu:
        uint64_t v37 = sub_10000566C(&qword_100709E60);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(a1, a2, v37);
        uint64_t v38 = sub_10000566C(&qword_100709E70);
        *(_OWORD *)(a1 + *(int *)(v38 + 48)) = *(_OWORD *)(a2 + *(int *)(v38 + 48));
        goto LABEL_24;
      case 0x10u:
      case 0x11u:
        uint64_t v39 = sub_10000566C(&qword_100709E60);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(a1, a2, v39);
        uint64_t v40 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
        uint64_t v41 = a1 + v40;
        uint64_t v42 = a2 + v40;
        *(void *)uint64_t v41 = *(void *)v42;
        *(_DWORD *)(v41 + 8) = *(_DWORD *)(v42 + 8);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
        break;
    }
    uint64_t v43 = *(int *)(sub_10000566C(&qword_100709E80) + 48);
    uint64_t v44 = a1 + v43;
    uint64_t v45 = a2 + v43;
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    *(_DWORD *)(v44 + 16) = *(_DWORD *)(v45 + 16);
    goto LABEL_26;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v8 = sub_10000566C(&qword_100709E50);
        uint64_t v9 = *(int *)(v8 + 64);
        int v10 = (void *)(a1 + v9);
        uint64_t v11 = (const void *)(a2 + v9);
        uint64_t v12 = sub_1005E0970();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          uint64_t v14 = sub_10000566C(&qword_100709E58);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        *(_OWORD *)(a1 + *(int *)(v8 + 80)) = *(_OWORD *)(a2 + *(int *)(v8 + 80));
        goto LABEL_20;
      case 0xEu:
        uint64_t v23 = sub_10000566C(&qword_100709E60);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        uint64_t v24 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
        uint64_t v25 = a1 + v24;
        uint64_t v26 = a2 + v24;
        *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
        *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
        goto LABEL_20;
      case 0xFu:
        uint64_t v27 = sub_10000566C(&qword_100709E60);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
        uint64_t v28 = sub_10000566C(&qword_100709E70);
        *(_OWORD *)(a1 + *(int *)(v28 + 48)) = *(_OWORD *)(a2 + *(int *)(v28 + 48));
        goto LABEL_20;
      case 0x10u:
      case 0x11u:
        uint64_t v29 = sub_10000566C(&qword_100709E60);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
        uint64_t v30 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = a2 + v30;
        *(void *)uint64_t v31 = *(void *)v32;
        *(_DWORD *)(v31 + 8) = *(_DWORD *)(v32 + 8);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
LABEL_26:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t assignWithTake for Command(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000B49C(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 9u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v16 = sub_10000566C(&qword_100709E50);
          uint64_t v17 = *(int *)(v16 + 64);
          unint64_t v18 = (void *)(a1 + v17);
          unint64_t v19 = (const void *)(a2 + v17);
          uint64_t v20 = sub_1005E0970();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
          {
            uint64_t v22 = sub_10000566C(&qword_100709E58);
            memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
          }
          *(_OWORD *)(a1 + *(int *)(v16 + 80)) = *(_OWORD *)(a2 + *(int *)(v16 + 80));
          goto LABEL_25;
        case 0xEu:
          uint64_t v33 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
          uint64_t v34 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v35 = a1 + v34;
          uint64_t v36 = a2 + v34;
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
          *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
          goto LABEL_25;
        case 0xFu:
          uint64_t v37 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(a1, a2, v37);
          uint64_t v38 = sub_10000566C(&qword_100709E70);
          *(_OWORD *)(a1 + *(int *)(v38 + 48)) = *(_OWORD *)(a2 + *(int *)(v38 + 48));
          goto LABEL_25;
        case 0x10u:
        case 0x11u:
          uint64_t v39 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(a1, a2, v39);
          uint64_t v40 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v41 = a1 + v40;
          uint64_t v42 = a2 + v40;
          *(void *)uint64_t v41 = *(void *)v42;
          *(_DWORD *)(v41 + 8) = *(_DWORD *)(v42 + 8);
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
          break;
      }
      uint64_t v43 = *(int *)(sub_10000566C(&qword_100709E80) + 48);
      uint64_t v44 = a1 + v43;
      uint64_t v45 = a2 + v43;
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      *(_DWORD *)(v44 + 16) = *(_DWORD *)(v45 + 16);
      goto LABEL_27;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 9u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v8 = sub_10000566C(&qword_100709E50);
          uint64_t v9 = *(int *)(v8 + 64);
          int v10 = (void *)(a1 + v9);
          uint64_t v11 = (const void *)(a2 + v9);
          uint64_t v12 = sub_1005E0970();
          uint64_t v13 = *(void *)(v12 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
          {
            uint64_t v14 = sub_10000566C(&qword_100709E58);
            memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
          }
          *(_OWORD *)(a1 + *(int *)(v8 + 80)) = *(_OWORD *)(a2 + *(int *)(v8 + 80));
          goto LABEL_21;
        case 0xEu:
          uint64_t v23 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
          uint64_t v24 = *(int *)(sub_10000566C(&qword_100709E68) + 48);
          uint64_t v25 = a1 + v24;
          uint64_t v26 = a2 + v24;
          *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
          *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
          goto LABEL_21;
        case 0xFu:
          uint64_t v27 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
          uint64_t v28 = sub_10000566C(&qword_100709E70);
          *(_OWORD *)(a1 + *(int *)(v28 + 48)) = *(_OWORD *)(a2 + *(int *)(v28 + 48));
          goto LABEL_21;
        case 0x10u:
        case 0x11u:
          uint64_t v29 = sub_10000566C(&qword_100709E60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
          uint64_t v30 = *(int *)(sub_10000566C(&qword_100709E78) + 48);
          uint64_t v31 = a1 + v30;
          uint64_t v32 = a2 + v30;
          *(void *)uint64_t v31 = *(void *)v32;
          *(_DWORD *)(v31 + 8) = *(_DWORD *)(v32 + 8);
LABEL_21:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientCommand(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ClientCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10000C528()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10000C538()
{
  uint64_t result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    v2[6] = &unk_1005ED8D0;
    v2[7] = &unk_1005ED8E8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for AuthenticationMechanism()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13IMAP2Behavior7CommandO8AffinityVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Command.Affinity(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = a2[4];
  return a1;
}

__n128 initializeWithTake for Command.Affinity(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Command.Affinity(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Command.Affinity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Command.Affinity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Command.Affinity()
{
  return &type metadata for Command.Affinity;
}

uint64_t sub_10000C7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Command();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000C804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCommand(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t IndexingStatistics.messagesIndexed.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SyncRequest.updateMailboxList.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

IMAP2Behavior::ConnectionLimits __swiftcall ConnectionLimits.init(maximumConstrainedConnectionCount:maximumConnectionCount:closeWhenIdle:)(Swift::Int maximumConstrainedConnectionCount, Swift::Int maximumConnectionCount, Swift::Bool closeWhenIdle)
{
  if (maximumConnectionCount < maximumConstrainedConnectionCount) {
    maximumConstrainedConnectionCount = maximumConnectionCount;
  }
  Swift::Bool v3 = closeWhenIdle;
  result.maximumConnectionCount = maximumConnectionCount;
  result.maximumConstrainedConnectionCount = maximumConstrainedConnectionCount;
  result.closeWhenIdle = v3;
  return result;
}

uint64_t static ConnectionLimits.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v7 = a1 == a4 && a2 == a5;
  return v7 & (a3 ^ a6 ^ 1u);
}

uint64_t sub_10000C8A4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10000C8D8()
{
  if (*(void *)(*(void *)(v0 + 56) + 16)) {
    return 2;
  }
  uint64_t v1 = v0;
  long long v2 = *(_OWORD *)(v0 + 112);
  v38[2] = *(_OWORD *)(v0 + 96);
  v38[3] = v2;
  long long v3 = *(_OWORD *)(v0 + 144);
  long long v39 = *(_OWORD *)(v0 + 128);
  long long v40 = v3;
  long long v4 = *(_OWORD *)(v0 + 80);
  v38[0] = *(_OWORD *)(v0 + 64);
  v38[1] = v4;
  if (BYTE1(v39)) {
    return 2;
  }
  int v5 = &_swiftEmptySetSingleton;
  if (*(unsigned char *)(v0 + 184))
  {
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      uint64_t v8 = *(void *)(v1 + 168);
      uint64_t v9 = *(void *)(v1 + 176);
      int v10 = (long long *)(v6 + 32);
      uint64_t v11 = v6 + 176;
      uint64_t v12 = *(void *)(v6 + 16);
      while (!*(void *)(*(void *)v11 + 16))
      {
        v11 += 176;
        if (!--v12)
        {
          uint64_t v37 = &_swiftEmptySetSingleton;
          swift_bridgeObjectRetain();
          for (uint64_t i = v7 - 1; ; --i)
          {
            long long v14 = *v10;
            long long v15 = v10[2];
            long long v27 = v10[1];
            long long v28 = v15;
            long long v26 = v14;
            long long v16 = v10[3];
            long long v17 = v10[4];
            long long v18 = v10[6];
            long long v31 = v10[5];
            long long v32 = v18;
            long long v29 = v16;
            long long v30 = v17;
            long long v19 = v10[7];
            long long v20 = v10[8];
            long long v21 = v10[10];
            long long v35 = v10[9];
            long long v36 = v21;
            long long v33 = v19;
            long long v34 = v20;
            if (*(void *)(*((void *)&v35 + 1) + 16))
            {
              uint64_t v22 = v27;
              unsigned int v23 = DWORD2(v27);
              sub_100007780((uint64_t)&v26);
              swift_bridgeObjectRetain();
              sub_1000187DC((uint64_t)v41, v22, v23);
              swift_bridgeObjectRelease();
              sub_100007820((uint64_t)&v26);
            }
            if (!i) {
              break;
            }
            v10 += 11;
          }
          sub_10000F0D4(v6, v8, v9, 1);
          int v5 = v37;
          goto LABEL_14;
        }
      }
      return 2;
    }
  }
LABEL_14:
  uint64_t v24 = v5[2];
  swift_bridgeObjectRelease();
  if (v24 || (*(unsigned char *)(v1 + 17) & 1) == 0) {
    return 2;
  }
  uint64_t result = 0;
  if (*(unsigned char *)(v1 + 16) == 2)
  {
    sub_10000E994((uint64_t)v38, (uint64_t)v41);
    sub_10000E994((uint64_t)v41, (uint64_t)&v26);
    if (v26 != 2 && (BYTE9(v28) & 1) == 0) {
      return 1;
    }
  }
  return result;
}

uint64_t UnsafeExtractedAttachment.part.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t UID.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t Flags.forwarded.getter(unint64_t a1)
{
  return HIDWORD(a1) & 1;
}

uint64_t ConnectionIDsGroupedByState.Connection.constraint.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result & 1;
  return result;
}

Swift::UInt32 (__swiftcall *Flags.forwarded.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t Flags.redirected.getter(unint64_t a1)
{
  return (a1 >> 40) & 1;
}

uint64_t ConnectionIDsGroupedByState.Connection.state.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result & 1;
  return result;
}

Swift::UInt32 (__swiftcall *Flags.redirected.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

unint64_t ConnectionIDsGroupedByState.Connection.init(id:constraint:state:)(unsigned int a1, char a2, char a3)
{
  return ((unint64_t)(a2 & 1) << 32) | ((unint64_t)(a3 & 1) << 40) | a1;
}

BOOL static TextPartEnumerationResult.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TextPartEnumerationResult.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int TextPartEnumerationResult.hashValue.getter(char a1)
{
  return sub_1005E3470();
}

BOOL sub_10000CBDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10000CBF4()
{
  Swift::UInt v1 = *v0;
  sub_1005E33F0();
  sub_1005E3410(v1);
  return sub_1005E3470();
}

void sub_10000CC3C()
{
  sub_1005E3410(*v0);
}

Swift::Int sub_10000CC68()
{
  Swift::UInt v1 = *v0;
  sub_1005E33F0();
  sub_1005E3410(v1);
  return sub_1005E3470();
}

void ConnectionIDsGroupedByState.Connection.hash(into:)(uint64_t a1, unint64_t a2)
{
}

unint64_t static ConnectionIDsGroupedByState.Connection.__derived_struct_equals(_:_:)(unint64_t a1, unint64_t a2)
{
  int v2 = BYTE4(a1) & 1 ^ BYTE4(a2) & 1;
  if (a1 != a2) {
    int v2 = 1;
  }
  return (v2 | (a1 >> 40) & 1 ^ (a2 >> 40) & 1) ^ 1;
}

Swift::Int ConnectionIDsGroupedByState.Connection.hashValue.getter(unint64_t a1)
{
  return sub_1005E3470();
}

Swift::Int sub_10000CD74()
{
  Swift::UInt32 v1 = *(_DWORD *)v0;
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 4);
  Swift::UInt v3 = *(unsigned __int8 *)(v0 + 5);
  sub_1005E33F0();
  sub_1005E3440(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  return sub_1005E3470();
}

void sub_10000CDE4()
{
  Swift::UInt v1 = *(unsigned __int8 *)(v0 + 4);
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 5);
  sub_1005E3440(*(_DWORD *)v0);
  sub_1005E3410(v1);
  sub_1005E3410(v2);
}

Swift::Int sub_10000CE30()
{
  Swift::UInt32 v1 = *(_DWORD *)v0;
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 4);
  Swift::UInt v3 = *(unsigned __int8 *)(v0 + 5);
  sub_1005E33F0();
  sub_1005E3440(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  return sub_1005E3470();
}

BOOL sub_10000CE9C(uint64_t a1, uint64_t a2)
{
  return ((*(_DWORD *)a1 != *(_DWORD *)a2) | ((*(unsigned char *)(a1 + 4) ^ *(unsigned char *)(a2 + 4)) | (*(unsigned char *)(a2 + 5) ^ *(unsigned char *)(a1 + 5))) & 1) == 0;
}

uint64_t MailboxesSelectionUsage.count.getter(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t ConnectionIDsGroupedByState.containsActivelyConnecting.getter(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  if (*(unsigned char *)(result + 37) != 1) {
    return 1;
  }
  if (v1 == 1) {
    return 0;
  }
  Swift::UInt v2 = (unsigned __int8 *)(result + 45);
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v4 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    int v6 = *v2;
    v2 += 8;
    int v5 = v6;
    if (v6 != 1 || v4 == v1) {
      return v5 ^ 1u;
    }
  }
  __break(1u);
  return result;
}

uint64_t ConnectionLimitsAndUsage.limits.getter()
{
  return *(void *)v0;
}

uint64_t ConnectionLimitsAndUsage.limits.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(unsigned char *)(v3 + 16) = a3;
  return result;
}

uint64_t ConnectionLimitsAndUsage.usage.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_10000CF8C(v2);
  return v1;
}

unint64_t sub_10000CF8C(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t ConnectionLimitsAndUsage.usage.setter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t result = sub_10000CFDC(*(void *)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

unint64_t sub_10000CFDC(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::UInt32 (__swiftcall *UnsafeExtractedAttachment.encoding.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t ConnectionLimitsAndUsage.init(limits:usage:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  return result;
}

BOOL static ConnectionLimitsAndUsage.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  return v2
      && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
      && static ConnectionUsage.__derived_struct_equals(_:_:)(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a2 + 24), *(void *)(a2 + 32));
}

BOOL sub_10000D05C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  return v2
      && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
      && static ConnectionUsage.__derived_struct_equals(_:_:)(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a2 + 24), *(void *)(a2 + 32));
}

uint64_t ConnectionLimitsAndUsage.connectionsToBeCancelled(_:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_10000CF8C(v2);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_10000DE50(v3, v1, v2);
  swift_bridgeObjectRelease();
  sub_10000CFDC(v2);
  swift_bridgeObjectRelease();
  sub_10000E918(v4, v2 != 0, *(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10000D13C(unsigned int *a1, unsigned int *a2)
{
  uint64_t v2 = *((void *)a1 + 1);
  __int16 v3 = *((unsigned __int8 *)a1 + 16);
  __int16 v4 = *((unsigned __int8 *)a1 + 17);
  if (*((unsigned char *)a1 + 4)) {
    uint64_t v5 = &_mh_execute_header;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (unint64_t)v5 | *a1;
  if (*((unsigned char *)a2 + 4)) {
    uint64_t v7 = &_mh_execute_header;
  }
  else {
    uint64_t v7 = 0;
  }
  return sub_10000DBD0(v6, v2, v3 | (unsigned __int16)(v4 << 8), (unint64_t)v7 | *a2, *((void *)a2 + 1), *((unsigned __int8 *)a2 + 16) | (unsigned __int16)(*((unsigned __int8 *)a2 + 17) << 8));
}

unint64_t StateWithTasks.connectionLimitsAndUsage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  long long v28 = v1[12];
  long long v24 = v1[8];
  long long v25 = v1[9];
  long long v26 = v1[10];
  long long v27 = v1[11];
  long long v21 = v1[4];
  long long v22 = v1[5];
  long long v23 = v1[7];
  long long v17 = *v1;
  long long v18 = v1[1];
  long long v19 = v1[2];
  long long v20 = v1[3];
  v29[2] = v1[6];
  long long v30 = v23;
  long long v31 = v24;
  long long v32 = v25;
  v29[0] = v21;
  v29[1] = v22;
  sub_10000E994((uint64_t)v29, (uint64_t)v33);
  sub_10000E994((uint64_t)v33, (uint64_t)v34);
  if (v34[0] == 2) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = v34[9] + 1;
  }
  int v4 = sub_10000C8D8();
  if (v4)
  {
    char v15 = 0;
    if (v4 == 1)
    {
      uint64_t v13 = 1;
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v13 = v3;
      uint64_t v14 = v3;
    }
  }
  else
  {
    uint64_t v13 = 1;
    uint64_t v14 = 0;
    char v15 = 1;
  }
  uint64_t v12 = v30;
  uint64_t v5 = sub_10008C078();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1000D8938();
  unint64_t v7 = sub_1000D8D74(v18, BYTE1(v18) & 1, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), SBYTE10(v17), v20, v6);
  sub_100058C7C(v26, *((uint64_t *)&v26 + 1), v27, BYTE8(v27) & 1, v12, (uint64_t)v5, BYTE4(v7) & 1, *((uint64_t *)&v28 + 1));
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  int v10 = sub_1000D3B0C(v9);
  swift_release();
  swift_release();
  swift_release();
  unint64_t result = sub_1000EB228(*((unsigned __int8 *)v2 + 256), *((void *)v2 + 33));
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_10000D3BC(uint64_t a1)
{
  uint64_t v3 = variable initialization expression of Cache._big5HkscsCanonicalName();
  int v4 = sub_10000D550(&v11, a1, 0, 1, v3);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = v11;
  if (v11 == v5) {
    return (uint64_t)v4;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v5 < v11)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_100038C14(a1, v1, 0, (2 * v6) | 1);
    goto LABEL_9;
  }
  uint64_t v1 = a1 + 32;
  sub_1005E3300();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  unint64_t v7 = (void *)swift_dynamicCastClass();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v7[2];
  swift_release();
  if (v8 != v6) {
    goto LABEL_14;
  }
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = v4;
  uint64_t v13 = v9;
  if (*(void *)(a1 + 16) >= v5)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10000D704(a1, v1, v6, (2 * v5) | 1);
    swift_bridgeObjectRelease_n();
    swift_release();
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t variable initialization expression of Cache._big5HkscsCanonicalName()
{
  return 0;
}

void *sub_10000D550(unint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = sub_1005E0BD0();
  if (a4) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = a3;
  }
  if (v12 <= v11) {
    uint64_t v12 = v11;
  }
  if (v12 <= a5) {
    uint64_t v13 = a5;
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13 > 4)
  {
    uint64_t v14 = sub_1005E0BE0();
    sub_10000DA70(&v23, a2, (void *)(v14 + 16));
    *a1 = v23;
    return (void *)v14;
  }
  if (v10 < 2)
  {
LABEL_11:
    uint64_t v14 = 0;
    *a1 = v10;
    return (void *)v14;
  }
  uint64_t result = sub_100015988(0, v10, 0, _swiftEmptyArrayStorage);
  long long v16 = result;
  unint64_t v17 = 0;
  while (v17 != v10)
  {
    int v18 = *(_DWORD *)(a2 + 32 + 4 * v17);
    unint64_t v19 = v16[2];
    if (v19)
    {
      if (*((_DWORD *)v16 + 8) == v18) {
        goto LABEL_28;
      }
      if (v19 != 1)
      {
        if (*((_DWORD *)v16 + 9) == v18)
        {
LABEL_28:
          swift_bridgeObjectRelease();
          uint64_t v14 = 0;
          *a1 = v17;
          return (void *)v14;
        }
        if (v19 != 2)
        {
          uint64_t v20 = 10;
          while (1)
          {
            uint64_t v21 = v20 - 7;
            if (__OFADD__(v20 - 8, 1)) {
              break;
            }
            if (*((_DWORD *)v16 + v20) == v18) {
              goto LABEL_28;
            }
            ++v20;
            if (v21 == v19) {
              goto LABEL_24;
            }
          }
          __break(1u);
          break;
        }
      }
    }
LABEL_24:
    unint64_t v22 = v16[3];
    if (v19 >= v22 >> 1)
    {
      uint64_t result = sub_100015988((void *)(v22 > 1), v19 + 1, 1, v16);
      long long v16 = result;
    }
    ++v17;
    v16[2] = v19 + 1;
    *((_DWORD *)v16 + v19 + 8) = v18;
    if (v17 == v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10000D704(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v5 = a4 >> 1;
  if (a4 >> 1 == a3) {
    return result;
  }
  uint64_t v6 = v4;
  uint64_t v7 = a3;
  uint64_t v8 = v4 + 1;
  uint64_t result = swift_unknownObjectRetain();
  while (v7 < v5)
  {
    Swift::UInt32 v12 = *(_DWORD *)(a2 + 4 * v7);
    uint64_t v14 = *v6;
    uint64_t v13 = v6[1];
    char v15 = (_DWORD *)(v13 + 32);
    if (*v6)
    {
      sub_1005E33F0();
      sub_1005E3440(v12);
      uint64_t result = sub_1005E3470();
      if (__OFSUB__(1 << *(void *)(v14 + 16), 1)) {
        goto LABEL_48;
      }
      sub_1005E0B40();
      uint64_t result = sub_1005E0B70();
      if ((v16 & 1) == 0)
      {
        while (v15[result] != v12)
        {
          sub_1005E0B90();
          uint64_t result = sub_1005E0B70();
          if (v17) {
            goto LABEL_22;
          }
        }
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(v13 + 16);
      if (v18)
      {
        if (*v15 == v12) {
          goto LABEL_7;
        }
        if (v18 != 1)
        {
          if (*(_DWORD *)(v13 + 36) == v12) {
            goto LABEL_7;
          }
          if (v18 != 2)
          {
            if (*(_DWORD *)(v13 + 40) == v12) {
              goto LABEL_7;
            }
            if (v18 != 3)
            {
              if (*(_DWORD *)(v13 + 44) == v12) {
                goto LABEL_7;
              }
              if (v18 != 4)
              {
                if (*(_DWORD *)(v13 + 48) == v12) {
                  goto LABEL_7;
                }
                uint64_t v24 = v18 - 5;
                long long v25 = (int *)(v13 + 52);
                while (v24)
                {
                  int v26 = *v25++;
                  --v24;
                  if (v26 == v12) {
                    goto LABEL_7;
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v8 = v13;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10001A534(0, *(void *)(v13 + 16) + 1, 1);
      uint64_t v13 = *v8;
    }
    unint64_t v20 = *(void *)(v13 + 16);
    unint64_t v19 = *(void *)(v13 + 24);
    if (v20 >= v19 >> 1)
    {
      uint64_t result = sub_10001A534(v19 > 1, v20 + 1, 1);
      uint64_t v13 = *v8;
    }
    *(void *)(v13 + 16) = v20 + 1;
    *(_DWORD *)(v13 + 4 * v20 + 32) = v12;
    v6[1] = v13;
    uint64_t v21 = *v6;
    if (*v6)
    {
      swift_beginAccess();
      if (sub_1005E0BA0() <= (uint64_t)v20)
      {
        uint64_t v23 = *(void *)(v21 + 24) & 0x3FLL;
        if (v20 > 0xE || v23) {
          goto LABEL_3;
        }
        uint64_t result = swift_release();
        *uint64_t v6 = 0;
      }
      else
      {
        uint64_t result = swift_isUniquelyReferenced_native();
        uint64_t v22 = *v6;
        if ((result & 1) == 0)
        {
          if (!v22) {
            goto LABEL_50;
          }
          uint64_t v22 = sub_1005E0BC0();
          uint64_t result = swift_release();
          *uint64_t v6 = v22;
        }
        if (!v22) {
          goto LABEL_49;
        }
        uint64_t result = sub_1005E0B60();
      }
    }
    else if (v20 > 0xE)
    {
      uint64_t v23 = 0;
LABEL_3:
      uint64_t v9 = sub_1005E0BD0();
      if (v23 <= v9) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v23;
      }
      uint64_t v11 = sub_1000A4120(v13, v10, 0, v23);
      uint64_t result = swift_release();
      *uint64_t v6 = v11;
    }
LABEL_7:
    if (++v7 == v5) {
      return swift_unknownObjectRelease();
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

unint64_t sub_10000DA70(unint64_t *a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    unint64_t v6 = 0;
    uint64_t v7 = a2 + 32;
    while (1)
    {
      Swift::UInt32 v8 = *(_DWORD *)(v7 + 4 * v6);
      sub_1005E33F0();
      sub_1005E3440(v8);
      unint64_t result = sub_1005E3470();
      if (__OFSUB__(1 << *a3, 1)) {
        break;
      }
      sub_1005E0B40();
      while (1)
      {
        unint64_t result = sub_1005E0B70();
        if (v10) {
          break;
        }
        if (result >= v4)
        {
          __break(1u);
          goto LABEL_14;
        }
        if (*(_DWORD *)(v7 + 4 * result) == *(_DWORD *)(v7 + 4 * v6))
        {
          unint64_t result = 0;
          *a1 = v6;
          return result;
        }
        sub_1005E0B90();
      }
      sub_1005E0B80();
      if (++v6 == v4) {
        goto LABEL_11;
      }
    }
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    *a1 = v4;
    return 1;
  }
  return result;
}

uint64_t sub_10000DBD0(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, unint64_t a5, __int16 a6)
{
  uint64_t result = 0;
  if (a1 == a4 && (BYTE4(a1) & 1) == (BYTE4(a4) & 1))
  {
    if ((a3 & 0x100) != 0)
    {
      if ((a6 & 0x100) != 0) {
        return 1;
      }
    }
    else if ((a6 & 0x100) == 0)
    {
      if (a3)
      {
        if (a2)
        {
          if (a2 == 1)
          {
            if ((a6 & 1) == 0 || a5 != 1) {
              return 0;
            }
          }
          else if ((a6 & 1) == 0 || a5 <= 1)
          {
            return 0;
          }
        }
        else if ((a6 & 1) == 0 || a5)
        {
          return 0;
        }
      }
      else if ((a6 & 1) != 0 || a2 != a5)
      {
        return 0;
      }
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_10000DC5C(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  uint64_t v27 = result + 32;
  int64_t v5 = _swiftEmptyArrayStorage;
  do
  {
    long long v25 = v5;
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        return result;
      }
      Swift::UInt32 v8 = (unsigned int *)(v27 + 24 * v4);
      uint64_t v9 = *v8;
      char v10 = *((unsigned char *)v8 + 4);
      uint64_t v11 = *((void *)v8 + 1);
      char v12 = *((unsigned char *)v8 + 16);
      char v13 = *((unsigned char *)v8 + 17);
      ++v4;
      uint64_t v14 = a2[1];
      char v15 = (_DWORD *)(v14 + 32);
      uint64_t v16 = *(void *)(v14 + 16);
      if (*a2)
      {
        uint64_t result = sub_1000CE1D8(v9, v15, v16, *a2 + 16, *a2 + 32);
        if (v7) {
          goto LABEL_22;
        }
        goto LABEL_7;
      }
      if (!v16) {
        goto LABEL_22;
      }
      if (*v15 != v9)
      {
        if (v16 == 1) {
          goto LABEL_22;
        }
        if (*(_DWORD *)(v14 + 36) != v9)
        {
          if (v16 == 2) {
            goto LABEL_22;
          }
          if (*(_DWORD *)(v14 + 40) != v9)
          {
            if (v16 == 3) {
              goto LABEL_22;
            }
            if (*(_DWORD *)(v14 + 44) != v9) {
              break;
            }
          }
        }
      }
LABEL_7:
      if (v4 == v2) {
        return (uint64_t)v25;
      }
    }
    uint64_t v17 = v16 - 4;
    uint64_t v18 = (int *)(v14 + 48);
    while (v17)
    {
      int v19 = *v18++;
      --v17;
      if (v19 == v9) {
        goto LABEL_7;
      }
    }
LABEL_22:
    int64_t v5 = v25;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    long long v28 = v25;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10001A514(0, v25[2] + 1, 1);
      int64_t v5 = v25;
    }
    unint64_t v21 = v5[2];
    unint64_t v20 = v5[3];
    unint64_t v22 = v21 + 1;
    if (v21 >= v20 >> 1)
    {
      unint64_t v26 = v21 + 1;
      unint64_t v24 = v5[2];
      uint64_t result = sub_10001A514(v20 > 1, v21 + 1, 1);
      unint64_t v22 = v26;
      unint64_t v21 = v24;
      int64_t v5 = v28;
    }
    v5[2] = v22;
    uint64_t v23 = &v5[3 * v21];
    *((_DWORD *)v23 + 8) = v9;
    *((unsigned char *)v23 + 36) = v10;
    v23[5] = v11;
    *((unsigned char *)v23 + 48) = v12;
    *((unsigned char *)v23 + 49) = v13;
  }
  while (v4 != v2);
  return (uint64_t)v5;
}

void *sub_10000DE50(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v4 = (unsigned char *)(swift_bridgeObjectRetain() + 37);
  int64_t v5 = _swiftEmptyArrayStorage;
  do
  {
    if (*v4 == 1)
    {
      unsigned int v7 = *(_DWORD *)(v4 - 5);
      char v8 = *(v4 - 1);
      uint64_t v9 = ConnectionUsage.usage(_:)(v7, a2, a3);
      __int16 v11 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v5 = sub_10001597C(0, v5[2] + 1, 1, v5);
      }
      unint64_t v13 = v5[2];
      unint64_t v12 = v5[3];
      if (v13 >= v12 >> 1) {
        int64_t v5 = sub_10001597C((void *)(v12 > 1), v13 + 1, 1, v5);
      }
      v5[2] = v13 + 1;
      unint64_t v6 = &v5[3 * v13];
      *((_DWORD *)v6 + 8) = v7;
      *((unsigned char *)v6 + 36) = v8;
      v6[5] = v9;
      *((unsigned char *)v6 + 48) = v11;
      *((unsigned char *)v6 + 49) = HIBYTE(v11) & 1;
    }
    v4 += 8;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10000DF90(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = a2;
  unint64_t v6 = a1;
  if ((a4 & 1) == 0)
  {
    uint64_t v7 = a1[2];
    if (v7 <= a2 && v7 <= a3) {
      return sub_10000D3BC((uint64_t)_swiftEmptyArrayStorage);
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v85 = sub_10000D3BC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v86 = v9;
  uint64_t v84 = v9;
  if ((a4 & 1) == 0 || (unint64_t v10 = v6[2]) == 0)
  {
LABEL_39:
    uint64_t v22 = v6[2];
    uint64_t v82 = (uint64_t)v6;
    uint64_t v83 = v5;
    if (v22)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = (char *)v6 + 49;
      unint64_t v24 = _swiftEmptyArrayStorage;
      do
      {
        if (*(v23 - 13) == 1)
        {
          int v28 = *(_DWORD *)(v23 - 17);
          uint64_t v29 = *(void *)(v23 - 9);
          char v30 = *(v23 - 1);
          char v31 = *v23;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_10001A514(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v26 = _swiftEmptyArrayStorage[2];
          unint64_t v25 = _swiftEmptyArrayStorage[3];
          if (v26 >= v25 >> 1) {
            sub_10001A514(v25 > 1, v26 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v26 + 1;
          uint64_t v27 = &_swiftEmptyArrayStorage[3 * v26];
          *((_DWORD *)v27 + 8) = v28;
          *((unsigned char *)v27 + 36) = 1;
          v27[5] = v29;
          *((unsigned char *)v27 + 48) = v30;
          *((unsigned char *)v27 + 49) = v31;
        }
        v23 += 24;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      uint64_t v5 = v83;
    }
    else
    {
      unint64_t v24 = _swiftEmptyArrayStorage;
    }
    int64_t v32 = _swiftEmptyArrayStorage[2];
    if (v32 > v5 && v32 != 0)
    {
      uint64_t v5 = v83;
      while (1)
      {
        uint64_t v34 = 0;
        unint64_t v35 = 0;
        while ((v24[v34 + 6] & 0x100) == 0)
        {
          unint64_t v36 = v35 + 1;
          if (__OFADD__(v35, 1))
          {
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
            goto LABEL_191;
          }
          ++v35;
          v34 += 3;
          if (v36 == v32)
          {
            uint64_t v5 = v83;
            goto LABEL_85;
          }
        }
        if (v35 >= v32) {
          goto LABEL_198;
        }
        int v37 = v24[v34 + 4];
        uint64_t v38 = (_DWORD *)(v84 + 32);
        uint64_t v39 = *(void *)(v84 + 16);
        if (v85) {
          break;
        }
        if (!v39) {
          goto LABEL_72;
        }
        if (*v38 != v37)
        {
          if (v39 == 1) {
            goto LABEL_71;
          }
          if (*(_DWORD *)(v84 + 36) != v37)
          {
            if (v39 == 2) {
              goto LABEL_71;
            }
            if (*(_DWORD *)(v84 + 40) != v37)
            {
              if (v39 != 3)
              {
                if (*(_DWORD *)(v84 + 44) == v37) {
                  goto LABEL_73;
                }
                uint64_t v42 = 0;
                while (v39 - 4 != v42)
                {
                  int v43 = *(_DWORD *)(v84 + 4 * v42++ + 48);
                  if (v43 == v37) {
                    goto LABEL_73;
                  }
                }
              }
LABEL_71:
              uint64_t v39 = 0;
LABEL_72:
              sub_1000A3CCC(v37, v39);
              uint64_t v84 = v86;
            }
          }
        }
LABEL_73:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v24 = sub_1000933B4(v24);
        }
        uint64_t v41 = v24[2];
        if (v41 <= (uint64_t)v35) {
          goto LABEL_199;
        }
        if ((uint64_t)(~v35 + v41) < 0) {
          goto LABEL_202;
        }
        int64_t v32 = v41 - 1;
        memmove(&v24[v34 + 4], &v24[v34 + 7], 24 * (~v35 + v41));
        v24[2] = v32;
        if (v32 <= v83 || !v32) {
          goto LABEL_85;
        }
      }
      sub_1000CE1D8(LODWORD(v24[v34 + 4]), v38, v39, v85 + 16, v85 + 32);
      if ((v40 & 1) == 0) {
        goto LABEL_73;
      }
      goto LABEL_72;
    }
LABEL_85:
    if (v32 > v5 && v32)
    {
      while (1)
      {
        unint64_t v44 = 0;
        uint64_t v45 = 4;
        while (1)
        {
          uint64_t v46 = &v24[v45];
          if ((v24[v45 + 2] & 0x100) != 0 || (v46[2] & 1) == 0 || !v46[1]) {
            break;
          }
          unint64_t v47 = v44 + 1;
          if (__OFADD__(v44, 1)) {
            goto LABEL_189;
          }
          ++v44;
          v45 += 3;
          if (v47 == v32) {
            goto LABEL_119;
          }
        }
        if (v44 >= v32) {
          goto LABEL_192;
        }
        int v48 = v24[v45];
        uint64_t v49 = (_DWORD *)(v84 + 32);
        uint64_t v50 = *(void *)(v84 + 16);
        if (v85) {
          break;
        }
        if (!v50) {
          goto LABEL_106;
        }
        if (*v49 != v48)
        {
          if (v50 == 1) {
            goto LABEL_105;
          }
          if (*(_DWORD *)(v84 + 36) != v48)
          {
            if (v50 == 2) {
              goto LABEL_105;
            }
            if (*(_DWORD *)(v84 + 40) != v48)
            {
              if (v50 != 3)
              {
                if (*(_DWORD *)(v84 + 44) == v48) {
                  goto LABEL_107;
                }
                uint64_t v53 = 0;
                while (v50 - 4 != v53)
                {
                  int v54 = *(_DWORD *)(v84 + 4 * v53++ + 48);
                  if (v54 == v48) {
                    goto LABEL_107;
                  }
                }
              }
LABEL_105:
              uint64_t v50 = 0;
LABEL_106:
              sub_1000A3CCC(v48, v50);
              uint64_t v84 = v86;
            }
          }
        }
LABEL_107:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v24 = sub_1000933B4(v24);
        }
        uint64_t v52 = v24[2];
        if (v52 <= (uint64_t)v44) {
          goto LABEL_193;
        }
        if ((uint64_t)(~v44 + v52) < 0) {
          goto LABEL_202;
        }
        int64_t v32 = v52 - 1;
        memmove(&v24[v45], &v24[v45 + 3], 24 * (~v44 + v52));
        v24[2] = v32;
        if (v32 <= v83 || !v32) {
          goto LABEL_119;
        }
      }
      sub_1000CE1D8(LODWORD(v24[v45]), v49, v50, v85 + 16, v85 + 32);
      if ((v51 & 1) == 0) {
        goto LABEL_107;
      }
      goto LABEL_106;
    }
LABEL_119:
    swift_bridgeObjectRelease();
    uint64_t v55 = (void *)sub_10000DC5C(v82, &v85);
    swift_bridgeObjectRelease();
    int64_t v56 = v55[2];
    if (v56 > a3 && v56)
    {
      while (1)
      {
        uint64_t v57 = 0;
        unint64_t v58 = 0;
        while ((v55[v57 + 6] & 0x100) == 0)
        {
          unint64_t v59 = v58 + 1;
          if (__OFADD__(v58, 1)) {
            goto LABEL_188;
          }
          ++v58;
          v57 += 3;
          if (v59 == v56) {
            goto LABEL_151;
          }
        }
        if (v58 >= v56) {
          goto LABEL_200;
        }
        int v60 = v55[v57 + 4];
        uint64_t v61 = (_DWORD *)(v86 + 32);
        uint64_t v62 = *(void *)(v86 + 16);
        if (v85) {
          break;
        }
        if (!v62) {
          goto LABEL_134;
        }
        if (*v61 != v60)
        {
          if (v62 != 1)
          {
            if (*(_DWORD *)(v86 + 36) == v60) {
              goto LABEL_135;
            }
            if (v62 != 2)
            {
              if (*(_DWORD *)(v86 + 40) == v60) {
                goto LABEL_135;
              }
              if (v62 != 3)
              {
                if (*(_DWORD *)(v86 + 44) == v60) {
                  goto LABEL_135;
                }
                uint64_t v65 = v62 - 4;
                uint64_t v66 = (int *)(v86 + 48);
                while (v65)
                {
                  int v67 = *v66++;
                  --v65;
                  if (v67 == v60) {
                    goto LABEL_135;
                  }
                }
              }
            }
          }
          uint64_t v62 = 0;
          goto LABEL_134;
        }
LABEL_135:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v55 = sub_1000933B4(v55);
        }
        uint64_t v64 = v55[2];
        if (v64 <= (uint64_t)v58) {
          goto LABEL_201;
        }
        if ((uint64_t)(~v58 + v64) < 0) {
          goto LABEL_202;
        }
        int64_t v56 = v64 - 1;
        memmove(&v55[v57 + 4], &v55[v57 + 7], 24 * (~v58 + v64));
        v55[2] = v56;
        if (v56 <= a3 || !v56) {
          goto LABEL_151;
        }
      }
      sub_1000CE1D8(LODWORD(v55[v57 + 4]), v61, v62, v85 + 16, v85 + 32);
      if ((v63 & 1) == 0) {
        goto LABEL_135;
      }
LABEL_134:
      sub_1000A3CCC(v60, v62);
      goto LABEL_135;
    }
LABEL_151:
    if (v56 <= a3 || !v56)
    {
LABEL_185:
      swift_bridgeObjectRelease();
      return v85;
    }
    while (1)
    {
      unint64_t v68 = 0;
      uint64_t v69 = 4;
      while (1)
      {
        uint64_t v70 = &v55[v69];
        if ((v55[v69 + 2] & 0x100) != 0 || (v70[2] & 1) == 0 || !v70[1]) {
          break;
        }
        unint64_t v71 = v68 + 1;
        if (__OFADD__(v68, 1)) {
          goto LABEL_190;
        }
        ++v68;
        v69 += 3;
        if (v71 == v56) {
          goto LABEL_185;
        }
      }
      if (v68 >= v56) {
        goto LABEL_194;
      }
      int v72 = v55[v69];
      uint64_t v73 = (_DWORD *)(v86 + 32);
      uint64_t v74 = *(void *)(v86 + 16);
      if (v85) {
        break;
      }
      if (!v74) {
        goto LABEL_170;
      }
      if (*v73 != v72)
      {
        if (v74 == 1) {
          goto LABEL_169;
        }
        if (*(_DWORD *)(v86 + 36) != v72)
        {
          if (v74 != 2)
          {
            if (*(_DWORD *)(v86 + 40) == v72) {
              goto LABEL_171;
            }
            if (v74 != 3)
            {
              if (*(_DWORD *)(v86 + 44) == v72) {
                goto LABEL_171;
              }
              uint64_t v77 = v74 - 4;
              unint64_t v78 = (int *)(v86 + 48);
              while (v77)
              {
                int v79 = *v78++;
                --v77;
                if (v79 == v72) {
                  goto LABEL_171;
                }
              }
            }
          }
LABEL_169:
          uint64_t v74 = 0;
LABEL_170:
          sub_1000A3CCC(v72, v74);
        }
      }
LABEL_171:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v55 = sub_1000933B4(v55);
      }
      uint64_t v76 = v55[2];
      if (v76 <= (uint64_t)v68) {
        goto LABEL_195;
      }
      if ((uint64_t)(~v68 + v76) < 0) {
        goto LABEL_202;
      }
      int64_t v56 = v76 - 1;
      memmove(&v55[v69], &v55[v69 + 3], 24 * (~v68 + v76));
      v55[2] = v56;
      if (v56 <= a3 || !v56) {
        goto LABEL_185;
      }
    }
    sub_1000CE1D8(LODWORD(v55[v69]), v73, v74, v85 + 16, v85 + 32);
    if ((v75 & 1) == 0) {
      goto LABEL_171;
    }
    goto LABEL_170;
  }
  while (1)
  {
    unint64_t v11 = 0;
    uint64_t v12 = 4;
    while (1)
    {
      unint64_t v13 = &v6[v12];
      if ((v6[v12 + 2] & 0x100) != 0 || (v13[2] & 1) == 0 || !v13[1]) {
        break;
      }
      unint64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
        goto LABEL_202;
      }
      ++v11;
      v12 += 3;
      if (v14 == v10) {
        goto LABEL_39;
      }
    }
    if (v11 >= v10) {
      goto LABEL_196;
    }
    int v15 = v6[v12];
    uint64_t v16 = (_DWORD *)(v84 + 32);
    uint64_t v17 = *(void *)(v84 + 16);
    if (v85)
    {
      sub_1000CE1D8(LODWORD(v6[v12]), v16, v17, v85 + 16, v85 + 32);
      if (v18) {
        goto LABEL_27;
      }
    }
    else
    {
      if (!v17) {
        goto LABEL_27;
      }
      if (*v16 == v15) {
        goto LABEL_28;
      }
      if (v17 == 1) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(v84 + 36) == v15) {
        goto LABEL_28;
      }
      if (v17 == 2) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(v84 + 40) == v15) {
        goto LABEL_28;
      }
      if (v17 == 3) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(v84 + 44) != v15)
      {
        uint64_t v20 = 0;
        while (v17 - 4 != v20)
        {
          int v21 = *(_DWORD *)(v84 + 4 * v20++ + 48);
          if (v21 == v15) {
            goto LABEL_28;
          }
        }
LABEL_26:
        uint64_t v17 = 0;
LABEL_27:
        sub_1000A3CCC(v15, v17);
        uint64_t v84 = v86;
      }
    }
LABEL_28:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v6 = sub_1000933B4(v6);
    }
    uint64_t v19 = v6[2];
    if (v19 <= (uint64_t)v11) {
      goto LABEL_197;
    }
    if ((uint64_t)(~v11 + v19) < 0) {
      break;
    }
    unint64_t v10 = v19 - 1;
    memmove(&v6[v12], &v6[v12 + 3], 24 * (~v11 + v19));
    _OWORD v6[2] = v10;
    if (!v10) {
      goto LABEL_39;
    }
  }
LABEL_202:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void sub_10000E918(void *a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7 = sub_10000DF90(a1, a3, a4, a5);
  if ((a2 & 1) != 0 && (unint64_t v9 = *(void *)(v8 + 16)) != 0 && a1[2] <= v9)
  {
    sub_10008AC18(v7, v8, 1uLL, v9);
  }
  else
  {
    sub_10008AD10(v7, v8);
  }
}

uint64_t sub_10000E994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10000EA00()
{
  unint64_t result = qword_100709F38;
  if (!qword_100709F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709F38);
  }
  return result;
}

unint64_t sub_10000EA58()
{
  unint64_t result = qword_100709F40;
  if (!qword_100709F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709F40);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for ConnectionLimits(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionLimits(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionLimits(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionLimits()
{
  return &type metadata for ConnectionLimits;
}

ValueMetadata *type metadata accessor for ConnectionIDsGroupedByState()
{
  return &type metadata for ConnectionIDsGroupedByState;
}

uint64_t initializeBufferWithCopyOfBuffer for ConnectionIDsGroupedByState.Connection(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionIDsGroupedByState.Connection(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 6)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionIDsGroupedByState.Connection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 6) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 6) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionIDsGroupedByState.Connection()
{
  return &type metadata for ConnectionIDsGroupedByState.Connection;
}

unsigned char *initializeBufferWithCopyOfBuffer for ConnectionIDsGroupedByState.Connection.State(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t _s10ConstraintOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConnectionIDsGroupedByState.Connection.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000ED90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10000EDB8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000EDC0(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionIDsGroupedByState.Connection.State()
{
  return &type metadata for ConnectionIDsGroupedByState.Connection.State;
}

unint64_t destroy for ConnectionLimitsAndUsage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 32);
  if (result >= 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ConnectionLimitsAndUsage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v3 >= 2) {
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 32) = v3;
  return a1;
}

uint64_t assignWithCopy for ConnectionLimitsAndUsage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v4 = (unint64_t *)(a1 + 32);
  unint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >= 2uLL)
  {
    if (v5 >= 2)
    {
      unint64_t *v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000EF3C(a1 + 32);
      unint64_t *v4 = *(void *)(a2 + 32);
    }
  }
  else
  {
    unint64_t *v4 = v5;
    if (v5 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_10000EF3C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100709F48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 initializeWithTake for ConnectionLimitsAndUsage(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ConnectionLimitsAndUsage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  unsigned int v4 = (unint64_t *)(a1 + 32);
  unint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >= 2uLL)
  {
    if (v5 >= 2)
    {
      unint64_t *v4 = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10000EF3C(a1 + 32);
  }
  unint64_t *v4 = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionLimitsAndUsage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionLimitsAndUsage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionLimitsAndUsage()
{
  return &type metadata for ConnectionLimitsAndUsage;
}

uint64_t sub_10000F0D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for ConnectionLimitsAndUsage.ConnectionWithUsage(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionLimitsAndUsage.ConnectionWithUsage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionLimitsAndUsage.ConnectionWithUsage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionLimitsAndUsage.ConnectionWithUsage()
{
  return &type metadata for ConnectionLimitsAndUsage.ConnectionWithUsage;
}

uint64_t sub_10000F1E4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_10000F8AC(v5, v7) & 1;
}

uint64_t sub_10000F230(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v2;
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 32);
  return sub_10000F8AC(v7, v9) & (v3 == v5);
}

BOOL sub_10000F28C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  char v6 = sub_100077E34(*a1, *a2);
  BOOL v8 = v2 == v4 && v3 == v5;
  return (v6 & 1) != 0 && v8;
}

uint64_t sub_10000F2E0(uint64_t result)
{
  uint64_t v2 = (void *)*v1;
  unint64_t v3 = *(void *)(*v1 + 16);
  if (v3)
  {
    uint64_t v4 = result;
    uint64_t v5 = 0;
    uint64_t v6 = 9;
    while (1)
    {
      uint64_t v7 = v2[v6];
      if (v7 <= result)
      {
        uint64_t v8 = result - v7;
        if (__OFSUB__(result, v7)) {
          goto LABEL_40;
        }
      }
      else
      {
        if (__OFSUB__(v7, result))
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        uint64_t v8 = result - v7;
        if (__OFSUB__(0, v7 - result)) {
          goto LABEL_39;
        }
      }
      if ((double)v8 / 1000000000.0 > 2100.0) {
        break;
      }
      ++v5;
      v6 += 6;
      if (v3 == v5)
      {
        uint64_t v5 = *(void *)(*v1 + 16);
        goto LABEL_35;
      }
    }
    if (__OFADD__(v5, 1)) {
      goto LABEL_50;
    }
    if (v5 + 1 != v3)
    {
      unint64_t v9 = v5 + 1;
      uint64_t v10 = v6 * 8 + 48;
      unint64_t v26 = v1;
      while (v9 < v3)
      {
        uint64_t v11 = *(void *)((char *)v2 + v10);
        if (v11 <= v4)
        {
          uint64_t v12 = v4 - v11;
          if (__OFSUB__(v4, v11)) {
            goto LABEL_45;
          }
        }
        else
        {
          if (__OFSUB__(v11, v4)) {
            goto LABEL_43;
          }
          uint64_t v12 = v4 - v11;
          if (__OFSUB__(0, v11 - v4)) {
            goto LABEL_44;
          }
        }
        if ((double)v12 / 1000000000.0 <= 2100.0)
        {
          if (v9 != v5)
          {
            if (v5 >= v3) {
              goto LABEL_47;
            }
            uint64_t v13 = (uint64_t)&v2[6 * v5 + 4];
            int v29 = *(_DWORD *)(v13 + 16);
            uint64_t v14 = *(void *)(v13 + 24);
            uint64_t v27 = *(void *)(v13 + 40);
            uint64_t v28 = *(void *)(v13 + 32);
            uint64_t v15 = *(void *)((char *)v2 + v10 - 40);
            unint64_t v16 = *(void *)((char *)v2 + v10 - 32);
            int v33 = *(_DWORD *)((char *)v2 + v10 - 24);
            uint64_t v17 = *(void *)((char *)v2 + v10 - 16);
            uint64_t v31 = *(void *)v13;
            uint64_t v32 = *(void *)((char *)v2 + v10 - 8);
            unint64_t v30 = *(void *)(v13 + 8);
            sub_100008D24(*(void *)v13, v30);
            swift_bridgeObjectRetain();
            sub_100008D24(v15, v16);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v2 = sub_1000933C8(v2);
            }
            char v18 = &v2[6 * v5];
            uint64_t v19 = v18[4];
            unint64_t v20 = v18[5];
            v18[4] = v15;
            v18[5] = v16;
            *((_DWORD *)v18 + 12) = v33;
            v18[7] = v17;
            v18[8] = v32;
            v18[9] = v11;
            sub_1000094D4(v19, v20);
            __n128 result = swift_bridgeObjectRelease();
            if (v9 >= v2[2]) {
              goto LABEL_48;
            }
            int v21 = (void *)((char *)v2 + v10);
            uint64_t v22 = *(void *)((char *)v2 + v10 - 40);
            unint64_t v23 = *(void *)((char *)v2 + v10 - 32);
            *(v21 - 5) = v31;
            *(v21 - 4) = v30;
            *((_DWORD *)v21 - 6) = v29;
            *(v21 - 2) = v14;
            *(v21 - 1) = v28;
            *int v21 = v27;
            sub_1000094D4(v22, v23);
            __n128 result = swift_bridgeObjectRelease();
            *unint64_t v26 = v2;
          }
          if (__OFADD__(v5++, 1)) {
            goto LABEL_46;
          }
        }
        unint64_t v25 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_42;
        }
        unint64_t v3 = v2[2];
        v10 += 48;
        ++v9;
        if (v25 == v3)
        {
          unint64_t v3 = v25;
          goto LABEL_34;
        }
      }
      goto LABEL_41;
    }
LABEL_34:
    if ((uint64_t)v3 >= v5) {
      goto LABEL_35;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
  }
  else
  {
    uint64_t v5 = 0;
LABEL_35:
    return sub_1000D4040(v5, v3);
  }
  return result;
}

uint64_t sub_10000F5C4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_100008D24(a1, a2);
      char v5 = sub_10000F7F4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1000094D4(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_10000F7F4(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1000094D4(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_1000260B8((uint64_t)__s1, a3, a4, (BOOL *)&v14);
      sub_1000094D4(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_10000F7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1005E0550();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1005E0570();
  sub_1000260B8(v11, a4, a5, &v13);
  if (!v5) {
    return v13;
  }
  return v12;
}

uint64_t sub_10000F8AC(long long *a1, long long *a2)
{
  long long v18 = *a1;
  unint64_t v3 = *((void *)&v18 + 1);
  uint64_t v2 = v18;
  uint64_t v6 = 0;
  switch(*((void *)&v18 + 1) >> 62)
  {
    case 1:
      if (__OFSUB__(DWORD1(v18), v18))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        JUMPOUT(0x10000FA88);
      }
      uint64_t v6 = DWORD1(v18) - (int)v18;
LABEL_6:
      sub_10000FAA8((uint64_t)&v18);
      sub_10000FAA8((uint64_t)&v18);
LABEL_7:
      long long v17 = *a2;
      unint64_t v10 = *((void *)&v17 + 1);
      uint64_t v9 = v17;
      switch(*((void *)&v17 + 1) >> 62)
      {
        case 1:
          LODWORD(v11) = DWORD1(v17) - v17;
          if (__OFSUB__(DWORD1(v17), v17)) {
            goto LABEL_27;
          }
          uint64_t v11 = (int)v11;
LABEL_12:
          if (v6 == v11)
          {
            if (v6 < 1)
            {
LABEL_18:
              sub_10000FAD8((uint64_t)&v18);
              sub_10000FAD8((uint64_t)&v18);
            }
            else
            {
              sub_100008D24(v17, *((unint64_t *)&v17 + 1));
              sub_10000FAA8((uint64_t)&v17);
              char v15 = sub_10000F5C4(v2, v3, v9, v10);
              sub_10000FAD8((uint64_t)&v18);
              sub_10000FAD8((uint64_t)&v17);
              sub_10000FAD8((uint64_t)&v18);
              if ((v15 & 1) == 0) {
                return 0;
              }
            }
            if (*((_DWORD *)a1 + 4) == *((_DWORD *)a2 + 4)
              && *((void *)a1 + 4) == *((void *)a2 + 4)
              && sub_1000255D4(*((void *)a1 + 3), *((void *)a2 + 3)))
            {
              return 1;
            }
          }
          else
          {
LABEL_17:
            sub_10000FAD8((uint64_t)&v18);
            sub_10000FAD8((uint64_t)&v18);
          }
          return 0;
        case 2:
          uint64_t v13 = *(void *)(v17 + 16);
          uint64_t v12 = *(void *)(v17 + 24);
          BOOL v14 = __OFSUB__(v12, v13);
          uint64_t v11 = v12 - v13;
          if (!v14) {
            goto LABEL_12;
          }
          goto LABEL_28;
        case 3:
          if (v6) {
            goto LABEL_17;
          }
          goto LABEL_18;
        default:
          uint64_t v11 = BYTE14(v17);
          goto LABEL_12;
      }
    case 2:
      uint64_t v8 = *(void *)(v18 + 16);
      uint64_t v7 = *(void *)(v18 + 24);
      uint64_t v6 = v7 - v8;
      if (!__OFSUB__(v7, v8)) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3:
      goto LABEL_7;
    default:
      uint64_t v6 = BYTE14(v18);
      goto LABEL_7;
  }
}

uint64_t sub_10000FAA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000FAD8(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for DownloadsToSkip.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadsToSkip.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1000094D4(v6, v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for DownloadsToSkip.Element(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DownloadsToSkip.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1000094D4(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadsToSkip.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadsToSkip.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadsToSkip.Element()
{
  return &type metadata for DownloadsToSkip.Element;
}

uint64_t initializeBufferWithCopyOfBuffer for DownloadsToSkip(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MailboxName()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for DownloadsToSkip(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for DownloadsToSkip(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DownloadsToSkip(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadsToSkip(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadsToSkip(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadsToSkip()
{
  return &type metadata for DownloadsToSkip;
}

uint64_t _s13IMAP2Behavior15DownloadsToSkipV7ElementV7MessageVwxx_0(uint64_t a1)
{
  sub_1000094D4(*(void *)a1, *(void *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DownloadsToSkip.Element.Message(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadsToSkip.Element.Message(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1000094D4(v6, v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for DownloadsToSkip.Element.Message(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1000094D4(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DownloadsToSkip.Element.Message()
{
  return &type metadata for DownloadsToSkip.Element.Message;
}

uint64_t sub_100010004(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1005E33F0();
  Swift::UInt v6 = a2 | ((unint64_t)a2 << 32);
  sub_1005E3410(v6);
  Swift::Int v7 = sub_1005E3470();
  uint64_t v8 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(a3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = ~v8;
  while (1)
  {
    uint64_t v11 = *(void *)(a3 + 48) + 16 * v9;
    if ((*(unsigned int *)(v11 + 8) | ((unint64_t)*(unsigned int *)(v11 + 8) << 32)) == v6)
    {
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13 == *(void *)(a1 + 16))
      {
        if (!v13 || v12 == a1) {
          return 1;
        }
        if (*(unsigned __int8 *)(v12 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v13 == 1) {
            return 1;
          }
          if (*(unsigned __int8 *)(v12 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v13 == 2) {
              return 1;
            }
            if (*(unsigned __int8 *)(v12 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v13 == 3) {
                return 1;
              }
              if (*(unsigned __int8 *)(v12 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(a3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  BOOL v14 = (unsigned __int8 *)(v12 + 36);
  uint64_t v15 = v13 - 4;
  unint64_t v16 = (unsigned __int8 *)(a1 + 36);
  while (v15)
  {
    int v18 = *v14++;
    int v17 = v18;
    int v19 = *v16++;
    --v15;
    if (v17 != v19) {
      goto LABEL_4;
    }
  }
  return 1;
}

BOOL sub_100010180(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  sub_1005E33F0();
  sub_1005E3410(v3);
  Swift::Int v4 = sub_1005E3470();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_100010270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1005E33F0();
    sub_1005E1CD0();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_1005E3470();
    uint64_t v5 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v6 = v4 & ~v5;
    uint64_t v7 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v8 = sub_1005E1CD0();
      uint64_t v10 = v9;
      if (v8 == sub_1005E1CD0() && v10 == v11)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v13 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13)
      {
LABEL_18:
        char v21 = 1;
        return v21 & 1;
      }
      uint64_t v14 = ~v5;
      unint64_t v15 = (v6 + 1) & v14;
      if ((*(void *)(v7 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = sub_1005E1CD0();
          uint64_t v18 = v17;
          if (v16 == sub_1005E1CD0() && v18 == v19) {
            break;
          }
          char v21 = sub_1005E3290();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
          {
            unint64_t v15 = (v15 + 1) & v14;
            if ((*(void *)(v7 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15)) {
              continue;
            }
          }
          return v21 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v21 = 0;
  return v21 & 1;
}

uint64_t sub_100010454(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  uint64_t v3 = a3;
  sub_1005E33F0();
  sub_100008D24(a1, a2);
  sub_1005E08B0();
  sub_1000094D4(a1, a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = v3 + 56;
  if (((*(void *)(v3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v31 = ~v7;
  BOOL v10 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v30 = v10;
  uint64_t v29 = v3;
  uint64_t v28 = v3 + 56;
  while (2)
  {
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v13 = *v11;
    unint64_t v12 = v11[1];
    uint64_t v14 = 0;
    switch(v12 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v13), v13))
        {
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
        }
        uint64_t v14 = HIDWORD(v13) - (int)v13;
LABEL_15:
        sub_100008D24(v13, v12);
        sub_100008D24(v13, v12);
        break;
      case 2uLL:
        uint64_t v16 = *(void *)(v13 + 16);
        uint64_t v15 = *(void *)(v13 + 24);
        uint64_t v14 = v15 - v16;
        if (!__OFSUB__(v15, v16)) {
          goto LABEL_15;
        }
        goto LABEL_43;
      case 3uLL:
        break;
      default:
        uint64_t v14 = BYTE6(v12);
        break;
    }
    uint64_t v17 = BYTE6(a2);
    switch(a2 >> 62)
    {
      case 1uLL:
        uint64_t v17 = HIDWORD(a1) - (int)a1;
        if (v30) {
          goto LABEL_44;
        }
        goto LABEL_20;
      case 2uLL:
        uint64_t v19 = *(void *)(a1 + 16);
        uint64_t v18 = *(void *)(a1 + 24);
        BOOL v20 = __OFSUB__(v18, v19);
        uint64_t v17 = v18 - v19;
        if (!v20) {
          goto LABEL_20;
        }
        goto LABEL_45;
      case 3uLL:
        if (v14) {
          goto LABEL_8;
        }
        goto LABEL_40;
      default:
LABEL_20:
        if (v14 != v17)
        {
LABEL_8:
          sub_1000094D4(v13, v12);
          sub_1000094D4(v13, v12);
          goto LABEL_9;
        }
        if (v14 >= 1)
        {
          switch(v12 >> 62)
          {
            case 1uLL:
              if (v13 >> 32 < (int)v13) {
                goto LABEL_46;
              }
              sub_100008D24(a1, a2);
              sub_100008D24(v13, v12);
              uint64_t v21 = sub_1005E0550();
              if (!v21) {
                goto LABEL_28;
              }
              uint64_t v22 = sub_1005E0580();
              if (__OFSUB__((int)v13, v22)) {
                goto LABEL_48;
              }
              v21 += (int)v13 - v22;
LABEL_28:
              sub_1005E0570();
              sub_1000260B8(v21, a1, a2, __s1);
              sub_1000094D4(v13, v12);
              break;
            case 2uLL:
              uint64_t v24 = *(void *)(v13 + 16);
              uint64_t v23 = *(void *)(v13 + 24);
              sub_100008D24(a1, a2);
              swift_retain();
              swift_retain();
              uint64_t v25 = sub_1005E0550();
              if (!v25) {
                goto LABEL_32;
              }
              uint64_t v26 = sub_1005E0580();
              if (__OFSUB__(v24, v26)) {
                goto LABEL_49;
              }
              v25 += v24 - v26;
LABEL_32:
              if (__OFSUB__(v23, v24)) {
                goto LABEL_47;
              }
              sub_1005E0570();
              sub_1000260B8(v25, a1, a2, __s1);
              swift_release();
              swift_release();
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              sub_100008D24(a1, a2);
              goto LABEL_37;
            default:
              *(void *)__s1 = v13;
              *(_WORD *)&__s1[8] = v12;
              __s1[10] = BYTE2(v12);
              __s1[11] = BYTE3(v12);
              __s1[12] = BYTE4(v12);
              __s1[13] = BYTE5(v12);
              sub_100008D24(a1, a2);
LABEL_37:
              sub_1000260B8((uint64_t)__s1, a1, a2, &v32);
              sub_1000094D4(a1, a2);
              sub_1000094D4(v13, v12);
              sub_1000094D4(v13, v12);
              if (v32) {
                return 1;
              }
              goto LABEL_9;
          }
          sub_1000094D4(a1, a2);
          sub_1000094D4(v13, v12);
          sub_1000094D4(v13, v12);
          if (__s1[0]) {
            return 1;
          }
          uint64_t v9 = v28;
          uint64_t v3 = v29;
LABEL_9:
          unint64_t v8 = (v8 + 1) & v31;
          if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            return 0;
          }
          continue;
        }
LABEL_40:
        sub_1000094D4(v13, v12);
        sub_1000094D4(v13, v12);
        return 1;
    }
  }
}

uint64_t sub_10001093C(uint64_t a1, Swift::UInt a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1005E33F0();
  sub_1005E3410(a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    BOOL v10 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    if (v10[1] == a2)
    {
      uint64_t v11 = *v10;
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12 == *(void *)(a1 + 16))
      {
        if (!v12 || v11 == a1) {
          return 1;
        }
        if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v12 == 1) {
            return 1;
          }
          if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v12 == 2) {
              return 1;
            }
            if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v12 == 3) {
                return 1;
              }
              if (*(unsigned __int8 *)(v11 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v13 = (unsigned __int8 *)(v11 + 36);
  uint64_t v14 = v12 - 4;
  uint64_t v15 = (unsigned __int8 *)(a1 + 36);
  while (v14)
  {
    int v17 = *v13++;
    int v16 = v17;
    int v18 = *v15++;
    --v14;
    if (v16 != v18) {
      goto LABEL_4;
    }
  }
  return 1;
}

BOOL sub_100010AAC(Swift::UInt32 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1005E33F0();
  sub_1005E3440(a1);
  Swift::Int v4 = sub_1005E3470();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_100010B9C(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  if (*(void *)(a5 + 16))
  {
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    if (a4)
    {
      sub_1005E3420(0);
    }
    else
    {
      sub_1005E3420(1u);
      sub_1005E3450(a3 >> 14);
    }
    Swift::Int v10 = sub_1005E3470();
    uint64_t v11 = -1 << *(unsigned char *)(a5 + 32);
    unint64_t v12 = v10 & ~v11;
    uint64_t v13 = a5 + 56;
    if ((*(void *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      uint64_t v14 = ~v11;
      uint64_t v15 = *(void *)(a5 + 48);
      do
      {
        uint64_t v16 = v15 + 32 * v12;
        uint64_t v17 = *(void *)(v16 + 16);
        char v18 = *(unsigned char *)(v16 + 24);
        BOOL v19 = *(void *)v16 == a1 && *(void *)(v16 + 8) == a2;
        if (v19 || (sub_1005E3290() & 1) != 0)
        {
          if (v18)
          {
            if (a4) {
              return 1;
            }
          }
          else if ((a4 & 1) == 0 && (v17 ^ a3) < 0x4000)
          {
            return 1;
          }
        }
        unint64_t v12 = (v12 + 1) & v14;
      }
      while (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
  }
  return 0;
}

void *Flags.Label.flags.getter(unsigned __int8 a1)
{
  if (!a1) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v22 = v1;
  uint64_t v23 = v2;
  sub_10000566C(&qword_100709F50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  uint64_t v5 = Flag.flagged.unsafeMutableAddressor();
  uint64_t v7 = *(void *)v5;
  uint64_t v6 = *((void *)v5 + 1);
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v6;
  swift_bridgeObjectRetain();
  Swift::Int v8 = sub_10001C2FC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  Swift::Int v21 = v8;
  unsigned int v9 = a1;
  switch(a1)
  {
    case 1u:
      return (void *)v21;
    case 2u:
    case 4u:
    case 6u:
      Swift::Int v10 = (Swift::Int *)Flag.Keyword.colorBit0.unsafeMutableAddressor();
      Swift::Int v11 = *v10;
      Swift::Int v12 = v10[1];
      swift_bridgeObjectRetain();
      sub_100018BE8(&v20, v11, v12);
      swift_bridgeObjectRelease();
      if (a1 - 5 < 2) {
        goto LABEL_6;
      }
      if (a1 != 2) {
        goto LABEL_5;
      }
      break;
    case 5u:
      goto LABEL_6;
    default:
LABEL_5:
      uint64_t v13 = (Swift::Int *)Flag.Keyword.colorBit1.unsafeMutableAddressor();
      Swift::Int v14 = *v13;
      Swift::Int v15 = v13[1];
      swift_bridgeObjectRetain();
      sub_100018BE8(&v20, v14, v15);
      swift_bridgeObjectRelease();
      if (v9 >= 5)
      {
LABEL_6:
        uint64_t v16 = (Swift::Int *)Flag.Keyword.colorBit2.unsafeMutableAddressor();
        Swift::Int v17 = *v16;
        Swift::Int v18 = v16[1];
        swift_bridgeObjectRetain();
        sub_100018BE8(&v20, v17, v18);
        swift_bridgeObjectRelease();
      }
      break;
  }
  return (void *)v21;
}

unint64_t sub_100010EA4(unsigned __int8 a1)
{
  uint64_t v2 = 0x5000000000000004;
  uint64_t v3 = 0x5000000000000004;
  if ((a1 - 2) <= 4u) {
    uint64_t v3 = qword_1005EDD08[(char)(a1 - 2)];
  }
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = Flag.Keyword.colorBit0.unsafeMutableAddressor();
  uint64_t v7 = *(void *)v5;
  uint64_t v6 = *((void *)v5 + 1);
  *(void *)(v4 + 16) = v7;
  *(void *)(v4 + 24) = v6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0x2000000000000004;
  if (a1 <= 6u) {
    uint64_t v8 = qword_1005EDD30[(char)a1];
  }
  uint64_t v9 = v3 | v4;
  uint64_t v10 = swift_allocObject();
  Swift::Int v11 = Flag.Keyword.colorBit1.unsafeMutableAddressor();
  uint64_t v13 = *(void *)v11;
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)(v10 + 16) = v13;
  *(void *)(v10 + 24) = v12;
  uint64_t v14 = v8 | v10;
  swift_bridgeObjectRetain();
  if (a1 >= 5u) {
    uint64_t v2 = 0x2000000000000004;
  }
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = Flag.Keyword.colorBit2.unsafeMutableAddressor();
  uint64_t v18 = *(void *)v16;
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)(v15 + 16) = v18;
  *(void *)(v15 + 24) = v17;
  uint64_t v19 = v2 | v15;
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_allocObject();
  sub_10000566C(&qword_10070A048);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1005F6680;
  *(void *)(v21 + 32) = 0xE00000000000001CLL;
  *(void *)(v21 + 40) = v9;
  *(void *)(v21 + 48) = v14;
  *(void *)(v21 + 56) = v19;
  *(void *)(v20 + 16) = v21;
  return v20 | 0xC000000000000000;
}

uint64_t FlagEncoder.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100015DFC(0, 14, 0, _swiftEmptyArrayStorage);
  uint64_t v3 = v2;
  uint64_t v38 = v2;
  uint64_t v4 = v1[1];
  if (v4)
  {
    uint64_t v5 = *v1;
    unint64_t v6 = v2[2];
    unint64_t v7 = v2[3];
    swift_bridgeObjectRetain();
    if (v6 >= v7 >> 1) {
      uint64_t v3 = sub_100015DFC((void *)(v7 > 1), v6 + 1, 1, v3);
    }
    v3[2] = v6 + 1;
    uint64_t v8 = &v3[2 * v6];
    v8[4] = v5;
    v8[5] = v4;
    uint64_t v38 = v3;
  }
  uint64_t v9 = v1[3];
  if (v9)
  {
    uint64_t v10 = v1[2];
    unint64_t v11 = v3[2];
    unint64_t v12 = v3[3];
    swift_bridgeObjectRetain();
    if (v11 >= v12 >> 1) {
      uint64_t v3 = sub_100015DFC((void *)(v12 > 1), v11 + 1, 1, v3);
    }
    v3[2] = v11 + 1;
    uint64_t v13 = &v3[2 * v11];
    v13[4] = v10;
    v13[5] = v9;
    uint64_t v38 = v3;
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_100011384(v14);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_100011384(v15);
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_100011384(v16);
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_100011384(v17);
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_100011384(v18);
  uint64_t v19 = v1[12];
  uint64_t v20 = v38;
  if (v19)
  {
    uint64_t v21 = v1[11];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_100015DFC(0, v38[2] + 1, 1, v38);
    }
    unint64_t v23 = v20[2];
    unint64_t v22 = v20[3];
    int64_t v24 = v23 + 1;
    if (v23 >= v22 >> 1) {
      uint64_t v20 = sub_100015DFC((void *)(v22 > 1), v23 + 1, 1, v20);
    }
    v20[2] = v24;
    uint64_t v25 = &v20[2 * v23];
    v25[4] = v21;
    v25[5] = v19;
  }
  else
  {
    int64_t v24 = v38[2];
    if (!v24)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRetain();
  sub_10001A574(0, v24, 0);
  uint64_t v26 = v20 + 5;
  do
  {
    uint64_t v28 = *(v26 - 1);
    uint64_t v27 = *v26;
    unint64_t v30 = _swiftEmptyArrayStorage[2];
    unint64_t v29 = _swiftEmptyArrayStorage[3];
    swift_bridgeObjectRetain();
    if (v30 >= v29 >> 1) {
      sub_10001A574(v29 > 1, v30 + 1, 1);
    }
    v26 += 2;
    _swiftEmptyArrayStorage[2] = v30 + 1;
    uint64_t v31 = &_swiftEmptyArrayStorage[2 * v30];
    v31[4] = v28;
    v31[5] = v27;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease_n();
LABEL_21:
  sub_10000566C(&qword_100709F58);
  sub_10001C548();
  uint64_t v32 = sub_1005E1A80();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  v39._countAndFlagsBits = v32;
  v39._object = v34;
  sub_1005E1E30(v39);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0x3A73726F6C6F6320;
  v40._object = (void *)0xE900000000000020;
  sub_1005E1E30(v40);
  if (v1[10]) {
    v35._countAndFlagsBits = 7562617;
  }
  else {
    v35._countAndFlagsBits = 28526;
  }
  if (v1[10]) {
    unint64_t v36 = (void *)0xE300000000000000;
  }
  else {
    unint64_t v36 = (void *)0xE200000000000000;
  }
  v35._object = v36;
  sub_1005E1E30(v35);
  swift_bridgeObjectRelease();
  v41._countAndFlagsBits = 125;
  v41._object = (void *)0xE100000000000000;
  sub_1005E1E30(v41);
  return 123;
}

uint64_t sub_100011384(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100015DFC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1000114D8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_10001601C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100011630(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v54 = sub_10000566C(&qword_100709E30);
  uint64_t v4 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  char v51 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070A000);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v53 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v52 = (uint64_t)&v47 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = type metadata accessor for MessageBatches.OtherUIDsBatchSequence(0);
  __chkstk_darwin(v13 - 8);
  int64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = *v2;
  unint64_t v20 = *(void *)(*v2 + 16);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v2 = v19;
  if (!isUniquelyReferenced_nonNull_native || (unint64_t v22 = *(void *)(v19 + 24) >> 1, v22 < v20))
  {
    unint64_t v19 = sub_1000169CC(isUniquelyReferenced_nonNull_native, v20, 1, v19, &qword_10070A008, &qword_100709E30);
    *unint64_t v2 = v19;
    unint64_t v22 = *(void *)(v19 + 24) >> 1;
  }
  uint64_t v23 = *(void *)(v19 + 16);
  unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v25 = *(void *)(v4 + 72);
  uint64_t v26 = v22 - v23;
  uint64_t v27 = v19 + v24 + v25 * v23;
  sub_10001FCC0(a1, (uint64_t)v15, type metadata accessor for MessageBatches.OtherUIDsBatchSequence);
  uint64_t v28 = sub_100023764((uint64_t)v18, v27, v26);
  uint64_t result = sub_10001FD28(a1, type metadata accessor for MessageBatches.OtherUIDsBatchSequence);
  if (v28 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v28)
    {
      uint64_t v30 = *(void *)(*v2 + 16);
      BOOL v31 = __OFADD__(v30, v28);
      uint64_t v32 = v30 + v28;
      if (v31)
      {
        __break(1u);
        return result;
      }
      *(void *)(*v2 + 16) = v32;
    }
    if (v28 != v26) {
      return sub_10001FD28((uint64_t)v18, type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator);
    }
  }
  int64_t v33 = *(void *)(*v2 + 16);
  sub_100065FF0((uint64_t)v12);
  uint64_t v34 = v52;
  sub_10001FD88((uint64_t)v12, v52);
  uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  for (int i = v49(v34, 1, v54); i != 1; int i = v49(v34, 1, v54))
  {
    sub_100007A48(v34, &qword_10070A000);
    uint64_t v37 = *v2;
    unint64_t v38 = *(void *)(*v2 + 24);
    int64_t v39 = v38 >> 1;
    if ((uint64_t)(v38 >> 1) < v33 + 1)
    {
      uint64_t v37 = sub_1000169CC(v38 > 1, v33 + 1, 1, *v2, &qword_10070A008, &qword_100709E30);
      *unint64_t v2 = v37;
      int64_t v39 = *(void *)(v37 + 24) >> 1;
    }
    uint64_t v40 = v53;
    sub_10001FD88((uint64_t)v12, v53);
    int v41 = v49(v40, 1, v54);
    int64_t v50 = v33;
    if (v41 == 1)
    {
      uint64_t v42 = v53;
LABEL_25:
      sub_100007A48(v42, &qword_10070A000);
      int64_t v36 = v50;
    }
    else
    {
      if (v33 <= v39) {
        int64_t v43 = v39;
      }
      else {
        int64_t v43 = v33;
      }
      int64_t v48 = v43;
      uint64_t v44 = v37 + v24 + v25 * v33;
      uint64_t v45 = (uint64_t)v51;
      uint64_t v42 = v53;
      while (1)
      {
        sub_10001FDF0(v42, v45, &qword_100709E30);
        if (v48 == v50) {
          break;
        }
        uint64_t v46 = v50;
        sub_100007A48((uint64_t)v12, &qword_10070A000);
        sub_10001FDF0(v45, v44, &qword_100709E30);
        int64_t v50 = v46 + 1;
        sub_100065FF0((uint64_t)v12);
        uint64_t v42 = v53;
        sub_10001FD88((uint64_t)v12, v53);
        v44 += v25;
        if (v49(v42, 1, v54) == 1) {
          goto LABEL_25;
        }
      }
      sub_100007A48(v45, &qword_100709E30);
      int64_t v36 = v48;
    }
    int64_t v33 = v36;
    *(void *)(*v2 + 16) = v36;
    uint64_t v34 = v52;
    sub_10001FD88((uint64_t)v12, v52);
  }
  sub_100007A48((uint64_t)v12, &qword_10070A000);
  sub_10001FD28((uint64_t)v18, type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator);
  return sub_100007A48(v34, &qword_10070A000);
}

uint64_t sub_100011B5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_10001720C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  sub_10000566C(&qword_10070A068);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100011CC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1000178E4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100011E08(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1000179F4(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_10070A178);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

BOOL static FlagDecoder.__derived_struct_equals(_:_:)(unint64_t a1, unint64_t a2)
{
  return ((a1 ^ a2) & 1 | (a1 >> 8) & 1 ^ (a2 >> 8) & 1 | (a1 >> 16) & 1 ^ (a2 >> 16) & 1 | (((a1 ^ a2) & 0x1000000) >> 24) & 1 | BYTE4(a1) & 1 ^ BYTE4(a2) & 1u) == 0;
}

BOOL sub_100011FC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a1[2] ^ a2[2] | a1[3] ^ a2[3] | a2[4] ^ a1[4]) & 1) == 0;
}

uint64_t FlagDecoder.debugDescription.getter(uint64_t a1)
{
  if ((a1 & 1) == 0)
  {
    unint64_t v2 = _swiftEmptyArrayStorage;
    if ((a1 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  unint64_t v2 = sub_100015F0C(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_100015F0C((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  int64_t v5 = &v2[2 * v4];
  v5[4] = 0x6564726177726F46;
  v5[5] = 0xE900000000000064;
  if ((a1 & 0x100) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      unint64_t v2 = sub_100015F0C((void *)(v6 > 1), v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    unint64_t v8 = &v2[2 * v7];
    v8[4] = 0x7463657269646552;
    v8[5] = 0xEA00000000006465;
  }
LABEL_12:
  if ((a1 & 0x10000) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
    }
    unint64_t v10 = v2[2];
    unint64_t v9 = v2[3];
    if (v10 >= v9 >> 1) {
      unint64_t v2 = sub_100015F0C((void *)(v9 > 1), v10 + 1, 1, v2);
    }
    v2[2] = v10 + 1;
    uint64_t v11 = &v2[2 * v10];
    v11[4] = 1802401098;
    v11[5] = 0xE400000000000000;
    if ((a1 & 0x1000000) == 0)
    {
LABEL_14:
      if ((a1 & 0x100000000) == 0) {
        goto LABEL_31;
      }
      goto LABEL_26;
    }
  }
  else if ((a1 & 0x1000000) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v13 = v2[2];
  unint64_t v12 = v2[3];
  if (v13 >= v12 >> 1) {
    unint64_t v2 = sub_100015F0C((void *)(v12 > 1), v13 + 1, 1, v2);
  }
  v2[2] = v13 + 1;
  uint64_t v14 = (char *)&v2[2 * v13];
  strcpy(v14 + 32, "ColoredLabel");
  v14[45] = 0;
  *((_WORD *)v14 + 23) = -5120;
  if ((a1 & 0x100000000) != 0)
  {
LABEL_26:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
    }
    unint64_t v16 = v2[2];
    unint64_t v15 = v2[3];
    if (v16 >= v15 >> 1) {
      unint64_t v2 = sub_100015F0C((void *)(v15 > 1), v16 + 1, 1, v2);
    }
    v2[2] = v16 + 1;
    uint64_t v17 = (char *)&v2[2 * v16];
    strcpy(v17 + 32, "iCloudCleanup");
    *((_WORD *)v17 + 23) = -4864;
  }
LABEL_31:
  sub_10000566C(&qword_100709F58);
  sub_10001C548();
  uint64_t v18 = sub_1005E1A80();
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = v18;
  v22._object = v20;
  sub_1005E1E30(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 125;
  v23._object = (void *)0xE100000000000000;
  sub_1005E1E30(v23);
  return 0x7374726F70707573;
}

uint64_t sub_100012378()
{
  uint64_t v1 = &_mh_execute_header;
  if (!v0[4]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x1000000;
  if (!v0[3]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[1]) {
    uint64_t v4 = 0;
  }
  return FlagDecoder.debugDescription.getter(v4 | *v0 | v3 | v2 | (unint64_t)v1);
}

__n128 FlagEncoder.init(permanentFlags:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10001C98C(a1, (uint64_t)v6);
  long long v3 = v6[5];
  *(_OWORD *)(a2 + 64) = v6[4];
  *(_OWORD *)(a2 + 80) = v3;
  *(void *)(a2 + 96) = v7;
  long long v4 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = (__n128)v6[3];
  *(_OWORD *)(a2 + 32) = v6[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_10001242C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1005E33F0();
  sub_1005E3410(0);
  sub_1005E1CD0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int v4 = sub_1005E3470();
  uint64_t v5 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_12:
    uint64_t v14 = 0;
    goto LABEL_16;
  }
  uint64_t v7 = ~v5;
  while (1)
  {
    if (!*(void *)(*(void *)(a3 + 48) + 16 * v6 + 8)) {
      goto LABEL_4;
    }
    uint64_t v8 = sub_1005E1CD0();
    uint64_t v10 = v9;
    if (v8 == sub_1005E1CD0() && v10 == v11) {
      break;
    }
    char v13 = sub_1005E3290();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_15;
    }
LABEL_4:
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_15:
  uint64_t v14 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1000125C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!*(void *)(a3 + 16)) {
    return a4 & 1;
  }
  sub_1005E33F0();
  sub_1005E3410(0);
  sub_1005E1CD0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    if (!*(void *)(*(void *)(a3 + 48) + 16 * v8 + 8)) {
      goto LABEL_4;
    }
    uint64_t v10 = sub_1005E1CD0();
    uint64_t v12 = v11;
    if (v10 == sub_1005E1CD0() && v12 == v13) {
      break;
    }
    char v15 = sub_1005E3290();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_13;
    }
LABEL_4:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_13:
  a4 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return a4 & 1;
}

const char *Flag.iCloudCleanup.unsafeMutableAddressor()
{
  return "$iCloudCleanup";
}

uint64_t sub_100012758(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  uint64_t v12 = *(void *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return _s13IMAP2Behavior11FlagEncoderV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v13) & 1;
}

uint64_t FlagDecoder.init(permanentFlags:)(uint64_t a1)
{
  unint64_t v1 = sub_10001D28C(a1);
  swift_bridgeObjectRelease();
  return v1 & 0x101010101;
}

uint64_t sub_100012800(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!*(void *)(a3 + 16)) {
    return a4 & 1;
  }
  sub_1005E33F0();
  sub_1005E3410(0);
  sub_1005E1CD0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    if (!*(void *)(*(void *)(a3 + 48) + 16 * v8 + 8)) {
      goto LABEL_4;
    }
    uint64_t v10 = sub_1005E1CD0();
    uint64_t v12 = v11;
    if (v10 == sub_1005E1CD0() && v12 == v13) {
      break;
    }
    char v15 = sub_1005E3290();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_13;
    }
LABEL_4:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_13:
  a4 = 1;
LABEL_14:
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t *Flag.Keyword.iCloudCleanup.unsafeMutableAddressor()
{
  if (qword_100709D40 != -1) {
    swift_once();
  }
  return &static Flag.Keyword.iCloudCleanup;
}

unint64_t FlagDecoder.decode(_:)(uint64_t a1, uint64_t a2)
{
  long long v4 = (uint64_t *)Flag.seen.unsafeMutableAddressor();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  swift_bridgeObjectRetain();
  char v7 = sub_100010270(v5, v6, a1);
  swift_bridgeObjectRelease();
  unint64_t v8 = (uint64_t *)Flag.deleted.unsafeMutableAddressor();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  swift_bridgeObjectRetain();
  char v11 = sub_100010270(v9, v10, a1);
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)Flag.answered.unsafeMutableAddressor();
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  swift_bridgeObjectRetain();
  char v72 = sub_100010270(v13, v14, a1);
  swift_bridgeObjectRelease();
  char v15 = (uint64_t *)Flag.draft.unsafeMutableAddressor();
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  swift_bridgeObjectRetain();
  char v18 = sub_100010270(v16, v17, a1);
  swift_bridgeObjectRelease();
  if (a2)
  {
    unint64_t v20 = (uint64_t *)Flag.Keyword.forwarded.unsafeMutableAddressor();
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    LOBYTE(v21) = sub_100010270(v21, v22, a1);
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t)&_mh_execute_header;
    if ((v21 & 1) == 0)
    {
      Swift::String v23 = (uint64_t *)Flag.Keyword.unregistered_forwarded.unsafeMutableAddressor();
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      swift_bridgeObjectRetain();
      LOBYTE(v24) = sub_100010270(v24, v25, a1);
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        uint64_t v19 = 0;
      }
    }
  }
  else
  {
    uint64_t v19 = 0x200000000;
  }
  if ((a2 & 0x100) != 0)
  {
    uint64_t v34 = (uint64_t *)Flag.Keyword.unregistered_redirected.unsafeMutableAddressor();
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    swift_bridgeObjectRetain();
    LOBYTE(v35) = sub_100010270(v35, v36, a1);
    swift_bridgeObjectRelease();
    if (v35) {
      uint64_t v26 = 0x10000000000;
    }
    else {
      uint64_t v26 = 0;
    }
    if ((a2 & 0x10000) != 0) {
      goto LABEL_8;
    }
LABEL_15:
    uint64_t v33 = 0x3000000000000;
    goto LABEL_18;
  }
  uint64_t v26 = 0x20000000000;
  if ((a2 & 0x10000) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v27 = (uint64_t *)Flag.Keyword.notJunk.unsafeMutableAddressor();
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  swift_bridgeObjectRetain();
  LOBYTE(v28) = sub_100010270(v28, v29, a1);
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_17;
  }
  uint64_t v30 = (uint64_t *)Flag.Keyword.junk.unsafeMutableAddressor();
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  swift_bridgeObjectRetain();
  LOBYTE(v31) = sub_100010270(v31, v32, a1);
  swift_bridgeObjectRelease();
  if (v31)
  {
    uint64_t v33 = 0x1000000000000;
    goto LABEL_18;
  }
  uint64_t v37 = (uint64_t *)Flag.Keyword.unregistered_notJunk.unsafeMutableAddressor();
  uint64_t v38 = *v37;
  uint64_t v39 = v37[1];
  swift_bridgeObjectRetain();
  LOBYTE(v38) = sub_100010270(v38, v39, a1);
  swift_bridgeObjectRelease();
  if (v38)
  {
LABEL_17:
    uint64_t v33 = 0x2000000000000;
  }
  else
  {
    int v67 = (uint64_t *)Flag.Keyword.unregistered_junk.unsafeMutableAddressor();
    uint64_t v68 = *v67;
    uint64_t v69 = v67[1];
    swift_bridgeObjectRetain();
    LOBYTE(v68) = sub_100010270(v68, v69, a1);
    swift_bridgeObjectRelease();
    if (v68) {
      uint64_t v33 = 0x1000000000000;
    }
    else {
      uint64_t v33 = 0;
    }
  }
LABEL_18:
  uint64_t v40 = (uint64_t *)Flag.flagged.unsafeMutableAddressor();
  uint64_t v41 = *v40;
  uint64_t v42 = v40[1];
  swift_bridgeObjectRetain();
  char v43 = sub_100010270(v41, v42, a1);
  swift_bridgeObjectRelease();
  if ((a2 & 0x1000000) == 0)
  {
    if (v43) {
      uint64_t v44 = 0x800000000000000;
    }
    else {
      uint64_t v44 = 0;
    }
    if ((a2 & 0x100000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_31;
  }
  if (v43)
  {
    char v70 = v18;
    char v71 = v11;
    char v45 = v7;
    uint64_t v46 = (uint64_t *)Flag.Keyword.colorBit0.unsafeMutableAddressor();
    uint64_t v47 = *v46;
    uint64_t v48 = v46[1];
    swift_bridgeObjectRetain();
    char v49 = sub_100010270(v47, v48, a1);
    swift_bridgeObjectRelease();
    int64_t v50 = (uint64_t *)Flag.Keyword.colorBit1.unsafeMutableAddressor();
    uint64_t v51 = *v50;
    uint64_t v52 = v50[1];
    swift_bridgeObjectRetain();
    char v53 = sub_100010270(v51, v52, a1);
    swift_bridgeObjectRelease();
    uint64_t v54 = (uint64_t *)Flag.Keyword.colorBit2.unsafeMutableAddressor();
    uint64_t v55 = *v54;
    uint64_t v56 = v54[1];
    swift_bridgeObjectRetain();
    LOBYTE(v55) = sub_100010270(v55, v56, a1);
    swift_bridgeObjectRelease();
    if (v55)
    {
      char v7 = v45;
      char v11 = v71;
      if (v53)
      {
        char v18 = v70;
        if ((v49 & 1) == 0)
        {
          uint64_t v44 = 0x700000000000000;
          if ((a2 & 0x100000000) == 0) {
            goto LABEL_34;
          }
          goto LABEL_31;
        }
LABEL_55:
        uint64_t v44 = 0x100000000000000;
        if ((a2 & 0x100000000) == 0) {
          goto LABEL_34;
        }
        goto LABEL_31;
      }
      BOOL v64 = (v49 & 1) == 0;
      uint64_t v65 = 0x500000000000000;
      uint64_t v66 = 0x600000000000000;
LABEL_47:
      if (v64) {
        uint64_t v44 = v65;
      }
      else {
        uint64_t v44 = v66;
      }
      char v18 = v70;
      if ((a2 & 0x100000000) == 0) {
        goto LABEL_34;
      }
      goto LABEL_31;
    }
    char v7 = v45;
    char v11 = v71;
    if (v53)
    {
      BOOL v64 = (v49 & 1) == 0;
      uint64_t v65 = 0x300000000000000;
      uint64_t v66 = 0x400000000000000;
      goto LABEL_47;
    }
    char v18 = v70;
    if ((v49 & 1) == 0) {
      goto LABEL_55;
    }
    uint64_t v44 = 0x200000000000000;
    if ((a2 & 0x100000000) == 0) {
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v44 = 0;
    if ((a2 & 0x100000000) == 0) {
      goto LABEL_34;
    }
  }
LABEL_31:
  if (qword_100709D40 != -1) {
    swift_once();
  }
  uint64_t v57 = static Flag.Keyword.iCloudCleanup;
  uint64_t v58 = *(void *)algn_1007616F8;
  swift_bridgeObjectRetain();
  sub_100010270(v57, v58, a1);
  swift_bridgeObjectRelease();
LABEL_34:
  uint64_t v59 = 256;
  if ((v11 & 1) == 0) {
    uint64_t v59 = 0;
  }
  unint64_t v60 = v59 & 0xFFFFFFFFFFFFFFFELL | ((v7 & 1) == 0);
  uint64_t v61 = 0x10000;
  if ((v72 & 1) == 0) {
    uint64_t v61 = 0;
  }
  uint64_t v62 = 0x1000000;
  if ((v18 & 1) == 0) {
    uint64_t v62 = 0;
  }
  return v60 | v61 | v62 | v19 | v26 | v33 | v44;
}

uint64_t MailboxPriorityInfo.mailboxPriorityOrder.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IndexableMessageInfo.cc.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t FlagUpdatesToBeSent.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_10001B1B0(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10001B1B0(a1, a3);
  return swift_bridgeObjectRelease();
}

uint64_t static FlagUpdatesToBeSent.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((sub_100013AB4(a1, a3) & 1) == 0) {
    return 0;
  }
  return sub_100013AB4(a2, a4);
}

Swift::Int sub_100012F74(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    Swift::UInt v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    sub_1005E33F0();
    sub_1005E3410(v16);
    uint64_t result = sub_1005E3470();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int8 *)(v19 + v18) == v16) {
      goto LABEL_7;
    }
  }
}

Swift::Int sub_100013158(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  Swift::Int v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  uint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      int64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v10 >= v8) {
        return 1;
      }
      uint64_t v7 = *(void *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v8) {
          return 1;
        }
        uint64_t v7 = *(void *)(v4 + 8 * v3);
        if (!v7)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v8) {
            return 1;
          }
          uint64_t v7 = *(void *)(v4 + 8 * v3);
          if (!v7) {
            break;
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    sub_1005E33F0();
    sub_1005E3410(0);
    uint64_t result = sub_1005E3470();
    unint64_t v9 = result & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  int64_t v11 = v10 + 3;
  if (v11 >= v8) {
    return 1;
  }
  uint64_t v7 = *(void *)(v4 + 8 * v11);
  if (v7)
  {
    int64_t v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    uint64_t v7 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v7) {
      goto LABEL_8;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

Swift::Int sub_1000132C8(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v32 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  while (1)
  {
LABEL_7:
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v12 >= v32) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v32) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v32) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_23:
    uint64_t v15 = *(void *)(v3 + 48) + 16 * v11;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(unsigned int *)(v15 + 8);
    sub_1005E33F0();
    Swift::UInt v18 = v17 | (v17 << 32);
    sub_1005E3410(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = result & ~v19;
    if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      return 0;
    }
    uint64_t v21 = ~v19;
    while (1)
    {
      uint64_t v22 = *(void *)(a2 + 48) + 16 * v20;
      if ((*(unsigned int *)(v22 + 8) | ((unint64_t)*(unsigned int *)(v22 + 8) << 32)) == v18)
      {
        uint64_t v23 = *(void *)v22;
        uint64_t v24 = *(void *)(v23 + 16);
        if (v24 == *(void *)(v16 + 16))
        {
          if (v24) {
            BOOL v25 = v23 == v16;
          }
          else {
            BOOL v25 = 1;
          }
          if (v25) {
            goto LABEL_7;
          }
          if (*(unsigned __int8 *)(v23 + 32) == *(unsigned __int8 *)(v16 + 32))
          {
            if (v24 == 1) {
              goto LABEL_7;
            }
            if (*(unsigned __int8 *)(v23 + 33) == *(unsigned __int8 *)(v16 + 33))
            {
              if (v24 == 2) {
                goto LABEL_7;
              }
              if (*(unsigned __int8 *)(v23 + 34) == *(unsigned __int8 *)(v16 + 34))
              {
                if (v24 == 3) {
                  goto LABEL_7;
                }
                if (*(unsigned __int8 *)(v23 + 35) == *(unsigned __int8 *)(v16 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v20 = (v20 + 1) & v21;
      if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        return 0;
      }
    }
    uint64_t v26 = (unsigned __int8 *)(v23 + 36);
    uint64_t v27 = v24 - 4;
    uint64_t v28 = (unsigned __int8 *)(v16 + 36);
    while (v27)
    {
      int v30 = *v26++;
      int v29 = v30;
      int v31 = *v28++;
      --v27;
      if (v29 != v31) {
        goto LABEL_25;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v32) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v32) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

Swift::Int sub_100013570(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    Swift::UInt32 v16 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v12);
    sub_1005E33F0();
    sub_1005E3440(v16);
    uint64_t result = sub_1005E3470();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(_DWORD *)(v19 + 4 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(_DWORD *)(v19 + 4 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_100013754(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = a2;
  if (*(void *)(result + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v41 = result;
    uint64_t v42 = result + 56;
    uint64_t v5 = 1 << *(unsigned char *)(result + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(result + 56);
    int64_t v43 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v53 = a2 + 56;
    if (!v7) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v45 = (v7 - 1) & v7;
    int64_t v46 = v4;
    for (unint64_t i = __clz(__rbit64(v7)) | (v4 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v11 << 6))
    {
      uint64_t v13 = *(void *)(result + 48) + 24 * i;
      uint64_t v14 = *(void *)v13;
      uint64_t v16 = *(unsigned int *)(v13 + 8);
      int v15 = *(_DWORD *)(v13 + 12);
      uint64_t v17 = *(unsigned int *)(v13 + 16);
      uint64_t v18 = *(unsigned __int16 *)(v13 + 20);
      uint64_t v19 = *(unsigned __int8 *)(v13 + 22);
      sub_1005E33F0();
      int v50 = v17;
      unint64_t v20 = v2 & 0xFF00000000000000 | v17 | (v18 << 32) | (v19 << 48);
      SocketAddressError.FailedToParseIPByteBuffer.hash(into:)();
      Swift::Int v21 = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v23 = v21 & ~v22;
      if (((*(void *)(v53 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
        return 0;
      }
      unint64_t v44 = v20;
      uint64_t v24 = ~v22;
      int v52 = v15 - v16;
      uint64_t v51 = v14;
      swift_retain();
      uint64_t v48 = (void *)(v14 + 24);
      swift_beginAccess();
      uint64_t v47 = v19 | (v18 << 8);
      uint64_t v25 = v16;
      int v26 = v18;
      uint64_t v27 = v19;
      int v49 = v18;
      while (1)
      {
        uint64_t v28 = *(void *)(v3 + 48) + 24 * v23;
        uint64_t v30 = *(unsigned int *)(v28 + 8);
        uint64_t v29 = *(unsigned int *)(v28 + 12);
        if (v29 - v30 != v52) {
          goto LABEL_24;
        }
        uint64_t v31 = v3;
        uint64_t v32 = *(void *)v28;
        uint64_t v33 = *(unsigned __int16 *)(v28 + 20);
        uint64_t v34 = *(unsigned __int8 *)(v28 + 22);
        BOOL v35 = *(_DWORD *)(v28 + 16) == v50 && v33 == v26;
        BOOL v36 = v35 && v34 == v27;
        if (v36 && v32 == v51) {
          break;
        }
        uint64_t v38 = v24;
        uint64_t v39 = v27;
        swift_beginAccess();
        int v40 = memcmp((const void *)(*(void *)(v32 + 24) + (v34 | (v33 << 8)) + v30), (const void *)(*v48 + v47 + v25), v29 - v30);
        uint64_t v27 = v39;
        uint64_t v24 = v38;
        int v26 = v49;
        uint64_t v3 = v31;
        if (!v40)
        {
          swift_release();
          goto LABEL_39;
        }
LABEL_24:
        unint64_t v23 = (v23 + 1) & v24;
        if (((*(void *)(v53 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
        {
          swift_release();
          return 0;
        }
      }
      swift_release();
      uint64_t v3 = v31;
LABEL_39:
      uint64_t result = v41;
      unint64_t v7 = v45;
      int64_t v4 = v46;
      unint64_t v2 = v44;
      if (v45) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v9 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_45:
        __break(1u);
        return result;
      }
      if (v9 >= v43) {
        return 1;
      }
      unint64_t v10 = *(void *)(v42 + 8 * v9);
      int64_t v11 = v4 + 1;
      if (v10) {
        goto LABEL_21;
      }
      int64_t v11 = v9 + 1;
      if (v9 + 1 >= v43) {
        return 1;
      }
      unint64_t v10 = *(void *)(v42 + 8 * v11);
      if (v10) {
        goto LABEL_21;
      }
      int64_t v11 = v9 + 2;
      if (v9 + 2 >= v43) {
        return 1;
      }
      unint64_t v10 = *(void *)(v42 + 8 * v11);
      if (v10) {
        goto LABEL_21;
      }
      int64_t v12 = v9 + 3;
      if (v12 >= v43) {
        return 1;
      }
      unint64_t v10 = *(void *)(v42 + 8 * v12);
      if (!v10)
      {
        while (1)
        {
          int64_t v11 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            goto LABEL_45;
          }
          if (v11 >= v43) {
            return 1;
          }
          unint64_t v10 = *(void *)(v42 + 8 * v11);
          ++v12;
          if (v10) {
            goto LABEL_21;
          }
        }
      }
      int64_t v11 = v12;
LABEL_21:
      uint64_t v45 = (v10 - 1) & v10;
      int64_t v46 = v11;
    }
  }
  return 0;
}

uint64_t sub_100013AB4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v28 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  uint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v31 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      int64_t v30 = v3;
      goto LABEL_25;
    }
    int64_t v7 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v7 >= v29) {
      return 1;
    }
    uint64_t v8 = *(void *)(v28 + 8 * v7);
    int64_t v9 = v3 + 1;
    if (!v8)
    {
      int64_t v9 = v3 + 2;
      if (v3 + 2 >= v29) {
        return 1;
      }
      uint64_t v8 = *(void *)(v28 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v3 + 3;
        if (v3 + 3 >= v29) {
          return 1;
        }
        uint64_t v8 = *(void *)(v28 + 8 * v9);
        if (!v8) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v6 = (v8 - 1) & v8;
    int64_t v30 = v9;
LABEL_25:
    uint64_t v11 = result;
    sub_1005E33F0();
    sub_1005E1CD0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_1005E3470();
    uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v14 = v12 & ~v13;
    if (((*(void *)(v31 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
      goto LABEL_40;
    }
    uint64_t v15 = sub_1005E1CD0();
    uint64_t v17 = v16;
    if (v15 == sub_1005E1CD0() && v17 == v18)
    {
LABEL_7:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v20 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        uint64_t v21 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v21;
          if (((*(void *)(v31 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
            break;
          }
          uint64_t v22 = sub_1005E1CD0();
          uint64_t v24 = v23;
          if (v22 == sub_1005E1CD0() && v24 == v25) {
            goto LABEL_7;
          }
          char v27 = sub_1005E3290();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_8;
          }
        }
LABEL_40:
        swift_bridgeObjectRelease();
        return 0;
      }
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t result = v11;
    int64_t v3 = v30;
  }
  uint64_t v10 = v3 + 4;
  if (v3 + 4 >= v29) {
    return 1;
  }
  uint64_t v8 = *(void *)(v28 + 8 * v10);
  if (v8)
  {
    int64_t v9 = v3 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v9 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v9 >= v29) {
      return 1;
    }
    uint64_t v8 = *(void *)(v28 + 8 * v9);
    ++v10;
    if (v8) {
      goto LABEL_24;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_100013DE0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v58 = a1;
  uint64_t v59 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v60 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v66 = a2 + 56;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v61 = (v6 - 1) & v6;
  int64_t v62 = v3;
  unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_19:
  Swift::Int v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v7);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_1005E33F0();
  sub_100008D24(v13, v14);
  sub_100008D24(v13, v14);
  sub_1005E08B0();
  sub_1000094D4(v13, v14);
  Swift::Int v15 = sub_1005E3470();
  uint64_t v16 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v17 = v15 & ~v16;
  uint64_t v18 = v66;
  if (((*(void *)(v66 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {
LABEL_97:
    sub_1000094D4(v13, v14);
    return 0;
  }
  unint64_t v19 = v14 >> 62;
  uint64_t v67 = ~v16;
  BOOL v20 = __OFSUB__(HIDWORD(v13), v13);
  BOOL v65 = v20;
  uint64_t v63 = v13 >> 32;
  while (2)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v17);
    uint64_t v23 = *v21;
    unint64_t v22 = v21[1];
    uint64_t v24 = 0;
    switch(v22 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v23), v23))
        {
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
          goto LABEL_116;
        }
        uint64_t v24 = HIDWORD(v23) - (int)v23;
LABEL_32:
        sub_100008D24(v23, v22);
        sub_100008D24(v23, v22);
        break;
      case 2uLL:
        uint64_t v26 = *(void *)(v23 + 16);
        uint64_t v25 = *(void *)(v23 + 24);
        uint64_t v24 = v25 - v26;
        if (!__OFSUB__(v25, v26)) {
          goto LABEL_32;
        }
        goto LABEL_100;
      case 3uLL:
        break;
      default:
        uint64_t v24 = BYTE6(v22);
        break;
    }
    uint64_t v27 = BYTE6(v14);
    switch((int)v19)
    {
      case 1:
        uint64_t v27 = HIDWORD(v13) - (int)v13;
        if (v65) {
          goto LABEL_101;
        }
        goto LABEL_37;
      case 2:
        uint64_t v29 = *(void *)(v13 + 16);
        uint64_t v28 = *(void *)(v13 + 24);
        BOOL v8 = __OFSUB__(v28, v29);
        uint64_t v27 = v28 - v29;
        if (!v8) {
          goto LABEL_37;
        }
        goto LABEL_102;
      case 3:
        if (v24) {
          goto LABEL_25;
        }
        goto LABEL_89;
      default:
LABEL_37:
        if (v24 != v27)
        {
LABEL_25:
          sub_1000094D4(v23, v22);
          sub_1000094D4(v23, v22);
          goto LABEL_26;
        }
        if (v24 >= 1)
        {
          switch(v22 >> 62)
          {
            case 1uLL:
              if (v23 >> 32 < (int)v23) {
                goto LABEL_103;
              }
              sub_100008D24(v13, v14);
              sub_100008D24(v23, v22);
              uint64_t v34 = sub_1005E0550();
              if (!v34) {
                goto LABEL_51;
              }
              uint64_t v35 = sub_1005E0580();
              if (__OFSUB__((int)v23, v35)) {
                goto LABEL_106;
              }
              v34 += (int)v23 - v35;
LABEL_51:
              sub_1005E0570();
              sub_1000260B8(v34, v13, v14, __s1);
              sub_1000094D4(v23, v22);
              goto LABEL_57;
            case 2uLL:
              uint64_t v36 = *(void *)(v23 + 16);
              uint64_t v37 = *(void *)(v23 + 24);
              sub_100008D24(v13, v14);
              swift_retain();
              swift_retain();
              uint64_t v38 = sub_1005E0550();
              if (!v38) {
                goto LABEL_55;
              }
              uint64_t v39 = sub_1005E0580();
              if (__OFSUB__(v36, v39)) {
                goto LABEL_105;
              }
              v38 += v36 - v39;
LABEL_55:
              if (__OFSUB__(v37, v36)) {
                goto LABEL_104;
              }
              sub_1005E0570();
              sub_1000260B8(v38, v13, v14, __s1);
              swift_release();
              swift_release();
LABEL_57:
              sub_1000094D4(v13, v14);
              sub_1000094D4(v23, v22);
              sub_1000094D4(v23, v22);
              uint64_t v2 = a2;
              uint64_t v18 = v66;
              if (__s1[0]) {
                goto LABEL_90;
              }
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (v19)
              {
                if (v19 == 1)
                {
                  if (v63 < (int)v13) {
                    goto LABEL_108;
                  }
                  sub_100008D24(v13, v14);
                  uint64_t v40 = sub_1005E0550();
                  if (!v40) {
                    goto LABEL_118;
                  }
                  uint64_t v31 = v40;
                  uint64_t v41 = sub_1005E0580();
                  uint64_t v33 = (int)v13 - v41;
                  if (__OFSUB__((int)v13, v41)) {
                    goto LABEL_112;
                  }
LABEL_64:
                  uint64_t v42 = sub_1005E0570();
                  if (v42 >= (v13 >> 32) - (int)v13) {
                    size_t v43 = (v13 >> 32) - (int)v13;
                  }
                  else {
                    size_t v43 = v42;
                  }
                  int v44 = memcmp(__s1, (const void *)(v31 + v33), v43);
                  sub_1000094D4(v13, v14);
                  sub_1000094D4(v23, v22);
                  sub_1000094D4(v23, v22);
                  uint64_t v18 = v66;
                  if (!v44) {
                    goto LABEL_90;
                  }
                }
                else
                {
                  uint64_t v52 = *(void *)(v13 + 16);
                  uint64_t v53 = *(void *)(v13 + 24);
                  sub_100008D24(v13, v14);
                  swift_retain();
                  swift_retain();
                  uint64_t v48 = (char *)sub_1005E0550();
                  if (v48)
                  {
                    uint64_t v54 = sub_1005E0580();
                    if (__OFSUB__(v52, v54)) {
                      goto LABEL_115;
                    }
                    v48 += v52 - v54;
                  }
                  BOOL v8 = __OFSUB__(v53, v52);
                  int64_t v50 = v53 - v52;
                  if (v8) {
                    goto LABEL_110;
                  }
                  uint64_t v51 = sub_1005E0570();
                  if (!v48) {
                    goto LABEL_120;
                  }
LABEL_84:
                  if (v51 >= v50) {
                    size_t v55 = v50;
                  }
                  else {
                    size_t v55 = v51;
                  }
                  int v56 = memcmp(__s1, v48, v55);
                  swift_release();
                  swift_release();
                  sub_1000094D4(v13, v14);
                  sub_1000094D4(v23, v22);
                  sub_1000094D4(v23, v22);
                  uint64_t v2 = a2;
                  uint64_t v18 = v66;
                  if (!v56) {
                    goto LABEL_90;
                  }
                }
              }
              else
              {
                uint64_t __s2 = v13;
                __int16 v69 = v14;
                char v70 = BYTE2(v14);
                char v71 = BYTE3(v14);
                char v72 = BYTE4(v14);
                char v73 = BYTE5(v14);
                int v45 = memcmp(__s1, &__s2, BYTE6(v14));
LABEL_77:
                sub_1000094D4(v23, v22);
                sub_1000094D4(v23, v22);
                if (!v45) {
                  goto LABEL_90;
                }
              }
              break;
            default:
              *(void *)__s1 = v23;
              *(_WORD *)&__s1[8] = v22;
              __s1[10] = BYTE2(v22);
              __s1[11] = BYTE3(v22);
              __s1[12] = BYTE4(v22);
              __s1[13] = BYTE5(v22);
              if (!v19)
              {
                uint64_t __s2 = v13;
                __int16 v69 = v14;
                char v70 = BYTE2(v14);
                char v71 = BYTE3(v14);
                char v72 = BYTE4(v14);
                char v73 = BYTE5(v14);
                int v45 = memcmp(__s1, &__s2, BYTE6(v14));
                sub_1000094D4(v13, v14);
                goto LABEL_77;
              }
              if (v19 == 1)
              {
                if (v63 < (int)v13) {
                  goto LABEL_107;
                }
                swift_retain();
                uint64_t v30 = sub_1005E0550();
                if (!v30)
                {
                  sub_1005E0570();
                  __break(1u);
LABEL_118:
                  sub_1005E0570();
                  __break(1u);
LABEL_119:
                  __break(1u);
LABEL_120:
                  __break(1u);
                  JUMPOUT(0x1000146FCLL);
                }
                uint64_t v31 = v30;
                uint64_t v32 = sub_1005E0580();
                uint64_t v33 = (int)v13 - v32;
                if (__OFSUB__((int)v13, v32)) {
                  goto LABEL_111;
                }
                goto LABEL_64;
              }
              uint64_t v46 = *(void *)(v13 + 16);
              uint64_t v47 = *(void *)(v13 + 24);
              sub_100008D24(v13, v14);
              swift_retain();
              swift_retain();
              uint64_t v48 = (char *)sub_1005E0550();
              if (v48)
              {
                uint64_t v49 = sub_1005E0580();
                if (__OFSUB__(v46, v49)) {
                  goto LABEL_114;
                }
                v48 += v46 - v49;
              }
              BOOL v8 = __OFSUB__(v47, v46);
              int64_t v50 = v47 - v46;
              if (v8) {
                goto LABEL_109;
              }
              uint64_t v51 = sub_1005E0570();
              if (!v48) {
                goto LABEL_119;
              }
              goto LABEL_84;
          }
LABEL_26:
          unint64_t v17 = (v17 + 1) & v67;
          if (((*(void *)(v18 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
            goto LABEL_97;
          }
          continue;
        }
LABEL_89:
        sub_1000094D4(v23, v22);
        sub_1000094D4(v23, v22);
LABEL_90:
        sub_1000094D4(v13, v14);
        a1 = v58;
        unint64_t v6 = v61;
        int64_t v3 = v62;
        if (v61) {
          goto LABEL_7;
        }
LABEL_8:
        BOOL v8 = __OFADD__(v3, 1);
        int64_t v9 = v3 + 1;
        if (v8) {
          goto LABEL_113;
        }
        if (v9 < v60)
        {
          unint64_t v10 = *(void *)(v59 + 8 * v9);
          if (v10) {
            goto LABEL_18;
          }
          int64_t v11 = v9 + 1;
          if (v9 + 1 < v60)
          {
            unint64_t v10 = *(void *)(v59 + 8 * v11);
            if (v10) {
              goto LABEL_17;
            }
            int64_t v11 = v9 + 2;
            if (v9 + 2 < v60)
            {
              unint64_t v10 = *(void *)(v59 + 8 * v11);
              if (v10) {
                goto LABEL_17;
              }
              int64_t v11 = v9 + 3;
              if (v9 + 3 < v60)
              {
                unint64_t v10 = *(void *)(v59 + 8 * v11);
                if (v10)
                {
LABEL_17:
                  int64_t v9 = v11;
LABEL_18:
                  uint64_t v61 = (v10 - 1) & v10;
                  int64_t v62 = v9;
                  unint64_t v7 = __clz(__rbit64(v10)) + (v9 << 6);
                  goto LABEL_19;
                }
                while (1)
                {
                  int64_t v9 = v11 + 1;
                  if (__OFADD__(v11, 1)) {
                    break;
                  }
                  if (v9 >= v60) {
                    return 1;
                  }
                  unint64_t v10 = *(void *)(v59 + 8 * v9);
                  ++v11;
                  if (v10) {
                    goto LABEL_18;
                  }
                }
LABEL_116:
                __break(1u);
              }
            }
          }
        }
        return 1;
    }
  }
}

Swift::Int FlagUpdatesToBeSent.hashValue.getter(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_10001B1B0((uint64_t)v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10001B1B0((uint64_t)v5, a2);
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

Swift::Int sub_1000147A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_10001B1B0((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10001B1B0((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_100014818(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_10001B1B0(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10001B1B0(a1, v3);
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100014888()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_10001B1B0((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10001B1B0((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_1000148F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_100013AB4(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_100013AB4(v2, v3);
}

void *FlagEncoder.test_encode(_:)(unint64_t a1, char a2)
{
  uint64_t v40 = &_swiftEmptySetSingleton;
  if (a1)
  {
    if ((a1 & 0x100) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    unint64_t v6 = (Swift::Int *)Flag.seen.unsafeMutableAddressor();
    Swift::Int v7 = *v6;
    Swift::Int v8 = v6[1];
    swift_bridgeObjectRetain();
    sub_100018BE8(&v39, v7, v8);
    swift_bridgeObjectRelease();
    if ((a1 & 0x100) == 0)
    {
LABEL_3:
      if ((a1 & 0x10000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      Swift::Int v12 = (Swift::Int *)Flag.answered.unsafeMutableAddressor();
      Swift::Int v13 = *v12;
      Swift::Int v14 = v12[1];
      swift_bridgeObjectRetain();
      sub_100018BE8(&v39, v13, v14);
      swift_bridgeObjectRelease();
      Swift::Int v5 = v2[1];
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_9;
    }
  }
  int64_t v9 = (Swift::Int *)Flag.deleted.unsafeMutableAddressor();
  Swift::Int v10 = *v9;
  Swift::Int v11 = v9[1];
  swift_bridgeObjectRetain();
  sub_100018BE8(&v39, v10, v11);
  swift_bridgeObjectRelease();
  if ((a1 & 0x10000) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  Swift::Int v5 = v2[1];
  if (!v5) {
    goto LABEL_11;
  }
LABEL_9:
  if ((a1 & 0x1000000) != 0)
  {
    Swift::Int v15 = *v2;
    swift_bridgeObjectRetain();
    sub_100018BE8(&v39, v15, v5);
    swift_bridgeObjectRelease();
  }
LABEL_11:
  if ((a1 & 0x100000000) != 0)
  {
    Swift::Int v43 = v2[4];
    uint64_t v16 = *(void *)(v43 + 16);
    if (v16)
    {
      unint64_t v17 = (Swift::Int *)(swift_bridgeObjectRetain() + 40);
      do
      {
        Swift::Int v18 = *(v17 - 1);
        Swift::Int v19 = *v17;
        swift_bridgeObjectRetain();
        sub_100018BE8(&v39, v18, v19);
        swift_bridgeObjectRelease();
        v17 += 2;
        --v16;
      }
      while (v16);
      sub_10001D550((uint64_t)&v43);
    }
  }
  if ((a1 & 0x10000000000) != 0)
  {
    Swift::Int v42 = v2[5];
    uint64_t v20 = *(void *)(v42 + 16);
    if (v20)
    {
      uint64_t v21 = (Swift::Int *)(swift_bridgeObjectRetain() + 40);
      do
      {
        Swift::Int v22 = *(v21 - 1);
        Swift::Int v23 = *v21;
        swift_bridgeObjectRetain();
        sub_100018BE8(&v39, v22, v23);
        swift_bridgeObjectRelease();
        v21 += 2;
        --v20;
      }
      while (v20);
      sub_10001D550((uint64_t)&v42);
    }
  }
  unint64_t v24 = HIBYTE(a1);
  if (BYTE6(a1))
  {
    if (BYTE6(a1) == 1)
    {
      Swift::Int v41 = v2[7];
      uint64_t v25 = *(void *)(v41 + 16);
      if (!v25) {
        goto LABEL_31;
      }
      uint64_t v26 = (Swift::Int *)(swift_bridgeObjectRetain() + 40);
      do
      {
        Swift::Int v27 = *(v26 - 1);
        Swift::Int v28 = *v26;
        swift_bridgeObjectRetain();
        sub_100018BE8(&v39, v27, v28);
        swift_bridgeObjectRelease();
        v26 += 2;
        --v25;
      }
      while (v25);
    }
    else
    {
      Swift::Int v41 = v2[8];
      uint64_t v29 = *(void *)(v41 + 16);
      if (!v29) {
        goto LABEL_31;
      }
      uint64_t v30 = (Swift::Int *)(swift_bridgeObjectRetain() + 40);
      do
      {
        Swift::Int v31 = *(v30 - 1);
        Swift::Int v32 = *v30;
        swift_bridgeObjectRetain();
        sub_100018BE8(&v39, v31, v32);
        swift_bridgeObjectRelease();
        v30 += 2;
        --v29;
      }
      while (v29);
    }
    sub_10001D550((uint64_t)&v41);
  }
LABEL_31:
  if (!v24) {
    goto LABEL_41;
  }
  uint64_t v33 = (Swift::Int *)Flag.flagged.unsafeMutableAddressor();
  Swift::Int v34 = *v33;
  Swift::Int v35 = v33[1];
  swift_bridgeObjectRetain();
  sub_100018BE8(&v39, v34, v35);
  swift_bridgeObjectRelease();
  if (v24 <= 6)
  {
    if (((1 << v24) & 0x54) == 0)
    {
      if (((1 << v24) & 3) != 0) {
        goto LABEL_41;
      }
      if (v24 != 5) {
        goto LABEL_39;
      }
LABEL_40:
      sub_100018BE8(&v39, 0x616C466C69614D24, 0xED00003274694267);
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    sub_100018BE8(&v39, 0x616C466C69614D24, 0xED00003074694267);
    swift_bridgeObjectRelease();
    if ((v24 - 5) < 2) {
      goto LABEL_40;
    }
    if (v24 == 2) {
      goto LABEL_41;
    }
  }
LABEL_39:
  sub_100018BE8(&v39, 0x616C466C69614D24, 0xED00003174694267);
  swift_bridgeObjectRelease();
  if (v24 >= 5) {
    goto LABEL_40;
  }
LABEL_41:
  Swift::Int v36 = v2[12];
  if (v36 && (a2 & 1) != 0)
  {
    Swift::Int v37 = v2[11];
    swift_bridgeObjectRetain();
    sub_100018BE8(&v39, v37, v36);
    swift_bridgeObjectRelease();
  }
  return v40;
}

void *FlagEncoder.encode(_:)(unint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = v3;
  *(void *)uint64_t v113 = a2;
  *(_WORD *)&v113[8] = a3;
  char v6 = a2 & 1;
  uint64_t v7 = *(void *)&v113[1];
  unsigned int v8 = a3 >> 8;
  unint64_t v114 = &_swiftEmptySetSingleton;
  uint64_t v115 = &_swiftEmptySetSingleton;
  unint64_t v9 = a1 & 0xFFFF010101010101;
  v113[0] = a2 & 1;
  uint64_t v10 = FlagsWithModifications.locallyModified.getter(a1 & 0xFFFF010101010101, *(uint64_t *)v113, a3);
  BOOL v11 = sub_100010180(0, v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    Swift::Int v12 = (Swift::Int *)Flag.seen.unsafeMutableAddressor();
    Swift::Int v13 = *v12;
    Swift::Int v14 = v12[1];
    swift_bridgeObjectRetain();
    sub_100018BE8((Swift::Int *)v113, v13, v14);
    swift_bridgeObjectRelease();
  }
  v113[0] = v6;
  *(void *)&v113[1] = v7;
  v113[9] = v8;
  uint64_t v15 = FlagsWithModifications.locallyModified.getter(v9, *(uint64_t *)v113, *(__int16 *)&v113[8]);
  BOOL v16 = sub_100010180(1u, v15);
  swift_bridgeObjectRelease();
  if (v16)
  {
    unint64_t v17 = (Swift::Int *)Flag.deleted.unsafeMutableAddressor();
    Swift::Int v18 = *v17;
    Swift::Int v19 = v17[1];
    swift_bridgeObjectRetain();
    sub_100018BE8((Swift::Int *)v113, v18, v19);
    swift_bridgeObjectRelease();
  }
  v113[0] = v6;
  *(void *)&v113[1] = v7;
  v113[9] = v8;
  uint64_t v20 = FlagsWithModifications.locallyModified.getter(v9, *(uint64_t *)v113, *(__int16 *)&v113[8]);
  BOOL v21 = sub_100010180(2u, v20);
  swift_bridgeObjectRelease();
  if (v21)
  {
    Swift::Int v22 = (Swift::Int *)Flag.answered.unsafeMutableAddressor();
    Swift::Int v23 = *v22;
    Swift::Int v24 = v22[1];
    swift_bridgeObjectRetain();
    sub_100018BE8((Swift::Int *)v113, v23, v24);
    swift_bridgeObjectRelease();
  }
  Swift::Int v25 = v3[1];
  Swift::Int v112 = v3;
  if (v25)
  {
    Swift::Int v26 = *v3;
    swift_bridgeObjectRetain();
    v113[0] = v6;
    *(void *)&v113[1] = v7;
    v113[9] = v8;
    uint64_t v27 = FlagsWithModifications.locallyModified.getter(v9, *(uint64_t *)v113, *(__int16 *)&v113[8]);
    BOOL v28 = sub_100010180(3u, v27);
    swift_bridgeObjectRelease();
    if (v28) {
      sub_100018BE8((Swift::Int *)v113, v26, v25);
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v3;
  }
  v113[0] = v6;
  *(void *)&v113[1] = v7;
  v113[9] = v8;
  uint64_t v29 = FlagsWithModifications.locallyModified.getter(v9, *(uint64_t *)v113, *(__int16 *)&v113[8]);
  BOOL v30 = sub_100010180(4u, v29);
  swift_bridgeObjectRelease();
  if (v30)
  {
    Swift::Int v31 = v4[4];
    Swift::Int v122 = v31;
    uint64_t v32 = *(void *)(v31 + 16);
    if (v32)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v33 = (Swift::Int *)(v31 + 40);
      do
      {
        Swift::Int v35 = *(v33 - 1);
        Swift::Int v34 = *v33;
        swift_bridgeObjectRetain_n();
        sub_100018BE8((Swift::Int *)v113, v35, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 += 2;
        --v32;
      }
      while (v32);
      sub_10001D550((uint64_t)&v122);
      sub_10001D550((uint64_t)&v122);
    }
    uint64_t v4 = v112;
    Swift::Int v36 = v112[6];
    Swift::Int v121 = v36;
    uint64_t v37 = *(void *)(v36 + 16);
    if (v37)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v38 = (Swift::Int *)(v36 + 40);
      do
      {
        Swift::Int v39 = *(v38 - 1);
        Swift::Int v40 = *v38;
        swift_bridgeObjectRetain_n();
        sub_100018BE8((Swift::Int *)v113, v39, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 += 2;
        --v37;
      }
      while (v37);
      sub_10001D550((uint64_t)&v121);
      sub_10001D550((uint64_t)&v121);
      uint64_t v4 = v112;
    }
  }
  v113[0] = v6;
  *(void *)&v113[1] = v7;
  v113[9] = v8;
  uint64_t v41 = FlagsWithModifications.locallyModified.getter(v9, *(uint64_t *)v113, *(__int16 *)&v113[8]);
  BOOL v42 = sub_100010180(5u, v41);
  swift_bridgeObjectRelease();
  if (v42)
  {
    Swift::Int v43 = v4[5];
    Swift::Int v120 = v43;
    uint64_t v44 = *(void *)(v43 + 16);
    if (v44)
    {
      swift_bridgeObjectRetain_n();
      int v45 = (Swift::Int *)(v43 + 40);
      do
      {
        Swift::Int v47 = *(v45 - 1);
        Swift::Int v46 = *v45;
        swift_bridgeObjectRetain_n();
        sub_100018BE8((Swift::Int *)v113, v47, v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v45 += 2;
        --v44;
      }
      while (v44);
      sub_10001D550((uint64_t)&v120);
      sub_10001D550((uint64_t)&v120);
    }
    uint64_t v4 = v112;
    Swift::Int v48 = v112[6];
    Swift::Int v119 = v48;
    uint64_t v49 = *(void *)(v48 + 16);
    if (v49)
    {
      swift_bridgeObjectRetain_n();
      int64_t v50 = (Swift::Int *)(v48 + 40);
      do
      {
        Swift::Int v51 = *(v50 - 1);
        Swift::Int v52 = *v50;
        swift_bridgeObjectRetain_n();
        sub_100018BE8((Swift::Int *)v113, v51, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v50 += 2;
        --v49;
      }
      while (v49);
      sub_10001D550((uint64_t)&v119);
      sub_10001D550((uint64_t)&v119);
      uint64_t v4 = v112;
    }
  }
  v113[0] = v6;
  *(void *)&v113[1] = v7;
  v113[9] = v8;
  uint64_t v53 = FlagsWithModifications.locallyModified.getter(v9, *(uint64_t *)v113, *(__int16 *)&v113[8]);
  BOOL v54 = sub_100010180(6u, v53);
  swift_bridgeObjectRelease();
  if (v54)
  {
    if (BYTE6(a1))
    {
      if (BYTE6(a1) == 1)
      {
        Swift::Int v55 = v4[7];
        Swift::Int v118 = v55;
        uint64_t v56 = *(void *)(v55 + 16);
        if (v56)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v57 = (Swift::Int *)(v55 + 40);
          do
          {
            Swift::Int v58 = *(v57 - 1);
            Swift::Int v59 = *v57;
            swift_bridgeObjectRetain_n();
            sub_100018BE8((Swift::Int *)v113, v58, v59);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v57 += 2;
            --v56;
          }
          while (v56);
          sub_10001D550((uint64_t)&v118);
          sub_10001D550((uint64_t)&v118);
          uint64_t v4 = v112;
        }
        Swift::Int v60 = v4[8];
        Swift::Int v117 = v60;
        uint64_t v61 = *(void *)(v60 + 16);
        if (!v61) {
          goto LABEL_58;
        }
        swift_bridgeObjectRetain_n();
        int64_t v62 = (Swift::Int *)(v60 + 40);
        do
        {
          Swift::Int v63 = *(v62 - 1);
          Swift::Int v64 = *v62;
          swift_bridgeObjectRetain_n();
          sub_100018BE8((Swift::Int *)v113, v63, v64);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 += 2;
          --v61;
        }
        while (v61);
      }
      else
      {
        Swift::Int v75 = v4[7];
        Swift::Int v118 = v75;
        uint64_t v76 = *(void *)(v75 + 16);
        if (v76)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v77 = (Swift::Int *)(v75 + 40);
          do
          {
            Swift::Int v78 = *(v77 - 1);
            Swift::Int v79 = *v77;
            swift_bridgeObjectRetain_n();
            sub_100018BE8((Swift::Int *)v113, v78, v79);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v77 += 2;
            --v76;
          }
          while (v76);
          sub_10001D550((uint64_t)&v118);
          sub_10001D550((uint64_t)&v118);
          uint64_t v4 = v112;
        }
        Swift::Int v80 = v4[8];
        Swift::Int v117 = v80;
        uint64_t v81 = *(void *)(v80 + 16);
        if (!v81) {
          goto LABEL_58;
        }
        swift_bridgeObjectRetain_n();
        uint64_t v82 = (Swift::Int *)(v80 + 40);
        do
        {
          Swift::Int v83 = *(v82 - 1);
          Swift::Int v84 = *v82;
          swift_bridgeObjectRetain_n();
          sub_100018BE8((Swift::Int *)v113, v83, v84);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v82 += 2;
          --v81;
        }
        while (v81);
      }
    }
    else
    {
      Swift::Int v65 = v4[7];
      Swift::Int v118 = v65;
      uint64_t v66 = *(void *)(v65 + 16);
      if (v66)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v67 = (Swift::Int *)(v65 + 40);
        do
        {
          Swift::Int v68 = *(v67 - 1);
          Swift::Int v69 = *v67;
          swift_bridgeObjectRetain_n();
          sub_100018BE8((Swift::Int *)v113, v68, v69);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v67 += 2;
          --v66;
        }
        while (v66);
        sub_10001D550((uint64_t)&v118);
        sub_10001D550((uint64_t)&v118);
        uint64_t v4 = v112;
      }
      Swift::Int v70 = v4[8];
      Swift::Int v117 = v70;
      uint64_t v71 = *(void *)(v70 + 16);
      if (!v71) {
        goto LABEL_58;
      }
      swift_bridgeObjectRetain_n();
      char v72 = (Swift::Int *)(v70 + 40);
      do
      {
        Swift::Int v73 = *(v72 - 1);
        Swift::Int v74 = *v72;
        swift_bridgeObjectRetain_n();
        sub_100018BE8((Swift::Int *)v113, v73, v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v72 += 2;
        --v71;
      }
      while (v71);
    }
    uint64_t v4 = v112;
    sub_10001D550((uint64_t)&v117);
    sub_10001D550((uint64_t)&v117);
LABEL_58:
    Swift::Int v85 = v4[9];
    Swift::Int v116 = v85;
    uint64_t v86 = *(void *)(v85 + 16);
    if (v86)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v87 = (Swift::Int *)(v85 + 40);
      do
      {
        Swift::Int v88 = *(v87 - 1);
        Swift::Int v89 = *v87;
        swift_bridgeObjectRetain_n();
        sub_100018BE8((Swift::Int *)v113, v88, v89);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v87 += 2;
        --v86;
      }
      while (v86);
      sub_10001D550((uint64_t)&v116);
      sub_10001D550((uint64_t)&v116);
      uint64_t v4 = v112;
    }
  }
  v113[0] = v6;
  *(void *)&v113[1] = v7;
  v113[9] = v8;
  uint64_t v90 = FlagsWithModifications.locallyModified.getter(v9, *(uint64_t *)v113, *(__int16 *)&v113[8]);
  BOOL v91 = sub_100010180(7u, v90);
  swift_bridgeObjectRelease();
  if (!v91) {
    goto LABEL_68;
  }
  if (HIBYTE(a1))
  {
    uint64_t v92 = (Swift::Int *)Flag.flagged.unsafeMutableAddressor();
    Swift::Int v93 = *v92;
    Swift::Int v94 = v92[1];
    swift_bridgeObjectRetain();
    sub_100018BE8((Swift::Int *)v113, v93, v94);
    swift_bridgeObjectRelease();
    if ((v4[10] & 1) == 0) {
      goto LABEL_68;
    }
  }
  else
  {
    Swift::Int v95 = (Swift::Int *)Flag.flagged.unsafeMutableAddressor();
    Swift::Int v96 = *v95;
    Swift::Int v97 = v95[1];
    swift_bridgeObjectRetain();
    sub_100018BE8((Swift::Int *)v113, v96, v97);
    swift_bridgeObjectRelease();
    if ((v4[10] & 1) == 0) {
      goto LABEL_68;
    }
  }
  uint64_t v98 = (Swift::Int *)Flag.Keyword.colorBit0.unsafeMutableAddressor();
  Swift::Int v99 = *v98;
  Swift::Int v100 = v98[1];
  swift_bridgeObjectRetain();
  sub_100018BE8((Swift::Int *)v113, v99, v100);
  swift_bridgeObjectRelease();
  uint64_t v101 = (Swift::Int *)Flag.Keyword.colorBit1.unsafeMutableAddressor();
  Swift::Int v102 = *v101;
  Swift::Int v103 = v101[1];
  swift_bridgeObjectRetain();
  sub_100018BE8((Swift::Int *)v113, v102, v103);
  swift_bridgeObjectRelease();
  uint64_t v104 = (Swift::Int *)Flag.Keyword.colorBit2.unsafeMutableAddressor();
  Swift::Int v105 = *v104;
  Swift::Int v106 = v104[1];
  swift_bridgeObjectRetain();
  sub_100018BE8((Swift::Int *)v113, v105, v106);
  swift_bridgeObjectRelease();
LABEL_68:
  Swift::Int v107 = v4[12];
  if (v107)
  {
    Swift::Int v108 = v4[11];
    swift_bridgeObjectRetain();
    v113[0] = v6;
    *(void *)&v113[1] = v7;
    v113[9] = v8;
    uint64_t v109 = FlagsWithModifications.locallyModified.getter(v9, *(uint64_t *)v113, *(__int16 *)&v113[8]);
    BOOL v110 = sub_100010180(8u, v109);
    swift_bridgeObjectRelease();
    if (v110) {
      sub_100018BE8((Swift::Int *)v113, v108, v107);
    }
    swift_bridgeObjectRelease();
  }
  return v115;
}

uint64_t static Flag.iCloudCleanup.getter()
{
  return 0x4364756F6C436924;
}

unint64_t sub_1000158A8()
{
  unint64_t result = Flag.Keyword.init(_:)(0x4364756F6C436924uLL, 0xEE0070756E61656CLL);
  if (v1)
  {
    static Flag.Keyword.iCloudCleanup = result;
    *(void *)algn_1007616F8 = v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Flag.Keyword.iCloudCleanup.getter()
{
  if (qword_100709D40 != -1) {
    swift_once();
  }
  uint64_t v0 = static Flag.Keyword.iCloudCleanup;
  swift_bridgeObjectRetain();
  return v0;
}

void *sub_10001595C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100015994(a1, a2, a3, a4, &qword_10070A190);
}

uint64_t sub_100015968(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000169CC(a1, a2, a3, a4, &qword_10070A0D0, &qword_100709E48);
}

void *sub_10001597C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000163B8(a1, a2, a3, a4, &qword_10070A0C0);
}

void *sub_100015988(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100015994(a1, a2, a3, a4, &qword_10070A0C8);
}

void *sub_100015994(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10000566C(a5);
      BOOL v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 29;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 2);
      Swift::Int v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      BOOL v11 = _swiftEmptyArrayStorage;
      Swift::Int v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= (void *)((char *)a4 + 4 * v9 + 32)) {
          memmove(v14, a4 + 4, 4 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001EE8C(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_100015AA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A0A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001BFE8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100015BB0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A098);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001C0F4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100015CD4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A100);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001C204(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100015DFC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100709F50);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001C5A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100015F0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A088);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001C898(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10001601C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A048);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001C698(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001612C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_10070A040, _s19UserInitiatedSearchVMa, _s19UserInitiatedSearchVMa);
}

void *sub_100016160(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000179F4(a1, a2, a3, a4, &qword_10070A028);
}

void *sub_100016174(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100015994(a1, a2, a3, a4, &qword_10070A050);
}

void *sub_100016180(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A0D8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001DD28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100016290(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A0E0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001DE1C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000163A0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000176DC(a1, a2, a3, a4, &qword_10070A018);
}

void *sub_1000163AC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000163B8(a1, a2, a3, a4, &qword_100709FB0);
}

void *sub_1000163B8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10000566C(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001E054(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000164D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_100709FC0, _s25MessageSectionsToDownloadVMa, _s25MessageSectionsToDownloadVMa);
}

uint64_t sub_10001650C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    Swift::Int v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  Swift::Int v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1005E2F10();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10001F770(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_10001678C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100709FB8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 192);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[24 * v8 + 4]) {
          memmove(v12, a4 + 4, 192 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001BBF8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000168B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100709FF8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001B63C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000169C0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10001848C(a1, a2, a3, a4, &qword_10070A010);
}

uint64_t sub_1000169CC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v13 = *(void *)(sub_10000566C(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_1005E2F10();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10000566C(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10001F344(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_100016C38(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100709F70);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 176);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[22 * v8 + 4]) {
          memmove(v12, a4 + 4, 176 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001BB04(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100016D64(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000169CC(a1, a2, a3, a4, &qword_10070A030, &qword_10070A038);
}

void *sub_100016D78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A148);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001B728(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100016E88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A020);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001ED94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100016FB0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100015994(a1, a2, a3, a4, &qword_100709F78);
}

void *sub_100016FBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A080);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001B81C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000170E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A070);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001EF78(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10001720C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A060);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001C78C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10001731C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A058);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 376);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[47 * v8 + 4]) {
          memmove(v12, a4 + 4, 376 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001F070(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100017448(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A078);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (void *)((char *)a4 + 4 * v8 + 32)) {
          memmove(v13, a4 + 4, 4 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001EE8C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100017558(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_100709F80, (uint64_t (*)(void))type metadata accessor for RunningTask, (uint64_t (*)(void))type metadata accessor for RunningTask);
}

uint64_t sub_10001758C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_100709F90, type metadata accessor for TaskHistory.Running, type metadata accessor for TaskHistory.Running);
}

void *sub_1000175C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100709FA0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001F164(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000176D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000176DC(a1, a2, a3, a4, &qword_10070A0E8);
}

void *sub_1000176DC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = a4[2];
    if (v8 <= v9) {
      int64_t v10 = a4[2];
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_10000566C(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * v12 - 64;
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + v9 + 32)) {
          memmove(v13, a4 + 4, v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001F688(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1000177D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A0F8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001F250(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000178E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A180);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001B63C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000179F4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10000566C(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v9 + 4]) {
          memmove(v13, a4 + 4, 40 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001DC34(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100017B20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_10070A120, type metadata accessor for FindMissingMessages.CommandID, type metadata accessor for FindMissingMessages.CommandID);
}

uint64_t sub_100017B54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_10070A1A8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
}

void *sub_100017B88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A150);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 240);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[30 * v8 + 4]) {
          memmove(v12, a4 + 4, 240 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      size_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001BA0C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100017CAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000169CC(a1, a2, a3, a4, &qword_10070A160, &qword_10070A168);
}

void *sub_100017CC0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A170);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001F49C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100017DD0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A130);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001B914(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100017EF8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000169CC(a1, a2, a3, a4, &qword_10070A110, &qword_10070A118);
}

void *sub_100017F0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A1A0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001F590(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100018034(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_10070A158, type metadata accessor for DownloadTask.CommandID, type metadata accessor for DownloadTask.CommandID);
}

uint64_t sub_100018068(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_10070A128, type metadata accessor for MessageMetadata, type metadata accessor for MessageMetadata);
}

uint64_t sub_10001809C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_10070A108, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa, (uint64_t (*)(void))_s20GrowWindowOfInterestV6ResultVMa);
}

void *sub_1000180D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A198);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001BCF0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000181F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_10070A138, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range, (uint64_t (*)(void))type metadata accessor for MessagesToRemoveHelper.Range);
}

void *sub_10001822C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A188);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001F8CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10001833C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A140);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001F9C0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001844C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10001650C(a1, a2, a3, a4, &qword_100709F88, type metadata accessor for TaskHistory.Previous, type metadata accessor for TaskHistory.Previous);
}

void *sub_100018480(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10001848C(a1, a2, a3, a4, &qword_100709F98);
}

void *sub_10001848C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10000566C(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 12);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + 12 * v9 + 32)) {
          memmove(v13, a4 + 4, 12 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001FAB4(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1000185AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_10070A0F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001ECA0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000186BC(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_1005E3410(a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1000C941C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1000187DC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v7 = *v3;
  sub_1005E33F0();
  sub_1005E3410(a3 | ((unint64_t)a3 << 32));
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = *(void *)(v7 + 48) + 16 * v10;
      if ((*(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned int *)(v12 + 8) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v13 = *(void *)v12;
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14 == *(void *)(a2 + 16))
        {
          if (v14) {
            BOOL v15 = v13 == a2;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15) {
            goto LABEL_22;
          }
          if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v14 == 1) {
              goto LABEL_22;
            }
            if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v14 == 2) {
                goto LABEL_22;
              }
              if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v14 == 3) {
                  goto LABEL_22;
                }
                if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_21;
      }
    }
    uint64_t v16 = (unsigned __int8 *)(v13 + 36);
    uint64_t v17 = v14 - 4;
    BOOL v18 = (unsigned __int8 *)(a2 + 36);
    while (v17)
    {
      int v20 = *v16++;
      int v19 = v20;
      int v21 = *v18++;
      --v17;
      if (v19 != v21) {
        goto LABEL_3;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(*v3 + 48) + 16 * v10;
    uint64_t v26 = *(void *)v25;
    LODWORD(v25) = *(_DWORD *)(v25 + 8);
    *(void *)a1 = v26;
    *(_DWORD *)(a1 + 8) = v25;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_21:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v23 = swift_bridgeObjectRetain();
    sub_1000C956C(v23, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v27;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(_DWORD *)(a1 + 8) = a3;
    return 1;
  }
}

uint64_t sub_1000189E4(void *a1, uint64_t a2, Swift::UInt a3)
{
  uint64_t v7 = *v3;
  sub_1005E33F0();
  sub_1005E3410(a3);
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
      if (v12[1] == a3)
      {
        uint64_t v13 = *v12;
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14 == *(void *)(a2 + 16))
        {
          if (v14) {
            BOOL v15 = v13 == a2;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15) {
            goto LABEL_22;
          }
          if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v14 == 1) {
              goto LABEL_22;
            }
            if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v14 == 2) {
                goto LABEL_22;
              }
              if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v14 == 3) {
                  goto LABEL_22;
                }
                if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_21;
      }
    }
    uint64_t v16 = (unsigned __int8 *)(v13 + 36);
    uint64_t v17 = v14 - 4;
    BOOL v18 = (unsigned __int8 *)(a2 + 36);
    while (v17)
    {
      int v20 = *v16++;
      int v19 = v20;
      int v21 = *v18++;
      --v17;
      if (v19 != v21) {
        goto LABEL_3;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    *a1 = v26;
    a1[1] = v27;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_21:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v23 = swift_bridgeObjectRetain();
    sub_1000C977C(v23, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
}

uint64_t sub_100018BD0(_DWORD *a1, uint64_t a2)
{
  return sub_100019E00(a1, a2, (void (*)(uint64_t, unint64_t, uint64_t))sub_1000C9974);
}

uint64_t sub_100018BE8(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  sub_1005E33F0();
  sub_1005E1CD0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v4;
    void *v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1000C9988(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    void *v4 = v29;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v11 = sub_1005E1CD0();
  uint64_t v13 = v12;
  if (v11 == sub_1005E1CD0() && v13 == v14)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_1005E3290();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = ~v9;
      do
      {
        unint64_t v10 = (v10 + 1) & v17;
        if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v18 = sub_1005E1CD0();
        uint64_t v20 = v19;
        if (v18 == sub_1005E1CD0() && v20 == v21) {
          goto LABEL_16;
        }
        char v23 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v23 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = (Swift::Int *)(*(void *)(*v4 + 48) + 16 * v10);
  Swift::Int v27 = v26[1];
  *a1 = *v26;
  a1[1] = v27;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_100018E3C(_DWORD *a1, uint64_t a2)
{
  return sub_100019E00(a1, a2, (void (*)(uint64_t, unint64_t, uint64_t))sub_1000C9BCC);
}

uint64_t sub_100018E54(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_1005E33F0();
  if (a3)
  {
    sub_1005E3410(0);
    sub_1005E1CD0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
  }
  Swift::Int v9 = sub_1005E3470();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  char v23 = a1;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v4;
    void *v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1000C9D3C(a2, a3, v11, isUniquelyReferenced_nonNull_native);
    void *v4 = v24;
    swift_bridgeObjectRelease();
    *char v23 = a2;
    v23[1] = a3;
    return 1;
  }
  uint64_t v12 = ~v10;
  while (1)
  {
    if (!*(void *)(*(void *)(v8 + 48) + 16 * v11 + 8))
    {
      if (!a3) {
        goto LABEL_19;
      }
      goto LABEL_7;
    }
    if (!a3) {
      goto LABEL_7;
    }
    uint64_t v13 = sub_1005E1CD0();
    uint64_t v15 = v14;
    if (v13 == sub_1005E1CD0() && v15 == v16) {
      break;
    }
    char v18 = sub_1005E3290();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_18;
    }
LABEL_7:
    unint64_t v11 = (v11 + 1) & v12;
    if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v21 = (Swift::Int *)(*(void *)(*v4 + 48) + 16 * v11);
  Swift::Int v22 = v21[1];
  *char v23 = *v21;
  v23[1] = v22;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_100019080(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_1005E3410(a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1000C9F4C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1000191A0(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_100008D24(a2, a3);
  sub_1005E08B0();
  sub_1000094D4(a2, a3);
  Swift::Int v9 = sub_1005E3470();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_40:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)__s1 = *v4;
    void *v4 = 0x8000000000000000;
    sub_100008D24(a2, a3);
    sub_1000CA09C(a2, a3, v11, isUniquelyReferenced_nonNull_native);
    void *v4 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v38 = ~v10;
  BOOL v13 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v37 = v13;
  uint64_t v36 = v8;
  uint64_t v35 = v8 + 56;
  while (2)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v11);
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    uint64_t v17 = 0;
    switch(v16 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v15), v15))
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
        }
        uint64_t v17 = HIDWORD(v15) - (int)v15;
LABEL_14:
        sub_100008D24(v15, v16);
        sub_100008D24(v15, v16);
        break;
      case 2uLL:
        uint64_t v19 = *(void *)(v15 + 16);
        uint64_t v18 = *(void *)(v15 + 24);
        uint64_t v17 = v18 - v19;
        if (!__OFSUB__(v18, v19)) {
          goto LABEL_14;
        }
        goto LABEL_44;
      case 3uLL:
        break;
      default:
        uint64_t v17 = BYTE6(v16);
        break;
    }
    uint64_t v20 = BYTE6(a3);
    switch(a3 >> 62)
    {
      case 1uLL:
        uint64_t v20 = HIDWORD(a2) - (int)a2;
        if (v37) {
          goto LABEL_45;
        }
        goto LABEL_19;
      case 2uLL:
        uint64_t v22 = *(void *)(a2 + 16);
        uint64_t v21 = *(void *)(a2 + 24);
        BOOL v23 = __OFSUB__(v21, v22);
        uint64_t v20 = v21 - v22;
        if (!v23) {
          goto LABEL_19;
        }
        goto LABEL_46;
      case 3uLL:
        if (v17) {
          goto LABEL_7;
        }
        goto LABEL_41;
      default:
LABEL_19:
        if (v17 != v20)
        {
LABEL_7:
          sub_1000094D4(v15, v16);
          sub_1000094D4(v15, v16);
LABEL_8:
          unint64_t v11 = (v11 + 1) & v38;
          if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v3;
            goto LABEL_40;
          }
          continue;
        }
        if (v17 >= 1)
        {
          switch(v16 >> 62)
          {
            case 1uLL:
              if (v15 >> 32 < (int)v15) {
                goto LABEL_47;
              }
              sub_100008D24(a2, a3);
              sub_100008D24(v15, v16);
              uint64_t v24 = sub_1005E0550();
              if (!v24) {
                goto LABEL_27;
              }
              uint64_t v25 = sub_1005E0580();
              if (__OFSUB__((int)v15, v25)) {
                goto LABEL_50;
              }
              v24 += (int)v15 - v25;
LABEL_27:
              sub_1005E0570();
              sub_1000260B8(v24, a2, a3, __s1);
              sub_1000094D4(v15, v16);
              break;
            case 2uLL:
              uint64_t v27 = *(void *)(v15 + 16);
              uint64_t v26 = *(void *)(v15 + 24);
              sub_100008D24(a2, a3);
              swift_retain();
              swift_retain();
              uint64_t v28 = sub_1005E0550();
              if (!v28) {
                goto LABEL_31;
              }
              uint64_t v29 = sub_1005E0580();
              if (__OFSUB__(v27, v29)) {
                goto LABEL_49;
              }
              v28 += v27 - v29;
LABEL_31:
              if (__OFSUB__(v26, v27)) {
                goto LABEL_48;
              }
              sub_1005E0570();
              sub_1000260B8(v28, a2, a3, __s1);
              swift_release();
              swift_release();
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              sub_100008D24(a2, a3);
              goto LABEL_36;
            default:
              *(void *)__s1 = v15;
              *(_WORD *)&__s1[8] = v16;
              __s1[10] = BYTE2(v16);
              __s1[11] = BYTE3(v16);
              __s1[12] = BYTE4(v16);
              __s1[13] = BYTE5(v16);
              sub_100008D24(a2, a3);
LABEL_36:
              sub_1000260B8((uint64_t)__s1, a2, a3, &v39);
              sub_1000094D4(a2, a3);
              sub_1000094D4(v15, v16);
              sub_1000094D4(v15, v16);
              if (v39) {
                goto LABEL_42;
              }
              goto LABEL_8;
          }
          sub_1000094D4(a2, a3);
          sub_1000094D4(v15, v16);
          sub_1000094D4(v15, v16);
          uint64_t v12 = v35;
          uint64_t v8 = v36;
          if (__s1[0]) {
            goto LABEL_42;
          }
          goto LABEL_8;
        }
LABEL_41:
        sub_1000094D4(v15, v16);
        sub_1000094D4(v15, v16);
LABEL_42:
        swift_bridgeObjectRelease();
        sub_1000094D4(a2, a3);
        uint64_t v32 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v11);
        uint64_t v33 = *v32;
        unint64_t v34 = v32[1];
        *a1 = *v32;
        a1[1] = v34;
        sub_100008D24(v33, v34);
        return 0;
    }
  }
}

uint64_t sub_100019734(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  Swift::Int v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v13 = *v2;
    }
    else {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v14 = sub_1005E2B60();
    swift_release();
    if (v14)
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v35 = v14;
      swift_unknownObjectRetain();
      sub_10000566C(&qword_100709FC8);
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1005E2B50();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_100019F30(v13, result + 1);
    uint64_t v36 = (uint64_t)v29;
    if (v29[3] <= v29[2])
    {
      swift_retain();
      sub_1000C83B4();
      uint64_t v30 = v36;
    }
    else
    {
      uint64_t v30 = (uint64_t)v29;
      swift_retain();
    }
    sub_10001A388(a2, v30);
    *uint64_t v3 = v30;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  Swift::Int v31 = v2;
  uint64_t v33 = a1;
  sub_1005E33F0();
  uint64_t v16 = *(void *)(*(void *)a2 + 96);
  uint64_t v32 = a2;
  uint64_t v17 = a2 + v16;
  swift_beginAccess();
  sub_10001FCC0(v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  swift_bridgeObjectRetain();
  sub_10018A5EC((uint64_t)&v36);
  sub_10001FD28((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  Swift::Int v18 = sub_1005E3470();
  uint64_t v19 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v20 = v18 & ~v19;
  if (((*(void *)(v12 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v25 = v31;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = *v25;
    *uint64_t v25 = 0x8000000000000000;
    uint64_t v27 = v32;
    uint64_t v28 = swift_retain();
    sub_1000CA604(v28, v20, isUniquelyReferenced_nonNull_native);
    *uint64_t v25 = v34;
    swift_bridgeObjectRelease();
    uint64_t *v33 = v27;
    return 1;
  }
  uint64_t v21 = ~v19;
  while (1)
  {
    uint64_t v22 = *(void *)(*(void *)(v12 + 48) + 8 * v20);
    uint64_t v23 = v22 + *(void *)(*(void *)v22 + 96);
    swift_beginAccess();
    sub_10001FCC0(v23, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10001FCC0(v17, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    swift_retain();
    char v24 = sub_1001961B8((uint64_t)v11, (uint64_t)v9);
    sub_10001FD28((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10001FD28((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    swift_release();
    if (v24) {
      break;
    }
    unint64_t v20 = (v20 + 1) & v21;
    if (((*(void *)(v12 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t *v33 = *(void *)(*(void *)(*v31 + 48) + 8 * v20);
  swift_retain();
  return 0;
}

uint64_t sub_100019B30(_DWORD *a1, uint64_t a2)
{
  return sub_100019E00(a1, a2, (void (*)(uint64_t, unint64_t, uint64_t))sub_1000CA8D8);
}

uint64_t sub_100019B48(_DWORD *a1, uint64_t a2)
{
  return sub_100019E00(a1, a2, (void (*)(uint64_t, unint64_t, uint64_t))sub_1000CA8EC);
}

uint64_t sub_100019B60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  Swift::Int v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_10018A5EC((uint64_t)v20);
  Swift::Int v11 = sub_1005E3470();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_10001FCC0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      char v16 = sub_1001961B8((uint64_t)v9, a2);
      sub_10001FD28((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_10001FD28(a2, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10001FCC0(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10001FCC0(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000CA900((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20[0];
    swift_bridgeObjectRelease();
    sub_10001FEC4(a2, a1);
    return 1;
  }
}

uint64_t sub_100019DD0(_DWORD *a1, uint64_t a2)
{
  return sub_100019E00(a1, a2, (void (*)(uint64_t, unint64_t, uint64_t))sub_1000CAB50);
}

uint64_t sub_100019DE8(_DWORD *a1, uint64_t a2)
{
  return sub_100019E00(a1, a2, (void (*)(uint64_t, unint64_t, uint64_t))sub_1000CAB64);
}

uint64_t sub_100019E00(_DWORD *a1, uint64_t a2, void (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v7 = *v3;
  sub_1005E33F0();
  sub_1005E3440(a2);
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    a3(a2, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(_DWORD *)(v11 + 4 * v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v11 + 4 * v10) != a2);
  }
  uint64_t result = 0;
  LODWORD(a2) = *(_DWORD *)(*(void *)(*v3 + 48) + 4 * v10);
LABEL_8:
  *a1 = a2;
  return result;
}

void *sub_100019F30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v3 - 8);
  uint64_t v30 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v30 - v8;
  if (a2)
  {
    sub_10000566C(&qword_100709FD0);
    uint64_t v10 = sub_1005E2C20();
    uint64_t v33 = v10;
    sub_1005E2B10();
    for (uint64_t i = sub_1005E2B80(); i; uint64_t i = sub_1005E2B80())
    {
      v32[0] = i;
      sub_10000566C(&qword_100709FC8);
      swift_dynamicCast();
      if (*(void *)(v10 + 24) <= *(void *)(v10 + 16))
      {
        sub_1000C83B4();
        uint64_t v10 = v33;
      }
      uint64_t v13 = v32[9];
      sub_1005E33F0();
      uint64_t v14 = v13 + *(void *)(*(void *)v13 + 96);
      swift_beginAccess();
      sub_10001FCC0(v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10001FCC0((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v16 = *((unsigned int *)v7 + 2);
          uint64_t v17 = *((void *)v7 + 2);
          sub_1005E3410(2uLL);
          sub_1005E3410(v16 | (v16 << 32));
          sub_1000D3538((uint64_t)v32, v17);
          swift_bridgeObjectRelease();
          goto LABEL_12;
        case 2u:
          uint64_t v18 = *((unsigned int *)v7 + 2);
          uint64_t v19 = *((void *)v7 + 2);
          sub_1005E3410(3uLL);
          sub_1005E3410(v18 | (v18 << 32));
          sub_1000D3378((uint64_t)v32, v19);
          swift_bridgeObjectRelease();
LABEL_12:
          swift_bridgeObjectRelease();
          break;
        case 3u:
          sub_1005E3410(1uLL);
          break;
        default:
          uint64_t v15 = v30;
          sub_10001FDF0((uint64_t)v7, v30, &qword_100709E38);
          sub_1005E3410(0);
          sub_10000566C(&qword_100709E60);
          sub_10001FBA4();
          sub_1005E19C0();
          sub_100007A48(v15, &qword_100709E38);
          break;
      }
      sub_10001FD28((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      Swift::Int v20 = sub_1005E3470();
      uint64_t v21 = v10 + 56;
      uint64_t v22 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v23 = v20 & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v10 + 56 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 56 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            JUMPOUT(0x10001A378);
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v21 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v21 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v10 + 48) + 8 * v12) = v13;
      ++*(void *)(v10 + 16);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return &_swiftEmptySetSingleton;
  }
  return (void *)v10;
}

unint64_t sub_10001A388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005E33F0();
  uint64_t v7 = a1 + *(void *)(*(void *)a1 + 96);
  swift_beginAccess();
  sub_10001FCC0(v7, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_10018A5EC((uint64_t)v10);
  sub_10001FD28((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_1005E3470();
  unint64_t result = sub_1005E2AF0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_10001A4D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009F438(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A4F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009F5A0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A514(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009F728(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A534(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009F734(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A554(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009F740(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A574(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009F74C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A594(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009F8B8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A5B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009FA40(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A5D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009FA4C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A5F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009FBB8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A614(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009FE78(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A634(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009FFD8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A654(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009FFE4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A674(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009FFF0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A694(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009FFFC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A6B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0158(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A6D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A02C4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001A6F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A02D8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001A714(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A02F8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A734(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A030C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001A754(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A04B4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001A774(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0654(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A794(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0660(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A7B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A066C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A7D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0678(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001A7F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0804(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A814(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0818(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001A834(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A09A0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A854(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0B24(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A874(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0C80(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A894(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A0F58(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A8B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A10EC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001A8D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A1294(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A8F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A141C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A914(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A157C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001A934(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A1708(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A954(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A1874(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A974(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A19F0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A994(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A1B5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A9B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A1CC8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A9D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A1E50(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001A9F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A1FB0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AA14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2110(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AA34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2130(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AA54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2150(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AA74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A215C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AA94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2168(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AAB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A22D0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AAD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A22DC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AAF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A22F0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AB14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2498(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AB34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A24A4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AB54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A24B0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AB74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A24C4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AB94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A24E4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001ABB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A265C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001ABD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2668(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001ABF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2674(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AC14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2688(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AC34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2848(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AC54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2868(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AC74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2874(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AC94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2880(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001ACB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2AE8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001ACD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2AF4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001ACF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2C54(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AD14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2C60(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AD34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2C6C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AD54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2C78(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AD74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2C8C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AD94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2C98(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001ADB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2CA4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001ADD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2CB0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001ADF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2CBC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AE14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2CC8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AE34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2CD4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AE54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2CE0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AE74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2E80(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AE94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A2FF8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AEB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A3004(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AED4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A3010(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AEF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A301C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AF14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A3028(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AF34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A3034(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AF54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A3198(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AF74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A33EC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AF94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A354C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AFB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A36E8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10001AFD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A3890(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10001AFF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A3A08(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

void sub_10001B014(uint64_t a1, uint64_t a2)
{
  sub_1005E3470();
  uint64_t v20 = a2;
  Swift::UInt v4 = 0;
  int64_t v5 = 0;
  uint64_t v19 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v5 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1)) {
      goto LABEL_19;
    }
    if (v5 >= v9)
    {
LABEL_17:
      sub_1005E3410(v4);
      return;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v5);
    if (!v17) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(v20 + 48) + 24 * v11;
    uint64_t v13 = *(unsigned int *)(v12 + 16);
    uint64_t v14 = *(unsigned __int16 *)(v12 + 20);
    uint64_t v15 = *(unsigned __int8 *)(v12 + 22);
    sub_1005E33F0();
    unint64_t v2 = v2 & 0xFF00000000000000 | v13 | (v14 << 32) | (v15 << 48);
    SocketAddressError.FailedToParseIPByteBuffer.hash(into:)();
    v4 ^= sub_1005E3470();
  }
  int64_t v18 = v5 + 1;
  if (v5 + 1 >= v9) {
    goto LABEL_17;
  }
  unint64_t v17 = *(void *)(v19 + 8 * v18);
  if (v17)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v5 >= v9) {
      goto LABEL_17;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v5);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_10001B1B0(uint64_t a1, uint64_t a2)
{
  sub_1005E3470();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_19;
    }
    if (v9 >= v7)
    {
LABEL_17:
      swift_release();
      sub_1005E3410(v8);
      return;
    }
    uint64_t v12 = *(void *)(v3 + 8 * v9);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v12 - 1) & v12;
LABEL_5:
    sub_1005E33F0();
    sub_1005E1CD0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    Swift::Int v10 = sub_1005E3470();
    swift_bridgeObjectRelease();
    v8 ^= v10;
  }
  int64_t v13 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    ++v9;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v9 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v3 + 8 * v9);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t sub_10001B364(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  sub_1005E33F0();
  sub_1005E3410(0);
  unint64_t v2 = sub_1005E3470() & ~(-1 << *(unsigned char *)(a1 + 32));
  return (*(void *)(a1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v2) & 1;
}

uint64_t _s13IMAP2Behavior11FlagEncoderV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (!v4) {
      return 0;
    }
    uint64_t v5 = sub_1005E1CD0();
    uint64_t v7 = v6;
    if (v5 == sub_1005E1CD0() && v7 == v8)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v10 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v10 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v4)
  {
    return 0;
  }
  uint64_t v12 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (!v12) {
      return 0;
    }
    uint64_t v13 = sub_1005E1CD0();
    uint64_t v15 = v14;
    if (v13 == sub_1005E1CD0() && v15 == v16)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v17 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v17 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v12)
  {
    return 0;
  }
  if ((sub_10007A22C(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) == 0
    || (sub_10007A22C(*(void *)(a1 + 40), *(void *)(a2 + 40)) & 1) == 0
    || (sub_10007A22C(*(void *)(a1 + 48), *(void *)(a2 + 48)) & 1) == 0
    || (sub_10007A22C(*(void *)(a1 + 56), *(void *)(a2 + 56)) & 1) == 0
    || (sub_10007A22C(*(void *)(a1 + 64), *(void *)(a2 + 64)) & 1) == 0
    || (sub_10007A22C(*(void *)(a1 + 72), *(void *)(a2 + 72)) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 80) ^ *(unsigned __int8 *)(a2 + 80)) & 1) != 0)
  {
    return 0;
  }
  uint64_t v18 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v18)
    {
      uint64_t v19 = sub_1005E1CD0();
      uint64_t v21 = v20;
      if (v19 == sub_1005E1CD0() && v21 == v22)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v23 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23) {
        return 1;
      }
    }
  }
  else if (!v18)
  {
    return 1;
  }
  return 0;
}

char *sub_10001B63C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001B728(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001B81C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001B914(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001BA0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 240 * a1 + 32;
    unint64_t v6 = a3 + 240 * v4;
    if (v5 >= v6 || v5 + 240 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001BB04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 176 * a1 + 32;
    unint64_t v6 = a3 + 176 * v4;
    if (v5 >= v6 || v5 + 176 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001BBF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 192 * a1 + 32;
    unint64_t v6 = a3 + 192 * v4;
    if (v5 >= v6 || v5 + 192 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001BCF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

Swift::Int sub_10001BDE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_10070A0B8);
    uint64_t v3 = sub_1005E2C30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v6 + 16 * v4);
      uint64_t v8 = *v7;
      uint64_t v9 = *((unsigned int *)v7 + 2);
      sub_1005E33F0();
      sub_1005E3410(v9 | (v9 << 32));
      Swift::Int result = sub_1005E3470();
      uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v12 = result & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
      uint64_t v15 = 1 << v12;
      uint64_t v16 = *(void *)(v3 + 48);
      if (((1 << v12) & v14) != 0)
      {
        uint64_t v17 = ~v11;
        while (1)
        {
          uint64_t v18 = (uint64_t *)(v16 + 16 * v12);
          if ((*((unsigned int *)v18 + 2) | ((unint64_t)*((unsigned int *)v18 + 2) << 32)) == (v9 | (v9 << 32)))
          {
            uint64_t v19 = *v18;
            uint64_t v20 = *(void *)(v19 + 16);
            if (v20 == *(void *)(v8 + 16))
            {
              if (v20) {
                BOOL v21 = v19 == v8;
              }
              else {
                BOOL v21 = 1;
              }
              if (v21) {
                goto LABEL_3;
              }
              if (*(unsigned __int8 *)(v19 + 32) == *(unsigned __int8 *)(v8 + 32))
              {
                if (v20 == 1) {
                  goto LABEL_3;
                }
                if (*(unsigned __int8 *)(v19 + 33) == *(unsigned __int8 *)(v8 + 33))
                {
                  if (v20 == 2) {
                    goto LABEL_3;
                  }
                  if (*(unsigned __int8 *)(v19 + 34) == *(unsigned __int8 *)(v8 + 34))
                  {
                    if (v20 == 3) {
                      goto LABEL_3;
                    }
                    if (*(unsigned __int8 *)(v19 + 35) == *(unsigned __int8 *)(v8 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_6:
          unint64_t v12 = (v12 + 1) & v17;
          unint64_t v13 = v12 >> 6;
          uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
          uint64_t v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0) {
            goto LABEL_24;
          }
        }
        uint64_t v22 = (unsigned __int8 *)(v19 + 36);
        uint64_t v23 = v20 - 4;
        unint64_t v24 = (unsigned __int8 *)(v8 + 36);
        while (v23)
        {
          int v26 = *v22++;
          int v25 = v26;
          int v27 = *v24++;
          --v23;
          if (v25 != v27) {
            goto LABEL_6;
          }
        }
      }
      else
      {
LABEL_24:
        *(void *)(v5 + 8 * v13) = v15 | v14;
        uint64_t v28 = v16 + 16 * v12;
        *(void *)uint64_t v28 = v8;
        *(_DWORD *)(v28 + 8) = v9;
        uint64_t v29 = *(void *)(v3 + 16);
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v31;
        swift_bridgeObjectRetain();
      }
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_10001BFE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10000566C(&qword_10070A0B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001C0F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10000566C(&qword_10070A0A0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001C204(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

Swift::Int sub_10001C2FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_10070A090);
    uint64_t v3 = sub_1005E2C30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v32 = v1;
    uint64_t v33 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v33 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1005E33F0();
      sub_1005E1CD0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      Swift::Int result = sub_1005E3470();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_1005E1CD0();
        uint64_t v17 = v16;
        if (v15 == sub_1005E1CD0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:
          swift_bridgeObjectRelease();
          uint64_t v1 = v32;
          goto LABEL_5;
        }
        char v20 = sub_1005E3290();
        swift_bridgeObjectRelease();
        Swift::Int result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_1005E1CD0();
          uint64_t v24 = v23;
          if (v22 == sub_1005E1CD0() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_1005E3290();
          swift_bridgeObjectRelease();
          Swift::Int result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
        uint64_t v1 = v32;
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v28 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v28 = v8;
      v28[1] = v7;
      uint64_t v29 = *(void *)(v3 + 16);
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v31;
LABEL_5:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_10001C548()
{
  unint64_t result = qword_100709F60;
  if (!qword_100709F60)
  {
    sub_10000744C(&qword_100709F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709F60);
  }
  return result;
}

uint64_t sub_10001C5A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001C698(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001C78C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10000566C(&qword_10070A068);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001C898(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001C98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16)
    && (sub_1005E33F0(),
        sub_1005E3410(1uLL),
        Swift::Int v3 = sub_1005E3470(),
        uint64_t v4 = -1 << *(unsigned char *)(a1 + 32),
        unint64_t v5 = v3 & ~v4,
        ((*(void *)(a1 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 16 * v5 + 8);
      char v8 = v7 == 0;
      if (!v7) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(a1 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  else
  {
    char v8 = 0;
  }
  uint64_t v9 = (uint64_t *)Flag.draft.unsafeMutableAddressor();
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  swift_bridgeObjectRetain();
  LOBYTE(v10) = sub_100012800(v10, v11, a1, v8);
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v112 = v9[1];
    uint64_t v113 = *v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v112 = 0;
    uint64_t v113 = 0;
  }
  unint64_t v12 = (uint64_t *)Flag.flagged.unsafeMutableAddressor();
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  swift_bridgeObjectRetain();
  LOBYTE(v13) = sub_100012800(v13, v14, a1, v8);
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v110 = v12[1];
    uint64_t v111 = *v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v110 = 0;
    uint64_t v111 = 0;
  }
  uint64_t v15 = (uint64_t *)Flag.Keyword.forwarded.unsafeMutableAddressor();
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  swift_bridgeObjectRetain();
  LOBYTE(v16) = sub_100012800(v16, v17, a1, v8);
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v19 = *v15;
    uint64_t v18 = v15[1];
    swift_bridgeObjectRetain();
    char v20 = sub_100015DFC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v22 = v20[2];
    unint64_t v21 = v20[3];
    if (v22 >= v21 >> 1) {
      char v20 = sub_100015DFC((void *)(v21 > 1), v22 + 1, 1, v20);
    }
    v20[2] = v22 + 1;
    uint64_t v23 = &v20[2 * v22];
    v23[4] = v19;
    v23[5] = v18;
  }
  else
  {
    char v20 = _swiftEmptyArrayStorage;
  }
  uint64_t v24 = (uint64_t *)Flag.Keyword.unregistered_forwarded.unsafeMutableAddressor();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  swift_bridgeObjectRetain();
  LOBYTE(v25) = sub_10001242C(v25, v26, a1);
  swift_bridgeObjectRelease();
  if (v25)
  {
    uint64_t v28 = *v24;
    uint64_t v27 = v24[1];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v20 = sub_100015DFC(0, v20[2] + 1, 1, v20);
    }
    unint64_t v30 = v20[2];
    unint64_t v29 = v20[3];
    if (v30 >= v29 >> 1) {
      char v20 = sub_100015DFC((void *)(v29 > 1), v30 + 1, 1, v20);
    }
    v20[2] = v30 + 1;
    uint64_t v31 = &v20[2 * v30];
    v31[4] = v28;
    v31[5] = v27;
  }
  uint64_t v32 = *v24;
  uint64_t v33 = v24[1];
  swift_bridgeObjectRetain();
  LOBYTE(v32) = sub_1000125C0(v32, v33, a1, v8);
  swift_bridgeObjectRelease();
  if (v32)
  {
    sub_10000566C(&qword_100709F50);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1005F6670;
    uint64_t v35 = v24[1];
    *(void *)(v34 + 32) = *v24;
    *(void *)(v34 + 40) = v35;
    Swift::Int v108 = (void *)v34;
    swift_bridgeObjectRetain();
  }
  else
  {
    Swift::Int v108 = _swiftEmptyArrayStorage;
  }
  uint64_t v36 = (uint64_t *)Flag.Keyword.unregistered_redirected.unsafeMutableAddressor();
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  swift_bridgeObjectRetain();
  LOBYTE(v37) = sub_100012800(v37, v38, a1, v8);
  swift_bridgeObjectRelease();
  if (v37)
  {
    sub_10000566C(&qword_100709F50);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1005F6670;
    uint64_t v40 = v36[1];
    *(void *)(v39 + 32) = *v36;
    *(void *)(v39 + 40) = v40;
    Swift::Int v107 = (void *)v39;
    swift_bridgeObjectRetain();
  }
  else
  {
    Swift::Int v107 = _swiftEmptyArrayStorage;
  }
  uint64_t v41 = (uint64_t *)Flag.Keyword.junk.unsafeMutableAddressor();
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  swift_bridgeObjectRetain();
  LOBYTE(v42) = sub_100012800(v42, v43, a1, v8);
  swift_bridgeObjectRelease();
  if (v42)
  {
    uint64_t v45 = *v41;
    uint64_t v44 = v41[1];
    swift_bridgeObjectRetain();
    Swift::Int v46 = sub_100015DFC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v48 = v46[2];
    unint64_t v47 = v46[3];
    if (v48 >= v47 >> 1) {
      Swift::Int v46 = sub_100015DFC((void *)(v47 > 1), v48 + 1, 1, v46);
    }
    v46[2] = v48 + 1;
    uint64_t v49 = &v46[2 * v48];
    v49[4] = v45;
    v49[5] = v44;
  }
  else
  {
    Swift::Int v46 = _swiftEmptyArrayStorage;
  }
  int64_t v50 = (uint64_t *)Flag.Keyword.unregistered_junk.unsafeMutableAddressor();
  uint64_t v51 = *v50;
  uint64_t v52 = v50[1];
  swift_bridgeObjectRetain();
  LOBYTE(v51) = sub_10001242C(v51, v52, a1);
  swift_bridgeObjectRelease();
  if (v51)
  {
    uint64_t v54 = *v50;
    uint64_t v53 = v50[1];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::Int v46 = sub_100015DFC(0, v46[2] + 1, 1, v46);
    }
    unint64_t v56 = v46[2];
    unint64_t v55 = v46[3];
    if (v56 >= v55 >> 1) {
      Swift::Int v46 = sub_100015DFC((void *)(v55 > 1), v56 + 1, 1, v46);
    }
    v46[2] = v56 + 1;
    uint64_t v57 = &v46[2 * v56];
    v57[4] = v54;
    v57[5] = v53;
  }
  Swift::Int v58 = (uint64_t *)Flag.Keyword.notJunk.unsafeMutableAddressor();
  uint64_t v59 = *v58;
  uint64_t v60 = v58[1];
  swift_bridgeObjectRetain();
  LOBYTE(v59) = sub_100012800(v59, v60, a1, v8);
  swift_bridgeObjectRelease();
  if (v59)
  {
    uint64_t v62 = *v58;
    uint64_t v61 = v58[1];
    swift_bridgeObjectRetain();
    Swift::Int v63 = sub_100015DFC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v65 = v63[2];
    unint64_t v64 = v63[3];
    if (v65 >= v64 >> 1) {
      Swift::Int v63 = sub_100015DFC((void *)(v64 > 1), v65 + 1, 1, v63);
    }
    v63[2] = v65 + 1;
    uint64_t v66 = &v63[2 * v65];
    v66[4] = v62;
    v66[5] = v61;
  }
  else
  {
    Swift::Int v63 = _swiftEmptyArrayStorage;
  }
  uint64_t v67 = (uint64_t *)Flag.Keyword.unregistered_notJunk.unsafeMutableAddressor();
  uint64_t v68 = *v67;
  uint64_t v69 = v67[1];
  swift_bridgeObjectRetain();
  LOBYTE(v68) = sub_10001242C(v68, v69, a1);
  swift_bridgeObjectRelease();
  Swift::Int v106 = v46;
  if (v68)
  {
    uint64_t v70 = *v67;
    uint64_t v71 = v67[1];
    swift_bridgeObjectRetain();
    char v72 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::Int v63 = sub_100015DFC(0, v63[2] + 1, 1, v63);
    }
    unint64_t v74 = v63[2];
    unint64_t v73 = v63[3];
    if (v74 >= v73 >> 1) {
      Swift::Int v63 = sub_100015DFC((void *)(v73 > 1), v74 + 1, 1, v63);
    }
    v63[2] = v74 + 1;
    Swift::Int v75 = &v63[2 * v74];
    v75[4] = v70;
    v75[5] = v71;
    char v20 = v72;
    Swift::Int v46 = v106;
  }
  uint64_t v76 = *v50;
  uint64_t v77 = v50[1];
  swift_bridgeObjectRetain();
  LOBYTE(v76) = sub_1000125C0(v76, v77, a1, v8);
  swift_bridgeObjectRelease();
  if (v76)
  {
    Swift::Int v78 = v20;
    uint64_t v79 = *v50;
    uint64_t v80 = v50[1];
    swift_bridgeObjectRetain();
    uint64_t v81 = sub_100015DFC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v83 = v81[2];
    unint64_t v82 = v81[3];
    if (v83 >= v82 >> 1) {
      uint64_t v81 = sub_100015DFC((void *)(v82 > 1), v83 + 1, 1, v81);
    }
    v81[2] = v83 + 1;
    Swift::Int v84 = &v81[2 * v83];
    v84[4] = v79;
    v84[5] = v80;
    char v20 = v78;
    Swift::Int v46 = v106;
  }
  else
  {
    uint64_t v81 = _swiftEmptyArrayStorage;
  }
  uint64_t v85 = *v67;
  uint64_t v86 = v67[1];
  swift_bridgeObjectRetain();
  LOBYTE(v85) = sub_1000125C0(v85, v86, a1, v8);
  swift_bridgeObjectRelease();
  if (v85)
  {
    uint64_t v88 = *v67;
    uint64_t v87 = v67[1];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v81 = sub_100015DFC(0, v81[2] + 1, 1, v81);
    }
    unint64_t v90 = v81[2];
    unint64_t v89 = v81[3];
    if (v90 >= v89 >> 1) {
      uint64_t v81 = sub_100015DFC((void *)(v89 > 1), v90 + 1, 1, v81);
    }
    v81[2] = v90 + 1;
    BOOL v91 = &v81[2 * v90];
    v91[4] = v88;
    v91[5] = v87;
  }
  if (v8)
  {
    char v92 = 1;
  }
  else
  {
    Swift::Int v93 = (uint64_t *)Flag.Keyword.colorBit0.unsafeMutableAddressor();
    uint64_t v94 = *v93;
    uint64_t v95 = v93[1];
    swift_bridgeObjectRetain();
    LOBYTE(v94) = sub_10001242C(v94, v95, a1);
    swift_bridgeObjectRelease();
    if ((v94 & 1) != 0
      && (Swift::Int v96 = (uint64_t *)Flag.Keyword.colorBit1.unsafeMutableAddressor(),
          uint64_t v97 = *v96,
          uint64_t v98 = v96[1],
          swift_bridgeObjectRetain(),
          LOBYTE(v97) = sub_10001242C(v97, v98, a1),
          swift_bridgeObjectRelease(),
          (v97 & 1) != 0))
    {
      Swift::Int v99 = (uint64_t *)Flag.Keyword.colorBit2.unsafeMutableAddressor();
      uint64_t v100 = *v99;
      uint64_t v101 = v99[1];
      swift_bridgeObjectRetain();
      char v92 = sub_10001242C(v100, v101, a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v92 = 0;
    }
  }
  char v102 = sub_100012800(0x4364756F6C436924, 0xEE0070756E61656CLL, a1, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v102) {
    uint64_t v104 = 0x4364756F6C436924;
  }
  else {
    uint64_t v104 = 0;
  }
  if (v102) {
    unint64_t v105 = 0xEE0070756E61656CLL;
  }
  else {
    unint64_t v105 = 0;
  }
  *(void *)a2 = v113;
  *(void *)(a2 + 8) = v112;
  *(void *)(a2 + 16) = v111;
  *(void *)(a2 + 24) = v110;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v107;
  *(void *)(a2 + 48) = v108;
  *(void *)(a2 + 56) = v46;
  *(void *)(a2 + 64) = v63;
  *(void *)(a2 + 72) = v81;
  *(unsigned char *)(a2 + 80) = v92 & 1;
  *(void *)(a2 + 88) = v104;
  *(void *)(a2 + 96) = v105;
  return result;
}

unint64_t sub_10001D28C(uint64_t a1)
{
  if (*(void *)(a1 + 16)
    && (sub_1005E33F0(),
        sub_1005E3410(1uLL),
        Swift::Int v2 = sub_1005E3470(),
        uint64_t v3 = -1 << *(unsigned char *)(a1 + 32),
        unint64_t v4 = v2 & ~v3,
        ((*(void *)(a1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0))
  {
    uint64_t v5 = ~v3;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 16 * v4 + 8);
      char v7 = v6 == 0;
      if (!v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(a1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  else
  {
    char v7 = 0;
  }
  char v8 = (uint64_t *)Flag.Keyword.forwarded.unsafeMutableAddressor();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  swift_bridgeObjectRetain();
  char v11 = sub_100012800(v9, v10, a1, v7);
  swift_bridgeObjectRelease();
  unint64_t v12 = (uint64_t *)Flag.Keyword.unregistered_redirected.unsafeMutableAddressor();
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  swift_bridgeObjectRetain();
  char v15 = sub_100012800(v13, v14, a1, v7);
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)Flag.Keyword.junk.unsafeMutableAddressor();
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  swift_bridgeObjectRetain();
  LOBYTE(v17) = sub_100012800(v17, v18, a1, v7);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v19 = (uint64_t *)Flag.Keyword.notJunk.unsafeMutableAddressor();
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_bridgeObjectRetain();
    LOBYTE(v20) = sub_100012800(v20, v21, a1, v7);
    swift_bridgeObjectRelease();
    if (v20) {
      uint64_t v22 = 0x10000;
    }
    else {
      uint64_t v22 = 0;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v23 = (uint64_t *)Flag.Keyword.colorBit0.unsafeMutableAddressor();
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  swift_bridgeObjectRetain();
  LOBYTE(v24) = sub_100012800(v24, v25, a1, v7);
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0
    && (uint64_t v26 = (uint64_t *)Flag.Keyword.colorBit1.unsafeMutableAddressor(),
        uint64_t v27 = *v26,
        uint64_t v28 = v26[1],
        swift_bridgeObjectRetain(),
        LOBYTE(v27) = sub_100012800(v27, v28, a1, v7),
        swift_bridgeObjectRelease(),
        (v27 & 1) != 0))
  {
    unint64_t v29 = (uint64_t *)Flag.Keyword.colorBit2.unsafeMutableAddressor();
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    swift_bridgeObjectRetain();
    LOBYTE(v30) = sub_100012800(v30, v31, a1, v7);
    swift_bridgeObjectRelease();
    if (v30) {
      uint64_t v32 = 0x1000000;
    }
    else {
      uint64_t v32 = 0;
    }
  }
  else
  {
    uint64_t v32 = 0;
  }
  if (qword_100709D40 != -1) {
    swift_once();
  }
  char v33 = sub_100012800(static Flag.Keyword.iCloudCleanup, *(uint64_t *)algn_1007616F8, a1, v7);
  uint64_t v34 = &_mh_execute_header;
  if ((v33 & 1) == 0) {
    uint64_t v34 = 0;
  }
  uint64_t v35 = 256;
  if ((v15 & 1) == 0) {
    uint64_t v35 = 0;
  }
  return v35 & 0xFFFFFFFFFFFFFFFELL | v11 & 1 | v22 | v32 | (unint64_t)v34;
}

uint64_t sub_10001D550(uint64_t a1)
{
  return a1;
}

unint64_t sub_10001D580()
{
  unint64_t result = qword_100709F68;
  if (!qword_100709F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709F68);
  }
  return result;
}

uint64_t destroy for FlagEncoder()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FlagEncoder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FlagEncoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FlagEncoder(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FlagEncoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlagEncoder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlagEncoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagEncoder()
{
  return &type metadata for FlagEncoder;
}

uint64_t initializeBufferWithCopyOfBuffer for FlagDecoder(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FlagDecoder(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[5]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FlagDecoder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagDecoder()
{
  return &type metadata for FlagDecoder;
}

uint64_t destroy for FlagUpdatesToBeSent()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s13IMAP2Behavior19FlagUpdatesToBeSentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FlagUpdatesToBeSent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FlagUpdatesToBeSent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for FlagUpdatesToBeSent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpaqueMailboxID(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpaqueMailboxID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagUpdatesToBeSent()
{
  return &type metadata for FlagUpdatesToBeSent;
}

uint64_t sub_10001DC34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001DD28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001DE1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

Swift::Int sub_10001DF10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_100709FA8);
    uint64_t v3 = sub_1005E2C30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      sub_1005E33F0();
      sub_1005E3410(v7);
      Swift::Int result = sub_1005E3470();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

char *sub_10001E054(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    Swift::UInt v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  Swift::Int result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

void *sub_10001E144(unint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100709FE8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v93 = (uint64_t)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v84 = (uint64_t)&v83 - v8;
  uint64_t v9 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v99 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v98 = (uint64_t)&v83 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v97 = (uint64_t)&v83 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v83 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v83 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v94 = (uint64_t)&v83 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v83 - v24;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_10000566C(&qword_100709FD0);
    uint64_t v26 = (void *)sub_1005E2C30();
    goto LABEL_6;
  }
  uint64_t v26 = &_swiftEmptySetSingleton;
LABEL_6:
  Swift::Int v103 = v26;
  if (!(a1 >> 62))
  {
    uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v28) {
      return v26;
    }
LABEL_10:
    uint64_t v104 = (char *)(v26 + 7);
    unint64_t v91 = a1 & 0xC000000000000001;
    uint64_t v86 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v85 = a1 + 32;
    unint64_t v90 = a1;
    uint64_t v100 = v2;
    uint64_t v88 = v28;
    unint64_t v29 = 0;
    unint64_t v89 = v25;
    char v92 = v21;
    while (1)
    {
      if (v91)
      {
        uint64_t v96 = sub_1005E2CF0();
        BOOL v30 = __OFADD__(v29, 1);
        unint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_74;
        }
      }
      else
      {
        if (v29 >= *(void *)(v86 + 16)) {
          goto LABEL_76;
        }
        uint64_t v96 = *(void *)(v85 + 8 * v29);
        swift_retain();
        BOOL v30 = __OFADD__(v29, 1);
        unint64_t v31 = v29 + 1;
        if (v30)
        {
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
          JUMPOUT(0x10001EC80);
        }
      }
      unint64_t v95 = v31;
      sub_1005E33F0();
      uint64_t v32 = v96 + *(void *)(*(void *)v96 + 96);
      swift_beginAccess();
      uint64_t v102 = v32;
      sub_10001FCC0(v32, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10001FCC0((uint64_t)v25, v94, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v34 = *(unsigned int *)(v94 + 8);
          uint64_t v35 = *(void *)(v94 + 16);
          sub_1005E3410(2uLL);
          sub_1005E3410(v34 | (v34 << 32));
          sub_1000D3538((uint64_t)v105, v35);
          goto LABEL_23;
        case 2u:
          uint64_t v36 = *(unsigned int *)(v94 + 8);
          uint64_t v37 = *(void *)(v94 + 16);
          sub_1005E3410(3uLL);
          sub_1005E3410(v36 | (v36 << 32));
          sub_1000D3378((uint64_t)v105, v37);
LABEL_23:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 3u:
          sub_1005E3410(1uLL);
          break;
        default:
          uint64_t v33 = v84;
          sub_10001FDF0(v94, v84, &qword_100709E38);
          sub_1005E3410(0);
          sub_10000566C(&qword_100709E60);
          sub_10001FBA4();
          sub_1005E19C0();
          sub_100007A48(v33, &qword_100709E38);
          break;
      }
      unint64_t v29 = v95;
      sub_10001FD28((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      Swift::Int v38 = sub_1005E3470();
      uint64_t v26 = v103;
      uint64_t v101 = ~(-1 << v103[32]);
      unint64_t v39 = v38 & v101;
      unint64_t v40 = (v38 & (unint64_t)v101) >> 6;
      uint64_t v41 = *(void *)&v104[8 * v40];
      uint64_t v42 = 1 << (v38 & v101);
      if ((v42 & v41) != 0)
      {
        while (1)
        {
          uint64_t v43 = *(void *)(v26[6] + 8 * v39);
          uint64_t v44 = v43 + *(void *)(*(void *)v43 + 96);
          swift_beginAccess();
          sub_10001FCC0(v44, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10001FCC0(v102, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          uint64_t v45 = (uint64_t)&v4[*(int *)(v2 + 48)];
          sub_10001FCC0((uint64_t)v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10001FCC0((uint64_t)v18, v45, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v47 = v98;
              sub_10001FCC0((uint64_t)v4, v98, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              uint64_t v48 = *(void *)v47;
              uint64_t v49 = *(void *)(v47 + 16);
              if (swift_getEnumCaseMultiPayload() != 1) {
                goto LABEL_27;
              }
              uint64_t v50 = *(unsigned int *)(v47 + 8);
              uint64_t v51 = *(void *)v45;
              uint64_t v52 = *(unsigned int *)(v45 + 8);
              uint64_t v53 = *(void *)(v45 + 16);
              if ((v50 | (v50 << 32)) != (v52 | (v52 << 32))) {
                goto LABEL_68;
              }
              uint64_t v54 = *(void *)(v48 + 16);
              if (v54 != *(void *)(v51 + 16)) {
                goto LABEL_68;
              }
              if (!v54 || v48 == v51) {
                goto LABEL_40;
              }
              if (*(unsigned __int8 *)(v48 + 32) != *(unsigned __int8 *)(v51 + 32)) {
                goto LABEL_68;
              }
              if (v54 == 1) {
                goto LABEL_40;
              }
              if (*(unsigned __int8 *)(v48 + 33) != *(unsigned __int8 *)(v51 + 33)) {
                goto LABEL_68;
              }
              if (v54 == 2) {
                goto LABEL_40;
              }
              if (*(unsigned __int8 *)(v48 + 34) != *(unsigned __int8 *)(v51 + 34)) {
                goto LABEL_68;
              }
              uint64_t v68 = (unsigned __int8 *)(v48 + 35);
              uint64_t v69 = (unsigned __int8 *)(v51 + 35);
              uint64_t v70 = v54 - 3;
              while (v70)
              {
                int v72 = *v68++;
                int v71 = v72;
                int v73 = *v69++;
                --v70;
                if (v71 != v73) {
                  goto LABEL_68;
                }
              }
LABEL_40:
              swift_retain();
              int v55 = sub_100020AA4(v49, v53);
              goto LABEL_49;
            case 2u:
              uint64_t v56 = v99;
              sub_10001FCC0((uint64_t)v4, v99, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              uint64_t v57 = *(void *)v56;
              uint64_t v58 = *(void *)(v56 + 16);
              if (swift_getEnumCaseMultiPayload() == 2)
              {
                uint64_t v59 = *(unsigned int *)(v56 + 8);
                uint64_t v60 = *(void *)v45;
                uint64_t v61 = *(unsigned int *)(v45 + 8);
                uint64_t v62 = *(void *)(v45 + 16);
                if ((v59 | (v59 << 32)) != (v61 | (v61 << 32))) {
                  goto LABEL_68;
                }
                uint64_t v63 = *(void *)(v57 + 16);
                if (v63 != *(void *)(v60 + 16)) {
                  goto LABEL_68;
                }
                if (!v63 || v57 == v60) {
                  goto LABEL_48;
                }
                if (*(unsigned __int8 *)(v57 + 32) != *(unsigned __int8 *)(v60 + 32)) {
                  goto LABEL_68;
                }
                if (v63 == 1) {
                  goto LABEL_48;
                }
                if (*(unsigned __int8 *)(v57 + 33) == *(unsigned __int8 *)(v60 + 33))
                {
                  if (v63 != 2)
                  {
                    if (*(unsigned __int8 *)(v57 + 34) == *(unsigned __int8 *)(v60 + 34))
                    {
                      unint64_t v74 = (unsigned __int8 *)(v57 + 35);
                      Swift::Int v75 = (unsigned __int8 *)(v60 + 35);
                      uint64_t v76 = v63 - 3;
                      while (v76)
                      {
                        int v78 = *v74++;
                        int v77 = v78;
                        int v79 = *v75++;
                        --v76;
                        if (v77 != v79) {
                          goto LABEL_68;
                        }
                      }
                      goto LABEL_48;
                    }
                    goto LABEL_68;
                  }
LABEL_48:
                  swift_retain();
                  int v55 = sub_100021118(v58, v62);
LABEL_49:
                  int v87 = v55;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v2 = v100;
                  if (v87)
                  {
LABEL_11:
                    sub_10001FD28((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                    sub_10001FD28((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                    sub_10001FD28((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                    swift_release();
                    swift_release();
                    uint64_t v26 = v103;
                    unint64_t v29 = v95;
                    goto LABEL_12;
                  }
                }
                else
                {
LABEL_68:
                  swift_retain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v2 = v100;
                }
LABEL_69:
                sub_10001FD28((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                goto LABEL_29;
              }
LABEL_27:
              swift_retain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v2 = v100;
LABEL_28:
              sub_100007A48((uint64_t)v4, &qword_100709FE8);
LABEL_29:
              sub_10001FD28((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              sub_10001FD28((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              swift_release();
              unint64_t v39 = (v39 + 1) & v101;
              unint64_t v40 = v39 >> 6;
              uint64_t v26 = v103;
              uint64_t v41 = *(void *)&v104[8 * (v39 >> 6)];
              uint64_t v42 = 1 << v39;
              if ((v41 & (1 << v39)) == 0)
              {
                unint64_t v29 = v95;
                goto LABEL_71;
              }
              break;
            case 3u:
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              swift_retain();
              if (EnumCaseMultiPayload == 3) {
                goto LABEL_11;
              }
              goto LABEL_28;
            default:
              uint64_t v46 = v97;
              sub_10001FCC0((uint64_t)v4, v97, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              if (swift_getEnumCaseMultiPayload())
              {
                swift_retain();
                sub_100007A48(v46, &qword_100709E38);
                goto LABEL_28;
              }
              uint64_t v65 = v45;
              uint64_t v66 = v93;
              sub_10001FDF0(v65, v93, &qword_100709E38);
              sub_10001FC6C();
              swift_retain();
              char v67 = sub_1005E35A0();
              sub_100007A48(v66, &qword_100709E38);
              uint64_t v21 = v92;
              sub_100007A48(v46, &qword_100709E38);
              if (v67) {
                goto LABEL_11;
              }
              goto LABEL_69;
          }
        }
      }
LABEL_71:
      *(void *)&v104[8 * v40] = v42 | v41;
      *(void *)(v26[6] + 8 * v39) = v96;
      uint64_t v80 = v26[2];
      BOOL v30 = __OFADD__(v80, 1);
      uint64_t v81 = v80 + 1;
      if (v30) {
        goto LABEL_75;
      }
      v26[2] = v81;
LABEL_12:
      uint64_t v25 = v89;
      if (v29 == v88) {
        return v26;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = v103;
  uint64_t v28 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_10;
  }
  return v26;
}

uint64_t sub_10001ECA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001ED94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_10001EE8C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001EF78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001F070(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 376 * a1 + 32;
    unint64_t v6 = a3 + 376 * v4;
    if (v5 >= v6 || v5 + 376 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_10001F164(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001F250(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001F344(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_10000566C(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001F49C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001F590(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_10001F688(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001F770(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001F8CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10001F9C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_10001FAB4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 12 * a1 + 32);
    size_t v6 = 12 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

unint64_t sub_10001FBA4()
{
  unint64_t result = qword_100709FD8;
  if (!qword_100709FD8)
  {
    sub_10000744C(&qword_100709E60);
    sub_10001FC18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709FD8);
  }
  return result;
}

unint64_t sub_10001FC18()
{
  unint64_t result = qword_100709FE0;
  if (!qword_100709FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709FE0);
  }
  return result;
}

unint64_t sub_10001FC6C()
{
  unint64_t result = qword_100709FF0;
  if (!qword_100709FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709FF0);
  }
  return result;
}

uint64_t sub_10001FCC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001FD28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001FD88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001FDF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000566C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001FE54()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001FE8C()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001FEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001FF2C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v28 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    unint64_t v8 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v9 = v8 | (v4 << 6);
LABEL_22:
    uint64_t v13 = *(unsigned int *)(*(void *)(v3 + 48) + 4 * v9);
    uint64_t v14 = *(void *)(v3 + 56) + 32 * v9;
    char v15 = *(unsigned char *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    char v17 = *(unsigned char *)(v14 + 16);
    uint64_t v18 = *(void *)(v14 + 24);
    uint64_t v19 = sub_100024260(v13);
    if ((v20 & 1) == 0) {
      return 0;
    }
    uint64_t v21 = v3;
    uint64_t v22 = v2;
    uint64_t v23 = *(void *)(v2 + 56) + 32 * v19;
    Swift::Int v24 = *(void *)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 24);
    char v30 = *(unsigned char *)v23;
    char v31 = *(unsigned char *)(v23 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v26 = static SyncRequest.__derived_struct_equals(_:_:)(v30, v24, v31, v15, v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = 0;
    if (v26)
    {
      BOOL v27 = v25 == v18;
      uint64_t v3 = v21;
      uint64_t v2 = v22;
      if (v27) {
        continue;
      }
    }
    return result;
  }
  int64_t v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v10 >= v29) {
    return 1;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v10);
  ++v4;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v4 = v10 + 1;
  if (v10 + 1 >= v29) {
    return 1;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v4);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v4 = v10 + 2;
  if (v10 + 2 >= v29) {
    return 1;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v4);
  if (v11)
  {
LABEL_21:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
    goto LABEL_22;
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v29) {
    return 1;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v29) {
      return 1;
    }
    unint64_t v11 = *(void *)(v28 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100020158(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(v3 + 48) + 16 * v11;
    uint64_t v16 = *(void *)v15;
    unsigned int v17 = *(_DWORD *)(v15 + 8);
    uint64_t v18 = *(void *)(v3 + 56) + 72 * v11;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 16);
    uint64_t v20 = *(void *)(v18 + 56);
    __int16 v21 = *(unsigned __int8 *)(v18 + 64);
    unint64_t v22 = *(unsigned int *)(v18 + 8) | ((unint64_t)*(unsigned __int8 *)(v18 + 12) << 32) | ((unint64_t)*(unsigned __int16 *)(v18 + 14) << 48);
    if (*(unsigned char *)(v18 + 65)) {
      __int16 v23 = 256;
    }
    else {
      __int16 v23 = 0;
    }
    long long v24 = *(_OWORD *)(v18 + 24);
    long long v25 = *(_OWORD *)(v18 + 40);
    v36[0] = *(void *)v18;
    v36[1] = v22;
    v36[2] = v19;
    long long v37 = v24;
    long long v38 = v25;
    uint64_t v39 = v20;
    __int16 v40 = v23 | v21;
    unint64_t v26 = sub_100024264(v16, v17);
    char v28 = v27;
    swift_bridgeObjectRetain();
    if ((v28 & 1) == 0)
    {
      sub_10001D550((uint64_t)v36);
      return 0;
    }
    uint64_t v29 = *(void *)(a2 + 56) + 72 * v26;
    v34[0] = *(_OWORD *)v29;
    long long v31 = *(_OWORD *)(v29 + 32);
    long long v30 = *(_OWORD *)(v29 + 48);
    long long v32 = *(_OWORD *)(v29 + 16);
    __int16 v35 = *(_WORD *)(v29 + 64);
    v34[2] = v31;
    v34[3] = v30;
    v34[1] = v32;
    sub_10002292C((uint64_t)v34);
    char v33 = static RemoteMailbox.__derived_struct_equals(_:_:)(v34, v36);
    sub_10001D550((uint64_t)v34);
    unint64_t result = sub_10001D550((uint64_t)v36);
    if ((v33 & 1) == 0) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_100020394(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    unint64_t v16 = sub_1000242DC(*(void *)(*(void *)(v3 + 48) + 16 * v11), *(void *)(*(void *)(v3 + 48) + 16 * v11 + 8));
    char v18 = v17;
    swift_bridgeObjectRetain();
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    char v19 = sub_100013570(*(void *)(*(void *)(a2 + 56) + 8 * v16), v15);
    unint64_t result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_100020538(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    int v15 = *(unsigned __int16 *)(*(void *)(v3 + 56) + 2 * v11);
    unint64_t result = sub_1000242DC(*(void *)(*(void *)(v3 + 48) + 16 * v11), *(void *)(*(void *)(v3 + 48) + 16 * v11 + 8));
    if ((v16 & 1) == 0 || *(unsigned __int16 *)(*(void *)(a2 + 56) + 2 * result) != v15) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000206A8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v25 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v26) {
      return 1;
    }
    unint64_t v11 = *(void *)(v25 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v26) {
        return 1;
      }
      unint64_t v11 = *(void *)(v25 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v26) {
          return 1;
        }
        unint64_t v11 = *(void *)(v25 + 8 * v4);
        if (!v11) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_22:
    uint64_t v13 = *(unsigned int *)(*(void *)(v3 + 48) + 4 * v9);
    uint64_t v14 = *(void *)(v3 + 56) + 24 * v9;
    char v15 = *(unsigned char *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    char v17 = *(unsigned char *)(v14 + 16);
    uint64_t v18 = sub_100024260(v13);
    if (v19)
    {
      uint64_t v20 = *(void *)(a2 + 56) + 24 * v18;
      Swift::Int v21 = *(void *)(v20 + 8);
      char v22 = *(unsigned char *)(v20 + 16);
      char v23 = *(unsigned char *)v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v24 = static SyncRequest.__derived_struct_equals(_:_:)(v23, v21, v22, v15, v16, v17);
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      if (v24) {
        continue;
      }
    }
    return 0;
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v26) {
    return 1;
  }
  unint64_t v11 = *(void *)(v25 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v26) {
      return 1;
    }
    unint64_t v11 = *(void *)(v25 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000208B0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v28 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v10 >= v29) {
      return 1;
    }
    unint64_t v11 = *(void *)(v28 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v29) {
        return 1;
      }
      unint64_t v11 = *(void *)(v28 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v29) {
          return 1;
        }
        unint64_t v11 = *(void *)(v28 + 8 * v4);
        if (!v11) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_22:
    uint64_t v13 = *(unsigned int *)(*(void *)(v3 + 48) + 4 * v9);
    uint64_t v14 = *(void *)(v3 + 56) + 24 * v9;
    int v15 = *(_DWORD *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    __int16 v17 = *(unsigned __int8 *)(v14 + 16);
    int v18 = *(unsigned __int8 *)(v14 + 17);
    uint64_t v19 = sub_100024260(v13);
    if (v20)
    {
      uint64_t v21 = *(void *)(a2 + 56) + 24 * v19;
      int v22 = *(_DWORD *)v21;
      uint64_t v23 = *(void *)(v21 + 8);
      __int16 v24 = *(unsigned __int8 *)(v21 + 16);
      __int16 v25 = *(unsigned char *)(v21 + 17) ? 256 : 0;
      __int16 v26 = v25 | v24;
      __int16 v27 = v18 ? 256 : 0;
      unint64_t result = static MessageToDownload.__derived_struct_equals(_:_:)(v22, v23, v26, v15, v16, v27 | v17);
      if (result) {
        continue;
      }
    }
    return 0;
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v29) {
    return 1;
  }
  unint64_t v11 = *(void *)(v28 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v29) {
      return 1;
    }
    unint64_t v11 = *(void *)(v28 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_100020AA4(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v39 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v40 = (unint64_t)(v5 + 63) >> 6;
  while (2)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
    }
    else
    {
      BOOL v10 = __OFADD__(v4++, 1);
      if (v10)
      {
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      if (v4 >= v40) {
        return 1;
      }
      unint64_t v11 = *(void *)(v39 + 8 * v4);
      if (!v11)
      {
        int64_t v12 = v4 + 1;
        if (v4 + 1 >= v40) {
          return 1;
        }
        unint64_t v11 = *(void *)(v39 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 2;
          if (v4 + 2 >= v40) {
            return 1;
          }
          unint64_t v11 = *(void *)(v39 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 3;
            if (v4 + 3 >= v40) {
              return 1;
            }
            unint64_t v11 = *(void *)(v39 + 8 * v12);
            if (!v11)
            {
              while (1)
              {
                int64_t v4 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  break;
                }
                if (v4 >= v40) {
                  return 1;
                }
                unint64_t v11 = *(void *)(v39 + 8 * v4);
                ++v12;
                if (v11) {
                  goto LABEL_20;
                }
              }
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
LABEL_71:
              __break(1u);
            }
          }
        }
        int64_t v4 = v12;
      }
LABEL_20:
      unint64_t v7 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    uint64_t v13 = *(unsigned int *)(*(void *)(v3 + 48) + 4 * v9);
    uint64_t v14 = (unsigned __int8 *)(*(void *)(v3 + 56) + 24 * v9);
    int v15 = *v14;
    uint64_t v17 = *((void *)v14 + 1);
    unint64_t v16 = *((void *)v14 + 2);
    uint64_t v18 = sub_100024260(v13);
    if ((v19 & 1) == 0 || (char v20 = (unsigned __int8 *)(*(void *)(v2 + 56) + 24 * v18), v15 != *v20))
    {
      sub_100008D24(v17, v16);
      goto LABEL_60;
    }
    uint64_t v22 = *((void *)v20 + 1);
    unint64_t v21 = *((void *)v20 + 2);
    uint64_t v23 = 0;
    switch(v21 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v22), v22)) {
          goto LABEL_63;
        }
        uint64_t v23 = HIDWORD(v22) - (int)v22;
LABEL_28:
        sub_100008D24(v22, v21);
        sub_100008D24(v22, v21);
        break;
      case 2uLL:
        uint64_t v25 = *(void *)(v22 + 16);
        uint64_t v24 = *(void *)(v22 + 24);
        uint64_t v23 = v24 - v25;
        if (!__OFSUB__(v24, v25)) {
          goto LABEL_28;
        }
        goto LABEL_64;
      case 3uLL:
        break;
      default:
        uint64_t v23 = BYTE6(v21);
        break;
    }
    switch(v16 >> 62)
    {
      case 1uLL:
        LODWORD(v26) = HIDWORD(v17) - v17;
        if (__OFSUB__(HIDWORD(v17), v17)) {
          goto LABEL_65;
        }
        uint64_t v26 = (int)v26;
LABEL_34:
        if (v23 == v26)
        {
          if (v23 < 1)
          {
LABEL_7:
            sub_100008D24(v17, v16);
            sub_1000094D4(v22, v21);
            sub_1000094D4(v22, v21);
            sub_1000094D4(v17, v16);
          }
          else
          {
            switch(v21 >> 62)
            {
              case 1uLL:
                if (v22 >> 32 < (int)v22) {
                  goto LABEL_68;
                }
                sub_100008D24(v22, v21);
                sub_100008D24(v22, v21);
                sub_100008D24(v17, v16);
                sub_100008D24(v17, v16);
                uint64_t v29 = sub_1005E0550();
                if (!v29) {
                  goto LABEL_46;
                }
                uint64_t v30 = sub_1005E0580();
                if (__OFSUB__((int)v22, v30)) {
                  goto LABEL_70;
                }
                v29 += (int)v22 - v30;
LABEL_46:
                sub_1005E0570();
                sub_1000260B8(v29, v17, v16, (BOOL *)__s1);
                sub_1000094D4(v22, v21);
                break;
              case 2uLL:
                uint64_t v32 = *(void *)(v22 + 16);
                uint64_t v31 = *(void *)(v22 + 24);
                sub_100008D24(v22, v21);
                sub_100008D24(v17, v16);
                sub_100008D24(v17, v16);
                swift_retain();
                swift_retain();
                uint64_t v33 = sub_1005E0550();
                if (!v33) {
                  goto LABEL_50;
                }
                uint64_t v34 = sub_1005E0580();
                if (__OFSUB__(v32, v34)) {
                  goto LABEL_71;
                }
                v33 += v32 - v34;
LABEL_50:
                if (__OFSUB__(v31, v32)) {
                  goto LABEL_69;
                }
                sub_1005E0570();
                sub_1000260B8(v33, v17, v16, (BOOL *)__s1);
                swift_release();
                swift_release();
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                sub_100008D24(v22, v21);
                sub_100008D24(v17, v16);
                sub_100008D24(v17, v16);
                goto LABEL_54;
              default:
                __s1[0] = v22;
                LOWORD(__s1[1]) = v21;
                BYTE2(__s1[1]) = BYTE2(v21);
                BYTE3(__s1[1]) = BYTE3(v21);
                BYTE4(__s1[1]) = BYTE4(v21);
                BYTE5(__s1[1]) = BYTE5(v21);
                sub_100008D24(v22, v21);
                sub_100008D24(v17, v16);
                sub_100008D24(v17, v16);
LABEL_54:
                sub_1000260B8((uint64_t)__s1, v17, v16, (BOOL *)&v41);
                sub_1000094D4(v22, v21);
                sub_1000094D4(v17, v16);
                sub_1000094D4(v22, v21);
                sub_1000094D4(v22, v21);
                sub_1000094D4(v17, v16);
                char v35 = v41;
                goto LABEL_55;
            }
            sub_1000094D4(v22, v21);
            sub_1000094D4(v17, v16);
            sub_1000094D4(v22, v21);
            sub_1000094D4(v22, v21);
            sub_1000094D4(v17, v16);
            char v35 = __s1[0];
            uint64_t v3 = a1;
            uint64_t v2 = a2;
LABEL_55:
            if ((v35 & 1) == 0) {
              return 0;
            }
          }
          continue;
        }
LABEL_59:
        sub_100008D24(v17, v16);
        sub_1000094D4(v22, v21);
        sub_1000094D4(v22, v21);
LABEL_60:
        sub_1000094D4(v17, v16);
        return 0;
      case 2uLL:
        uint64_t v28 = *(void *)(v17 + 16);
        uint64_t v27 = *(void *)(v17 + 24);
        BOOL v10 = __OFSUB__(v27, v28);
        uint64_t v26 = v27 - v28;
        if (!v10) {
          goto LABEL_34;
        }
        goto LABEL_66;
      case 3uLL:
        if (!v23) {
          goto LABEL_7;
        }
        goto LABEL_59;
      default:
        uint64_t v26 = BYTE6(v16);
        goto LABEL_34;
    }
  }
}

uint64_t sub_100021118(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v37 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v38 = (unint64_t)(v5 + 63) >> 6;
  while (2)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
    }
    else
    {
      BOOL v10 = __OFADD__(v4++, 1);
      if (v10)
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
        goto LABEL_68;
      }
      if (v4 >= v38) {
        return 1;
      }
      unint64_t v11 = *(void *)(v37 + 8 * v4);
      if (!v11)
      {
        int64_t v12 = v4 + 1;
        if (v4 + 1 >= v38) {
          return 1;
        }
        unint64_t v11 = *(void *)(v37 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 2;
          if (v4 + 2 >= v38) {
            return 1;
          }
          unint64_t v11 = *(void *)(v37 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 3;
            if (v4 + 3 >= v38) {
              return 1;
            }
            unint64_t v11 = *(void *)(v37 + 8 * v12);
            if (!v11)
            {
              while (1)
              {
                int64_t v4 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  break;
                }
                if (v4 >= v38) {
                  return 1;
                }
                unint64_t v11 = *(void *)(v37 + 8 * v4);
                ++v12;
                if (v11) {
                  goto LABEL_20;
                }
              }
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
            }
          }
        }
        int64_t v4 = v12;
      }
LABEL_20:
      unint64_t v7 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    uint64_t v13 = *(unsigned int *)(*(void *)(v3 + 48) + 4 * v9);
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v9);
    uint64_t v16 = *v14;
    unint64_t v15 = v14[1];
    uint64_t v17 = sub_100024260(v13);
    if ((v18 & 1) == 0)
    {
      sub_100008D24(v16, v15);
      goto LABEL_59;
    }
    char v19 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v17);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    uint64_t v22 = 0;
    switch(v20 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v21), v21)) {
          goto LABEL_62;
        }
        uint64_t v22 = HIDWORD(v21) - (int)v21;
LABEL_27:
        sub_100008D24(v21, v20);
        sub_100008D24(v21, v20);
        break;
      case 2uLL:
        uint64_t v24 = *(void *)(v21 + 16);
        uint64_t v23 = *(void *)(v21 + 24);
        uint64_t v22 = v23 - v24;
        if (!__OFSUB__(v23, v24)) {
          goto LABEL_27;
        }
        goto LABEL_63;
      case 3uLL:
        break;
      default:
        uint64_t v22 = BYTE6(v20);
        break;
    }
    switch(v15 >> 62)
    {
      case 1uLL:
        LODWORD(v25) = HIDWORD(v16) - v16;
        if (__OFSUB__(HIDWORD(v16), v16)) {
          goto LABEL_64;
        }
        uint64_t v25 = (int)v25;
LABEL_33:
        if (v22 == v25)
        {
          if (v22 < 1)
          {
LABEL_7:
            sub_100008D24(v16, v15);
            sub_1000094D4(v21, v20);
            sub_1000094D4(v21, v20);
            sub_1000094D4(v16, v15);
          }
          else
          {
            switch(v20 >> 62)
            {
              case 1uLL:
                if (v21 >> 32 < (int)v21) {
                  goto LABEL_66;
                }
                sub_100008D24(v21, v20);
                sub_100008D24(v16, v15);
                sub_100008D24(v16, v15);
                uint64_t v28 = sub_1005E0550();
                if (!v28) {
                  goto LABEL_41;
                }
                uint64_t v29 = sub_1005E0580();
                if (__OFSUB__((int)v21, v29)) {
                  goto LABEL_70;
                }
                v28 += (int)v21 - v29;
LABEL_41:
                sub_1005E0570();
                sub_1000260B8(v28, v16, v15, (BOOL *)__s1);
                sub_1000094D4(v21, v20);
                break;
              case 2uLL:
                uint64_t v31 = *(void *)(v21 + 16);
                uint64_t v30 = *(void *)(v21 + 24);
                sub_100008D24(v16, v15);
                sub_100008D24(v16, v15);
                swift_retain();
                swift_retain();
                uint64_t v32 = sub_1005E0550();
                if (!v32) {
                  goto LABEL_45;
                }
                uint64_t v33 = sub_1005E0580();
                if (__OFSUB__(v31, v33)) {
                  goto LABEL_69;
                }
                v32 += v31 - v33;
LABEL_45:
                if (__OFSUB__(v30, v31)) {
                  goto LABEL_67;
                }
                sub_1005E0570();
                sub_1000260B8(v32, v16, v15, (BOOL *)__s1);
                swift_release();
                swift_release();
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                sub_100008D24(v16, v15);
                sub_100008D24(v16, v15);
                goto LABEL_50;
              default:
                __s1[0] = v21;
                LOWORD(__s1[1]) = v20;
                BYTE2(__s1[1]) = BYTE2(v20);
                BYTE3(__s1[1]) = BYTE3(v20);
                BYTE4(__s1[1]) = BYTE4(v20);
                BYTE5(__s1[1]) = BYTE5(v20);
                sub_100008D24(v16, v15);
                sub_100008D24(v16, v15);
LABEL_50:
                sub_1000260B8((uint64_t)__s1, v16, v15, &v39);
                sub_1000094D4(v16, v15);
                sub_1000094D4(v21, v20);
                sub_1000094D4(v21, v20);
                sub_1000094D4(v16, v15);
                if (!v39) {
                  return 0;
                }
                continue;
            }
            sub_1000094D4(v16, v15);
            sub_1000094D4(v21, v20);
            sub_1000094D4(v21, v20);
            sub_1000094D4(v16, v15);
            uint64_t v3 = a1;
            uint64_t v2 = a2;
            if ((__s1[0] & 1) == 0) {
              return 0;
            }
          }
          continue;
        }
LABEL_58:
        sub_100008D24(v16, v15);
        sub_1000094D4(v21, v20);
        sub_1000094D4(v21, v20);
LABEL_59:
        sub_1000094D4(v16, v15);
        return 0;
      case 2uLL:
        uint64_t v27 = *(void *)(v16 + 16);
        uint64_t v26 = *(void *)(v16 + 24);
        BOOL v10 = __OFSUB__(v26, v27);
        uint64_t v25 = v26 - v27;
        if (!v10) {
          goto LABEL_33;
        }
        goto LABEL_65;
      case 3uLL:
        if (!v22) {
          goto LABEL_7;
        }
        goto LABEL_58;
      default:
        uint64_t v25 = BYTE6(v15);
        goto LABEL_33;
    }
  }
}

uint64_t sub_10002172C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v31 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v33 = result;
  while (1)
  {
    if (v7)
    {
      uint64_t v34 = (v7 - 1) & v7;
      int64_t v35 = v4;
      unint64_t v8 = __clz(__rbit64(v7)) | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v9 >= v32) {
      return 1;
    }
    unint64_t v10 = *(void *)(v31 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v9 + 1;
      if (v9 + 1 >= v32) {
        return 1;
      }
      unint64_t v10 = *(void *)(v31 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v9 + 2;
        if (v9 + 2 >= v32) {
          return 1;
        }
        unint64_t v10 = *(void *)(v31 + 8 * v11);
        if (!v10) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v34 = (v10 - 1) & v10;
    int64_t v35 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(v3 + 56) + 24 * v8;
    int v17 = *(_DWORD *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    __int16 v19 = *(unsigned __int8 *)(v16 + 16);
    int v20 = *(unsigned __int8 *)(v16 + 17);
    sub_100008D24(*v13, v15);
    unint64_t v21 = sub_10002445C(v14, v15);
    char v23 = v22;
    sub_1000094D4(v14, v15);
    if (v23)
    {
      uint64_t v24 = *(void *)(a2 + 56) + 24 * v21;
      int v25 = *(_DWORD *)v24;
      uint64_t v26 = *(void *)(v24 + 8);
      __int16 v27 = *(unsigned __int8 *)(v24 + 16);
      __int16 v28 = *(unsigned char *)(v24 + 17) ? 256 : 0;
      __int16 v29 = v28 | v27;
      __int16 v30 = v20 ? 256 : 0;
      unint64_t result = static MessageToDownload.__derived_struct_equals(_:_:)(v25, v26, v29, v17, v18, v30 | v19);
      uint64_t v3 = v33;
      unint64_t v7 = v34;
      int64_t v4 = v35;
      if (result) {
        continue;
      }
    }
    return 0;
  }
  int64_t v12 = v9 + 3;
  if (v12 >= v32) {
    return 1;
  }
  unint64_t v10 = *(void *)(v31 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v32) {
      return 1;
    }
    unint64_t v10 = *(void *)(v31 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_100021964(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_26;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_26:
    uint64_t v15 = *(unsigned int *)(*(void *)(v3 + 48) + 4 * v11);
    uint64_t v16 = *(void *)(v3 + 56) + 16 * v11;
    uint64_t v17 = *(void *)v16;
    int v18 = *(unsigned __int8 *)(v16 + 8);
    int v19 = *(unsigned __int8 *)(v16 + 9);
    uint64_t v20 = sub_100024260(v15);
    if ((v21 & 1) == 0) {
      return 0;
    }
    uint64_t v22 = *(void *)(a2 + 56) + 16 * v20;
    if (*(unsigned char *)(v22 + 8) == 1)
    {
      unint64_t result = 0;
      if (!v18) {
        return result;
      }
    }
    else
    {
      if (v18) {
        return 0;
      }
      unint64_t result = 0;
      if (*(void *)v22 != v17) {
        return result;
      }
    }
    if ((v19 ^ *(unsigned __int8 *)(v22 + 9))) {
      return result;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_25;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100021B2C(uint64_t *a1, uint64_t *a2)
{
  return sub_10001FF2C(*a1, *a2);
}

uint64_t StateWithTasks.appState.getter()
{
  return *(unsigned char *)(v0 + 17) & 1;
}

uint64_t PushRegistrationInfo.mailboxes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RunningSyncRequests.Change.started.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100021C34(v1, a1);
}

uint64_t RunningSyncRequests.Change.started.setter(long long *a1)
{
  _s13IMAP2Behavior4TaskOwxx_0(v1);
  return sub_100021BFC(a1, v1);
}

uint64_t _s13IMAP2Behavior4TaskOwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100021BFC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t RunningSyncRequests.Change.completed.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100021C34(v1 + 40, a1);
}

uint64_t sub_100021C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t RunningSyncRequests.Change.completed.setter(long long *a1)
{
  uint64_t v3 = v1 + 40;
  _s13IMAP2Behavior4TaskOwxx_0(v3);
  return sub_100021BFC(a1, v3);
}

Swift::UInt32 (__swiftcall *IndexableMessageInfo.Attachment.filename.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t RunningSyncRequests.Change.init<A, B>(started:completed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  a7[3] = a3;
  a7[4] = a5;
  unint64_t v13 = sub_100021E04(a7);
  uint64_t v14 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16))(v13, a1, a3);
  uint64_t v18 = a4;
  uint64_t v19 = a6;
  uint64_t v15 = sub_100021E04((uint64_t *)&v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v15, a2, a4);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a3);
  return sub_100021BFC(&v17, (uint64_t)(a7 + 5));
}

uint64_t *sub_100021E04(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t RunningSyncRequests.Change.init(previous:current:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (a1)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_100022148;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a2;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_100022148;
    *(void *)(v9 + 24) = v8;
    uint64_t v10 = sub_10000566C(&qword_10070A1D0);
    uint64_t v11 = sub_100007494(&qword_10070A1D8, &qword_10070A1D0);
    int64_t v12 = (void *)swift_allocObject();
    v12[2] = a2;
    v12[3] = sub_1000221CC;
    v12[4] = v7;
    v12[5] = sub_100022958;
    v12[6] = 0;
    uint64_t v13 = sub_10000566C(&qword_10070A1E0);
    uint64_t v14 = sub_100007494(&qword_10070A1E8, &qword_10070A1E0);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = a1;
    v15[3] = sub_1000221CC;
    v15[4] = v9;
    v15[5] = sub_100022264;
    v15[6] = 0;
    swift_bridgeObjectRetain();
    a2 = v12;
  }
  else
  {
    uint64_t v10 = sub_10000566C(&qword_10070A1B0);
    uint64_t v11 = sub_100007494(&qword_10070A1B8, &qword_10070A1B0);
    uint64_t v13 = sub_10000566C(&qword_10070A1C0);
    uint64_t v14 = sub_100007494(&qword_10070A1C8, &qword_10070A1C0);
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  *a3 = a2;
  a3[1] = sub_1000220FC;
  a3[2] = 0;
  a3[3] = v10;
  a3[4] = v11;
  a3[5] = v15;
  a3[8] = v13;
  a3[9] = v14;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000220FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 8);
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(unsigned char *)(a2 + 4) = v2;
  return result;
}

uint64_t sub_100022110()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002214C(unsigned int *a1, uint64_t (*a2)(void, void, void, void, void))
{
  return a2(*a1, *((unsigned __int8 *)a1 + 8), *((void *)a1 + 2), *((unsigned __int8 *)a1 + 24), *((void *)a1 + 4)) & 1;
}

uint64_t sub_100022194()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000221D0(uint64_t a1)
{
  if (*(void *)(*(void *)(v1 + 16) + 16))
  {
    sub_100024260(a1);
    char v3 = v2 ^ 1;
  }
  else
  {
    char v3 = 1;
  }
  return v3 & 1;
}

uint64_t sub_10002220C(unsigned int *a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(v1 + 16))(*a1, *((unsigned __int8 *)a1 + 8), *((void *)a1 + 2), *((unsigned __int8 *)a1 + 24), *((void *)a1 + 4)) & 1;
}

IMAP2Behavior::RunningSyncRequests::Change::Completed __swiftcall RunningSyncRequests.Change.Completed.init(id:kind:createdAt:)(IMAP2Persistence::SyncRequest::ID id, IMAP2Persistence::SyncRequest::Kind kind, IMAP2Helpers::MonotonicTime createdAt)
{
  unint64_t v3 = id.rawValue | ((unint64_t)kind << 32);
  result.createdAt = createdAt;
  result.id = (IMAP2Persistence::SyncRequest::ID)v3;
  result.kind = BYTE4(v3);
  return result;
}

uint64_t sub_100022264@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *(void *)(result + 32);
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(unsigned char *)(a2 + 4) = v2;
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_100022288()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

unint64_t EngineAccountMailboxLoggerID.account.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t Flags.forwarded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

BOOL static RunningSyncRequests.Change.Started.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return ((a2 ^ a1) & 0xFF00000000) == 0 && a1 == a2;
}

BOOL sub_1000222F4(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2 && *(unsigned __int8 *)(a1 + 4) == *(unsigned __int8 *)(a2 + 4);
}

uint64_t IndexingStatistics.messagesIndexed.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

BOOL static RunningSyncRequests.Change.Completed.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((a3 ^ a1) & 0xFF00000000) == 0 && a1 == a3 && a2 == a4;
}

BOOL sub_100022334(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(unsigned __int8 *)(a1 + 4) == *(unsigned __int8 *)(a2 + 4)
      && *(void *)(a1 + 8) == *(void *)(a2 + 8);
}

ValueMetadata *type metadata accessor for RunningSyncRequests()
{
  return &type metadata for RunningSyncRequests;
}

uint64_t destroy for RunningSyncRequests.Change(uint64_t a1)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  return _s13IMAP2Behavior4TaskOwxx_0(a1 + 40);
}

uint64_t initializeWithCopy for RunningSyncRequests.Change(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for RunningSyncRequests.Change(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *sub_100022498(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        IMAP2Behavior::RunningSyncRequests::Change::Completed result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *IMAP2Behavior::RunningSyncRequests::Change::Completed result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for RunningSyncRequests.Change(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for RunningSyncRequests.Change(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for RunningSyncRequests.Change(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningSyncRequests.Change(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningSyncRequests.Change()
{
  return &type metadata for RunningSyncRequests.Change;
}

uint64_t initializeBufferWithCopyOfBuffer for RunningSyncRequests.Change.Started(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RunningSyncRequests.Change.Started(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningSyncRequests.Change.Started(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningSyncRequests.Change.Started()
{
  return &type metadata for RunningSyncRequests.Change.Started;
}

uint64_t getEnumTagSinglePayload for RunningSyncRequests.Change.Completed(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RunningSyncRequests.Change.Completed(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningSyncRequests.Change.Completed()
{
  return &type metadata for RunningSyncRequests.Change.Completed;
}

uint64_t sub_10002292C(uint64_t a1)
{
  return a1;
}

unint64_t sub_100022964(unint64_t a1)
{
  switch(a1 >> 60)
  {
    case 1uLL:
      unint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v7 = swift_allocObject();
      sub_100023388(a1);
      if (v3 - 2501 < 0xFFFFFFFFFFFFFDA7 || v6 - 13 < 0xFFFFFFFFFFFFFFF4 || v4 - 32 < 0xFFFFFFFFFFFFFFE1)
      {
        __break(1u);
        goto LABEL_41;
      }
      *(void *)(v7 + 16) = v3;
      *(void *)(v7 + 24) = v6;
      unint64_t result = v7 | 4;
      *(void *)(v7 + 32) = v4;
      break;
    case 2uLL:
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v16 = ByteBufferAllocator.buffer(string:)(v13, v14, (uint64_t)j__malloc, (uint64_t)j__realloc, (uint64_t)sub_10002336C);
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      sub_100023388(a1);
      *(void *)(v15 + 16) = v16;
      *(void *)(v15 + 24) = v18;
      *(_DWORD *)(v15 + 32) = v20;
      *(_WORD *)(v15 + 36) = WORD2(v20);
      unint64_t result = v15 | 0x1000000000000000;
      *(unsigned char *)(v15 + 38) = BYTE6(v20);
      break;
    case 3uLL:
      uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v23 = swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v24 = ByteBufferAllocator.buffer(string:)(v21, v22, (uint64_t)j__malloc, (uint64_t)j__realloc, (uint64_t)sub_10002336C);
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      sub_100023388(a1);
      *(void *)(v23 + 16) = v24;
      *(void *)(v23 + 24) = v26;
      *(_DWORD *)(v23 + 32) = v28;
      *(_WORD *)(v23 + 36) = WORD2(v28);
      *(unsigned char *)(v23 + 38) = BYTE6(v28);
      unint64_t result = v23 | 0x1000000000000004;
      break;
    case 4uLL:
      unint64_t v29 = sub_100010EA4(*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) + 1);
      sub_100023388(a1);
      unint64_t result = v29;
      break;
    case 5uLL:
      uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v32 = swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v33 = ByteBufferAllocator.buffer(string:)(v30, v31, (uint64_t)j__malloc, (uint64_t)j__realloc, (uint64_t)sub_10002336C);
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      sub_100023388(a1);
      *(void *)(v32 + 16) = v33;
      *(void *)(v32 + 24) = v35;
      *(_DWORD *)(v32 + 32) = v37;
      *(_WORD *)(v32 + 36) = WORD2(v37);
      unint64_t result = v32 | 0x2000000000000000;
      *(unsigned char *)(v32 + 38) = BYTE6(v37);
      break;
    case 6uLL:
      uint64_t v39 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v38 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v40 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v39;
      *(void *)(v42 + 24) = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = ByteBufferAllocator.buffer(string:)(v40, v41, (uint64_t)j__malloc, (uint64_t)j__realloc, (uint64_t)sub_10002336C);
      uint64_t v45 = v44;
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      sub_100023388(a1);
      *(void *)(v42 + 32) = v43;
      *(void *)(v42 + 40) = v45;
      *(_DWORD *)(v42 + 48) = v47;
      *(_WORD *)(v42 + 52) = WORD2(v47);
      unint64_t result = v42 | 0x6000000000000000;
      *(unsigned char *)(v42 + 54) = BYTE6(v47);
      break;
    case 7uLL:
      unint64_t v48 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = swift_allocObject();
      sub_100023440(v48);
      uint64_t v50 = sub_100022964(v48);
      sub_100023388(a1);
      *(void *)(v49 + 16) = v50;
      unint64_t result = v49 | 0x7000000000000000;
      break;
    case 8uLL:
      unint64_t v51 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v52 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v53 = swift_allocObject();
      sub_100023440(v51);
      sub_100023440(v51);
      sub_100023440(v52);
      *(void *)(v53 + 16) = sub_100022964(v51);
      uint64_t v54 = sub_100022964(v52);
      sub_100023388(v51);
      sub_100023388(a1);
      *(void *)(v53 + 24) = v54;
      unint64_t result = v53 | 0x7000000000000004;
      break;
    case 9uLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v7 = swift_allocObject();
      sub_100023388(a1);
      if (v4 - 2501 < 0xFFFFFFFFFFFFFDA7 || v3 - 13 < 0xFFFFFFFFFFFFFFF4 || v6 - 32 < 0xFFFFFFFFFFFFFFE1)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      *(void *)(v7 + 16) = v4;
      *(void *)(v7 + 24) = v3;
      *(void *)(v7 + 32) = v6;
      unint64_t result = v7 | 0x3000000000000004;
      break;
    case 0xAuLL:
      uint64_t v57 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v58 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v59 = swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v60 = ByteBufferAllocator.buffer(string:)(v57, v58, (uint64_t)j__malloc, (uint64_t)j__realloc, (uint64_t)sub_10002336C);
      uint64_t v62 = v61;
      uint64_t v64 = v63;
      swift_bridgeObjectRelease();
      sub_100023388(a1);
      *(void *)(v59 + 16) = v60;
      *(void *)(v59 + 24) = v62;
      *(_DWORD *)(v59 + 32) = v64;
      *(_WORD *)(v59 + 36) = WORD2(v64);
      unint64_t result = v59 | 0x4000000000000000;
      *(unsigned char *)(v59 + 38) = BYTE6(v64);
      break;
    case 0xBuLL:
      uint64_t v65 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v66 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v67 = swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v68 = ByteBufferAllocator.buffer(string:)(v65, v66, (uint64_t)j__malloc, (uint64_t)j__realloc, (uint64_t)sub_10002336C);
      uint64_t v70 = v69;
      uint64_t v72 = v71;
      swift_bridgeObjectRelease();
      sub_100023388(a1);
      *(void *)(v67 + 16) = v68;
      *(void *)(v67 + 24) = v70;
      *(_DWORD *)(v67 + 32) = v72;
      *(_WORD *)(v67 + 36) = WORD2(v72);
      unint64_t result = v67 | 0x5000000000000000;
      *(unsigned char *)(v67 + 38) = BYTE6(v72);
      break;
    case 0xCuLL:
      unint64_t result = *(void *)((char *)&unk_1005EDE58 + ((a1 + 0x4000000000000000) & 0xFFFFFFFFFFFFFFF8));
      break;
    default:
      unint64_t v1 = *(void *)(a1 + 16);
      unint64_t v3 = *(void *)(a1 + 24);
      sub_100023440(v1);
      sub_100023440(v1);
      sub_100023440(v3);
      unint64_t v4 = sub_100022964(v1);
      sub_100023440(v3);
      unint64_t v5 = sub_100022964(v3);
      unint64_t v6 = v5;
      if (((v4 >> 59) & 0x1E | (v4 >> 2) & 1) == 0x18)
      {
        uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        if (((v5 >> 59) & 0x1E | (v5 >> 2) & 1) == 0x18)
        {
          uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          uint64_t v9 = swift_allocObject();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1000114D8(v8);
          sub_100023388(v1);
          sub_100023388(v3);
          sub_10000952C(v6);
          sub_10000952C(v4);
          sub_100023388(a1);
          *(void *)(v9 + 16) = v7;
          unint64_t result = v9 | 0xC000000000000000;
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_100008D7C(v6);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_42:
          }
            uint64_t v7 = (uint64_t)sub_10001601C(0, *(void *)(v7 + 16) + 1, 1, (void *)v7);
          unint64_t v77 = *(void *)(v7 + 16);
          unint64_t v76 = *(void *)(v7 + 24);
          if (v77 >= v76 >> 1) {
            uint64_t v7 = (uint64_t)sub_10001601C((void *)(v76 > 1), v77 + 1, 1, (void *)v7);
          }
          uint64_t v78 = swift_allocObject();
          *(void *)(v7 + 16) = v77 + 1;
          *(void *)(v7 + 8 * v77 + 32) = v6;
          sub_100023388(v1);
          sub_100023388(v3);
          sub_10000952C(v6);
          sub_10000952C(v4);
          sub_100023388(a1);
          *(void *)(v78 + 16) = v7;
          unint64_t result = v78 | 0xC000000000000000;
        }
      }
      else if (((v5 >> 59) & 0x1E | (v5 >> 2) & 1) == 0x18)
      {
        uint64_t v73 = swift_allocObject();
        sub_10000566C(&qword_10070A048);
        uint64_t v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_1005F6670;
        *(void *)(v74 + 32) = v4;
        uint64_t v81 = v74;
        sub_100008D7C(v4);
        swift_bridgeObjectRetain();
        uint64_t v75 = swift_bridgeObjectRetain();
        sub_1000114D8(v75);
        sub_100023388(v1);
        sub_100023388(v3);
        sub_10000952C(v4);
        swift_bridgeObjectRelease();
        sub_10000952C(v6);
        sub_100023388(a1);
        *(void *)(v73 + 16) = v81;
        unint64_t result = v73 | 0xC000000000000000;
      }
      else
      {
        uint64_t v79 = swift_allocObject();
        sub_10000566C(&qword_10070A048);
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1005F6690;
        *(void *)(v80 + 32) = v4;
        *(void *)(v80 + 40) = v6;
        sub_100008D7C(v6);
        sub_100008D7C(v4);
        sub_100023388(v1);
        sub_100023388(v3);
        sub_10000952C(v4);
        sub_10000952C(v6);
        sub_100023388(a1);
        *(void *)(v79 + 16) = v80;
        unint64_t result = v79 | 0xC000000000000000;
      }
      break;
  }
  return result;
}

uint64_t sub_10002332C()
{
  swift_release();
  return _swift_deallocObject(v0, 39, 7);
}

void sub_10002336C(void *a1)
{
}

void *sub_10002337C(void *__dst, const void *__src, size_t __len)
{
  if ((__len & 0x8000000000000000) == 0) {
    return memmove(__dst, __src, __len);
  }
  __break(1u);
  return __dst;
}

unint64_t sub_100023388(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000233F0()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100023400()
{
  sub_10000952C(*(void *)(v0 + 16));
  sub_10000952C(*(void *)(v0 + 24));
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100023440(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000234A8()
{
  sub_10000952C(*(void *)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000234E0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 55, 7);
}

uint64_t sub_100023520()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100023558(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  if (!sub_100077D1C(*(void *)a1, *(void *)a2) || (sub_100020158(v2, v5) & 1) == 0 || ((v3 ^ v6) & 1) != 0) {
    return 0;
  }
  return sub_100020538(v4, v7);
}

uint64_t sub_1000235F4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v24[8] = *(_OWORD *)(a1 + 128);
  v24[9] = v2;
  long long v3 = *(_OWORD *)(a1 + 176);
  v24[10] = *(_OWORD *)(a1 + 160);
  long long v4 = *(_OWORD *)(a1 + 80);
  v24[4] = *(_OWORD *)(a1 + 64);
  v24[5] = v4;
  long long v5 = *(_OWORD *)(a1 + 112);
  v24[6] = *(_OWORD *)(a1 + 96);
  v24[7] = v5;
  long long v6 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v24[2] = *(_OWORD *)(a1 + 32);
  v24[3] = v7;
  long long v8 = *(_OWORD *)(a1 + 192);
  long long v9 = *(_OWORD *)(a1 + 224);
  v20[2] = *(_OWORD *)(a1 + 208);
  v20[3] = v9;
  v20[0] = v3;
  v20[1] = v8;
  long long v10 = *(_OWORD *)(a2 + 144);
  v25[8] = *(_OWORD *)(a2 + 128);
  v25[9] = v10;
  long long v11 = *(_OWORD *)(a2 + 176);
  v25[10] = *(_OWORD *)(a2 + 160);
  long long v12 = *(_OWORD *)(a2 + 80);
  v25[4] = *(_OWORD *)(a2 + 64);
  v25[5] = v12;
  long long v13 = *(_OWORD *)(a2 + 112);
  v25[6] = *(_OWORD *)(a2 + 96);
  v25[7] = v13;
  long long v14 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v15;
  long long v16 = *(_OWORD *)(a2 + 192);
  long long v17 = *(_OWORD *)(a2 + 224);
  v22[2] = *(_OWORD *)(a2 + 208);
  v22[3] = v17;
  __int16 v21 = *(_WORD *)(a1 + 240);
  __int16 v23 = *(_WORD *)(a2 + 240);
  v22[0] = v11;
  v22[1] = v16;
  if (sub_100029F48((uint64_t)v24, (uint64_t)v25)) {
    char v18 = static RemoteMailbox.__derived_struct_equals(_:_:)(v20, v22);
  }
  else {
    char v18 = 0;
  }
  return v18 & 1;
}

__n128 sub_1000236D0@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[1].n128_u8[0];
  unint64_t v3 = v1[1].n128_u64[1];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  a1[1].n128_u64[1] = v3;
  a1[2].n128_u64[0] = 0;
  return result;
}

uint64_t static RemoteMailbox.Attributes.marked.getter()
{
  return 2;
}

char *sub_1000236F4()
{
  unint64_t v1 = sub_100025ACC(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100023754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000239FC(a1, a2, a3, *(void *)v3, *(void *)(v3 + 8), *(unsigned char *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100023764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_100709E30);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator(0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  char v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100026334(v4, (uint64_t)v18);
  *(void *)&v18[*(int *)(v16 + 28)] = *(void *)(v4
                                                  + *(int *)(type metadata accessor for MessageBatches.OtherUIDsBatchSequence(0)
                                                           + 20));
  uint64_t result = sub_10001FD28(v4, type metadata accessor for MessageBatches.OtherUIDsBatchSequence);
  if (!a2)
  {
    a3 = 0;
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    sub_10002639C((uint64_t)v18, a1);
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = a1;
    sub_100065FF0((uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      a3 = 0;
LABEL_10:
      sub_100007A48((uint64_t)v10, &qword_10070A000);
      a1 = v23;
    }
    else
    {
      uint64_t v20 = a3;
      a3 = 0;
      uint64_t v22 = v20;
      uint64_t v21 = v20 - 1;
      while (1)
      {
        sub_10001FDF0((uint64_t)v10, (uint64_t)v14, &qword_100709E30);
        sub_10001FDF0((uint64_t)v14, a2, &qword_100709E30);
        if (v21 == a3) {
          break;
        }
        a2 += *(void *)(v12 + 72);
        sub_100065FF0((uint64_t)v10);
        ++a3;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
          goto LABEL_10;
        }
      }
      a3 = v22;
      a1 = v23;
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000239FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v8 = a4;
  char v9 = a6 & 1;
  if (!a2) {
    goto LABEL_39;
  }
  if (!a3)
  {
    unint64_t v12 = 0;
    uint64_t v50 = 0;
    goto LABEL_43;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    unint64_t v10 = *(void *)(a4 + 16);
    if (v10)
    {
      uint64_t v11 = 0;
      unint64_t v12 = 0;
      uint64_t v56 = a4 + 32;
      uint64_t v57 = a7;
      uint64_t v13 = 1;
      uint64_t v55 = result;
      int v58 = a6 & 1;
      uint64_t v51 = a3;
      while (1)
      {
        uint64_t v53 = a2;
        uint64_t v54 = v11;
        uint64_t v52 = v13;
        if (v12 >= v10)
        {
LABEL_44:
          __break(1u);
LABEL_45:
          uint64_t v50 = a3;
          a7 = v57;
          uint64_t result = v55;
          uint64_t v8 = a4;
LABEL_42:
          char v9 = v58;
          goto LABEL_43;
        }
        long long v14 = (long long *)(v56 + 176 * v12++);
        while (1)
        {
          long long v15 = v14[9];
          long long v94 = v14[8];
          long long v95 = v15;
          long long v96 = v14[10];
          long long v16 = v14[5];
          long long v90 = v14[4];
          long long v91 = v16;
          long long v17 = v14[7];
          long long v92 = v14[6];
          long long v93 = v17;
          long long v18 = v14[1];
          long long v86 = *v14;
          long long v87 = v18;
          long long v19 = v14[3];
          long long v88 = v14[2];
          long long v89 = v19;
          if (*(void *)(a5 + 16))
          {
            long long v20 = v86;
            uint64_t v21 = DWORD2(v87);
            unsigned int v69 = DWORD1(v91);
            char v22 = BYTE8(v91);
            unint64_t v23 = sub_100024264(v87, DWORD2(v87));
            if (v24) {
              break;
            }
          }
LABEL_31:
          unint64_t v36 = *(void *)(v8 + 16);
          if (v12 == v36)
          {
            uint64_t v50 = v54;
            uint64_t result = v55;
            a7 = v57;
            goto LABEL_42;
          }
          v14 += 11;
          if (v12++ >= v36) {
            goto LABEL_44;
          }
        }
        uint64_t v25 = *(void *)(a5 + 56) + 72 * v23;
        uint64_t v26 = *(void *)v25;
        char v67 = *(unsigned char *)(v25 + 12);
        int v68 = *(_DWORD *)(v25 + 8);
        int v27 = *(unsigned __int16 *)(v25 + 14);
        unsigned int v28 = *(unsigned __int8 *)(v25 + 16);
        uint64_t v65 = *(void *)(v25 + 32);
        uint64_t v66 = *(void *)(v25 + 24);
        uint64_t v63 = *(void *)(v25 + 48);
        uint64_t v64 = *(void *)(v25 + 40);
        uint64_t v62 = *(void *)(v25 + 56);
        char v60 = *(unsigned char *)(v25 + 65);
        char v61 = *(unsigned char *)(v25 + 64);
        sub_100007780((uint64_t)&v86);
        swift_bridgeObjectRetain();
        int v29 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
        int v30 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
        if (v29)
        {
          if ((v30 & ~v29) == 0)
          {
            if ((v29 & v27) != 0) {
              goto LABEL_16;
            }
            goto LABEL_17;
          }
        }
        else if (!v30)
        {
          goto LABEL_17;
        }
        if (((v30 | v29) & v27) != 0)
        {
LABEL_16:
          sub_100007820((uint64_t)&v86);
          swift_bridgeObjectRelease();
LABEL_30:
          uint64_t v8 = a4;
          goto LABEL_31;
        }
LABEL_17:
        long long v78 = v94;
        long long v79 = v95;
        long long v80 = v96;
        long long v74 = v90;
        long long v75 = v91;
        long long v76 = v92;
        long long v77 = v93;
        long long v70 = v86;
        long long v71 = v87;
        long long v72 = v88;
        long long v73 = v89;
        *(void *)&long long v81 = v26;
        DWORD2(v81) = v68;
        BYTE12(v81) = v67;
        HIWORD(v81) = v27;
        LOBYTE(v82) = v28;
        *((void *)&v82 + 1) = v66;
        *(void *)&long long v83 = v65;
        *((void *)&v83 + 1) = v64;
        *(void *)&long long v84 = v63;
        *((void *)&v84 + 1) = v62;
        LOBYTE(v85) = v61;
        HIBYTE(v85) = v60;
        if (!v58) {
          goto LABEL_36;
        }
        sub_100007780((uint64_t)&v86);
        uint64_t v31 = swift_bridgeObjectRetain();
        char v32 = MailboxName.isInbox.getter(v31, v21);
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0
          && v28 <= 7
          && ((1 << v28) & 0xDB) != 0
          && ((v22 & 1) != 0 || (BYTE12(v92) & 1) == 0 && DWORD2(v92) >= v69))
        {
          if (*(void *)(v57 + 16) && (unint64_t v33 = sub_1000242DC(v20, *((Swift::UInt *)&v20 + 1)), (v34 & 1) != 0))
          {
            int v35 = *(unsigned __int16 *)(*(void *)(v57 + 56) + 2 * v33);
            sub_100007820((uint64_t)&v86);
            if ((~v35 & 0x3FFF) != 0) {
              goto LABEL_36;
            }
          }
          else
          {
            sub_100007820((uint64_t)&v86);
          }
          sub_100024350((uint64_t)&v70);
          goto LABEL_30;
        }
        sub_100007820((uint64_t)&v86);
LABEL_36:
        long long v38 = v70;
        long long v39 = v71;
        long long v40 = v73;
        *(_OWORD *)(v53 + 32) = v72;
        *(_OWORD *)(v53 + 48) = v40;
        *(_OWORD *)uint64_t v53 = v38;
        *(_OWORD *)(v53 + 16) = v39;
        long long v41 = v74;
        long long v42 = v75;
        long long v43 = v77;
        *(_OWORD *)(v53 + 96) = v76;
        *(_OWORD *)(v53 + 112) = v43;
        *(_OWORD *)(v53 + 64) = v41;
        *(_OWORD *)(v53 + 80) = v42;
        long long v44 = v78;
        long long v45 = v79;
        long long v46 = v81;
        *(_OWORD *)(v53 + 160) = v80;
        *(_OWORD *)(v53 + 176) = v46;
        *(_OWORD *)(v53 + 128) = v44;
        *(_OWORD *)(v53 + 144) = v45;
        long long v47 = v82;
        long long v48 = v83;
        long long v49 = v84;
        *(_WORD *)(v53 + 240) = v85;
        *(_OWORD *)(v53 + 208) = v48;
        *(_OWORD *)(v53 + 224) = v49;
        *(_OWORD *)(v53 + 192) = v47;
        a3 = v51;
        uint64_t v50 = v52;
        if (v52 == v51) {
          goto LABEL_45;
        }
        a2 = v53 + 248;
        uint64_t v13 = v52 + 1;
        uint64_t v8 = a4;
        unint64_t v10 = *(void *)(a4 + 16);
        uint64_t v11 = v52;
        a7 = v57;
        uint64_t result = v55;
        char v9 = v58;
        if (v10 == v12)
        {
LABEL_43:
          *(void *)uint64_t result = v8;
          *(void *)(result + 8) = a5;
          *(unsigned char *)(result + 16) = v9;
          *(void *)(result + 24) = a7;
          *(void *)(result + 32) = v12;
          return v50;
        }
      }
    }
LABEL_39:
    unint64_t v12 = 0;
    uint64_t v50 = 0;
    goto LABEL_43;
  }
  __break(1u);
  return result;
}

uint64_t sub_100023DE8()
{
  return sub_1005E1FD0();
}

void sub_100023E0C(uint64_t a1@<X8>)
{
  unint64_t v2 = v1[4];
  uint64_t v3 = *v1;
  unint64_t v4 = *(void *)(*v1 + 16);
  if (v2 == v4)
  {
LABEL_2:
    sub_100025670((uint64_t)&v53);
    long long v5 = &v53;
    goto LABEL_3;
  }
  if (v2 >= v4)
  {
LABEL_34:
    __break(1u);
    return;
  }
  long long v6 = v1;
  uint64_t v7 = v3 + 32;
  uint64_t v8 = v1[1];
  uint64_t v37 = *v1;
  uint64_t v38 = v3 + 32;
  while (1)
  {
    char v9 = (long long *)(v7 + 176 * v2);
    long long v10 = *v9;
    long long v11 = v9[2];
    long long v70 = v9[1];
    long long v71 = v11;
    long long v12 = v9[3];
    long long v13 = v9[4];
    long long v14 = v9[6];
    long long v74 = v9[5];
    long long v75 = v14;
    long long v72 = v12;
    long long v73 = v13;
    long long v15 = v9[7];
    long long v16 = v9[8];
    long long v17 = v9[10];
    long long v78 = v9[9];
    long long v79 = v17;
    long long v76 = v15;
    long long v77 = v16;
    long long v69 = v10;
    if (!*(void *)(v8 + 16)) {
      goto LABEL_15;
    }
    Swift::UInt v49 = *((void *)&v69 + 1);
    uint64_t v50 = v69;
    uint64_t v18 = DWORD2(v70);
    unsigned int v48 = DWORD1(v74);
    char v19 = BYTE8(v74);
    unint64_t v20 = sub_100024264(v70, DWORD2(v70));
    if ((v21 & 1) == 0) {
      goto LABEL_15;
    }
    char v22 = v6;
    uint64_t v23 = *(void *)(v8 + 56) + 72 * v20;
    uint64_t v24 = *(void *)v23;
    char v46 = *(unsigned char *)(v23 + 12);
    int v47 = *(_DWORD *)(v23 + 8);
    int v25 = *(unsigned __int16 *)(v23 + 14);
    unsigned int v26 = *(unsigned __int8 *)(v23 + 16);
    uint64_t v44 = *(void *)(v23 + 32);
    uint64_t v45 = *(void *)(v23 + 24);
    uint64_t v42 = *(void *)(v23 + 48);
    uint64_t v43 = *(void *)(v23 + 40);
    uint64_t v41 = *(void *)(v23 + 56);
    char v39 = *(unsigned char *)(v23 + 65);
    char v40 = *(unsigned char *)(v23 + 64);
    sub_100007780((uint64_t)&v69);
    swift_bridgeObjectRetain();
    int v27 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
    int v28 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
    if (v27)
    {
      if ((v28 & ~v27) == 0)
      {
        if ((v27 & v25) != 0) {
          goto LABEL_14;
        }
        goto LABEL_19;
      }
    }
    else if (!v28)
    {
      goto LABEL_19;
    }
    if (((v28 | v27) & v25) != 0)
    {
LABEL_14:
      sub_100007820((uint64_t)&v69);
      swift_bridgeObjectRelease();
      long long v6 = v22;
      uint64_t v3 = v37;
      uint64_t v7 = v38;
LABEL_15:
      v6[4] = ++v2;
      goto LABEL_16;
    }
LABEL_19:
    long long v61 = v77;
    long long v62 = v78;
    long long v63 = v79;
    long long v57 = v73;
    long long v58 = v74;
    long long v59 = v75;
    long long v60 = v76;
    long long v53 = v69;
    long long v54 = v70;
    long long v55 = v71;
    long long v56 = v72;
    *(void *)&long long v64 = v24;
    DWORD2(v64) = v47;
    BYTE12(v64) = v46;
    HIWORD(v64) = v25;
    LOBYTE(v65) = v26;
    *((void *)&v65 + 1) = v45;
    *(void *)&long long v66 = v44;
    *((void *)&v66 + 1) = v43;
    *(void *)&long long v67 = v42;
    *((void *)&v67 + 1) = v41;
    LOBYTE(v68) = v40;
    HIBYTE(v68) = v39;
    long long v6 = v22;
    if ((v22[2] & 1) == 0) {
      goto LABEL_33;
    }
    sub_100007780((uint64_t)&v69);
    uint64_t v30 = swift_bridgeObjectRetain();
    char v31 = MailboxName.isInbox.getter(v30, v18);
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0
      || v26 > 7
      || ((1 << v26) & 0xDB) == 0
      || (v19 & 1) == 0 && ((BYTE12(v75) & 1) != 0 || DWORD2(v75) < v48))
    {
      break;
    }
    uint64_t v32 = v22[3];
    if (*(void *)(v32 + 16) && (unint64_t v33 = sub_1000242DC(v50, v49), (v34 & 1) != 0))
    {
      int v35 = *(unsigned __int16 *)(*(void *)(v32 + 56) + 2 * v33);
      sub_100007820((uint64_t)&v69);
      uint64_t v7 = v38;
      if ((~v35 & 0x3FFF) != 0) {
        goto LABEL_33;
      }
    }
    else
    {
      sub_100007820((uint64_t)&v69);
      uint64_t v7 = v38;
    }
    sub_100024350((uint64_t)&v53);
    _OWORD v22[4] = ++v2;
    uint64_t v3 = v37;
LABEL_16:
    unint64_t v29 = *(void *)(v3 + 16);
    if (v2 == v29) {
      goto LABEL_2;
    }
    if (v2 >= v29) {
      goto LABEL_34;
    }
  }
  sub_100007820((uint64_t)&v69);
LABEL_33:
  v51[12] = v65;
  v51[13] = v66;
  v51[14] = v67;
  __int16 v52 = v68;
  v51[8] = v61;
  v51[9] = v62;
  v51[10] = v63;
  v51[11] = v64;
  v51[4] = v57;
  v51[5] = v58;
  v51[6] = v59;
  v51[7] = v60;
  v51[0] = v53;
  v51[1] = v54;
  v51[2] = v55;
  v51[3] = v56;
  UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v51);
  _OWORD v22[4] = v2 + 1;
  long long v5 = v51;
LABEL_3:
  sub_10001FDF0((uint64_t)v5, (uint64_t)v80, &qword_10070A1F8);
  sub_10001FDF0((uint64_t)v80, a1, &qword_10070A1F8);
}

uint64_t sub_1000241C4@<X0>(uint64_t a1@<X8>)
{
  sub_100023E0C((uint64_t)v3);
  return sub_10001FDF0((uint64_t)v3, a1, &qword_10070A1F8);
}

unint64_t sub_10002420C()
{
  unint64_t result = qword_10070A1F0;
  if (!qword_10070A1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A1F0);
  }
  return result;
}

unint64_t sub_100024264(uint64_t a1, unsigned int a2)
{
  sub_1005E33F0();
  sub_1005E3410(a2 | ((unint64_t)a2 << 32));
  Swift::Int v4 = sub_1005E3470();
  return sub_1000247EC(a1, a2, v4);
}

unint64_t sub_1000242DC(uint64_t a1, Swift::UInt a2)
{
  sub_1005E33F0();
  sub_1005E3410(a2);
  Swift::Int v4 = sub_1005E3470();
  return sub_100024910(a1, a2, v4);
}

uint64_t sub_100024350(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000078B0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

unint64_t sub_1000243F4(Swift::UInt32 a1)
{
  sub_1005E33F0();
  sub_1005E3440(a1);
  Swift::Int v2 = sub_1005E3470();
  return sub_100024A28(a1, v2);
}

unint64_t sub_10002445C(uint64_t a1, unint64_t a2)
{
  sub_1005E33F0();
  sub_100008D24(a1, a2);
  sub_1005E08B0();
  sub_1000094D4(a1, a2);
  Swift::Int v4 = sub_1005E3470();
  return sub_100024AC4(a1, a2, v4);
}

unint64_t sub_1000244EC(uint64_t a1)
{
  sub_1005E33F0();
  sub_10018A5EC((uint64_t)v4);
  Swift::Int v2 = sub_1005E3470();
  return sub_100024F68(a1, v2);
}

unint64_t sub_100024558(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  __chkstk_darwin(v2 - 8);
  Swift::Int v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005E33F0();
  uint64_t v5 = a1 + *(void *)(*(void *)a1 + 96);
  swift_beginAccess();
  sub_10001FCC0(v5, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_10018A5EC((uint64_t)v9);
  sub_10001FD28((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  Swift::Int v6 = sub_1005E3470();
  return sub_1000250C8(a1, v6);
}

unint64_t sub_100024668(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  sub_1005E1DB0();
  Swift::Int v4 = sub_1005E3470();
  return sub_1000252B4(a1, a2, v4);
}

unint64_t sub_1000246E0(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_10001B1B0((uint64_t)v6, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10001B1B0((uint64_t)v6, a2);
  swift_bridgeObjectRelease();
  Swift::Int v4 = sub_1005E3470();
  return sub_100025398(a1, a2, v4);
}

unint64_t sub_100024780(uint64_t a1)
{
  sub_1005E33F0();
  MoveOrCopy.hash(into:)();
  Swift::Int v2 = sub_1005E3470();
  return sub_100025498(a1, v2);
}

unint64_t sub_1000247EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    while (1)
    {
      uint64_t v8 = *(void *)(v3 + 48) + 16 * result;
      if ((*(unsigned int *)(v8 + 8) | ((unint64_t)*(unsigned int *)(v8 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
      {
        uint64_t v9 = *(void *)v8;
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10 == *(void *)(a1 + 16))
        {
          if (!v10 || v9 == a1) {
            return result;
          }
          if (*(unsigned __int8 *)(v9 + 32) == *(unsigned __int8 *)(a1 + 32))
          {
            if (v10 == 1) {
              return result;
            }
            if (*(unsigned __int8 *)(v9 + 33) == *(unsigned __int8 *)(a1 + 33))
            {
              if (v10 == 2) {
                return result;
              }
              if (*(unsigned __int8 *)(v9 + 34) == *(unsigned __int8 *)(a1 + 34))
              {
                if (v10 == 3) {
                  return result;
                }
                if (*(unsigned __int8 *)(v9 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t result = (result + 1) & v7;
      if (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
        return result;
      }
    }
    long long v11 = (unsigned __int8 *)(v9 + 36);
    uint64_t v12 = v10 - 4;
    long long v13 = (unsigned __int8 *)(a1 + 36);
    while (v12)
    {
      int v15 = *v11++;
      int v14 = v15;
      int v16 = *v13++;
      --v12;
      if (v14 != v16) {
        goto LABEL_3;
      }
    }
  }
  return result;
}

unint64_t sub_100024910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    while (1)
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      if (v8[1] == a2)
      {
        uint64_t v9 = *v8;
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10 == *(void *)(a1 + 16))
        {
          if (!v10 || v9 == a1) {
            return result;
          }
          if (*(unsigned __int8 *)(v9 + 32) == *(unsigned __int8 *)(a1 + 32))
          {
            if (v10 == 1) {
              return result;
            }
            if (*(unsigned __int8 *)(v9 + 33) == *(unsigned __int8 *)(a1 + 33))
            {
              if (v10 == 2) {
                return result;
              }
              if (*(unsigned __int8 *)(v9 + 34) == *(unsigned __int8 *)(a1 + 34))
              {
                if (v10 == 3) {
                  return result;
                }
                if (*(unsigned __int8 *)(v9 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t result = (result + 1) & v7;
      if (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
        return result;
      }
    }
    long long v11 = (unsigned __int8 *)(v9 + 36);
    uint64_t v12 = v10 - 4;
    long long v13 = (unsigned __int8 *)(a1 + 36);
    while (v12)
    {
      int v15 = *v11++;
      int v14 = v15;
      int v16 = *v13++;
      --v12;
      if (v14 != v16) {
        goto LABEL_3;
      }
    }
  }
  return result;
}

unint64_t sub_100024A28(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100024AC4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v31 = ~v5;
    BOOL v9 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v30 = v9;
    uint64_t v29 = HIDWORD(a1) - (int)a1;
    unint64_t v32 = a2 >> 62;
    uint64_t v33 = BYTE6(a2);
    uint64_t v27 = v3 + 64;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
      uint64_t v12 = *v10;
      unint64_t v11 = v10[1];
      uint64_t v13 = 0;
      switch(v11 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v12), v12))
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
          }
          uint64_t v13 = HIDWORD(v12) - (int)v12;
LABEL_14:
          sub_100008D24(v12, v11);
          sub_100008D24(v12, v11);
          break;
        case 2uLL:
          uint64_t v15 = *(void *)(v12 + 16);
          uint64_t v14 = *(void *)(v12 + 24);
          uint64_t v13 = v14 - v15;
          if (!__OFSUB__(v14, v15)) {
            goto LABEL_14;
          }
          goto LABEL_42;
        case 3uLL:
          break;
        default:
          uint64_t v13 = BYTE6(v11);
          break;
      }
      uint64_t v16 = v33;
      switch(v32)
      {
        case 1uLL:
          uint64_t v16 = v29;
          if (v30) {
            goto LABEL_43;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v18 = *(void *)(a1 + 16);
          uint64_t v17 = *(void *)(a1 + 24);
          BOOL v19 = __OFSUB__(v17, v18);
          uint64_t v16 = v17 - v18;
          if (!v19) {
            goto LABEL_19;
          }
          goto LABEL_44;
        case 3uLL:
          if (v13) {
            goto LABEL_7;
          }
          goto LABEL_39;
        default:
LABEL_19:
          if (v13 == v16)
          {
            if (v13 < 1)
            {
LABEL_39:
              sub_1000094D4(v12, v11);
              sub_1000094D4(v12, v11);
              return v6;
            }
            switch(v11 >> 62)
            {
              case 1uLL:
                if (v12 >> 32 < (int)v12) {
                  goto LABEL_45;
                }
                sub_100008D24(v12, v11);
                sub_100008D24(a1, a2);
                uint64_t v20 = sub_1005E0550();
                if (!v20) {
                  goto LABEL_27;
                }
                uint64_t v21 = sub_1005E0580();
                if (__OFSUB__((int)v12, v21)) {
                  goto LABEL_48;
                }
                v20 += (int)v12 - v21;
LABEL_27:
                sub_1005E0570();
                sub_1000260B8(v20, a1, a2, (BOOL *)__s1);
                sub_1000094D4(v12, v11);
                break;
              case 2uLL:
                uint64_t v23 = *(void *)(v12 + 16);
                uint64_t v22 = *(void *)(v12 + 24);
                sub_100008D24(a1, a2);
                swift_retain();
                swift_retain();
                uint64_t v24 = sub_1005E0550();
                if (!v24) {
                  goto LABEL_31;
                }
                uint64_t v25 = sub_1005E0580();
                if (__OFSUB__(v23, v25)) {
                  goto LABEL_47;
                }
                v24 += v23 - v25;
LABEL_31:
                if (__OFSUB__(v22, v23)) {
                  goto LABEL_46;
                }
                sub_1005E0570();
                sub_1000260B8(v24, a1, a2, (BOOL *)__s1);
                swift_release();
                swift_release();
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                sub_100008D24(a1, a2);
                goto LABEL_36;
              default:
                __s1[0] = v12;
                LOWORD(__s1[1]) = v11;
                BYTE2(__s1[1]) = BYTE2(v11);
                BYTE3(__s1[1]) = BYTE3(v11);
                BYTE4(__s1[1]) = BYTE4(v11);
                BYTE5(__s1[1]) = BYTE5(v11);
                sub_100008D24(a1, a2);
LABEL_36:
                sub_1000260B8((uint64_t)__s1, a1, a2, &v34);
                sub_1000094D4(a1, a2);
                sub_1000094D4(v12, v11);
                sub_1000094D4(v12, v11);
                if (v34) {
                  return v6;
                }
                goto LABEL_8;
            }
            sub_1000094D4(a1, a2);
            sub_1000094D4(v12, v11);
            sub_1000094D4(v12, v11);
            if (__s1[0]) {
              return v6;
            }
            uint64_t v4 = v27;
            uint64_t v3 = v28;
          }
          else
          {
LABEL_7:
            sub_1000094D4(v12, v11);
            sub_1000094D4(v12, v11);
          }
LABEL_8:
          unint64_t v6 = (v6 + 1) & v31;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

unint64_t sub_100024F68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MoveAndCopyMessages.CommandID() - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_10001FCC0(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      char v13 = sub_1001961B8((uint64_t)v8, a1);
      sub_10001FD28((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1000250C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  unint64_t v10 = &v18[-v9];
  uint64_t v11 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v12 = a2 & ~v11;
  if ((*(void *)(v2 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = a1 + *(void *)(*(void *)a1 + 96);
    swift_beginAccess();
    do
    {
      uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v12);
      uint64_t v16 = v15 + *(void *)(*(void *)v15 + 96);
      swift_beginAccess();
      sub_10001FCC0(v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10001FCC0(v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      swift_retain();
      LOBYTE(v16) = sub_1001961B8((uint64_t)v10, (uint64_t)v8);
      sub_10001FD28((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10001FD28((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      swift_release();
      if (v16) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
    }
    while (((*(void *)(v2 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

unint64_t sub_1000252B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1005E3290() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1005E3290() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100025398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v8 = ~v4;
    do
    {
      uint64_t v9 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v5);
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_100013AB4(v10, a1))
      {
        char v12 = sub_100013AB4(v11, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v12) {
          return v5;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_100025498(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v7 = *(void *)(v2 + 48) + 40 * i;
    uint64_t v8 = *(void *)(v7 + 32);
    long long v9 = *(_OWORD *)(v7 + 16);
    v19[0] = *(_OWORD *)v7;
    v19[1] = v9;
    uint64_t v20 = v8;
    sub_100026EC0((uint64_t)v19);
    char v10 = static MoveOrCopy.__derived_struct_equals(_:_:)(v19, a1);
    sub_100026F04((uint64_t)v19);
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = ~v4;
      for (unint64_t i = (i + 1) & v11; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v11)
      {
        uint64_t v12 = *(void *)(v2 + 48) + 40 * i;
        uint64_t v13 = *(void *)(v12 + 32);
        long long v14 = *(_OWORD *)(v12 + 16);
        v17[0] = *(_OWORD *)v12;
        v17[1] = v14;
        uint64_t v18 = v13;
        sub_100026EC0((uint64_t)v17);
        char v15 = static MoveOrCopy.__derived_struct_equals(_:_:)(v17, a1);
        sub_100026F04((uint64_t)v17);
        if (v15) {
          break;
        }
      }
    }
  }
  return i;
}

BOOL sub_1000255D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33)) {
    return 0;
  }
  if (v2 == 2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 34) != *(unsigned __int8 *)(a2 + 34)) {
    return 0;
  }
  uint64_t v4 = (unsigned __int8 *)(a1 + 35);
  unint64_t v5 = (unsigned __int8 *)(a2 + 35);
  uint64_t v6 = v2 - 3;
  do
  {
    BOOL result = v6 == 0;
    if (!v6) {
      break;
    }
    int v8 = *v4++;
    int v7 = v8;
    int v9 = *v5++;
    --v6;
  }
  while (v7 == v9);
  return result;
}

double sub_100025670(uint64_t a1)
{
  *(_WORD *)(a1 + 240) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

size_t sub_10002569C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100709E30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MessageBatches.OtherUIDsBatchSequence(0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator(0);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(unsigned __int8 *)(v6 + 80);
  sub_10001FCC0(a1, (uint64_t)v12, type metadata accessor for MessageBatches.OtherUIDsBatchSequence);
  sub_100026334((uint64_t)v12, (uint64_t)v16);
  *(void *)&v16[*(int *)(v14 + 28)] = *(void *)&v12[*(int *)(v10 + 28)];
  sub_10001FD28((uint64_t)v12, type metadata accessor for MessageBatches.OtherUIDsBatchSequence);
  sub_100065FF0((uint64_t)v4);
  uint64_t v49 = v5;
  uint64_t v50 = v6;
  unsigned int v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (v48(v4, 1, v5) != 1)
  {
    uint64_t v19 = 0;
    uint64_t v47 = (v17 + 32) & ~v17;
    uint64_t v25 = (char *)_swiftEmptyArrayStorage + v47;
    unsigned int v26 = &qword_100709E30;
    uint64_t v45 = v8;
    uint64_t v46 = v17 | 7;
    uint64_t v27 = _swiftEmptyArrayStorage;
    uint64_t v44 = v4;
    while (1)
    {
      uint64_t v29 = v26;
      size_t result = sub_10001FDF0((uint64_t)v4, (uint64_t)v8, v26);
      if (v19)
      {
        uint64_t v18 = v27;
        BOOL v23 = __OFSUB__(v19--, 1);
        if (v23) {
          goto LABEL_32;
        }
      }
      else
      {
        unint64_t v30 = v27[3];
        if ((uint64_t)((v30 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_33;
        }
        int64_t v31 = v30 & 0xFFFFFFFFFFFFFFFELL;
        if (v31 <= 1) {
          uint64_t v32 = 1;
        }
        else {
          uint64_t v32 = v31;
        }
        sub_10000566C(&qword_10070A008);
        uint64_t v33 = *(void *)(v50 + 72);
        uint64_t v34 = v47;
        uint64_t v18 = (void *)swift_allocObject();
        size_t result = j__malloc_size(v18);
        if (!v33) {
          goto LABEL_34;
        }
        int64_t v35 = result - v34;
        if (result - v34 == 0x8000000000000000 && v33 == -1) {
          goto LABEL_35;
        }
        uint64_t v37 = v35 / v33;
        v18[2] = v32;
        v18[3] = 2 * (v35 / v33);
        uint64_t v38 = (char *)v18 + v34;
        uint64_t v39 = v27[3] >> 1;
        uint64_t v40 = v39 * v33;
        if (v27[2])
        {
          if (v18 < v27 || v38 >= (char *)v27 + v47 + v40)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v18 != v27)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v27[2] = 0;
        }
        uint64_t v25 = &v38[v40];
        uint64_t v42 = (v37 & 0x7FFFFFFFFFFFFFFFLL) - v39;
        size_t result = swift_release();
        uint64_t v4 = v44;
        int v8 = v45;
        BOOL v23 = __OFSUB__(v42, 1);
        uint64_t v19 = v42 - 1;
        if (v23)
        {
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
      }
      sub_10001FDF0((uint64_t)v8, (uint64_t)v25, v29);
      v25 += *(void *)(v50 + 72);
      sub_100065FF0((uint64_t)v4);
      int v28 = v48(v4, 1, v49);
      unsigned int v26 = v29;
      uint64_t v27 = v18;
      if (v28 == 1) {
        goto LABEL_3;
      }
    }
  }
  uint64_t v19 = 0;
LABEL_3:
  sub_10001FD28((uint64_t)v16, type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator);
  size_t result = sub_100007A48((uint64_t)v4, &qword_10070A000);
  unint64_t v21 = v18[3];
  if (v21 >= 2)
  {
    unint64_t v22 = v21 >> 1;
    BOOL v23 = __OFSUB__(v22, v19);
    uint64_t v24 = v22 - v19;
    if (v23) {
      goto LABEL_36;
    }
    v18[2] = v24;
  }
  return (size_t)v18;
}

char *sub_100025ACC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6 = a1;
  unint64_t v7 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  size_t result = (char *)swift_bridgeObjectRetain();
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  if (!v7)
  {
    uint64_t v11 = 0;
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_49:
    size_t result = (char *)swift_bridgeObjectRelease();
    unint64_t v60 = *((void *)v9 + 3);
    if (v60 >= 2)
    {
      unint64_t v61 = v60 >> 1;
      BOOL v47 = __OFSUB__(v61, v11);
      uint64_t v62 = v61 - v11;
      if (v47)
      {
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      *((void *)v9 + 2) = v62;
    }
    return v9;
  }
  unint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = (char *)&_swiftEmptyArrayStorage[4];
  uint64_t v67 = a4;
  unint64_t v68 = v7;
  uint64_t v69 = a2;
  uint64_t v70 = v6;
  while (2)
  {
    if (v10 >= v7)
    {
      __break(1u);
      goto LABEL_54;
    }
    long long v63 = v12;
    uint64_t v64 = v11;
    long long v65 = v9;
    for (uint64_t i = 176 * v10++ + 32; ; i += 176)
    {
      long long v14 = *(_OWORD *)(v6 + i + 144);
      long long v104 = *(_OWORD *)(v6 + i + 128);
      long long v105 = v14;
      long long v106 = *(_OWORD *)(v6 + i + 160);
      long long v15 = *(_OWORD *)(v6 + i + 80);
      long long v100 = *(_OWORD *)(v6 + i + 64);
      long long v101 = v15;
      long long v16 = *(_OWORD *)(v6 + i + 112);
      long long v102 = *(_OWORD *)(v6 + i + 96);
      long long v103 = v16;
      long long v17 = *(_OWORD *)(v6 + i + 16);
      long long v96 = *(_OWORD *)(v6 + i);
      long long v97 = v17;
      long long v18 = *(_OWORD *)(v6 + i + 48);
      long long v98 = *(_OWORD *)(v6 + i + 32);
      long long v99 = v18;
      if (*(void *)(a2 + 16))
      {
        long long v19 = v96;
        uint64_t v20 = DWORD2(v97);
        unsigned int v79 = DWORD1(v101);
        char v21 = BYTE8(v101);
        unint64_t v22 = sub_100024264(v97, DWORD2(v97));
        if (v23) {
          break;
        }
      }
LABEL_28:
      if (v7 == v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v64;
        uint64_t v9 = v65;
        goto LABEL_49;
      }
      ++v10;
    }
    uint64_t v24 = *(void *)(a2 + 56) + 72 * v22;
    uint64_t v25 = *(void *)v24;
    int v26 = *(_DWORD *)(v24 + 8);
    char v78 = *(unsigned char *)(v24 + 12);
    int v27 = *(unsigned __int16 *)(v24 + 14);
    unsigned int v28 = *(unsigned __int8 *)(v24 + 16);
    uint64_t v76 = *(void *)(v24 + 32);
    uint64_t v77 = *(void *)(v24 + 24);
    uint64_t v74 = *(void *)(v24 + 48);
    uint64_t v75 = *(void *)(v24 + 40);
    uint64_t v73 = *(void *)(v24 + 56);
    char v71 = *(unsigned char *)(v24 + 65);
    char v72 = *(unsigned char *)(v24 + 64);
    sub_100007780((uint64_t)&v96);
    swift_bridgeObjectRetain();
    int v29 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
    size_t result = (char *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
    int v30 = *(unsigned __int16 *)result;
    if (!v29)
    {
      if (!*(_WORD *)result) {
        goto LABEL_14;
      }
LABEL_12:
      if (((v30 | v29) & v27) == 0) {
        goto LABEL_14;
      }
LABEL_13:
      sub_100007820((uint64_t)&v96);
      swift_bridgeObjectRelease();
LABEL_27:
      a2 = v69;
      uint64_t v6 = v70;
      unint64_t v7 = v68;
      goto LABEL_28;
    }
    if ((v30 & ~v29) != 0) {
      goto LABEL_12;
    }
    if ((v29 & v27) != 0) {
      goto LABEL_13;
    }
LABEL_14:
    long long v88 = v104;
    long long v89 = v105;
    long long v90 = v106;
    long long v84 = v100;
    long long v85 = v101;
    long long v86 = v102;
    long long v87 = v103;
    long long v80 = v96;
    long long v81 = v97;
    long long v82 = v98;
    long long v83 = v99;
    *(void *)&long long v91 = v25;
    DWORD2(v91) = v26;
    BYTE12(v91) = v78;
    HIWORD(v91) = v27;
    LOBYTE(v92) = v28;
    *((void *)&v92 + 1) = v77;
    *(void *)&long long v93 = v76;
    *((void *)&v93 + 1) = v75;
    *(void *)&long long v94 = v74;
    *((void *)&v94 + 1) = v73;
    LOBYTE(v95) = v72;
    HIBYTE(v95) = v71;
    if ((a3 & 1) == 0) {
      goto LABEL_31;
    }
    sub_100007780((uint64_t)&v96);
    uint64_t v31 = swift_bridgeObjectRetain();
    char v32 = MailboxName.isInbox.getter(v31, v20);
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0
      && v28 <= 7
      && ((1 << v28) & 0xDB) != 0
      && ((v21 & 1) != 0 || (BYTE12(v102) & 1) == 0 && DWORD2(v102) >= v79))
    {
      if (*(void *)(v67 + 16) && (unint64_t v33 = sub_1000242DC(v19, *((Swift::UInt *)&v19 + 1)), (v34 & 1) != 0))
      {
        int v35 = *(unsigned __int16 *)(*(void *)(v67 + 56) + 2 * v33);
        size_t result = (char *)sub_100007820((uint64_t)&v96);
        if ((~v35 & 0x3FFF) != 0) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_100007820((uint64_t)&v96);
      }
      sub_100024350((uint64_t)&v80);
      goto LABEL_27;
    }
    size_t result = (char *)sub_100007820((uint64_t)&v96);
LABEL_31:
    uint64_t v36 = v64;
    if (v64)
    {
      uint64_t v9 = v65;
      uint64_t v37 = v63;
    }
    else
    {
      unint64_t v38 = *((void *)v65 + 3);
      if ((uint64_t)((v38 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_56;
      }
      int64_t v39 = v38 & 0xFFFFFFFFFFFFFFFELL;
      if (v39 <= 1) {
        uint64_t v40 = 1;
      }
      else {
        uint64_t v40 = v39;
      }
      sub_10000566C(&qword_10070A200);
      uint64_t v41 = (char *)swift_allocObject();
      uint64_t v42 = (uint64_t)(j__malloc_size(v41) - 32) / 248;
      *((void *)v41 + 2) = v40;
      *((void *)v41 + 3) = 2 * v42;
      uint64_t v43 = v41 + 32;
      uint64_t v44 = *((void *)v65 + 3) >> 1;
      uint64_t v45 = 248 * v44;
      if (*((void *)v65 + 2))
      {
        uint64_t v46 = v65 + 32;
        if (v41 != v65 || v43 >= &v46[v45]) {
          memmove(v41 + 32, v46, 248 * v44);
        }
        *((void *)v65 + 2) = 0;
      }
      uint64_t v37 = &v43[v45];
      uint64_t v36 = (v42 & 0x7FFFFFFFFFFFFFFFLL) - v44;
      size_t result = (char *)swift_release();
      uint64_t v9 = v41;
    }
    BOOL v47 = __OFSUB__(v36, 1);
    uint64_t v11 = v36 - 1;
    a2 = v69;
    uint64_t v6 = v70;
    unint64_t v7 = v68;
    if (!v47)
    {
      long long v48 = v80;
      long long v49 = v81;
      long long v50 = v83;
      *((_OWORD *)v37 + 2) = v82;
      *((_OWORD *)v37 + 3) = v50;
      *(_OWORD *)uint64_t v37 = v48;
      *((_OWORD *)v37 + 1) = v49;
      long long v51 = v84;
      long long v52 = v85;
      long long v53 = v87;
      *((_OWORD *)v37 + 6) = v86;
      *((_OWORD *)v37 + 7) = v53;
      *((_OWORD *)v37 + 4) = v51;
      *((_OWORD *)v37 + 5) = v52;
      long long v54 = v88;
      long long v55 = v89;
      long long v56 = v91;
      *((_OWORD *)v37 + 10) = v90;
      *((_OWORD *)v37 + 11) = v56;
      *((_OWORD *)v37 + 8) = v54;
      *((_OWORD *)v37 + 9) = v55;
      long long v57 = v92;
      long long v58 = v93;
      long long v59 = v94;
      *((_WORD *)v37 + 120) = v95;
      *((_OWORD *)v37 + 13) = v58;
      *((_OWORD *)v37 + 14) = v59;
      *((_OWORD *)v37 + 12) = v57;
      uint64_t v12 = v37 + 248;
      if (v68 != v10) {
        continue;
      }
      goto LABEL_48;
    }
    break;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

void sub_100025F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    sub_10000566C(&qword_10070A208);
    uint64_t v6 = (unint64_t *)swift_allocObject();
    uint64_t v7 = (uint64_t)(j__malloc_size(v6) - 32) / 24;
    _OWORD v6[2] = v3;
    int v8 = v6 + 2;
    v6[3] = 2 * v7;
    uint64_t v9 = v7 & 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v10 = (int *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = (char *)(a3 + 41);
    uint64_t v13 = 4;
    do
    {
      if (!v11)
      {
        __break(1u);
        goto LABEL_12;
      }
      long long v14 = &v6[v13];
      int v15 = *v10++;
      --v9;
      char v16 = *v12;
      char v17 = *(v12 - 1);
      unint64_t v18 = *(void *)(v12 - 9);
      *(_DWORD *)long long v14 = v15;
      v14[1] = v18;
      *((unsigned char *)v14 + 16) = v17;
      *((unsigned char *)v14 + 17) = v16;
      v13 += 3;
      --v11;
      v12 += 16;
      --v3;
    }
    while (v3);
    unint64_t v19 = v6[3];
    if (v19 >= 2) {
      goto LABEL_8;
    }
  }
  else
  {
    int v8 = &_swiftEmptyArrayStorage[2];
    unint64_t v19 = _swiftEmptyArrayStorage[3];
    uint64_t v9 = v19 >> 1;
    if (v19 >= 2)
    {
LABEL_8:
      unint64_t v20 = v19 >> 1;
      BOOL v21 = __OFSUB__(v20, v9);
      unint64_t v22 = v20 - v9;
      if (v21) {
LABEL_12:
      }
        __break(1u);
      else {
        *int v8 = v22;
      }
    }
  }
}

uint64_t sub_1000260B8@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, BOOL *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
      }
      else
      {
        sub_100008D24(a2, a3);
        unint64_t v10 = (char *)sub_1005E0550();
        if (!v10) {
          goto LABEL_8;
        }
        uint64_t v11 = sub_1005E0580();
        if (!__OFSUB__((int)a2, v11))
        {
          v10 += (int)a2 - v11;
LABEL_8:
          uint64_t v12 = sub_1005E0570();
          if (v12 >= v9) {
            size_t v13 = (a2 >> 32) - (int)a2;
          }
          else {
            size_t v13 = v12;
          }
          if (v7)
          {
            if (v10)
            {
              int v14 = memcmp(v7, v10, v13);
              __s1 = sub_1000094D4(a2, a3);
              BOOL v8 = v14 == 0;
              goto LABEL_26;
            }
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            JUMPOUT(0x100026324);
          }
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
      }
      __break(1u);
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      char v17 = (char *)sub_1005E0550();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1005E0580();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_29;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_28;
      }
      uint64_t v21 = sub_1005E0570();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_34;
      }
      if (!v17) {
        goto LABEL_35;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_26;
    case 3uLL:
      if (!__s1) {
        goto LABEL_36;
      }
      BOOL v8 = 1;
      goto LABEL_26;
    default:
      uint64_t __s2 = a2;
      __int16 v25 = a3;
      char v26 = BYTE2(a3);
      char v27 = BYTE3(a3);
      char v28 = BYTE4(a3);
      char v29 = BYTE5(a3);
      if (!__s1)
      {
        __break(1u);
        goto LABEL_32;
      }
      __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
      BOOL v8 = __s1 == 0;
LABEL_26:
      *a4 = v8;
      return __s1;
  }
}

uint64_t sub_100026334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002639C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s17FilteredMailboxesV8IteratorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17FilteredMailboxesV8IteratorVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s17FilteredMailboxesV8IteratorVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s17FilteredMailboxesV8IteratorVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17FilteredMailboxesV8IteratorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)size_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)size_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17FilteredMailboxesV8IteratorVMa()
{
  return &_s17FilteredMailboxesV8IteratorVN;
}

uint64_t destroy for DisplayPartTree.ChildNodes.Iterator()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17FilteredMailboxesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17FilteredMailboxesVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for State.InProgressSync(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s17FilteredMailboxesVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17FilteredMailboxesVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ByteBufferAllocator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17FilteredMailboxesVMa()
{
  return &_s17FilteredMailboxesVN;
}

uint64_t _s17FilteredMailboxesV7ElementVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17FilteredMailboxesV7ElementVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = a2 + 72;
  unint64_t v6 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 >= 3)
  {
    *(void *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)(a1 + 72) = *(void *)v7;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(v7 + 8);
  }
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  uint64_t v8 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v8;
  uint64_t v10 = *(void *)(a2 + 152);
  uint64_t v9 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 152) = v10;
  *(void *)(a1 + 160) = v9;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_WORD *)(a1 + 190) = *(_WORD *)(a2 + 190);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 226) = *(_OWORD *)(a2 + 226);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17FilteredMailboxesV7ElementVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = (void *)(a1 + 72);
  uint64_t v9 = (void *)(a2 + 72);
  unint64_t v8 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) >= 3uLL)
  {
    if (v8 >= 3)
    {
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    else
    {
      sub_100007A48(a1 + 72, &qword_10070A210);
      int v11 = *(_DWORD *)(a2 + 80);
      *uint64_t v7 = *v9;
      *(_DWORD *)(a1 + 80) = v11;
    }
  }
  else if (v8 >= 3)
  {
    *(void *)(a1 + 72) = v8;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = *v9;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *uint64_t v7 = v10;
  }
  int v12 = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 84) = v12;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  char v13 = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = v13;
  char v14 = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = v14;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v15;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_WORD *)(a1 + 190) = *(_WORD *)(a2 + 190);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  long long v16 = *(_OWORD *)(a2 + 200);
  long long v17 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 226) = *(_OWORD *)(a2 + 226);
  *(_OWORD *)(a1 + 216) = v17;
  *(_OWORD *)(a1 + 200) = v16;
  return a1;
}

__n128 _s17FilteredMailboxesV7ElementVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(_WORD *)(a1 + 240) = *((_WORD *)a2 + 120);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t _s17FilteredMailboxesV7ElementVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(a2 + 72);
  unint64_t v6 = *(void *)(a1 + 72);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (v6 >= 3)
  {
    if (v5 >= 3)
    {
      *(void *)(a1 + 72) = v5;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_6;
    }
    sub_100007A48(a1 + 72, &qword_10070A210);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
LABEL_6:
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_WORD *)(a1 + 190) = *(_WORD *)(a2 + 190);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 226) = *(_OWORD *)(a2 + 226);
  return a1;
}

uint64_t _s17FilteredMailboxesV7ElementVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 242)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17FilteredMailboxesV7ElementVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 240) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 242) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 242) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17FilteredMailboxesV7ElementVMa()
{
  return &_s17FilteredMailboxesV7ElementVN;
}

uint64_t sub_100026EC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_100008D24(v2, v3);
  return a1;
}

uint64_t sub_100026F04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_1000094D4(v2, v3);
  return a1;
}

uint64_t _s12LocalMailboxVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s12LocalMailboxVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = a2 + 72;
  unint64_t v6 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 >= 3)
  {
    *(void *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)(a1 + 72) = *(void *)v7;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(v7 + 8);
  }
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  uint64_t v8 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v8;
  uint64_t v10 = *(void *)(a2 + 152);
  uint64_t v9 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 152) = v10;
  *(void *)(a1 + 160) = v9;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12LocalMailboxVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = (void *)(a1 + 72);
  uint64_t v9 = (void *)(a2 + 72);
  unint64_t v8 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) >= 3uLL)
  {
    if (v8 >= 3)
    {
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    else
    {
      sub_100007A48(a1 + 72, &qword_10070A210);
      int v11 = *(_DWORD *)(a2 + 80);
      *uint64_t v7 = *v9;
      *(_DWORD *)(a1 + 80) = v11;
    }
  }
  else if (v8 >= 3)
  {
    *(void *)(a1 + 72) = v8;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = *v9;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *uint64_t v7 = v10;
  }
  int v12 = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 84) = v12;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  char v13 = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = v13;
  char v14 = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = v14;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v15;
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  return a1;
}

__n128 _s12LocalMailboxVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t _s12LocalMailboxVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(a2 + 72);
  unint64_t v6 = *(void *)(a1 + 72);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (v6 >= 3)
  {
    if (v5 >= 3)
    {
      *(void *)(a1 + 72) = v5;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_6;
    }
    sub_100007A48(a1 + 72, &qword_10070A210);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
LABEL_6:
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  return a1;
}

uint64_t _s12LocalMailboxVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12LocalMailboxVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s12LocalMailboxVMa()
{
  return &_s12LocalMailboxVN;
}

uint64_t sub_1000274F8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_5:
    char v18 = *(unsigned char *)(*(void *)(a3 + 48) + v14);
    uint64_t result = a1(&v18);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100027678(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(a3 + 48) + 16 * i;
    uint64_t v19 = *(void *)v18;
    LODWORD(v18) = *(_DWORD *)(v18 + 8);
    uint64_t v20 = v19;
    int v21 = v18;
    swift_bridgeObjectRetain();
    a1(&v20);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL sub_100027834(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[9];
  v13[8] = a1[8];
  v13[9] = v2;
  v13[10] = a1[10];
  long long v3 = a1[5];
  v13[4] = a1[4];
  v13[5] = v3;
  long long v4 = a1[7];
  _OWORD v13[6] = a1[6];
  v13[7] = v4;
  long long v5 = a1[1];
  v13[0] = *a1;
  v13[1] = v5;
  long long v6 = a1[3];
  v13[2] = a1[2];
  v13[3] = v6;
  long long v7 = a2[9];
  v14[8] = a2[8];
  v14[9] = v7;
  v14[10] = a2[10];
  long long v8 = a2[5];
  v14[4] = a2[4];
  v14[5] = v8;
  long long v9 = a2[7];
  v14[6] = a2[6];
  v14[7] = v9;
  long long v10 = a2[1];
  v14[0] = *a2;
  v14[1] = v10;
  long long v11 = a2[3];
  v14[2] = a2[2];
  v14[3] = v11;
  return sub_100029F48((uint64_t)v13, (uint64_t)v14);
}

BOOL sub_1000278C8(unsigned int *a1, unsigned int *a2)
{
  return sub_100029EC4(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *((void *)a1 + 1), *((void *)a1 + 2), *((unsigned char *)a1 + 24), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32), *((void *)a2 + 1), *((void *)a2 + 2), *((unsigned char *)a2 + 24));
}

_DWORD *sub_100027918@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result & 0xFFFFFF;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_10002792C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

Swift::Int sub_100027938()
{
  Swift::UInt32 v1 = *v0;
  sub_1005E33F0();
  sub_1005E3440(v1);
  return sub_1005E3470();
}

void sub_100027980()
{
  sub_1005E3440(*v0);
}

Swift::Int sub_1000279AC()
{
  Swift::UInt32 v1 = *v0;
  sub_1005E33F0();
  sub_1005E3440(v1);
  return sub_1005E3470();
}

BOOL sub_1000279F0(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100027A04(uint64_t *a1, int a2, uint64_t a3, uint64_t (*a4)())
{
  uint64_t v51 = a3;
  long long v52 = a4;
  LODWORD(v58) = a2;
  sub_10001FDF0((uint64_t)a1, (uint64_t)v73, &qword_10070A230);
  uint64_t v61 = v73[0];
  uint64_t v62 = v73[1];
  uint64_t v63 = v73[2];
  uint64_t v64 = v73[3];
  uint64_t v65 = v73[4];
  uint64_t v66 = v73[5];
  uint64_t v67 = v73[6];
  uint64_t v68 = v73[7];
  int v59 = v74 | (v75 << 16);
  uint64_t v60 = v73[8];
  uint64_t v50 = _s12LocalMailboxV6LoggerVMa();
  uint64_t v6 = __chkstk_darwin(v50);
  long long v55 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v53 = (uint64_t)&v49 - v8;
  uint64_t v54 = sub_1005E0ED0();
  uint64_t v57 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  long long v56 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PendingPersistenceUpdates();
  __chkstk_darwin(v10 - 8);
  int64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (_DWORD *)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for MailboxSyncState();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v4;
  uint64_t v19 = *(void *)(v4 + 96);
  sub_10001FDF0((uint64_t)a1, (uint64_t)v76, &qword_10070A230);
  if (*(void *)&v76[0])
  {
    v78[0] = v76[0];
    v78[1] = v76[1];
    v78[2] = v76[2];
    v79[0] = v77[0];
    *(_OWORD *)((char *)v79 + 11) = *(_OWORD *)((char *)v77 + 11);
    if ((DWORD2(v78[0]) | ((unint64_t)DWORD2(v78[0]) << 32)) == (*(unsigned int *)(v69 + 24) | ((unint64_t)*(unsigned int *)(v69 + 24) << 32)))
    {
      BOOL v20 = sub_1000255D4(*(uint64_t *)&v78[0], *(void *)(v69 + 16));
      sub_10002A840(a1);
      if (v20)
      {
        sub_10002A840(a1);
        swift_retain();
        sub_10005D4A4(v78, v51, (uint64_t)v18);
        swift_release();
        sub_10002A7F4(v61);
        uint64_t v21 = v69;
        int v22 = *(_DWORD *)(v69 + 84);
        char v23 = *(unsigned char *)(v69 + 88);
        *uint64_t v15 = v58;
        sub_10002B050((uint64_t)v18, (uint64_t)v15 + *(int *)(v13 + 20), (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
        uint64_t v24 = (char *)v15 + *(int *)(v13 + 24);
        *(_DWORD *)uint64_t v24 = v22;
        v24[4] = v23;
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v25 = swift_allocObject();
        sub_10002B050((uint64_t)v15, v25+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        uint64_t result = swift_release();
        *(void *)(v21 + 96) = v25;
        return result;
      }
    }
    else
    {
      sub_10002A840(a1);
    }
  }
  swift_retain();
  if (!v19) {
    return sub_10002A7F4(v61);
  }
  char v27 = (_DWORD *)(v19
                 + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
  swift_beginAccess();
  if (*v27 != v58)
  {
    swift_release();
    return sub_10002A7F4(v61);
  }
  uint64_t v28 = v19
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  sub_10002AFE8(v28 + *(int *)(v13 + 20) + (uint64_t)*(int *)(v16 + 52), (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PendingPersistenceUpdates);
  uint64_t v70 = (uint64_t)&_swiftEmptySetSingleton;
  if (*v12 == 1)
  {
    swift_retain_n();
    sub_100019080(v72, 6);
  }
  else
  {
    swift_retain_n();
  }
  uint64_t v29 = v69;
  uint64_t v31 = v56;
  uint64_t v30 = v57;
  uint64_t v32 = (uint64_t)v55;
  if (v12[1] == 1) {
    sub_100019080(v72, 7);
  }
  if (v12[2] == 1) {
    sub_100019080(v72, 8);
  }
  uint64_t v33 = v70;
  sub_10002B0B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PendingPersistenceUpdates);
  uint64_t v34 = *(void *)(v33 + 16);
  swift_bridgeObjectRelease();
  if (v34)
  {
    int v35 = v52;
    uint64_t v36 = v54;
    (*(void (**)(char *, uint64_t (*)(), uint64_t))(v30 + 16))(v31, v52, v54);
    uint64_t v37 = v53;
    sub_10002AFE8((uint64_t)v35, v53, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
    sub_10002AFE8((uint64_t)v35, v32, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v38 = sub_1005E0EB0();
    os_log_type_t v39 = sub_1005E2580();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      v72[0] = v58;
      *(_DWORD *)uint64_t v41 = 68158979;
      LODWORD(v70) = 2;
      sub_1005E2960();
      *(_WORD *)(v41 + 8) = 256;
      LODWORD(v55) = v40;
      uint64_t v42 = v50;
      uint64_t v43 = v37;
      char v44 = *(unsigned char *)(v37 + *(int *)(v50 + 20));
      long long v52 = _s12LocalMailboxV6LoggerVMa;
      sub_10002B0B8(v43, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      LOBYTE(v70) = v44;
      sub_1005E2960();
      *(_WORD *)(v41 + 11) = 1040;
      LODWORD(v70) = 2;
      sub_1005E2960();
      *(_WORD *)(v41 + 17) = 512;
      uint64_t v45 = v32 + *(int *)(v42 + 20);
      LOWORD(v70) = *(_WORD *)(v45 + 2);
      sub_1005E2960();
      *(_WORD *)(v41 + 21) = 2160;
      uint64_t v70 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v41 + 31) = 2085;
      int v46 = *(_DWORD *)(v45 + 16);
      uint64_t v70 = *(void *)(v45 + 8);
      int v71 = v46;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1005E1CC0();
      uint64_t v70 = sub_1000C6914(v47, v48, v72);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10002B0B8(v32, (uint64_t (*)(void))v52);
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v55, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Mailbox has pending updates while being deselected.", (uint8_t *)v41, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v54);
    }
    else
    {
      sub_10002B0B8(v37, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      sub_10002B0B8(v32, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v36);
    }
    uint64_t v29 = v69;
    Set<>.formNonEmpty()();
  }
  swift_release_n();
  sub_10002A7F4(v61);
  swift_release();
  uint64_t result = swift_release();
  *(void *)(v29 + 96) = 0;
  return result;
}

uint64_t sub_1000282A8(int a1, uint64_t a2)
{
  uint64_t v5 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s19UserInitiatedSearchVMa(0) - 8;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v18 = (int *)((char *)&v32 - v17);
  uint64_t v21 = *(void *)(v2 + 152);
  uint64_t v19 = (unint64_t *)(v2 + 152);
  uint64_t v20 = v21;
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v32 = v16;
    uint64_t v33 = v19;
    uint64_t v34 = v9;
    uint64_t v35 = v8;
    uint64_t v36 = a2;
    uint64_t v37 = v11;
    unint64_t v23 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v24 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain();
    unint64_t v25 = 0;
    while (1)
    {
      sub_10002AFE8(v20 + v23, (uint64_t)v18, _s19UserInitiatedSearchVMa);
      int v26 = *v18;
      sub_10002B0B8((uint64_t)v18, _s19UserInitiatedSearchVMa);
      if (v26 == a1) {
        break;
      }
      ++v25;
      v23 += v24;
      if (v22 == v25) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    sub_1000079E4(v36, (uint64_t)v7, &qword_10070A000);
    int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v7, 1, v35);
    uint64_t v28 = (uint64_t)v37;
    if (v27 == 1)
    {
      sub_100007A48((uint64_t)v7, &qword_10070A000);
      uint64_t v29 = v32;
      sub_1000EF428(v25, v32);
      return sub_10002B0B8(v29, _s19UserInitiatedSearchVMa);
    }
    else
    {
      sub_10001FDF0((uint64_t)v7, (uint64_t)v37, &qword_100709E30);
      uint64_t v30 = v33;
      unint64_t v31 = *v33;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1000933DC(v31);
        unint64_t v31 = result;
      }
      if (v25 >= *(void *)(v31 + 16))
      {
        __break(1u);
      }
      else
      {
        sub_1001D8338(v28);
        *uint64_t v30 = v31;
        return sub_100007A48(v28, &qword_100709E30);
      }
    }
  }
  return result;
}

uint64_t sub_1000285CC(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v3 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v59 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v5 - 8);
  uint64_t v65 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10000566C(&qword_100709E38);
  uint64_t v7 = *(void *)(v63 - 8);
  uint64_t v8 = __chkstk_darwin(v63);
  uint64_t v58 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v57 = (char *)&v48 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  long long v56 = (char *)&v48 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v67 = (uint64_t)&v48 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = _s19UserInitiatedSearchV5StateOMa(0);
  uint64_t v19 = __chkstk_darwin(v18);
  long long v55 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  uint64_t result = __chkstk_darwin(MessagesVMa);
  unint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v2;
  uint64_t v64 = v25;
  unint64_t v27 = *(void *)(v2 + 152);
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v68 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_14;
    }
    while (1)
    {
      unint64_t v29 = 0;
      uint64_t v50 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
      uint64_t v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
      uint64_t v30 = v68;
      uint64_t v53 = v18;
      uint64_t v54 = v17;
      uint64_t v52 = v28;
      uint64_t v49 = v22;
      while (1)
      {
        *(void *)(v30 + 152) = v27;
        if (v29 >= *(void *)(v27 + 16)) {
          break;
        }
        uint64_t v31 = _s19UserInitiatedSearchVMa(0);
        uint64_t v7 = v27
           + ((*(unsigned __int8 *)(*(void *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v31 - 8) + 80))
           + *(void *)(*(void *)(v31 - 8) + 72) * v29
           + *(int *)(v31 + 20);
        sub_10002AFE8(v7, (uint64_t)v22, _s19UserInitiatedSearchV5StateOMa);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v62 = v7;
          uint64_t v32 = (uint64_t)v64;
          sub_10002B050((uint64_t)v22, (uint64_t)v64, _s19UserInitiatedSearchV13FetchMessagesVMa);
          uint64_t v34 = MessagesVMa;
          uint64_t v33 = v67;
          sub_1000079E4(v32 + *(int *)(MessagesVMa + 20), v67, &qword_100709E38);
          uint64_t v35 = v65;
          sub_1000079E4(v32, v65, &qword_100709E30);
          uint64_t v36 = (uint64_t)v56;
          uint64_t v37 = v63;
          MessageIdentifierSet.intersection(_:)(v35, v63);
          sub_100007A48(v35, &qword_100709E38);
          MessageIdentifierSet.union(_:)();
          sub_100007A48(v36, &qword_100709E38);
          sub_100007A48(v33, &qword_100709E38);
          uint64_t v38 = v59;
          sub_1000079E4(v32 + *(int *)(v34 + 24), v59, &qword_10070A2D0);
          if ((*v51)(v38, 1, v37) == 1)
          {
            sub_10001FC6C();
            uint64_t v39 = v58;
            sub_1005E3680();
            sub_100007A48(v38, &qword_10070A2D0);
          }
          else
          {
            uint64_t v39 = v58;
            sub_10001FDF0(v38, v58, &qword_100709E38);
          }
          uint64_t v7 = (uint64_t)v64;
          uint64_t v40 = v65;
          sub_1000079E4((uint64_t)v64, v65, &qword_100709E30);
          uint64_t v41 = v67;
          uint64_t v42 = v63;
          MessageIdentifierSet.intersection(_:)(v40, v63);
          sub_100007A48(v40, &qword_100709E38);
          uint64_t v43 = v42;
          uint64_t v44 = (uint64_t)v57;
          MessageIdentifierSet.union(_:)();
          sub_100007A48(v41, &qword_100709E38);
          sub_100007A48(v39, &qword_100709E38);
          sub_1000079E4(v7, v40, &qword_100709E30);
          sub_10002B0B8(v7, _s19UserInitiatedSearchV13FetchMessagesVMa);
          uint64_t v45 = MessagesVMa;
          uint64_t v46 = (uint64_t)v55;
          uint64_t v47 = (uint64_t)&v55[*(int *)(MessagesVMa + 24)];
          sub_10001FDF0(v44, v47, &qword_100709E38);
          (*v50)(v47, 0, 1, v43);
          sub_10001FDF0(v40, v46, &qword_100709E30);
          uint64_t v17 = v54;
          sub_10001FDF0((uint64_t)v54, v46 + *(int *)(v45 + 20), &qword_100709E38);
          uint64_t v18 = v53;
          swift_storeEnumTagMultiPayload();
          uint64_t result = sub_10002B118(v46, v62);
          uint64_t v28 = v52;
          uint64_t v22 = v49;
        }
        else
        {
          uint64_t result = sub_10002B0B8((uint64_t)v22, _s19UserInitiatedSearchV5StateOMa);
        }
        ++v29;
        uint64_t v30 = v68;
        unint64_t v27 = *(void *)(v68 + 152);
        if (v28 == v29) {
          return result;
        }
      }
      __break(1u);
LABEL_14:
      unint64_t v27 = sub_1000933DC(v27);
    }
  }
  return result;
}

uint64_t sub_100028C24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v35 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v35);
  uint64_t v33 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10002A478(v1 + 144, a1);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v7 = *(void *)(*(void *)(v1 + 144) + 16);
  if (v7 < v5) {
    goto LABEL_32;
  }
  sub_1000D42B8(v5, v7);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v36 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v34 = a1;
  while (1)
  {
    while (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      if (*(void *)(v2 + 96)) {
        goto LABEL_24;
      }
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 >= v37) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v37) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v36 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v37) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v36 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    if (*(void *)(v2 + 96))
    {
LABEL_24:
      uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v14);
      uint64_t v19 = *v18;
      unint64_t v20 = v18[1];
      sub_100008D24(*v18, v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v21 = *(void *)(v2 + 96)
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        uint64_t v22 = v33;
        sub_10002AFE8(v21, v33, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v23 = swift_allocObject();
        sub_10002B050(v22, v23+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        *(void *)(v2 + 96) = v23;
        swift_release();
      }
      uint64_t v24 = *(void *)(v2 + 96)
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v25 = v24 + *(int *)(v35 + 20);
      uint64_t v26 = *(int *)(type metadata accessor for MailboxSyncState() + 56);
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_10002445C(v19, v20);
      char v29 = v28;
      swift_bridgeObjectRelease();
      if (v29)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = *(void *)(v25 + v26);
        uint64_t v38 = v31;
        *(void *)(v25 + v26) = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_100096AA8();
          uint64_t v31 = v38;
        }
        sub_1000094D4(*(void *)(*(void *)(v31 + 48) + 16 * v27), *(void *)(*(void *)(v31 + 48) + 16 * v27 + 8));
        sub_100095B20(v27, v31);
        *(void *)(v25 + v26) = v31;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      uint64_t result = sub_1000094D4(v19, v20);
      a1 = v34;
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v37) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v36 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v37) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v36 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

void *sub_100028FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MailboxSyncState();
  __chkstk_darwin(v5 - 8);
  int64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = a2;
  uint64_t v24 = v2;
  uint64_t result = (void *)sub_1000274F8((uint64_t (*)(char *))sub_10002A760, (uint64_t)v22, a1);
  uint64_t v9 = *(void *)(v2 + 96);
  if (v9)
  {
    uint64_t v10 = v9
        + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    uint64_t v11 = _s13SelectedStateV7WrappedVMa(0);
    uint64_t result = (void *)(v10 + *(int *)(v11 + 20));
    if (*(void *)(result[19] + 16) == 15 && !*(void *)(result[20] + 16) && !*(void *)(result[21] + 16))
    {
      int64_t v12 = (int *)(v10 + *(int *)(v11 + 24));
      int v13 = *v12;
      char v14 = *((unsigned char *)v12 + 4);
      sub_10002AFE8((uint64_t)result, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      int v15 = *((_DWORD *)v7 + 4);
      char v16 = v7[20];
      uint64_t v17 = *((void *)v7 + 3);
      char v18 = v7[32];
      swift_retain();
      sub_10002B0B8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      if (v16 & 1) != 0 || (v18)
      {
        uint64_t result = (void *)swift_release();
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        char v21 = 1;
      }
      else
      {
        uint64_t v25 = v17;
        UIDValidityWith.init(uidValidity:value:)(v15, (uint64_t)&v25, (uint64_t)&type metadata for ModificationSequenceValue, &v26);
        uint64_t result = (void *)swift_release();
        char v21 = 0;
        uint64_t v19 = v26;
        uint64_t v20 = v27;
      }
      *(_DWORD *)(v2 + 104) = v13;
      *(unsigned char *)(v2 + 108) = v14;
      *(void *)(v2 + 112) = v19;
      *(void *)(v2 + 120) = v20;
      *(unsigned char *)(v2 + 128) = v21;
    }
  }
  return result;
}

uint64_t sub_1000291B0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v7);
  uint64_t v48 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v9);
  uint64_t v11 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1005E0ED0();
  __chkstk_darwin(v12);
  char v14 = &v43[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Swift::Int v15 = *a1;
  uint64_t v50 = v17;
  uint64_t v51 = v16;
  (*(void (**)(unsigned char *, uint64_t))(v17 + 16))(v14, a2);
  sub_10002AFE8(a2, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v49 = v14;
  char v18 = sub_1005E0EB0();
  os_log_type_t v19 = sub_1005E2580();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    os_log_t v45 = v18;
    uint64_t v22 = v21;
    uint64_t v46 = swift_slowAlloc();
    v52[0] = v46;
    *(_DWORD *)uint64_t v22 = 68159491;
    LODWORD(v53) = 2;
    uint64_t v47 = v3;
    sub_1005E2960();
    *(_WORD *)(v22 + 8) = 256;
    uint64_t v23 = *(int *)(v9 + 20);
    unsigned int v55 = v15;
    uint64_t v24 = &v11[v23];
    LOBYTE(v53) = v11[v23];
    sub_1005E2960();
    *(_WORD *)(v22 + 11) = 2082;
    int v44 = v20;
    uint64_t v25 = a3;
    uint64_t v26 = v7;
    uint64_t v27 = *((void *)v24 + 1);
    unint64_t v28 = *((void *)v24 + 2);
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1000C6914(v27, v28, v52);
    sub_1005E2960();
    uint64_t v7 = v26;
    a3 = v25;
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 21) = 1040;
    LODWORD(v53) = 2;
    sub_1005E2960();
    *(_WORD *)(v22 + 27) = 512;
    LOWORD(v53) = *((_WORD *)v24 + 12);
    sub_1005E2960();
    *(_WORD *)(v22 + 31) = 2160;
    uint64_t v53 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v22 + 41) = 2085;
    uint64_t v29 = *((void *)v24 + 4);
    int v30 = *((_DWORD *)v24 + 10);
    Swift::Int v15 = v55;
    uint64_t v53 = v29;
    int v54 = v30;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1005E1CC0();
    uint64_t v53 = sub_1000C6914(v31, v32, v52);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10002B0B8((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v22 + 51) = 2080;
    unint64_t v33 = sub_10009C300(v15);
    uint64_t v53 = sub_1000C6914(v33, v34, v52);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    os_log_t v35 = v45;
    _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking step %s as complete.", (uint8_t *)v22, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10002B0B8((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
  }
  (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v49, v51);
  uint64_t result = *(void *)(a3 + 96);
  if (result)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v37 = *(void *)(a3 + 96)
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v38 = v48;
      sub_10002AFE8(v37, (uint64_t)v48, _s13SelectedStateV7WrappedVMa);
      _s13SelectedStateV8_StorageCMa(0);
      uint64_t v39 = swift_allocObject();
      sub_10002B050((uint64_t)v38, v39+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
      *(void *)(a3 + 96) = v39;
      swift_release();
    }
    uint64_t v40 = *(void *)(a3 + 96)
        + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    uint64_t v41 = (uint64_t *)(v40 + *(int *)(v7 + 20));
    if (sub_100010180(v15, v41[20]))
    {
      sub_1000935B0(v15);
      unsigned __int8 v42 = v15;
    }
    else
    {
      if (!sub_100010180(v15, v41[19]) || !sub_100010180(v15, v41[21]))
      {
        sub_100019080(&v56, v15);
        return swift_endAccess();
      }
      unsigned __int8 v42 = v15;
    }
    sub_1000935B0(v42);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1000297AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxSyncState();
  __chkstk_darwin(v4 - 8);
  uint64_t v40 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0D40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = sub_1005E0D80();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  OSSignpostID.init(engine:kind:idA:idB:)(a1, 5, *(_DWORD *)(v2 + 172), 0);
  sub_100007780(v2);
  sub_100007780(v2);
  sub_100007780(v2);
  sub_100007780(v2);
  sub_100007780(v2);
  sub_100007780(v2);
  char v18 = sub_1005E0D70();
  int v41 = sub_1005E26F0();
  if (sub_1005E28A0())
  {
    uint64_t v37 = v10;
    uint64_t v38 = v13;
    os_log_type_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v39 = v6;
    v19(v10, v12, v6);
    uint64_t v20 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v45 = v36;
    *(_DWORD *)uint64_t v20 = 141558787;
    uint64_t v42 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v20 + 12) = 2085;
    int v21 = *(_DWORD *)(v2 + 24);
    uint64_t v42 = *(void *)(v2 + 16);
    int v43 = v21;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1005E1CC0();
    uint64_t v42 = sub_1000C6914(v22, v23, &v45);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100007820(v2);
    sub_100007820(v2);
    *(_WORD *)(v20 + 22) = 2048;
    uint64_t v24 = *(void *)(*(void *)(v2 + 136) + 16);
    sub_100007820(v2);
    uint64_t v42 = v24;
    sub_1005E2960();
    sub_100007820(v2);
    *(_WORD *)(v20 + 32) = 1024;
    sub_10001FDF0(v2 + 96, (uint64_t)v46, &qword_10070A228);
    sub_10001FDF0((uint64_t)v46, (uint64_t)&v47, &qword_10070A228);
    if (v47)
    {
      uint64_t v25 = v47
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v26 = v25 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
      uint64_t v27 = v40;
      sub_10002AFE8(v26, v40, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      int v28 = sub_10009CEE8(*(void *)(v27 + 152));
      sub_10002B0B8(v27, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    }
    else
    {
      int v28 = 0;
    }
    uint64_t v30 = v38;
    sub_100007820(v2);
    int v44 = v28;
    sub_1005E2960();
    sub_100007820(v2);
    uint64_t v31 = v37;
    os_signpost_id_t v32 = sub_1005E0D30();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, (os_signpost_type_t)v41, v32, "LocalMailbox", "Mailbox %{sensitive,mask.mailbox}s syncs: %ld, steps: %u", (uint8_t *)v20, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v34 = v39;
    v33(v12, v39);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v30);
    return ((uint64_t (*)(char *, uint64_t))v33)(v31, v34);
  }
  else
  {
    sub_100007820(v2);
    sub_100007820(v2);

    sub_100007820(v2);
    sub_100007820(v2);
    sub_100007820(v2);
    sub_100007820(v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_100029D28(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  long long v9 = v4;
  uint64_t v1 = v3;
  sub_10002A77C((uint64_t)&v9);
  uint64_t v7 = v5;
  int v8 = v6;
  sub_10001D550((uint64_t)&v7);
  return v1;
}

uint64_t sub_100029D8C(void (*a1)(void *__return_ptr))
{
  a1(v3);
  uint64_t v1 = v3[1];
  uint64_t v5 = v3[4];
  int v6 = v4;
  sub_10001D550((uint64_t)&v5);
  return v1;
}

uint64_t sub_100029DE4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100029E0C(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  long long v10 = v4;
  uint64_t v1 = v5;
  sub_10002A77C((uint64_t)&v10);
  uint64_t v8 = v6;
  int v9 = v7;
  sub_10001D550((uint64_t)&v8);
  return v1;
}

uint64_t sub_100029E70(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  uint64_t v1 = v5;
  long long v6 = v4;
  sub_10002A77C((uint64_t)&v6);
  return v1;
}

BOOL sub_100029EC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, char a8)
{
  if ((a1 & 0x100000000) != 0)
  {
    if ((a5 & 0x100000000) == 0) {
      return 0;
    }
    goto LABEL_6;
  }
  int v8 = a1;
  BOOL result = 0;
  if ((a5 & 0x100000000) == 0 && v8 == a5)
  {
LABEL_6:
    if ((a4 & 1) == 0)
    {
      v12[0] = a2;
      v12[1] = a3;
      char v13 = 0;
      if (a8) {
        return 0;
      }
      int v10 = a6;
      uint64_t v11 = a7;
      sub_10002A424();
      return (static UIDValidityWith<A>.__derived_struct_equals(_:_:)(v12, &v10) & 1) != 0;
    }
    return (a8 & 1) != 0;
  }
  return result;
}

BOOL sub_100029F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13SelectedStateV7WrappedVMa(0);
  uint64_t v5 = __chkstk_darwin(v4);
  int v7 = (_DWORD *)((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  int v9 = (_DWORD *)((char *)v30 - v8);
  long long v10 = *(_OWORD *)(a1 + 48);
  v45[2] = *(_OWORD *)(a1 + 32);
  v45[3] = v10;
  v46[0] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)(a1 + 73);
  long long v11 = *(_OWORD *)(a1 + 16);
  v45[0] = *(_OWORD *)a1;
  v45[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  v43[2] = *(_OWORD *)(a2 + 32);
  v43[3] = v12;
  v44[0] = *(_OWORD *)(a2 + 64);
  *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)(a2 + 73);
  long long v13 = *(_OWORD *)(a2 + 16);
  v43[0] = *(_OWORD *)a2;
  v43[1] = v13;
  if ((static MailboxOfInterest.__derived_struct_equals(_:_:)(v45, v43) & 1) == 0) {
    return 0;
  }
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a2 + 96);
  if (v14)
  {
    if (!v15) {
      return 0;
    }
    uint64_t v16 = v14
        + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    v30[1] = v14;
    sub_10002AFE8(v16, (uint64_t)v9, _s13SelectedStateV7WrappedVMa);
    v30[2] = v15;
    uint64_t v17 = v15
        + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    sub_10002AFE8(v17, (uint64_t)v7, _s13SelectedStateV7WrappedVMa);
    if (*v9 == *v7)
    {
      uint64_t v18 = *(int *)(v4 + 20);
      v30[0] = (uint64_t)v9 + v18;
      uint64_t v19 = (uint64_t)v7 + v18;
      swift_retain();
      swift_retain();
      if (sub_1000603E8(v30[0], v19))
      {
        uint64_t v20 = *(int *)(v4 + 24);
        int v21 = (_DWORD *)((char *)v9 + v20);
        char v22 = *((unsigned char *)v9 + v20 + 4);
        unint64_t v23 = (_DWORD *)((char *)v7 + v20);
        int v24 = *((unsigned __int8 *)v7 + v20 + 4);
        if (v22)
        {
          if (v24)
          {
LABEL_18:
            sub_10002B0B8((uint64_t)v7, _s13SelectedStateV7WrappedVMa);
            sub_10002B0B8((uint64_t)v9, _s13SelectedStateV7WrappedVMa);
            swift_release();
            swift_release();
            goto LABEL_19;
          }
        }
        else
        {
          if (*v21 != *v23) {
            LOBYTE(v24) = 1;
          }
          if ((v24 & 1) == 0) {
            goto LABEL_18;
          }
        }
      }
    }
    else
    {
      swift_retain();
      swift_retain();
    }
    sub_10002B0B8((uint64_t)v7, _s13SelectedStateV7WrappedVMa);
    sub_10002B0B8((uint64_t)v9, _s13SelectedStateV7WrappedVMa);
    swift_release();
    swift_release();
    return 0;
  }
  if (v15) {
    return 0;
  }
LABEL_19:
  v41[0] = *(_OWORD *)(a1 + 104);
  *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)(a1 + 113);
  uint64_t v26 = *(void *)(a2 + 112);
  uint64_t v27 = *(void *)(a2 + 120);
  char v28 = *(unsigned char *)(a2 + 128);
  if (BYTE4(v41[0]))
  {
    if ((*(unsigned char *)(a2 + 108) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    if ((*(unsigned char *)(a2 + 108) & 1) != 0 || LODWORD(v41[0]) != *(_DWORD *)(a2 + 104)) {
      return result;
    }
  }
  sub_10001FDF0((uint64_t)v41 + 8, (uint64_t)v42, &qword_10070A218);
  sub_10001FDF0((uint64_t)v42, (uint64_t)v47, &qword_10070A218);
  if (v47[16])
  {
    if (v28) {
      goto LABEL_29;
    }
    return 0;
  }
  sub_10001FDF0((uint64_t)v42, (uint64_t)&v33, &qword_10070A218);
  if (v28) {
    return 0;
  }
  LODWORD(v31) = v26;
  uint64_t v32 = v27;
  sub_10002A424();
  if ((static UIDValidityWith<A>.__derived_struct_equals(_:_:)(&v33, &v31) & 1) == 0) {
    return 0;
  }
LABEL_29:
  if ((sub_100013570(*(void *)(a1 + 136), *(void *)(a2 + 136)) & 1) == 0
    || (sub_100078494(*(void *)(a1 + 144), *(void *)(a2 + 144)) & 1) == 0
    || (sub_100078AB0(*(void *)(a1 + 152), *(void *)(a2 + 152)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v38 = *(void *)(a1 + 160);
  char v39 = *(unsigned char *)(a1 + 168);
  uint64_t v35 = *(void *)(a2 + 160);
  char v36 = *(unsigned char *)(a2 + 168);
  sub_10002A3C8((uint64_t)&v38, (uint64_t)v40);
  sub_10002A3C8((uint64_t)&v35, (uint64_t)v37);
  sub_10002A3C8((uint64_t)v40, (uint64_t)&v31);
  if (!(_BYTE)v32)
  {
    uint64_t v29 = v31;
    sub_10002A3C8((uint64_t)v37, (uint64_t)&v33);
    BOOL result = 0;
    if (v34) {
      return result;
    }
    goto LABEL_37;
  }
  if (v32 == 1)
  {
    uint64_t v29 = v31;
    sub_10002A3C8((uint64_t)v37, (uint64_t)&v33);
    BOOL result = 0;
    if (v34 != 1) {
      return result;
    }
LABEL_37:
    if (v29 != v33) {
      return result;
    }
    return *(_DWORD *)(a1 + 172) == *(_DWORD *)(a2 + 172);
  }
  sub_10002A3C8((uint64_t)v37, (uint64_t)&v33);
  BOOL result = 0;
  if (v34 == 2 && !v33) {
    return *(_DWORD *)(a1 + 172) == *(_DWORD *)(a2 + 172);
  }
  return result;
}

uint64_t sub_10002A3C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_10002A424()
{
  unint64_t result = qword_10070A220;
  if (!qword_10070A220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A220);
  }
  return result;
}

uint64_t sub_10002A478(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = v2[v4 + 5];
    unint64_t v7 = v2[v4 + 6];
    sub_100008D24(v6, v7);
    swift_bridgeObjectRetain();
    sub_100008D24(v6, v7);
    char v8 = sub_100010454(v6, v7, a2);
    sub_1000094D4(v6, v7);
    sub_1000094D4(v6, v7);
    swift_bridgeObjectRelease();
    if (v8) {
      break;
    }
    ++v5;
    v4 += 5;
    if (v3 == v5)
    {
      swift_bridgeObjectRelease();
      return v2[2];
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v10 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    unint64_t v11 = v2[2];
    if (v10 == v11) {
      return v5;
    }
    uint64_t v12 = v4 * 8 + 72;
    while (v10 < v11)
    {
      uint64_t v14 = (char *)v2 + v12;
      uint64_t v15 = *(void *)((char *)v2 + v12 + 8);
      unint64_t v16 = *(void *)((char *)v2 + v12 + 16);
      sub_100008D24(v15, v16);
      swift_bridgeObjectRetain();
      sub_100008D24(v15, v16);
      char v17 = sub_100010454(v15, v16, a2);
      sub_1000094D4(v15, v16);
      sub_1000094D4(v15, v16);
      uint64_t result = swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        if (v10 != v5)
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_25;
          }
          unint64_t v18 = v2[2];
          if (v5 >= v18) {
            goto LABEL_26;
          }
          if (v10 >= v18) {
            goto LABEL_27;
          }
          uint64_t v37 = 5 * v5;
          uint64_t v19 = (uint64_t)&v2[5 * v5 + 4];
          uint64_t v20 = *(void *)(v19 + 24);
          char v32 = *(unsigned char *)(v19 + 32);
          int v35 = *(_DWORD *)v19;
          int v36 = *(_DWORD *)v14;
          uint64_t v22 = *((void *)v14 + 1);
          unint64_t v21 = *((void *)v14 + 2);
          uint64_t v23 = *((void *)v14 + 3);
          char v24 = v14[32];
          unint64_t v33 = *(void *)(v19 + 16);
          uint64_t v34 = *(void *)(v19 + 8);
          sub_100008D24(v34, v33);
          swift_bridgeObjectRetain();
          sub_100008D24(v22, v21);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v2 = sub_1000933F0(v2);
          }
          uint64_t v25 = &v2[v37];
          uint64_t v26 = v2[v37 + 5];
          unint64_t v27 = v2[v37 + 6];
          *((_DWORD *)v25 + 8) = v36;
          v25[5] = v22;
          v25[6] = v21;
          v25[7] = v23;
          *((unsigned char *)v25 + 64) = v24;
          sub_1000094D4(v26, v27);
          uint64_t result = swift_bridgeObjectRelease();
          if (v10 >= v2[2]) {
            goto LABEL_28;
          }
          char v28 = (char *)v2 + v12;
          uint64_t v29 = *(void *)((char *)v2 + v12 + 8);
          unint64_t v30 = *(void *)((char *)v2 + v12 + 16);
          *(_DWORD *)char v28 = v35;
          *((void *)v28 + 1) = v34;
          *((void *)v28 + 2) = v33;
          *((void *)v28 + 3) = v20;
          v28[32] = v32;
          sub_1000094D4(v29, v30);
          uint64_t result = swift_bridgeObjectRelease();
          *(void *)a1 = v2;
        }
        if (__OFADD__(v5++, 1)) {
          goto LABEL_24;
        }
      }
      ++v10;
      unint64_t v11 = v2[2];
      v12 += 40;
      if (v10 == v11) {
        return v5;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002A760(unsigned __int8 *a1)
{
  return sub_1000291B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10002A77C(uint64_t a1)
{
  return a1;
}

uint64_t _s12LocalMailboxV6LoggerVMa()
{
  uint64_t result = qword_10070A290;
  if (!qword_10070A290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002A7F4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_10002A840(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10002A898(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_10002A8E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E0ED0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    int v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    *int v9 = *v10;
    *((_WORD *)v9 + 1) = *((_WORD *)v10 + 1);
    *((void *)v9 + 1) = *((void *)v10 + 1);
    *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10002A9D8(uint64_t a1)
{
  uint64_t v2 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002AA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_WORD *)(v8 + 2) = *(_WORD *)(v9 + 2);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10002AAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_WORD *)(v8 + 2) = *(_WORD *)(v9 + 2);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t sub_10002AB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t sub_10002AC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_WORD *)(v8 + 2) = *(_WORD *)(v9 + 2);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  return a1;
}

uint64_t sub_10002ACCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002ACE0);
}

uint64_t sub_10002ACE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10002ADA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002ADB8);
}

uint64_t sub_10002ADB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E0ED0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10002AE78()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s12LocalMailboxV9TracingIDVMa()
{
  return &_s12LocalMailboxV9TracingIDVN;
}

__n128 _s12LocalMailboxV9SyncPointVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s12LocalMailboxV9SyncPointVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s12LocalMailboxV9SyncPointVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *_s12LocalMailboxV9SyncPointVMa()
{
  return &_s12LocalMailboxV9SyncPointVN;
}

unint64_t sub_10002AF94()
{
  unint64_t result = qword_10070A2C8;
  if (!qword_10070A2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A2C8);
  }
  return result;
}

uint64_t sub_10002AFE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002B050(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002B0B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002B118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19UserInitiatedSearchV5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002B17C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  unint64_t v18 = (uint64_t (*)(int *))result;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (char *)(a3 + 49);
    uint64_t v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      int v12 = *(_DWORD *)(v6 - 17);
      uint64_t v13 = *(void *)(v6 - 9);
      char v14 = *(v6 - 1);
      char v15 = *v6;
      int v19 = v12;
      uint64_t v20 = v13;
      char v21 = v14;
      char v22 = v15;
      unint64_t result = v18(&v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v7;
      }
      if (result)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = v7;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_10001A634(0, v7[2] + 1, 1);
          uint64_t v7 = v23;
        }
        unint64_t v9 = v7[2];
        unint64_t v8 = v7[3];
        unint64_t v10 = v9 + 1;
        if (v9 >= v8 >> 1)
        {
          unint64_t result = sub_10001A634(v8 > 1, v9 + 1, 1);
          unint64_t v10 = v9 + 1;
          uint64_t v7 = v23;
        }
        long long v7[2] = v10;
        uint64_t v11 = &v7[3 * v9];
        *((_DWORD *)v11 + 8) = v12;
        v11[5] = v13;
        *((unsigned char *)v11 + 48) = v14;
        *((unsigned char *)v11 + 49) = v15;
        uint64_t v4 = a3;
      }
      ++v5;
      v6 += 24;
      if (v17 == v5) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_13:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_10002B320(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  uint64_t v24 = *(void *)(SearchResult - 8);
  uint64_t v8 = __chkstk_darwin(SearchResult - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  int v12 = (char *)v20 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    char v15 = _swiftEmptyArrayStorage;
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void **)(v24 + 72);
      sub_10003DF50(a3 + v16 + (void)v13 * v14, (uint64_t)v12, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      char v17 = a1(v12);
      if (v3)
      {
        sub_10003B34C((uint64_t)v12, type metadata accessor for FetchSearchResultMessages.Requests.Search);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v13;
      }
      if (v17)
      {
        sub_10003DFB8((uint64_t)v12, v23, type metadata accessor for FetchSearchResultMessages.Requests.Search);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10001AA34(0, v15[2] + 1, 1);
        }
        char v15 = v25;
        unint64_t v19 = v25[2];
        unint64_t v18 = v25[3];
        if (v19 >= v18 >> 1)
        {
          sub_10001AA34(v18 > 1, v19 + 1, 1);
          char v15 = v25;
        }
        v15[2] = v19 + 1;
        uint64_t result = sub_10003DFB8(v23, (uint64_t)v15 + v16 + v19 * (void)v13, type metadata accessor for FetchSearchResultMessages.Requests.Search);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_10003B34C((uint64_t)v12, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_10002B5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C69C(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AA74);
}

uint64_t sub_10002B5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C1D4(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AAB4);
}

uint64_t sub_10002B610(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  unint64_t v18 = (uint64_t (*)(int *))result;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (void *)(a3 + 48);
    uint64_t v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      int v8 = *((_DWORD *)v6 - 4);
      uint64_t v10 = *(v6 - 1);
      uint64_t v9 = *v6;
      int v19 = v8;
      uint64_t v20 = v10;
      uint64_t v21 = v9;
      swift_bridgeObjectRetain();
      char v11 = v18(&v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_10001AAD4(0, v7[2] + 1, 1);
          uint64_t v7 = v22;
        }
        unint64_t v13 = v7[2];
        unint64_t v12 = v7[3];
        unint64_t v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          uint64_t result = sub_10001AAD4(v12 > 1, v13 + 1, 1);
          unint64_t v14 = v13 + 1;
          uint64_t v7 = v22;
        }
        long long v7[2] = v14;
        char v15 = &v7[3 * v13];
        *((_DWORD *)v15 + 8) = v8;
        v15[5] = v10;
        v15[6] = v9;
        uint64_t v4 = a3;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 3;
      if (v17 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_10002B798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AB14);
}

uint64_t sub_10002B7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AB34);
}

uint64_t sub_10002B7F0(uint64_t (*a1)(char *), void *a2, uint64_t a3)
{
  return sub_10002C84C(a1, a2, a3, &qword_10070A640, (void (*)(BOOL, uint64_t, uint64_t))sub_10001AB54);
}

uint64_t sub_10002B824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001ABB4);
}

uint64_t sub_10002B850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001ABD4);
}

uint64_t sub_10002B87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002B924(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_10003E020, (void (*)(uint64_t, uint64_t))sub_10003E03C, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001ABF4);
}

uint64_t sub_10002B8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002B924(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_10003E058, (void (*)(uint64_t, uint64_t))sub_10003E070, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AC14);
}

uint64_t sub_10002B924(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t), uint64_t (*a6)(BOOL, uint64_t, uint64_t))
{
  uint64_t v7 = a3;
  uint64_t v23 = (uint64_t (*)(int *))result;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v8 = 0;
    uint64_t v9 = (void *)(a3 + 48);
    uint64_t v10 = _swiftEmptyArrayStorage;
    while (v8 < *(void *)(v7 + 16))
    {
      int v11 = *((_DWORD *)v9 - 4);
      uint64_t v12 = *(v9 - 1);
      uint64_t v13 = *v9;
      int v25 = v11;
      uint64_t v26 = v12;
      uint64_t v27 = v13;
      a4(v12, v13);
      char v14 = v23(&v25);
      if (v6)
      {
        a5(v12, v13);
        swift_release();
        goto LABEL_15;
      }
      if (v14)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        char v28 = v10;
        if ((result & 1) == 0)
        {
          uint64_t result = a6(0, v10[2] + 1, 1);
          uint64_t v10 = v28;
        }
        unint64_t v16 = v10[2];
        unint64_t v15 = v10[3];
        unint64_t v17 = v16 + 1;
        if (v16 >= v15 >> 1)
        {
          uint64_t result = a6(v15 > 1, v16 + 1, 1);
          unint64_t v17 = v16 + 1;
          uint64_t v10 = v28;
        }
        v10[2] = v17;
        unint64_t v18 = &v10[3 * v16];
        *((_DWORD *)v18 + 8) = v11;
        v18[5] = v12;
        v18[6] = v13;
        uint64_t v7 = a3;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))a5)(v12, v13);
      }
      ++v8;
      v9 += 3;
      if (v22 == v8) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  return result;
}

uint64_t sub_10002BAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C1D4(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AC54);
}

uint64_t sub_10002BB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AC74);
}

uint64_t sub_10002BB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C69C(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001ACB4);
}

uint64_t sub_10002BB68(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    unint64_t v5 = (uint64_t (*)(int *))result;
    unint64_t v6 = 0;
    uint64_t v7 = (void *)(a3 + 40);
    unint64_t v8 = _swiftEmptyArrayStorage;
    char v14 = (uint64_t (*)(int *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      int v12 = *((_DWORD *)v7 - 2);
      uint64_t v13 = *v7;
      int v17 = v12;
      uint64_t v18 = v13;
      uint64_t result = v5(&v17);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        int v19 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_10001ACD4(0, v8[2] + 1, 1);
          unint64_t v8 = v19;
        }
        unint64_t v10 = v8[2];
        unint64_t v9 = v8[3];
        if (v10 >= v9 >> 1)
        {
          uint64_t result = sub_10001ACD4(v9 > 1, v10 + 1, 1);
          unint64_t v8 = v19;
        }
        _OWORD v8[2] = v10 + 1;
        int v11 = &v8[2 * v10];
        *((_DWORD *)v11 + 8) = v12;
        v11[5] = v13;
        uint64_t v4 = a3;
        unint64_t v5 = v14;
      }
      ++v6;
      v7 += 2;
      if (v16 == v6) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  return result;
}

uint64_t sub_10002BCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001ACF4);
}

uint64_t sub_10002BCFC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    unint64_t v5 = (uint64_t (*)(int *))result;
    unint64_t v6 = 0;
    uint64_t v7 = (unsigned char *)(a3 + 36);
    unint64_t v8 = _swiftEmptyArrayStorage;
    char v14 = (uint64_t (*)(int *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      int v12 = *((_DWORD *)v7 - 1);
      char v13 = *v7;
      int v17 = v12;
      char v18 = v13;
      uint64_t result = v5(&v17);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        int v19 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_10001AD14(0, v8[2] + 1, 1);
          unint64_t v8 = v19;
        }
        unint64_t v10 = v8[2];
        unint64_t v9 = v8[3];
        if (v10 >= v9 >> 1)
        {
          uint64_t result = sub_10001AD14(v9 > 1, v10 + 1, 1);
          unint64_t v8 = v19;
        }
        _OWORD v8[2] = v10 + 1;
        int v11 = &v8[v10];
        *((_DWORD *)v11 + 8) = v12;
        *((unsigned char *)v11 + 36) = v13;
        uint64_t v4 = a3;
        unint64_t v5 = v14;
      }
      ++v6;
      v7 += 8;
      if (v16 == v6) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  return result;
}

uint64_t sub_10002BE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AD34);
}

uint64_t sub_10002BE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AD74);
}

uint64_t sub_10002BEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AD94);
}

uint64_t sub_10002BEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002BFF0(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001ADB4);
}

uint64_t sub_10002BF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C1D4(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001ADD4);
}

uint64_t sub_10002BF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001ADF4);
}

uint64_t sub_10002BF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002BFF0(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AE14);
}

uint64_t sub_10002BF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AE34);
}

uint64_t sub_10002BFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002BFF0(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AE74);
}

uint64_t sub_10002BFF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5 = a3;
  int v19 = (uint64_t (*)(int *))result;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    unint64_t v6 = 0;
    uint64_t v7 = (unsigned char *)(a3 + 48);
    unint64_t v8 = _swiftEmptyArrayStorage;
    while (v6 < *(void *)(v5 + 16))
    {
      int v13 = *((_DWORD *)v7 - 4);
      uint64_t v14 = *((void *)v7 - 1);
      char v15 = *v7;
      int v20 = v13;
      uint64_t v21 = v14;
      char v22 = v15;
      uint64_t result = v19(&v20);
      if (v4)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = a4(0, v8[2] + 1, 1);
          unint64_t v8 = v23;
        }
        unint64_t v10 = v8[2];
        unint64_t v9 = v8[3];
        unint64_t v11 = v10 + 1;
        if (v10 >= v9 >> 1)
        {
          uint64_t result = a4(v9 > 1, v10 + 1, 1);
          unint64_t v11 = v10 + 1;
          unint64_t v8 = v23;
        }
        _OWORD v8[2] = v11;
        int v12 = &v8[3 * v10];
        *((_DWORD *)v12 + 8) = v13;
        v12[5] = v14;
        *((unsigned char *)v12 + 48) = v15;
        uint64_t v5 = a3;
      }
      ++v6;
      v7 += 24;
      if (v18 == v6) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  return result;
}

uint64_t sub_10002C17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AE94);
}

uint64_t sub_10002C1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C1D4(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AEB4);
}

uint64_t sub_10002C1D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5 = a3;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    unint64_t v6 = (uint64_t (*)(int *))result;
    unint64_t v7 = 0;
    unint64_t v8 = (unsigned char *)(a3 + 36);
    unint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v16 = (uint64_t (*)(int *))result;
    while (v7 < *(void *)(v5 + 16))
    {
      int v13 = *((_DWORD *)v8 - 1);
      char v14 = *v8;
      int v19 = v13;
      char v20 = v14;
      uint64_t result = v6(&v19);
      if (v4)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v21 = v9;
        if ((result & 1) == 0)
        {
          uint64_t result = a4(0, v9[2] + 1, 1);
          unint64_t v9 = v21;
        }
        unint64_t v11 = v9[2];
        unint64_t v10 = v9[3];
        if (v11 >= v10 >> 1)
        {
          uint64_t result = a4(v10 > 1, v11 + 1, 1);
          unint64_t v9 = v21;
        }
        long long v9[2] = v11 + 1;
        int v12 = &v9[v11];
        *((_DWORD *)v12 + 8) = v13;
        *((unsigned char *)v12 + 36) = v14;
        uint64_t v5 = a3;
        unint64_t v6 = v16;
      }
      ++v7;
      v8 += 8;
      if (v18 == v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
  return result;
}

uint64_t sub_10002C350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AED4);
}

uint64_t sub_10002C37C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  int v17 = (uint64_t (*)(_DWORD *))result;
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    unint64_t v5 = 0;
    unint64_t v6 = (unsigned char *)(a3 + 40);
    unint64_t v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      int v12 = *((_DWORD *)v6 - 2);
      int v13 = *((_DWORD *)v6 - 1);
      char v14 = *v6;
      v18[0] = v12;
      v18[1] = v13;
      char v19 = v14;
      uint64_t result = v17(v18);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        char v20 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_10001AEF4(0, v7[2] + 1, 1);
          unint64_t v7 = v20;
        }
        unint64_t v9 = v7[2];
        unint64_t v8 = v7[3];
        unint64_t v10 = v9 + 1;
        if (v9 >= v8 >> 1)
        {
          uint64_t result = sub_10001AEF4(v8 > 1, v9 + 1, 1);
          unint64_t v10 = v9 + 1;
          unint64_t v7 = v20;
        }
        long long v7[2] = v10;
        unint64_t v11 = (char *)v7 + 12 * v9;
        *((_DWORD *)v11 + 8) = v12;
        *((_DWORD *)v11 + 9) = v13;
        v11[40] = v14;
        uint64_t v4 = a3;
      }
      ++v5;
      v6 += 12;
      if (v16 == v5) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v7 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_10002C4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C514(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AF14);
}

uint64_t sub_10002C514(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    unint64_t v7 = (uint64_t (*)(int *))result;
    unint64_t v8 = 0;
    unint64_t v9 = _swiftEmptyArrayStorage;
    char v14 = (uint64_t (*)(int *))result;
    while (v8 < *(void *)(a3 + 16))
    {
      int v12 = *(_DWORD *)(a3 + 4 * v8 + 32);
      int v15 = v12;
      uint64_t result = v7(&v15);
      if (v4)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v16 = v9;
        if ((result & 1) == 0)
        {
          uint64_t result = a4(0, v9[2] + 1, 1);
          unint64_t v9 = v16;
        }
        unint64_t v11 = v9[2];
        unint64_t v10 = v9[3];
        if (v11 >= v10 >> 1)
        {
          uint64_t result = a4(v10 > 1, v11 + 1, 1);
          unint64_t v9 = v16;
        }
        long long v9[2] = v11 + 1;
        *((_DWORD *)v9 + v11 + 8) = v12;
        unint64_t v7 = v14;
      }
      if (v6 == ++v8) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
  return result;
}

uint64_t sub_10002C670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10002C69C(a1, a2, a3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_10001AF34);
}

uint64_t sub_10002C69C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5 = a3;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    uint64_t v6 = (uint64_t (*)(int *))result;
    unint64_t v7 = 0;
    unint64_t v8 = (unsigned char *)(a3 + 36);
    unint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v16 = (uint64_t (*)(int *))result;
    while (v7 < *(void *)(v5 + 16))
    {
      int v13 = *((_DWORD *)v8 - 1);
      char v14 = *v8;
      int v19 = v13;
      char v20 = v14;
      uint64_t result = v6(&v19);
      if (v4)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v21 = v9;
        if ((result & 1) == 0)
        {
          uint64_t result = a4(0, v9[2] + 1, 1);
          unint64_t v9 = v21;
        }
        unint64_t v11 = v9[2];
        unint64_t v10 = v9[3];
        if (v11 >= v10 >> 1)
        {
          uint64_t result = a4(v10 > 1, v11 + 1, 1);
          unint64_t v9 = v21;
        }
        long long v9[2] = v11 + 1;
        int v12 = &v9[v11];
        *((_DWORD *)v12 + 8) = v13;
        *((unsigned char *)v12 + 36) = v14;
        uint64_t v5 = a3;
        uint64_t v6 = v16;
      }
      ++v7;
      v8 += 8;
      if (v18 == v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
  return result;
}

uint64_t sub_10002C818(uint64_t (*a1)(char *), void *a2, uint64_t a3)
{
  return sub_10002C84C(a1, a2, a3, &qword_10070A638, (void (*)(BOOL, uint64_t, uint64_t))sub_10001AF54);
}

uint64_t sub_10002C84C(uint64_t (*a1)(char *), void *a2, uint64_t a3, uint64_t *a4, void (*a5)(BOOL, uint64_t, uint64_t))
{
  char v22 = a5;
  uint64_t v6 = a4;
  char v28 = a1;
  uint64_t v29 = a2;
  uint64_t v8 = sub_10000566C(a4);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v26 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  int v13 = (char *)&v22 - v12;
  char v14 = _swiftEmptyArrayStorage;
  unint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v25 = *(void *)(a3 + 16);
  if (v25)
  {
    unint64_t v15 = 0;
    uint64_t v16 = _swiftEmptyArrayStorage;
    uint64_t v23 = v6;
    uint64_t v24 = a3;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v18 = *(void *)(v27 + 72);
      sub_1000079E4(a3 + v17 + v18 * v15, (uint64_t)v13, v6);
      char v14 = v29;
      char v19 = v28(v13);
      if (v5)
      {
        sub_100007A48((uint64_t)v13, v6);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v14;
      }
      if (v19)
      {
        sub_10001FDF0((uint64_t)v13, v26, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v22(0, v16[2] + 1, 1);
        }
        uint64_t v16 = v30;
        unint64_t v21 = v30[2];
        unint64_t v20 = v30[3];
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          uint64_t v16 = v30;
        }
        v16[2] = v21 + 1;
        uint64_t v6 = v23;
        uint64_t result = sub_10001FDF0(v26, (uint64_t)v16 + v17 + v21 * v18, v23);
        a3 = v24;
      }
      else
      {
        uint64_t result = sub_100007A48((uint64_t)v13, v6);
      }
      if (v25 == ++v15)
      {
        char v14 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  return result;
}

uint64_t sub_10002CAA8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v17 = (uint64_t (*)(int *))result;
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    unint64_t v4 = 0;
    uint64_t v5 = (unsigned __int8 *)(a3 + 52);
    uint64_t v6 = _swiftEmptyArrayStorage;
    while (v4 < *(void *)(v3 + 16))
    {
      int v7 = *((_DWORD *)v5 - 5);
      uint64_t v8 = *(void *)(v5 - 12);
      uint64_t v9 = *((unsigned int *)v5 - 1);
      uint64_t v10 = *v5;
      int v19 = v7;
      uint64_t v20 = v8;
      int v21 = v9;
      char v22 = v10;
      Mailbox.name.getter(v8, v9, v10);
      char v11 = v17(&v19);
      if (v18)
      {
        j__swift_bridgeObjectRelease(v8, v9, v10);
        swift_release();
        goto LABEL_15;
      }
      if (v11)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = v6;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_10001AF94(0, v6[2] + 1, 1);
          uint64_t v6 = v23;
        }
        unint64_t v13 = v6[2];
        unint64_t v12 = v6[3];
        if (v13 >= v12 >> 1)
        {
          uint64_t result = sub_10001AF94(v12 > 1, v13 + 1, 1);
          uint64_t v6 = v23;
        }
        _OWORD v6[2] = v13 + 1;
        char v14 = &v6[3 * v13];
        *((_DWORD *)v14 + 8) = v7;
        v14[5] = v8;
        *((_DWORD *)v14 + 12) = v9;
        *((unsigned char *)v14 + 52) = v10;
        uint64_t v3 = a3;
      }
      else
      {
        uint64_t result = j__swift_bridgeObjectRelease(v8, v9, v10);
      }
      ++v4;
      v5 += 24;
      if (v16 == v4) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_10002CC60(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v18 = (uint64_t (*)(int *))result;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (void *)(a3 + 48);
    int v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      int v8 = *((_DWORD *)v6 - 4);
      uint64_t v10 = *(v6 - 1);
      uint64_t v9 = *v6;
      int v19 = v8;
      uint64_t v20 = v10;
      uint64_t v21 = v9;
      swift_bridgeObjectRetain();
      char v11 = v18(&v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        char v22 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_10001AFB4(0, v7[2] + 1, 1);
          int v7 = v22;
        }
        unint64_t v13 = v7[2];
        unint64_t v12 = v7[3];
        unint64_t v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          uint64_t result = sub_10001AFB4(v12 > 1, v13 + 1, 1);
          unint64_t v14 = v13 + 1;
          int v7 = v22;
        }
        long long v7[2] = v14;
        unint64_t v15 = &v7[3 * v13];
        *((_DWORD *)v15 + 8) = v8;
        v15[5] = v10;
        v15[6] = v9;
        uint64_t v4 = a3;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 3;
      if (v17 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    int v7 = _swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_10002CDE8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v17 = (uint64_t (*)(_DWORD *))result;
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (unsigned char *)(a3 + 40);
    int v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      int v12 = *((_DWORD *)v6 - 2);
      int v13 = *((_DWORD *)v6 - 1);
      char v14 = *v6;
      v18[0] = v12;
      v18[1] = v13;
      char v19 = v14;
      uint64_t result = v17(v18);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if (result)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v20 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_10001AFD4(0, v7[2] + 1, 1);
          int v7 = v20;
        }
        unint64_t v9 = v7[2];
        unint64_t v8 = v7[3];
        unint64_t v10 = v9 + 1;
        if (v9 >= v8 >> 1)
        {
          uint64_t result = sub_10001AFD4(v8 > 1, v9 + 1, 1);
          unint64_t v10 = v9 + 1;
          int v7 = v20;
        }
        long long v7[2] = v10;
        char v11 = (char *)v7 + 12 * v9;
        *((_DWORD *)v11 + 8) = v12;
        *((_DWORD *)v11 + 9) = v13;
        v11[40] = v14;
        uint64_t v4 = a3;
      }
      ++v5;
      v6 += 12;
      if (v16 == v5) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    int v7 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_10002CF54(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v18 = (uint64_t (*)(int *))result;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (void *)(a3 + 48);
    int v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      int v8 = *((_DWORD *)v6 - 4);
      uint64_t v10 = *(v6 - 1);
      uint64_t v9 = *v6;
      int v19 = v8;
      uint64_t v20 = v10;
      uint64_t v21 = v9;
      swift_bridgeObjectRetain();
      char v11 = v18(&v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        char v22 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_10001AFF4(0, v7[2] + 1, 1);
          int v7 = v22;
        }
        unint64_t v13 = v7[2];
        unint64_t v12 = v7[3];
        unint64_t v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          uint64_t result = sub_10001AFF4(v12 > 1, v13 + 1, 1);
          unint64_t v14 = v13 + 1;
          int v7 = v22;
        }
        long long v7[2] = v14;
        unint64_t v15 = &v7[3 * v13];
        *((_DWORD *)v15 + 8) = v8;
        v15[5] = v10;
        v15[6] = v9;
        uint64_t v4 = a3;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 3;
      if (v17 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    int v7 = _swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

void *sub_10002D0DC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10001A6B4(0, v1, 0);
    uint64_t v3 = (unint64_t *)(a1 + 48);
    do
    {
      uint64_t v4 = *(v3 - 1);
      unint64_t v5 = *v3;
      sub_100008D24(v4, *v3);
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_10001A6B4(v6 > 1, v7 + 1, 1);
      }
      v3 += 5;
      _swiftEmptyArrayStorage[2] = v7 + 1;
      int v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v4;
      v8[5] = v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

double sub_10002D1B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, unsigned __int8 a10)
{
  char v11 = v10;
  uint64_t v43 = a4;
  uint64_t v19 = a6 & 0x101010101FFFF01;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10002D6F0(a5, v19, v11, a1, a2, a3, a10, (uint64_t)v48);
  sub_1000079E4((uint64_t)v48, (uint64_t)&v44, &qword_10070A2D8);
  if (v47 == 255)
  {
    sub_100007A48((uint64_t)v48, &qword_10070A2D8);
    double result = 0.0;
    *(_OWORD *)a9 = 0u;
    *(_OWORD *)(a9 + 16) = 0u;
    *(void *)(a9 + 32) = 0;
  }
  else if (v47)
  {
    sub_100007A48((uint64_t)v48, &qword_10070A2D8);
    sub_100021BFC(&v44, a9);
  }
  else
  {
    uint64_t v39 = a7;
    uint64_t v21 = v44;
    uint64_t v41 = v45;
    uint64_t v42 = *((void *)&v44 + 1);
    uint64_t v40 = v46;
    if ((unsigned __int16)((unsigned __int16)a5 >> 14) <= 2u)
    {
      char v22 = sub_10002DECC;
      switch((char)a5)
      {
        case 1:
          char v22 = sub_10002FC48;
          goto LABEL_10;
        case 2:
          char v22 = sub_10002FB88;
          goto LABEL_10;
        case 3:
          sub_100007A48((uint64_t)v48, &qword_10070A2D8);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)(a9 + 32) = 0;
          double result = 0.0;
          *(_OWORD *)a9 = 0u;
          *(_OWORD *)(a9 + 16) = 0u;
          break;
        default:
          goto LABEL_10;
      }
    }
    else
    {
      char v22 = sub_10002DECC;
LABEL_10:
      uint64_t v37 = v22;
      int v36 = a8 & 1;
      uint64_t v23 = (_OWORD *)swift_allocObject();
      uint64_t v38 = &v35;
      long long v24 = v11[9];
      v23[9] = v11[8];
      _OWORD v23[10] = v24;
      v23[11] = v11[10];
      long long v25 = v11[5];
      v23[5] = v11[4];
      v23[6] = v25;
      long long v26 = v11[7];
      v23[7] = v11[6];
      v23[8] = v26;
      long long v27 = v11[1];
      v23[1] = *v11;
      v23[2] = v27;
      long long v28 = v11[3];
      v23[3] = v11[2];
      v23[4] = v28;
      uint64_t v29 = __chkstk_darwin(v23);
      int v35 = v33;
      v33[2] = a1;
      v33[3] = a2;
      v33[4] = a3;
      char v34 = a10 & 1;
      uint64_t v30 = __chkstk_darwin(v29);
      v32[2] = a1;
      v32[3] = a2;
      v32[4] = a3;
      v32[5] = v11;
      __chkstk_darwin(v30);
      v31[2] = a1;
      v31[3] = a2;
      v31[4] = a3;
      v31[5] = v11;
      sub_100007780((uint64_t)v11);
      v37(v21, v42, v41, v40, (uint64_t)sub_10002DF18, (uint64_t)v35, (uint64_t)sub_10002FB68, (uint64_t)v32, (uint64_t)sub_10002FB74, (uint64_t)v31, v43, v19, v39, v36);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_100007A48((uint64_t)v48, &qword_10070A2D8);
    }
  }
  return result;
}

BOOL sub_10002D594(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  char v11 = sub_10003BCDC(a1, v9);
  if ((sub_1000E9D5C((uint64_t)v11, a2, a3, v9, v10) & 1) == 0) {
    return 0;
  }
  sub_100021C34((uint64_t)a1, (uint64_t)v15);
  if ((a5 & 1) == 0)
  {
    uint64_t v12 = v16;
    uint64_t v13 = v17;
    sub_10003BCDC(v15, v16);
    LOBYTE(v12) = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 56))(v12, v13);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v15);
    return (v12 & 1) == 0;
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v15);
  return 1;
}

uint64_t sub_10002D664(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6 = a1 & 1;
  int v7 = *(_DWORD *)(a5 + 172);
  uint64_t v8 = *(void *)(a5 + 8);
  uint64_t v9 = *(void *)(a5 + 16);
  int v10 = *(_DWORD *)(a5 + 24);
  v12[0] = *(void *)a5;
  v12[1] = v8;
  __int16 v13 = v7;
  uint64_t v14 = v9;
  int v15 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a2) = sub_1000EA15C((uint64_t)v12, v6, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a2 & 1;
}

uint64_t sub_10002D6F0@<X0>(int a1@<W0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int v83 = a7;
  uint64_t v84 = a8;
  uint64_t v85 = a6;
  uint64_t v13 = type metadata accessor for MailboxSyncState();
  __chkstk_darwin(v13 - 8);
  int v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *((void *)a3 + 12);
  if (!v16)
  {
    int v26 = *((_DWORD *)a3 + 43);
    long long v27 = a3[1];
    long long v113 = *a3;
    long long v114 = v27;
    long long v28 = a3[3];
    long long v115 = a3[2];
    long long v116 = v28;
    v117[0] = a3[4];
    *(_OWORD *)((char *)v117 + 9) = *(long long *)((char *)a3 + 73);
    long long v29 = v113;
    uint64_t v30 = v114;
    int v31 = DWORD2(v114);
    unint64_t v32 = MailboxOfInterest.uidValidity.getter();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_10009A7D4((uint64_t)&off_1006B9F90);
    char v94 = 1;
    long long v99 = 0u;
    long long v100 = 0u;
    __int16 v101 = 256;
    long long v89 = v29;
    __int16 v90 = v26;
    uint64_t v91 = v30;
    LODWORD(v92) = v31;
    __int16 v95 = &type metadata for ReSyncMailbox;
    uint64_t v86 = v30;
    int v87 = v31;
    sub_10003BC88();
    swift_bridgeObjectRetain();
    sub_1005E2BF0();
    int v96 = v32;
    char v97 = BYTE4(v32) & 1;
    __int16 v98 = a1;
    sub_10003C7EC((uint64_t)&v89, (uint64_t)&v102);
    *((void *)&v111 + 1) = _swiftEmptyArrayStorage;
    uint64_t v112 = _swiftEmptyArrayStorage;
    sub_10003C848((uint64_t)&v89);
    uint64_t v33 = sub_10000566C(&qword_10070A4D0);
    uint64_t v91 = v33;
    uint64_t v34 = sub_10003C89C(&qword_10070A4D8, &qword_10070A4D0);
    uint64_t v92 = v34;
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v35 + 16;
    *(void *)&long long v89 = v35;
    sub_1000079E4((uint64_t)&v102, v35 + 16, &qword_10070A4D0);
    if (sub_10003B5C0(v36, a4, a5))
    {
      sub_100021C34((uint64_t)&v89, (uint64_t)&v86);
      if (v83)
      {
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v86);
LABEL_24:
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v89);
        uint64_t v51 = v84;
        *(void *)(v84 + 24) = v33;
        *(void *)(v51 + 32) = v34;
        uint64_t v52 = swift_allocObject();
        *(void *)uint64_t v51 = v52;
        long long v53 = v111;
        *(_OWORD *)(v52 + 144) = v110;
        *(_OWORD *)(v52 + 160) = v53;
        *(void *)(v52 + 176) = v112;
        long long v54 = v107;
        *(_OWORD *)(v52 + 80) = v106;
        *(_OWORD *)(v52 + 96) = v54;
        long long v55 = v109;
        *(_OWORD *)(v52 + 112) = v108;
        *(_OWORD *)(v52 + 128) = v55;
        long long v56 = v103;
        *(_OWORD *)(v52 + 16) = v102;
        *(_OWORD *)(v52 + 32) = v56;
        long long v57 = v105;
        *(_OWORD *)(v52 + 48) = v104;
        *(_OWORD *)(v52 + 64) = v57;
LABEL_34:
        *(unsigned char *)(v51 + 40) = 1;
        goto LABEL_35;
      }
      int v49 = *((unsigned __int8 *)sub_10003BCDC(&v86, v88) + 48);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v86);
      if (v49 != 1) {
        goto LABEL_24;
      }
    }
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v89);
    sub_100007A48((uint64_t)&v102, &qword_10070A4D0);
    uint64_t v50 = v84;
    *(_OWORD *)uint64_t v84 = 0u;
    *(_OWORD *)(v50 + 16) = 0u;
    *(void *)(v50 + 32) = 0;
    goto LABEL_32;
  }
  int v80 = a1;
  uint64_t v81 = a5;
  uint64_t v82 = a4;
  uint64_t v17 = v16
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  uint64_t v18 = _s13SelectedStateV7WrappedVMa(0);
  sub_10003DF50(v17 + *(int *)(v18 + 20), (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  swift_retain();
  uint64_t v19 = sub_10005F21C(a2 & 0x101010101FFFF01);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  sub_10003B34C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  if (!sub_100010180(0, v19) || sub_100010180(0, v21))
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v58 = *((_DWORD *)a3 + 43);
    long long v59 = a3[1];
    long long v113 = *a3;
    long long v114 = v59;
    long long v60 = a3[3];
    long long v115 = a3[2];
    long long v116 = v60;
    v117[0] = a3[4];
    *(_OWORD *)((char *)v117 + 9) = *(long long *)((char *)a3 + 73);
    long long v61 = v113;
    uint64_t v62 = v114;
    int v63 = DWORD2(v114);
    unint64_t v64 = MailboxOfInterest.uidValidity.getter();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_10009A7D4((uint64_t)&off_1006B9F90);
    char v94 = 1;
    long long v99 = 0u;
    long long v100 = 0u;
    __int16 v101 = 256;
    long long v89 = v61;
    __int16 v90 = v58;
    uint64_t v91 = v62;
    LODWORD(v92) = v63;
    __int16 v95 = &type metadata for ReSyncMailbox;
    uint64_t v86 = v62;
    int v87 = v63;
    sub_10003BC88();
    swift_bridgeObjectRetain();
    sub_1005E2BF0();
    int v96 = v64;
    char v97 = BYTE4(v64) & 1;
    __int16 v98 = v80;
    sub_10003C7EC((uint64_t)&v89, (uint64_t)&v102);
    *((void *)&v111 + 1) = _swiftEmptyArrayStorage;
    uint64_t v112 = _swiftEmptyArrayStorage;
    sub_10003C848((uint64_t)&v89);
    uint64_t v65 = sub_10000566C(&qword_10070A4D0);
    uint64_t v91 = v65;
    uint64_t v66 = sub_10003C89C(&qword_10070A4D8, &qword_10070A4D0);
    uint64_t v92 = v66;
    uint64_t v67 = swift_allocObject();
    uint64_t v68 = v67 + 16;
    *(void *)&long long v89 = v67;
    sub_1000079E4((uint64_t)&v102, v67 + 16, &qword_10070A4D0);
    if (sub_10003B5C0(v68, v82, v81))
    {
      sub_100021C34((uint64_t)&v89, (uint64_t)&v86);
      if (v83)
      {
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v86);
LABEL_33:
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v89);
        uint64_t v51 = v84;
        *(void *)(v84 + 24) = v65;
        *(void *)(v51 + 32) = v66;
        uint64_t v71 = swift_allocObject();
        *(void *)uint64_t v51 = v71;
        long long v72 = v111;
        *(_OWORD *)(v71 + 144) = v110;
        *(_OWORD *)(v71 + 160) = v72;
        *(void *)(v71 + 176) = v112;
        long long v73 = v107;
        *(_OWORD *)(v71 + 80) = v106;
        *(_OWORD *)(v71 + 96) = v73;
        long long v74 = v109;
        *(_OWORD *)(v71 + 112) = v108;
        *(_OWORD *)(v71 + 128) = v74;
        long long v75 = v103;
        *(_OWORD *)(v71 + 16) = v102;
        *(_OWORD *)(v71 + 32) = v75;
        long long v76 = v105;
        *(_OWORD *)(v71 + 48) = v104;
        *(_OWORD *)(v71 + 64) = v76;
        swift_release();
        goto LABEL_34;
      }
      int v70 = *((unsigned __int8 *)sub_10003BCDC(&v86, v88) + 48);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v86);
      if (v70 != 1) {
        goto LABEL_33;
      }
    }
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v89);
    sub_100007A48((uint64_t)&v102, &qword_10070A4D0);
    swift_release();
    uint64_t v50 = v84;
    *(void *)(v84 + 32) = 0;
    *(_OWORD *)uint64_t v50 = 0u;
    *(_OWORD *)(v50 + 16) = 0u;
LABEL_32:
    *(unsigned char *)(v50 + 40) = -1;
    goto LABEL_35;
  }
  uint64_t v78 = 15;
  uint64_t v79 = 0;
  uint64_t v24 = v19 + 56;
  uint64_t v25 = v21 + 56;
  while (*(void *)(v19 + 16))
  {
    Swift::UInt v37 = *((unsigned __int8 *)&off_1006B9EB0 + v79 + 32);
    uint64_t v38 = v25;
    sub_1005E33F0();
    sub_1005E3410(v37);
    Swift::Int v39 = sub_1005E3470();
    uint64_t v40 = -1 << *(unsigned char *)(v19 + 32);
    unint64_t v41 = v39 & ~v40;
    if (((*(void *)(v24 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
      break;
    }
    uint64_t v25 = v38;
    uint64_t v42 = *(void *)(v19 + 48);
    if (*(unsigned __int8 *)(v42 + v41) != v37)
    {
      uint64_t v43 = ~v40;
      do
      {
        unint64_t v41 = (v41 + 1) & v43;
        if (((*(void *)(v24 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
          goto LABEL_29;
        }
      }
      while (*(unsigned __int8 *)(v42 + v41) != v37);
    }
    if (*(void *)(v21 + 16))
    {
      sub_1005E33F0();
      sub_1005E3410(v37);
      Swift::Int v44 = sub_1005E3470();
      uint64_t v25 = v38;
      uint64_t v45 = -1 << *(unsigned char *)(v21 + 32);
      unint64_t v46 = v44 & ~v45;
      if ((*(void *)(v38 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46))
      {
        uint64_t v47 = *(void *)(v21 + 48);
        if (*(unsigned __int8 *)(v47 + v46) == v37) {
          break;
        }
        uint64_t v48 = ~v45;
        while (1)
        {
          unint64_t v46 = (v46 + 1) & v48;
          if (((*(void *)(v38 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v47 + v46) == v37) {
            goto LABEL_29;
          }
        }
      }
    }
    if (++v79 == v78)
    {
      if (sub_100010180(0, v23)) {
        goto LABEL_26;
      }
      break;
    }
  }
LABEL_29:
  uint64_t v69 = v84;
  *(void *)uint64_t v84 = v16;
  *(void *)(v69 + 8) = v19;
  *(void *)(v69 + 16) = v21;
  *(void *)(v69 + 24) = v23;
  *(unsigned char *)(v69 + 40) = 0;
LABEL_35:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002DECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  LOBYTE(v15) = a14;
  return sub_10002FC94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002DF28);
}

BOOL sub_10002DF18(void *a1)
{
  return sub_10002D594(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

double sub_10002DF28@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t *)@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t (*a10)(void), uint64_t a11, char *a12, unint64_t a13, uint64_t (*a14)(uint64_t *), char a15)
{
  uint64_t v135 = a7;
  uint64_t v136 = a8;
  uint64_t v144 = (uint64_t *)a9;
  uint64_t v145 = a6;
  uint64_t v138 = a4;
  uint64_t v139 = a2;
  uint64_t v140 = a3;
  uint64_t v143 = a14;
  LODWORD(v142) = a15 & 1;
  uint64_t v18 = sub_10000566C(&qword_10070A390);
  __chkstk_darwin(v18 - 8);
  v131 = (unint64_t *)((char *)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v130 = type metadata accessor for PendingPersistenceUpdates();
  __chkstk_darwin(v130);
  uint64_t v132 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = (char *)_s29DetermineNewestMessagesResultOMa(0);
  __chkstk_darwin(v141);
  uint64_t v22 = (uint64_t *)((char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for NewestMessages();
  uint64_t v128 = *(void *)(v23 - 8);
  uint64_t v129 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v133 = (uint64_t)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v137 = (uint64_t)&v120 - v26;
  uint64_t v27 = _s29DetermineMessageBatchesResultOMa(0);
  __chkstk_darwin(v27);
  long long v29 = (char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v30 - 8);
  unint64_t v32 = (char *)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  uint64_t v34 = a1;
  uint64_t v35 = a5;
  uint64_t v36 = a5;
  uint64_t v37 = v145;
  uint64_t v134 = a12;
  sub_10002FD18(v34, v36, v145, (uint64_t)a12, (uint64_t)v143, v142, (uint64_t)v29);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10003DFB8((uint64_t)v29, (uint64_t)v32, type metadata accessor for MessageBatches);
    uint64_t v39 = v33;
    uint64_t v40 = v33;
    unint64_t v41 = v35;
    sub_1000301E4(v40, v35, v37, v22);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10003B34C((uint64_t)v32, type metadata accessor for MessageBatches);
      uint64_t v38 = (uint64_t)v22;
      goto LABEL_5;
    }
    uint64_t v43 = v15;
    uint64_t v141 = (char *)(a13 & 0x101010101FFFF01);
    uint64_t v143 = v41;
    uint64_t v44 = v137;
    sub_10003DFB8((uint64_t)v22, v137, (uint64_t (*)(void))type metadata accessor for NewestMessages);
    int v45 = *(_DWORD *)(v15 + 172);
    uint64_t v46 = *(void *)v15;
    uint64_t v47 = *(void *)(v15 + 8);
    uint64_t v48 = *(void *)(v15 + 16);
    int v49 = *(_DWORD *)(v43 + 24);
    *(void *)&long long v173 = v46;
    *((void *)&v173 + 1) = v47;
    __int16 v174 = v45;
    uint64_t v175 = v48;
    int v176 = v49;
    uint64_t v50 = *(void *)(v43 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v51 = swift_bridgeObjectRetain();
    uint64_t v52 = sub_10002D0DC(v51);
    uint64_t v126 = v50;
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_10009A848((uint64_t)v52);
    swift_bridgeObjectRelease();
    uint64_t v142 = v39;
    uint64_t v54 = v39
        + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    uint64_t v55 = _s13SelectedStateV7WrappedVMa(0);
    uint64_t v56 = v54 + *(int *)(v55 + 20);
    uint64_t v127 = type metadata accessor for MailboxSyncState();
    uint64_t v57 = *(void *)(v56 + *(int *)(v127 + 56));
    swift_bridgeObjectRetain();
    sub_100176308(&v173, v53, v57, (uint64_t)v154);
    if (v154[0])
    {
      uint64_t v125 = v54;
      sub_10003B1D4((uint64_t)v154, (uint64_t)&v155);
      *((void *)&v162 + 1) = _swiftEmptyArrayStorage;
      uint64_t v163 = _swiftEmptyArrayStorage;
      sub_10003B230((uint64_t)v154);
      long long v170 = v161;
      long long v171 = v162;
      long long v172 = v163;
      long long v166 = v157;
      long long v167 = v158;
      long long v168 = v159;
      long long v169 = v160;
      long long v164 = v155;
      long long v165 = v156;
      uint64_t v58 = sub_10000566C(&qword_10070A2F0);
      *((void *)&v156 + 1) = v58;
      uint64_t v59 = sub_10003C89C(&qword_10070A2F8, &qword_10070A2F0);
      *(void *)&long long v157 = v59;
      *(void *)&long long v155 = swift_allocObject();
      sub_1000079E4((uint64_t)&v164, v155 + 16, &qword_10070A2F0);
      uint64_t v60 = v145;
      char v61 = v143((uint64_t *)&v155);
      _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v155);
      if (v61)
      {
        uint64_t v62 = v144;
        v144[3] = v58;
        v62[4] = v59;
        uint64_t v63 = swift_allocObject();
        *uint64_t v62 = v63;
        long long v64 = v171;
        *(_OWORD *)(v63 + 112) = v170;
        *(_OWORD *)(v63 + 128) = v64;
        *(void *)(v63 + 144) = v172;
        long long v65 = v167;
        *(_OWORD *)(v63 + 48) = v166;
        *(_OWORD *)(v63 + 64) = v65;
        long long v66 = v169;
        *(_OWORD *)(v63 + 80) = v168;
        *(_OWORD *)(v63 + 96) = v66;
        long long v67 = v165;
        *(_OWORD *)(v63 + 16) = v164;
        *(_OWORD *)(v63 + 32) = v67;
        sub_10003B34C(v44, (uint64_t (*)(void))type metadata accessor for NewestMessages);
        sub_10003B34C((uint64_t)v32, type metadata accessor for MessageBatches);
        return result;
      }
      sub_100007A48((uint64_t)&v164, &qword_10070A2F0);
      uint64_t v68 = v60;
      uint64_t v54 = v125;
    }
    else
    {
      sub_100007A48((uint64_t)v154, &qword_10070A2E0);
      uint64_t v68 = v145;
    }
    uint64_t v69 = v135;
    sub_100034498(0, v142, v139, v140, v143, v68, (unint64_t)v141, (uint64_t)&v155, v44, &off_1006BA4E8, v43, v135, v136, (unint64_t)&unk_1006BC0E8, (uint64_t)sub_10003E088, (uint64_t)sub_10003E08C);
    if (*((void *)&v156 + 1)) {
      goto LABEL_23;
    }
    uint64_t v125 = v55;
    sub_100007A48((uint64_t)&v155, &qword_10070A2E8);
    uint64_t v123 = a10;
    uint64_t v124 = a11;
    if ((a10(0) & 1) == 0)
    {
      sub_100034498(1, v142, v139, v140, v143, v145, (unint64_t)v141, (uint64_t)&v155, v44, &off_1006BA510, v43, v69, v136, (unint64_t)&unk_1006BC0E8, (uint64_t)sub_10003E088, (uint64_t)sub_10003E08C);
      if (*((void *)&v156 + 1)) {
        goto LABEL_23;
      }
      sub_100007A48((uint64_t)&v155, &qword_10070A2E8);
    }
    int v70 = v143;
    uint64_t v71 = v139;
    sub_1000356F8(v139, v140, v143, v145, (uint64_t)v134, (uint64_t)&v155);
    uint64_t v72 = v125;
    if (!*((void *)&v156 + 1))
    {
      unint64_t v122 = a13 >> 16;
      sub_100007A48((uint64_t)&v155, &qword_10070A2E8);
      if (*(void *)(v71 + 16) == 15 && !*(void *)(v140 + 16))
      {
        uint64_t v80 = *(void *)(v138 + 16);
        uint64_t v73 = v133;
        sub_10003DF50(v44, v133, (uint64_t (*)(void))type metadata accessor for NewestMessages);
        if (!v80)
        {
          sub_10003DF50(v54 + *(int *)(v72 + 20) + (uint64_t)*(int *)(v127 + 52), (uint64_t)v132, (uint64_t (*)(void))type metadata accessor for PendingPersistenceUpdates);
          uint64_t v81 = v73;
          uint64_t v82 = (uint64_t)v131;
          sub_10003DF50(v81, (uint64_t)v131, (uint64_t (*)(void))type metadata accessor for NewestMessages);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v128 + 56))(v82, 0, 1, v129);
          uint64_t v83 = sub_10006BF1C(v122, v82);
          sub_100007A48(v82, &qword_10070A390);
          sub_10003B34C((uint64_t)v132, (uint64_t (*)(void))type metadata accessor for PendingPersistenceUpdates);
          sub_10003B34C(v133, (uint64_t (*)(void))type metadata accessor for NewestMessages);
          if ((v83 & 1) == 0
            && !*(void *)(*(void *)(v54 + *(int *)(v72 + 20) + *(int *)(v127 + 56)) + 16)
            && !*(void *)(*(void *)(v43 + 152) + 16))
          {
            sub_10003B34C(v44, (uint64_t (*)(void))type metadata accessor for NewestMessages);
            sub_10003B34C((uint64_t)v32, type metadata accessor for MessageBatches);
            double result = 0.0;
            uint64_t v84 = (uint64_t)v144;
            *(_OWORD *)uint64_t v144 = 0u;
            *(_OWORD *)(v84 + 16) = 0u;
            *(void *)(v84 + 32) = 0;
            return result;
          }
LABEL_21:
          sub_100007780(v43);
          uint64_t v74 = v142;
          swift_retain();
          uint64_t v75 = v140;
          uint64_t v76 = v138;
          uint64_t v77 = v145;
          sub_100033F54(v139, v140, v138, v70, v145, v43, v74, (uint64_t *)&v155);
          if (*((void *)&v156 + 1)) {
            goto LABEL_23;
          }
          sub_100007A48((uint64_t)&v155, &qword_10070A2E8);
          sub_100035D24(v74, v139, v75, v76, (uint64_t)v32, v70, v77, (uint64_t)v134, (uint64_t)&v155, (int)v141, SBYTE4(v141), SBYTE5(v141), SBYTE6(v141), SHIBYTE(v141));
          if (*((void *)&v156 + 1)) {
            goto LABEL_23;
          }
          LODWORD(v133) = BYTE3(a13) & 1;
          uint64_t v129 = (a13 >> 40) & 1;
          uint64_t v130 = HIDWORD(a13) & 1;
          uint64_t v85 = sub_100007A48((uint64_t)&v155, &qword_10070A2E8);
          v131 = &v120;
          __chkstk_darwin(v85);
          uint64_t v128 = v43;
          uint64_t v115 = v43;
          uint64_t v116 = (uint64_t)v32;
          uint64_t v86 = v77;
          int v87 = v70;
          uint64_t v132 = v32;
          uint64_t v117 = v74;
          int v121 = a13 & 1;
          LOWORD(v118) = a13 & 0xFF01;
          unint64_t v120 = a13 >> 8;
          char v88 = v122;
          BYTE2(v118) = v122;
          BYTE3(v118) = v133;
          char v89 = v129;
          char v90 = v130;
          BYTE4(v118) = v130;
          BYTE5(v118) = v129;
          uint64_t v125 = HIWORD(a13) & 1;
          HIWORD(v118) = HIWORD(a13) & 0x101;
          uint64_t v127 = HIBYTE(a13) & 1;
          Swift::Int v119 = v134;
          sub_100033B70(v139, v140, v138, v87, v86, (void (*)(uint64_t))sub_10003BD20, (uint64_t)&v114, (uint64_t)&v155);
          if (*((void *)&v156 + 1))
          {
            sub_10003B34C(v137, (uint64_t (*)(void))type metadata accessor for NewestMessages);
            uint64_t v78 = (uint64_t)v132;
            goto LABEL_24;
          }
          uint64_t v91 = sub_100007A48((uint64_t)&v155, &qword_10070A2E8);
          __chkstk_darwin(v91);
          uint64_t v92 = (uint64_t)v132;
          uint64_t v115 = v128;
          uint64_t v116 = (uint64_t)v132;
          uint64_t v117 = v74;
          Swift::Int v118 = v134;
          LOBYTE(v119) = v121;
          BYTE1(v119) = v120;
          BYTE2(v119) = v88;
          BYTE3(v119) = v133;
          BYTE4(v119) = v90;
          BYTE5(v119) = v89;
          BYTE6(v119) = v125;
          HIBYTE(v119) = v127;
          sub_10003378C(v139, v140, v138, v87, v86, (void (*)(uint64_t))sub_10003BDA8, (uint64_t)&v114, (uint64_t)&v152);
          if (v153)
          {
            sub_10003B34C(v137, (uint64_t (*)(void))type metadata accessor for NewestMessages);
            sub_10003B34C(v92, type metadata accessor for MessageBatches);
            sub_100021BFC(&v152, (uint64_t)v154);
            uint64_t v79 = (long long *)v154;
            goto LABEL_25;
          }
          uint64_t v93 = v86;
          sub_100007A48((uint64_t)&v152, &qword_10070A2E8);
          uint64_t v94 = v128;
          sub_100007780(v128);
          uint64_t v95 = v140;
          uint64_t v96 = v138;
          sub_1000333E4(v139, v140, v138, v87, v94, (uint64_t)&v149);
          uint64_t v97 = (uint64_t)v144;
          uint64_t v98 = v137;
          if (v150)
          {
            sub_10003B34C(v137, (uint64_t (*)(void))type metadata accessor for NewestMessages);
            uint64_t v99 = (uint64_t)v132;
LABEL_41:
            sub_10003B34C(v99, type metadata accessor for MessageBatches);
            sub_100021BFC(&v149, (uint64_t)v151);
            sub_100021BFC(v151, v97);
            return result;
          }
          sub_100007A48((uint64_t)&v149, &qword_10070A2E8);
          if (!*(void *)(v126 + 16) && !*(void *)(*(void *)(v128 + 152) + 16))
          {
            sub_100035560(0, &off_1006BA538, v139, v95, v96, v143, v86, v128, (uint64_t)&v149, v142, (uint64_t)v141, v135, v136, v98);
            if (v150) {
              goto LABEL_47;
            }
            sub_100007A48((uint64_t)&v149, &qword_10070A2E8);
            char v111 = v123(0);
            uint64_t v97 = (uint64_t)v144;
            uint64_t v93 = v145;
            uint64_t v98 = v137;
            uint64_t v96 = v138;
            uint64_t v95 = v140;
            if ((v111 & 1) == 0)
            {
              sub_100035560(1, &off_1006BA560, v139, v140, v138, v143, v145, v128, (uint64_t)&v149, v142, (uint64_t)v141, v135, v136, v137);
              if (v150) {
                goto LABEL_47;
              }
              sub_100007A48((uint64_t)&v149, &qword_10070A2E8);
              uint64_t v97 = (uint64_t)v144;
              uint64_t v93 = v145;
              uint64_t v98 = v137;
              uint64_t v96 = v138;
              uint64_t v95 = v140;
            }
          }
          Swift::Int v119 = v141;
          long long v100 = v143;
          uint64_t v101 = v139;
          uint64_t v102 = v95;
          uint64_t v103 = v96;
          uint64_t v104 = (uint64_t)v132;
          long long v105 = v134;
          uint64_t v106 = v95;
          uint64_t v107 = v128;
          sub_100036504(v142, v139, v102, v103, (uint64_t)v132, (uint64_t (*)(long long *))v143, v93, (uint64_t)v134, (uint64_t)&v149);
          if (v150)
          {
            sub_10003B34C(v98, (uint64_t (*)(void))type metadata accessor for NewestMessages);
            uint64_t v99 = v104;
            goto LABEL_41;
          }
          sub_100007A48((uint64_t)&v149, &qword_10070A2E8);
          sub_100007780(v107);
          sub_100032F04(v101, v106, v138, v100, v93, v107, (uint64_t)v105, (uint64_t)&v149);
          if (!v150)
          {
            uint64_t v108 = sub_100007A48((uint64_t)&v149, &qword_10070A2E8);
            __chkstk_darwin(v108);
            uint64_t v117 = v128;
            Swift::Int v118 = v132;
            Swift::Int v119 = v134;
            sub_100032C24(v139, v140, v138, v143, (void (*)(void *__return_ptr, uint64_t))sub_10003BE4C, (uint64_t)&v149);
            if (!v150)
            {
              sub_100007A48((uint64_t)&v149, &qword_10070A2E8);
              uint64_t v109 = v128;
              sub_100007780(v128);
              uint64_t v110 = v142;
              swift_retain();
              sub_1000326FC(v139, v140, v138, v143, v145, v109, (uint64_t)v134, v110, (uint64_t *)&v146);
              if (v147)
              {
                sub_10003B34C(v137, (uint64_t (*)(void))type metadata accessor for NewestMessages);
                sub_10003B34C((uint64_t)v132, type metadata accessor for MessageBatches);
              }
              else
              {
                sub_100007A48((uint64_t)&v146, &qword_10070A2E8);
                uint64_t v112 = v128;
                sub_100007780(v128);
                sub_10003239C(v139, v140, v138, v143, v112, v134, (uint64_t)&v146);
                sub_10003B34C(v137, (uint64_t (*)(void))type metadata accessor for NewestMessages);
                sub_10003B34C((uint64_t)v132, type metadata accessor for MessageBatches);
                if (!v147)
                {
                  sub_100007A48((uint64_t)&v146, &qword_10070A2E8);
                  long long v113 = v144;
                  v144[4] = 0;
                  double result = 0.0;
                  *(_OWORD *)long long v113 = 0u;
                  *((_OWORD *)v113 + 1) = 0u;
                  return result;
                }
              }
              sub_100021BFC(&v146, (uint64_t)v148);
              uint64_t v79 = (long long *)v148;
LABEL_25:
              sub_100021BFC(v79, (uint64_t)v144);
              return result;
            }
          }
LABEL_47:
          sub_10003B34C(v137, (uint64_t (*)(void))type metadata accessor for NewestMessages);
          sub_10003B34C((uint64_t)v132, type metadata accessor for MessageBatches);
          sub_100021BFC(&v149, (uint64_t)v151);
          uint64_t v79 = v151;
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v73 = v133;
        sub_10003DF50(v44, v133, (uint64_t (*)(void))type metadata accessor for NewestMessages);
      }
      sub_10003B34C(v73, (uint64_t (*)(void))type metadata accessor for NewestMessages);
      goto LABEL_21;
    }
LABEL_23:
    sub_10003B34C(v44, (uint64_t (*)(void))type metadata accessor for NewestMessages);
    uint64_t v78 = (uint64_t)v32;
LABEL_24:
    sub_10003B34C(v78, type metadata accessor for MessageBatches);
    sub_100021BFC(&v155, (uint64_t)&v164);
    uint64_t v79 = &v164;
    goto LABEL_25;
  }
  uint64_t v38 = (uint64_t)v29;
LABEL_5:
  sub_10001FDF0(v38, (uint64_t)v144, &qword_10070A2E8);
  return result;
}

uint64_t sub_10002F07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t *)@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v16 = v15;
  uint64_t v58 = a8;
  uint64_t v59 = a6;
  uint64_t v51 = a7;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v57 = (uint64_t (*)(uint64_t *))_s29DetermineNewestMessagesResultOMa(0);
  __chkstk_darwin(v57);
  uint64_t v21 = (uint64_t *)((char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for NewestMessages();
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v23) = *(_DWORD *)(v15 + 172);
  uint64_t v25 = *(void *)v15;
  uint64_t v26 = *(void *)(v15 + 8);
  uint64_t v27 = *(void *)(v15 + 16);
  int v28 = *(_DWORD *)(v16 + 24);
  *(void *)&long long v79 = v25;
  *((void *)&v79 + 1) = v26;
  __int16 v80 = v23;
  uint64_t v81 = v27;
  int v82 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v30 = sub_10002D0DC(v29);
  uint64_t v31 = a1;
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_10009A848((uint64_t)v30);
  swift_bridgeObjectRelease();
  uint64_t v33 = a1
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  uint64_t v34 = v33 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
  uint64_t v35 = *(void *)(v34 + *(int *)(type metadata accessor for MailboxSyncState() + 56));
  swift_bridgeObjectRetain();
  sub_100176308(&v79, v32, v35, (uint64_t)v60);
  uint64_t v56 = v24;
  if (v60[0])
  {
    uint64_t v50 = a1;
    uint64_t v55 = (uint64_t *)a9;
    sub_10003B1D4((uint64_t)v60, (uint64_t)&v61);
    *((void *)&v68 + 1) = _swiftEmptyArrayStorage;
    uint64_t v69 = _swiftEmptyArrayStorage;
    sub_10003B230((uint64_t)v60);
    long long v76 = v67;
    long long v77 = v68;
    uint64_t v78 = v69;
    long long v72 = v63;
    long long v73 = v64;
    long long v74 = v65;
    long long v75 = v66;
    long long v70 = v61;
    long long v71 = v62;
    uint64_t v36 = sub_10000566C(&qword_10070A2F0);
    *((void *)&v62 + 1) = v36;
    uint64_t v37 = sub_10003C89C(&qword_10070A2F8, &qword_10070A2F0);
    *(void *)&long long v63 = v37;
    *(void *)&long long v61 = swift_allocObject();
    sub_1000079E4((uint64_t)&v70, v61 + 16, &qword_10070A2F0);
    char v38 = a5((uint64_t *)&v61);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v61);
    if (v38)
    {
      uint64_t v39 = v55;
      v55[3] = v36;
      v39[4] = v37;
      uint64_t result = swift_allocObject();
      *uint64_t v39 = result;
      long long v41 = v77;
      *(_OWORD *)(result + 112) = v76;
      *(_OWORD *)(result + 128) = v41;
      *(void *)(result + 144) = v78;
      long long v42 = v73;
      *(_OWORD *)(result + 48) = v72;
      *(_OWORD *)(result + 64) = v42;
      long long v43 = v75;
      *(_OWORD *)(result + 80) = v74;
      *(_OWORD *)(result + 96) = v43;
      long long v44 = v71;
      *(_OWORD *)(result + 16) = v70;
      *(_OWORD *)(result + 32) = v44;
      return result;
    }
    sub_100007A48((uint64_t)&v70, &qword_10070A2F0);
    a9 = (uint64_t)v55;
    uint64_t v24 = v56;
    uint64_t v31 = v50;
  }
  else
  {
    sub_100007A48((uint64_t)v60, &qword_10070A2E0);
  }
  uint64_t v45 = a13 & 0x101010101FFFF01;
  sub_1000301E4(v31, a5, v59, v21);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v47 = v58;
  if (EnumCaseMultiPayload == 1) {
    return sub_10001FDF0((uint64_t)v21, a9, &qword_10070A2E8);
  }
  sub_10003DFB8((uint64_t)v21, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for NewestMessages);
  sub_100034498(0, v31, v52, v53, a5, v59, v45, (uint64_t)&v61, (uint64_t)v24, &off_1006BA588, v16, v51, v47, (unint64_t)&unk_1006BBF80, (uint64_t)sub_10003BBE0, (uint64_t)sub_10003BBE8);
  if (*((void *)&v62 + 1))
  {
    sub_10003B34C((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for NewestMessages);
    sub_100021BFC(&v61, (uint64_t)&v70);
    return sub_100021BFC(&v70, a9);
  }
  else
  {
    uint64_t v57 = a5;
    uint64_t v50 = v31;
    uint64_t v55 = (uint64_t *)a9;
    uint64_t v49 = a10;
    uint64_t v48 = sub_100007A48((uint64_t)&v61, &qword_10070A2E8);
    __chkstk_darwin(v48);
    sub_10002F5B8(v50, v52, v53, v54, v57, v59, (uint64_t)v55, v49, a11, a12, v45, a14, a15 & 1);
    return sub_10003B34C((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for NewestMessages);
  }
}

double sub_10002F5B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t *)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v54 = a7;
  uint64_t v52 = a4;
  uint64_t v53 = a6;
  uint64_t v51 = a3;
  uint64_t v48 = _s29DetermineMessageBatchesResultOMa(0);
  __chkstk_darwin(v48);
  uint64_t v49 = &v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v45 = &v40[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = _s19UserInitiatedSearchV5StateOMa(0);
  __chkstk_darwin(v50);
  uint64_t v20 = &v40[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = _s19UserInitiatedSearchVMa(0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = &v40[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = a2;
  uint64_t v47 = a1;
  sub_1000356F8(a2, v51, a5, v53, a10, (uint64_t)&v56);
  if (v57)
  {
    sub_100021BFC(&v56, (uint64_t)v58);
    sub_100021BFC(v58, v54);
  }
  else
  {
    uint64_t v42 = a11 & 0x101010101FFFF01;
    uint64_t v44 = a10;
    long long v43 = a5;
    sub_100007A48((uint64_t)&v56, &qword_10070A2E8);
    uint64_t v26 = v54;
    uint64_t v27 = *(void *)(v55 + 152);
    v59[0] = v27;
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      int v41 = a13 & 1;
      uint64_t v29 = v27 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      uint64_t v30 = *(void *)(v22 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_10003DF50(v29, (uint64_t)v24, _s19UserInitiatedSearchVMa);
        sub_10003DF50((uint64_t)&v24[*(int *)(v21 + 20)], (uint64_t)v20, _s19UserInitiatedSearchV5StateOMa);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        sub_10003B34C((uint64_t)v20, _s19UserInitiatedSearchV5StateOMa);
        sub_10003B34C((uint64_t)v24, _s19UserInitiatedSearchVMa);
        if (EnumCaseMultiPayload == 1) {
          break;
        }
        v29 += v30;
        if (!--v28)
        {
          sub_10001D550((uint64_t)v59);
          uint64_t v26 = v54;
          goto LABEL_8;
        }
      }
      sub_10001D550((uint64_t)v59);
      uint64_t v32 = v49;
      uint64_t v33 = v47;
      uint64_t v34 = v43;
      uint64_t v35 = v53;
      uint64_t v36 = v44;
      sub_10002FD18(v47, v43, v53, v44, a12, v41, (uint64_t)v49);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10001FDF0((uint64_t)v32, v54, &qword_10070A2E8);
      }
      else
      {
        uint64_t v37 = (uint64_t)v32;
        char v38 = v45;
        sub_10003DFB8(v37, (uint64_t)v45, type metadata accessor for MessageBatches);
        sub_100035D24(v33, v46, v51, v52, (uint64_t)v38, v34, v35, v36, (uint64_t)&v56, v42, SBYTE4(v42), SBYTE5(v42), SBYTE6(v42), SHIBYTE(v42));
        sub_10003B34C((uint64_t)v38, type metadata accessor for MessageBatches);
        uint64_t v39 = v54;
        if (v57)
        {
          sub_100021BFC(&v56, (uint64_t)v58);
          sub_100021BFC(v58, v39);
        }
        else
        {
          sub_100007A48((uint64_t)&v56, &qword_10070A2E8);
          *(void *)(v39 + 32) = 0;
          double result = 0.0;
          *(_OWORD *)uint64_t v39 = 0u;
          *(_OWORD *)(v39 + 16) = 0u;
        }
      }
    }
    else
    {
LABEL_8:
      *(void *)(v26 + 32) = 0;
      double result = 0.0;
      *(_OWORD *)uint64_t v26 = 0u;
      *(_OWORD *)(v26 + 16) = 0u;
    }
  }
  return result;
}

uint64_t sub_10002FA34@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) && (unint64_t v10 = sub_100024264(*(void *)(a2 + 16), *(_DWORD *)(a2 + 24)), (v11 & 1) != 0))
  {
    sub_1000079E4(*(void *)(a1 + 56) + *(void *)(v7 + 72) * v10, (uint64_t)v9, &qword_100709E38);
    return sub_10001FDF0((uint64_t)v9, a3, &qword_100709E38);
  }
  else
  {
    sub_10001FC6C();
    return sub_1005E3680();
  }
}

uint64_t sub_10002FB68@<X0>(uint64_t a1@<X8>)
{
  return sub_10002FA34(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_10002FB74(char a1)
{
  return sub_10002D664(a1 & 1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10002FB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  LOBYTE(v15) = a14;
  return sub_10002FC94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002F5B8);
}

uint64_t sub_10002FBD8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_10002FC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  LOBYTE(v15) = a14;
  return sub_10002FC94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10002F07C);
}

uint64_t sub_10002FC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a15(a1, a2, a3, a4, a5, a6);
}

uint64_t _s29DetermineNewestMessagesResultOMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070A5F8);
}

uint64_t sub_10002FD18@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v51 = a6;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v58 = a7;
  uint64_t v9 = type metadata accessor for DetermineMessageBatches(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v54 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v55 = sub_10000566C(&qword_10070A330);
  __chkstk_darwin(v55);
  uint64_t v12 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_10000566C(&qword_10070A338);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for MailboxSyncState();
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = &v50[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = type metadata accessor for MessageBatches(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = &v50[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = a1
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  uint64_t v25 = _s13SelectedStateV7WrappedVMa(0);
  sub_10003DF50(v24 + *(int *)(v25 + 20), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  sub_1000079E4((uint64_t)&v19[*(int *)(v17 + 68)], (uint64_t)v15, &qword_10070A338);
  sub_10003B34C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20) == 1)
  {
    v51 &= 1u;
    sub_100007A48((uint64_t)v15, &qword_10070A338);
    __int16 v26 = *(_DWORD *)(v7 + 172);
    uint64_t v27 = *(void *)(v7 + 8);
    uint64_t v28 = *(void *)(v7 + 16);
    int v29 = *(_DWORD *)(v7 + 24);
    char v30 = *(unsigned char *)(v7 + 48);
    v60[0] = *(void *)v7;
    v60[1] = v27;
    __int16 v61 = v26;
    uint64_t v62 = v28;
    int v63 = v29;
    uint64_t v31 = *(void *)(v52 + 16);
    int v32 = *(unsigned __int8 *)(v52 + 24);
    uint64_t v33 = v24 + *(int *)(v25 + 20);
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(unsigned int *)(v33 + 8);
    unsigned __int8 v36 = *(unsigned char *)(v33 + 12);
    BOOL v37 = (v30 & 1) == 0;
    __int16 v38 = *(unsigned __int8 *)(v52 + 4);
    int v39 = *(unsigned __int8 *)(v52 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v59[0]) = v36;
    if (v39) {
      __int16 v40 = 256;
    }
    else {
      __int16 v40 = 0;
    }
    int v41 = v54;
    sub_1001146F8((uint64_t)v60, v53, v51, v31, v32, v34, v35 | ((unint64_t)v36 << 32), v37, (uint64_t)v54, v40 | v38, (unsigned __int16)(v40 | v38) >> 8);
    sub_10003DF50((uint64_t)v41, (uint64_t)v12, type metadata accessor for DetermineMessageBatches);
    uint64_t v42 = v55;
    long long v43 = &v12[*(int *)(v55 + 36)];
    *long long v43 = _swiftEmptyArrayStorage;
    v43[1] = _swiftEmptyArrayStorage;
    sub_10003B34C((uint64_t)v41, type metadata accessor for DetermineMessageBatches);
    v59[3] = v42;
    uint64_t v44 = sub_10003C89C(&qword_10070A340, &qword_10070A330);
    v59[4] = v44;
    uint64_t v45 = sub_100021E04(v59);
    sub_1000079E4((uint64_t)v12, (uint64_t)v45, &qword_10070A330);
    char v46 = v57(v59);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v59);
    uint64_t v47 = v58;
    if (v46)
    {
      *(void *)(v58 + 24) = v42;
      *(void *)(v47 + 32) = v44;
      uint64_t v48 = sub_100021E04((uint64_t *)v47);
      sub_10001FDF0((uint64_t)v12, (uint64_t)v48, &qword_10070A330);
      _s29DetermineMessageBatchesResultOMa(0);
    }
    else
    {
      sub_100007A48((uint64_t)v12, &qword_10070A330);
      _s29DetermineMessageBatchesResultOMa(0);
      *(_OWORD *)uint64_t v47 = 0u;
      *(_OWORD *)(v47 + 16) = 0u;
      *(void *)(v47 + 32) = 0;
    }
  }
  else
  {
    sub_10003DFB8((uint64_t)v15, (uint64_t)v23, type metadata accessor for MessageBatches);
    sub_10003DFB8((uint64_t)v23, v58, type metadata accessor for MessageBatches);
    _s29DetermineMessageBatchesResultOMa(0);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000301E4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t *)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  long long v71 = a4;
  uint64_t v69 = a3;
  long long v70 = a2;
  uint64_t v73 = type metadata accessor for DetermineNewestMessages();
  uint64_t v5 = __chkstk_darwin(v73);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v66 - v8;
  uint64_t v68 = sub_10000566C(&qword_10070A388);
  uint64_t v10 = __chkstk_darwin(v68);
  uint64_t v67 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v66 = (uint64_t)&v66 - v12;
  uint64_t v13 = sub_10000566C(&qword_10070A390);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MailboxSyncState();
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for NewestMessages();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  __int16 v26 = (char *)&v66 - v25;
  uint64_t v27 = a1
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  uint64_t v28 = _s13SelectedStateV7WrappedVMa(0);
  sub_10003DF50(v27 + *(int *)(v28 + 20), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  sub_1000079E4((uint64_t)&v19[*(int *)(v17 + 72)], (uint64_t)v15, &qword_10070A390);
  sub_10003B34C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20) != 1)
  {
    uint64_t v44 = (uint64_t)v72;
    uint64_t v45 = v73;
    sub_10003DFB8((uint64_t)v15, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for NewestMessages);
    uint64_t v46 = *(void *)&v26[*(int *)(v20 + 24)];
    sub_10003DF50((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for NewestMessages);
    if (v46 < 131)
    {
      uint64_t v49 = *(void *)&v24[*(int *)(v20 + 20)];
      sub_10003B34C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for NewestMessages);
      uint64_t v47 = v71;
      if (v49 < 131)
      {
LABEL_12:
        sub_10003DFB8((uint64_t)v26, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for NewestMessages);
        _s29DetermineNewestMessagesResultOMa(0);
        return swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      sub_10003B34C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for NewestMessages);
      uint64_t v47 = v71;
    }
    long long v72 = v26;
    int v50 = *(_DWORD *)(v44 + 172);
    uint64_t v51 = v44;
    uint64_t v52 = *(void *)v44;
    uint64_t v53 = *(void *)(v44 + 8);
    uint64_t v54 = *(void *)(v44 + 16);
    int v55 = *(_DWORD *)(v51 + 24);
    *(void *)uint64_t v9 = &_swiftEmptySetSingleton;
    v9[8] = 0;
    uint64_t v56 = &v9[*(int *)(v45 + 32)];
    uint64_t v57 = sub_10000566C(&qword_100709E38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
    *((void *)v9 + 2) = v45;
    uint64_t v74 = v54;
    int v75 = v55;
    sub_10003BC88();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1005E2BF0();
    *((void *)v9 + 8) = v52;
    *((void *)v9 + 9) = v53;
    *((_WORD *)v9 + 40) = v50;
    *((void *)v9 + 11) = v54;
    *((_DWORD *)v9 + 24) = v55;
    uint64_t v58 = v66;
    sub_10003DF50((uint64_t)v9, v66, (uint64_t (*)(void))type metadata accessor for DetermineNewestMessages);
    uint64_t v59 = v68;
    uint64_t v60 = (void *)(v58 + *(int *)(v68 + 36));
    *uint64_t v60 = _swiftEmptyArrayStorage;
    v60[1] = _swiftEmptyArrayStorage;
    sub_10003B34C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DetermineNewestMessages);
    uint64_t v76 = v59;
    uint64_t v61 = sub_10003C89C(&qword_10070A3A0, &qword_10070A388);
    uint64_t v77 = v61;
    uint64_t v62 = sub_100021E04(&v74);
    sub_1000079E4(v58, (uint64_t)v62, &qword_10070A388);
    char v63 = v70(&v74);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v74);
    if (v63)
    {
      v47[3] = v59;
      v47[4] = v61;
      long long v64 = sub_100021E04(v47);
      sub_10001FDF0(v58, (uint64_t)v64, &qword_10070A388);
      sub_10003B34C((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for NewestMessages);
      _s29DetermineNewestMessagesResultOMa(0);
      return swift_storeEnumTagMultiPayload();
    }
    sub_100007A48(v58, &qword_10070A388);
    __int16 v26 = v72;
    goto LABEL_12;
  }
  sub_100007A48((uint64_t)v15, &qword_10070A390);
  uint64_t v29 = v73;
  int v30 = *((_DWORD *)v72 + 43);
  uint64_t v31 = *(void *)v72;
  uint64_t v32 = *((void *)v72 + 1);
  uint64_t v33 = *((void *)v72 + 2);
  int v34 = *((_DWORD *)v72 + 6);
  *(void *)uint64_t v7 = &_swiftEmptySetSingleton;
  v7[8] = 0;
  uint64_t v35 = &v7[*(int *)(v29 + 32)];
  uint64_t v36 = sub_10000566C(&qword_100709E38);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
  *((void *)v7 + 2) = v29;
  uint64_t v74 = v33;
  int v75 = v34;
  sub_10003BC88();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *((void *)v7 + 8) = v31;
  *((void *)v7 + 9) = v32;
  *((_WORD *)v7 + 40) = v30;
  *((void *)v7 + 11) = v33;
  *((_DWORD *)v7 + 24) = v34;
  uint64_t v37 = v67;
  sub_10003DF50((uint64_t)v7, v67, (uint64_t (*)(void))type metadata accessor for DetermineNewestMessages);
  uint64_t v38 = v68;
  int v39 = (void *)(v37 + *(int *)(v68 + 36));
  *int v39 = _swiftEmptyArrayStorage;
  v39[1] = _swiftEmptyArrayStorage;
  sub_10003B34C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DetermineNewestMessages);
  uint64_t v76 = v38;
  uint64_t v40 = sub_10003C89C(&qword_10070A3A0, &qword_10070A388);
  uint64_t v77 = v40;
  int v41 = sub_100021E04(&v74);
  sub_1000079E4(v37, (uint64_t)v41, &qword_10070A388);
  LOBYTE(v35) = v70(&v74);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v74);
  if (v35)
  {
    uint64_t v42 = v71;
    v71[3] = v38;
    v42[4] = v40;
    long long v43 = sub_100021E04(v42);
    sub_10001FDF0(v37, (uint64_t)v43, &qword_10070A388);
    _s29DetermineNewestMessagesResultOMa(0);
  }
  else
  {
    sub_100007A48(v37, &qword_10070A388);
    _s29DetermineNewestMessagesResultOMa(0);
    uint64_t v48 = v71;
    *(_OWORD *)long long v71 = 0u;
    *((_OWORD *)v48 + 1) = 0u;
    v48[4] = 0;
  }
  return swift_storeEnumTagMultiPayload();
}

double sub_100030998@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t *)@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v42 = a7;
  long long v43 = a6;
  uint64_t v38 = a5;
  int v39 = a4;
  uint64_t v12 = sub_10000566C(&qword_10070A300);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10000566C(&qword_10070A308);
  uint64_t v15 = __chkstk_darwin(v41);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v38 - v19;
  __chkstk_darwin(v18);
  uint64_t v40 = (uint64_t)&v38 - v21;
  if (qword_100709D90 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v22 = swift_bridgeObjectRetain();
  char v23 = sub_10003B79C(v22, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    goto LABEL_6;
  }
  v43(v24);
  uint64_t SearchResultMessages = type metadata accessor for FetchSearchResultMessages(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(SearchResultMessages - 8) + 48))(v14, 1, SearchResultMessages) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_10070A300);
LABEL_6:
    *(void *)(a8 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
    return result;
  }
  sub_10003DF50((uint64_t)v14, (uint64_t)v20, type metadata accessor for FetchSearchResultMessages);
  uint64_t v27 = v41;
  uint64_t v28 = &v20[*(int *)(v41 + 36)];
  *(void *)uint64_t v28 = _swiftEmptyArrayStorage;
  *((void *)v28 + 1) = _swiftEmptyArrayStorage;
  sub_10003B34C((uint64_t)v14, type metadata accessor for FetchSearchResultMessages);
  uint64_t v29 = (uint64_t)v20;
  uint64_t v30 = v40;
  sub_10001FDF0(v29, v40, &qword_10070A308);
  uint64_t v31 = *(void *)(*(void *)v30 + 16);
  sub_1000079E4(v30, (uint64_t)v17, &qword_10070A308);
  if (v31)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = swift_bridgeObjectRetain();
    char v33 = sub_10003B444(v32, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007A48((uint64_t)v17, &qword_10070A308);
    if ((v33 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_100007A48((uint64_t)v17, &qword_10070A308);
  }
  v44[3] = v27;
  uint64_t v34 = sub_10003C89C(&qword_10070A310, &qword_10070A308);
  v44[4] = v34;
  uint64_t v35 = sub_100021E04(v44);
  sub_1000079E4(v30, (uint64_t)v35, &qword_10070A308);
  char v36 = v39(v44);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v44);
  if (v36)
  {
    *(void *)(a8 + 24) = v27;
    *(void *)(a8 + 32) = v34;
    uint64_t v37 = sub_100021E04((uint64_t *)a8);
    sub_10001FDF0(v30, (uint64_t)v37, &qword_10070A308);
    return result;
  }
LABEL_13:
  sub_100007A48(v30, &qword_10070A308);
  double result = 0.0;
  *(_OWORD *)a8 = 0u;
  *(_OWORD *)(a8 + 16) = 0u;
  *(void *)(a8 + 32) = 0;
  return result;
}

double sub_100030D7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void *)@<X3>, void (*a5)(void *__return_ptr, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  if (qword_100709DC8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v11 = swift_bridgeObjectRetain();
  char v12 = sub_10003B79C(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_14;
  }
  a5(v29, v13);
  if (!v29[0])
  {
    uint64_t v17 = (uint64_t *)&unk_10070A318;
    uint64_t v18 = (long long *)v29;
LABEL_13:
    sub_100007A48((uint64_t)v18, v17);
LABEL_14:
    *(void *)(a6 + 32) = 0;
    *(void *)&long long v26 = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return *(double *)&v26;
  }
  sub_10003BA44((uint64_t)v29, (uint64_t)v30);
  *(void *)&long long v31 = _swiftEmptyArrayStorage;
  *((void *)&v31 + 1) = _swiftEmptyArrayStorage;
  sub_10003BAA0((uint64_t)v29);
  long long v38 = v30[6];
  long long v39 = v30[7];
  long long v40 = v31;
  long long v34 = v30[2];
  long long v35 = v30[3];
  long long v36 = v30[4];
  long long v37 = v30[5];
  long long v32 = v30[0];
  long long v33 = v30[1];
  uint64_t v14 = *(void *)(*(void *)&v30[0] + 16);
  sub_1000079E4((uint64_t)&v32, (uint64_t)v30, &qword_10070A320);
  if (v14)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    char v16 = sub_10003B444(v15, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007A48((uint64_t)v30, &qword_10070A320);
    if ((v16 & 1) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_100007A48((uint64_t)v30, &qword_10070A320);
  }
  uint64_t v19 = sub_10000566C(&qword_10070A320);
  _OWORD v29[3] = v19;
  uint64_t v20 = sub_10003C89C(&qword_10070A328, &qword_10070A320);
  v29[4] = v20;
  v29[0] = swift_allocObject();
  sub_1000079E4((uint64_t)&v32, v29[0] + 16, &qword_10070A320);
  char v21 = a4(v29);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v29);
  if ((v21 & 1) == 0)
  {
LABEL_12:
    uint64_t v17 = &qword_10070A320;
    uint64_t v18 = &v32;
    goto LABEL_13;
  }
  *(void *)(a6 + 24) = v19;
  *(void *)(a6 + 32) = v20;
  Swift::Int v22 = (_OWORD *)swift_allocObject();
  *(void *)a6 = v22;
  long long v23 = v39;
  v22[7] = v38;
  v22[8] = v23;
  v22[9] = v40;
  long long v24 = v35;
  v22[3] = v34;
  _OWORD v22[4] = v24;
  long long v25 = v37;
  v22[5] = v36;
  v22[6] = v25;
  long long v26 = v33;
  v22[1] = v32;
  v22[2] = v26;
  return *(double *)&v26;
}

uint64_t sub_10003105C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  int v58 = a7;
  uint64_t v63 = a6;
  uint64_t v56 = a5;
  uint64_t v57 = a4;
  uint64_t v62 = a9;
  uint64_t v14 = type metadata accessor for PendingPersistenceUpdates();
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t PendingDownload = type metadata accessor for FindPendingDownload();
  __chkstk_darwin(PendingDownload - 8);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10000566C(&qword_10070A3A8);
  uint64_t v20 = __chkstk_darwin(v61);
  uint64_t v59 = (uint64_t)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  long long v24 = (char *)&v53 - v23;
  __chkstk_darwin(v22);
  uint64_t v60 = (uint64_t)&v53 - v25;
  if (qword_100709DA0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v26 = swift_bridgeObjectRetain();
  char v27 = sub_10003B79C(v26, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v55 = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
    uint64_t v54 = a10;
    v58 &= 1u;
    __int16 v28 = *(_DWORD *)(v63 + 172);
    uint64_t v29 = *(void *)(v63 + 8);
    uint64_t v30 = *(void *)(v63 + 16);
    int v31 = *(_DWORD *)(v63 + 24);
    v65[0] = *(void *)v63;
    v65[1] = v29;
    __int16 v66 = v28;
    uint64_t v67 = v30;
    int v68 = v31;
    uint64_t v53 = a8;
    uint64_t v32 = a8
        + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    uint64_t v33 = *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
    uint64_t v34 = type metadata accessor for MailboxSyncState();
    sub_10003DF50(v32 + v33 + *(int *)(v34 + 52), (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PendingPersistenceUpdates);
    LODWORD(v33) = v54 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100171008((uint64_t)v65, v58, (uint64_t)v16, v33, (uint64_t)v19);
    sub_10003DF50((uint64_t)v19, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FindPendingDownload);
    uint64_t v35 = v61;
    long long v36 = &v24[*(int *)(v61 + 36)];
    *(void *)long long v36 = _swiftEmptyArrayStorage;
    *((void *)v36 + 1) = _swiftEmptyArrayStorage;
    sub_10003B34C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FindPendingDownload);
    uint64_t v37 = (uint64_t)v24;
    uint64_t v38 = v60;
    sub_10001FDF0(v37, v60, &qword_10070A3A8);
    uint64_t v39 = *(void *)(*(void *)(v38 + 48) + 16);
    uint64_t v40 = v59;
    sub_1000079E4(v38, v59, &qword_10070A3A8);
    if (v39)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v41 = v55;
      swift_bridgeObjectRetain();
      uint64_t v42 = swift_bridgeObjectRetain();
      char v43 = sub_10003B444(v42, a1, a2, v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48(v40, &qword_10070A3A8);
      if ((v43 & 1) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      sub_100007A48(v40, &qword_10070A3A8);
    }
    v64[3] = v35;
    uint64_t v46 = sub_10003C89C(&qword_10070A3B0, &qword_10070A3A8);
    v64[4] = v46;
    uint64_t v47 = sub_100021E04(v64);
    sub_1000079E4(v38, (uint64_t)v47, &qword_10070A3A8);
    char v48 = v57(v64);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v64);
    if (v48)
    {
      uint64_t v49 = v62;
      v62[3] = v35;
      v49[4] = v46;
      int v50 = sub_100021E04(v49);
      sub_10001FDF0(v38, (uint64_t)v50, &qword_10070A3A8);
LABEL_12:
      sub_100007820(v63);
      return swift_release();
    }
LABEL_11:
    sub_100007A48(v38, &qword_10070A3A8);
    uint64_t v51 = v62;
    *(_OWORD *)uint64_t v62 = 0u;
    *((_OWORD *)v51 + 1) = 0u;
    v51[4] = 0;
    goto LABEL_12;
  }
  uint64_t v45 = v62;
  uint64_t v44 = v63;
  v62[4] = 0;
  *(_OWORD *)uint64_t v45 = 0u;
  *((_OWORD *)v45 + 1) = 0u;
  sub_100007820(v44);
  return swift_release();
}

double sub_100031544@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(long long *)@<X3>, void (*a5)(void *__return_ptr, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  if (qword_100709D60 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v11 = swift_bridgeObjectRetain();
  char v12 = sub_10003B79C(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_11;
  }
  a5(v27, v13);
  if (!v27[0])
  {
    sub_100007A48((uint64_t)v27, &qword_10070A428);
LABEL_11:
    *(void *)(a6 + 32) = 0;
    *(void *)&long long v24 = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return *(double *)&v24;
  }
  sub_10003C314((uint64_t)v27, (uint64_t)&v28);
  *((void *)&v35 + 1) = _swiftEmptyArrayStorage;
  long long v36 = _swiftEmptyArrayStorage;
  sub_10003C370((uint64_t)v27);
  long long v43 = v34;
  long long v44 = v35;
  long long v39 = v30;
  long long v40 = v31;
  uint64_t v45 = v36;
  long long v41 = v32;
  long long v42 = v33;
  long long v37 = v28;
  long long v38 = v29;
  uint64_t v14 = *(void *)(sub_10001DF10((uint64_t)&off_1006BA2B0) + 16);
  swift_bridgeObjectRelease();
  if (v14)
  {
    Swift::Int v15 = sub_10001DF10((uint64_t)&off_1006BA2D8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v16 = sub_10003B444(v15, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      goto LABEL_9;
    }
  }
  uint64_t v17 = sub_10000566C(&qword_10070A430);
  *((void *)&v29 + 1) = v17;
  uint64_t v18 = sub_10003C89C(&qword_10070A438, &qword_10070A430);
  *(void *)&long long v30 = v18;
  *(void *)&long long v28 = swift_allocObject();
  sub_1000079E4((uint64_t)&v37, v28 + 16, &qword_10070A430);
  char v19 = a4(&v28);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v28);
  if (v19)
  {
    *(void *)(a6 + 24) = v17;
    *(void *)(a6 + 32) = v18;
    uint64_t v20 = swift_allocObject();
    *(void *)a6 = v20;
    long long v21 = v44;
    *(_OWORD *)(v20 + 112) = v43;
    *(_OWORD *)(v20 + 128) = v21;
    *(void *)(v20 + 144) = v45;
    long long v22 = v40;
    *(_OWORD *)(v20 + 48) = v39;
    *(_OWORD *)(v20 + 64) = v22;
    long long v23 = v42;
    *(_OWORD *)(v20 + 80) = v41;
    *(_OWORD *)(v20 + 96) = v23;
    long long v24 = v38;
    *(_OWORD *)(v20 + 16) = v37;
    *(_OWORD *)(v20 + 32) = v24;
  }
  else
  {
LABEL_9:
    sub_100007A48((uint64_t)&v37, &qword_10070A430);
    *(void *)&long long v24 = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    *(void *)(a6 + 32) = 0;
  }
  return *(double *)&v24;
}

double sub_100031818@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(long long *)@<X3>, void (*a5)(void *__return_ptr, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  if (qword_100709D68 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v11 = swift_bridgeObjectRetain();
  char v12 = sub_10003B79C(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_11;
  }
  a5(v27, v13);
  if (!v27[0])
  {
    sub_100007A48((uint64_t)v27, &qword_10070A410);
LABEL_11:
    *(void *)(a6 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return result;
  }
  sub_10003C258((uint64_t)v27, (uint64_t)&v28);
  *(void *)&long long v35 = _swiftEmptyArrayStorage;
  *((void *)&v35 + 1) = _swiftEmptyArrayStorage;
  sub_10003C204((uint64_t)v27);
  long long v40 = v32;
  long long v41 = v33;
  long long v42 = v34;
  long long v43 = v35;
  long long v36 = v28;
  long long v37 = v29;
  long long v38 = v30;
  long long v39 = v31;
  uint64_t v14 = *(void *)(sub_10001DF10((uint64_t)&off_1006BA238) + 16);
  swift_bridgeObjectRelease();
  if (v14)
  {
    Swift::Int v15 = sub_10001DF10((uint64_t)&off_1006BA260);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v16 = sub_10003B444(v15, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      goto LABEL_9;
    }
  }
  uint64_t v17 = sub_10000566C(&qword_10070A418);
  *((void *)&v29 + 1) = v17;
  uint64_t v18 = sub_10003C89C(&qword_10070A420, &qword_10070A418);
  *(void *)&long long v30 = v18;
  *(void *)&long long v28 = swift_allocObject();
  sub_1000079E4((uint64_t)&v36, v28 + 16, &qword_10070A418);
  char v19 = a4(&v28);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v28);
  if (v19)
  {
    *(void *)(a6 + 24) = v17;
    *(void *)(a6 + 32) = v18;
    uint64_t v20 = (_OWORD *)swift_allocObject();
    *(void *)a6 = v20;
    long long v21 = v41;
    v20[5] = v40;
    v20[6] = v21;
    long long v22 = v43;
    v20[7] = v42;
    v20[8] = v22;
    long long v23 = v37;
    v20[1] = v36;
    void v20[2] = v23;
    double result = *(double *)&v38;
    long long v25 = v39;
    v20[3] = v38;
    _OWORD v20[4] = v25;
  }
  else
  {
LABEL_9:
    sub_100007A48((uint64_t)&v36, &qword_10070A418);
    double result = 0.0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    *(void *)(a6 + 32) = 0;
  }
  return result;
}

double sub_100031AD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void *)@<X3>, void (*a5)(void *__return_ptr, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  if (qword_100709D50 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v11 = swift_bridgeObjectRetain();
  char v12 = sub_10003B79C(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_14;
  }
  a5(v30, v13);
  if (!v30[0])
  {
    uint64_t v17 = (uint64_t *)&unk_10070A460;
    uint64_t v18 = (long long *)v30;
LABEL_13:
    sub_100007A48((uint64_t)v18, v17);
LABEL_14:
    *(void *)(a6 + 32) = 0;
    *(void *)&long long v27 = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return *(double *)&v27;
  }
  sub_10003C5B4((uint64_t)v30, (uint64_t)v31);
  *((void *)&v39 + 1) = _swiftEmptyArrayStorage;
  long long v40 = _swiftEmptyArrayStorage;
  sub_10003C610((uint64_t)v30);
  long long v49 = v38;
  long long v50 = v39;
  uint64_t v51 = v40;
  long long v45 = v34;
  long long v46 = v35;
  long long v47 = v36;
  long long v48 = v37;
  long long v41 = v31[0];
  long long v42 = v31[1];
  long long v43 = v32;
  long long v44 = v33;
  uint64_t v14 = *(void *)(*((void *)&v32 + 1) + 16);
  sub_1000079E4((uint64_t)&v41, (uint64_t)v31, &qword_10070A468);
  if (v14)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    char v16 = sub_10003B444(v15, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007A48((uint64_t)v31, &qword_10070A468);
    if ((v16 & 1) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_100007A48((uint64_t)v31, &qword_10070A468);
  }
  uint64_t v19 = sub_10000566C(&qword_10070A468);
  v30[3] = v19;
  uint64_t v20 = sub_10003C89C(&qword_10070A470, &qword_10070A468);
  v30[4] = v20;
  v30[0] = swift_allocObject();
  sub_1000079E4((uint64_t)&v41, v30[0] + 16, &qword_10070A468);
  char v21 = a4(v30);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v30);
  if ((v21 & 1) == 0)
  {
LABEL_12:
    uint64_t v17 = &qword_10070A468;
    uint64_t v18 = &v41;
    goto LABEL_13;
  }
  *(void *)(a6 + 24) = v19;
  *(void *)(a6 + 32) = v20;
  uint64_t v22 = swift_allocObject();
  *(void *)a6 = v22;
  long long v23 = v50;
  *(_OWORD *)(v22 + 144) = v49;
  *(_OWORD *)(v22 + 160) = v23;
  *(void *)(v22 + 176) = v51;
  long long v24 = v46;
  *(_OWORD *)(v22 + 80) = v45;
  *(_OWORD *)(v22 + 96) = v24;
  long long v25 = v48;
  *(_OWORD *)(v22 + 112) = v47;
  *(_OWORD *)(v22 + 128) = v25;
  long long v26 = v42;
  *(_OWORD *)(v22 + 16) = v41;
  *(_OWORD *)(v22 + 32) = v26;
  long long v27 = v44;
  *(_OWORD *)(v22 + 48) = v43;
  *(_OWORD *)(v22 + 64) = v27;
  return *(double *)&v27;
}

double sub_100031DC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void *)@<X3>, void (*a5)(void *__return_ptr, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  if (qword_100709D58 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v11 = swift_bridgeObjectRetain();
  char v12 = sub_10003B79C(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_14;
  }
  a5(v30, v13);
  if (v30[0])
  {
    sub_10003C4E8((uint64_t)v30, (uint64_t)v31);
    *(void *)&long long v39 = _swiftEmptyArrayStorage;
    *((void *)&v39 + 1) = _swiftEmptyArrayStorage;
    sub_10003C138((uint64_t)v30);
    long long v46 = v36;
    long long v47 = v37;
    long long v48 = v38;
    long long v49 = v39;
    long long v42 = v32;
    long long v43 = v33;
    long long v44 = v34;
    long long v45 = v35;
    long long v40 = v31[0];
    long long v41 = v31[1];
    uint64_t v14 = *(void *)(*((void *)&v32 + 1) + 16);
    sub_1000079E4((uint64_t)&v40, (uint64_t)v31, &qword_10070A450);
    if (v14)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = swift_bridgeObjectRetain();
      char v16 = sub_10003B444(v15, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v31, &qword_10070A450);
      if ((v16 & 1) == 0)
      {
LABEL_12:
        uint64_t v17 = &qword_10070A450;
        uint64_t v18 = &v40;
        goto LABEL_13;
      }
    }
    else
    {
      sub_100007A48((uint64_t)v31, &qword_10070A450);
    }
    uint64_t v19 = sub_10000566C(&qword_10070A450);
    v30[3] = v19;
    uint64_t v20 = sub_10003C89C(&qword_10070A458, &qword_10070A450);
    v30[4] = v20;
    v30[0] = swift_allocObject();
    sub_1000079E4((uint64_t)&v40, v30[0] + 16, &qword_10070A450);
    char v21 = a4(v30);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v30);
    if (v21)
    {
      *(void *)(a6 + 24) = v19;
      *(void *)(a6 + 32) = v20;
      uint64_t v22 = (_OWORD *)swift_allocObject();
      *(void *)a6 = v22;
      long long v23 = v47;
      v22[7] = v46;
      v22[8] = v23;
      long long v24 = v49;
      v22[9] = v48;
      v22[10] = v24;
      long long v25 = v43;
      v22[3] = v42;
      _OWORD v22[4] = v25;
      long long v26 = v45;
      v22[5] = v44;
      v22[6] = v26;
      double result = *(double *)&v40;
      long long v28 = v41;
      v22[1] = v40;
      v22[2] = v28;
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v17 = (uint64_t *)&unk_10070A400;
  uint64_t v18 = (long long *)v30;
LABEL_13:
  sub_100007A48((uint64_t)v18, v17);
LABEL_14:
  *(void *)(a6 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return result;
}

double sub_1000320A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void *)@<X3>, void (*a5)(void *__return_ptr, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  if (qword_100709DD0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v11 = swift_bridgeObjectRetain();
  char v12 = sub_10003B79C(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_14;
  }
  a5(v29, v13);
  if (v29[0])
  {
    sub_10003C424((uint64_t)v29, (uint64_t)v30);
    *((void *)&v37 + 1) = _swiftEmptyArrayStorage;
    long long v38 = _swiftEmptyArrayStorage;
    sub_10003C198((uint64_t)v29);
    long long v45 = v35;
    long long v46 = v36;
    long long v47 = v37;
    long long v48 = v38;
    long long v41 = v31;
    long long v42 = v32;
    long long v43 = v33;
    long long v44 = v34;
    long long v39 = v30[0];
    long long v40 = v30[1];
    uint64_t v14 = *(void *)(*((void *)&v31 + 1) + 16);
    sub_1000079E4((uint64_t)&v39, (uint64_t)v30, &qword_10070A440);
    if (v14)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = swift_bridgeObjectRetain();
      char v16 = sub_10003B444(v15, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v30, &qword_10070A440);
      if ((v16 & 1) == 0)
      {
LABEL_12:
        uint64_t v17 = &qword_10070A440;
        uint64_t v18 = &v39;
        goto LABEL_13;
      }
    }
    else
    {
      sub_100007A48((uint64_t)v30, &qword_10070A440);
    }
    uint64_t v19 = sub_10000566C(&qword_10070A440);
    _OWORD v29[3] = v19;
    uint64_t v20 = sub_10003C89C(&qword_10070A448, &qword_10070A440);
    v29[4] = v20;
    v29[0] = swift_allocObject();
    sub_1000079E4((uint64_t)&v39, v29[0] + 16, &qword_10070A440);
    char v21 = a4(v29);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v29);
    if (v21)
    {
      *(void *)(a6 + 24) = v19;
      *(void *)(a6 + 32) = v20;
      uint64_t v22 = swift_allocObject();
      *(void *)a6 = v22;
      long long v23 = v46;
      *(_OWORD *)(v22 + 112) = v45;
      *(_OWORD *)(v22 + 128) = v23;
      *(_OWORD *)(v22 + 144) = v47;
      *(void *)(v22 + 160) = v48;
      long long v24 = v42;
      *(_OWORD *)(v22 + 48) = v41;
      *(_OWORD *)(v22 + 64) = v24;
      long long v25 = v44;
      *(_OWORD *)(v22 + 80) = v43;
      *(_OWORD *)(v22 + 96) = v25;
      double result = *(double *)&v39;
      long long v27 = v40;
      *(_OWORD *)(v22 + 16) = v39;
      *(_OWORD *)(v22 + 32) = v27;
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v17 = (uint64_t *)&unk_10070A408;
  uint64_t v18 = (long long *)v29;
LABEL_13:
  sub_100007A48((uint64_t)v18, v17);
LABEL_14:
  *(void *)(a6 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return result;
}

uint64_t sub_10003239C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void *)@<X3>, uint64_t a5@<X5>, char *a6@<X6>, uint64_t a7@<X8>)
{
  if (qword_100709DB8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v14 = swift_bridgeObjectRetain();
  char v15 = sub_10003B79C(v14, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    int v16 = *(_DWORD *)(a5 + 172);
    uint64_t v17 = *(void *)(a5 + 8);
    uint64_t v18 = *(void *)(a5 + 16);
    int v19 = *(_DWORD *)(a5 + 24);
    *(void *)&long long v57 = *(void *)a5;
    *((void *)&v57 + 1) = v17;
    __int16 v58 = v16;
    uint64_t v59 = v18;
    int v60 = v19;
    char v20 = *a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10018A450(&v57, v20, (uint64_t)v35);
    sub_10003BE58((uint64_t)v35, (uint64_t)v36);
    *(void *)&long long v43 = _swiftEmptyArrayStorage;
    *((void *)&v43 + 1) = _swiftEmptyArrayStorage;
    sub_10003BEB4((uint64_t)v35);
    long long v54 = v41;
    long long v55 = v42;
    long long v56 = v43;
    long long v50 = v37;
    long long v51 = v38;
    long long v52 = v39;
    long long v53 = v40;
    long long v46 = v36[2];
    long long v47 = v36[3];
    long long v48 = v36[4];
    long long v49 = v36[5];
    long long v44 = v36[0];
    long long v45 = v36[1];
    uint64_t v21 = *(void *)(v37 + 16);
    sub_1000079E4((uint64_t)&v44, (uint64_t)v36, &qword_10070A3B8);
    if (v21)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v22 = swift_bridgeObjectRetain();
      char v23 = sub_10003B444(v22, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v36, &qword_10070A3B8);
      if ((v23 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_100007A48((uint64_t)v36, &qword_10070A3B8);
    }
    uint64_t v25 = sub_10000566C(&qword_10070A3B8);
    v35[3] = v25;
    uint64_t v26 = sub_10003C89C(&qword_10070A3C0, &qword_10070A3B8);
    v35[4] = v26;
    v35[0] = swift_allocObject();
    sub_1000079E4((uint64_t)&v44, v35[0] + 16, &qword_10070A3B8);
    char v27 = a4(v35);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v35);
    if (v27)
    {
      *(void *)(a7 + 24) = v25;
      *(void *)(a7 + 32) = v26;
      long long v28 = (_OWORD *)swift_allocObject();
      *(void *)a7 = v28;
      long long v29 = v55;
      v28[11] = v54;
      v28[12] = v29;
      v28[13] = v56;
      long long v30 = v51;
      v28[7] = v50;
      v28[8] = v30;
      long long v31 = v53;
      v28[9] = v52;
      v28[10] = v31;
      long long v32 = v47;
      v28[3] = v46;
      v28[4] = v32;
      long long v33 = v49;
      v28[5] = v48;
      v28[6] = v33;
      long long v34 = v45;
      v28[1] = v44;
      v28[2] = v34;
      return sub_100007820(a5);
    }
LABEL_13:
    sub_100007A48((uint64_t)&v44, &qword_10070A3B8);
    *(void *)(a7 + 32) = 0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
    return sub_100007820(a5);
  }
  *(void *)(a7 + 32) = 0;
  *(_OWORD *)a7 = 0u;
  *(_OWORD *)(a7 + 16) = 0u;
  return sub_100007820(a5);
}

uint64_t sub_1000326FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v67 = a7;
  uint64_t v65 = a5;
  __int16 v66 = a4;
  long long v71 = a9;
  uint64_t v14 = type metadata accessor for UploadMessages(0);
  __chkstk_darwin(v14 - 8);
  int v16 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10000566C(&qword_10070A3C8);
  uint64_t v17 = __chkstk_darwin(v70);
  uint64_t v68 = (uint64_t)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v60 - v20;
  __chkstk_darwin(v19);
  uint64_t v69 = (uint64_t)v60 - v22;
  if (qword_100709DF8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v23 = swift_bridgeObjectRetain();
  char v24 = sub_10003B79C(v23, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v64 = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v24)
  {
    __int16 v25 = *(_DWORD *)(a6 + 172);
    uint64_t v27 = *(void *)a6;
    uint64_t v26 = *(void *)(a6 + 8);
    uint64_t v28 = *(void *)(a6 + 16);
    v60[0] = a6;
    int v29 = *(_DWORD *)(a6 + 24);
    v74[0] = v27;
    v74[1] = v26;
    __int16 v75 = v25;
    uint64_t v76 = v28;
    int v77 = v29;
    uint64_t v30 = v67;
    int v63 = *(unsigned __int8 *)(v67 + 1);
    v60[1] = a8;
    uint64_t v31 = a8
        + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    uint64_t v32 = v31 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
    uint64_t v62 = *(void *)(v32 + 24);
    int v61 = *(unsigned __int8 *)(v32 + 32);
    sub_10003BFA8(v30 + 32, (uint64_t)v73);
    uint64_t v33 = v32 + *(int *)(type metadata accessor for MailboxSyncState() + 72);
    uint64_t v34 = *(void *)v33;
    char v35 = *(unsigned char *)(v33 + 8);
    char v36 = *(unsigned char *)(v33 + 9);
    sub_10003BFA8((uint64_t)v73, (uint64_t)&v78);
    BOOL v37 = v78 != 0;
    if (v78) {
      char v38 = 1;
    }
    else {
      char v38 = v36;
    }
    if (v35) {
      uint64_t v39 = 1;
    }
    else {
      uint64_t v39 = v34;
    }
    if (v35) {
      char v40 = 2;
    }
    else {
      char v40 = 1;
    }
    if (v38)
    {
      char v41 = 2;
    }
    else
    {
      BOOL v37 = v39;
      char v41 = v40;
    }
    if (v79 == 1) {
      uint64_t v42 = v37;
    }
    else {
      uint64_t v42 = v78;
    }
    if (v79 == 1) {
      char v43 = v41;
    }
    else {
      char v43 = 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001C093C((uint64_t)v74, v63, v61, v42, v43, (uint64_t)v16);
    sub_10003DF50((uint64_t)v16, (uint64_t)v21, type metadata accessor for UploadMessages);
    uint64_t v44 = v70;
    long long v45 = &v21[*(int *)(v70 + 36)];
    *(void *)long long v45 = _swiftEmptyArrayStorage;
    *((void *)v45 + 1) = _swiftEmptyArrayStorage;
    sub_10003B34C((uint64_t)v16, type metadata accessor for UploadMessages);
    uint64_t v46 = v69;
    sub_10001FDF0((uint64_t)v21, v69, &qword_10070A3C8);
    uint64_t v47 = *(void *)(*(void *)(v46 + 40) + 16);
    uint64_t v48 = v68;
    sub_1000079E4(v46, v68, &qword_10070A3C8);
    if (v47)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v49 = v64;
      swift_bridgeObjectRetain();
      uint64_t v50 = swift_bridgeObjectRetain();
      char v51 = sub_10003B444(v50, a1, a2, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48(v48, &qword_10070A3C8);
      if ((v51 & 1) == 0) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_100007A48(v48, &qword_10070A3C8);
    }
    v72[3] = v44;
    uint64_t v53 = sub_10003C89C(&qword_10070A3D0, &qword_10070A3C8);
    v72[4] = v53;
    long long v54 = sub_100021E04(v72);
    sub_1000079E4(v46, (uint64_t)v54, &qword_10070A3C8);
    char v55 = v66(v72);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v72);
    if (v55)
    {
      long long v56 = v71;
      v71[3] = v44;
      v56[4] = v53;
      long long v57 = sub_100021E04(v56);
      sub_10001FDF0(v46, (uint64_t)v57, &qword_10070A3C8);
LABEL_30:
      sub_100007820(v60[0]);
      return swift_release();
    }
LABEL_29:
    sub_100007A48(v46, &qword_10070A3C8);
    __int16 v58 = v71;
    *(_OWORD *)long long v71 = 0u;
    *((_OWORD *)v58 + 1) = 0u;
    v58[4] = 0;
    goto LABEL_30;
  }
  long long v52 = v71;
  v71[4] = 0;
  *(_OWORD *)long long v52 = 0u;
  *((_OWORD *)v52 + 1) = 0u;
  sub_100007820(a6);
  return swift_release();
}

double sub_100032C24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void *)@<X3>, void (*a5)(void *__return_ptr, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  if (qword_100709D48 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v11 = swift_bridgeObjectRetain();
  char v12 = sub_10003B79C(v11, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_14;
  }
  a5(v30, v13);
  if (v30[0])
  {
    sub_10003C004((uint64_t)v30, (uint64_t)v31);
    *(void *)&long long v32 = _swiftEmptyArrayStorage;
    *((void *)&v32 + 1) = _swiftEmptyArrayStorage;
    sub_10003C060((uint64_t)v30);
    long long v39 = v31[6];
    long long v40 = v31[7];
    long long v41 = v31[8];
    long long v42 = v32;
    long long v35 = v31[2];
    long long v36 = v31[3];
    long long v37 = v31[4];
    long long v38 = v31[5];
    long long v33 = v31[0];
    long long v34 = v31[1];
    uint64_t v14 = *(void *)(*(void *)&v31[0] + 16);
    sub_1000079E4((uint64_t)&v33, (uint64_t)v31, &qword_10070A3E0);
    if (v14)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = swift_bridgeObjectRetain();
      char v16 = sub_10003B444(v15, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v31, &qword_10070A3E0);
      if ((v16 & 1) == 0)
      {
LABEL_12:
        uint64_t v17 = &qword_10070A3E0;
        uint64_t v18 = &v33;
        goto LABEL_13;
      }
    }
    else
    {
      sub_100007A48((uint64_t)v31, &qword_10070A3E0);
    }
    uint64_t v19 = sub_10000566C(&qword_10070A3E0);
    v30[3] = v19;
    uint64_t v20 = sub_10003C89C(&qword_10070A3E8, &qword_10070A3E0);
    v30[4] = v20;
    v30[0] = swift_allocObject();
    sub_1000079E4((uint64_t)&v33, v30[0] + 16, &qword_10070A3E0);
    char v21 = a4(v30);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v30);
    if (v21)
    {
      *(void *)(a6 + 24) = v19;
      *(void *)(a6 + 32) = v20;
      uint64_t v22 = (_OWORD *)swift_allocObject();
      *(void *)a6 = v22;
      long long v23 = v40;
      v22[7] = v39;
      v22[8] = v23;
      long long v24 = v42;
      v22[9] = v41;
      v22[10] = v24;
      long long v25 = v36;
      v22[3] = v35;
      _OWORD v22[4] = v25;
      long long v26 = v38;
      v22[5] = v37;
      v22[6] = v26;
      double result = *(double *)&v33;
      long long v28 = v34;
      v22[1] = v33;
      v22[2] = v28;
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v17 = (uint64_t *)&unk_10070A3D8;
  uint64_t v18 = (long long *)v30;
LABEL_13:
  sub_100007A48((uint64_t)v18, v17);
LABEL_14:
  *(void *)(a6 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return result;
}

uint64_t sub_100032F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  long long v52 = a4;
  uint64_t v53 = a7;
  uint64_t v51 = a5;
  uint64_t v13 = (int *)type metadata accessor for UploadFlagChanges(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10000566C(&qword_10070A3F0);
  uint64_t v16 = __chkstk_darwin(v57);
  uint64_t v55 = (uint64_t)v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v54 = (uint64_t)v45 - v19;
  __chkstk_darwin(v18);
  uint64_t v56 = (uint64_t)v45 - v20;
  if (qword_100709DF0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v21 = swift_bridgeObjectRetain();
  char v22 = sub_10003B79C(v21, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v50 = a3;
  swift_bridgeObjectRelease();
  uint64_t v48 = a2;
  swift_bridgeObjectRelease();
  uint64_t v49 = a1;
  swift_bridgeObjectRelease();
  if (v22)
  {
    v45[1] = 0;
    uint64_t v46 = a8;
    int v23 = *(_DWORD *)(a6 + 172);
    uint64_t v24 = *(void *)a6;
    uint64_t v25 = *(void *)(a6 + 8);
    uint64_t v26 = *(void *)(a6 + 16);
    uint64_t v47 = a6;
    int v27 = *(_DWORD *)(a6 + 24);
    char v62 = *(unsigned char *)(v53 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *((void *)v15 + 5) = sub_10009A7D4((uint64_t)&off_1006BA3F8);
    v15[48] = 0;
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    v15[v13[12]] = 0;
    v15[v13[13]] = 0;
    *(void *)uint64_t v15 = v24;
    *((void *)v15 + 1) = v25;
    *((_WORD *)v15 + 8) = v23;
    *((void *)v15 + 3) = v26;
    *((_DWORD *)v15 + 8) = v27;
    *((void *)v15 + 7) = v13;
    uint64_t v58 = v26;
    int v59 = v27;
    sub_10003BC88();
    swift_bridgeObjectRetain();
    sub_1005E2BF0();
    type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
    swift_storeEnumTagMultiPayload();
    v15[v13[9]] = v62;
    uint64_t v28 = v54;
    sub_10003DF50((uint64_t)v15, v54, type metadata accessor for UploadFlagChanges);
    uint64_t v29 = v57;
    uint64_t v30 = (void *)(v28 + *(int *)(v57 + 36));
    *uint64_t v30 = _swiftEmptyArrayStorage;
    v30[1] = _swiftEmptyArrayStorage;
    sub_10003B34C((uint64_t)v15, type metadata accessor for UploadFlagChanges);
    uint64_t v31 = v56;
    sub_10001FDF0(v28, v56, &qword_10070A3F0);
    uint64_t v32 = *(void *)(*(void *)(v31 + 40) + 16);
    uint64_t v33 = v55;
    sub_1000079E4(v31, v55, &qword_10070A3F0);
    if (v32)
    {
      uint64_t v34 = v49;
      swift_bridgeObjectRetain();
      uint64_t v35 = v48;
      swift_bridgeObjectRetain();
      uint64_t v36 = v50;
      swift_bridgeObjectRetain();
      uint64_t v37 = swift_bridgeObjectRetain();
      char v38 = sub_10003B444(v37, v34, v35, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48(v33, &qword_10070A3F0);
      uint64_t v39 = v46;
      if ((v38 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_100007A48(v33, &qword_10070A3F0);
      uint64_t v39 = v46;
    }
    uint64_t v60 = v29;
    uint64_t v41 = sub_10003C89C(&qword_10070A3F8, &qword_10070A3F0);
    uint64_t v61 = v41;
    long long v42 = sub_100021E04(&v58);
    sub_1000079E4(v31, (uint64_t)v42, &qword_10070A3F0);
    char v43 = v52(&v58);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v58);
    if (v43)
    {
      *(void *)(v39 + 24) = v29;
      *(void *)(v39 + 32) = v41;
      uint64_t v44 = sub_100021E04((uint64_t *)v39);
      sub_10001FDF0(v31, (uint64_t)v44, &qword_10070A3F0);
      return sub_100007820(v47);
    }
LABEL_13:
    sub_100007A48(v31, &qword_10070A3F0);
    *(_OWORD *)uint64_t v39 = 0u;
    *(_OWORD *)(v39 + 16) = 0u;
    *(void *)(v39 + 32) = 0;
    return sub_100007820(v47);
  }
  *(void *)(a8 + 32) = 0;
  *(_OWORD *)a8 = 0u;
  *(_OWORD *)(a8 + 16) = 0u;
  return sub_100007820(a6);
}

uint64_t sub_1000333E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(Swift::Int *)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  if (qword_100709DE8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v12 = swift_bridgeObjectRetain();
  char v13 = sub_10003B79C(v12, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v32 = a4;
    uint64_t v33 = a6;
    uint64_t v34 = a5;
    int v14 = *(_DWORD *)(a5 + 172);
    uint64_t v16 = *(void *)a5;
    uint64_t v15 = *(void *)(a5 + 8);
    uint64_t v17 = *(void *)(a5 + 16);
    int v18 = *(_DWORD *)(a5 + 24);
    Swift::Int v35 = sub_10001DF10((uint64_t)&off_1006BA170);
    char v36 = 0;
    char v43 = 0;
    uint64_t v45 = 0;
    uint64_t v37 = v16;
    uint64_t v38 = v15;
    LOWORD(v39) = v14;
    uint64_t v40 = v17;
    int v41 = v18;
    unint64_t v44 = sub_1000D4444((uint64_t)_swiftEmptyArrayStorage);
    long long v42 = &type metadata for UpdateLocalFlags;
    *(void *)&v46[0] = v17;
    DWORD2(v46[0]) = v18;
    sub_10003BC88();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1005E2BF0();
    sub_10003C6D4((uint64_t)&v35, (uint64_t)v46);
    *(void *)&long long v47 = _swiftEmptyArrayStorage;
    *((void *)&v47 + 1) = _swiftEmptyArrayStorage;
    sub_10003C730((uint64_t)&v35);
    long long v54 = v46[6];
    long long v55 = v46[7];
    long long v56 = v47;
    long long v50 = v46[2];
    long long v51 = v46[3];
    long long v52 = v46[4];
    long long v53 = v46[5];
    long long v48 = v46[0];
    long long v49 = v46[1];
    uint64_t v19 = *(void *)(*(void *)&v46[0] + 16);
    sub_1000079E4((uint64_t)&v48, (uint64_t)v46, &qword_10070A478);
    if (v19)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = swift_bridgeObjectRetain();
      char v21 = sub_10003B444(v20, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v46, &qword_10070A478);
      char v22 = v32;
      if ((v21 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_100007A48((uint64_t)v46, &qword_10070A478);
      char v22 = v32;
    }
    uint64_t v24 = sub_10000566C(&qword_10070A478);
    uint64_t v38 = v24;
    uint64_t v25 = sub_10003C89C(&qword_10070A480, &qword_10070A478);
    uint64_t v39 = v25;
    Swift::Int v35 = swift_allocObject();
    sub_1000079E4((uint64_t)&v48, v35 + 16, &qword_10070A478);
    char v26 = v22(&v35);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v35);
    if (v26)
    {
      *(void *)(v33 + 24) = v24;
      *(void *)(v33 + 32) = v25;
      int v27 = (_OWORD *)swift_allocObject();
      *(void *)uint64_t v33 = v27;
      long long v28 = v55;
      v27[7] = v54;
      v27[8] = v28;
      v27[9] = v56;
      long long v29 = v51;
      v27[3] = v50;
      v27[4] = v29;
      long long v30 = v53;
      v27[5] = v52;
      v27[6] = v30;
      long long v31 = v49;
      v27[1] = v48;
      v27[2] = v31;
      return sub_100007820(v34);
    }
LABEL_13:
    sub_100007A48((uint64_t)&v48, &qword_10070A478);
    *(void *)(v33 + 32) = 0;
    *(_OWORD *)uint64_t v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    return sub_100007820(v34);
  }
  *(void *)(a6 + 32) = 0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return sub_100007820(a5);
}

double sub_10003378C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t *)@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v42 = a7;
  char v43 = a6;
  uint64_t v38 = a5;
  uint64_t v39 = a4;
  uint64_t v12 = sub_10000566C(&qword_10070A488);
  __chkstk_darwin(v12 - 8);
  int v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10000566C(&qword_10070A490);
  uint64_t v15 = __chkstk_darwin(v41);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v38 - v19;
  __chkstk_darwin(v18);
  uint64_t v40 = (uint64_t)&v38 - v21;
  if (qword_100709D88 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v22 = swift_bridgeObjectRetain();
  char v23 = sub_10003B79C(v22, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    goto LABEL_6;
  }
  v43(v24);
  uint64_t Messages = type metadata accessor for FetchMessages(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(Messages - 8) + 48))(v14, 1, Messages) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_10070A488);
LABEL_6:
    *(void *)(a8 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
    return result;
  }
  sub_10003DF50((uint64_t)v14, (uint64_t)v20, type metadata accessor for FetchMessages);
  uint64_t v27 = v41;
  long long v28 = &v20[*(int *)(v41 + 36)];
  *(void *)long long v28 = _swiftEmptyArrayStorage;
  *((void *)v28 + 1) = _swiftEmptyArrayStorage;
  sub_10003B34C((uint64_t)v14, type metadata accessor for FetchMessages);
  uint64_t v29 = (uint64_t)v20;
  uint64_t v30 = v40;
  sub_10001FDF0(v29, v40, &qword_10070A490);
  uint64_t v31 = *(void *)(*(void *)v30 + 16);
  sub_1000079E4(v30, (uint64_t)v17, &qword_10070A490);
  if (v31)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = swift_bridgeObjectRetain();
    char v33 = sub_10003B444(v32, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007A48((uint64_t)v17, &qword_10070A490);
    if ((v33 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_100007A48((uint64_t)v17, &qword_10070A490);
  }
  v44[3] = v27;
  uint64_t v34 = sub_10003C89C(&qword_10070A498, &qword_10070A490);
  v44[4] = v34;
  Swift::Int v35 = sub_100021E04(v44);
  sub_1000079E4(v30, (uint64_t)v35, &qword_10070A490);
  char v36 = v39(v44);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v44);
  if (v36)
  {
    *(void *)(a8 + 24) = v27;
    *(void *)(a8 + 32) = v34;
    uint64_t v37 = sub_100021E04((uint64_t *)a8);
    sub_10001FDF0(v30, (uint64_t)v37, &qword_10070A490);
    return result;
  }
LABEL_13:
  sub_100007A48(v30, &qword_10070A490);
  double result = 0.0;
  *(_OWORD *)a8 = 0u;
  *(_OWORD *)(a8 + 16) = 0u;
  *(void *)(a8 + 32) = 0;
  return result;
}

double sub_100033B70@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t *)@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v42 = a7;
  char v43 = a6;
  uint64_t v38 = a5;
  uint64_t v39 = a4;
  uint64_t v12 = sub_10000566C(&qword_10070A4A0);
  __chkstk_darwin(v12 - 8);
  int v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10000566C(&qword_10070A4A8);
  uint64_t v15 = __chkstk_darwin(v41);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v38 - v19;
  __chkstk_darwin(v18);
  uint64_t v40 = (uint64_t)&v38 - v21;
  if (qword_100709D98 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v22 = swift_bridgeObjectRetain();
  char v23 = sub_10003B79C(v22, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    goto LABEL_6;
  }
  v43(v24);
  Missinguint64_t Messages = type metadata accessor for FindMissingMessages(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(MissingMessages - 8) + 48))(v14, 1, MissingMessages) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_10070A4A0);
LABEL_6:
    *(void *)(a8 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
    return result;
  }
  sub_10003DF50((uint64_t)v14, (uint64_t)v20, type metadata accessor for FindMissingMessages);
  uint64_t v27 = v41;
  long long v28 = &v20[*(int *)(v41 + 36)];
  *(void *)long long v28 = _swiftEmptyArrayStorage;
  *((void *)v28 + 1) = _swiftEmptyArrayStorage;
  sub_10003B34C((uint64_t)v14, type metadata accessor for FindMissingMessages);
  uint64_t v29 = (uint64_t)v20;
  uint64_t v30 = v40;
  sub_10001FDF0(v29, v40, &qword_10070A4A8);
  uint64_t v31 = *(void *)(*(void *)(v30 + 104) + 16);
  sub_1000079E4(v30, (uint64_t)v17, &qword_10070A4A8);
  if (v31)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = swift_bridgeObjectRetain();
    char v33 = sub_10003B444(v32, a1, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007A48((uint64_t)v17, &qword_10070A4A8);
    if ((v33 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_100007A48((uint64_t)v17, &qword_10070A4A8);
  }
  v44[3] = v27;
  uint64_t v34 = sub_10003C89C(&qword_10070A4B0, &qword_10070A4A8);
  v44[4] = v34;
  Swift::Int v35 = sub_100021E04(v44);
  sub_1000079E4(v30, (uint64_t)v35, &qword_10070A4A8);
  char v36 = v39(v44);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v44);
  if (v36)
  {
    *(void *)(a8 + 24) = v27;
    *(void *)(a8 + 32) = v34;
    uint64_t v37 = sub_100021E04((uint64_t *)a8);
    sub_10001FDF0(v30, (uint64_t)v37, &qword_10070A4A8);
    return result;
  }
LABEL_13:
  sub_100007A48(v30, &qword_10070A4A8);
  double result = 0.0;
  *(_OWORD *)a8 = 0u;
  *(_OWORD *)(a8 + 16) = 0u;
  *(void *)(a8 + 32) = 0;
  return result;
}

uint64_t sub_100033F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v57 = a5;
  uint64_t v58 = a4;
  int v63 = a8;
  uint64_t v13 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000566C(&qword_10070A4B8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10000566C(&qword_10070A4C0);
  uint64_t v19 = __chkstk_darwin(v62);
  uint64_t v60 = (uint64_t)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v59 = (uint64_t)&v53 - v22;
  __chkstk_darwin(v21);
  uint64_t v61 = (uint64_t)&v53 - v23;
  if (qword_100709DC0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v24 = swift_bridgeObjectRetain();
  char v25 = sub_10003B79C(v24, a1, a2);
  uint64_t v56 = 0;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0) {
    goto LABEL_6;
  }
  __int16 v27 = *(_DWORD *)(a6 + 172);
  uint64_t v29 = *(void *)a6;
  uint64_t v28 = *(void *)(a6 + 8);
  uint64_t v30 = *(void *)(a6 + 16);
  uint64_t v54 = a6;
  int v31 = *(_DWORD *)(a6 + 24);
  *(void *)&long long v65 = v29;
  *((void *)&v65 + 1) = v28;
  __int16 v66 = v27;
  uint64_t v67 = v30;
  int v68 = v31;
  uint64_t v55 = a7;
  uint64_t v32 = a7
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  uint64_t v33 = *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
  uint64_t v34 = v32 + v33 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
  uint64_t v35 = type metadata accessor for PendingServerResponses();
  sub_1000079E4(v34 + *(int *)(v35 + 24), (uint64_t)v15, &qword_100709E38);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10019EE60(&v65, (uint64_t)v15, (uint64_t)v18);
  uint64_t v36 = type metadata accessor for NotifyMessagesVanished();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v18, 1, v36) != 1)
  {
    uint64_t v38 = v59;
    sub_10003DF50((uint64_t)v18, v59, (uint64_t (*)(void))type metadata accessor for NotifyMessagesVanished);
    uint64_t v39 = v62;
    uint64_t v40 = (void *)(v38 + *(int *)(v62 + 36));
    *uint64_t v40 = _swiftEmptyArrayStorage;
    v40[1] = _swiftEmptyArrayStorage;
    sub_10003B34C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NotifyMessagesVanished);
    uint64_t v41 = v61;
    sub_10001FDF0(v38, v61, &qword_10070A4C0);
    uint64_t v42 = *(void *)(*(void *)(v41 + *(int *)(v36 + 36)) + 16);
    uint64_t v43 = v60;
    sub_1000079E4(v41, v60, &qword_10070A4C0);
    if (v42)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v44 = swift_bridgeObjectRetain();
      char v45 = sub_10003B444(v44, a1, a2, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007A48(v43, &qword_10070A4C0);
      a6 = v54;
      if ((v45 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_100007A48(v43, &qword_10070A4C0);
      a6 = v54;
    }
    v64[3] = v39;
    uint64_t v46 = sub_10003C89C(&qword_10070A4C8, &qword_10070A4C0);
    v64[4] = v46;
    long long v47 = sub_100021E04(v64);
    sub_1000079E4(v41, (uint64_t)v47, &qword_10070A4C0);
    char v48 = v58(v64);
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v64);
    if (v48)
    {
      long long v49 = v63;
      v63[3] = v39;
      v49[4] = v46;
      long long v50 = sub_100021E04(v49);
      sub_10001FDF0(v41, (uint64_t)v50, &qword_10070A4C0);
      goto LABEL_14;
    }
LABEL_13:
    sub_100007A48(v41, &qword_10070A4C0);
    long long v51 = v63;
    *(_OWORD *)int v63 = 0u;
    *((_OWORD *)v51 + 1) = 0u;
    v51[4] = 0;
    goto LABEL_14;
  }
  sub_100007A48((uint64_t)v18, &qword_10070A4B8);
  a6 = v54;
LABEL_6:
  uint64_t v37 = v63;
  v63[4] = 0;
  *(_OWORD *)uint64_t v37 = 0u;
  *((_OWORD *)v37 + 1) = 0u;
LABEL_14:
  sub_100007820(a6);
  return swift_release();
}

uint64_t sub_100034498@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t *)@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, void *a10, uint64_t a11, void (*a12)(uint64_t), uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16)
{
  unint64_t v187 = a7;
  uint64_t v174 = a6;
  long long v173 = a5;
  uint64_t v188 = a2;
  int v186 = a1;
  uint64_t v160 = a8;
  uint64_t v172 = _s18InProgressMessagesVMa(0);
  __chkstk_darwin(v172);
  long long v171 = (char *)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = type metadata accessor for DownloadTask(0);
  uint64_t v19 = __chkstk_darwin(v170);
  v177 = (uint64_t *)((char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v168 = (uint64_t)&v155 - v21;
  uint64_t v176 = sub_10000566C(&qword_10070A360);
  __chkstk_darwin(v176);
  uint64_t v169 = (uint64_t)&v155 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10000566C(&qword_100709E38);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  unint64_t v26 = (unint64_t)&v155 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v178 = (uint64_t)&v155 - v28;
  __chkstk_darwin(v27);
  uint64_t v158 = (uint64_t)&v155 - v29;
  uint64_t v30 = type metadata accessor for MessagesPendingDownloadPerPass();
  __chkstk_darwin(v30 - 8);
  unint64_t v32 = (unint64_t)&v155 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for MessagesPendingDownload();
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v36 = (char *)&v155 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v155 - v38;
  __chkstk_darwin(v37);
  long long v159 = (unint64_t *)((char *)&v155 - v40);
  if (qword_100709D80 != -1) {
    goto LABEL_66;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Swift::Int v41 = swift_bridgeObjectRetain();
    char v42 = sub_10003B79C(v41, a3, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v42 & 1) == 0)
    {
      uint64_t v147 = (_OWORD *)v160;
      *(void *)(v160 + 32) = 0;
      _OWORD *v147 = 0u;
      v147[1] = 0u;
      return result;
    }
    v185 = (uint64_t *)v36;
    uint64_t v183 = 0;
    int v44 = v186 & 1;
    unint64_t v45 = v187 >> 16;
    uint64_t v46 = v188
        + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
    swift_beginAccess();
    uint64_t v47 = _s13SelectedStateV7WrappedVMa(0);
    uint64_t v48 = *(int *)(v47 + 20);
    uint64_t v49 = type metadata accessor for MailboxSyncState();
    uint64_t v50 = v46 + v48 + *(int *)(v49 + 52);
    uint64_t v51 = type metadata accessor for PendingPersistenceUpdates();
    sub_10003DF50(v50 + *(int *)(v51 + 28), v32, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownloadPerPass);
    long long v52 = v159;
    int v167 = v44;
    sub_10006B9DC(v44, v45, a9, v159);
    uint64_t v53 = sub_10003B34C(v32, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownloadPerPass);
    if (!*(void *)(*v52 + 16) && !*(void *)(*(void *)(v46 + *(int *)(v47 + 20) + *(int *)(v49 + 56)) + 16))
    {
      uint64_t v148 = v52;
      goto LABEL_61;
    }
    long long v157 = a10;
    unint64_t v187 = a14;
    uint64_t v188 = a15;
    uint64_t v54 = v26;
    uint64_t v55 = (uint64_t)v39;
    uint64_t v56 = v158;
    a12(v53);
    a3 = (uint64_t)type metadata accessor for MessagesPendingDownload;
    sub_10003DF50((uint64_t)v52, v55, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    uint64_t v57 = v56;
    uint64_t v58 = v178;
    sub_1000079E4(v57, v178, &qword_100709E38);
    uint64_t v163 = a11;
    uint64_t v59 = *(void *)(a11 + 144);
    uint64_t v60 = *(void *)(v46 + *(int *)(v47 + 20) + *(int *)(v49 + 56));
    uint64_t v61 = v185;
    sub_10003DF50(v55, (uint64_t)v185, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    sub_1000079E4(v58, v54, &qword_100709E38);
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = v60;
    v202[0] = v59;
    v202[1] = v188;
    v202[2] = v62;
    v202[3] = (uint64_t)sub_10003B154;
    v202[4] = 0;
    v202[5] = (uint64_t)sub_10003B168;
    v202[6] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v175 = sub_100037FE4(v61, v54, v202);
    unint64_t v64 = v63;
    __int16 v66 = v65;
    sub_100007A48(v58, &qword_100709E38);
    sub_10003B34C(v55, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    unint64_t v26 = (unint64_t)v157;
    v181 = (uint64_t *)v157[2];
    if (!v181) {
      break;
    }
    v180 = v157 + 4;
    uint64_t v165 = a16;
    unint64_t v166 = v64;
    uint64_t v164 = v64;
    long long v156 = v66 + 4;
    long long v162 = v177 + 8;
    long long v161 = v177 + 3;
    swift_bridgeObjectRetain();
    uint64_t v67 = 0;
    v179 = v66;
    while (1)
    {
      int v68 = *((unsigned __int8 *)v180 + v67);
      v185 = (uint64_t *)v67;
      int v184 = v68;
      if (v68)
      {
        if (v68 == 1) {
          uint64_t v69 = 11;
        }
        else {
          uint64_t v69 = 13;
        }
        uint64_t v70 = v178;
        uint64_t v71 = v175;
        uint64_t v72 = sub_10006A97C(v69, v175, v164 | ((HIDWORD(v166) & 1) << 32), v178);
        __chkstk_darwin(v72);
        uint64_t v154 = v70;
        swift_bridgeObjectRetain();
        uint64_t v73 = v183;
        uint64_t v74 = sub_10002B17C(v165, (uint64_t)v152, v71);
        uint64_t v183 = v73;
        uint64_t v39 = (char *)sub_100037DE8(v74);
        sub_100007A48(v70, &qword_100709E38);
        goto LABEL_14;
      }
      unint64_t v92 = v66[2];
      if (v92 > 7) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v105 = v92 - 2;
      if (v92 >= 2)
      {
        unint64_t v106 = v92 - 1;
        unint64_t v107 = v66[2];
        if (!v107) {
          goto LABEL_67;
        }
        if (v106 >= v107) {
          goto LABEL_68;
        }
        LODWORD(v188) = *((_DWORD *)v66 + 8);
        uint64_t v108 = v66[5];
        char v109 = *((unsigned char *)v66 + 48);
        LODWORD(v187) = *((unsigned __int8 *)v66 + 49);
        uint64_t v110 = 3 * v106;
        char v111 = &v156[3 * v106];
        int v112 = *(_DWORD *)v111;
        uint64_t v113 = v111[1];
        unint64_t v26 = *((unsigned __int8 *)v111 + 16);
        a3 = *((unsigned __int8 *)v111 + 17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          __int16 v66 = sub_100093418(v179);
        }
        *((_DWORD *)v66 + 8) = v112;
        v66[5] = v113;
        *((unsigned char *)v66 + 48) = v26;
        *((unsigned char *)v66 + 49) = a3;
        uint64_t v114 = &v66[v110 + 4];
        *(_DWORD *)uint64_t v114 = v188;
        v114[1] = v108;
        *((unsigned char *)v114 + 16) = v109;
        *((unsigned char *)v114 + 17) = v187;
        uint64_t v39 = (char *)v66;
        if (v92 >> 1 != 1)
        {
          if (v92 != 3)
          {
            unint64_t v115 = v66[2];
            if (v115 < 2) {
              goto LABEL_67;
            }
            if (v105 >= v115) {
              goto LABEL_68;
            }
            int v116 = *((_DWORD *)v66 + 14);
            uint64_t v117 = v66[8];
            LODWORD(v188) = *((unsigned __int8 *)v66 + 72);
            LODWORD(v187) = *((unsigned __int8 *)v66 + 73);
            uint64_t v118 = 3 * v105;
            int v119 = v66[v118 + 4];
            uint64_t v120 = v66[v118 + 5];
            unint64_t v26 = LOBYTE(v66[v118 + 6]);
            a3 = BYTE1(v66[v118 + 6]);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              __int16 v66 = sub_100093418(v66);
            }
            int v121 = &v66[v118];
            *((_DWORD *)v66 + 14) = v119;
            v66[8] = v120;
            uint64_t v39 = (char *)v66;
            *((unsigned char *)v66 + 72) = v26;
            *((unsigned char *)v66 + 73) = a3;
            *((_DWORD *)v121 + 8) = v116;
            v121[5] = v117;
            *((unsigned char *)v121 + 48) = v188;
            *((unsigned char *)v121 + 49) = v187;
          }
          if (v92 >> 1 != 2)
          {
            unint64_t v122 = v92 - 3;
            if (v92 != 5)
            {
              unint64_t v123 = *((void *)v39 + 2);
              if (v123 < 3)
              {
LABEL_67:
                __break(1u);
LABEL_68:
                __break(1u);
LABEL_69:
                LODWORD(v154) = 0;
                uint64_t v153 = 1092;
                v152[0] = 2;
                uint64_t result = sub_1005E3000();
                __break(1u);
                return result;
              }
              if (v122 >= v123) {
                goto LABEL_68;
              }
              int v124 = *((_DWORD *)v39 + 20);
              uint64_t v125 = *((void *)v39 + 11);
              char v126 = v39[96];
              char v127 = v39[97];
              uint64_t v128 = 3 * v122;
              uint64_t v129 = &v39[24 * v122];
              uint64_t v130 = v39;
              int v131 = *((_DWORD *)v129 + 8);
              uint64_t v132 = *((void *)v129 + 5);
              unint64_t v26 = v129[48];
              a3 = v129[49];
              uint64_t v133 = v130;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v133 = sub_100093418(v133);
              }
              uint64_t v134 = &v133[v128];
              *((_DWORD *)v133 + 20) = v131;
              uint64_t v39 = (char *)v133;
              v133[11] = v132;
              *((unsigned char *)v133 + 96) = v26;
              *((unsigned char *)v133 + 97) = a3;
              *((_DWORD *)v134 + 8) = v124;
              v134[5] = v125;
              *((unsigned char *)v134 + 48) = v126;
              *((unsigned char *)v134 + 49) = v127;
            }
          }
        }
      }
      else
      {
        uint64_t v39 = (char *)v66;
      }
LABEL_14:
      if (*((void *)v39 + 2))
      {
        int v75 = *(_DWORD *)(v163 + 172);
        uint64_t v76 = *(void *)(v163 + 8);
        uint64_t v77 = *(void *)(v163 + 16);
        int v78 = *(_DWORD *)(v163 + 24);
        v198[0] = *(void *)v163;
        v198[1] = v76;
        __int16 v199 = v75;
        uint64_t v200 = v77;
        int v201 = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v79 = sub_10009A7D4((uint64_t)_swiftEmptyArrayStorage);
        a3 = (uint64_t)v177;
        uint64_t *v177 = v79;
        *(unsigned char *)(a3 + 8) = 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v80 = v184;
        sub_100127EDC(v198, (uint64_t)v39, v184, (uint64_t)v195);
        uint64_t v81 = *((void *)&v196 + 1);
        long long v82 = v195[1];
        uint64_t v83 = v162;
        *long long v162 = v195[0];
        v83[1] = v82;
        v83[2] = v196;
        *((unsigned char *)v83 + 48) = v197;
        char v84 = v167;
        *(unsigned char *)(a3 + 9) = v167;
        unint64_t v26 = v170;
        *(void *)(a3 + 16) = v170;
        uint64_t v189 = v77;
        int v190 = v78;
        char v191 = v84;
        char v192 = v80;
        sub_10003BC08();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1005E2BF0();
        uint64_t v85 = (uint64_t)v171;
        sub_10001FC6C();
        swift_bridgeObjectRetain();
        sub_1005E3680();
        sub_1005E3680();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v85 = v77;
        *(_DWORD *)(v85 + 8) = v78;
        *(void *)(v85 + 16) = _swiftEmptyArrayStorage;
        *(void *)(v85 + 24) = _swiftEmptyArrayStorage;
        sub_100128898(a3 + *(int *)(v26 + 40));
        sub_10003DF50(v85, a3 + *(int *)(v26 + 36), _s18InProgressMessagesVMa);
        sub_100128DB4(v81);
        swift_bridgeObjectRelease();
        sub_10003B34C(v85, _s18InProgressMessagesVMa);
        uint64_t v86 = v168;
        sub_10003DFB8(a3, v168, type metadata accessor for DownloadTask);
        uint64_t v87 = v169;
        sub_10003DF50(v86, v169, type metadata accessor for DownloadTask);
        uint64_t v88 = v176;
        char v89 = (void *)(v87 + *(int *)(v176 + 36));
        *char v89 = _swiftEmptyArrayStorage;
        v89[1] = _swiftEmptyArrayStorage;
        sub_10003B34C(v86, type metadata accessor for DownloadTask);
        uint64_t v193 = v88;
        uint64_t v90 = sub_10003C89C(&qword_10070A370, &qword_10070A360);
        uint64_t v194 = v90;
        uint64_t v91 = sub_100021E04(&v189);
        sub_1000079E4(v87, (uint64_t)v91, &qword_10070A360);
        LOBYTE(v86) = v173(&v189);
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v189);
        if (v86)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v150 = (uint64_t *)v160;
          *(void *)(v160 + 24) = v176;
          v150[4] = v90;
          v151 = sub_100021E04(v150);
          sub_10001FDF0(v87, (uint64_t)v151, &qword_10070A360);
          sub_100007A48(v158, &qword_100709E38);
          return sub_10003B34C((uint64_t)v159, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
        }
        sub_100007A48(v87, &qword_10070A360);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      __int16 v66 = v179;
      uint64_t v67 = (uint64_t)v185 + 1;
      if ((uint64_t *)((char *)v185 + 1) == v181) {
        goto LABEL_60;
      }
    }
    sub_1005E3300();
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain_n();
    uint64_t v93 = (void *)swift_dynamicCastClass();
    if (!v93)
    {
      swift_bridgeObjectRelease();
      uint64_t v93 = _swiftEmptyArrayStorage;
    }
    uint64_t v94 = v93[2];
    swift_release();
    if (v94 == 7)
    {
      uint64_t v39 = (char *)swift_dynamicCastClass();
      if (!v39)
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = (char *)_swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_10000566C(&qword_100709FB0);
      uint64_t v39 = (char *)swift_allocObject();
      size_t v135 = j__malloc_size(v39);
      *((void *)v39 + 2) = 7;
      *((void *)v39 + 3) = 2 * ((uint64_t)(v135 - 32) / 24);
      uint64_t v136 = v39 + 32;
      unint64_t v137 = (unint64_t)&v156[3 * v92];
      if (v137 - 168 < (unint64_t)(v39 + 200) && (unint64_t)v136 < v137) {
        goto LABEL_69;
      }
      long long v139 = *(_OWORD *)(v137 - 168);
      long long v140 = *(_OWORD *)(v137 - 136);
      *((_OWORD *)v39 + 3) = *(_OWORD *)(v137 - 152);
      *((_OWORD *)v39 + 4) = v140;
      *uint64_t v136 = v139;
      long long v141 = *(_OWORD *)(v137 - 120);
      long long v142 = *(_OWORD *)(v137 - 104);
      long long v143 = *(_OWORD *)(v137 - 72);
      *((_OWORD *)v39 + 7) = *(_OWORD *)(v137 - 88);
      *((_OWORD *)v39 + 8) = v143;
      *((_OWORD *)v39 + 5) = v141;
      *((_OWORD *)v39 + 6) = v142;
      long long v144 = *(_OWORD *)(v137 - 56);
      long long v145 = *(_OWORD *)(v137 - 40);
      long long v146 = *(_OWORD *)(v137 - 24);
      *((void *)v39 + 24) = *(void *)(v137 - 8);
      *((_OWORD *)v39 + 10) = v145;
      *((_OWORD *)v39 + 11) = v146;
      *((_OWORD *)v39 + 9) = v144;
    }
    swift_bridgeObjectRelease();
    unint64_t v32 = *((void *)v39 + 2);
    swift_bridgeObjectRelease();
    if (v32 < 2) {
      goto LABEL_14;
    }
    uint64_t v36 = 0;
    uint64_t v95 = (char *)(v32 >> 1);
    uint64_t v96 = (char *)(v32 - 1);
    a4 = 24 * v32 + 25;
    uint64_t v97 = 32;
    unint64_t v182 = v32 >> 1;
    while (1)
    {
      if (v36 == v96) {
        goto LABEL_26;
      }
      unint64_t v100 = *((void *)v39 + 2);
      if ((unint64_t)v36 >= v100) {
        break;
      }
      if ((unint64_t)v96 >= v100) {
        goto LABEL_65;
      }
      LODWORD(v188) = *(_DWORD *)&v39[v97];
      unint64_t v187 = *(void *)&v39[v97 + 8];
      int v186 = v39[v97 + 16];
      a3 = v39[v97 + 17];
      int v101 = *(_DWORD *)&v39[a4 - 17];
      uint64_t v102 = *(void *)&v39[a4 - 9];
      unint64_t v32 = v39[a4 - 1];
      uint64_t v103 = v39;
      char v104 = v39[a4];
      unint64_t v26 = (unint64_t)v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = (unint64_t)sub_100093418((void *)v26);
      }
      uint64_t v98 = (void *)(v26 + v97);
      *(_DWORD *)uint64_t v98 = v101;
      v98[1] = v102;
      *((unsigned char *)v98 + 16) = v32;
      *((unsigned char *)v98 + 17) = v104;
      uint64_t v39 = (char *)v26;
      uint64_t v99 = (unsigned char *)(v26 + a4);
      *(_DWORD *)(v99 - 17) = v188;
      *(void *)(v99 - 9) = v187;
      *(v99 - 1) = v186;
      *uint64_t v99 = a3;
      uint64_t v95 = (char *)v182;
LABEL_26:
      ++v36;
      --v96;
      a4 -= 24;
      v97 += 24;
      if (v95 == v36) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    swift_once();
  }
  swift_bridgeObjectRetain();
LABEL_60:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100007A48(v158, &qword_100709E38);
  uint64_t v148 = v159;
LABEL_61:
  uint64_t result = sub_10003B34C((uint64_t)v148, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  uint64_t v149 = v160;
  *(_OWORD *)uint64_t v160 = 0u;
  *(_OWORD *)(v149 + 16) = 0u;
  *(void *)(v149 + 32) = 0;
  return result;
}

double sub_100035560@<D0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(uint64_t), uint64_t a13, uint64_t a14)
{
  int v21 = a1 & 1;
  sub_100007780(a8);
  swift_retain();
  sub_10003105C(a3, a4, a5, a6, a7, a8, v21, a10, (uint64_t *)&v24, a11 & 0x101010101FFFF01);
  if (v25
    || (sub_100007A48((uint64_t)&v24, &qword_10070A2E8),
        sub_100034498(v21, a10, a3, a4, a6, a7, a11 & 0x101010101FFFF01, (uint64_t)&v24, a14, a2, a8, a12, a13, (unint64_t)&unk_1006BC0E8, (uint64_t)sub_10003E088, (uint64_t)sub_10003E08C), v25))
  {
    sub_100021BFC(&v24, (uint64_t)v26);
    sub_100021BFC(v26, a9);
  }
  else
  {
    sub_100007A48((uint64_t)&v24, &qword_10070A2E8);
    *(void *)(a9 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a9 = 0u;
    *(_OWORD *)(a9 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1000356F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  long long v52 = a3;
  uint64_t v51 = type metadata accessor for SearchMailbox();
  __chkstk_darwin(v51);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10000566C(&qword_10070A348);
  __chkstk_darwin(v55);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = _s19UserInitiatedSearchV5StateOMa(0);
  __chkstk_darwin(v66);
  uint64_t v56 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = _s19UserInitiatedSearchVMa(0);
  uint64_t v14 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v16 = (_DWORD *)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100709DE0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v17 = swift_bridgeObjectRetain();
  char v18 = sub_10003B79C(v17, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v20 = v14;
    uint64_t v47 = a6;
    uint64_t result = v57[19];
    v71[0] = result;
    uint64_t v21 = *(void *)(result + 16);
    if (!v21)
    {
LABEL_12:
      uint64_t v43 = (_OWORD *)v47;
      *(void *)(v47 + 32) = 0;
      *uint64_t v43 = 0u;
      v43[1] = 0u;
      return result;
    }
    uint64_t v22 = result + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v50 = v10 + 64;
    uint64_t v23 = *(void *)(v20 + 72);
    swift_bridgeObjectRetain();
    uint64_t v24 = (uint64_t)v56;
    uint64_t v48 = v23;
    uint64_t v49 = v16;
    while (1)
    {
      sub_10003DF50(v22, (uint64_t)v16, _s19UserInitiatedSearchVMa);
      sub_10003DF50((uint64_t)v16 + *(int *)(v65 + 20), v24, _s19UserInitiatedSearchV5StateOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10003B34C((uint64_t)v16, _s19UserInitiatedSearchVMa);
        sub_10003B34C(v24, _s19UserInitiatedSearchV5StateOMa);
      }
      else
      {
        unint64_t v25 = *(void *)v24;
        uint64_t v61 = *(void *)(v24 + 8);
        uint64_t v64 = *(void *)(v24 + 16);
        int v26 = *(unsigned __int8 *)(v24 + 24);
        int v27 = *v16;
        int v60 = *((_DWORD *)v57 + 43);
        uint64_t v28 = *v57;
        uint64_t v58 = v57[1];
        unint64_t v59 = v25;
        uint64_t v29 = v57[2];
        int v30 = *((_DWORD *)v57 + 6);
        int v62 = *(unsigned __int16 *)(v54 + 4);
        int v63 = v26;
        *((void *)v10 + 13) = &_swiftEmptySetSingleton;
        v10[112] = 0;
        uint64_t v31 = (uint64_t)v12;
        uint64_t v32 = v51;
        uint64_t v33 = &v10[*(int *)(v51 + 52)];
        *(void *)uint64_t v10 = 223;
        uint64_t v34 = sub_10000566C(&qword_100709E30);
        uint64_t v35 = v33;
        unint64_t v36 = v59;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 1, 1, v34);
        *((_DWORD *)v10 + 2) = v27;
        uint64_t v37 = v58;
        *((void *)v10 + 2) = v28;
        *((void *)v10 + 3) = v37;
        *((_WORD *)v10 + 16) = v60;
        *((void *)v10 + 5) = v29;
        *((_DWORD *)v10 + 12) = v30;
        *((void *)v10 + 7) = v32;
        uint64_t v12 = (char *)v31;
        LODWORD(v67[0]) = v27;
        v67[1] = v29;
        int v68 = v30;
        uint64_t v38 = v61;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_100008D7C(v36);
        sub_10003BB54();
        swift_bridgeObjectRetain();
        sub_1005E2BF0();
        *((void *)v10 + 15) = v36;
        *((void *)v10 + 16) = v38;
        *((void *)v10 + 17) = v64;
        v10[144] = v63;
        *(_WORD *)(v10 + 145) = v62;
        sub_10003DF50((uint64_t)v10, v31, (uint64_t (*)(void))type metadata accessor for SearchMailbox);
        uint64_t v39 = v55;
        uint64_t v40 = (void *)(v31 + *(int *)(v55 + 36));
        *uint64_t v40 = _swiftEmptyArrayStorage;
        v40[1] = _swiftEmptyArrayStorage;
        sub_10003B34C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SearchMailbox);
        uint64_t v69 = v39;
        uint64_t v41 = sub_10003C89C(&qword_10070A358, &qword_10070A348);
        uint64_t v70 = v41;
        char v42 = sub_100021E04(v67);
        sub_1000079E4(v31, (uint64_t)v42, &qword_10070A348);
        LOBYTE(v28) = v52(v67);
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v67);
        if (v28)
        {
          sub_10001D550((uint64_t)v71);
          int v44 = (uint64_t *)v47;
          *(void *)(v47 + 24) = v55;
          v44[4] = v41;
          unint64_t v45 = sub_100021E04(v44);
          sub_10001FDF0(v31, (uint64_t)v45, &qword_10070A348);
          sub_10000952C(v36);
          swift_bridgeObjectRelease();
          return sub_10003B34C((uint64_t)v49, _s19UserInitiatedSearchVMa);
        }
        sub_10000952C(v36);
        swift_bridgeObjectRelease();
        sub_100007A48(v31, &qword_10070A348);
        uint64_t v16 = v49;
        sub_10003B34C((uint64_t)v49, _s19UserInitiatedSearchVMa);
        uint64_t v24 = (uint64_t)v56;
        uint64_t v23 = v48;
      }
      v22 += v23;
      if (!--v21)
      {
        uint64_t result = sub_10001D550((uint64_t)v71);
        goto LABEL_12;
      }
    }
  }
  __break(1u);
  return result;
}

double sub_100035D24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, char a11, char a12, char a13, char a14)
{
  uint64_t v28 = a8;
  uint64_t v26 = a1;
  uint64_t v34 = a5;
  char v35 = a10 & 1;
  __int16 v36 = *(_WORD *)((char *)&a10 + 1);
  char v37 = HIBYTE(a10) & 1;
  char v38 = a11 & 1;
  char v39 = a12 & 1;
  char v40 = a13 & 1;
  char v41 = a14 & 1;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  sub_100030D7C(a2, a3, a4, a6, (void (*)(void *__return_ptr, uint64_t))sub_10003B3AC, (uint64_t)&v45);
  if (v46)
  {
    sub_100021BFC(&v45, a9);
  }
  else
  {
    uint64_t v25 = a9;
    uint64_t v17 = sub_100007A48((uint64_t)&v45, &qword_10070A2E8);
    __chkstk_darwin(v17);
    _OWORD v19[2] = v27;
    v19[3] = a5;
    v19[4] = v26;
    v19[5] = v28;
    int v20 = a10 & 0x1FFFF01;
    char v21 = a11 & 1;
    char v22 = a12 & 1;
    char v23 = a13 & 1;
    char v24 = a14 & 1;
    sub_100030998(v29, v30, v31, v32, v33, (void (*)(uint64_t))sub_10003B42C, (uint64_t)v19, (uint64_t)&v42);
    if (v43)
    {
      sub_100021BFC(&v42, (uint64_t)v44);
      sub_100021BFC(v44, v25);
    }
    else
    {
      sub_100007A48((uint64_t)&v42, &qword_10070A2E8);
      char v18 = (_OWORD *)v25;
      *(void *)(v25 + 32) = 0;
      double result = 0.0;
      *char v18 = 0u;
      v18[1] = 0u;
    }
  }
  return result;
}

uint64_t sub_100035F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a6;
  unint64_t v34 = a4 >> 8;
  uint64_t v10 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v14) = *(_DWORD *)(a1 + 172);
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = *(void *)(a1 + 16);
  int v18 = *(_DWORD *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 40);
  char v20 = *(unsigned char *)(a1 + 48);
  v36[0] = *(void *)a1;
  v36[1] = v16;
  __int16 v37 = v14;
  uint64_t v38 = v17;
  int v39 = v18;
  sub_10003DF50(a2, (uint64_t)v15, type metadata accessor for MessageBatches);
  uint64_t v21 = a3
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  uint64_t v22 = v21 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
  uint64_t v23 = type metadata accessor for MailboxSyncState();
  sub_10003DF50(v22 + *(int *)(v23 + 68), (uint64_t)v12, _s15MissingMessagesOMa);
  char v24 = v20 & 1;
  uint64_t v25 = *(unsigned int *)(v22 + 8);
  LOBYTE(v22) = *(unsigned char *)(v22 + 12);
  int v26 = *(unsigned __int8 *)(a5 + 4);
  LODWORD(a5) = *(unsigned __int8 *)(a5 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v35 = v22;
  unint64_t v27 = v25 | ((unint64_t)v22 << 32);
  if (a5) {
    int v28 = 256;
  }
  else {
    int v28 = 0;
  }
  uint64_t v29 = v33;
  sub_100159410((uint64_t)v36, (uint64_t)v15, (uint64_t)v12, v19, v24, v27, v34, v28 | v26, v33);
  Missinguint64_t Messages = type metadata accessor for FindMissingMessages(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(MissingMessages - 8) + 56))(v29, 0, 1, MissingMessages);
}

uint64_t sub_100036188@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v49 = a4;
  unint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v9 = type metadata accessor for FetchMessages.MissingUIDs(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v48 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s15MissingMessagesOMa(0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v46 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = type metadata accessor for MessageBatches(0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v20 = (char *)&v42 - v19;
  int v21 = *((_DWORD *)a1 + 43);
  uint64_t v23 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v44 = a1[2];
  int v24 = *((_DWORD *)a1 + 6);
  uint64_t v47 = a1[5];
  char v25 = *((unsigned char *)a1 + 48);
  *(void *)&long long v52 = v23;
  *((void *)&v52 + 1) = v22;
  __int16 v53 = v21;
  uint64_t v54 = v44;
  int v55 = v24;
  sub_10003DF50(a2, (uint64_t)&v42 - v19, type metadata accessor for MessageBatches);
  uint64_t v26 = a3
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  unint64_t v27 = (unsigned __int8 *)(v26 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20));
  uint64_t v28 = type metadata accessor for MailboxSyncState();
  sub_10003DF50((uint64_t)&v27[*(int *)(v28 + 68)], (uint64_t)v15, _s15MissingMessagesOMa);
  int v43 = v25 & 1;
  uint64_t v42 = v27[144];
  int v29 = v27[145];
  int v30 = v27[146];
  int v31 = v27[147];
  LODWORD(v27) = v27[148];
  LODWORD(v49) = *(unsigned __int8 *)(v49 + 1);
  uint64_t v32 = v45;
  sub_10003DF50((uint64_t)v20, v45, type metadata accessor for MessageBatches);
  uint64_t v33 = v46;
  sub_10003DF50((uint64_t)v15, v46, _s15MissingMessagesOMa);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v48;
  sub_100143434(v33, v48);
  char v35 = &_mh_execute_header;
  if (!v27) {
    char v35 = 0;
  }
  uint64_t v36 = 0x1000000;
  if (!v31) {
    uint64_t v36 = 0;
  }
  uint64_t v37 = 0x10000;
  if (!v30) {
    uint64_t v37 = 0;
  }
  uint64_t v38 = 256;
  if (!v29) {
    uint64_t v38 = 0;
  }
  uint64_t v39 = v51;
  sub_10014392C(&v52, v32, v34, v47, v43, v38 | v42 | v37 | v36 | (unint64_t)v35, v49, HIWORD(v50) & 1, v51);
  sub_10003B34C((uint64_t)v15, _s15MissingMessagesOMa);
  sub_10003B34C((uint64_t)v20, type metadata accessor for MessageBatches);
  uint64_t Messages = type metadata accessor for FetchMessages(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(Messages - 8) + 56))(v39, 0, 1, Messages);
}

uint64_t sub_100036504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(long long *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v108 = a1;
  unint64_t v105 = a6;
  uint64_t v106 = a8;
  uint64_t v103 = a9;
  uint64_t v104 = a7;
  uint64_t v102 = a5;
  uint64_t v107 = a4;
  uint64_t v11 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v11 - 8);
  unint64_t v100 = (uint64_t *)((char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for PendingServerResponses();
  __chkstk_darwin(v13 - 8);
  int v101 = (uint64_t *)((char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = a2 + 56;
  uint64_t v18 = a3 + 56;
  uint64_t v110 = a3;
  do
  {
    char v21 = v15;
    unsigned __int8 v22 = *((unsigned char *)&off_1006BA378 + v16 + 32);
    BOOL v23 = sub_100010180(v22, a2);
    char v20 = v109;
    if (!v23 || (BOOL v24 = sub_100010180(v22, a3), v20 = v109, v24))
    {
LABEL_21:
      if ((*(unsigned char *)(v106 + 2) & 1) == 0)
      {
        int v37 = *((_DWORD *)v20 + 43);
        long long v38 = *((_OWORD *)v20 + 1);
        long long v135 = *(_OWORD *)v20;
        long long v136 = v38;
        long long v39 = *((_OWORD *)v20 + 3);
        long long v137 = *((_OWORD *)v20 + 2);
        long long v138 = v39;
        v139[0] = *((_OWORD *)v20 + 4);
        *(_OWORD *)((char *)v139 + 9) = *(_OWORD *)((char *)v20 + 73);
        uint64_t v96 = v135;
        uint64_t v97 = v136;
        long long v140 = v135;
        __int16 v141 = v37;
        uint64_t v142 = v136;
        int v143 = DWORD2(v136);
        uint64_t v99 = MailboxOfInterest.highestModificationSequenceValue.getter();
        int v98 = v40 & 1;
        uint64_t v41 = v108
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        uint64_t v42 = v41 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
        uint64_t v95 = *(void *)(v42 + 24);
        LODWORD(v94) = *(unsigned __int8 *)(v42 + 32);
        uint64_t v43 = type metadata accessor for MailboxSyncState();
        uint64_t v44 = v101;
        sub_10003DF50(v42 + *(int *)(v43 + 48), (uint64_t)v101, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
        uint64_t v45 = v44[3];
        uint64_t v46 = v44[4];
        sub_10003BCDC(v44, v45);
        uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v48 = v47(v45, v46);
        uint64_t v49 = v106;
        uint64_t v50 = v48;
        sub_10003B34C((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
        sub_1001A4A80((uint64_t)&v140, v99, v98, v95, v94, v50, *(unsigned char *)(v49 + 1), (uint64_t)&v119);
        if ((void)v119)
        {
          LOBYTE(v134[1]) = v126[1];
          long long v133 = v125;
          v134[0] = v126[0];
          long long v129 = v121;
          long long v130 = v122;
          long long v131 = v123;
          long long v132 = v124;
          long long v127 = v119;
          long long v128 = v120;
          __chkstk_darwin(v51);
          uint64_t v52 = v110;
          uint64_t v53 = v107;
          uint64_t v55 = v104;
          uint64_t v54 = v105;
          sub_1000320A8(a2, v110, v107, (uint64_t (*)(void *))v105, (void (*)(void *__return_ptr, uint64_t))sub_10003C18C, (uint64_t)&v117);
          if (v118)
          {
            sub_10003C198((uint64_t)&v127);
LABEL_51:
            sub_100021BFC(&v117, (uint64_t)&v119);
            uint64_t v73 = &v119;
            return sub_100021BFC(v73, v103);
          }
          sub_100007A48((uint64_t)&v117, &qword_10070A2E8);
          sub_100037250(a2, v52, v53, v109, v108, v102, v106, v54, (uint64_t)&v111, v55);
          sub_10003C198((uint64_t)&v127);
          if (v112)
          {
            sub_100021BFC(&v111, (uint64_t)v113);
            uint64_t v73 = (long long *)v113;
            return sub_100021BFC(v73, v103);
          }
          uint64_t v56 = &v111;
LABEL_27:
          uint64_t result = sub_100007A48((uint64_t)v56, &qword_10070A2E8);
          uint64_t v58 = (_OWORD *)v103;
          *(void *)(v103 + 32) = 0;
          _OWORD *v58 = 0u;
          v58[1] = 0u;
          return result;
        }
        sub_100007A48((uint64_t)&v119, &qword_10070A408);
        a3 = v110;
      }
      uint64_t v59 = sub_100010180(4u, a2);
      if (v59)
      {
        uint64_t v59 = sub_100010180(4u, a3);
        uint64_t v60 = v108;
        if ((v59 & 1) == 0)
        {
          uint64_t v61 = 0;
          while (*(void *)(a2 + 16))
          {
            Swift::UInt v62 = *((unsigned __int8 *)&off_1006B9EB0 + v61 + 32);
            sub_1005E33F0();
            sub_1005E3410(v62);
            Swift::Int v63 = sub_1005E3470();
            uint64_t v60 = v108;
            uint64_t v64 = -1 << *(unsigned char *)(a2 + 32);
            unint64_t v65 = v63 & ~v64;
            if (((*(void *)(v17 + ((v65 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v65) & 1) == 0) {
              break;
            }
            uint64_t v66 = *(void *)(a2 + 48);
            if (*(unsigned __int8 *)(v66 + v65) != v62)
            {
              uint64_t v67 = ~v64;
              do
              {
                unint64_t v65 = (v65 + 1) & v67;
                if (((*(void *)(v17 + ((v65 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v65) & 1) == 0) {
                  goto LABEL_49;
                }
              }
              while (*(unsigned __int8 *)(v66 + v65) != v62);
            }
            if (*(void *)(v110 + 16))
            {
              sub_1005E33F0();
              sub_1005E3410(v62);
              Swift::Int v68 = sub_1005E3470();
              uint64_t v60 = v108;
              uint64_t v69 = -1 << *(unsigned char *)(v110 + 32);
              unint64_t v70 = v68 & ~v69;
              if ((*(void *)(v18 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70))
              {
                uint64_t v71 = *(void *)(v110 + 48);
                if (*(unsigned __int8 *)(v71 + v70) == v62) {
                  break;
                }
                uint64_t v72 = ~v69;
                while (1)
                {
                  unint64_t v70 = (v70 + 1) & v72;
                  if (((*(void *)(v18 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70) & 1) == 0) {
                    break;
                  }
                  if (*(unsigned __int8 *)(v71 + v70) == v62) {
                    goto LABEL_49;
                  }
                }
              }
            }
            if (++v61 == 15)
            {
              uint64_t v59 = sub_100010180(4u, v107);
              uint64_t v60 = v108;
              if (v59) {
                goto LABEL_53;
              }
              break;
            }
          }
LABEL_49:
          __int16 v74 = *((_DWORD *)v109 + 43);
          uint64_t v75 = v109[1];
          uint64_t v76 = v109[2];
          uint64_t v93 = *v109;
          uint64_t v94 = v76;
          int v77 = *((_DWORD *)v109 + 6);
          uint64_t v99 = v109[5];
          int v98 = *((unsigned __int8 *)v109 + 48);
          v113[0] = v93;
          v113[1] = v75;
          __int16 v114 = v74;
          uint64_t v115 = v76;
          int v116 = v77;
          uint64_t v78 = v60
              + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
          uint64_t v96 = v60
              + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
          swift_beginAccess();
          uint64_t v95 = _s13SelectedStateV7WrappedVMa(0);
          uint64_t v79 = (uint64_t *)(v78 + *(int *)(v95 + 20));
          uint64_t v97 = *v79;
          uint64_t v80 = (uint64_t)v79 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
          uint64_t v81 = *(void *)(v80 + 40);
          char v82 = *(unsigned char *)(v80 + 48);
          uint64_t v83 = v101;
          sub_10003DF50(v80, (uint64_t)v101, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
          uint64_t v84 = v83[3];
          uint64_t v85 = v83[4];
          sub_10003BCDC(v83, v84);
          uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t))(v85 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10003C120(v81, v82);
          uint64_t v87 = v85;
          uint64_t v88 = v106;
          uint64_t v89 = v86(v84, v87);
          sub_10003B34C((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
          LOBYTE(v84) = *(unsigned char *)(v88 + 1);
          LOBYTE(v86) = *(unsigned char *)(v96 + *(int *)(v95 + 20) + 32);
          uint64_t v90 = v100;
          sub_10003DF50(v102, (uint64_t)v100, type metadata accessor for MessageBatches);
          sub_10010DB34((uint64_t)v113, v97, v81, v82, v89, v84, (char)v86, &v119, v90, v99, v98 & 1);
          if ((void)v119)
          {
            long long v133 = v125;
            v134[0] = v126[0];
            *(_OWORD *)((char *)v134 + 13) = *(_OWORD *)((char *)v126 + 13);
            long long v129 = v121;
            long long v130 = v122;
            long long v131 = v123;
            long long v132 = v124;
            long long v127 = v119;
            long long v128 = v120;
            __chkstk_darwin(v91);
            sub_100031DC8(a2, v110, v107, (uint64_t (*)(void *))v105, (void (*)(void *__return_ptr, uint64_t))sub_10003C12C, (uint64_t)&v117);
            sub_10003C138((uint64_t)&v127);
            if (v118) {
              goto LABEL_51;
            }
            uint64_t v56 = &v117;
            goto LABEL_27;
          }
          uint64_t v59 = sub_100007A48((uint64_t)&v119, &qword_10070A400);
        }
      }
LABEL_53:
      __chkstk_darwin(v59);
      sub_100031AD4(a2, v92, v107, (uint64_t (*)(void *))v105, (void (*)(void *__return_ptr, uint64_t))sub_10003C114, (uint64_t)&v119);
      if (*((void *)&v120 + 1)) {
        goto LABEL_54;
      }
LABEL_26:
      uint64_t v56 = &v119;
      goto LABEL_27;
    }
    uint64_t v25 = 0;
    while (*(void *)(a2 + 16))
    {
      Swift::UInt v26 = *((unsigned __int8 *)&off_1006BA3A0 + v25 + 32);
      sub_1005E33F0();
      sub_1005E3410(v26);
      Swift::Int v27 = sub_1005E3470();
      a3 = v110;
      uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v29 = v27 & ~v28;
      if (((*(void *)(v17 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
        break;
      }
      uint64_t v30 = *(void *)(a2 + 48);
      if (*(unsigned __int8 *)(v30 + v29) != v26)
      {
        uint64_t v31 = ~v28;
        do
        {
          unint64_t v29 = (v29 + 1) & v31;
          if (((*(void *)(v17 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
            goto LABEL_3;
          }
        }
        while (*(unsigned __int8 *)(v30 + v29) != v26);
      }
      if (*(void *)(v110 + 16))
      {
        sub_1005E33F0();
        sub_1005E3410(v26);
        Swift::Int v32 = sub_1005E3470();
        a3 = v110;
        uint64_t v33 = -1 << *(unsigned char *)(v110 + 32);
        unint64_t v34 = v32 & ~v33;
        if ((*(void *)(v18 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
        {
          uint64_t v35 = *(void *)(v110 + 48);
          if (*(unsigned __int8 *)(v35 + v34) == v26) {
            break;
          }
          uint64_t v36 = ~v33;
          while (1)
          {
            unint64_t v34 = (v34 + 1) & v36;
            if (((*(void *)(v18 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v35 + v34) == v26) {
              goto LABEL_3;
            }
          }
        }
      }
      if (++v25 == 15)
      {
        BOOL v19 = sub_100010180(v22, v107);
        char v20 = v109;
        if (v19) {
          goto LABEL_21;
        }
        break;
      }
    }
LABEL_3:
    char v15 = 1;
    uint64_t v16 = &_mh_execute_header.magic + 1;
  }
  while ((v21 & 1) == 0);
  sub_100037250(a2, a3, v107, v109, v108, v102, v106, v105, (uint64_t)&v119, v104);
  if (!*((void *)&v120 + 1)) {
    goto LABEL_26;
  }
LABEL_54:
  sub_100021BFC(&v119, (uint64_t)&v127);
  uint64_t v73 = &v127;
  return sub_100021BFC(v73, v103);
}

uint64_t sub_100036F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a1 + 172);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7) {
    int v8 = *(_DWORD *)(v6 + 8 * v7 + 24);
  }
  else {
    int v8 = 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  int v11 = *(_DWORD *)(a1 + 24);
  v15[0] = *(void *)a1;
  v15[1] = v9;
  __int16 v16 = v5;
  uint64_t v17 = v10;
  int v18 = v11;
  if (*(unsigned char *)(a3 + 5)) {
    __int16 v12 = 256;
  }
  else {
    __int16 v12 = 0;
  }
  __int16 v13 = v12 | *(unsigned __int8 *)(a3 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1000F9E18((uint64_t)v15, v8, 1000000, 0, v13, a4);
}

uint64_t sub_100036FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *(_DWORD *)(a1 + 172);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7) {
    unsigned int v8 = *(_DWORD *)(v6 + 8 * v7 + 24);
  }
  else {
    unsigned int v8 = 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  int v11 = *(_DWORD *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 40);
  char v13 = *(unsigned char *)(a1 + 48);
  v17[0] = *(void *)a1;
  v17[1] = v9;
  __int16 v18 = v5;
  uint64_t v19 = v10;
  char v14 = v13 & 1;
  uint64_t v15 = (a3 >> 40) & 1;
  int v20 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1001A34BC((uint64_t)v17, v8, v15, v12, v14, a4);
}

uint64_t sub_100037094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a6;
  uint64_t v11 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v12) = *(_DWORD *)(a1 + 172);
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  int v16 = *(_DWORD *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 40);
  char v18 = *(unsigned char *)(a1 + 48);
  *(void *)&long long v36 = *(void *)a1;
  *((void *)&v36 + 1) = v14;
  __int16 v37 = v12;
  uint64_t v38 = v15;
  int v39 = v16;
  sub_10003DF50(a2, (uint64_t)v13, type metadata accessor for MessageBatches);
  uint64_t v19 = *(uint64_t (**)(uint64_t))(a1 + 152);
  uint64_t v20 = a3
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  char v21 = (unsigned __int8 *)(v20 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20));
  uint64_t v22 = v21[144];
  int v23 = v21[145];
  int v24 = v21[146];
  int v25 = v21[147];
  int v26 = *(unsigned __int8 *)(a4 + 1);
  BOOL v27 = v21[148] == 0;
  uint64_t v28 = &_mh_execute_header;
  if (v27) {
    uint64_t v28 = 0;
  }
  BOOL v27 = v25 == 0;
  uint64_t v29 = 0x1000000;
  if (v27) {
    uint64_t v29 = 0;
  }
  BOOL v27 = v24 == 0;
  uint64_t v30 = 0x10000;
  if (v27) {
    uint64_t v30 = 0;
  }
  BOOL v27 = v23 == 0;
  uint64_t v31 = 256;
  if (v27) {
    uint64_t v31 = 0;
  }
  unint64_t v32 = v31 | v22 | v30 | v29 | (unint64_t)v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_10014BA6C(&v36, (uint64_t)v13, v19, v17, v18 & 1, v32, v26, HIWORD(a5) & 1, v35);
}

double sub_100037250@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(long long *)@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  Swift::UInt v62 = a8;
  uint64_t v63 = a9;
  uint64_t v64 = a6;
  uint64_t v65 = a3;
  uint64_t v60 = a5;
  uint64_t v61 = a10;
  uint64_t v14 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v59 = (void *)((char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100010180(2u, a1);
  if (v16)
  {
    uint64_t v16 = sub_100010180(2u, a2);
    if ((v16 & 1) == 0)
    {
      unint64_t v58 = 15;
      uint64_t v17 = 0;
      uint64_t v18 = a1 + 56;
      uint64_t v19 = a2 + 56;
      while (*(void *)(a1 + 16))
      {
        Swift::UInt v20 = *((unsigned __int8 *)&off_1006B9EB0 + v17 + 32);
        uint64_t v21 = v19;
        sub_1005E33F0();
        sub_1005E3410(v20);
        Swift::Int v22 = sub_1005E3470();
        uint64_t v23 = -1 << *(unsigned char *)(a1 + 32);
        unint64_t v24 = v22 & ~v23;
        if (((*(void *)(v18 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
          break;
        }
        uint64_t v19 = v21;
        uint64_t v25 = *(void *)(a1 + 48);
        if (*(unsigned __int8 *)(v25 + v24) != v20)
        {
          uint64_t v26 = ~v23;
          do
          {
            unint64_t v24 = (v24 + 1) & v26;
            if (((*(void *)(v18 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
              goto LABEL_19;
            }
          }
          while (*(unsigned __int8 *)(v25 + v24) != v20);
        }
        if (*(void *)(a2 + 16))
        {
          sub_1005E33F0();
          sub_1005E3410(v20);
          Swift::Int v27 = sub_1005E3470();
          uint64_t v19 = v21;
          uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v29 = v27 & ~v28;
          if ((*(void *)(v21 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
          {
            uint64_t v30 = *(void *)(a2 + 48);
            if (*(unsigned __int8 *)(v30 + v29) == v20) {
              break;
            }
            uint64_t v31 = ~v28;
            while (1)
            {
              unint64_t v29 = (v29 + 1) & v31;
              if (((*(void *)(v21 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v30 + v29) == v20) {
                goto LABEL_19;
              }
            }
          }
        }
        if (++v17 == v58)
        {
          uint64_t v16 = sub_100010180(2u, v65);
          if (v16) {
            goto LABEL_26;
          }
          break;
        }
      }
LABEL_19:
      __int16 v32 = *((_DWORD *)a4 + 43);
      uint64_t v34 = *a4;
      uint64_t v33 = a4[1];
      int v35 = *((_DWORD *)a4 + 6);
      unint64_t v36 = a4[5];
      uint64_t v57 = a4[2];
      unint64_t v58 = v36;
      char v37 = *((unsigned char *)a4 + 48);
      v76[0] = v34;
      v76[1] = v33;
      __int16 v77 = v32;
      uint64_t v78 = v57;
      uint64_t v38 = v60
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      int v79 = v35;
      swift_beginAccess();
      int v39 = (uint64_t *)(v38 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20));
      uint64_t v60 = *v39;
      char v40 = (char *)v39 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
      uint64_t v41 = *((void *)v40 + 5);
      char v42 = v40[48];
      uint64_t v43 = v59;
      sub_10003DF50(v64, (uint64_t)v59, type metadata accessor for MessageBatches);
      int v56 = v37 & 1;
      __int16 v44 = *(unsigned __int8 *)(a7 + 4);
      v55[1] = a7;
      int v45 = *(unsigned __int8 *)(a7 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10003C120(v41, v42);
      if (v45) {
        __int16 v46 = 256;
      }
      else {
        __int16 v46 = 0;
      }
      sub_100110D6C((uint64_t)v76, v60, v41, v42, v43, v58, v56, v46 | v44, &v68);
      if ((void)v68)
      {
        v75[4] = v72;
        v75[5] = v73;
        v75[6] = v74;
        v75[0] = v68;
        v75[1] = v69;
        v75[2] = v70;
        v75[3] = v71;
        __chkstk_darwin(v47);
        v55[-2] = v75;
        sub_100031818(a1, a2, v65, v62, (void (*)(void *__return_ptr, uint64_t))sub_10003C1F8, (uint64_t)&v66);
        sub_10003C204((uint64_t)v75);
        if (v67)
        {
          sub_100021BFC(&v66, (uint64_t)&v68);
          uint64_t v48 = &v68;
LABEL_28:
          sub_100021BFC(v48, v63);
          return result;
        }
        uint64_t v53 = &v66;
        goto LABEL_30;
      }
      uint64_t v16 = sub_100007A48((uint64_t)&v68, &qword_10070A410);
    }
  }
LABEL_26:
  __chkstk_darwin(v16);
  uint64_t v50 = v64;
  uint64_t v49 = v65;
  v55[-4] = a4;
  v55[-3] = v50;
  v55[-2] = v51;
  sub_100031544(a1, a2, v49, v62, (void (*)(void *__return_ptr, uint64_t))sub_10003C1EC, (uint64_t)&v68);
  if (*((void *)&v69 + 1))
  {
    sub_100021BFC(&v68, (uint64_t)v75);
    uint64_t v48 = v75;
    goto LABEL_28;
  }
  uint64_t v53 = &v68;
LABEL_30:
  sub_100007A48((uint64_t)v53, &qword_10070A2E8);
  uint64_t v54 = (_OWORD *)v63;
  *(void *)(v63 + 32) = 0;
  double result = 0.0;
  *uint64_t v54 = 0u;
  v54[1] = 0u;
  return result;
}

uint64_t sub_100037710@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v9) = *((_DWORD *)a1 + 43);
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = a1[2];
  int v14 = *((_DWORD *)a1 + 6);
  unint64_t v15 = a1[5];
  char v16 = *((unsigned char *)a1 + 48);
  v21[0] = v12;
  v21[1] = v11;
  __int16 v22 = v9;
  uint64_t v23 = v13;
  int v24 = v14;
  sub_10003DF50(a2, (uint64_t)v10, type metadata accessor for MessageBatches);
  if (*(unsigned char *)(a3 + 5)) {
    __int16 v17 = 256;
  }
  else {
    __int16 v17 = 0;
  }
  __int16 v18 = v17 | *(unsigned __int8 *)(a3 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_10010F4EC((uint64_t)v21, (uint64_t)v10, v15, v16 & 1, v18, a4);
}

uint64_t sub_100037830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for MessageBatches(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOWORD(v11) = *(_DWORD *)(a1 + 172);
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  int v15 = *(_DWORD *)(a1 + 24);
  unint64_t v16 = *(void *)(a1 + 40);
  char v17 = *(unsigned char *)(a1 + 48);
  v21[0] = *(void *)a1;
  v21[1] = v13;
  __int16 v22 = v11;
  uint64_t v23 = v14;
  int v24 = v15;
  uint64_t v18 = a3
      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  LOBYTE(a2) = *(unsigned char *)(a2 + 1);
  swift_beginAccess();
  LOBYTE(a1) = *(unsigned char *)(v18 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20) + 32);
  sub_10003DF50(a4, (uint64_t)v12, type metadata accessor for MessageBatches);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100106144((uint64_t)v21, a2, a1, (uint64_t)v12, v16, v17 & 1, a5);
}

unint64_t sub_100037988(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    if (v1 >= 5)
    {
      unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int8x16_t v5 = (int8x16_t)vdupq_n_s64(v2);
      uint64_t v6 = (uint64x2_t *)(a1 + 56);
      unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      int8x16_t v8 = v5;
      do
      {
        int8x16_t v5 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v5, v6[-1]), v5, (int8x16_t)v6[-1]);
        int8x16_t v8 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v8, *v6), v8, *(int8x16_t *)v6);
        v6 += 2;
        v7 -= 4;
      }
      while (v7);
      int8x16_t v9 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v5, (uint64x2_t)v8), v5, v8);
      unint64_t v10 = vextq_s8(v9, v9, 8uLL).u64[0];
      unint64_t v2 = (unint64_t)vbsl_s8((int8x8_t)vcgtd_u64(v9.u64[0], v10), *(int8x8_t *)v9.i8, (int8x8_t)v10);
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL)) {
        return v2;
      }
    }
    else
    {
      unint64_t v4 = 1;
    }
    unint64_t v11 = v1 - v4;
    uint64_t v12 = (unint64_t *)(a1 + 8 * v4 + 32);
    do
    {
      unint64_t v14 = *v12++;
      unint64_t v13 = v14;
      if (v2 <= v14) {
        unint64_t v2 = v13;
      }
      --v11;
    }
    while (v11);
  }
  return v2;
}

uint64_t sub_100037A3C()
{
  void (*v2)(uint64_t *__return_ptr, uint64_t *);
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  void *(*v32)(uint64_t *__return_ptr, uint64_t *);
  void (*v33)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(uint64_t *);
  void (*v37)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v38;
  uint64_t v39;
  unsigned __int16 v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int16 v49;
  unsigned __int8 v50;
  void v51[2];

  uint64_t v1 = v0[2];
  unint64_t v36 = (uint64_t (*)(uint64_t *))v0[3];
  char v37 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[1];
  unint64_t v2 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[5];
  v51[0] = *v0;
  __int16 v32 = (void *(*)(uint64_t *__return_ptr, uint64_t *))v0[7];
  uint64_t v33 = v2;
  uint64_t v34 = v51[0];
  unint64_t v3 = *(void *)(v51[0] + 16);
  sub_10002292C((uint64_t)v51);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v3)
  {
    unint64_t v4 = 0;
    int8x16_t v5 = v34 + 32;
    while (1)
    {
      uint64_t v6 = v4 + 1;
      unint64_t v7 = *(unsigned char *)(v5 + 32);
      int8x16_t v9 = *(void *)(v5 + 16);
      int8x16_t v8 = *(void *)(v5 + 24);
      unint64_t v10 = *(void *)(v5 + 8);
      LODWORD(v42) = *(_DWORD *)v5;
      uint64_t v43 = v10;
      __int16 v44 = v9;
      int v45 = v8;
      __int16 v46 = v7;
      sub_100008D24(v10, v9);
      swift_bridgeObjectRetain();
      v37(&v38, &v42);
      sub_1000094D4(v10, v9);
      swift_bridgeObjectRelease();
      unint64_t v11 = v38;
      uint64_t v12 = v39;
      unint64_t v13 = v41;
      unint64_t v14 = v40;
      uint64_t v47 = v38;
      uint64_t v48 = v39;
      uint64_t v50 = v41;
      uint64_t v49 = v40;
      if (v36(&v47)) {
        break;
      }
      v5 += 40;
      ++v4;
      if (v3 == v6) {
        goto LABEL_5;
      }
    }
    char v42 = v11;
    uint64_t v43 = v12;
    LOWORD(v44) = v14;
    BYTE2(v44) = (v14 | (v13 << 16)) >> 16;
    v33(&v47, &v42);
    LODWORD(v42) = v47;
    uint64_t v43 = v48;
    LOWORD(v44) = v49;
    BYTE2(v44) = v50;
    double result = (uint64_t)v32(&v47, &v42);
    int v15 = v47;
    if (v3 - 1 != v4)
    {
      char v17 = v34 + 32;
      uint64_t v31 = v34 + 32;
      do
      {
        if (v6 <= v3) {
          uint64_t v18 = v3;
        }
        else {
          uint64_t v18 = v6;
        }
        int v35 = v18;
        uint64_t v19 = v17 + 40 * v6;
        while (1)
        {
          if (v35 == v6)
          {
            __break(1u);
            return result;
          }
          Swift::UInt v20 = v6 + 1;
          uint64_t v21 = *(unsigned char *)(v19 + 32);
          uint64_t v23 = *(void *)(v19 + 16);
          __int16 v22 = *(void *)(v19 + 24);
          int v24 = *(void *)(v19 + 8);
          LODWORD(v42) = *(_DWORD *)v19;
          uint64_t v43 = v24;
          __int16 v44 = v23;
          int v45 = v22;
          __int16 v46 = v21;
          sub_100008D24(v24, v23);
          swift_bridgeObjectRetain();
          uint64_t v25 = v1;
          v37(&v38, &v42);
          sub_1000094D4(v24, v23);
          swift_bridgeObjectRelease();
          uint64_t v26 = v38;
          Swift::Int v27 = v39;
          uint64_t v28 = v41;
          unint64_t v29 = v40;
          uint64_t v47 = v38;
          uint64_t v48 = v39;
          uint64_t v50 = v41;
          uint64_t v49 = v40;
          double result = v36(&v47);
          if (result) {
            break;
          }
          v19 += 40;
          ++v6;
          uint64_t v1 = v25;
          if (v3 == v20)
          {
            int v15 = v15;
            goto LABEL_21;
          }
        }
        char v42 = v26;
        uint64_t v43 = v27;
        LOWORD(v44) = v29;
        BYTE2(v44) = (v29 | (v28 << 16)) >> 16;
        v33(&v47, &v42);
        LODWORD(v42) = v47;
        uint64_t v43 = v48;
        LOWORD(v44) = v49;
        BYTE2(v44) = v50;
        double result = (uint64_t)v32(&v47, &v42);
        if (v15 <= v47) {
          int v15 = v47;
        }
        else {
          int v15 = v15;
        }
        char v17 = v31;
        uint64_t v30 = v3 - 1 == v6++;
        uint64_t v1 = v25;
      }
      while (!v30);
    }
LABEL_21:
    sub_10001D550((uint64_t)v51);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
LABEL_5:
    sub_10001D550((uint64_t)v51);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return 5;
  }
  return v15;
}

uint64_t sub_100037DE8(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 24 * v2 + 25;
  uint64_t v7 = 4;
  unint64_t v16 = v2 >> 1;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_5;
    }
    unint64_t v10 = v1[2];
    if (v3 >= v10) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_12;
    }
    int v19 = v1[v7];
    uint64_t v18 = v1[v7 + 1];
    char v17 = v1[v7 + 2];
    char v11 = BYTE1(v1[v7 + 2]);
    int v12 = *(_DWORD *)((char *)v1 + v6 - 17);
    uint64_t v13 = *(void *)((char *)v1 + v6 - 9);
    char v14 = *((unsigned char *)v1 + v6 - 1);
    char v15 = *((unsigned char *)v1 + v6);
    double result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      double result = (uint64_t)sub_100093418(v1);
      uint64_t v1 = (void *)result;
    }
    int8x16_t v8 = &v1[v7];
    *(_DWORD *)int8x16_t v8 = v12;
    v8[1] = v13;
    *((unsigned char *)v8 + 16) = v14;
    *((unsigned char *)v8 + 17) = v15;
    int8x16_t v9 = (char *)v1 + v6;
    *(_DWORD *)(v9 - 17) = v19;
    *(void *)(v9 - 9) = v18;
    *(v9 - 1) = v17;
    *int8x16_t v9 = v11;
    unint64_t v4 = v16;
LABEL_5:
    ++v3;
    --v5;
    v6 -= 24;
    v7 += 3;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100037F28(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 3; ; --i)
  {
    if (v3 == i - 4) {
      goto LABEL_5;
    }
    unint64_t v6 = v1[2];
    if (v3 >= v6) {
      break;
    }
    if (i - 4 >= v6) {
      goto LABEL_12;
    }
    uint64_t v7 = v1[v3 + 4];
    uint64_t v8 = v1[i];
    double result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      double result = (uint64_t)sub_10009342C(v1);
      uint64_t v1 = (void *)result;
    }
    v1[v3 + 4] = v8;
    v1[i] = v7;
LABEL_5:
    if (v4 == ++v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100037FE4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  void (*v5)(uint64_t *__return_ptr, char **);
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char v33;
  uint64_t (*v34)(uint64_t *);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  int v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  char v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  uint64_t result;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t *__return_ptr, char **);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t (*v89)(uint64_t *);
  void (*v90)(uint64_t *__return_ptr, char **);
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int16 v95;
  unsigned __int8 v96;
  uint64_t v97[2];
  unsigned __int16 v98;
  unsigned __int8 v99;
  uint64_t v100;
  char *v101;
  void (*v102)(void *__return_ptr, void);
  unint64_t v103;
  uint64_t (*v104)(uint64_t *);
  uint64_t v105;
  void (*v106)(uint64_t *__return_ptr, char **);
  uint64_t v107;
  uint64_t (*v108)@<X0>(uint64_t@<X0>, unsigned char *@<X8>);
  uint64_t v109;

  uint64_t v84 = *a3;
  unint64_t v5 = (void (*)(uint64_t *__return_ptr, char **))a3[1];
  unint64_t v6 = a3[2];
  uint64_t v89 = (uint64_t (*)(uint64_t *))a3[3];
  uint64_t v90 = v5;
  uint64_t v92 = a3[4];
  uint64_t v85 = (void (*)(uint64_t *__return_ptr, char **))a3[5];
  int v79 = a3;
  uint64_t v87 = a3[6];
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v7);
  uint64_t v88 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10000566C(&qword_10070A378);
  __chkstk_darwin(v86);
  unint64_t v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *a1;
  sub_1000079E4(a2, (uint64_t)v10, &qword_100709E38);
  swift_bridgeObjectRetain();
  int v12 = MessageIdentifierSet.startIndex.getter(v7);
  char v14 = v13;
  uint64_t v81 = 0;
  while (v12 != MessageIdentifierSet.endIndex.getter(v7) || v14 != v20)
  {
    MessageIdentifierSet.subscript.getter();
    char v15 = v101;
    MessageIdentifierSet.index(_:offsetBy:)();
    int v12 = v16;
    char v14 = v17;
    uint64_t v18 = sub_100024260(v15);
    if (v19)
    {
      uint64_t v21 = v18;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int v101 = (char *)v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10009795C();
        char v11 = (uint64_t)v101;
      }
      sub_1000960D0(v21, v11);
      swift_bridgeObjectRelease();
    }
  }
  char v82 = a1;
  uint64_t v83 = a2;
  uint64_t v23 = v84;
  unint64_t v100 = v84;
  int v24 = (uint64_t *)&v10[*(int *)(v86 + 36)];
  *int v24 = v12;
  v24[1] = v14;
  sub_100007A48((uint64_t)v10, &qword_10070A378);
  uint64_t v25 = *(void *)(v23 + 16);
  sub_10002292C((uint64_t)&v100);
  swift_retain();
  uint64_t v26 = v92;
  swift_retain();
  swift_retain();
  uint64_t v91 = v6;
  if (v25)
  {
    Swift::Int v27 = 0;
    uint64_t v28 = v23 + 32;
    uint64_t v78 = v25 - 1;
    uint64_t v80 = v23 + 32;
    do
    {
      uint64_t v86 = v11;
      if (v27 <= v25) {
        unint64_t v29 = v25;
      }
      else {
        unint64_t v29 = v27;
      }
      uint64_t v30 = v28 + 40 * v27;
      uint64_t v31 = v27;
      while (1)
      {
        if (v29 == v31)
        {
          __break(1u);
          goto LABEL_47;
        }
        uint64_t v33 = *(unsigned char *)(v30 + 32);
        int v35 = *(void *)(v30 + 16);
        uint64_t v34 = *(uint64_t (**)(uint64_t *))(v30 + 24);
        unint64_t v36 = *(void *)(v30 + 8);
        LODWORD(v101) = *(_DWORD *)v30;
        uint64_t v102 = (void (*)(void *__return_ptr, void))v36;
        uint64_t v103 = v35;
        uint64_t v104 = v34;
        LOBYTE(v105) = v33;
        sub_100008D24(v36, v35);
        swift_bridgeObjectRetain();
        v90(&v93, &v101);
        sub_1000094D4(v36, v35);
        swift_bridgeObjectRelease();
        char v37 = v93;
        uint64_t v38 = v94;
        int v39 = v96;
        char v40 = v95;
        v97[0] = v93;
        v97[1] = v94;
        uint64_t v99 = v96;
        int v98 = v95;
        if (v89(v97))
        {
          int v101 = (char *)v37;
          uint64_t v102 = (void (*)(void *__return_ptr, void))v38;
          LOWORD(v103) = v40;
          BYTE2(v103) = (v40 | (v39 << 16)) >> 16;
          v85(v97, &v101);
          uint64_t v41 = sub_100024260(LODWORD(v97[0]));
          if (v42) {
            break;
          }
        }
        ++v31;
        v30 += 40;
        __int16 v32 = v88;
        if (v25 == v31)
        {
          unint64_t v6 = v91;
          uint64_t v26 = v92;
          char v11 = v86;
          goto LABEL_26;
        }
      }
      uint64_t v43 = v41;
      char v11 = v86;
      __int16 v44 = swift_isUniquelyReferenced_nonNull_native();
      int v101 = (char *)v11;
      if ((v44 & 1) == 0)
      {
        sub_10009795C();
        char v11 = (uint64_t)v101;
      }
      Swift::Int v27 = v31 + 1;
      sub_1000960D0(v43, v11);
      swift_bridgeObjectRelease();
      uint64_t v57 = v78 == v31;
      unint64_t v6 = v91;
      uint64_t v26 = v92;
      __int16 v32 = v88;
      uint64_t v28 = v80;
    }
    while (!v57);
  }
  else
  {
    __int16 v32 = v88;
  }
LABEL_26:
  sub_10001D550((uint64_t)&v100);
  swift_release();
  swift_release();
  swift_release();
  int v45 = swift_bridgeObjectRetain();
  __int16 v46 = (char *)sub_100038C20(v45);
  swift_bridgeObjectRelease();
  int v101 = v46;
  swift_retain();
  uint64_t v47 = v81;
  sub_100038B90((uint64_t *)&v101, sub_1000A4C18, sub_10003A734);
  if (v47)
  {
LABEL_47:
    swift_release();
    __break(1u);
    double result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    uint64_t v88 = v101;
    type metadata accessor for MessagesPendingDownload();
    uint64_t v48 = (uint64_t)v82;
    uint64_t v49 = v83;
    MessageIdentifierSet.union(_:)();
    uint64_t v50 = (uint64_t)v32;
    uint64_t v51 = MessageIdentifierSet.startIndex.getter(v7);
    uint64_t v53 = v52;
    uint64_t v54 = MessageIdentifierSet.endIndex.getter(v7);
    int v56 = 0;
    uint64_t v57 = v51 == v54 && v53 == v55;
    unint64_t v58 = v57;
    LODWORD(v81) = v58;
    if (!v57)
    {
      MessageIdentifierSet.subscript.getter();
      int v56 = v101;
    }
    uint64_t v80 = v56;
    sub_100007A48(v50, &qword_100709E38);
    int v101 = (char *)v84;
    uint64_t v102 = (void (*)(void *__return_ptr, void))v90;
    uint64_t v103 = v6;
    uint64_t v104 = v89;
    unint64_t v105 = v26;
    uint64_t v106 = v85;
    uint64_t v107 = v87;
    uint64_t v108 = sub_10006A83C;
    char v109 = 0;
    sub_10002292C((uint64_t)&v100);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v59 = sub_100037A3C();
    sub_10001D550((uint64_t)&v100);
    swift_release();
    swift_release();
    uint64_t v60 = swift_release();
    if (v59 == 5)
    {
      sub_10001D550((uint64_t)&v100);
      swift_release();
      swift_release();
      swift_release();
      sub_10003B34C(v48, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    }
    else
    {
      __chkstk_darwin(v60);
      *(&v77 - 2) = v49;
      *((unsigned char *)&v77 - 8) = v59;
      sub_10002292C((uint64_t)&v100);
      swift_retain();
      swift_retain();
      swift_retain();
      v97[0] = sub_1000388A4((uint64_t)sub_10003BC5C);
      swift_bridgeObjectRetain();
      sub_100038B90(v97, sub_1000A4BE8, sub_100039FA8);
      swift_bridgeObjectRelease();
      uint64_t v61 = v97[0];
      Swift::UInt v62 = *(void *)(v97[0] + 16);
      if (v62)
      {
        uint64_t v86 = v11;
        v97[0] = (uint64_t)_swiftEmptyArrayStorage;
        sub_10001A634(0, v62, 0);
        uint64_t v63 = 0;
        uint64_t v64 = v97[0];
        uint64_t v65 = *(void *)(v97[0] + 16);
        long long v66 = 24 * v65;
        do
        {
          uint64_t v67 = *(_DWORD *)(v61 + v63 + 32);
          long long v68 = *(void *)(v61 + v63 + 40);
          long long v69 = *(unsigned char *)(v61 + v63 + 48);
          long long v70 = *(unsigned char *)(v61 + v63 + 49);
          v97[0] = v64;
          long long v71 = *(void *)(v64 + 24);
          long long v72 = v65 + 1;
          if (v65 >= v71 >> 1)
          {
            sub_10001A634(v71 > 1, v65 + 1, 1);
            uint64_t v64 = v97[0];
          }
          *(void *)(v64 + 16) = v72;
          long long v73 = v64 + v66 + v63;
          *(_DWORD *)(v73 + 32) = v67;
          *(void *)(v73 + 40) = v68;
          *(unsigned char *)(v73 + 48) = v69;
          *(unsigned char *)(v73 + 49) = v70;
          v63 += 24;
          uint64_t v65 = v72;
          --v62;
        }
        while (v62);
        sub_10001D550((uint64_t)&v100);
        swift_release();
        swift_release();
        swift_release();
        uint64_t v49 = v83;
        uint64_t v48 = (uint64_t)v82;
      }
      else
      {
        sub_10001D550((uint64_t)&v100);
        swift_release();
        swift_release();
        swift_release();
      }
      sub_10003B34C(v48, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
      swift_release();
    }
    long long v74 = v88;
    uint64_t v75 = v81;
    sub_100007A48(v49, &qword_100709E38);
    swift_bridgeObjectRelease();
    LOBYTE(v101) = v75;
    return (uint64_t)v74;
  }
  return result;
}

uint64_t sub_1000388A4(uint64_t result)
{
  void (*v29)(uint64_t *__return_ptr, uint64_t *);
  uint64_t (*v30)(int *);
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t *);
  void (*v35)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v36;
  uint64_t v37;
  unsigned __int16 v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int16 v47;
  unsigned __int8 v48;
  int v49;
  uint64_t v50;
  unsigned __int16 v51;
  unsigned __int8 v52;
  void *v53;
  uint64_t v54;

  uint64_t v3 = v2;
  uint64_t v30 = (uint64_t (*)(int *))result;
  uint64_t v4 = *v1;
  uint64_t v34 = (uint64_t (*)(uint64_t *))v1[3];
  int v35 = (void (*)(uint64_t *__return_ptr, uint64_t *))v1[1];
  unint64_t v29 = (void (*)(uint64_t *__return_ptr, uint64_t *))v1[5];
  uint64_t v54 = v4;
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    uint64_t v7 = v4 + 32;
    uint64_t v33 = *(void *)(v4 + 16);
    uint64_t v28 = v5 - 1;
    __int16 v32 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v31 = v3;
      uint64_t v8 = v7 + 40 * v6;
      unint64_t v9 = v6;
      while (1)
      {
        if (v9 >= *(void *)(v4 + 16))
        {
          __break(1u);
          return result;
        }
        unint64_t v6 = v9 + 1;
        char v10 = *(unsigned char *)(v8 + 32);
        unint64_t v11 = *(void *)(v8 + 16);
        uint64_t v12 = *(void *)(v8 + 24);
        uint64_t v13 = *(void *)(v8 + 8);
        LODWORD(v40) = *(_DWORD *)v8;
        uint64_t v41 = v13;
        char v42 = v11;
        uint64_t v43 = v12;
        __int16 v44 = v10;
        sub_100008D24(v13, v11);
        swift_bridgeObjectRetain();
        v35(&v36, &v40);
        sub_1000094D4(v13, v11);
        swift_bridgeObjectRelease();
        uint64_t v14 = v36;
        uint64_t v15 = v37;
        int v16 = v39;
        int v17 = v38;
        int v45 = v36;
        __int16 v46 = v37;
        uint64_t v48 = v39;
        uint64_t v47 = v38;
        double result = v34(&v45);
        if (result) {
          break;
        }
        v8 += 40;
        ++v9;
        if (v33 == v6) {
          goto LABEL_18;
        }
      }
      char v40 = v14;
      uint64_t v41 = v15;
      LOWORD(v42) = v17;
      BYTE2(v42) = (v17 | (v16 << 16)) >> 16;
      v29(&v45, &v40);
      int v18 = v45;
      uint64_t v19 = v46;
      char v20 = v47;
      char v21 = HIBYTE(v47);
      uint64_t v49 = v45;
      uint64_t v50 = v46;
      uint64_t v51 = v47;
      unsigned __int8 v27 = v48;
      uint64_t v52 = v48;
      double result = v30(&v49);
      uint64_t v3 = v31;
      if (v31)
      {
        sub_10001D550((uint64_t)&v54);
        swift_release();
        goto LABEL_19;
      }
      if (result)
      {
        __int16 v22 = v32;
        double result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v53 = v32;
        if ((result & 1) == 0)
        {
          double result = sub_10001A654(0, v32[2] + 1, 1);
          __int16 v22 = v53;
        }
        unint64_t v24 = v22[2];
        unint64_t v23 = v22[3];
        unint64_t v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          double result = sub_10001A654(v23 > 1, v24 + 1, 1);
          unint64_t v25 = v24 + 1;
          __int16 v22 = v53;
        }
        v22[2] = v25;
        __int16 v32 = v22;
        uint64_t v26 = &v22[3 * v24];
        *((_DWORD *)v26 + 8) = v18;
        v26[5] = v19;
        *((unsigned char *)v26 + 48) = v20;
        *((unsigned char *)v26 + 49) = v21;
        *((unsigned char *)v26 + 50) = v27;
        uint64_t v3 = v31;
      }
      uint64_t v7 = v4 + 32;
    }
    while (v28 != v9);
  }
  else
  {
    __int16 v32 = _swiftEmptyArrayStorage;
  }
LABEL_18:
  sub_10001D550((uint64_t)&v54);
LABEL_19:
  swift_release();
  swift_release();
  swift_release();
  return (uint64_t)v32;
}

uint64_t sub_100038B90(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

char *sub_100038C14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_100038E30(a1, a2, a3, a4, &qword_10070A0C8);
}

void *sub_100038C20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100709FB0);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_1000391AC(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_100038D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100709F70);
  uint64_t v7 = (void *)swift_allocObject();
  size_t v8 = j__malloc_size(v7);
  long long v7[2] = v3;
  v7[3] = 2 * ((uint64_t)(v8 - 32) / 176);
  char v10 = sub_100039364(&v12, (uint64_t)(v7 + 4), v3, a1, a2, a3, v9);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  if (v10 != (void *)v3)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v7;
}

char *sub_100038E24(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_100038E30(a1, a2, a3, a4, &qword_10070A050);
}

char *sub_100038E30(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v9 = 4 * v6;
    if (v6 <= 0)
    {
      char v10 = (char *)_swiftEmptyArrayStorage;
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        uint64_t v13 = v10 + 32;
        uint64_t v14 = (char *)(a2 + 4 * a3);
        if (v14 < &v10[v9 + 32] && v13 < &v14[v9]) {
          goto LABEL_19;
        }
        memcpy(v13, v14, 4 * v6);
        return v10;
      }
    }
    else
    {
      sub_10000566C(a5);
      char v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v6;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

void *sub_100038F98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_10070A630);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1000399A0((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_100039080(uint64_t a1)
{
  return sub_1000390C0(a1, &qword_100709F50, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_100039BA8);
}

void *sub_1000390A0(uint64_t a1)
{
  return sub_1000390C0(a1, &qword_10070A148, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_100039DA8);
}

void *sub_1000390C0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(a2);
  uint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = j__malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 17;
  }
  _OWORD v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v9 != v3)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

void *sub_1000391AC(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 56) + 24 * v12;
    int v14 = *(_DWORD *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    char v16 = *(unsigned char *)(v13 + 16);
    LOBYTE(v13) = *(unsigned char *)(v13 + 17);
    *(_DWORD *)a2 = v14;
    *(void *)(a2 + 8) = v15;
    *(unsigned char *)(a2 + 16) = v16;
    *(unsigned char *)(a2 + 17) = v13;
    a2 += 24;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v17 >= v10) {
    goto LABEL_30;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v17);
  if (v18) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v17 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v17;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v8);
  if (v18)
  {
LABEL_15:
    int64_t v17 = v8;
LABEL_19:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = v20 + (v17 << 6);
    int64_t v8 = v17;
    goto LABEL_8;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
LABEL_18:
    int64_t v17 = v19;
    goto LABEL_19;
  }
  int64_t v8 = v17 + 3;
  if (v17 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v17 + 2;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v8);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_100039364(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  uint64_t v7 = a6;
  if (!a2)
  {
    uint64_t v8 = 0;
    a3 = 0;
    goto LABEL_16;
  }
  if (!a3)
  {
    uint64_t v8 = 0;
    goto LABEL_16;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(a6 + 16);
    if (v8)
    {
      uint64_t v67 = a4;
      long long v68 = result;
      uint64_t v69 = a5;
      uint64_t result = *(void **)(a6 + 32);
      uint64_t v9 = *(void *)(a6 + 40);
      uint64_t v10 = *(void *)(a6 + 48);
      int v11 = *(_DWORD *)(a6 + 64);
      char v144 = *(unsigned char *)(a6 + 68);
      char v12 = v144;
      __int16 v142 = *(_WORD *)(a6 + 69);
      char v143 = *(unsigned char *)(a6 + 71);
      uint64_t v13 = *(void *)(a6 + 72);
      char v141 = *(unsigned char *)(v7 + 80);
      char v14 = v141;
      int v15 = *(_DWORD *)(v7 + 81);
      *(_DWORD *)((char *)v140 + 3) = *(_DWORD *)(v7 + 84);
      v140[0] = v15;
      uint64_t v16 = *(void *)(v7 + 88);
      char v139 = *(unsigned char *)(v7 + 96);
      char v17 = v139;
      int v18 = *(_DWORD *)(v7 + 97);
      *(_DWORD *)((char *)v138 + 3) = *(_DWORD *)(v7 + 100);
      v138[0] = v18;
      uint64_t v19 = *(void *)(v7 + 104);
      int v21 = *(_DWORD *)(v7 + 112);
      int v20 = *(_DWORD *)(v7 + 116);
      char v137 = *(unsigned char *)(v7 + 120);
      char v22 = v137;
      int v23 = *(_DWORD *)(v7 + 121);
      *(_DWORD *)((char *)v136 + 3) = *(_DWORD *)(v7 + 124);
      v136[0] = v23;
      uint64_t v24 = *(void *)(v7 + 128);
      int v25 = *(_DWORD *)(v7 + 136);
      char v92 = *(unsigned char *)(v7 + 140);
      __int16 v26 = *(_WORD *)(v7 + 141);
      char v135 = *(unsigned char *)(v7 + 143);
      __int16 v134 = v26;
      uint64_t v27 = *(void *)(v7 + 144);
      uint64_t v28 = *(void *)(v7 + 152);
      char v29 = *(unsigned char *)(v7 + 160);
      int v30 = *(_DWORD *)(v7 + 161);
      *(_DWORD *)((char *)v133 + 3) = *(_DWORD *)(v7 + 164);
      v133[0] = v30;
      uint64_t v31 = *(void *)(v7 + 168);
      uint64_t v32 = *(void *)(v7 + 176);
      uint64_t v33 = *(void *)(v7 + 184);
      uint64_t v34 = *(void *)(v7 + 192);
      char v35 = *(unsigned char *)(v7 + 200);
      LOWORD(v30) = *(_WORD *)(v7 + 201);
      char v132 = *(unsigned char *)(v7 + 203);
      __int16 v131 = v30;
      int v36 = *(_DWORD *)(v7 + 204);
      uint64_t v37 = *(void *)(v7 + 56);
      *(void *)a2 = result;
      *(void *)(a2 + 8) = v9;
      *(void *)(a2 + 16) = v10;
      *(void *)(a2 + 24) = v37;
      *(_DWORD *)(a2 + 32) = v11;
      *(unsigned char *)(a2 + 36) = v12;
      *(_WORD *)(a2 + 37) = v142;
      *(unsigned char *)(a2 + 39) = v143;
      *(void *)(a2 + 40) = v13;
      *(unsigned char *)(a2 + 48) = v14;
      *(_DWORD *)(a2 + 49) = v140[0];
      *(_DWORD *)(a2 + 52) = *(_DWORD *)((char *)v140 + 3);
      *(void *)(a2 + 56) = v16;
      *(unsigned char *)(a2 + 64) = v17;
      uint64_t v38 = v34;
      int v39 = v138[0];
      *(_DWORD *)(a2 + 68) = *(_DWORD *)((char *)v138 + 3);
      *(_DWORD *)(a2 + 65) = v39;
      *(void *)(a2 + 72) = v19;
      *(_DWORD *)(a2 + 80) = v21;
      *(_DWORD *)(a2 + 84) = v20;
      *(unsigned char *)(a2 + 88) = v22;
      int v40 = v136[0];
      *(_DWORD *)(a2 + 92) = *(_DWORD *)((char *)v136 + 3);
      *(_DWORD *)(a2 + 89) = v40;
      *(void *)(a2 + 96) = v24;
      *(_DWORD *)(a2 + 104) = v25;
      *(unsigned char *)(a2 + 108) = v92;
      LOWORD(v40) = v134;
      *(unsigned char *)(a2 + 111) = v135;
      uint64_t v41 = v33;
      *(_WORD *)(a2 + 109) = v40;
      *(void *)(a2 + 112) = v27;
      *(void *)(a2 + 120) = v28;
      *(unsigned char *)(a2 + 128) = v29;
      int v42 = v133[0];
      *(_DWORD *)(a2 + 132) = *(_DWORD *)((char *)v133 + 3);
      *(_DWORD *)(a2 + 129) = v42;
      *(void *)(a2 + 136) = v31;
      *(void *)(a2 + 144) = v32;
      *(void *)(a2 + 152) = v33;
      *(void *)(a2 + 160) = v34;
      *(unsigned char *)(a2 + 168) = v35;
      __int16 v43 = v131;
      *(unsigned char *)(a2 + 171) = v132;
      *(_WORD *)(a2 + 169) = v43;
      *(_DWORD *)(a2 + 172) = v36;
      char v44 = v92 & 1;
      char v45 = v29 & 1;
      char v46 = v144;
      char v93 = v141;
      char v47 = v139;
      unsigned __int32 v48 = v37;
      char v49 = v137;
      uint64_t v72 = a3;
      if (a3 != 1)
      {
        uint64_t v50 = 0;
        unint64_t v51 = 1;
        uint64_t v70 = v7;
        uint64_t v71 = v8;
        while (1)
        {
          unint64_t v105 = result;
          uint64_t v106 = v9;
          uint64_t v107 = v10;
          unsigned __int32 v108 = v48;
          int v109 = v11;
          char v110 = v46 & 1;
          uint64_t v111 = v13;
          char v112 = v93 & 1;
          uint64_t v113 = v16;
          char v114 = v47 & 1;
          uint64_t v115 = v19;
          int v116 = v21;
          int v117 = v20;
          char v118 = v49 & 1;
          uint64_t v119 = v24;
          int v120 = v25;
          char v121 = v44 & 1;
          uint64_t v122 = v27;
          uint64_t v123 = v28;
          char v124 = v45 & 1;
          uint64_t v125 = v31;
          uint64_t v126 = v32;
          uint64_t v127 = v41;
          uint64_t v128 = v38;
          char v129 = v35;
          int v130 = v36;
          if (v8 == v51)
          {
            sub_100007780((uint64_t)&v105);
            uint64_t v8 = v71;
            a3 = v71;
            goto LABEL_15;
          }
          if (v51 >= *(void *)(v7 + 16)) {
            break;
          }
          uint64_t v52 = a2 + v50;
          uint64_t v91 = *(void **)(v7 + v50 + 208);
          uint64_t v88 = *(void *)(v7 + v50 + 224);
          uint64_t v89 = *(void *)(v7 + v50 + 216);
          int v86 = *(_DWORD *)(v7 + v50 + 240);
          char v104 = *(unsigned char *)(v7 + v50 + 244);
          __int16 v102 = *(_WORD *)(v7 + v50 + 245);
          char v103 = *(unsigned char *)(v7 + v50 + 247);
          char v53 = *(unsigned char *)(v7 + v50 + 256);
          *(_DWORD *)((char *)&v101 + 3) = *(_DWORD *)(v7 + v50 + 260);
          LODWORD(v101) = *(_DWORD *)(v7 + v50 + 257);
          uint64_t v84 = *(void *)(v7 + v50 + 264);
          uint64_t v85 = *(void *)(v7 + v50 + 248);
          char v54 = *(unsigned char *)(v7 + v50 + 272);
          LODWORD(v100) = *(_DWORD *)(v7 + v50 + 273);
          *(_DWORD *)((char *)&v100 + 3) = *(_DWORD *)(v7 + v50 + 276);
          int v82 = *(_DWORD *)(v7 + v50 + 292);
          int v83 = *(_DWORD *)(v7 + v50 + 288);
          char v55 = *(unsigned char *)(v7 + v50 + 296);
          LODWORD(v99) = *(_DWORD *)(v7 + v50 + 297);
          *(_DWORD *)((char *)&v99 + 3) = *(_DWORD *)(v7 + v50 + 300);
          uint64_t v79 = *(void *)(v7 + v50 + 304);
          uint64_t v80 = *(void *)(v7 + v50 + 280);
          int v78 = *(_DWORD *)(v7 + v50 + 312);
          char v56 = *(unsigned char *)(v7 + v50 + 316);
          char v98 = *(unsigned char *)(v7 + v50 + 319);
          __int16 v97 = *(_WORD *)(v7 + v50 + 317);
          uint64_t v76 = *(void *)(v7 + v50 + 328);
          uint64_t v77 = *(void *)(v7 + v50 + 320);
          char v57 = *(unsigned char *)(v7 + v50 + 336);
          *(_DWORD *)((char *)&v96 + 3) = *(_DWORD *)(v7 + v50 + 340);
          LODWORD(v96) = *(_DWORD *)(v7 + v50 + 337);
          uint64_t v74 = *(void *)(v7 + v50 + 352);
          uint64_t v75 = *(void *)(v7 + v50 + 344);
          uint64_t v58 = *(void *)(v7 + v50 + 360);
          uint64_t v59 = *(void *)(v7 + v50 + 368);
          char v95 = *(unsigned char *)(v7 + v50 + 379);
          __int16 v94 = *(_WORD *)(v7 + v50 + 377);
          char v60 = *(unsigned char *)(v7 + v50 + 376);
          a7.n128_u64[0] = *(void *)(v7 + v50 + 232);
          __n128 v90 = a7;
          int v81 = *(_DWORD *)(v7 + v50 + 380);
          *(void *)(v52 + 176) = v91;
          *(unsigned char *)(v52 + 212) = v104;
          *(_WORD *)(v52 + 213) = v102;
          *(unsigned char *)(v52 + 215) = v103;
          *(void *)(v52 + 184) = v89;
          *(void *)(v52 + 192) = v88;
          *(void *)(v52 + 200) = a7.n128_u64[0];
          *(_DWORD *)(v52 + 208) = v86;
          *(void *)(v52 + 216) = v85;
          *(unsigned char *)(v52 + 224) = v53;
          *(_DWORD *)(v52 + 225) = v101;
          *(_DWORD *)(v52 + 228) = *(_DWORD *)((char *)&v101 + 3);
          *(void *)(v52 + 232) = v84;
          *(unsigned char *)(v52 + 240) = v54;
          *(_DWORD *)(v52 + 244) = *(_DWORD *)((char *)&v100 + 3);
          *(_DWORD *)(v52 + 241) = v100;
          *(void *)(v52 + 248) = v80;
          *(_DWORD *)(v52 + 256) = v83;
          *(_DWORD *)(v52 + 260) = v82;
          *(unsigned char *)(v52 + 264) = v55;
          *(_DWORD *)(v52 + 268) = *(_DWORD *)((char *)&v99 + 3);
          *(_DWORD *)(v52 + 265) = v99;
          *(void *)(v52 + 272) = v79;
          *(_DWORD *)(v52 + 280) = v78;
          *(unsigned char *)(v52 + 284) = v56;
          *(unsigned char *)(v52 + 287) = v98;
          *(_WORD *)(v52 + 285) = v97;
          *(void *)(v52 + 288) = v77;
          *(void *)(v52 + 296) = v76;
          *(unsigned char *)(v52 + 304) = v57;
          *(_DWORD *)(v52 + 308) = *(_DWORD *)((char *)&v96 + 3);
          *(_DWORD *)(v52 + 305) = v96;
          *(void *)(v52 + 312) = v75;
          *(void *)(v52 + 320) = v74;
          *(void *)(v52 + 328) = v58;
          *(void *)(v52 + 336) = v59;
          *(unsigned char *)(v52 + 344) = v60;
          char v61 = v60;
          *(unsigned char *)(v52 + 347) = v95;
          *(_WORD *)(v52 + 345) = v94;
          *(_DWORD *)(v52 + 348) = v81;
          char v62 = v56 & 1;
          char v87 = v57 & 1;
          char v46 = v104;
          char v93 = v53;
          char v47 = v54;
          char v63 = v55;
          unint64_t v64 = v51 + 1;
          uint64_t v65 = v50;
          sub_100007780((uint64_t)&v105);
          uint64_t v66 = v65;
          unint64_t v51 = v64;
          char v49 = v63;
          char v44 = v62;
          int v36 = v81;
          char v35 = v61;
          uint64_t v38 = v59;
          uint64_t v41 = v58;
          uint64_t v32 = v74;
          uint64_t v31 = v75;
          uint64_t v24 = v79;
          uint64_t v19 = v80;
          uint64_t v28 = v76;
          uint64_t v27 = v77;
          int v25 = v78;
          uint64_t v16 = v84;
          uint64_t v13 = v85;
          int v20 = v82;
          int v21 = v83;
          uint64_t v10 = v88;
          uint64_t v9 = v89;
          uint64_t result = v91;
          uint64_t v7 = v70;
          uint64_t v8 = v71;
          a7.n128_u64[1] = v90.n128_u64[1];
          unsigned __int32 v48 = v90.n128_u32[0];
          uint64_t v50 = v66 + 176;
          int v11 = v86;
          char v45 = v87;
          if (v72 == v51) {
            goto LABEL_10;
          }
        }
        __break(1u);
        goto LABEL_18;
      }
LABEL_10:
      unint64_t v105 = result;
      uint64_t v106 = v9;
      uint64_t v107 = v10;
      unsigned __int32 v108 = v48;
      int v109 = v11;
      char v110 = v46;
      uint64_t v111 = v13;
      char v112 = v93;
      uint64_t v113 = v16;
      char v114 = v47;
      uint64_t v115 = v19;
      int v116 = v21;
      int v117 = v20;
      char v118 = v49;
      uint64_t v119 = v24;
      int v120 = v25;
      char v121 = v44;
      uint64_t v122 = v27;
      uint64_t v123 = v28;
      char v124 = v45;
      uint64_t v125 = v31;
      uint64_t v126 = v32;
      uint64_t v127 = v41;
      uint64_t v128 = v38;
      char v129 = v35;
      int v130 = v36;
      sub_100007780((uint64_t)&v105);
      a3 = v72;
      uint64_t v8 = v72;
LABEL_15:
      uint64_t result = v68;
      a5 = v69;
      a4 = v67;
    }
    else
    {
      a3 = 0;
    }
LABEL_16:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v7;
    result[3] = v8;
    return (void *)a3;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000399A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    long long v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 16 * v16;
    uint64_t v21 = *(void *)v20;
    LODWORD(v20) = *(_DWORD *)(v20 + 8);
    *(void *)uint64_t v11 = v21;
    *(_DWORD *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 16;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100039BA8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    long long v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100039DA8(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    long long v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    uint64_t *v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_100008D24(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_100008D24(v21, v22);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_100039FA8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v94 = *a1;
      uint64_t v95 = -1;
      uint64_t v96 = 1;
      uint64_t v97 = *a1;
      do
      {
        uint64_t v98 = v95;
        uint64_t v99 = v97;
        do
        {
          uint64_t v100 = v99 + 24;
          unsigned int v101 = *(_DWORD *)(v99 + 24);
          if (v101 >= *(_DWORD *)v99) {
            break;
          }
          if (!v94) {
            goto LABEL_141;
          }
          uint64_t v102 = *(void *)(v99 + 32);
          char v103 = *(unsigned char *)(v99 + 40);
          char v104 = *(unsigned char *)(v99 + 41);
          Swift::Int result = *(unsigned __int8 *)(v99 + 42);
          *(_OWORD *)uint64_t v100 = *(_OWORD *)v99;
          uint64_t v105 = *(void *)(v99 + 16);
          *(_DWORD *)uint64_t v99 = v101;
          *(void *)(v99 + 8) = v102;
          *(unsigned char *)(v99 + 16) = v103;
          *(unsigned char *)(v99 + 17) = v104;
          *(unsigned char *)(v99 + 18) = result;
          v99 -= 24;
          *(void *)(v100 + 16) = v105;
        }
        while (!__CFADD__(v98++, 1));
        ++v96;
        v97 += 24;
        --v95;
      }
      while (v96 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v123 = v1;
  int v116 = a1;
  if (v3 < 2)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      int64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v107 = v12;
      char v118 = v9;
      if (v13 >= 2)
      {
        uint64_t v108 = *v116;
        do
        {
          unint64_t v109 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v108) {
            goto LABEL_145;
          }
          char v110 = v107;
          uint64_t v111 = *(void *)&v107[16 * v109 + 32];
          uint64_t v112 = *(void *)&v107[16 * v13 + 24];
          sub_10003AE9C((char *)(v108 + 24 * v111), (char *)(v108 + 24 * *(void *)&v107[16 * v13 + 16]), v108 + 24 * v112, __dst, (void (*)(char **, char **, char **))sub_1000A685C);
          if (v123) {
            break;
          }
          if (v112 < v111) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v110 = sub_1000A6DE0((uint64_t)v110);
          }
          if (v109 >= *((void *)v110 + 2)) {
            goto LABEL_134;
          }
          uint64_t v113 = &v110[16 * v109 + 32];
          *(void *)uint64_t v113 = v111;
          *((void *)v113 + 1) = v112;
          unint64_t v114 = *((void *)v110 + 2);
          if (v13 > v114) {
            goto LABEL_135;
          }
          memmove(&v110[16 * v13 + 16], &v110[16 * v13 + 32], 16 * (v114 - v13));
          uint64_t v107 = v110;
          *((void *)v110 + 2) = v114 - 1;
          unint64_t v13 = v114 - 1;
        }
        while (v114 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v118[2] = 0;
      return swift_bridgeObjectRelease();
    }
    char v118 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_10000566C(&qword_10070A380);
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    char v118 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v117 = *a1 + 24;
  uint64_t v115 = *a1 - 24;
  int64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v119 = v6;
  Swift::Int v120 = v3;
  uint64_t v121 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(_DWORD *)(v11 + 24 * v10);
      unsigned int v16 = *(_DWORD *)(v11 + 24 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        int64_t v17 = (unsigned int *)(v117 + 24 * v14);
        unint64_t v18 = v17;
        while (1)
        {
          unsigned int v19 = v18[6];
          v18 += 6;
          if (v15 < v16 == v19 >= *v17) {
            break;
          }
          ++v10;
          int64_t v17 = v18;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 24 * v10;
          uint64_t v21 = 24 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              int v25 = *(_DWORD *)(v11 + v21);
              uint64_t v26 = v11 + v20;
              uint64_t v27 = *(void *)(v11 + v21 + 8);
              char v28 = *(unsigned char *)(v11 + v21 + 16);
              char v29 = *(unsigned char *)(v11 + v21 + 17);
              char v30 = *(unsigned char *)(v11 + v21 + 18);
              uint64_t v31 = *(void *)(v11 + v20 - 8);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 24);
              *(void *)(v24 + 16) = v31;
              *(_DWORD *)(v26 - 24) = v25;
              *(void *)(v26 - 16) = v27;
              *(unsigned char *)(v26 - 8) = v28;
              *(unsigned char *)(v26 - 7) = v29;
              *(unsigned char *)(v26 - 6) = v30;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v32 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v32 >= v3) {
      Swift::Int v32 = v3;
    }
    if (v32 < v14) {
      break;
    }
    if (v10 != v32)
    {
      uint64_t v33 = v115 + 24 * v10;
      do
      {
        Swift::Int v34 = v14;
        uint64_t v35 = v33;
        do
        {
          uint64_t v36 = v35 + 24;
          unsigned int v37 = *(_DWORD *)(v35 + 24);
          if (v37 >= *(_DWORD *)v35) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v38 = *(void *)(v35 + 32);
          char v39 = *(unsigned char *)(v35 + 40);
          char v40 = *(unsigned char *)(v35 + 41);
          char v41 = *(unsigned char *)(v35 + 42);
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v35;
          uint64_t v42 = *(void *)(v35 + 16);
          *(_DWORD *)uint64_t v35 = v37;
          *(void *)(v35 + 8) = v38;
          *(unsigned char *)(v35 + 16) = v39;
          *(unsigned char *)(v35 + 17) = v40;
          *(unsigned char *)(v35 + 18) = v41;
          v35 -= 24;
          ++v34;
          *(void *)(v36 + 16) = v42;
        }
        while (v10 != v34);
        ++v10;
        v33 += 24;
      }
      while (v10 != v32);
      Swift::Int v10 = v32;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v12 = sub_1000A66A4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v44 = *((void *)v12 + 2);
    unint64_t v43 = *((void *)v12 + 3);
    unint64_t v13 = v44 + 1;
    uint64_t v11 = v121;
    if (v44 >= v43 >> 1)
    {
      char v93 = sub_1000A66A4((char *)(v43 > 1), v44 + 1, 1, v12);
      uint64_t v11 = v121;
      int64_t v12 = v93;
    }
    *((void *)v12 + 2) = v13;
    char v45 = v12 + 32;
    char v46 = &v12[16 * v44 + 32];
    *(void *)char v46 = v14;
    *((void *)v46 + 1) = v10;
    if (v44)
    {
      while (1)
      {
        unint64_t v47 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v52 = &v45[16 * v13];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_120;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_121;
          }
          unint64_t v59 = v13 - 2;
          char v60 = &v45[16 * v13 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_123;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_126;
          }
          if (v64 >= v55)
          {
            int v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_130;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v76 = *((void *)v12 + 4);
            uint64_t v77 = *((void *)v12 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_77;
          }
          uint64_t v49 = *((void *)v12 + 4);
          uint64_t v48 = *((void *)v12 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_122;
        }
        unint64_t v59 = v13 - 2;
        uint64_t v65 = &v45[16 * v13 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_125;
        }
        uint64_t v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_128;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_129;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_83:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v70) {
          goto LABEL_124;
        }
        int v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_127;
        }
        if (v81 < v69) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        char v87 = v12;
        uint64_t v88 = &v45[16 * v86];
        uint64_t v89 = *(void *)v88;
        __n128 v90 = &v45[16 * v47];
        uint64_t v91 = *((void *)v90 + 1);
        sub_10003AE9C((char *)(v11 + 24 * *(void *)v88), (char *)(v11 + 24 * *(void *)v90), v11 + 24 * v91, __dst, (void (*)(char **, char **, char **))sub_1000A685C);
        if (v123) {
          goto LABEL_93;
        }
        if (v91 < v89) {
          goto LABEL_117;
        }
        if (v47 > *((void *)v87 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v88 = v89;
        *(void *)&v45[16 * v86 + 8] = v91;
        unint64_t v92 = *((void *)v87 + 2);
        if (v47 >= v92) {
          goto LABEL_119;
        }
        int64_t v12 = v87;
        unint64_t v13 = v92 - 1;
        memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
        *((void *)v87 + 2) = v92 - 1;
        uint64_t v11 = v121;
        if (v92 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v119;
    Swift::Int v3 = v120;
    if (v10 >= v120)
    {
      unint64_t v9 = v118;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

Swift::Int sub_10003A734(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v92 = *a1;
      uint64_t v93 = *a1 + 24;
      uint64_t v94 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v96 = v94;
        uint64_t v97 = v93;
        do
        {
          int v98 = *(_DWORD *)v97;
          if (*(_DWORD *)v97 >= *(_DWORD *)(v97 - 24)) {
            break;
          }
          if (!v92) {
            goto LABEL_141;
          }
          uint64_t v99 = *(void *)(v97 + 8);
          char v100 = *(unsigned char *)(v97 + 16);
          char v101 = *(unsigned char *)(v97 + 17);
          *(_OWORD *)uint64_t v97 = *(_OWORD *)(v97 - 24);
          *(void *)(v97 + 16) = *(void *)(v97 - 8);
          *(void *)(v97 - 16) = v99;
          *(unsigned char *)(v97 - 8) = v100;
          *(unsigned char *)(v97 - 7) = v101;
          *(_DWORD *)(v97 - 24) = v98;
          v97 -= 24;
        }
        while (!__CFADD__(v96++, 1));
        v93 += 24;
        --v94;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v119 = v1;
  uint64_t v112 = a1;
  if (v3 < 2)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      int64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      char v103 = v12;
      unint64_t v114 = v9;
      if (v13 >= 2)
      {
        uint64_t v104 = *v112;
        do
        {
          unint64_t v105 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v104) {
            goto LABEL_145;
          }
          uint64_t v106 = v103;
          uint64_t v107 = *(void *)&v103[16 * v105 + 32];
          uint64_t v108 = *(void *)&v103[16 * v13 + 24];
          sub_10003AE9C((char *)(v104 + 24 * v107), (char *)(v104 + 24 * *(void *)&v103[16 * v13 + 16]), v104 + 24 * v108, __dst, (void (*)(char **, char **, char **))sub_1000A685C);
          if (v119) {
            break;
          }
          if (v108 < v107) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v106 = sub_1000A6DE0((uint64_t)v106);
          }
          if (v105 >= *((void *)v106 + 2)) {
            goto LABEL_134;
          }
          unint64_t v109 = &v106[16 * v105 + 32];
          *(void *)unint64_t v109 = v107;
          *((void *)v109 + 1) = v108;
          unint64_t v110 = *((void *)v106 + 2);
          if (v13 > v110) {
            goto LABEL_135;
          }
          memmove(&v106[16 * v13 + 16], &v106[16 * v13 + 32], 16 * (v110 - v13));
          char v103 = v106;
          *((void *)v106 + 2) = v110 - 1;
          unint64_t v13 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v114[2] = 0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v114 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    unint64_t v114 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v113 = *a1 + 24;
  uint64_t v111 = *a1 - 24;
  int64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v115 = v6;
  Swift::Int v116 = v3;
  uint64_t v117 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(_DWORD *)(v11 + 24 * v10);
      unsigned int v16 = *(_DWORD *)(v11 + 24 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        int64_t v17 = (unsigned int *)(v113 + 24 * v14);
        unint64_t v18 = v17;
        while (1)
        {
          unsigned int v19 = v18[6];
          v18 += 6;
          if (v15 < v16 == v19 >= *v17) {
            break;
          }
          ++v10;
          int64_t v17 = v18;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 24 * v10;
          uint64_t v21 = 24 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              int v25 = *(_DWORD *)(v11 + v21);
              uint64_t v26 = v11 + v20;
              uint64_t v27 = *(void *)(v11 + v21 + 8);
              char v28 = *(unsigned char *)(v11 + v21 + 16);
              char v29 = *(unsigned char *)(v11 + v21 + 17);
              uint64_t v30 = *(void *)(v11 + v20 - 8);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 24);
              *(void *)(v24 + 16) = v30;
              *(_DWORD *)(v26 - 24) = v25;
              *(void *)(v26 - 16) = v27;
              *(unsigned char *)(v26 - 8) = v28;
              *(unsigned char *)(v26 - 7) = v29;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v31 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v31 >= v3) {
      Swift::Int v31 = v3;
    }
    if (v31 < v14) {
      break;
    }
    if (v10 != v31)
    {
      uint64_t v32 = v111 + 24 * v10;
      do
      {
        Swift::Int v33 = v14;
        uint64_t v34 = v32;
        do
        {
          uint64_t v35 = v34 + 24;
          unsigned int v36 = *(_DWORD *)(v34 + 24);
          if (v36 >= *(_DWORD *)v34) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v37 = *(void *)(v34 + 32);
          char v38 = *(unsigned char *)(v34 + 40);
          char v39 = *(unsigned char *)(v34 + 41);
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v34;
          uint64_t v40 = *(void *)(v34 + 16);
          *(_DWORD *)uint64_t v34 = v36;
          *(void *)(v34 + 8) = v37;
          *(unsigned char *)(v34 + 16) = v38;
          *(unsigned char *)(v34 + 17) = v39;
          v34 -= 24;
          ++v33;
          *(void *)(v35 + 16) = v40;
        }
        while (v10 != v33);
        ++v10;
        v32 += 24;
      }
      while (v10 != v31);
      Swift::Int v10 = v31;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v12 = sub_1000A66A4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v42 = *((void *)v12 + 2);
    unint64_t v41 = *((void *)v12 + 3);
    unint64_t v13 = v42 + 1;
    uint64_t v11 = v117;
    if (v42 >= v41 >> 1)
    {
      uint64_t v91 = sub_1000A66A4((char *)(v41 > 1), v42 + 1, 1, v12);
      uint64_t v11 = v117;
      int64_t v12 = v91;
    }
    *((void *)v12 + 2) = v13;
    unint64_t v43 = v12 + 32;
    unint64_t v44 = &v12[16 * v42 + 32];
    *(void *)unint64_t v44 = v14;
    *((void *)v44 + 1) = v10;
    if (v42)
    {
      while (1)
      {
        unint64_t v45 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v50 = &v43[16 * v13];
          uint64_t v51 = *((void *)v50 - 8);
          uint64_t v52 = *((void *)v50 - 7);
          BOOL v56 = __OFSUB__(v52, v51);
          uint64_t v53 = v52 - v51;
          if (v56) {
            goto LABEL_120;
          }
          uint64_t v55 = *((void *)v50 - 6);
          uint64_t v54 = *((void *)v50 - 5);
          BOOL v56 = __OFSUB__(v54, v55);
          uint64_t v48 = v54 - v55;
          char v49 = v56;
          if (v56) {
            goto LABEL_121;
          }
          unint64_t v57 = v13 - 2;
          BOOL v58 = &v43[16 * v13 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v56 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v56) {
            goto LABEL_123;
          }
          BOOL v56 = __OFADD__(v48, v61);
          uint64_t v62 = v48 + v61;
          if (v56) {
            goto LABEL_126;
          }
          if (v62 >= v53)
          {
            uint64_t v80 = &v43[16 * v45];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v56 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v56) {
              goto LABEL_130;
            }
            BOOL v73 = v48 < v83;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v74 = *((void *)v12 + 4);
            uint64_t v75 = *((void *)v12 + 5);
            BOOL v56 = __OFSUB__(v75, v74);
            uint64_t v67 = v75 - v74;
            char v68 = v56;
            goto LABEL_77;
          }
          uint64_t v47 = *((void *)v12 + 4);
          uint64_t v46 = *((void *)v12 + 5);
          BOOL v56 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          char v49 = v56;
        }
        if (v49) {
          goto LABEL_122;
        }
        unint64_t v57 = v13 - 2;
        uint64_t v63 = &v43[16 * v13 - 32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v66 = __OFSUB__(v64, v65);
        uint64_t v67 = v64 - v65;
        char v68 = v66;
        if (v66) {
          goto LABEL_125;
        }
        uint64_t v69 = &v43[16 * v45];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v56 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v56) {
          goto LABEL_128;
        }
        if (__OFADD__(v67, v72)) {
          goto LABEL_129;
        }
        if (v67 + v72 >= v48)
        {
          BOOL v73 = v48 < v72;
LABEL_83:
          if (v73) {
            unint64_t v45 = v57;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v68) {
          goto LABEL_124;
        }
        uint64_t v76 = &v43[16 * v45];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v56 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v56) {
          goto LABEL_127;
        }
        if (v79 < v67) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v84 = v45 - 1;
        if (v45 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v85 = v12;
        unint64_t v86 = &v43[16 * v84];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = &v43[16 * v45];
        uint64_t v89 = *((void *)v88 + 1);
        sub_10003AE9C((char *)(v11 + 24 * *(void *)v86), (char *)(v11 + 24 * *(void *)v88), v11 + 24 * v89, __dst, (void (*)(char **, char **, char **))sub_1000A685C);
        if (v119) {
          goto LABEL_93;
        }
        if (v89 < v87) {
          goto LABEL_117;
        }
        if (v45 > *((void *)v85 + 2)) {
          goto LABEL_118;
        }
        *(void *)unint64_t v86 = v87;
        *(void *)&v43[16 * v84 + 8] = v89;
        unint64_t v90 = *((void *)v85 + 2);
        if (v45 >= v90) {
          goto LABEL_119;
        }
        int64_t v12 = v85;
        unint64_t v13 = v90 - 1;
        memmove(&v43[16 * v45], v88 + 16, 16 * (v90 - 1 - v45));
        *((void *)v85 + 2) = v90 - 1;
        uint64_t v11 = v117;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v115;
    Swift::Int v3 = v116;
    if (v10 >= v116)
    {
      unint64_t v9 = v114;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_10003AE9C(char *__src, char *a2, unint64_t a3, char *__dst, void (*a5)(char **, char **, char **))
{
  Swift::Int v6 = __dst;
  uint64_t v8 = a2;
  unint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = (a2 - __src) / 24;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v30 = __src;
  char v29 = __dst;
  if (v11 >= v13)
  {
    if (v12 >= -23)
    {
      uint64_t v19 = 24 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 24 * v13);
      }
      uint64_t v20 = &v6[v19];
      char v28 = &v6[v19];
      uint64_t v30 = v8;
      if (v9 < v8 && v12 >= 24)
      {
        unint64_t v21 = a3 - 24;
        Swift::Int v22 = v8;
        while (1)
        {
          Swift::Int v23 = (char *)(v21 + 24);
          unsigned int v24 = *((_DWORD *)v22 - 6);
          v22 -= 24;
          if (*((_DWORD *)v20 - 6) >= v24)
          {
            char v28 = v20 - 24;
            if (v23 < v20 || v21 >= (unint64_t)v20 || v23 != v20)
            {
              long long v26 = *(_OWORD *)(v20 - 24);
              *(void *)(v21 + 16) = *((void *)v20 - 1);
              *(_OWORD *)unint64_t v21 = v26;
            }
            Swift::Int v22 = v8;
            v20 -= 24;
            if (v8 <= v9) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v23 != v8 || v21 >= (unint64_t)v8)
            {
              long long v25 = *(_OWORD *)v22;
              *(void *)(v21 + 16) = *((void *)v22 + 2);
              *(_OWORD *)unint64_t v21 = v25;
            }
            uint64_t v30 = v22;
            if (v22 <= v9) {
              goto LABEL_38;
            }
          }
          v21 -= 24;
          uint64_t v8 = v22;
          if (v20 <= v6) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v10 >= -23)
  {
    size_t v14 = 24 * v11;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14);
    }
    unsigned int v15 = &v6[v14];
    char v28 = &v6[v14];
    if ((unint64_t)v8 < a3 && v10 >= 24)
    {
      do
      {
        if (*(_DWORD *)v8 >= *(_DWORD *)v6)
        {
          if (v9 != v6)
          {
            long long v18 = *(_OWORD *)v6;
            *((void *)v9 + 2) = *((void *)v6 + 2);
            *(_OWORD *)unint64_t v9 = v18;
          }
          v6 += 24;
          char v29 = v6;
          unsigned int v16 = v8;
        }
        else
        {
          unsigned int v16 = v8 + 24;
          if (v9 < v8 || v9 >= v16 || v9 != v8)
          {
            long long v17 = *(_OWORD *)v8;
            *((void *)v9 + 2) = *((void *)v8 + 2);
            *(_OWORD *)unint64_t v9 = v17;
          }
        }
        v9 += 24;
        if (v6 >= v15) {
          break;
        }
        uint64_t v8 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v30 = v9;
    }
LABEL_38:
    a5(&v30, &v29, &v28);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

BOOL sub_10003B154(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17) << 8 != 512;
}

uint64_t sub_10003B168@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2 = *(unsigned __int16 *)(result + 16) | (*(unsigned __int8 *)(result + 18) << 16);
  if ((*(_WORD *)(result + 16) & 0xFF00) == 0x200)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void *)(result + 8);
    *(_DWORD *)a2 = *(void *)result;
    *(void *)(a2 + 8) = v3;
    *(unsigned char *)(a2 + 16) = v2 & 1;
    *(unsigned char *)(a2 + 17) = BYTE1(v2) & 1;
    *(unsigned char *)(a2 + 18) = BYTE2(v2);
  }
  return result;
}

uint64_t sub_10003B1AC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10003B1D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003B230(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003B284()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 152, 7);
}

uint64_t _s29DetermineMessageBatchesResultOMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070A550);
}

uint64_t sub_10003B314(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003B34C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003B3AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x100000000000000;
  if (!*(unsigned char *)(v1 + 39)) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x1000000000000;
  if (!*(unsigned char *)(v1 + 38)) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 37)) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = &_mh_execute_header;
  if (!*(unsigned char *)(v1 + 36)) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 0x1000000;
  if (!*(unsigned char *)(v1 + 35)) {
    uint64_t v6 = 0;
  }
  return sub_100036FE4(*(void *)(v1 + 16), *(void *)(v1 + 24), ((v6 | ((unint64_t)*(unsigned __int8 *)(v1 + 33) << 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 34) << 16) | (unint64_t)v5 | v4 | v3)+ v2) | *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_10003B42C()
{
  return sub_10003BDC0((uint64_t (*)(void, void, void, void, unint64_t))sub_100037094);
}

uint64_t sub_10003B444(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = result;
  int64_t v9 = 0;
  uint64_t v10 = result + 56;
  uint64_t v11 = 1 << *(unsigned char *)(result + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(result + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v14) {
      return 0;
    }
    unint64_t v18 = *(void *)(v10 + 8 * v9);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_19:
    unsigned __int8 v21 = *(unsigned char *)(*(void *)(v8 + 48) + v16);
    BOOL v20 = sub_10009CCF4(&v21, a2, a3, a4);
    uint64_t result = 1;
    if (v4 || v20) {
      return result;
    }
  }
  int64_t v19 = v9 + 1;
  if (v9 + 1 >= v14) {
    return 0;
  }
  unint64_t v18 = *(void *)(v10 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v19 = v9 + 2;
  if (v9 + 2 >= v14) {
    return 0;
  }
  unint64_t v18 = *(void *)(v10 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v19 = v9 + 3;
  if (v9 + 3 >= v14) {
    return 0;
  }
  unint64_t v18 = *(void *)(v10 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v19 = v9 + 4;
  if (v9 + 4 >= v14) {
    return 0;
  }
  unint64_t v18 = *(void *)(v10 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v9 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      return 0;
    }
    unint64_t v18 = *(void *)(v10 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10003B5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10003C94C(a1 + 56, (uint64_t)v22);
  if (*(void *)(a2 + 16))
  {
    sub_1005E33F0();
    sub_1005E2BE0();
    Swift::Int v5 = sub_1005E3470();
    uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      do
      {
        sub_10003C94C(*(void *)(a2 + 48) + 48 * v7, (uint64_t)v21);
        uint64_t v9 = v21[0];
        uint64_t v10 = v22[0];
        sub_10003C94C((uint64_t)v21, (uint64_t)v20);
        sub_10003C94C((uint64_t)v22, (uint64_t)v19);
        if (v9 == v10)
        {
          char v11 = sub_1005E2BD0();
          sub_10003C9A8((uint64_t)v19);
          sub_10003C9A8((uint64_t)v20);
          sub_10003C9A8((uint64_t)v21);
          if (v11)
          {
            sub_10003C9A8((uint64_t)v22);
            char v12 = 0;
            return v12 & 1;
          }
        }
        else
        {
          sub_10003C9A8((uint64_t)v19);
          sub_10003C9A8((uint64_t)v20);
          sub_10003C9A8((uint64_t)v21);
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
  }
  sub_10003C9A8((uint64_t)v22);
  if (*(void *)(a3 + 16) && (unint64_t v13 = sub_100024264(*(void *)(a1 + 24), *(_DWORD *)(a1 + 32)), (v14 & 1) != 0))
  {
    Swift::Int v15 = *(void *)(*(void *)(a3 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    Swift::Int v16 = swift_bridgeObjectRetain();
    char v12 = sub_100091FEC(v16, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = 1;
  }
  return v12 & 1;
}

Swift::Int sub_10003B79C(Swift::Int result, uint64_t a2, uint64_t a3)
{
  int64_t v5 = 0;
  Swift::Int v27 = result;
  Swift::Int v6 = result + 56;
  uint64_t v7 = 1 << *(unsigned char *)(result + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(result + 56);
  int64_t v26 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  uint64_t v11 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      if (!*(void *)(a2 + 16)) {
        return 0;
      }
      goto LABEL_21;
    }
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v5 >= v26) {
      return 1;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    if (!v15) {
      break;
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (!*(void *)(a2 + 16)) {
      return 0;
    }
LABEL_21:
    Swift::UInt v17 = *(unsigned __int8 *)(*(void *)(v27 + 48) + v13);
    sub_1005E33F0();
    sub_1005E3410(v17);
    uint64_t result = sub_1005E3470();
    uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v19 = result & ~v18;
    if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      return 0;
    }
    uint64_t v20 = *(void *)(a2 + 48);
    if (*(unsigned __int8 *)(v20 + v19) != v17)
    {
      uint64_t v21 = ~v18;
      do
      {
        unint64_t v19 = (v19 + 1) & v21;
        if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          return 0;
        }
      }
      while (*(unsigned __int8 *)(v20 + v19) != v17);
    }
    if (*(void *)(a3 + 16))
    {
      sub_1005E33F0();
      sub_1005E3410(v17);
      uint64_t result = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v23 = result & ~v22;
      if ((*(void *)(v11 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(a3 + 48);
        if (*(unsigned __int8 *)(v24 + v23) == v17) {
          return 0;
        }
        uint64_t v25 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v25;
          if (((*(void *)(v11 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v24 + v23) == v17) {
            return 0;
          }
        }
      }
    }
  }
  int64_t v16 = v5 + 1;
  if (v5 + 1 >= v26) {
    return 1;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_19;
  }
  int64_t v16 = v5 + 2;
  if (v5 + 2 >= v26) {
    return 1;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_19;
  }
  int64_t v16 = v5 + 3;
  if (v5 + 3 >= v26) {
    return 1;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_19;
  }
  int64_t v16 = v5 + 4;
  if (v5 + 4 >= v26) {
    return 1;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_19:
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v26) {
      return 1;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10003BA44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003BAA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003BAF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 160, 7);
}

unint64_t sub_10003BB54()
{
  unint64_t result = qword_10070A350;
  if (!qword_10070A350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A350);
  }
  return result;
}

uint64_t sub_10003BBA8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003BBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006A8B4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10003BBE8()
{
  return sub_10006AB7C() & 1;
}

unint64_t sub_10003BC08()
{
  unint64_t result = qword_10070A368;
  if (!qword_10070A368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A368);
  }
  return result;
}

uint64_t sub_10003BC5C(uint64_t a1)
{
  return sub_10006A848(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24)) & 1;
}

uint64_t sub_10003BC80()
{
  return swift_release();
}

unint64_t sub_10003BC88()
{
  unint64_t result = qword_10070A398;
  if (!qword_10070A398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A398);
  }
  return result;
}

void *sub_10003BCDC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10003BD20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x100000000000000;
  if (!*(unsigned char *)(v1 + 47)) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x1000000000000;
  if (!*(unsigned char *)(v1 + 46)) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 45)) {
    uint64_t v4 = 0;
  }
  int64_t v5 = &_mh_execute_header;
  if (!*(unsigned char *)(v1 + 44)) {
    int64_t v5 = 0;
  }
  uint64_t v6 = 0x1000000;
  if (!*(unsigned char *)(v1 + 43)) {
    uint64_t v6 = 0;
  }
  return sub_100035F5C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), ((v6 | ((unint64_t)*(unsigned __int8 *)(v1 + 41) << 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 42) << 16) | (unint64_t)v5 | v4 | v3)+ v2) | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_10003BDA8()
{
  return sub_10003BDC0((uint64_t (*)(void, void, void, void, unint64_t))sub_100036188);
}

uint64_t sub_10003BDC0(uint64_t (*a1)(void, void, void, void, unint64_t))
{
  uint64_t v2 = 0x100000000000000;
  if (!*(unsigned char *)(v1 + 55)) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x1000000000000;
  if (!*(unsigned char *)(v1 + 54)) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x10000000000;
  if (!*(unsigned char *)(v1 + 53)) {
    uint64_t v4 = 0;
  }
  int64_t v5 = &_mh_execute_header;
  if (!*(unsigned char *)(v1 + 52)) {
    int64_t v5 = 0;
  }
  uint64_t v6 = 0x1000000;
  if (!*(unsigned char *)(v1 + 51)) {
    uint64_t v6 = 0;
  }
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), ((v6 | ((unint64_t)*(unsigned __int8 *)(v1 + 49) << 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 50) << 16) | (unint64_t)v5 | v4 | v3)+ v2) | *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_10003BE4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100036F30(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_10003BE58(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003BEB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003BF08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 224, 7);
}

uint64_t sub_10003BFA8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C004(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C060(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C0B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 176, 7);
}

uint64_t sub_10003C114@<X0>(uint64_t a1@<X8>)
{
  return sub_100037830(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_10003C120(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10003C12C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C4E8(*(void *)(v1 + 16), a1);
}

uint64_t sub_10003C138(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C18C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C424(*(void *)(v1 + 16), a1);
}

uint64_t sub_10003C198(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C1EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100037710(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_10003C1F8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C258(*(void *)(v1 + 16), a1);
}

uint64_t sub_10003C204(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C258(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C2B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_10003C314(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C370(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C3C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10003C424(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C480()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 168, 7);
}

uint64_t sub_10003C4E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C544()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 176, 7);
}

uint64_t sub_10003C5B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C610(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C664()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 184, 7);
}

uint64_t sub_10003C6D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C730(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C784()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_10003C7EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C848(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C89C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003C8EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 184, 7);
}

uint64_t sub_10003C94C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10003C9A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C9FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[3];
      if (v6)
      {
        uint64_t v7 = a2[4];
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = v7;
        (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v16 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v16;
        *(void *)(a1 + 32) = a2[4];
      }
    }
    else
    {
      uint64_t v9 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      uint64_t v11 = (void *)(a1 + v10);
      unint64_t v12 = (char *)a2 + v10;
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_10000566C(&qword_100709E30);
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_10000566C(&qword_10070A000);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v17 = sub_10000566C(&qword_100709E60);
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v11, v12, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10003CC24(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    if (*(void *)(a1 + 24))
    {
      return _s13IMAP2Behavior4TaskOwxx_0(a1);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v4 = sub_10000566C(&qword_100709E30);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
    if (!result)
    {
      uint64_t v5 = sub_10000566C(&qword_100709E60);
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(v3, v5);
    }
  }
  return result;
}

uint64_t sub_10003CD28(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = v5;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v13;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10000566C(&qword_100709E30);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10000566C(&qword_10070A000);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10003CEF8(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_10003B34C(a1, _s29DetermineMessageBatchesResultOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *((void *)a2 + 3);
      if (v4)
      {
        *(void *)(a1 + 24) = v4;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      }
      else
      {
        long long v11 = *a2;
        long long v12 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v11;
        *(_OWORD *)(a1 + 16) = v12;
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      uint64_t v5 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      uint64_t v6 = (void *)(a1 + v5);
      uint64_t v7 = (char *)a2 + v5;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_10000566C(&qword_100709E30);
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = sub_10000566C(&qword_10070A000);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v13 = sub_10000566C(&qword_100709E60);
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v7, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10003D0F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_10000566C(&qword_100709E30);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_10000566C(&qword_10070A000);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10003D284(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003B34C((uint64_t)a1, _s29DetermineMessageBatchesResultOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for MessageBatches(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_10000566C(&qword_100709E30);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_10000566C(&qword_10070A000);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10003D43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003DAB4(a1, a2, a3, type metadata accessor for MessageBatches);
}

uint64_t sub_10003D454(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[3];
      if (v6)
      {
        uint64_t v7 = a2[4];
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = v7;
        (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v11 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v11;
        *(void *)(a1 + 32) = a2[4];
      }
    }
    else
    {
      uint64_t v9 = sub_10000566C(&qword_100709E60);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = type metadata accessor for NewestMessages();
      *(void *)(a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
      *(void *)(a1 + *(int *)(v10 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10003D5C0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    if (*(void *)(a1 + 24))
    {
      return _s13IMAP2Behavior4TaskOwxx_0(a1);
    }
  }
  else
  {
    uint64_t v3 = sub_10000566C(&qword_100709E60);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_10003D668(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = v5;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
  }
  else
  {
    uint64_t v6 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for NewestMessages();
    *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
    *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10003D784(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_10003B34C(a1, _s29DetermineNewestMessagesResultOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *((void *)a2 + 3);
      if (v4)
      {
        *(void *)(a1 + 24) = v4;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      }
      else
      {
        long long v7 = *a2;
        long long v8 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
    }
    else
    {
      uint64_t v5 = sub_10000566C(&qword_100709E60);
      (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = type metadata accessor for NewestMessages();
      *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)((char *)a2 + *(int *)(v6 + 20));
      *(void *)(a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10003D8C8(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for NewestMessages();
    *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
    *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10003D9A0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003B34C((uint64_t)a1, _s29DetermineNewestMessagesResultOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for NewestMessages();
      *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
      *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10003DA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003DAB4(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for NewestMessages);
}

uint64_t sub_10003DAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t _s12ResyncResultOwxx(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1)
  {
    return _s13IMAP2Behavior4TaskOwxx_0(a1);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t _s12ResyncResultOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    char v5 = 1;
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t _s12ResyncResultOwca(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      _s13IMAP2Behavior4TaskOwxx_0(a1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s12ResyncResultOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      _s13IMAP2Behavior4TaskOwxx_0(a1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    *(unsigned char *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t _s12ResyncResultOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s12ResyncResultOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10003DEF8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_10003DF14(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *_s12ResyncResultOMa()
{
  return &_s12ResyncResultON;
}

uint64_t sub_10003DF50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003DFB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003E020(uint64_t result, unint64_t a2)
{
  uint64_t v2 = (a2 >> 60) & 3;
  if (v2)
  {
    if (v2 != 1) {
      return result;
    }
    a2 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  return sub_100008D24(result, a2);
}

uint64_t sub_10003E03C(uint64_t result, unint64_t a2)
{
  uint64_t v2 = (a2 >> 60) & 3;
  if (v2)
  {
    if (v2 != 1) {
      return result;
    }
    a2 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  return sub_1000094D4(result, a2);
}

uint64_t sub_10003E058(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 60) | 4) != 0xF) {
    return sub_100008D24(a1, a2);
  }
  return a1;
}

uint64_t sub_10003E070(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 60) | 4) != 0xF) {
    return sub_1000094D4(a1, a2);
  }
  return a1;
}

uint64_t sub_10003E08C()
{
  return sub_10003BBE8() & 1;
}

unint64_t sub_10003E0B0()
{
  unint64_t result = qword_10070A648;
  if (!qword_10070A648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A648);
  }
  return result;
}

Swift::Int sub_10003E10C()
{
  Swift::UInt16 v1 = *v0;
  sub_1005E33F0();
  sub_1005E3430(v1);
  return sub_1005E3470();
}

void sub_10003E154()
{
  sub_1005E3430(*v0);
}

Swift::Int sub_10003E180()
{
  Swift::UInt16 v1 = *v0;
  sub_1005E33F0();
  sub_1005E3430(v1);
  return sub_1005E3470();
}

BOOL sub_10003E1C4(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10003E1D8(__int16 a1)
{
  uint64_t v2 = sub_1005E34A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070A650);
  __chkstk_darwin(v6 - 8);
  long long v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[7] = a1;
  sub_10000566C(&qword_10070A658);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005F6690;
  *(void *)(v9 + 32) = 0x696C696269736976;
  *(void *)(v9 + 40) = 0xEA00000000007974;
  *(unsigned char *)(v9 + 48) = a1 < 0;
  *(void *)(v9 + 72) = &_s11UserVisibleON;
  *(void *)(v9 + 80) = 0x797469726F697270;
  *(void *)(v9 + 88) = 0xE800000000000000;
  *(void *)(v9 + 120) = &_s12PriorityInfoV5OrderVN;
  *(_WORD *)(v9 + 96) = a1 & 0x3FFF;
  uint64_t v10 = enum case for Mirror.DisplayStyle.struct(_:);
  uint64_t v11 = sub_1005E3490();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Mirror.AncestorRepresentation.generated(_:), v2);
  return sub_1005E34B0();
}

uint64_t sub_10003E434()
{
  return sub_10003E1D8(*v0);
}

uint64_t sub_10003E43C()
{
  if (*v0 == 0x3FFF) {
    return 0x656E6F6E2ELL;
  }
  else {
    return sub_1005E3230();
  }
}

BOOL sub_10003E4A0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 < *a2;
}

BOOL sub_10003E4B4(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_10003E4C8(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_10003E4DC(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a2 < *a1;
}

void sub_10003E4F0(_WORD *a1@<X8>)
{
  *a1 = -16385;
}

uint64_t sub_10003E4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_1000D4570((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    uint64_t v6 = (Swift::UInt *)(a2 + 40);
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      Swift::UInt v8 = *v6;
      if ((unsigned __int16)v5 >= 0x3FFFu) {
        __int16 v9 = 0x3FFF;
      }
      else {
        __int16 v9 = v5;
      }
      if (v3[2])
      {
        sub_1000242DC(*(v6 - 1), *v6);
        if (v10) {
          goto LABEL_5;
        }
      }
      if (v5 >> 16) {
        __int16 v11 = -16385;
      }
      else {
        __int16 v11 = v9 | 0x8000;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v14 = sub_1000242DC(v7, v8);
      uint64_t v15 = v3[2];
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16)) {
        goto LABEL_63;
      }
      char v18 = v13;
      if (v3[3] >= v17)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v13 & 1) == 0) {
            goto LABEL_21;
          }
        }
        else
        {
          sub_100096E28();
          if ((v18 & 1) == 0) {
            goto LABEL_21;
          }
        }
      }
      else
      {
        sub_10004F198(v17, isUniquelyReferenced_nonNull_native);
        unint64_t v19 = sub_1000242DC(v7, v8);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_66;
        }
        unint64_t v14 = v19;
        if ((v18 & 1) == 0)
        {
LABEL_21:
          v3[(v14 >> 6) + 8] |= 1 << v14;
          uint64_t v21 = (uint64_t *)(v3[6] + 16 * v14);
          *uint64_t v21 = v7;
          v21[1] = v8;
          *(_WORD *)(v3[7] + 2 * v14) = v11;
          uint64_t v22 = v3[2];
          BOOL v23 = __OFADD__(v22, 1);
          uint64_t v24 = v22 + 1;
          if (v23) {
            goto LABEL_64;
          }
          v3[2] = v24;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      *(_WORD *)(v3[7] + 2 * v14) = v11;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      ++v5;
      v6 += 2;
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v25 = a1 + 56;
  uint64_t v26 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & *(void *)(a1 + 56);
  int64_t v29 = (unint64_t)(v26 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  int64_t v31 = 0;
  while (1)
  {
    if (v28)
    {
      unint64_t v33 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v34 = v33 | (v31 << 6);
    }
    else
    {
      int64_t v35 = v31 + 1;
      if (__OFADD__(v31, 1)) {
        goto LABEL_62;
      }
      if (v35 >= v29)
      {
LABEL_59:
        swift_release();
        sub_10003E960((uint64_t)v30);
        return (uint64_t)v3;
      }
      unint64_t v36 = *(void *)(v25 + 8 * v35);
      ++v31;
      if (!v36)
      {
        int64_t v31 = v35 + 1;
        if (v35 + 1 >= v29) {
          goto LABEL_59;
        }
        unint64_t v36 = *(void *)(v25 + 8 * v31);
        if (!v36)
        {
          int64_t v31 = v35 + 2;
          if (v35 + 2 >= v29) {
            goto LABEL_59;
          }
          unint64_t v36 = *(void *)(v25 + 8 * v31);
          if (!v36)
          {
            int64_t v37 = v35 + 3;
            if (v37 >= v29) {
              goto LABEL_59;
            }
            unint64_t v36 = *(void *)(v25 + 8 * v37);
            if (!v36)
            {
              while (1)
              {
                int64_t v31 = v37 + 1;
                if (__OFADD__(v37, 1)) {
                  goto LABEL_65;
                }
                if (v31 >= v29) {
                  goto LABEL_59;
                }
                unint64_t v36 = *(void *)(v25 + 8 * v31);
                ++v37;
                if (v36) {
                  goto LABEL_46;
                }
              }
            }
            int64_t v31 = v37;
          }
        }
      }
LABEL_46:
      unint64_t v28 = (v36 - 1) & v36;
      unint64_t v34 = __clz(__rbit64(v36)) + (v31 << 6);
    }
    char v38 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v34);
    uint64_t v39 = *v38;
    Swift::UInt v40 = v38[1];
    swift_bridgeObjectRetain();
    sub_10003E960((uint64_t)v30);
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = sub_1000242DC(v39, v40);
    uint64_t v44 = v3[2];
    BOOL v45 = (v42 & 1) == 0;
    uint64_t v46 = v44 + v45;
    if (__OFADD__(v44, v45)) {
      break;
    }
    char v47 = v42;
    if (v3[3] >= v46)
    {
      if ((v41 & 1) == 0) {
        sub_100096E28();
      }
    }
    else
    {
      sub_10004F198(v46, v41);
      unint64_t v48 = sub_1000242DC(v39, v40);
      if ((v47 & 1) != (v49 & 1)) {
        goto LABEL_66;
      }
      unint64_t v43 = v48;
    }
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
      v3[(v43 >> 6) + 8] |= 1 << v43;
      uint64_t v50 = (uint64_t *)(v3[6] + 16 * v43);
      *uint64_t v50 = v39;
      v50[1] = v40;
      *(_WORD *)(v3[7] + 2 * v43) = -16385;
      uint64_t v51 = v3[2];
      uint64_t v52 = v51 + 1;
      BOOL v53 = __OFADD__(v51, 1);
      swift_bridgeObjectRetain();
      if (v53) {
        goto LABEL_61;
      }
      v3[2] = v52;
    }
    swift_bridgeObjectRetain();
    uint64_t v32 = v3[7];
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 2 * v43) &= ~0x8000u;
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_10003E4F0;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_10003E960(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

ValueMetadata *_s12PriorityInfoV5OrderVMa()
{
  return &_s12PriorityInfoV5OrderVN;
}

ValueMetadata *_s12PriorityInfoVMa()
{
  return &_s12PriorityInfoVN;
}

unint64_t sub_10003E994()
{
  unint64_t result = qword_10070A660;
  if (!qword_10070A660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A660);
  }
  return result;
}

void *sub_10003E9F0()
{
  unint64_t result = &_swiftEmptySetSingleton;
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v2 = *(void *)v0;
    uint64_t v3 = *(void *)(v0 + 8);
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v30 = &_swiftEmptySetSingleton;
    uint64_t v5 = *(void *)(v2 + 16);
    if (v5)
    {
      uint64_t v6 = (long long *)(v2 + 32);
      swift_bridgeObjectRetain();
      for (uint64_t i = v5 - 1; ; --i)
      {
        long long v8 = *v6;
        long long v9 = v6[2];
        long long v20 = v6[1];
        long long v21 = v9;
        long long v19 = v8;
        long long v10 = v6[3];
        long long v11 = v6[4];
        long long v12 = v6[6];
        long long v24 = v6[5];
        long long v25 = v12;
        long long v22 = v10;
        long long v23 = v11;
        long long v13 = v6[7];
        long long v14 = v6[8];
        long long v15 = v6[10];
        long long v28 = v6[9];
        long long v29 = v15;
        long long v26 = v13;
        long long v27 = v14;
        if (*(void *)(*((void *)&v28 + 1) + 16))
        {
          uint64_t v16 = v20;
          unsigned int v17 = DWORD2(v20);
          sub_100007780((uint64_t)&v19);
          swift_bridgeObjectRetain();
          sub_1000187DC((uint64_t)&v18, v16, v17);
          swift_bridgeObjectRelease();
          sub_100007820((uint64_t)&v19);
        }
        if (!i) {
          break;
        }
        v6 += 11;
      }
      sub_10000F0D4(v2, v3, v4, 1);
      return v30;
    }
  }
  return result;
}

void *sub_10003EB0C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v23 = *(void *)(a1 + 16);
  sub_10001A774(0, v1, 0);
  unint64_t result = (void *)sub_100103FD8(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = v23;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v9 = a1 + 80;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v5 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    int v12 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v5);
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1)
    {
      uint64_t v21 = v8;
      uint64_t v22 = v4;
      uint64_t v20 = v9;
      unint64_t result = (void *)sub_10001A774(v13 > 1, v14 + 1, 1);
      uint64_t v9 = v20;
      uint64_t v8 = v21;
      uint64_t v4 = v22;
      uint64_t v6 = v23;
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    *((_DWORD *)&_swiftEmptyArrayStorage[4] + v14) = v12;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v10) {
      goto LABEL_25;
    }
    uint64_t v15 = *(void *)(v8 + 8 * v11);
    if ((v15 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v5 & 0x3F));
    if (v16)
    {
      int64_t v10 = __clz(__rbit64(v16)) | v5 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v10 + 63) >> 6;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v8 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            unint64_t v19 = *(void *)(v9 + 8 * v11++);
            if (v19)
            {
              unint64_t v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v5 = v10;
    if (v7 == v6) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_10003ED04(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_10001A794(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (int *)(a1 + 32);
    do
    {
      int v6 = *v4;
      v4 += 6;
      int v5 = v6;
      uint64_t v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_10001A794(v7 > 1, v8 + 1, 1);
        unint64_t result = v9;
      }
      result[2] = v8 + 1;
      *((_DWORD *)result + v8 + 8) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_10003EDC4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v31 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v31);
  uint64_t v27 = (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v30 = a1 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v28 = a2;
  uint64_t v29 = a1;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v15 >= v33) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v33) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v30 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v33) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v30 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 3;
          if (v15 + 3 >= v33) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v30 + 8 * v12);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_24:
    unsigned __int8 v18 = *(unsigned char *)(*(void *)(a1 + 48) + v14);
    uint64_t v20 = (uint64_t (*)(unsigned char *, void))sub_10008B468((uint64_t)v32, a3);
    if (*(void *)(v19 + 96))
    {
      uint64_t v21 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unint64_t v22 = a3;
        uint64_t v23 = *(void *)(v21 + 96)
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        uint64_t v24 = v27;
        sub_100057F2C(v23, v27, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v25 = swift_allocObject();
        sub_100057FF4(v24, v25+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        *(void *)(v21 + 96) = v25;
        a3 = v22;
        a1 = v29;
        swift_release();
      }
      swift_beginAccess();
      sub_1000935B0(v18);
      swift_endAccess();
    }
    uint64_t result = v20(v32, 0);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v33) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v33) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v30 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10003F0E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a1;
  uint64_t v59 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v60 = (unint64_t)(v4 + 63) >> 6;
  unint64_t v57 = a2 + 1;
  int64_t v7 = 0;
  uint64_t v58 = swift_bridgeObjectRetain();
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v7 << 6);
LABEL_23:
    uint64_t v13 = *(void *)(v3 + 48) + 16 * v9;
    uint64_t v14 = *(void *)v13;
    unsigned int v15 = *(_DWORD *)(v13 + 8);
    uint64_t v16 = a2[1];
    uint64_t v17 = v16 + 32;
    uint64_t v18 = *(void *)(v16 + 16);
    if (*a2)
    {
      Swift::Int v19 = sub_1000CE1DC(v14, v15, v17, v18, (void *)(*a2 + 16));
      if ((v21 & 1) == 0)
      {
        unint64_t v22 = v19;
        uint64_t v23 = v20;
        unsigned int v68 = v15;
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v24 = sub_1000CE0E8(v14, v15, v17, v18);
      if ((v25 & 1) == 0)
      {
        unint64_t v22 = v24;
        unsigned int v68 = v15;
        uint64_t v23 = 0;
LABEL_28:
        uint64_t v27 = *a2;
        uint64_t v26 = a2[1];
        uint64_t v28 = *(void *)(v26 + 16);
        if (*a2)
        {
          swift_beginAccess();
          if ((*(void *)(v27 + 16) & 0x3FLL) == (*(void *)(v27 + 24) & 0x3FLL))
          {
            if (!v28) {
              goto LABEL_46;
            }
            goto LABEL_39;
          }
          if (v28 > sub_1005E0BB0())
          {
LABEL_39:
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_native = swift_isUniquelyReferenced_native();
            uint64_t v33 = *a2;
            if ((isUniquelyReferenced_native & 1) == 0)
            {
              if (!v33) {
                goto LABEL_75;
              }
              uint64_t v33 = sub_1005E0BC0();
              swift_release();
              *a2 = v33;
            }
            if (!v33) {
              goto LABEL_74;
            }
            sub_1000A4F10(v23, (void *)(v33 + 16), v33 + 32, (uint64_t)a2);
            uint64_t v34 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_70;
            }
            if (v34 < (uint64_t)v22) {
              goto LABEL_71;
            }
            sub_1000A50DC(v22, v34, a2[1], (void *)(v33 + 16));
            sub_1000A46C8(v22);
            goto LABEL_60;
          }
LABEL_46:
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v26 = sub_1000A4B7C(v26);
          }
          unint64_t v35 = *(void *)(v26 + 16);
          if (v22 >= v35) {
            goto LABEL_69;
          }
          unint64_t v36 = v35 - 1;
          uint64_t v37 = v35 - 1 - v22;
          if (v37 < 0) {
            goto LABEL_76;
          }
          memmove((void *)(v26 + 16 * v22 + 32), (const void *)(v26 + 16 * v22 + 48), 16 * v37);
          *(void *)(v26 + 16) = v36;
          a2[1] = v26;
          uint64_t v38 = *a2;
          if (*a2)
          {
            swift_beginAccess();
            uint64_t v39 = *(void *)(v38 + 24) & 0x3FLL;
            unint64_t v40 = *(void *)(v26 + 16);
            if (v39)
            {
LABEL_56:
              uint64_t v41 = sub_1005E0BD0();
              if (v39 <= v41) {
                uint64_t v42 = v41;
              }
              else {
                uint64_t v42 = v39;
              }
              uint64_t v43 = sub_1000A4124(v26, v42, 0, v39);
              swift_release();
              *a2 = v43;
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v39 = 0;
            unint64_t v40 = *(void *)(v26 + 16);
          }
          if (v40 < 0x10)
          {
            swift_release();
            *a2 = 0;
            goto LABEL_60;
          }
          goto LABEL_56;
        }
        if (!v28) {
          goto LABEL_46;
        }
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1000A4B7C(v26);
        }
        unint64_t v29 = *(void *)(v26 + 16);
        if (v22 >= v29) {
          goto LABEL_72;
        }
        unint64_t v30 = v29 - 1;
        uint64_t v31 = v29 - 1 - v22;
        if (v31 < 0) {
          goto LABEL_76;
        }
        memmove((void *)(v26 + 16 * v22 + 32), (const void *)(v26 + 16 * v22 + 48), 16 * v31);
        *(void *)(v26 + 16) = v30;
        *unint64_t v57 = v26;
LABEL_60:
        swift_bridgeObjectRelease();
        uint64_t v44 = a2[2];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v44 = sub_1000A4C78(v44);
        }
        unint64_t v45 = *(void *)(v44 + 16);
        if (v22 >= v45)
        {
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        unint64_t v46 = v45 - 1;
        char v47 = (_OWORD *)(v44 + 176 * v22);
        long long v48 = v47[2];
        long long v49 = v47[4];
        v62[1] = v47[3];
        v62[2] = v49;
        v62[0] = v48;
        long long v50 = v47[5];
        long long v51 = v47[6];
        long long v52 = v47[8];
        v62[5] = v47[7];
        long long v63 = v52;
        v62[3] = v50;
        v62[4] = v51;
        long long v53 = v47[9];
        long long v54 = v47[10];
        long long v55 = v47[12];
        long long v66 = v47[11];
        long long v67 = v55;
        long long v64 = v53;
        long long v65 = v54;
        if ((uint64_t)(v46 - v22) < 0) {
          goto LABEL_76;
        }
        memmove(v47 + 2, v47 + 13, 176 * (v46 - v22));
        *(void *)(v44 + 16) = v46;
        a2[2] = v44;
        sub_100007820((uint64_t)v62);
        if ((void)v63)
        {
          swift_bridgeObjectRetain();
          sub_1000187DC((uint64_t)&v61, v14, v68);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v3 = v58;
      }
    }
  }
  int64_t v10 = v7 + 1;
  if (__OFADD__(v7, 1)) {
    goto LABEL_68;
  }
  if (v10 >= v60) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v59 + 8 * v10);
  ++v7;
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 1;
  if (v10 + 1 >= v60) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v59 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 2;
  if (v10 + 2 >= v60) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v59 + 8 * v7);
  if (v11) {
    goto LABEL_22;
  }
  int64_t v7 = v10 + 3;
  if (v10 + 3 >= v60) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v59 + 8 * v7);
  if (v11)
  {
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_23;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v60) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v59 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v60) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v59 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10003F638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(unsigned char *)(a2 + 24))
    {
      return sub_100077D1C(v4, v5);
    }
    return 0;
  }
  if (*(unsigned char *)(a2 + 24)) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if ((sub_1000206A8(v4, v5) & 1) == 0 || (sub_100077ADC(v10, v8) & 1) == 0) {
    return 0;
  }
  return sub_100077C3C(v9, v7);
}

BOOL sub_10003F6EC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  long long v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 12) = *(_OWORD *)((char *)a1 + 60);
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a2[3];
  void v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)((char *)a2 + 60);
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_100055900((uint64_t)v7, (uint64_t)v9);
}

unint64_t sub_10003F748()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v1 = *(void *)v0;
    uint64_t v2 = *(void *)(v0 + 8);
    uint64_t v53 = *(void *)(v0 + 16);
    long long v3 = (void *)sub_1000D48E4((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v4 = *(void *)(v1 + 16);
    if (!v4) {
      return (unint64_t)v3;
    }
    uint64_t v54 = v1 + 32;
    swift_bridgeObjectRetain();
    long long v5 = *(_OWORD *)(v1 + 160);
    long long v62 = *(_OWORD *)(v1 + 144);
    long long v6 = *(_OWORD *)(v1 + 176);
    long long v7 = *(_OWORD *)(v1 + 192);
    long long v63 = v5;
    long long v64 = v6;
    long long v65 = v7;
    long long v8 = *(_OWORD *)(v1 + 96);
    long long v58 = *(_OWORD *)(v1 + 80);
    long long v59 = v8;
    long long v9 = *(_OWORD *)(v1 + 128);
    long long v60 = *(_OWORD *)(v1 + 112);
    long long v61 = v9;
    long long v10 = *(_OWORD *)(v1 + 48);
    long long v55 = *(_OWORD *)(v1 + 32);
    long long v56 = v10;
    uint64_t v52 = v1;
    long long v57 = *(_OWORD *)(v1 + 64);
    uint64_t v11 = v6;
    uint64_t v12 = 1;
    unint64_t v13 = *(void *)(v6 + 16);
    if (!v13) {
      goto LABEL_33;
    }
LABEL_4:
    LOBYTE(v14) = *(unsigned char *)(v11 + 64);
    unint64_t v15 = v13 - 1;
    if (v13 != 1)
    {
      if (v13 < 3)
      {
        uint64_t v16 = 1;
LABEL_17:
        unint64_t v23 = v13 - v16;
        uint64_t v24 = (unsigned __int8 *)(v11 + 40 * v16 + 64);
        do
        {
          unsigned int v26 = *v24;
          v24 += 40;
          char v25 = v26;
          if (v14 <= v26) {
            LOBYTE(v14) = v25;
          }
          --v23;
        }
        while (v23);
        goto LABEL_21;
      }
      uint64_t v16 = v15 | 1;
      uint64_t v17 = (unsigned __int8 *)(v11 + 144);
      unint64_t v18 = v15 & 0xFFFFFFFFFFFFFFFELL;
      LOBYTE(v19) = *(unsigned char *)(v11 + 64);
      do
      {
        unsigned int v20 = *(v17 - 40);
        unsigned int v22 = *v17;
        v17 += 80;
        unsigned int v21 = v22;
        if (v14 <= v20) {
          unsigned int v14 = v20;
        }
        else {
          unsigned int v14 = v14;
        }
        unsigned int v19 = v19;
        if (v19 <= v21) {
          unsigned int v19 = v21;
        }
        v18 -= 2;
      }
      while (v18);
      if (v14 <= v19) {
        LOBYTE(v14) = v19;
      }
      if (v15 != (v15 & 0xFFFFFFFFFFFFFFFELL)) {
        goto LABEL_17;
      }
    }
LABEL_21:
    uint64_t v27 = v56;
    unsigned int v28 = DWORD2(v56);
    sub_100007780((uint64_t)&v55);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v31 = sub_100024264(v27, v28);
    uint64_t v32 = v3[2];
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    char v35 = v30;
    if (v3[3] < v34)
    {
      sub_100050AF8(v34, isUniquelyReferenced_nonNull_native, &qword_10070A668);
      unint64_t v36 = sub_100024264(v27, v28);
      if ((v35 & 1) != (v37 & 1))
      {
LABEL_43:
        unint64_t result = sub_1005E3380();
        __break(1u);
        return result;
      }
      unint64_t v31 = v36;
      if ((v35 & 1) == 0) {
        goto LABEL_30;
      }
LABEL_28:
      *(unsigned char *)(v3[7] + v31) = v14;
      goto LABEL_32;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v30) {
        goto LABEL_28;
      }
    }
    else
    {
      sub_100096FD8();
      if (v35) {
        goto LABEL_28;
      }
    }
LABEL_30:
    v3[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t v38 = v3[6] + 16 * v31;
    *(void *)uint64_t v38 = v27;
    *(_DWORD *)(v38 + 8) = v28;
    *(unsigned char *)(v3[7] + v31) = v14;
    uint64_t v39 = v3[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (!v40)
    {
      v3[2] = v41;
      swift_bridgeObjectRetain();
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007820((uint64_t)&v55);
LABEL_33:
      while (v12 != v4)
      {
        uint64_t v42 = (long long *)(v54 + 176 * v12);
        long long v43 = *v42;
        long long v44 = v42[2];
        long long v56 = v42[1];
        long long v57 = v44;
        long long v55 = v43;
        long long v45 = v42[3];
        long long v46 = v42[4];
        long long v47 = v42[6];
        long long v60 = v42[5];
        long long v61 = v47;
        long long v58 = v45;
        long long v59 = v46;
        long long v48 = v42[7];
        long long v49 = v42[8];
        long long v50 = v42[10];
        long long v64 = v42[9];
        long long v65 = v50;
        long long v63 = v49;
        long long v62 = v48;
        uint64_t v11 = v64;
        ++v12;
        unint64_t v13 = *(void *)(v64 + 16);
        if (v13) {
          goto LABEL_4;
        }
      }
      sub_10000F0D4(v52, v2, v53, 1);
      return (unint64_t)v3;
    }
    goto LABEL_42;
  }
  return sub_1000D48E4((uint64_t)_swiftEmptyArrayStorage);
}

void *sub_10003FA98()
{
  return sub_10003FAA8(1);
}

void *sub_10003FAA0()
{
  return sub_10003FAA8(2);
}

void *sub_10003FAA8(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 24) != 1)
  {
    return (void *)sub_1000D48F0((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  if (!v3) {
    return _swiftEmptyDictionarySingleton;
  }
  uint64_t v43 = *(void *)(v1 + 16);
  uint64_t v44 = *(void *)(v1 + 8);
  uint64_t v4 = (_OWORD *)swift_bridgeObjectRetain();
  long long v5 = v4[10];
  long long v54 = v4[9];
  long long v6 = v4[11];
  long long v7 = v4[12];
  long long v55 = v5;
  long long v56 = v6;
  long long v57 = v7;
  long long v8 = v4[6];
  long long v50 = v4[5];
  long long v51 = v8;
  long long v9 = v4[8];
  long long v52 = v4[7];
  long long v53 = v9;
  long long v10 = v4[3];
  long long v47 = v4[2];
  long long v48 = v10;
  long long v49 = v4[4];
  Swift::UInt v12 = *((void *)&v47 + 1);
  uint64_t v11 = v10;
  int v46 = DWORD2(v10);
  uint64_t v45 = (uint64_t)v4;
  unint64_t v13 = v4 + 13;
  for (uint64_t i = v3 - 1; ; --i)
  {
    uint64_t v15 = v52;
    uint64_t v16 = v47;
    uint64_t v17 = *((void *)&v51 + 1);
    sub_100007780((uint64_t)&v47);
    if ((static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v17, v15, a1, 0) & 1) == 0)
    {
      sub_100007820((uint64_t)&v47);
      if (!i) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
    uint64_t v18 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = sub_1000242DC(v16, v12);
    uint64_t v22 = _swiftEmptyDictionarySingleton[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (_swiftEmptyDictionarySingleton[3] >= v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v20 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_100096FE4();
        if ((v25 & 1) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      sub_10004F480(v24, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = sub_1000242DC(v16, v12);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_27;
      }
      unint64_t v21 = v26;
      if ((v25 & 1) == 0)
      {
LABEL_16:
        _swiftEmptyDictionarySingleton[(v21 >> 6) + 8] |= 1 << v21;
        unint64_t v29 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v21);
        *unint64_t v29 = v16;
        v29[1] = v12;
        uint64_t v30 = _swiftEmptyDictionarySingleton[7] + 16 * v21;
        *(void *)uint64_t v30 = v11;
        *(_DWORD *)(v30 + 8) = v46;
        uint64_t v31 = _swiftEmptyDictionarySingleton[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_26;
        }
        _swiftEmptyDictionarySingleton[2] = v33;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      }
    }
    uint64_t v28 = _swiftEmptyDictionarySingleton[7] + 16 * v21;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v28 = v11;
    *(_DWORD *)(v28 + 8) = v46;
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100007820((uint64_t)&v47);
    a1 = v18;
    if (!i)
    {
LABEL_23:
      sub_10000F0D4(v45, v44, v43, 1);
      return _swiftEmptyDictionarySingleton;
    }
LABEL_19:
    long long v34 = *v13;
    long long v35 = v13[2];
    long long v48 = v13[1];
    long long v49 = v35;
    long long v47 = v34;
    long long v36 = v13[3];
    long long v37 = v13[4];
    long long v38 = v13[6];
    long long v52 = v13[5];
    long long v53 = v38;
    long long v50 = v36;
    long long v51 = v37;
    long long v39 = v13[7];
    long long v40 = v13[8];
    long long v41 = v13[10];
    long long v56 = v13[9];
    long long v57 = v41;
    long long v55 = v40;
    long long v54 = v39;
    Swift::UInt v12 = *((void *)&v47 + 1);
    uint64_t v11 = v48;
    int v46 = DWORD2(v48);
    v13 += 11;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  unint64_t result = (void *)sub_1005E3380();
  __break(1u);
  return result;
}

void *sub_10003FDB4()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v1 = *(void *)(*(void *)v0 + 16);
    if (!v1) {
      return _swiftEmptyDictionarySingleton;
    }
    uint64_t v44 = *(void *)(v0 + 16);
    uint64_t v45 = *(void *)(v0 + 8);
    uint64_t v2 = (_OWORD *)swift_bridgeObjectRetain();
    long long v3 = v2[10];
    long long v56 = v2[9];
    long long v4 = v2[11];
    long long v5 = v2[12];
    long long v57 = v3;
    long long v58 = v4;
    long long v59 = v5;
    long long v6 = v2[6];
    long long v52 = v2[5];
    *(_OWORD *)&v53[0].underlying = v6;
    long long v7 = v2[8];
    long long v54 = v2[7];
    long long v55 = v7;
    long long v8 = v2[3];
    long long v49 = v2[2];
    long long v50 = v8;
    long long v51 = v2[4];
    Swift::UInt v48 = *((void *)&v49 + 1);
    unint64_t v9 = *(void *)&v53[2].underlying;
    uint64_t v46 = (uint64_t)v2;
    long long v10 = v2 + 13;
    uint64_t v11 = v1 - 1;
    if (*(void *)&v53[2].underlying < 3uLL) {
      goto LABEL_16;
    }
LABEL_4:
    uint64_t v47 = v11;
    uint64_t v12 = v49;
    uint64_t v13 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v9);
    int v15 = v14;
    uint64_t v17 = v16;
    int v19 = v18;
    sub_100007780((uint64_t)&v49);
    sub_100007810(v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v22 = sub_1000242DC(v12, v48);
    uint64_t v23 = _swiftEmptyDictionarySingleton[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v26 = v21;
    if (_swiftEmptyDictionarySingleton[3] < v25)
    {
      sub_10004FA78(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_1000242DC(v12, v48);
      if ((v26 & 1) != (v28 & 1))
      {
LABEL_26:
        unint64_t result = (void *)sub_1005E3380();
        __break(1u);
        return result;
      }
      unint64_t v22 = v27;
      if ((v26 & 1) == 0) {
        goto LABEL_13;
      }
LABEL_11:
      uint64_t v29 = _swiftEmptyDictionarySingleton[7] + 32 * v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v29 = v13;
      *(_DWORD *)(v29 + 8) = v15;
      *(void *)(v29 + 16) = v17;
      *(_DWORD *)(v29 + 24) = v19;
      goto LABEL_15;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v21) {
        goto LABEL_11;
      }
    }
    else
    {
      sub_100097360();
      if (v26) {
        goto LABEL_11;
      }
    }
LABEL_13:
    _swiftEmptyDictionarySingleton[(v22 >> 6) + 8] |= 1 << v22;
    uint64_t v30 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v22);
    *uint64_t v30 = v12;
    v30[1] = v48;
    uint64_t v31 = _swiftEmptyDictionarySingleton[7] + 32 * v22;
    *(void *)uint64_t v31 = v13;
    *(_DWORD *)(v31 + 8) = v15;
    *(void *)(v31 + 16) = v17;
    *(_DWORD *)(v31 + 24) = v19;
    uint64_t v32 = _swiftEmptyDictionarySingleton[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (!v33)
    {
      _swiftEmptyDictionarySingleton[2] = v34;
      swift_bridgeObjectRetain();
LABEL_15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100007820((uint64_t)&v49);
      uint64_t v11 = v47;
LABEL_16:
      while (v11)
      {
        long long v35 = *v10;
        long long v36 = v10[2];
        long long v50 = v10[1];
        long long v51 = v36;
        long long v49 = v35;
        long long v37 = v10[3];
        long long v38 = v10[4];
        long long v39 = v10[6];
        long long v54 = v10[5];
        long long v55 = v39;
        long long v52 = v37;
        *(_OWORD *)&v53[0].underlying = v38;
        long long v40 = v10[7];
        long long v41 = v10[8];
        long long v42 = v10[10];
        long long v58 = v10[9];
        long long v59 = v42;
        long long v57 = v41;
        long long v56 = v40;
        Swift::UInt v48 = *((void *)&v49 + 1);
        unint64_t v9 = *(void *)&v53[2].underlying;
        v10 += 11;
        --v11;
        if (*(void *)&v53[2].underlying >= 3uLL) {
          goto LABEL_4;
        }
      }
      sub_10000F0D4(v46, v45, v44, 1);
      return _swiftEmptyDictionarySingleton;
    }
    goto LABEL_25;
  }
  return (void *)sub_1000D4A30((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_1000400E8(uint64_t a1, unsigned int a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  if (*(unsigned char *)(v3 + 24) == 1)
  {
    long long v5 = *(void **)v3;
    uint64_t v6 = *(void *)(v3 + 8);
    uint64_t v7 = *(void *)(v3 + 16);
    uint64_t v8 = sub_100056288(*(void *)v3, a1, a2);
    if ((v9 & 1) == 0)
    {
      unint64_t v10 = v8;
      sub_10005636C((uint64_t)v5, v6, v7, 1);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = v5;
      if (result)
      {
        if ((v10 & 0x8000000000000000) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_100093440(v5);
        uint64_t v12 = (void *)result;
        if ((v10 & 0x8000000000000000) == 0)
        {
LABEL_5:
          if (v10 < v12[2])
          {
            a3(&v13, &v12[22 * v10 + 4]);
            sub_10000F0D4((uint64_t)v5, v6, v7, 1);
            uint64_t result = 0;
            *(void *)uint64_t v3 = v12;
            *(void *)(v3 + 8) = 0;
            *(void *)(v3 + 16) = 0;
            *(unsigned char *)(v3 + 24) = 1;
            return result;
          }
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return result;
    }
  }
  return 1;
}

unint64_t sub_100040204(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, _OWORD *))
{
  sub_100055A48(v3, v28);
  unint64_t result = (unint64_t)sub_100055A48(v28, &v30);
  if (v31 != 1) {
    return 0;
  }
  unint64_t v8 = *(void *)(v30 + 16);
  if (!v8) {
    return 0;
  }
  unint64_t v9 = 0;
  while (1)
  {
    uint64_t v10 = v30 + 32 + 176 * v9;
    if (*(void *)(v10 + 8) == a2)
    {
      uint64_t v11 = *(unsigned __int8 **)v10;
      uint64_t v12 = *(void *)(*(void *)v10 + 16);
      if (v12 == *(void *)(a1 + 16))
      {
        if (v12) {
          BOOL v13 = v11 == (unsigned __int8 *)a1;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13) {
          goto LABEL_26;
        }
        unint64_t result = *(unsigned __int8 *)(a1 + 32);
        if (v11[32] == result)
        {
          if (v12 == 1) {
            goto LABEL_26;
          }
          unint64_t result = *(unsigned __int8 *)(a1 + 33);
          if (v11[33] == result)
          {
            if (v12 == 2) {
              goto LABEL_26;
            }
            unint64_t result = *(unsigned __int8 *)(a1 + 34);
            if (v11[34] == result)
            {
              if (v12 == 3) {
                goto LABEL_26;
              }
              unint64_t result = *(unsigned __int8 *)(a1 + 35);
              if (v11[35] == result)
              {
                if (v12 == 4) {
                  goto LABEL_26;
                }
                unint64_t result = *(unsigned __int8 *)(a1 + 36);
                if (v11[36] == result) {
                  break;
                }
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v9 == v8) {
      return 0;
    }
  }
  int v14 = v11 + 37;
  uint64_t v15 = v12 - 5;
  uint64_t v16 = (unsigned __int8 *)(a1 + 37);
  while (v15)
  {
    unsigned int v17 = *v14++;
    unint64_t result = v17;
    int v18 = *v16++;
    --v15;
    if (result != v18) {
      goto LABEL_4;
    }
  }
LABEL_26:
  if (v9 >= v8)
  {
    __break(1u);
  }
  else
  {
    long long v19 = *(_OWORD *)v10;
    long long v20 = *(_OWORD *)(v10 + 32);
    v29[1] = *(_OWORD *)(v10 + 16);
    v29[2] = v20;
    v29[0] = v19;
    long long v21 = *(_OWORD *)(v10 + 48);
    long long v22 = *(_OWORD *)(v10 + 64);
    long long v23 = *(_OWORD *)(v10 + 80);
    v29[6] = *(_OWORD *)(v10 + 96);
    v29[4] = v22;
    v29[5] = v23;
    _OWORD v29[3] = v21;
    long long v24 = *(_OWORD *)(v10 + 112);
    long long v25 = *(_OWORD *)(v10 + 128);
    long long v26 = *(_OWORD *)(v10 + 160);
    v29[9] = *(_OWORD *)(v10 + 144);
    v29[10] = v26;
    v29[7] = v24;
    v29[8] = v25;
    sub_100007780((uint64_t)v29);
    a3(&v27, v29);
    sub_100007820((uint64_t)v29);
    return v27;
  }
  return result;
}

_OWORD *sub_1000403D4(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_100055A48(a3, v26);
  unint64_t result = sub_100055A48(v26, &v27);
  if (v28 != 1 || (unint64_t v6 = *(void *)(v27 + 16)) == 0)
  {
LABEL_24:
    unint64_t v19 = 0;
    LOBYTE(v20) = 1;
LABEL_25:
    LOBYTE(v27) = v20;
    return (_OWORD *)(v19 | ((unint64_t)v20 << 40));
  }
  unint64_t v7 = 0;
  uint64_t v8 = v27 + 32;
  while (1)
  {
    unint64_t v9 = (uint64_t *)(v8 + 176 * v7);
    if (v9[1] == a2)
    {
      uint64_t v10 = *v9;
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11 == *(void *)(a1 + 16))
      {
        if (v11) {
          BOOL v12 = v10 == a1;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12) {
          goto LABEL_26;
        }
        if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v11 == 1) {
            goto LABEL_26;
          }
          if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v11 == 2) {
              goto LABEL_26;
            }
            if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v11 == 3) {
                goto LABEL_26;
              }
              if (*(unsigned __int8 *)(v10 + 35) == *(unsigned __int8 *)(a1 + 35))
              {
                if (v11 == 4) {
                  goto LABEL_26;
                }
                if (*(unsigned __int8 *)(v10 + 36) == *(unsigned __int8 *)(a1 + 36)) {
                  break;
                }
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v6) {
      goto LABEL_24;
    }
  }
  BOOL v13 = (unsigned __int8 *)(v10 + 37);
  uint64_t v14 = v11 - 5;
  uint64_t v15 = (unsigned __int8 *)(a1 + 37);
  while (v14)
  {
    int v17 = *v13++;
    int v16 = v17;
    int v18 = *v15++;
    --v14;
    if (v16 != v18) {
      goto LABEL_4;
    }
  }
LABEL_26:
  if (v7 < v6)
  {
    uint64_t v20 = *(void *)(v8 + 176 * v7 + 96);
    unint64_t v19 = (unint64_t)&_mh_execute_header;
    if (v20)
    {
      uint64_t v21 = v20
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v22 = _s13SelectedStateV7WrappedVMa(0);
      LOBYTE(v20) = 0;
      uint64_t v23 = v21 + *(int *)(v22 + 20);
      uint64_t v24 = *(unsigned int *)(v23 + 16);
      if (*(unsigned char *)(v23 + 20)) {
        long long v25 = &_mh_execute_header;
      }
      else {
        long long v25 = 0;
      }
      unint64_t v19 = (unint64_t)v25 | v24;
    }
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

_OWORD *sub_100040598(uint64_t a1, unsigned int a2, long long *a3)
{
  sub_100055A48(a3, v17);
  unint64_t result = sub_100055A48(v17, &v18);
  if (v19 != 1) {
    return 0;
  }
  unint64_t v6 = *(void *)(v18 + 16);
  if (!v6) {
    return 0;
  }
  unint64_t v7 = 0;
  uint64_t v8 = v18 + 32;
  while (1)
  {
    uint64_t v9 = v8 + 176 * v7;
    if ((*(unsigned int *)(v9 + 24) | ((unint64_t)*(unsigned int *)(v9 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      uint64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11 == *(void *)(a1 + 16))
      {
        if (!v11 || v10 == a1) {
          goto LABEL_24;
        }
        if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v11 == 1) {
            goto LABEL_24;
          }
          if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v11 == 2) {
              goto LABEL_24;
            }
            if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v11 == 3) {
                goto LABEL_24;
              }
              if (*(unsigned __int8 *)(v10 + 35) == *(unsigned __int8 *)(a1 + 35))
              {
                if (v11 == 4) {
                  goto LABEL_24;
                }
                if (*(unsigned __int8 *)(v10 + 36) == *(unsigned __int8 *)(a1 + 36)) {
                  break;
                }
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v6) {
      return 0;
    }
  }
  uint64_t v12 = 0;
  uint64_t v13 = v11 - 5;
  while (v13 != v12)
  {
    int v14 = *(unsigned __int8 *)(v10 + v12 + 37);
    int v15 = *(unsigned __int8 *)(a1 + 37 + v12++);
    if (v14 != v15) {
      goto LABEL_4;
    }
  }
LABEL_24:
  if (v7 < v6)
  {
    uint64_t v16 = *(unsigned __int16 *)(v8 + 176 * v7 + 172);
    swift_bridgeObjectRetain();
    return (_OWORD *)v16;
  }
  __break(1u);
  return result;
}

unint64_t sub_100040734(uint64_t a1, unsigned int a2, long long *a3)
{
  sub_100055A48(a3, v20);
  unint64_t result = (unint64_t)sub_100055A48(v20, &v21);
  if (v22 != 1) {
    return 0;
  }
  unint64_t v6 = *(void *)(v21 + 16);
  if (!v6) {
    return 0;
  }
  unint64_t v7 = 0;
  uint64_t v8 = v21 + 32;
  while (1)
  {
    uint64_t v9 = v8 + 176 * v7;
    if ((*(unsigned int *)(v9 + 24) | ((unint64_t)*(unsigned int *)(v9 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      uint64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11 == *(void *)(a1 + 16))
      {
        if (v11) {
          BOOL v12 = v10 == a1;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12) {
          goto LABEL_26;
        }
        if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v11 == 1) {
            goto LABEL_26;
          }
          if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v11 == 2) {
              goto LABEL_26;
            }
            if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(a1 + 34))
            {
              if (v11 == 3) {
                goto LABEL_26;
              }
              if (*(unsigned __int8 *)(v10 + 35) == *(unsigned __int8 *)(a1 + 35))
              {
                if (v11 == 4) {
                  goto LABEL_26;
                }
                if (*(unsigned __int8 *)(v10 + 36) == *(unsigned __int8 *)(a1 + 36)) {
                  break;
                }
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v6) {
      return 0;
    }
  }
  uint64_t v13 = (unsigned __int8 *)(v10 + 37);
  uint64_t v14 = v11 - 5;
  int v15 = (unsigned __int8 *)(a1 + 37);
  while (v14)
  {
    int v17 = *v13++;
    int v16 = v17;
    unsigned int v18 = *v15++;
    unint64_t result = v18;
    --v14;
    if (v16 != v18) {
      goto LABEL_4;
    }
  }
LABEL_26:
  if (v7 >= v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = v8 + 176 * v7;
    if (*(unsigned __int8 *)(v19 + 168) > 1u) {
      return 0;
    }
    else {
      return *(void *)(v19 + 160);
    }
  }
  return result;
}

uint64_t sub_1000408DC()
{
  uint64_t v1 = *(void *)v0;
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    return sub_10008ADD4(v8);
  }
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  long long v21 = &_swiftEmptySetSingleton;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v1 + 168;
    do
    {
      v5 += 176;
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_10008B6A8(v6);
      --v4;
    }
    while (v4);
    sub_10000F0D4(v1, v2, v3, 1);
    unint64_t v7 = v21;
  }
  else
  {
    unint64_t v7 = &_swiftEmptySetSingleton;
  }
  uint64_t v10 = *(void *)(v0 + 32);
  long long v21 = (void *)v10;
  uint64_t v11 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  uint64_t v14 = v13 & *(void *)(v10 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v16 = 0;
  while (1)
  {
    if (v14)
    {
      v14 &= v14 - 1;
      goto LABEL_14;
    }
    int64_t v18 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v18 >= v15) {
      goto LABEL_34;
    }
    uint64_t v19 = *(void *)(v11 + 8 * v18);
    ++v16;
    if (!v19)
    {
      int64_t v16 = v18 + 1;
      if (v18 + 1 >= v15) {
        goto LABEL_34;
      }
      uint64_t v19 = *(void *)(v11 + 8 * v16);
      if (!v19)
      {
        int64_t v16 = v18 + 2;
        if (v18 + 2 >= v15) {
          goto LABEL_34;
        }
        uint64_t v19 = *(void *)(v11 + 8 * v16);
        if (!v19)
        {
          int64_t v16 = v18 + 3;
          if (v18 + 3 >= v15) {
            goto LABEL_34;
          }
          uint64_t v19 = *(void *)(v11 + 8 * v16);
          if (!v19)
          {
            int64_t v16 = v18 + 4;
            if (v18 + 4 >= v15) {
              goto LABEL_34;
            }
            uint64_t v19 = *(void *)(v11 + 8 * v16);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_33:
    uint64_t v14 = (v19 - 1) & v19;
LABEL_14:
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t result = sub_10008B6A8(v17);
  }
  int64_t v20 = v18 + 5;
  if (v20 >= v15)
  {
LABEL_34:
    swift_release();
    sub_10001D550((uint64_t)&v21);
    return sub_1000C0A90((uint64_t)&_swiftEmptySetSingleton, (uint64_t)v7);
  }
  uint64_t v19 = *(void *)(v11 + 8 * v20);
  if (v19)
  {
    int64_t v16 = v20;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v16 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v16 >= v15) {
      goto LABEL_34;
    }
    uint64_t v19 = *(void *)(v11 + 8 * v16);
    ++v20;
    if (v19) {
      goto LABEL_33;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100040B10()
{
  sub_100055A48((long long *)v0, v8);
  sub_100055A48(v8, &v9);
  if ((v10 & 1) == 0) {
    return *(void *)(v9 + 16) != 0;
  }
  if (*(void *)(*(void *)(v0 + 32) + 16)) {
    return 1;
  }
  uint64_t v2 = *(void *)(v9 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2 - 1;
  uint64_t v4 = (uint64_t *)(v9 + 168);
  do
  {
    uint64_t v5 = *v4;
    v4 += 22;
    uint64_t v6 = *(void *)(v5 + 16);
    uint64_t result = v6 != 0;
    if (v6) {
      BOOL v7 = 1;
    }
    else {
      BOOL v7 = v3 == 0;
    }
    --v3;
  }
  while (!v7);
  return result;
}

uint64_t sub_100040BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1005E0EB0();
  os_log_type_t v7 = sub_1005E25C0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 68158208;
    sub_1005E2960();
    *(_WORD *)(v8 + 8) = 256;
    swift_release();
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v8 + 11) = 2048;
    swift_bridgeObjectRelease();
    sub_1005E2960();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%.*hhx] Received %ld locally known mailboxes.", (uint8_t *)v8, 0x15u);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  unint64_t v9 = sub_100041578(a1, a2);
  uint64_t v10 = sub_100041870(v9, a2);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  unint64_t v17 = sub_1000D47B8(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 32) = v17;
  if (*(void *)(v10 + 16))
  {
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    int64_t v18 = sub_1005E0EB0();
    os_log_type_t v19 = sub_1005E25C0();
    if (!os_log_type_enabled(v18, v19))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if (!*(void *)(v12 + 16)) {
        goto LABEL_12;
      }
      goto LABEL_10;
    }
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 68158208;
    sub_1005E2960();
    *(_WORD *)(v20 + 8) = 256;
    swift_release();
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v20 + 11) = 2048;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1005E2960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%.*hhx] Added %ld locally known mailboxes.", (uint8_t *)v20, 0x15u);
    swift_slowDealloc();
  }
  if (!*(void *)(v12 + 16))
  {
LABEL_12:
    if (!*(void *)(v16 + 16)) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
LABEL_10:
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  long long v21 = sub_1005E0EB0();
  os_log_type_t v22 = sub_1005E25C0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 68158208;
    sub_1005E2960();
    *(_WORD *)(v23 + 8) = 256;
    swift_release();
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v23 + 11) = 2048;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1005E2960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%.*hhx] Removed %ld locally known mailboxes.", (uint8_t *)v23, 0x15u);
    swift_slowDealloc();

    goto LABEL_12;
  }

  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (!*(void *)(v16 + 16)) {
    goto LABEL_17;
  }
LABEL_15:
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_1005E0EB0();
  os_log_type_t v25 = sub_1005E25C0();
  if (!os_log_type_enabled(v24, v25))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    if (!*(void *)(v14 + 16)) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  uint64_t v26 = swift_slowAlloc();
  *(_DWORD *)uint64_t v26 = 68158208;
  sub_1005E2960();
  *(_WORD *)(v26 + 8) = 256;
  swift_release();
  sub_1005E2960();
  swift_release();
  *(_WORD *)(v26 + 11) = 2048;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1005E2960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%.*hhx] Updated %ld locally known mailboxes.", (uint8_t *)v26, 0x15u);
  swift_slowDealloc();

LABEL_17:
  if (!*(void *)(v14 + 16)) {
    goto LABEL_23;
  }
LABEL_20:
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  long long v27 = sub_1005E0EB0();
  os_log_type_t v28 = sub_1005E25C0();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 68158208;
    sub_1005E2960();
    *(_WORD *)(v29 + 8) = 256;
    swift_release();
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v29 + 11) = 2048;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1005E2960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "[%.*hhx] Need to de-select %ld locally known mailboxes.", (uint8_t *)v29, 0x15u);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_100041578(uint64_t a1, uint64_t a2)
{
  long long v37 = &_swiftEmptySetSingleton;
  long long v38 = &_swiftEmptySetSingleton;
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v23 = result;
  if (v2)
  {
    unint64_t v5 = 0;
    unint64_t v6 = result + 120;
    unint64_t v20 = v2 - 1;
    os_log_type_t v7 = _swiftEmptyArrayStorage;
    unint64_t v32 = v2;
    unint64_t v21 = result + 120;
    do
    {
      uint64_t v24 = v7;
      if (v5 <= v2) {
        unint64_t v8 = v2;
      }
      else {
        unint64_t v8 = v5;
      }
      unint64_t v33 = v8;
      unint64_t v9 = (unsigned char *)(v6 + 96 * v5);
      unint64_t v10 = v5;
      while (1)
      {
        if (v33 == v10)
        {
          __break(1u);
          return result;
        }
        uint64_t v11 = *((void *)v9 - 11);
        Swift::UInt v12 = *((void *)v9 - 10);
        uint64_t v13 = *((void *)v9 - 9);
        unsigned int v14 = *((_DWORD *)v9 - 16);
        char v30 = *(v9 - 52);
        int v31 = *((_DWORD *)v9 - 14);
        uint64_t v29 = *((void *)v9 - 6);
        char v28 = *(v9 - 40);
        uint64_t v27 = *((void *)v9 - 4);
        unint64_t v15 = *((void *)v9 - 2);
        *(void *)&long long v4 = *((void *)v9 - 1);
        long long v34 = v4;
        char v25 = *v9;
        char v26 = *(v9 - 24);
        char v16 = (sub_100010004(v13, v14, (uint64_t)v38) & 1) != 0 ? 0 : sub_10001093C(v11, v12, (uint64_t)v37) ^ 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100007810(v15);
        swift_bridgeObjectRetain();
        sub_1000187DC((uint64_t)v35, v13, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1000189E4(v35, v11, v12);
        swift_bridgeObjectRelease();
        if (v16) {
          break;
        }
        ++v10;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t result = sub_1000078B0(v15);
        v9 += 96;
        unint64_t v2 = v32;
        if (v32 == v10)
        {
          os_log_type_t v7 = v24;
          goto LABEL_21;
        }
      }
      os_log_type_t v7 = v24;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      long long v36 = v24;
      if ((result & 1) == 0)
      {
        unint64_t result = sub_10001A714(0, v24[2] + 1, 1);
        os_log_type_t v7 = v36;
      }
      long long v4 = v34;
      unint64_t v18 = v7[2];
      unint64_t v17 = v7[3];
      if (v18 >= v17 >> 1)
      {
        unint64_t result = sub_10001A714(v17 > 1, v18 + 1, 1);
        long long v4 = v34;
        os_log_type_t v7 = v36;
      }
      unint64_t v5 = v10 + 1;
      long long v7[2] = v18 + 1;
      os_log_type_t v19 = &v7[12 * v18];
      v19[4] = v11;
      v19[5] = v12;
      void v19[6] = v13;
      *((_DWORD *)v19 + 14) = v14;
      *((_DWORD *)v19 + 16) = v31;
      *((unsigned char *)v19 + 68) = v30;
      v19[9] = v29;
      *((unsigned char *)v19 + 80) = v28;
      v19[11] = v27;
      *((unsigned char *)v19 + 96) = v26;
      v19[13] = v15;
      v19[14] = v4;
      *((unsigned char *)v19 + 120) = v25;
      unint64_t v2 = v32;
      unint64_t v6 = v21;
    }
    while (v20 != v10);
  }
  else
  {
    os_log_type_t v7 = _swiftEmptyArrayStorage;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  if (v7[2] != v2) {
    sub_10004DD78(v23, (uint64_t)v7, a2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (unint64_t)v7;
}

uint64_t sub_100041870(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  v195 = (void *)(v2 + 8);
  if ((*(unsigned char *)(v2 + 24) & 1) == 0)
  {
    uint64_t v20 = a1;
    *(void *)v250 = &_swiftEmptySetSingleton;
    uint64_t v21 = *(void *)(a1 + 16);
    if (v21)
    {
      uint64_t v207 = v3;
      swift_bridgeObjectRetain();
      uint64_t v210 = v4;
      swift_bridgeObjectRetain();
      uint64_t v22 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = v20 + 56;
      do
      {
        uint64_t v24 = *(void *)(v23 - 8);
        unsigned int v25 = *(_DWORD *)v23;
        unint64_t v26 = *(void *)(v23 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100007810(v26);
        swift_bridgeObjectRetain();
        sub_1000187DC((uint64_t)v263, v24, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000078B0(v26);
        v23 += 96;
        --v21;
      }
      while (v21);
      uint64_t v20 = a1;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void **)v250;
      uint64_t v5 = v22;
      uint64_t v3 = v207;
      uint64_t v4 = v210;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRetain();
    long long v54 = sub_1000568D0(v20, v3, v205);
    swift_bridgeObjectRelease_n();
    sub_10000F0D4(v3, v4, v5, 0);
    *(void *)uint64_t v205 = v54;
    void *v195 = 0;
    *(void *)(v2 + 16) = 0;
    *(unsigned char *)(v205 + 24) = 1;
    unint64_t v55 = sub_1000D4BA8((uint64_t)_swiftEmptyArrayStorage);
    sub_100042BA8(v4, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100043000(v5, a2);
    swift_bridgeObjectRelease();
    return (uint64_t)v27;
  }
  v267 = &_swiftEmptySetSingleton;
  v268 = &_swiftEmptySetSingleton;
  v269 = &_swiftEmptySetSingleton;
  v270 = &_swiftEmptySetSingleton;
  int64_t v6 = *(void *)(v3 + 16);
  uint64_t v203 = v5;
  uint64_t v206 = v3;
  uint64_t v209 = v4;
  if (v6)
  {
    *(void *)v263 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001A754(0, v6, 0);
    unint64_t v8 = _swiftEmptyArrayStorage;
    unint64_t v9 = (unsigned char *)(v3 + 120);
    int64_t v201 = v6;
    do
    {
      uint64_t v10 = *((void *)v9 - 11);
      __dst = (void *)*((void *)v9 - 10);
      uint64_t v11 = *((void *)v9 - 9);
      int v12 = *((_DWORD *)v9 - 16);
      int v13 = *((_DWORD *)v9 - 14);
      char v220 = *(v9 - 52);
      uint64_t v218 = *((void *)v9 - 6);
      char v216 = *(v9 - 40);
      uint64_t v214 = *((void *)v9 - 4);
      char v212 = *(v9 - 24);
      unint64_t v14 = *((void *)v9 - 2);
      *(void *)&long long v7 = *((void *)v9 - 1);
      long long v228 = v7;
      char v225 = *v9;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_100007810(v14);
      *(void *)v263 = v8;
      unint64_t v16 = v8[2];
      unint64_t v15 = v8[3];
      unint64_t v17 = v16 + 1;
      if (v16 >= v15 >> 1)
      {
        sub_10001A754(v15 > 1, v16 + 1, 1);
        unint64_t v17 = v16 + 1;
        unint64_t v8 = *(void **)v263;
      }
      long long v8[2] = v17;
      unint64_t v18 = &v8[14 * v16];
      v18[4] = v11;
      *((_DWORD *)v18 + 10) = v12;
      v18[6] = v10;
      v18[7] = __dst;
      v18[8] = v11;
      *((_DWORD *)v18 + 18) = v12;
      *((_DWORD *)v18 + 20) = v13;
      *((unsigned char *)v18 + 84) = v220;
      v18[11] = v218;
      *((unsigned char *)v18 + 96) = v216;
      v18[13] = v214;
      *((unsigned char *)v18 + 112) = v212;
      v18[15] = v14;
      *((void *)&v7 + 1) = *((void *)&v228 + 1);
      v18[16] = v228;
      v9 += 176;
      *((unsigned char *)v18 + 136) = v225;
      --v6;
    }
    while (v6);
    int64_t v6 = v201;
    uint64_t v5 = v203;
    uint64_t v3 = v206;
    uint64_t v4 = v209;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2])
    {
      char v28 = &_swiftEmptyDictionarySingleton;
      goto LABEL_14;
    }
  }
  sub_10000566C(&qword_10070A6B8);
  char v28 = (void *)sub_1005E2FF0();
LABEL_14:
  *(void *)v263 = v28;
  sub_100056E2C((uint64_t)v8, 1, v263);
  swift_bridgeObjectRelease();
  uint64_t v200 = *(void *)v263;
  if (v6)
  {
    *(void *)&v248[0] = _swiftEmptyArrayStorage;
    sub_10001A734(0, v6, 0);
    uint64_t v29 = _swiftEmptyArrayStorage;
    char v30 = (long long *)(v3 + 32);
    for (int64_t i = v6 - 1; ; --i)
    {
      long long v32 = *v30;
      long long v33 = v30[2];
      *(_OWORD *)&v250[16] = v30[1];
      *(_OWORD *)&v250[32] = v33;
      *(_OWORD *)v250 = v32;
      long long v34 = v30[3];
      long long v35 = v30[4];
      long long v36 = v30[6];
      *(_OWORD *)&v250[80] = v30[5];
      *(_OWORD *)&v250[96] = v36;
      *(_OWORD *)&v250[48] = v34;
      *(_OWORD *)&v250[64] = v35;
      long long v37 = v30[7];
      long long v38 = v30[8];
      long long v39 = v30[10];
      *(_OWORD *)&v250[144] = v30[9];
      *(_OWORD *)&v250[160] = v39;
      *(_OWORD *)&v250[112] = v37;
      *(_OWORD *)&v250[128] = v38;
      uint64_t v40 = *(void *)&v250[16];
      int v41 = *(_DWORD *)&v250[24];
      sub_100007780((uint64_t)v250);
      *(void *)&v248[0] = v29;
      unint64_t v43 = v29[2];
      unint64_t v42 = v29[3];
      swift_bridgeObjectRetain();
      if (v43 >= v42 >> 1)
      {
        sub_10001A734(v42 > 1, v43 + 1, 1);
        uint64_t v29 = *(void **)&v248[0];
      }
      *(_OWORD *)&v263[4] = *(_OWORD *)v250;
      *(_OWORD *)&v263[20] = *(_OWORD *)&v250[16];
      *(_OWORD *)&v263[68] = *(_OWORD *)&v250[64];
      *(_OWORD *)&v263[84] = *(_OWORD *)&v250[80];
      *(_OWORD *)&v263[36] = *(_OWORD *)&v250[32];
      *(_OWORD *)&v263[52] = *(_OWORD *)&v250[48];
      *(_OWORD *)&v263[148] = *(_OWORD *)&v250[144];
      *(_OWORD *)&v263[164] = *(_OWORD *)&v250[160];
      *(_OWORD *)&v263[100] = *(_OWORD *)&v250[96];
      *(_OWORD *)&v263[116] = *(_OWORD *)&v250[112];
      *(_OWORD *)&v263[132] = *(_OWORD *)&v250[128];
      v29[2] = v43 + 1;
      uint64_t v44 = &v29[24 * v43];
      v44[4] = v40;
      *((_DWORD *)v44 + 10) = v41;
      long long v45 = *(_OWORD *)v263;
      long long v46 = *(_OWORD *)&v263[16];
      long long v47 = *(_OWORD *)&v263[32];
      *(_OWORD *)((char *)v44 + 92) = *(_OWORD *)&v263[48];
      *(_OWORD *)((char *)v44 + 76) = v47;
      *(_OWORD *)((char *)v44 + 60) = v46;
      *(_OWORD *)((char *)v44 + 44) = v45;
      long long v48 = *(_OWORD *)&v263[64];
      long long v49 = *(_OWORD *)&v263[80];
      long long v50 = *(_OWORD *)&v263[96];
      *(_OWORD *)((char *)v44 + 156) = *(_OWORD *)&v263[112];
      *(_OWORD *)((char *)v44 + 140) = v50;
      *(_OWORD *)((char *)v44 + 124) = v49;
      *(_OWORD *)((char *)v44 + 108) = v48;
      long long v51 = *(_OWORD *)&v263[128];
      long long v52 = *(_OWORD *)&v263[144];
      long long v53 = *(_OWORD *)&v263[160];
      *((_DWORD *)v44 + 55) = *(_DWORD *)&v263[176];
      *(_OWORD *)((char *)v44 + 204) = v53;
      *(_OWORD *)((char *)v44 + 188) = v52;
      *(_OWORD *)((char *)v44 + 172) = v51;
      if (!i) {
        break;
      }
      v30 += 11;
    }
    sub_10000F0D4(v206, v209, v203, 1);
  }
  else
  {
    sub_10000F0D4(v3, v4, v5, 1);
    uint64_t v29 = _swiftEmptyArrayStorage;
  }
  uint64_t v56 = a1;
  uint64_t v234 = 0;
  v235 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain_n();
  uint64_t v57 = sub_1000A4C78((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v58 = v57;
  uint64_t v59 = v29[2];
  if (v59)
  {
    uint64_t v60 = 0;
    uint64_t v226 = v59 - 1;
    uint64_t v229 = v57;
    long long v61 = v29 + 6;
    long long v62 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v63 = *((void *)v61 - 2);
      int v64 = *((_DWORD *)v61 - 2);
      long long v65 = v61[6];
      long long v67 = v61[3];
      long long v66 = v61[4];
      long long v242 = v61[5];
      long long v243 = v65;
      long long v240 = v67;
      long long v241 = v66;
      long long v68 = v61[10];
      long long v70 = v61[7];
      long long v69 = v61[8];
      long long v246 = v61[9];
      long long v247 = v68;
      long long v244 = v70;
      long long v245 = v69;
      long long v71 = *v61;
      long long v72 = v61[2];
      long long v238 = v61[1];
      long long v239 = v72;
      long long v237 = v71;
      memmove((char *)v248 + 4, v61, 0xB0uLL);
      *(void *)v250 = v63;
      *(_DWORD *)&v250[8] = v64;
      *(_OWORD *)&v250[140] = v248[8];
      *(_OWORD *)&v250[156] = v248[9];
      *(_OWORD *)&v250[172] = v248[10];
      int v251 = v249;
      *(_OWORD *)&v250[76] = v248[4];
      *(_OWORD *)&v250[92] = v248[5];
      *(_OWORD *)&v250[108] = v248[6];
      *(_OWORD *)&v250[124] = v248[7];
      *(_OWORD *)&v250[12] = v248[0];
      *(_OWORD *)&v250[28] = v248[1];
      *(_OWORD *)&v250[44] = v248[2];
      *(_OWORD *)&v250[60] = v248[3];
      UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v250);
      sub_10001FDF0((uint64_t)v250, (uint64_t)v263, &qword_10070A6C0);
      uint64_t v73 = *(void *)v263;
      int v74 = *(_DWORD *)&v263[8];
      long long v256 = *(_OWORD *)&v263[80];
      long long v257 = *(_OWORD *)&v263[96];
      long long v254 = *(_OWORD *)&v263[48];
      long long v255 = *(_OWORD *)&v263[64];
      long long v261 = *(_OWORD *)&v263[160];
      long long v262 = *(_OWORD *)&v263[176];
      long long v258 = *(_OWORD *)&v263[112];
      long long v259 = *(_OWORD *)&v263[128];
      long long v260 = *(_OWORD *)&v263[144];
      long long v252 = *(_OWORD *)&v263[16];
      long long v253 = *(_OWORD *)&v263[32];
      uint64_t v75 = (uint64_t)(v62 + 4);
      uint64_t v76 = v62[2];
      if (v60)
      {
        Swift::Int v77 = sub_1000CE1DC(*(uint64_t *)v263, *(unsigned int *)&v263[8], v75, v76, (void *)(v60 + 16));
        if (v78) {
          goto LABEL_33;
        }
      }
      else
      {
        Swift::Int v77 = sub_1000CE0E8(*(uint64_t *)v263, *(unsigned int *)&v263[8], v75, v76);
        if (v79)
        {
LABEL_33:
          swift_bridgeObjectRetain();
          sub_100007780((uint64_t)&v237);
          sub_1000A3CE4(v73, v74);
          sub_100007780((uint64_t)&v252);
          uint64_t v58 = v229;
          v233[0] = v229;
          unint64_t v99 = *(void *)(v229 + 16);
          unint64_t v98 = *(void *)(v229 + 24);
          if (v99 >= v98 >> 1)
          {
            sub_10001A4F4(v98 > 1, v99 + 1, 1);
            uint64_t v58 = v233[0];
          }
          *(void *)(v58 + 16) = v99 + 1;
          char v100 = (_OWORD *)(v58 + 176 * v99);
          long long v101 = v252;
          long long v102 = v254;
          v100[3] = v253;
          v100[4] = v102;
          v100[2] = v101;
          long long v103 = v255;
          long long v104 = v256;
          long long v105 = v258;
          v100[7] = v257;
          v100[8] = v105;
          v100[5] = v103;
          v100[6] = v104;
          long long v106 = v259;
          long long v107 = v260;
          long long v108 = v262;
          v100[11] = v261;
          v100[12] = v108;
          v100[9] = v106;
          v100[10] = v107;
          goto LABEL_36;
        }
      }
      unint64_t v80 = v77;
      swift_bridgeObjectRetain();
      sub_100007780((uint64_t)&v237);
      if ((v80 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      uint64_t v58 = v229;
      if (v80 >= *(void *)(v229 + 16)) {
        goto LABEL_88;
      }
      uint64_t v81 = (_OWORD *)(v229 + 176 * v80);
      long long v82 = v81[2];
      long long v83 = v81[4];
      v236[1] = v81[3];
      v236[2] = v83;
      v236[0] = v82;
      long long v84 = v81[5];
      long long v85 = v81[6];
      long long v86 = v81[8];
      v236[5] = v81[7];
      v236[6] = v86;
      v236[3] = v84;
      v236[4] = v85;
      long long v87 = v81[9];
      long long v88 = v81[10];
      long long v89 = v81[12];
      v236[9] = v81[11];
      v236[10] = v89;
      v236[7] = v87;
      v236[8] = v88;
      sub_100007780((uint64_t)&v252);
      sub_100007820((uint64_t)v236);
      long long v91 = v253;
      long long v90 = v254;
      v81[2] = v252;
      v81[3] = v91;
      v81[4] = v90;
      long long v92 = v258;
      long long v94 = v255;
      long long v93 = v256;
      v81[7] = v257;
      v81[8] = v92;
      v81[5] = v94;
      v81[6] = v93;
      long long v95 = v262;
      long long v97 = v259;
      long long v96 = v260;
      v81[11] = v261;
      v81[12] = v95;
      v81[9] = v97;
      v81[10] = v96;
LABEL_36:
      sub_100007820((uint64_t)&v252);
      swift_bridgeObjectRelease();
      if (!v226)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v56 = a1;
        goto LABEL_40;
      }
      uint64_t v60 = v234;
      long long v62 = v235;
      --v226;
      uint64_t v229 = v58;
      v61 += 12;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_40:
  swift_bridgeObjectRelease();
  uint64_t v264 = v234;
  v265 = v235;
  uint64_t v266 = v58;
  uint64_t v109 = *(void *)(v56 + 16);
  if (!v109) {
    goto LABEL_84;
  }
  swift_bridgeObjectRetain();
  uint64_t v110 = 0;
  do
  {
    uint64_t v227 = v110;
    uint64_t v230 = v109;
    uint64_t v113 = v56 + v110;
    long long v273 = *(_OWORD *)(v113 + 64);
    long long v274 = *(_OWORD *)(v113 + 80);
    *(_OWORD *)v275 = *(_OWORD *)(v113 + 96);
    long long v272 = *(_OWORD *)(v113 + 48);
    *(_OWORD *)&v275[9] = *(_OWORD *)(v113 + 105);
    long long v271 = *(_OWORD *)(v113 + 32);
    uint64_t v114 = *(void *)(v113 + 32);
    uint64_t v219 = *(void *)(v113 + 48);
    uint64_t v221 = *(void *)(v113 + 40);
    int v217 = *(_DWORD *)(v113 + 56);
    int v215 = *(_DWORD *)(v113 + 64);
    char v115 = *(unsigned char *)(v113 + 68);
    char v116 = *(unsigned char *)(v113 + 80);
    uint64_t v211 = *(void *)(v113 + 88);
    uint64_t v213 = *(void *)(v113 + 72);
    char v117 = *(unsigned char *)(v113 + 96);
    uint64_t v208 = *(void *)(v113 + 104);
    uint64_t v118 = *(void *)(v113 + 112);
    char v119 = *(unsigned char *)(v113 + 120);
    char v120 = BYTE4(v273);
    uint64_t v204 = *((void *)&v274 + 1);
    char __dsta = v275[0];
    uint64_t v121 = v272;
    int v202 = v273;
    unsigned int v122 = DWORD2(v272);
    uint64_t v123 = v200;
    if (!*(void *)(v200 + 16)
      || (v198 = *((void *)&v273 + 1), v196 = v274, unint64_t v124 = sub_100024264(v272, DWORD2(v272)), (v125 & 1) == 0))
    {
      sub_100057150((uint64_t)&v271);
      swift_bridgeObjectRetain();
      unsigned int v136 = v122;
      uint64_t v137 = v121;
      unsigned int v199 = v136;
      sub_1000187DC((uint64_t)v250, v121, v136);
      swift_bridgeObjectRelease();
      uint64_t v138 = *(void *)(v205 + 32);
      if (*(void *)(v138 + 16))
      {
        unint64_t v139 = sub_1000242DC(v271, *((Swift::UInt *)&v271 + 1));
        long long v140 = &_swiftEmptySetSingleton;
        if (v141)
        {
          long long v140 = *(void **)(*(void *)(v138 + 56) + 8 * v139);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        long long v140 = &_swiftEmptySetSingleton;
      }
      sub_100057150((uint64_t)&v271);
      swift_bridgeObjectRetain();
      Swift::Int v142 = Set<>.makeNonEmpty()((uint64_t)v140);
      swift_bridgeObjectRelease();
      int v143 = *(_DWORD *)(v205 + 72);
      *(_DWORD *)(v205 + 72) = (v143 + 1) & 0xFFFFFF;
      char v144 = v120 | __dsta;
      if (v144)
      {
        uint64_t v111 = 0;
        uint64_t v112 = 0;
      }
      else
      {
        *(void *)&v248[0] = v204;
        UIDValidityWith.init(uidValidity:value:)(v202, (uint64_t)v248, (uint64_t)&type metadata for ModificationSequenceValue, v250);
        uint64_t v111 = *(unsigned int *)v250;
        uint64_t v112 = *(void *)&v250[8];
      }
      LOBYTE(v248[0]) = v115;
      LOBYTE(v252) = v116;
      LOBYTE(v237) = v117;
      LOBYTE(v236[0]) = v119;
      LOBYTE(v234) = 1;
      LOBYTE(v233[0]) = v144;
      *(void *)v250 = v114;
      *(void *)&v250[8] = v221;
      *(void *)&v250[16] = v219;
      *(_DWORD *)&v250[24] = v217;
      *(_DWORD *)&v250[32] = v215;
      v250[36] = v115;
      *(void *)&v250[40] = v213;
      v250[48] = v116;
      *(void *)&v250[56] = v211;
      v250[64] = v117;
      *(void *)&v250[72] = v208;
      *(void *)&v250[80] = v118;
      v250[88] = v119;
      *(void *)&v250[96] = 0;
      *(_DWORD *)&v250[104] = 0;
      v250[108] = 1;
      *(void *)&v250[112] = v111;
      *(void *)&v250[120] = v112;
      v250[128] = v144;
      *(void *)&v250[136] = v142;
      *(void *)&v250[144] = _swiftEmptyArrayStorage;
      *(void *)&v250[152] = _swiftEmptyArrayStorage;
      *(void *)&v250[160] = 0;
      v250[168] = 2;
      *(_DWORD *)&v250[172] = v143;
      UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v250);
      sub_10001FDF0((uint64_t)v250, (uint64_t)v263, &qword_10070A6C8);
      sub_10009E138((uint64_t)v263, v137, v199);
LABEL_44:
      sub_1000571A4((uint64_t)&v271);
      uint64_t v56 = a1;
      goto LABEL_45;
    }
    uint64_t v126 = (long long *)(*(void *)(v200 + 56) + 96 * v124);
    long long v127 = v126[1];
    long long v289 = *v126;
    long long v290 = v127;
    long long v129 = v126[3];
    long long v128 = v126[4];
    long long v130 = *(long long *)((char *)v126 + 73);
    long long v291 = v126[2];
    *(_OWORD *)&v293[9] = v130;
    long long v292 = v129;
    *(_OWORD *)v293 = v128;
    sub_100057150((uint64_t)&v271);
    sub_100057150((uint64_t)&v289);
    if (static MailboxOfInterest.__derived_struct_equals(_:_:)(&v289, &v271))
    {
      sub_1000571A4((uint64_t)&v289);
      unint64_t v131 = sub_100024264(v121, v122);
      if ((v132 & 1) == 0) {
        goto LABEL_44;
      }
      unint64_t v133 = v131;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)v250 = v200;
      uint64_t v56 = a1;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100097548();
        uint64_t v123 = *(void *)v250;
      }
      swift_bridgeObjectRelease();
      unint64_t v135 = *(void *)(*(void *)(v123 + 56) + 96 * v133 + 72);
      uint64_t v200 = v123;
      sub_100095EF0(v133, v123);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_81;
    }
    int v145 = *(_DWORD *)&v275[20];
    char v146 = v275[24];
    swift_bridgeObjectRetain();
    sub_1000187DC((uint64_t)v250, v121, v122);
    swift_bridgeObjectRelease();
    unint64_t v147 = *(void *)&v293[8];
    uint64_t v148 = v121;
    long long v276 = v289;
    uint64_t v277 = v290;
    int v278 = DWORD2(v290);
    int v279 = v202;
    char v280 = v120;
    char v149 = v146;
    uint64_t v281 = v198;
    char v282 = v196;
    uint64_t v283 = v204;
    char v284 = __dsta;
    uint64_t v285 = *(void *)&v293[8];
    int v286 = *(_DWORD *)&v293[16];
    int v287 = v145;
    char v288 = v146;
    sub_100057150((uint64_t)&v289);
    char v150 = static MailboxOfInterest.__derived_struct_equals(_:_:)(&v271, &v276);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000078B0(v147);
    sub_1000571A4((uint64_t)&v289);
    if (v150)
    {
      int v151 = v145;
      swift_bridgeObjectRetain();
      unsigned int v152 = v122;
      uint64_t v153 = sub_1000432BC(&v252, v121, v122);
      uint64_t v155 = v154;
      sub_10001FDF0(v154, (uint64_t)v248, &qword_10070A6C8);
      sub_10001FDF0((uint64_t)v248, (uint64_t)v250, &qword_10070A6C8);
      if (sub_1000571F8((uint64_t *)v250) != 1)
      {
        *(_DWORD *)(v155 + 84) = v151;
        *(unsigned char *)(v155 + 88) = v149;
      }
      ((void (*)(long long *, void))v153)(&v252, 0);
      swift_bridgeObjectRelease();
      uint64_t v56 = a1;
      uint64_t v156 = v200;
      goto LABEL_77;
    }
    swift_bridgeObjectRetain();
    __dstb = (void *)v121;
    unsigned int v152 = v122;
    long long v157 = sub_1000432BC(&v252, v121, v122);
    uint64_t v159 = v158;
    sub_10001FDF0(v158, (uint64_t)v248, &qword_10070A6C8);
    sub_10001FDF0((uint64_t)v248, (uint64_t)v250, &qword_10070A6C8);
    if (sub_1000571F8((uint64_t *)v250) != 1)
    {
      unint64_t v160 = *(void *)(v159 + 72);
      long long v162 = v274;
      long long v161 = *(_OWORD *)v275;
      long long v163 = *(_OWORD *)&v275[9];
      *(_OWORD *)(v159 + 32) = v273;
      *(_OWORD *)(v159 + 48) = v162;
      long long v164 = v272;
      *(_OWORD *)uint64_t v159 = v271;
      *(_OWORD *)(v159 + 16) = v164;
      *(_OWORD *)(v159 + 73) = v163;
      *(_OWORD *)(v159 + 64) = v161;
      sub_100057150((uint64_t)&v271);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000078B0(v160);
    }
    ((void (*)(long long *, void))v157)(&v252, 0);
    uint64_t v56 = a1;
    uint64_t v156 = v200;
    swift_bridgeObjectRelease();
    uint64_t v165 = v266;
    uint64_t v166 = (uint64_t)(v265 + 4);
    uint64_t v167 = v265[2];
    if (v264)
    {
      unint64_t v168 = sub_1000CE1DC((uint64_t)__dstb, v152, v166, v167, (void *)(v264 + 16));
      if ((v169 & 1) == 0) {
        goto LABEL_67;
      }
    }
    else
    {
      unint64_t v168 = sub_1000CE0E8((uint64_t)__dstb, v152, v166, v167);
      if ((v179 & 1) == 0)
      {
LABEL_67:
        if ((v168 & 0x8000000000000000) != 0) {
          goto LABEL_89;
        }
        if (v168 >= *(void *)(v165 + 16)) {
          goto LABEL_90;
        }
        uint64_t v170 = (_OWORD *)(v165 + 176 * v168);
        long long v171 = v170[2];
        long long v172 = v170[4];
        long long v238 = v170[3];
        long long v239 = v172;
        long long v237 = v171;
        long long v173 = v170[5];
        long long v174 = v170[6];
        long long v175 = v170[8];
        long long v242 = v170[7];
        long long v243 = v175;
        long long v240 = v173;
        long long v241 = v174;
        long long v176 = v170[9];
        long long v177 = v170[10];
        long long v178 = v170[12];
        long long v246 = v170[11];
        long long v247 = v178;
        long long v244 = v176;
        long long v245 = v177;
        memmove(&v252, v170 + 2, 0xB0uLL);
        UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v252);
        sub_100007780((uint64_t)&v237);
        goto LABEL_72;
      }
    }
    sub_100057210(&v237);
    sub_10001FDF0((uint64_t)&v237, (uint64_t)&v252, &qword_10070A6C8);
LABEL_72:
    sub_10001FDF0((uint64_t)&v252, (uint64_t)v236, &qword_10070A6C8);
    sub_10001FDF0((uint64_t)v236, (uint64_t)&v237, &qword_10070A6C8);
    if (sub_1000571F8((uint64_t *)&v237) != 1)
    {
      uint64_t v180 = v258;
      sub_10001FDF0((uint64_t)&v252, (uint64_t)&v234, &qword_10070A6C8);
      swift_retain();
      sub_100057494(&v234, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100057230);
      if (v180)
      {
        swift_release();
        swift_bridgeObjectRetain();
        v181 = sub_1000432BC(v231, (uint64_t)__dstb, v152);
        uint64_t v183 = v182;
        sub_10001FDF0(v182, (uint64_t)v232, &qword_10070A6C8);
        sub_10001FDF0((uint64_t)v232, (uint64_t)v233, &qword_10070A6C8);
        if (sub_1000571F8(v233) != 1)
        {
          *(void *)(v183 + 96) = 0;
          swift_release();
        }
        ((void (*)(void *, void))v181)(v231, 0);
        uint64_t v148 = (uint64_t)__dstb;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1000187DC((uint64_t)v231, (uint64_t)__dstb, v152);
        swift_bridgeObjectRelease();
      }
    }
LABEL_77:
    unint64_t v184 = sub_100024264(v148, v152);
    if (v185)
    {
      unint64_t v186 = v184;
      swift_bridgeObjectRetain();
      char v187 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)v250 = v156;
      if ((v187 & 1) == 0)
      {
        sub_100097548();
        uint64_t v156 = *(void *)v250;
      }
      swift_bridgeObjectRelease();
      unint64_t v135 = *(void *)(*(void *)(v156 + 56) + 96 * v186 + 72);
      uint64_t v200 = v156;
      sub_100095EF0(v186, v156);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_81:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000078B0(v135);
    }
    sub_1000571A4((uint64_t)&v271);
LABEL_45:
    uint64_t v110 = v227 + 96;
    uint64_t v109 = v230 - 1;
  }
  while (v230 != 1);
  swift_bridgeObjectRelease();
LABEL_84:
  uint64_t v188 = swift_bridgeObjectRetain();
  sub_10008B6C0(v188);
  uint64_t v189 = swift_bridgeObjectRetain();
  sub_10003F0E8(v189, &v264);
  swift_bridgeObjectRelease();
  uint64_t v190 = v264;
  uint64_t v191 = (uint64_t)v265;
  uint64_t v192 = v266;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v193 = sub_100038D18(v190, v191, v192);
  swift_release();
  swift_release();
  swift_release();
  sub_10000F0D4(*(void *)v205, *(void *)(v205 + 8), *(void *)(v205 + 16), *(unsigned char *)(v205 + 24));
  *(void *)uint64_t v205 = v193;
  void *v195 = 0;
  v195[1] = 0;
  *(unsigned char *)(v205 + 24) = 1;
  uint64_t v27 = v267;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v27;
}

uint64_t sub_100042BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000566C(&qword_10070A6D0);
  __chkstk_darwin(v5 - 8);
  long long v7 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10000566C(&qword_10070A038);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v15 = *(void *)v2;
  uint64_t v14 = *(void *)(v2 + 8);
  uint64_t v16 = *(void *)(v2 + 16);
  int v17 = *(unsigned __int8 *)(v2 + 24);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_10000F0D4(v15, v14, v16, 0);
LABEL_27:
    *(void *)uint64_t v2 = v15;
    *(void *)(v2 + 8) = a1;
    *(void *)(v2 + 16) = v16;
    *(unsigned char *)(v2 + 24) = v17;
    return result;
  }
  unint64_t v55 = &v44[-v11];
  if (!*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    char v43 = 1;
    uint64_t v23 = (void *)v15;
LABEL_26:
    uint64_t result = sub_10000F0D4(v15, v14, v16, v43);
    a1 = 0;
    uint64_t v16 = 0;
    uint64_t v15 = (uint64_t)v23;
    goto LABEL_27;
  }
  uint64_t v56 = v13;
  uint64_t v57 = v10;
  int v45 = v17;
  uint64_t v46 = v2;
  uint64_t v18 = v14;
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = v12;
  sub_10005636C(v15, v18, v16, 1);
  unint64_t v21 = 0;
  uint64_t v54 = v20;
  uint64_t v22 = (unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48);
  long long v47 = (unint64_t *)(a1 + 48);
  uint64_t v48 = v19;
  uint64_t v23 = (void *)v15;
  uint64_t v49 = a2;
  uint64_t v50 = a1;
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100093440(v23);
      uint64_t v23 = (void *)result;
    }
    if (v21 >= v23[2]) {
      break;
    }
    long long v52 = v23 + 4;
    unint64_t v53 = v21;
    uint64_t v26 = (uint64_t)&v23[22 * v21 + 4];
    uint64_t v27 = *(void *)(v26 + 16);
    unsigned int v28 = *(_DWORD *)(v26 + 24);
    uint64_t v29 = *(void *)(a2 + 16);
    unsigned int v58 = v28;
    if (v29 && (unint64_t v30 = sub_100024264(v27, v28), (v31 & 1) != 0))
    {
      int v59 = 0;
      uint64_t v32 = *(void *)(*(void *)(a2 + 56) + 8 * v30);
      if (v19) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v32 = 0;
      int v59 = 1;
      if (v19)
      {
LABEL_14:
        long long v51 = v23;
        swift_bridgeObjectRetain();
        uint64_t v34 = v27;
        swift_bridgeObjectRetain();
        long long v35 = v47;
        long long v33 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v37 = *(v35 - 1);
          unint64_t v36 = *v35;
          int v60 = *((_DWORD *)v35 - 4);
          uint64_t v61 = v37;
          unint64_t v62 = v36;
          sub_1000572C4(v37, v36);
          sub_1000452F0(&v60, v34, v58, v32, v59, v7);
          sub_10005730C(v37, v36);
          if ((*v22)(v7, 1, v57) == 1)
          {
            sub_100007A48((uint64_t)v7, &qword_10070A6D0);
          }
          else
          {
            long long v38 = v55;
            sub_10001FDF0((uint64_t)v7, (uint64_t)v55, &qword_10070A038);
            sub_10001FDF0((uint64_t)v38, v56, &qword_10070A038);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              long long v33 = (void *)sub_100016D64(0, v33[2] + 1, 1, (unint64_t)v33);
            }
            uint64_t v39 = v54;
            unint64_t v41 = v33[2];
            unint64_t v40 = v33[3];
            if (v41 >= v40 >> 1)
            {
              uint64_t v42 = sub_100016D64(v40 > 1, v41 + 1, 1, (unint64_t)v33);
              uint64_t v39 = v54;
              long long v33 = (void *)v42;
            }
            v33[2] = v41 + 1;
            sub_10001FDF0(v56, (uint64_t)v33+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v41, &qword_10070A038);
          }
          v35 += 3;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = v48;
        a2 = v49;
        uint64_t v23 = v51;
        goto LABEL_5;
      }
    }
    long long v33 = _swiftEmptyArrayStorage;
LABEL_5:
    unint64_t v24 = v53;
    sub_100055234((uint64_t)v33, &v52[22 * v53 + 19]);
    swift_bridgeObjectRelease();
    unint64_t v21 = v24 + 1;
    if (v21 == v23[2])
    {
      uint64_t v2 = v46;
      uint64_t v15 = *(void *)v46;
      uint64_t v14 = *(void *)(v46 + 8);
      uint64_t v16 = *(void *)(v46 + 16);
      char v43 = *(unsigned char *)(v46 + 24);
      LOBYTE(v17) = v45;
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100043000(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (uint64_t)v2;
  uint64_t v4 = result;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v7 = *(void *)(v3 + 16);
  char v8 = *(unsigned char *)(v3 + 24);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_10000F0D4((uint64_t)v5, v6, v7, 0);
LABEL_22:
    *(void *)uint64_t v3 = v5;
    *(void *)(v3 + 8) = v6;
    *(void *)(v3 + 16) = v4;
    *(unsigned char *)(v3 + 24) = v8;
    return result;
  }
  if (!v5[2])
  {
LABEL_21:
    uint64_t v6 = 0;
    uint64_t v4 = 0;
    goto LABEL_22;
  }
  uint64_t v28 = *(void *)(v3 + 16);
  char v30 = *(unsigned char *)(v3 + 24);
  uint64_t v9 = *(void *)(result + 16);
  swift_bridgeObjectRetain();
  unint64_t v10 = 0;
  uint64_t v29 = (uint64_t)v5;
  uint64_t v35 = v3;
  uint64_t v31 = v9;
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100093440(v5);
      uint64_t v5 = (void *)result;
    }
    if (v10 >= v5[2]) {
      break;
    }
    uint64_t v11 = v5 + 4;
    if (v9)
    {
      long long v33 = v5;
      unint64_t v34 = v10;
      uint64_t v32 = v5 + 4;
      long long v38 = &v11[22 * v10];
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
      uint64_t v13 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v15 = v4;
        uint64_t v16 = v4 + v12;
        unsigned int v17 = *(_DWORD *)(v4 + v12 + 32);
        uint64_t v18 = *(void *)(v4 + v12 + 40);
        int v19 = *(_DWORD *)(v4 + v12 + 48);
        uint64_t v21 = *(void *)(v4 + v12 + 56);
        unint64_t v20 = *(void *)(v16 + 64);
        uint64_t v22 = *(void *)(v16 + 72);
        LOBYTE(v16) = *(unsigned char *)(v16 + 80);
        unsigned int v43 = v17;
        uint64_t v44 = v18;
        int v45 = v19;
        uint64_t v46 = v21;
        unint64_t v47 = v20;
        uint64_t v48 = v22;
        char v49 = v16;
        swift_bridgeObjectRetain();
        sub_100008D24(v21, v20);
        swift_bridgeObjectRetain();
        sub_100045AB4(&v43, v38, v3, a2, (uint64_t)&v39);
        swift_bridgeObjectRelease();
        sub_1000094D4(v21, v20);
        swift_bridgeObjectRelease();
        uint64_t v23 = v41;
        if (v41 != 1)
        {
          int v24 = v39;
          long long v36 = v40;
          char v25 = v42;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v13 = sub_100016160(0, v13[2] + 1, 1, v13);
          }
          unint64_t v27 = v13[2];
          unint64_t v26 = v13[3];
          if (v27 >= v26 >> 1) {
            uint64_t v13 = sub_100016160((void *)(v26 > 1), v27 + 1, 1, v13);
          }
          v13[2] = v27 + 1;
          uint64_t v14 = &v13[5 * v27];
          *((_DWORD *)v14 + 8) = v24;
          *(_OWORD *)(v14 + 5) = v36;
          v14[7] = v23;
          *((unsigned char *)v14 + 64) = v25;
          uint64_t v3 = v35;
        }
        v12 += 56;
        --v9;
        uint64_t v4 = v15;
      }
      while (v9);
      swift_bridgeObjectRelease();
      uint64_t v9 = v31;
      uint64_t v11 = v32;
      uint64_t v5 = v33;
      unint64_t v10 = v34;
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
    }
    v11[22 * v10 + 18] = v13;
    swift_bridgeObjectRelease();
    if (++v10 == v5[2])
    {
      uint64_t result = sub_10000F0D4(v29, v6, v28, 1);
      char v8 = v30;
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

void (*sub_1000432BC(void *a1, uint64_t a2, unsigned int a3))(uint64_t a1)
{
  uint64_t v7 = malloc(0x238uLL);
  *a1 = v7;
  v7[67] = v3;
  *((_DWORD *)v7 + 140) = a3;
  v7[66] = a2;
  sub_100057210(v7);
  sub_10001FDF0((uint64_t)v7, (uint64_t)(v7 + 22), &qword_10070A6C8);
  v7[68] = sub_100054B18(a2, a3, (_OWORD *)v7 + 11);
  *((unsigned char *)v7 + 564) = v8;
  v7[69] = v9;
  return sub_100043364;
}

void sub_100043364(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)a1 + 176;
  uint64_t v3 = (void *)(*(void *)a1 + 352);
  sub_100054EB8(*(void *)(*(void *)a1 + 528), *(_DWORD *)(*(void *)a1 + 560), *(void *)(*(void *)a1 + 544), *(unsigned char *)(*(void *)a1 + 564) & 1, *(void *)(*(void *)a1 + 552), v2);
  sub_10001FDF0(v2, (uint64_t)v3, &qword_10070A6C8);
  sub_100057494(v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100057230);
  free(v1);
}

uint64_t sub_1000433FC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, Swift::Int a5)
{
  uint64_t v9 = _s13SelectedStateV7WrappedVMa(0);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)a1;
  uint64_t v14 = *(void *)(*(void *)a1 + 16);
  if (v14)
  {
    unint64_t v15 = 0;
    while (1)
    {
      uint64_t v16 = (uint64_t)&v13[22 * v15 + 4];
      if ((*(unsigned int *)(v16 + 24) | ((unint64_t)*(unsigned int *)(v16 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v17 = *(void *)(v16 + 16);
        uint64_t v18 = *(void *)(v17 + 16);
        if (v18 == *(void *)(a2 + 16))
        {
          if (v18) {
            BOOL v19 = v17 == a2;
          }
          else {
            BOOL v19 = 1;
          }
          if (v19) {
            goto LABEL_21;
          }
          if (*(unsigned __int8 *)(v17 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v18 == 1) {
              goto LABEL_21;
            }
            if (*(unsigned __int8 *)(v17 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v18 == 2) {
                goto LABEL_21;
              }
              if (*(unsigned __int8 *)(v17 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v18 == 3) {
                  goto LABEL_21;
                }
                if (*(unsigned __int8 *)(v17 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v15 == v14) {
        return result;
      }
    }
    unint64_t v20 = (unsigned __int8 *)(v17 + 36);
    uint64_t v21 = v18 - 4;
    uint64_t v22 = (unsigned __int8 *)(a2 + 36);
    while (v21)
    {
      int v24 = *v20++;
      int v23 = v24;
      int v25 = *v22++;
      --v21;
      if (v23 != v25) {
        goto LABEL_3;
      }
    }
LABEL_21:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100093440(v13);
      uint64_t v13 = (void *)result;
    }
    if (v15 >= v13[2])
    {
      __break(1u);
    }
    else
    {
      unint64_t v26 = &v13[22 * v15];
      uint64_t v27 = swift_bridgeObjectRetain();
      sub_10008B6A8(v27);
      Set<>.formNonEmpty()();
      *((_DWORD *)v26 + 34) = 0;
      *((unsigned char *)v26 + 140) = 1;
      *(void *)a1 = v13;
      uint64_t v29 = (uint64_t (*)(unsigned char *, void))sub_10008B468((uint64_t)v35, v15);
      if (*(void *)(v28 + 96))
      {
        uint64_t v30 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v31 = *(void *)(v30 + 96)
              + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
          swift_beginAccess();
          sub_100057F2C(v31, (uint64_t)v12, _s13SelectedStateV7WrappedVMa);
          _s13SelectedStateV8_StorageCMa(0);
          uint64_t v32 = swift_allocObject();
          sub_100057FF4((uint64_t)v12, v32+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
          *(void *)(v30 + 96) = v32;
          swift_release();
        }
        swift_beginAccess();
        sub_1000935B0(a5);
        sub_100019080(&v34, a5);
        swift_endAccess();
        return v29(v35, 0);
      }
      else
      {
        return v29(v35, 0);
      }
    }
  }
  return result;
}

uint64_t sub_100043714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v66 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v66);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t result = __chkstk_darwin(v9);
  unint64_t v15 = *(uint64_t (***)(char *, uint64_t))(*(void *)a1 + 16);
  if (v15)
  {
    long long v67 = (char *)&v48 - v12;
    char v49 = v7;
    uint64_t v50 = v13;
    uint64_t v16 = 0;
    uint64_t v70 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    long long v65 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    p_name = &v74.name;
    p_mailbox = &v74.mailbox;
    BOOL v19 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
    uint64_t v56 = (char *)&v71 + 4;
    unint64_t v55 = (char *)&v71 + 1;
    uint64_t v54 = &v72;
    unint64_t v53 = (char *)&v71 + 2;
    *(void *)&long long v14 = 68159235;
    long long v52 = v14;
    long long v51 = (char *)&type metadata for Any + 8;
    uint64_t v57 = v8;
    uint64_t v64 = a3;
    uint64_t v61 = a2;
    long long v69 = v15;
    do
    {
      unint64_t v20 = *(void **)a1;
      if ((unint64_t)v18 >= *(void *)(*(void *)a1 + 16))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      uint64_t result = sub_100010004(v20[v16 + 6], v20[v16 + 7], a2);
      if ((result & 1) == 0)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100093440(v20);
          unint64_t v20 = (void *)result;
        }
        if ((unint64_t)v18 >= v20[2]) {
          goto LABEL_28;
        }
        uint64_t v21 = a1;
        uint64_t result = v20[v16 + 21];
        if (*(void *)(result + 16))
        {
          uint64_t result = swift_bridgeObjectRelease();
          v20[v16 + 21] = &_swiftEmptySetSingleton;
          *(void *)a1 = v20;
          if (v17 <= 4)
          {
            uint64_t v68 = v17;
            uint64_t v22 = (uint64_t *)(a3 + *(int *)(v66 + 20));
            uint64_t v23 = a3;
            uint64_t v24 = *v22;
            uint64_t v25 = v22[1];
            unint64_t v26 = (void *)v22[2];
            uint64_t result = swift_bridgeObjectRetain();
            if ((unint64_t)v18 >= v20[2]) {
              goto LABEL_30;
            }
            v27.rawValue._uint64_t countAndFlagsBits = v25;
            v27.rawValue._unint64_t object = v26;
            MailboxTaskLoggerID.init(id:name:counter:mailbox:)(&v74, (IMAP2Tracing::EngineTracingID)v24, v27, (NIOIMAPCore2::MailboxLoggingCounter)HIDWORD(v20[v16 + 25]), *(NIOIMAPCore2::MailboxName *)&v20[v16 + 6]);
            uint64_t v28 = v67;
            (*v65)(v67, v23, v8);
            IMAP2Tracing::TaskName v77 = *p_name;
            uint64_t rawValue = (uint64_t)p_mailbox->bytes._rawValue;
            Swift::UInt32 value = p_mailbox->_hashValue._value;
            swift_bridgeObjectRetain();
            sub_100057B18((uint64_t)&v77);
            sub_10002292C((uint64_t)&rawValue);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v29 = sub_1005E0EB0();
            os_log_type_t v30 = sub_1005E25C0();
            int v31 = v30;
            if (os_log_type_enabled(v29, v30))
            {
              uint64_t v32 = v19;
              unint64_t object = (unint64_t)v77.rawValue._object;
              uint64_t countAndFlagsBits = v77.rawValue._countAndFlagsBits;
              uint64_t v58 = rawValue;
              uint64_t v35 = swift_slowAlloc();
              uint64_t v60 = swift_slowAlloc();
              uint64_t v73 = v60;
              *(_DWORD *)uint64_t v35 = v52;
              LODWORD(v71) = 2;
              sub_1005E2960();
              *(_WORD *)(v35 + 8) = 256;
              LOBYTE(v71) = v74.id.rawValue;
              sub_1005E2960();
              *(_WORD *)(v35 + 11) = 2082;
              int v59 = v31;
              swift_bridgeObjectRetain();
              unint64_t v36 = object;
              BOOL v19 = v32;
              uint64_t v71 = sub_1000C6914(countAndFlagsBits, v36, &v73);
              sub_1005E2960();
              sub_10002A77C((uint64_t)&v77);
              *(_WORD *)(v35 + 21) = 1040;
              LODWORD(v71) = 2;
              sub_1005E2960();
              *(_WORD *)(v35 + 27) = 512;
              LOWORD(v71) = v74.counter.underlying;
              sub_1005E2960();
              *(_WORD *)(v35 + 31) = 2160;
              uint64_t v71 = 0x786F626C69616DLL;
              sub_1005E2960();
              *(_WORD *)(v35 + 41) = 2085;
              uint64_t v71 = rawValue;
              Swift::UInt32 v72 = value;
              swift_bridgeObjectRetain();
              uint64_t v37 = sub_1005E1CC0();
              uint64_t v71 = sub_1000C6914(v37, v38, &v73);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_10002A77C((uint64_t)&v77);
              sub_10001D550((uint64_t)&rawValue);
              sub_10002A77C((uint64_t)&v77);
              sub_10001D550((uint64_t)&rawValue);
              _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v59, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did mark as sync complete.", (uint8_t *)v35, 0x33u);
              swift_arrayDestroy();
              swift_slowDealloc();
              uint64_t v8 = v57;
              swift_slowDealloc();

              uint64_t result = (*v32)(v67, v8);
            }
            else
            {
              sub_10002A77C((uint64_t)&v77);
              sub_10001D550((uint64_t)&rawValue);
              sub_10002A77C((uint64_t)&v77);
              sub_10001D550((uint64_t)&rawValue);

              uint64_t result = (*v19)(v28, v8);
            }
            a2 = v61;
            a1 = v21;
            uint64_t v17 = v68 + 1;
            a3 = v64;
          }
          unint64_t v15 = v69;
          if (__OFADD__(v70++, 1)) {
            goto LABEL_29;
          }
        }
        else
        {
          *(void *)a1 = v20;
          unint64_t v15 = v69;
        }
      }
      uint64_t v18 = (uint64_t (**)(char *, uint64_t))((char *)v18 + 1);
      v16 += 22;
    }
    while (v15 != v18);
    long long v40 = v50;
    uint64_t v41 = (uint64_t)v49;
    if (v17 >= v70) {
      return result;
    }
    (*v65)(v50, a3, v8);
    sub_100057F2C(a3, v41, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    char v42 = sub_1005E0EB0();
    os_log_type_t v43 = sub_1005E25C0();
    if (!os_log_type_enabled(v42, v43))
    {
      sub_100057F94(v41, type metadata accessor for Task.Logger);

      return (*v19)(v40, v8);
    }
    long long v69 = v19;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v71 = v68;
    *(_DWORD *)uint64_t v44 = 68158466;
    LODWORD(v73) = 2;
    sub_1005E2960();
    *(_WORD *)(v44 + 8) = 256;
    int v45 = (void *)(v41 + *(int *)(v66 + 20));
    uint64_t v46 = v45[1];
    unint64_t v47 = v45[2];
    LOBYTE(v73) = *v45;
    sub_1005E2960();
    *(_WORD *)(v44 + 11) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_1000C6914(v46, v47, &v71);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    uint64_t result = sub_100057F94(v41, type metadata accessor for Task.Logger);
    *(_WORD *)(v44 + 21) = 2048;
    if (!__OFSUB__(v70, v17))
    {
      uint64_t v73 = v70 - v17;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[%.*hhx-%{public}s] Did mark %ld more mailboxes as sync complete.", (uint8_t *)v44, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*v69)(v50, v8);
    }
LABEL_31:
    __break(1u);
  }
  return result;
}

void *sub_100044000(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = v2;
  sub_100055A48(v3, v19);
  sub_100055A48(v19, &v20);
  if (v21 != 1) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v6 = *(void *)(v20 + 16);
  if (!v6) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v7 = 0;
  uint64_t result = &_swiftEmptySetSingleton;
  while (1)
  {
    uint64_t v9 = v20 + 32 + 176 * v7;
    if ((*(unsigned int *)(v9 + 24) | ((unint64_t)*(unsigned int *)(v9 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      uint64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11 == *(void *)(a1 + 16))
      {
        if (v11) {
          BOOL v12 = v10 == a1;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12) {
          return (void *)swift_bridgeObjectRetain();
        }
        if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v11 == 1) {
            return (void *)swift_bridgeObjectRetain();
          }
          if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v11 == 2) {
              return (void *)swift_bridgeObjectRetain();
            }
            if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v6) {
      return result;
    }
  }
  uint64_t v13 = (unsigned __int8 *)(v10 + 35);
  uint64_t v14 = v11 - 3;
  unint64_t v15 = (unsigned __int8 *)(a1 + 35);
  while (v14)
  {
    int v17 = *v13++;
    int v16 = v17;
    int v18 = *v15++;
    --v14;
    if (v16 != v18) {
      goto LABEL_4;
    }
  }
  return (void *)swift_bridgeObjectRetain();
}

uint64_t sub_100044148(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (*(unsigned char *)(v3 + 24) == 1)
  {
    uint64_t v4 = *(void *)v3;
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v20 = v4;
    uint64_t v7 = *(void *)(v4 + 16);
    if (v7)
    {
      uint64_t v8 = result;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = v4 + 32 + 176 * v9;
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
        {
          uint64_t v11 = *(void *)(v10 + 16);
          uint64_t v12 = *(void *)(v11 + 16);
          if (v12 == *(void *)(a2 + 16))
          {
            if (v12) {
              BOOL v13 = v11 == a2;
            }
            else {
              BOOL v13 = 1;
            }
            if (v13) {
              goto LABEL_22;
            }
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a2 + 32))
            {
              if (v12 == 1) {
                goto LABEL_22;
              }
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a2 + 33))
              {
                if (v12 == 2) {
                  goto LABEL_22;
                }
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a2 + 34))
                {
                  if (v12 == 3) {
                    goto LABEL_22;
                  }
                  if (*(unsigned __int8 *)(v11 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_4:
        if (++v9 == v7) {
          goto LABEL_23;
        }
      }
      uint64_t v14 = (unsigned __int8 *)(v11 + 36);
      uint64_t v15 = v12 - 4;
      int v16 = (unsigned __int8 *)(a2 + 36);
      while (v15)
      {
        int v18 = *v14++;
        int v17 = v18;
        int v19 = *v16++;
        --v15;
        if (v17 != v19) {
          goto LABEL_4;
        }
      }
LABEL_22:
      sub_10005636C(v4, v5, v6, 1);
      sub_10003EDC4(v8, (uint64_t)&v20, v9);
      uint64_t result = sub_10000F0D4(v4, v5, v6, 1);
      uint64_t v4 = v20;
    }
LABEL_23:
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = 0;
    *(void *)(v3 + 16) = 0;
    *(unsigned char *)(v3 + 24) = 1;
  }
  return result;
}

uint64_t sub_1000442DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, Swift::UInt32 a5)
{
  Swift::UInt32 v29 = a5;
  uint64_t v30 = a2;
  uint64_t v8 = type metadata accessor for Task.Logger(0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = __chkstk_darwin(v12);
  int v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  int v18 = &v28[-v17];
  sub_100057F2C(a3, (uint64_t)v11, type metadata accessor for Task.Logger);
  LODWORD(a3) = *(_DWORD *)(a1 + 172);
  uint64_t v19 = sub_1005E0ED0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(v16, v11, v19);
  uint64_t v20 = &v11[*(int *)(v9 + 28)];
  uint64_t v22 = *((void *)v20 + 1);
  char v21 = (void *)*((void *)v20 + 2);
  v23.uint64_t rawValue = *v20;
  swift_bridgeObjectRetain();
  v24.rawValue._uint64_t countAndFlagsBits = v22;
  v24.rawValue._unint64_t object = v21;
  v32.bytes._uint64_t rawValue = a4;
  v32._hashValue._Swift::UInt32 value = v29;
  MailboxTaskLoggerID.init(id:name:counter:mailbox:)(&v31, v23, v24, (NIOIMAPCore2::MailboxLoggingCounter)a3, v32);
  swift_bridgeObjectRetain();
  sub_100057F94((uint64_t)v11, type metadata accessor for Task.Logger);
  uint64_t v25 = &v16[*(int *)(v13 + 28)];
  long long v26 = *(_OWORD *)&v31.name.rawValue._object;
  *uint64_t v25 = *(_OWORD *)&v31.id.rawValue;
  v25[1] = v26;
  *(_OWORD *)((char *)v25 + 28) = *(_OWORD *)&v31.gap1A[2];
  sub_100057FF4((uint64_t)v16, (uint64_t)v18, type metadata accessor for MailboxTaskLogger);
  sub_100028FCC(v30, (uint64_t)v18);
  return sub_100057F94((uint64_t)v18, type metadata accessor for MailboxTaskLogger);
}

unint64_t sub_100044500(uint64_t a1)
{
  uint64_t v2 = sub_1000445D0();
  if (*((void *)v2 + 2) <= *(void *)(a1 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1000D2390((uint64_t)v2);
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)a1;
    if (*(void *)(a1 + 16)) {
      goto LABEL_3;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1000CF4B0((uint64_t)v2, a1);
    swift_bridgeObjectRelease();
    if (v3[2])
    {
LABEL_3:
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v3;
      return v4 | 0x9000000000000006;
    }
  }
  swift_bridgeObjectRelease();
  return 0xF000000000000007;
}

unsigned char *sub_1000445D0()
{
  uint64_t v1 = _s19UserInitiatedSearchVMa(0);
  uint64_t v41 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (unsigned int *)((char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = *(void *)(v0 + 8);
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    uint64_t v35 = sub_10003ED04(v4);
    uint64_t v11 = (unsigned char *)sub_10009A918((uint64_t)v35);
    swift_bridgeObjectRelease();
    return v11;
  }
  uint64_t v5 = *(_OWORD **)v0;
  uint64_t v43 = *(void *)(*(void *)v0 + 16);
  if (!v43) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v40 = v4;
  uint64_t v38 = *(void *)(v0 + 16);
  char v42 = v5 + 2;
  swift_bridgeObjectRetain();
  long long v6 = v5[10];
  long long v54 = v5[9];
  long long v55 = v6;
  long long v7 = v5[12];
  long long v56 = v5[11];
  long long v57 = v7;
  long long v8 = v5[6];
  long long v50 = v5[5];
  long long v51 = v8;
  long long v9 = v5[8];
  long long v52 = v5[7];
  long long v53 = v9;
  long long v10 = v5[3];
  long long v47 = v5[2];
  long long v48 = v10;
  uint64_t v39 = v5;
  long long v49 = v5[4];
  uint64_t v11 = &_swiftEmptySetSingleton;
  uint64_t v12 = 1;
  uint64_t v13 = *((void *)&v56 + 1);
  uint64_t v14 = *(void *)(*((void *)&v56 + 1) + 16);
  if (!v14) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v45 = v12;
  uint64_t v15 = v41;
  uint64_t v16 = v13 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  sub_100007780((uint64_t)&v47);
  uint64_t v44 = v13;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  uint64_t v18 = *(void *)(v15 + 72);
  do
  {
    sub_100057F2C(v16 + v18 * v17, (uint64_t)v3, _s19UserInitiatedSearchVMa);
    Swift::Int v20 = *v3;
    sub_1005E33F0();
    sub_1005E3440(v20);
    Swift::Int v21 = sub_1005E3470();
    uint64_t v22 = -1 << v11[32];
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)&v11[((v23 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v23) & 1) == 0) {
      goto LABEL_5;
    }
    uint64_t v24 = *((void *)v11 + 6);
    if (*(_DWORD *)(v24 + 4 * v23) != v20)
    {
      uint64_t v25 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v25;
        if (((*(void *)&v11[((v23 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v23) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v24 + 4 * v23) == v20) {
          goto LABEL_6;
        }
      }
LABEL_5:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = v11;
      sub_1000CA8D8(v20, v23, isUniquelyReferenced_nonNull_native);
      uint64_t v11 = v46;
      swift_bridgeObjectRelease();
    }
LABEL_6:
    ++v17;
    sub_100057F94((uint64_t)v3, _s19UserInitiatedSearchVMa);
  }
  while (v17 != v14);
  swift_bridgeObjectRelease();
  sub_100007820((uint64_t)&v47);
  uint64_t v12 = v45;
LABEL_14:
  while (v12 != v43)
  {
    long long v26 = &v42[11 * v12];
    long long v27 = *v26;
    long long v28 = v26[2];
    long long v48 = v26[1];
    long long v49 = v28;
    long long v47 = v27;
    long long v29 = v26[3];
    long long v30 = v26[4];
    long long v31 = v26[6];
    long long v52 = v26[5];
    long long v53 = v31;
    long long v50 = v29;
    long long v51 = v30;
    long long v32 = v26[7];
    long long v33 = v26[8];
    long long v34 = v26[10];
    long long v56 = v26[9];
    long long v57 = v34;
    long long v54 = v32;
    long long v55 = v33;
    uint64_t v13 = *((void *)&v56 + 1);
    ++v12;
    uint64_t v14 = *(void *)(*((void *)&v56 + 1) + 16);
    if (v14) {
      goto LABEL_4;
    }
  }
  sub_10000F0D4((uint64_t)v39, v40, v38, 1);
  return v11;
}

uint64_t sub_100044900(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(v4 + 24) == 1)
  {
    uint64_t v5 = v4;
    long long v6 = *(void **)v4;
    long long v8 = (void *)(v4 + 8);
    uint64_t v7 = *(void *)(v4 + 8);
    uint64_t v9 = *(void *)(*(void *)v4 + 16);
    if (v9)
    {
      int v11 = result;
      unint64_t v12 = 0;
      uint64_t v13 = *(void *)(v5 + 16);
      while (1)
      {
        uint64_t v14 = &v6[22 * v12 + 4];
        if (v14[1] == a3)
        {
          uint64_t v15 = *v14;
          uint64_t v16 = *(void *)(v15 + 16);
          if (v16 == *(void *)(a2 + 16))
          {
            if (v16) {
              BOOL v17 = v15 == a2;
            }
            else {
              BOOL v17 = 1;
            }
            if (v17) {
              goto LABEL_23;
            }
            if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(a2 + 32))
            {
              if (v16 == 1) {
                goto LABEL_23;
              }
              if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(a2 + 33))
              {
                if (v16 == 2) {
                  goto LABEL_23;
                }
                if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(a2 + 34))
                {
                  if (v16 == 3) {
                    goto LABEL_23;
                  }
                  if (*(unsigned __int8 *)(v15 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_4:
        if (++v12 == v9) {
          goto LABEL_22;
        }
      }
      uint64_t v18 = (unsigned __int8 *)(v15 + 36);
      uint64_t v19 = v16 - 4;
      Swift::Int v20 = (unsigned __int8 *)(a2 + 36);
      while (v19)
      {
        int v22 = *v18++;
        int v21 = v22;
        int v23 = *v20++;
        --v19;
        if (v21 != v23) {
          goto LABEL_4;
        }
      }
LABEL_23:
      sub_10005636C((uint64_t)v6, v7, *(void *)(v5 + 16), 1);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = v6;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100093440(v6);
        uint64_t v24 = (void *)result;
      }
      if (v12 >= v24[2])
      {
        __break(1u);
        return result;
      }
      sub_1000282A8(v11, a4);
      uint64_t result = sub_10000F0D4((uint64_t)v6, v7, v13, 1);
    }
    else
    {
LABEL_22:
      uint64_t v24 = v6;
    }
    *(void *)uint64_t v5 = v24;
    *long long v8 = 0;
    v8[1] = 0;
    *(unsigned char *)(v5 + 24) = 1;
  }
  return result;
}

uint64_t sub_100044AC4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(v4 + 24) == 1)
  {
    uint64_t v5 = v4;
    long long v6 = *(void **)v4;
    long long v8 = (void *)(v4 + 8);
    uint64_t v7 = *(void *)(v4 + 8);
    uint64_t v9 = *(void *)(*(void *)v4 + 16);
    if (v9)
    {
      unint64_t v12 = 0;
      uint64_t v13 = *(void *)(v5 + 16);
      while (1)
      {
        uint64_t v14 = &v6[22 * v12 + 4];
        if (v14[1] == a2)
        {
          uint64_t v15 = *v14;
          uint64_t v16 = *(void *)(v15 + 16);
          if (v16 == *(void *)(result + 16))
          {
            if (v16) {
              BOOL v17 = v15 == result;
            }
            else {
              BOOL v17 = 1;
            }
            if (v17) {
              goto LABEL_23;
            }
            if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v16 == 1) {
                goto LABEL_23;
              }
              if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v16 == 2) {
                  goto LABEL_23;
                }
                if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(result + 34))
                {
                  if (v16 == 3) {
                    goto LABEL_23;
                  }
                  if (*(unsigned __int8 *)(v15 + 35) == *(unsigned __int8 *)(result + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_4:
        if (++v12 == v9) {
          goto LABEL_22;
        }
      }
      uint64_t v18 = (unsigned __int8 *)(v15 + 36);
      uint64_t v19 = v16 - 4;
      Swift::Int v20 = (unsigned __int8 *)(result + 36);
      while (v19)
      {
        int v22 = *v18++;
        int v21 = v22;
        int v23 = *v20++;
        --v19;
        if (v21 != v23) {
          goto LABEL_4;
        }
      }
LABEL_23:
      sub_10005636C((uint64_t)v6, v7, *(void *)(v5 + 16), 1);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = v6;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100093440(v6);
        uint64_t v24 = (void *)result;
      }
      if (v12 >= v24[2])
      {
        __break(1u);
        return result;
      }
      sub_1000285CC(a3, a4);
      uint64_t result = sub_10000F0D4((uint64_t)v6, v7, v13, 1);
    }
    else
    {
LABEL_22:
      uint64_t v24 = v6;
    }
    *(void *)uint64_t v5 = v24;
    *long long v8 = 0;
    v8[1] = 0;
    *(unsigned char *)(v5 + 24) = 1;
  }
  return result;
}

uint64_t sub_100044C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = _s19UserInitiatedSearchVMa(0);
  uint64_t v9 = *(unsigned char **)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  uint64_t v68 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v67 = (uint64_t)&v58 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (unsigned int *)((char *)&v58 - v15);
  uint64_t result = __chkstk_darwin(v14);
  unint64_t v19 = (unint64_t)&v58 - v18;
  if (*(unsigned char *)(v4 + 24) != 1) {
    return result;
  }
  Swift::Int v20 = *(void **)v4;
  int v22 = (void *)(v4 + 8);
  uint64_t v21 = *(void *)(v4 + 8);
  uint64_t v23 = *(void *)(*(void *)v4 + 16);
  if (!v23) {
    goto LABEL_62;
  }
  unint64_t v24 = 0;
  uint64_t v25 = *(void *)(v4 + 16);
  while (1)
  {
    long long v26 = &v20[22 * v24 + 4];
    if (v26[1] == a3)
    {
      uint64_t v27 = *v26;
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28 == *(void *)(a2 + 16))
      {
        if (v28) {
          BOOL v29 = v27 == a2;
        }
        else {
          BOOL v29 = 1;
        }
        if (v29) {
          goto LABEL_22;
        }
        if (*(unsigned __int8 *)(v27 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v28 == 1) {
            goto LABEL_22;
          }
          if (*(unsigned __int8 *)(v27 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v28 == 2) {
              goto LABEL_22;
            }
            if (*(unsigned __int8 *)(v27 + 34) == *(unsigned __int8 *)(a2 + 34))
            {
              if (v28 == 3) {
                goto LABEL_22;
              }
              if (*(unsigned __int8 *)(v27 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                break;
              }
            }
          }
        }
      }
    }
LABEL_4:
    if (++v24 == v23) {
      goto LABEL_62;
    }
  }
  long long v30 = (unsigned __int8 *)(v27 + 36);
  uint64_t v31 = v28 - 4;
  long long v32 = (unsigned __int8 *)(a2 + 36);
  while (v31)
  {
    int v34 = *v30++;
    int v33 = v34;
    int v35 = *v32++;
    --v31;
    if (v33 != v35) {
      goto LABEL_4;
    }
  }
LABEL_22:
  uint64_t v36 = *(void *)v4;
  uint64_t v64 = *(void *)(v4 + 16);
  uint64_t v65 = v21;
  sub_10005636C(v36, v21, v25, 1);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = v20;
  if ((result & 1) == 0) {
    goto LABEL_72;
  }
  while (2)
  {
    if (v24 >= v37[2])
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      return result;
    }
    uint64_t v63 = v37;
    uint64_t v38 = &v37[22 * v24];
    uint64_t v41 = v38[23];
    uint64_t v40 = v38 + 23;
    uint64_t v39 = v41;
    unint64_t v42 = *(void *)(v41 + 16);
    if (!v42)
    {
      unint64_t v19 = 0;
      goto LABEL_61;
    }
    int v59 = v20;
    uint64_t v60 = v22;
    unint64_t v61 = v4;
    uint64_t v62 = v39;
    int v22 = (void *)((v9[80] + 32) & ~(unint64_t)v9[80]);
    uint64_t v66 = (char *)v22 + v39;
    uint64_t v69 = *((void *)v9 + 9);
    Swift::Int v20 = (void *)(a1 + 56);
    swift_bridgeObjectRetain();
    unint64_t v24 = 0;
    while (1)
    {
      sub_100057F2C((uint64_t)&v66[v69 * v24], v19, _s19UserInitiatedSearchVMa);
      if (*(void *)(a1 + 16))
      {
        unint64_t v4 = *(unsigned int *)v19;
        sub_1005E33F0();
        uint64_t v9 = v70;
        sub_1005E3440(v4);
        Swift::Int v43 = sub_1005E3470();
        uint64_t v44 = -1 << *(unsigned char *)(a1 + 32);
        unint64_t v45 = v43 & ~v44;
        if ((*(void *)((char *)v20 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45)) {
          break;
        }
      }
LABEL_26:
      sub_100057F94(v19, _s19UserInitiatedSearchVMa);
      if (++v24 == v42)
      {
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v19 = *(void *)(*v40 + 16);
        goto LABEL_60;
      }
    }
    uint64_t v46 = *(void *)(a1 + 48);
    if (*(_DWORD *)(v46 + 4 * v45) != v4)
    {
      uint64_t v47 = ~v44;
      do
      {
        unint64_t v45 = (v45 + 1) & v47;
        if (((*(void *)((char *)v20 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
          goto LABEL_26;
        }
      }
      while (*(_DWORD *)(v46 + 4 * v45) != v4);
    }
    sub_100057F94(v19, _s19UserInitiatedSearchVMa);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      goto LABEL_75;
    }
    uint64_t v48 = *v40;
    unint64_t v49 = *(void *)(*v40 + 16);
    unint64_t v42 = v24;
    if (v19 != v49)
    {
LABEL_35:
      if (v19 >= v49)
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        uint64_t result = (uint64_t)sub_100093440(v20);
        uint64_t v37 = (void *)result;
        continue;
      }
      unint64_t v24 = v19 * v69;
      sub_100057F2C((uint64_t)v22 + v48 + v19 * v69, (uint64_t)v16, _s19UserInitiatedSearchVMa);
      if (*(void *)(a1 + 16)
        && (unint64_t v4 = *v16,
            sub_1005E33F0(),
            uint64_t v9 = v70,
            sub_1005E3440(v4),
            Swift::Int v50 = sub_1005E3470(),
            uint64_t v51 = -1 << *(unsigned char *)(a1 + 32),
            unint64_t v52 = v50 & ~v51,
            ((*(void *)((char *)v20 + ((v52 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v52) & 1) != 0))
      {
        uint64_t v53 = *(void *)(a1 + 48);
        if (*(_DWORD *)(v53 + 4 * v52) != v4)
        {
          uint64_t v54 = ~v51;
          do
          {
            unint64_t v52 = (v52 + 1) & v54;
            if (((*(void *)((char *)v20 + ((v52 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v52) & 1) == 0) {
              goto LABEL_43;
            }
          }
          while (*(_DWORD *)(v53 + 4 * v52) != v4);
        }
        uint64_t result = sub_100057F94((uint64_t)v16, _s19UserInitiatedSearchVMa);
      }
      else
      {
LABEL_43:
        uint64_t result = sub_100057F94((uint64_t)v16, _s19UserInitiatedSearchVMa);
        if (v42 != v19)
        {
          if ((v42 & 0x8000000000000000) != 0) {
            goto LABEL_67;
          }
          if (v42 >= *(void *)(*v40 + 16)) {
            goto LABEL_68;
          }
          unint64_t v4 = v42 * v69;
          sub_100057F2C((uint64_t)v22 + *v40 + v42 * v69, v67, _s19UserInitiatedSearchVMa);
          if (v19 >= *(void *)(*v40 + 16)) {
            goto LABEL_69;
          }
          sub_100057F2C((uint64_t)v22 + *v40 + v24, v68, _s19UserInitiatedSearchVMa);
          uint64_t v9 = (unsigned char *)*v40;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v40 = (uint64_t)v9;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v9 = (unsigned char *)sub_1000933DC((unint64_t)v9);
            *uint64_t v40 = (uint64_t)v9;
          }
          if (v42 >= *((void *)v9 + 2)) {
            goto LABEL_70;
          }
          sub_1000573C4(v68, (uint64_t)v22 + (void)v9 + v4);
          uint64_t v9 = (unsigned char *)*v40;
          char v56 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v40 = (uint64_t)v9;
          if ((v56 & 1) == 0)
          {
            uint64_t v9 = (unsigned char *)sub_1000933DC((unint64_t)v9);
            *uint64_t v40 = (uint64_t)v9;
          }
          if (v19 >= *((void *)v9 + 2)) {
            goto LABEL_71;
          }
          uint64_t result = sub_1000573C4(v67, (uint64_t)v22 + (void)v9 + v24);
        }
        BOOL v57 = __OFADD__(v42++, 1);
        if (v57) {
          goto LABEL_66;
        }
      }
      BOOL v57 = __OFADD__(v19++, 1);
      if (v57) {
        goto LABEL_65;
      }
      uint64_t v48 = *v40;
      unint64_t v49 = *(void *)(*v40 + 16);
      if (v19 == v49) {
        break;
      }
      goto LABEL_35;
    }
    break;
  }
LABEL_60:
  int v22 = v60;
  unint64_t v4 = v61;
  Swift::Int v20 = v59;
  if ((uint64_t)v19 < (uint64_t)v42) {
    goto LABEL_74;
  }
LABEL_61:
  sub_1000D5684(v42, v19);
  uint64_t result = sub_10000F0D4((uint64_t)v20, v65, v64, 1);
  Swift::Int v20 = v63;
LABEL_62:
  *(void *)unint64_t v4 = v20;
  void *v22 = 0;
  v22[1] = 0;
  *(unsigned char *)(v4 + 24) = 1;
  return result;
}

uint64_t sub_1000452F0@<X0>(int *a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, _DWORD *a6@<X8>)
{
  int v51 = a5;
  uint64_t v50 = a4;
  uint64_t v54 = a6;
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12 - 8);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  unint64_t v19 = (char *)&v49 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v49 - v20;
  int v22 = *a1;
  uint64_t v23 = *((void *)a1 + 1);
  unint64_t v24 = *((void *)a1 + 2);
  uint64_t v25 = *(void *)(v23 + 16);
  if ((v24 & 4) != 0)
  {
    if (v25)
    {
      int v39 = v22;
      unint64_t v40 = sub_100024264(a2, a3);
      if (v41)
      {
        sub_1000079E4(*(void *)(v23 + 56) + *(void *)(v13 + 72) * v40, (uint64_t)v19, &qword_100709E30);
        sub_10001FDF0((uint64_t)v19, (uint64_t)v21, &qword_100709E30);
        uint64_t v42 = sub_10000566C(&qword_10070A038);
        Swift::Int v43 = v54;
        uint64_t v44 = (uint64_t)v54 + *(int *)(v42 + 48);
        *uint64_t v54 = v39;
        sub_1000079E4((uint64_t)v21, (uint64_t)v16, &qword_100709E30);
        sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
        sub_100007A48((uint64_t)v21, &qword_100709E30);
        uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v44 + *(int *)(MessagesVMa + 24), 1, 1, v53);
        sub_10001FDF0((uint64_t)v16, v44, &qword_100709E30);
        sub_10001FDF0((uint64_t)v11, v44 + *(int *)(MessagesVMa + 20), &qword_100709E38);
        _s19UserInitiatedSearchV5StateOMa(0);
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(_DWORD *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v43, 0, 1, v42);
      }
    }
    goto LABEL_18;
  }
  if (!v25)
  {
    swift_bridgeObjectRetain();
    sub_100023440(v24);
LABEL_16:
    uint64_t v46 = v54;
    swift_bridgeObjectRelease();
    sub_100023388(v24);
    uint64_t v47 = sub_10000566C(&qword_10070A038);
    return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
  }
  int v26 = v22;
  unint64_t v27 = sub_100024264(a2, a3);
  if ((v28 & 1) == 0)
  {
    sub_1000572C4(v23, v24);
    goto LABEL_16;
  }
  uint64_t v29 = *(void *)(v23 + 56) + 24 * v27;
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  char v32 = *(unsigned char *)(v29 + 16);
  if (v51 & 1) != 0 || (v31 != v50 ? (char v33 = 1) : (char v33 = *(unsigned char *)(v29 + 16)), v50 && (v33))
  {
    uint64_t v34 = sub_10000566C(&qword_10070A038);
    int v35 = v54;
    uint64_t v36 = (char *)v54 + *(int *)(v34 + 48);
    *uint64_t v54 = v26;
    sub_1000572C4(v23, v24);
    swift_bridgeObjectRetain();
    sub_100023440(v24);
    unint64_t v37 = sub_100022964(v24);
    swift_bridgeObjectRelease();
    sub_100023388(v24);
    *(void *)uint64_t v36 = v37;
    *((void *)v36 + 1) = v30;
    *((void *)v36 + 2) = v31;
    v36[24] = v32;
    _s19UserInitiatedSearchV5StateOMa(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_DWORD *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
  }
  sub_1000572C4(v23, v24);
  swift_bridgeObjectRelease();
  sub_100023388(v24);
LABEL_18:
  uint64_t v48 = sub_10000566C(&qword_10070A038);
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v54, 1, 1, v48);
}

BOOL sub_10004579C(uint64_t a1, void *a2)
{
  return (sub_1005E2030() & 1) == 0;
}

void *sub_10004581C()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v37 = *(void *)(*(void *)v0 + 16);
    if (v37)
    {
      uint64_t v33 = *(void *)(v0 + 16);
      uint64_t v34 = *(void *)(v0 + 8);
      uint64_t v36 = *(void *)v0 + 32;
      uint64_t v1 = (_OWORD *)swift_bridgeObjectRetain();
      long long v2 = v1[10];
      long long v47 = v1[9];
      long long v48 = v2;
      long long v3 = v1[12];
      long long v49 = v1[11];
      long long v50 = v3;
      long long v4 = v1[6];
      long long v43 = v1[5];
      long long v5 = v1[7];
      long long v6 = v1[8];
      long long v44 = v4;
      long long v45 = v5;
      long long v46 = v6;
      long long v7 = v1[3];
      long long v40 = v1[2];
      long long v41 = v7;
      uint64_t v35 = (uint64_t)v1;
      long long v42 = v1[4];
      uint64_t v8 = 1;
      uint64_t v9 = v49;
      uint64_t v10 = *(void *)(v49 + 16);
      if (v10) {
        goto LABEL_6;
      }
      while (v8 != v37)
      {
        uint64_t v11 = (long long *)(v36 + 176 * v8);
        long long v12 = *v11;
        long long v13 = v11[2];
        long long v41 = v11[1];
        long long v42 = v13;
        long long v40 = v12;
        long long v14 = v11[3];
        long long v15 = v11[4];
        long long v16 = v11[6];
        long long v45 = v11[5];
        long long v46 = v16;
        long long v44 = v15;
        long long v43 = v14;
        long long v17 = v11[7];
        long long v18 = v11[8];
        long long v19 = v11[10];
        long long v49 = v11[9];
        long long v50 = v19;
        long long v47 = v17;
        long long v48 = v18;
        uint64_t v9 = v49;
        ++v8;
        uint64_t v10 = *(void *)(v49 + 16);
        if (v10)
        {
LABEL_6:
          uint64_t v38 = v8;
          uint64_t v39 = v9 + 32;
          swift_bridgeObjectRetain_n();
          sub_100007780((uint64_t)&v40);
          uint64_t v20 = 0;
          do
          {
            int v22 = (char *)&_swiftEmptySetSingleton + 56;
            while (1)
            {
              uint64_t v23 = (unsigned int *)(v39 + 40 * v20);
              Swift::Int v24 = *v23;
              uint64_t v25 = *((void *)v23 + 1);
              unint64_t v26 = *((void *)v23 + 2);
              ++v20;
              sub_1005E33F0();
              sub_1005E3440(v24);
              Swift::Int v27 = sub_1005E3470();
              uint64_t v28 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
              unint64_t v29 = v27 & ~v28;
              if (((*(void *)&v22[(v29 >> 3) & 0xFFFFFFFFFFFFFF8] >> v29) & 1) == 0) {
                break;
              }
              uint64_t v30 = *((void *)&_swiftEmptySetSingleton + 6);
              if (*(_DWORD *)(v30 + 4 * v29) != v24)
              {
                uint64_t v31 = ~v28;
                do
                {
                  unint64_t v29 = (v29 + 1) & v31;
                  if (((*(void *)&v22[(v29 >> 3) & 0xFFFFFFFFFFFFFF8] >> v29) & 1) == 0) {
                    goto LABEL_7;
                  }
                }
                while (*(_DWORD *)(v30 + 4 * v29) != v24);
              }
              if (v20 == v10) {
                goto LABEL_16;
              }
            }
LABEL_7:
            sub_100008D24(v25, v26);
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_1000CA8EC(v24, v29, isUniquelyReferenced_nonNull_native);
            swift_bridgeObjectRelease();
            sub_1000094D4(v25, v26);
            swift_bridgeObjectRelease();
          }
          while (v20 != v10);
LABEL_16:
          swift_bridgeObjectRelease_n();
          sub_100007820((uint64_t)&v40);
          uint64_t v8 = v38;
        }
      }
      sub_10000F0D4(v35, v34, v33, 1);
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_100045AB4(unsigned int *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  if ((a1[4] | ((unint64_t)a1[4] << 32)) != (*((unsigned int *)a2 + 6) | ((unint64_t)*((unsigned int *)a2 + 6) << 32))
    || (uint64_t v11 = *a1,
        uint64_t v62 = *((void *)a1 + 3),
        uint64_t v12 = *((void *)a1 + 5),
        unint64_t v60 = *((void *)a1 + 4),
        char v13 = *((unsigned char *)a1 + 48),
        !sub_1000255D4(*((void *)a1 + 1), a2[2])))
  {
    *(void *)a5 = 0;
    *(void *)(a5 + 8) = 0;
    *(void *)(a5 + 16) = 0;
    *(void *)(a5 + 24) = 1;
    *(unsigned char *)(a5 + 32) = 0;
    return;
  }
  uint64_t v14 = *(void *)(a3 + 48);
  uint64_t v65 = *(void *)(v14 + 16);
  if (!v65) {
    goto LABEL_58;
  }
  char v53 = v13;
  uint64_t v54 = v11;
  uint64_t v52 = a4;
  uint64_t v55 = v12;
  uint64_t v56 = a5;
  uint64_t v15 = *a2;
  uint64_t v61 = a2[1];
  unint64_t v16 = v60;
  uint64_t v17 = v62;
  BOOL v18 = __OFSUB__(HIDWORD(v62), v62);
  BOOL v59 = v18;
  *(void *)type = v14 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  uint64_t v58 = v15;
  uint64_t v51 = v15 + 35;
  while (2)
  {
    uint64_t v20 = (uint64_t *)(*(void *)type + 48 * v19);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    uint64_t v23 = v20[3];
    uint64_t v66 = v20[4];
    ++v19;
    uint64_t v24 = 0;
    switch(v22 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v21), v21))
        {
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
        }
        uint64_t v24 = HIDWORD(v21) - (int)v21;
LABEL_16:
        sub_100008D24(v21, v22);
        sub_100008D24(v21, v22);
        break;
      case 2uLL:
        uint64_t v26 = *(void *)(v21 + 16);
        uint64_t v25 = *(void *)(v21 + 24);
        uint64_t v24 = v25 - v26;
        if (!__OFSUB__(v25, v26)) {
          goto LABEL_16;
        }
        goto LABEL_64;
      case 3uLL:
        break;
      default:
        uint64_t v24 = BYTE6(v22);
        break;
    }
    uint64_t v27 = BYTE6(v60);
    switch(v60 >> 62)
    {
      case 1uLL:
        uint64_t v27 = HIDWORD(v62) - (int)v62;
        if (v59) {
          goto LABEL_65;
        }
        goto LABEL_21;
      case 2uLL:
        uint64_t v29 = *(void *)(v17 + 16);
        uint64_t v28 = *(void *)(v17 + 24);
        BOOL v30 = __OFSUB__(v28, v29);
        uint64_t v27 = v28 - v29;
        if (!v30) {
          goto LABEL_21;
        }
        goto LABEL_66;
      case 3uLL:
        if (v24) {
          goto LABEL_9;
        }
        goto LABEL_25;
      default:
LABEL_21:
        if (v24 != v27)
        {
LABEL_9:
          sub_100008D24(v21, v22);
          swift_bridgeObjectRetain();
          sub_1000094D4(v21, v22);
          sub_1000094D4(v21, v22);
          goto LABEL_10;
        }
        if (v24 >= 1)
        {
          switch(v22 >> 62)
          {
            case 1uLL:
              if (v21 >> 32 < (int)v21) {
                goto LABEL_67;
              }
              sub_100008D24(v21, v22);
              sub_100008D24(v21, v22);
              swift_bridgeObjectRetain();
              sub_100008D24(v62, v60);
              uint64_t v41 = sub_1005E0550();
              if (!v41) {
                goto LABEL_52;
              }
              uint64_t v42 = sub_1005E0580();
              if (__OFSUB__((int)v21, v42)) {
                goto LABEL_70;
              }
              v41 += (int)v21 - v42;
LABEL_52:
              sub_1005E0570();
              uint64_t v17 = v62;
              unint64_t v16 = v60;
              sub_1000260B8(v41, v62, v60, (BOOL *)__s1);
              if (v6) {
                goto LABEL_72;
              }
              uint64_t v6 = 0;
              sub_1000094D4(v21, v22);
              break;
            case 2uLL:
              uint64_t v57 = v6;
              uint64_t v36 = v17;
              uint64_t v37 = *(void *)(v21 + 16);
              uint64_t v38 = *(void *)(v21 + 24);
              sub_100008D24(v21, v22);
              swift_bridgeObjectRetain();
              sub_100008D24(v36, v16);
              swift_retain();
              swift_retain();
              uint64_t v39 = sub_1005E0550();
              if (!v39) {
                goto LABEL_42;
              }
              uint64_t v40 = sub_1005E0580();
              if (__OFSUB__(v37, v40)) {
                goto LABEL_69;
              }
              v39 += v37 - v40;
LABEL_42:
              if (__OFSUB__(v38, v37)) {
                goto LABEL_68;
              }
              sub_1005E0570();
              uint64_t v17 = v62;
              sub_1000260B8(v39, v62, v16, (BOOL *)__s1);
              if (v57)
              {
                swift_release();
                swift_release();
                __break(1u);
LABEL_72:
                sub_1000094D4(v21, v22);
                __break(1u);
                JUMPOUT(0x100046438);
              }
              uint64_t v6 = 0;
              swift_release();
              swift_release();
              break;
            case 3uLL:
              memset(__s1, 0, 14);
              sub_100008D24(v21, v22);
              swift_bridgeObjectRetain();
              sub_100008D24(v17, v16);
              goto LABEL_46;
            default:
              __s1[0] = v21;
              LOWORD(__s1[1]) = v22;
              BYTE2(__s1[1]) = BYTE2(v22);
              BYTE3(__s1[1]) = BYTE3(v22);
              BYTE4(__s1[1]) = BYTE4(v22);
              BYTE5(__s1[1]) = BYTE5(v22);
              sub_100008D24(v21, v22);
              swift_bridgeObjectRetain();
              sub_100008D24(v17, v16);
LABEL_46:
              sub_1000260B8((uint64_t)__s1, v17, v16, (BOOL *)&v67);
              sub_1000094D4(v17, v16);
              sub_1000094D4(v21, v22);
              sub_1000094D4(v21, v22);
              if (v67) {
                goto LABEL_26;
              }
              goto LABEL_10;
          }
          sub_1000094D4(v17, v16);
          sub_1000094D4(v21, v22);
          sub_1000094D4(v21, v22);
          if (__s1[0]) {
            goto LABEL_26;
          }
LABEL_10:
          sub_1000094D4(v21, v22);
          swift_bridgeObjectRelease();
          if (v19 == v65)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v12 = v55;
            a5 = v56;
            uint64_t v11 = v54;
            char v13 = v53;
LABEL_58:
            *(void *)a5 = v11;
            *(void *)(a5 + 8) = v62;
            *(void *)(a5 + 16) = v60;
            *(void *)(a5 + 24) = v12;
            *(unsigned char *)(a5 + 32) = v13;
            sub_100008D24(v62, v60);
            swift_bridgeObjectRetain();
            return;
          }
          continue;
        }
LABEL_25:
        sub_100008D24(v21, v22);
        swift_bridgeObjectRetain();
        sub_1000094D4(v21, v22);
        sub_1000094D4(v21, v22);
LABEL_26:
        if (v66 != v61) {
          goto LABEL_10;
        }
        uint64_t v31 = *(void *)(v23 + 16);
        if (v31 != *(void *)(v58 + 16)) {
          goto LABEL_10;
        }
        if (!v31 || v23 == v58) {
          goto LABEL_59;
        }
        if (*(unsigned __int8 *)(v23 + 32) != *(unsigned __int8 *)(v58 + 32)) {
          goto LABEL_10;
        }
        if (v31 == 1) {
          goto LABEL_59;
        }
        if (*(unsigned __int8 *)(v23 + 33) != *(unsigned __int8 *)(v58 + 33)) {
          goto LABEL_10;
        }
        if (v31 == 2) {
          goto LABEL_59;
        }
        if (*(unsigned __int8 *)(v23 + 34) != *(unsigned __int8 *)(v58 + 34)) {
          goto LABEL_10;
        }
        uint64_t v32 = 0;
        uint64_t v33 = v31 - 3;
        while (v33 != v32)
        {
          int v34 = *(unsigned __int8 *)(v23 + v32 + 35);
          int v35 = *(unsigned __int8 *)(v51 + v32++);
          if (v34 != v35) {
            goto LABEL_10;
          }
        }
LABEL_59:
        sub_1000094D4(v21, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_bridgeObjectRetain();
        sub_100008D24(v62, v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100008D24(v62, v16);
        swift_bridgeObjectRetain();
        long long v43 = sub_1005E0EB0();
        os_log_type_t v44 = sub_1005E25A0();
        if (os_log_type_enabled(v43, v44))
        {
          os_log_type_t typea = v44;
          uint64_t v45 = swift_slowAlloc();
          __s1[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v45 = 68158210;
          LODWORD(v67) = 2;
          sub_1005E2960();
          *(_WORD *)(v45 + 8) = 256;
          unint64_t v46 = v16;
          char v47 = *(unsigned char *)(v52 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          swift_release();
          LOBYTE(v67) = v47;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v45 + 11) = 2080;
          sub_100008D24(v62, v46);
          uint64_t v48 = OpaquePersistedMessageIdentifier.description.getter(v62, v46);
          unint64_t v50 = v49;
          sub_1000094D4(v62, v46);
          uint64_t v67 = sub_1000C6914(v48, v50, __s1);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1000094D4(v62, v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1000094D4(v62, v46);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v43, typea, "[%.*hhx] Skipping download request for %s. Did previously not request any sections.", (uint8_t *)v45, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease();

          swift_release_n();
          sub_1000094D4(v62, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1000094D4(v62, v16);
          swift_bridgeObjectRelease();
        }
        *(void *)uint64_t v56 = 0;
        *(void *)(v56 + 8) = 0;
        *(void *)(v56 + 16) = 0;
        *(void *)(v56 + 24) = 1;
        *(unsigned char *)(v56 + 32) = 0;
        return;
    }
  }
}

uint64_t sub_100046468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v142 = a3;
  uint64_t v9 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = v5[2];
  long long v17 = v5[3];
  long long v18 = *v5;
  v160[1] = v5[1];
  v160[2] = v16;
  *(_OWORD *)long long v161 = v17;
  *(_OWORD *)&v161[12] = *(long long *)((char *)v5 + 60);
  v160[0] = v18;
  uint64_t v131 = a1;
  uint64_t v134 = a2;
  unint64_t v19 = (unint64_t)sub_1000403D4(a1, a2, v160);
  if ((v19 & 0x10000000000) == 0)
  {
    unint64_t v20 = v19;
    if ((v19 & 0x100000000) == 0)
    {
      __chkstk_darwin(v19);
      *(&v120 - 2) = v142;
      uint64_t v21 = v131;
      unint64_t v22 = sub_100040204(v131, v134, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_100057E90);
      uint64_t v23 = sub_10000566C(&qword_10070A778);
      uint64_t v158 = v23;
      uint64_t v24 = sub_100057E98(&qword_10070A780, &qword_10070A778);
      uint64_t v25 = _swiftEmptyArrayStorage;
      if (v22) {
        uint64_t v25 = (void *)v22;
      }
      uint64_t v159 = v24;
      uint64_t v156 = (uint64_t)v25;
      uint64_t v26 = sub_10003BCDC(&v156, v23);
      __chkstk_darwin(v26);
      uint64_t v28 = (uint64_t *)((char *)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v29 + 16))(v28);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      BOOL v30 = sub_100021E04(v153);
      *BOOL v30 = *v28;
      v30[1] = 0;
      sub_100057374((uint64_t)v153, AssociatedTypeWitness);
      sub_1005E2950();
      unint64_t i = *((void *)&__s1 + 1);
      if (*((void *)&__s1 + 1) >> 60 == 15) {
        goto LABEL_6;
      }
      int v45 = v20;
      uint64_t v133 = 0;
      unint64_t v46 = v5 + 3;
      uint64_t v47 = __s1;
      uint64_t v121 = v21 + 36;
      unint64_t v132 = v20;
      uint64_t v123 = v5 + 3;
      unsigned int v122 = (char *)v5 + 56;
      while (1)
      {
        __uint64_t v48 = static MonotonicTime.now()();
        sub_100057EE8(v47, i);
        swift_bridgeObjectRetain();
        sub_10000F2E0(v48);
        unint64_t v49 = *(void **)v46;
        uint64_t v139 = *(void *)(*(void *)v46 + 16);
        __uint64_t v129 = v48;
        if (!v139)
        {
          unint64_t v104 = 0;
          goto LABEL_99;
        }
        uint64_t v138 = v49 + 4;
        unint64_t v141 = i >> 62;
        unint64_t v127 = HIDWORD(v47);
        BOOL v50 = __OFSUB__(HIDWORD(v47), v47);
        BOOL v136 = v50;
        size_t v135 = HIDWORD(v47) - (int)v47;
        size_t v140 = BYTE6(i);
        unint64_t v137 = i;
        uint64_t v130 = i & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v128 = (int)v47;
        uint64_t v126 = v47 >> 32;
        uint64_t v125 = (v47 >> 32) - (int)v47;
        unint64_t v124 = v49;
        swift_bridgeObjectRetain();
        unint64_t v51 = 0;
        while (2)
        {
          uint64_t v52 = &v138[6 * v51];
          uint64_t v53 = *v52;
          unint64_t v54 = v52[1];
          int v55 = *((_DWORD *)v52 + 4);
          uint64_t v56 = v52[3];
          uint64_t v142 = v52[4];
          uint64_t v57 = 0;
          switch(v54 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v53), v53))
              {
                __break(1u);
LABEL_118:
                __break(1u);
LABEL_119:
                __break(1u);
LABEL_120:
                __break(1u);
LABEL_121:
                __break(1u);
LABEL_122:
                __break(1u);
LABEL_123:
                __break(1u);
LABEL_124:
                __break(1u);
LABEL_125:
                __break(1u);
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
LABEL_129:
                __break(1u);
LABEL_130:
                __break(1u);
                goto LABEL_131;
              }
              uint64_t v57 = HIDWORD(v53) - (int)v53;
LABEL_24:
              sub_100008D24(v53, v54);
              sub_100008D24(v53, v54);
              break;
            case 2uLL:
              uint64_t v59 = *(void *)(v53 + 16);
              uint64_t v58 = *(void *)(v53 + 24);
              uint64_t v57 = v58 - v59;
              if (!__OFSUB__(v58, v59)) {
                goto LABEL_24;
              }
              goto LABEL_118;
            case 3uLL:
              break;
            default:
              uint64_t v57 = BYTE6(v54);
              break;
          }
          size_t v60 = v140;
          switch((int)v141)
          {
            case 1:
              size_t v60 = v135;
              if (v136) {
                goto LABEL_119;
              }
              goto LABEL_29;
            case 2:
              uint64_t v62 = *(void *)(v47 + 16);
              uint64_t v61 = *(void *)(v47 + 24);
              BOOL v63 = __OFSUB__(v61, v62);
              size_t v60 = v61 - v62;
              if (!v63) {
                goto LABEL_29;
              }
              goto LABEL_120;
            case 3:
              if (v57) {
                goto LABEL_17;
              }
              goto LABEL_39;
            default:
LABEL_29:
              if (v57 != v60)
              {
LABEL_17:
                sub_100008D24(v53, v54);
                swift_bridgeObjectRetain();
                sub_1000094D4(v53, v54);
                sub_1000094D4(v53, v54);
                goto LABEL_18;
              }
              if (v57 >= 1)
              {
                switch(v54 >> 62)
                {
                  case 1uLL:
                    if (v53 >> 32 < (int)v53) {
                      goto LABEL_121;
                    }
                    sub_100057EE8(v47, v137);
                    sub_100008D24(v53, v54);
                    sub_100008D24(v53, v54);
                    swift_bridgeObjectRetain();
                    uint64_t v73 = sub_1005E0550();
                    if (!v73) {
                      goto LABEL_60;
                    }
                    uint64_t v74 = sub_1005E0580();
                    if (__OFSUB__((int)v53, v74)) {
                      goto LABEL_124;
                    }
                    v73 += (int)v53 - v74;
LABEL_60:
                    sub_1005E0570();
                    unint64_t v75 = v137;
                    uint64_t v76 = v133;
                    sub_1000260B8(v73, v47, v137, (BOOL *)&__s1);
                    uint64_t v133 = v76;
                    sub_1000094D4(v53, v54);
                    sub_1000094D4(v53, v54);
                    uint64_t v77 = v47;
                    unint64_t v78 = v75;
                    goto LABEL_66;
                  case 2uLL:
                    uint64_t v80 = *(void *)(v53 + 16);
                    uint64_t v79 = *(void *)(v53 + 24);
                    sub_100057EE8(v47, v137);
                    sub_100008D24(v53, v54);
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_retain();
                    uint64_t v81 = sub_1005E0550();
                    if (!v81) {
                      goto LABEL_64;
                    }
                    uint64_t v82 = sub_1005E0580();
                    if (__OFSUB__(v80, v82)) {
                      goto LABEL_123;
                    }
                    v81 += v80 - v82;
LABEL_64:
                    if (__OFSUB__(v79, v80)) {
                      goto LABEL_122;
                    }
                    sub_1005E0570();
                    uint64_t v83 = v81;
                    unint64_t v84 = v137;
                    uint64_t v85 = v133;
                    sub_1000260B8(v83, v47, v137, (BOOL *)&__s1);
                    uint64_t v133 = v85;
                    swift_release();
                    swift_release();
                    sub_1000094D4(v53, v54);
                    uint64_t v77 = v47;
                    unint64_t v78 = v84;
LABEL_66:
                    sub_100057EFC(v77, v78);
                    sub_1000094D4(v53, v54);
                    uint64_t v21 = v131;
                    int v45 = v132;
                    if (__s1) {
                      goto LABEL_40;
                    }
                    goto LABEL_18;
                  case 3uLL:
                    *(void *)((char *)&__s1 + 6) = 0;
                    *(void *)&long long __s1 = 0;
                    if (!v141) {
                      goto LABEL_78;
                    }
                    if (v141 == 1)
                    {
                      if (v126 < v128) {
                        goto LABEL_126;
                      }
                      sub_100057EE8(v47, v137);
                      sub_100008D24(v53, v54);
                      swift_bridgeObjectRetain();
                      uint64_t v86 = sub_1005E0550();
                      if (!v86) {
                        goto LABEL_136;
                      }
                      uint64_t v65 = v86;
                      uint64_t v87 = sub_1005E0580();
                      uint64_t v67 = v128 - v87;
                      if (__OFSUB__(v128, v87)) {
                        goto LABEL_130;
                      }
                      goto LABEL_73;
                    }
                    uint64_t v100 = *(void *)(v47 + 16);
                    uint64_t v99 = *(void *)(v47 + 24);
                    sub_100057EE8(v47, v137);
                    sub_100008D24(v53, v54);
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_retain();
                    long long v95 = (char *)sub_1005E0550();
                    if (v95)
                    {
                      uint64_t v101 = sub_1005E0580();
                      if (__OFSUB__(v100, v101)) {
                        goto LABEL_133;
                      }
                      v95 += v100 - v101;
                    }
                    BOOL v63 = __OFSUB__(v99, v100);
                    int64_t v97 = v99 - v100;
                    if (v63) {
                      goto LABEL_128;
                    }
                    uint64_t v98 = sub_1005E0570();
                    if (!v95) {
                      goto LABEL_138;
                    }
                    break;
                  default:
                    *(void *)&long long __s1 = v53;
                    WORD4(__s1) = v54;
                    BYTE10(__s1) = BYTE2(v54);
                    BYTE11(__s1) = BYTE3(v54);
                    BYTE12(__s1) = BYTE4(v54);
                    BYTE13(__s1) = BYTE5(v54);
                    if (!v141)
                    {
LABEL_78:
                      __int16 __s2 = v47;
                      char v144 = BYTE2(v47);
                      char v145 = BYTE3(v47);
                      unint64_t v91 = v137;
                      char v146 = v127;
                      char v147 = BYTE5(v47);
                      char v148 = BYTE6(v47);
                      char v149 = HIBYTE(v47);
                      int v150 = v137;
                      __int16 v151 = WORD2(v137);
                      sub_100008D24(v53, v54);
                      swift_bridgeObjectRetain();
                      int v92 = memcmp(&__s1, &__s2, v140);
                      sub_1000094D4(v53, v54);
                      sub_100057EFC(v47, v91);
                      sub_1000094D4(v53, v54);
                      if (!v92) {
                        goto LABEL_40;
                      }
                      goto LABEL_18;
                    }
                    if (v141 == 1)
                    {
                      if (v126 < v128) {
                        goto LABEL_125;
                      }
                      sub_100057EE8(v47, v137);
                      sub_100008D24(v53, v54);
                      swift_bridgeObjectRetain();
                      uint64_t v64 = sub_1005E0550();
                      if (!v64)
                      {
                        sub_1005E0570();
                        __break(1u);
LABEL_136:
                        sub_1005E0570();
                        __break(1u);
LABEL_137:
                        __break(1u);
LABEL_138:
                        __break(1u);
                        JUMPOUT(0x1000477E0);
                      }
                      uint64_t v65 = v64;
                      uint64_t v66 = sub_1005E0580();
                      uint64_t v67 = v128 - v66;
                      if (__OFSUB__(v128, v66)) {
                        goto LABEL_129;
                      }
LABEL_73:
                      uint64_t v88 = sub_1005E0570();
                      if (v88 >= v125) {
                        size_t v89 = v125;
                      }
                      else {
                        size_t v89 = v88;
                      }
                      int v90 = memcmp(&__s1, (const void *)(v65 + v67), v89);
                      sub_1000094D4(v53, v54);
                      sub_100057EFC(v47, v137);
                      sub_1000094D4(v53, v54);
                      int v45 = v132;
                      if (!v90) {
                        goto LABEL_40;
                      }
                      goto LABEL_18;
                    }
                    uint64_t v94 = *(void *)(v47 + 16);
                    uint64_t v93 = *(void *)(v47 + 24);
                    sub_100057EE8(v47, v137);
                    sub_100008D24(v53, v54);
                    swift_bridgeObjectRetain();
                    swift_retain();
                    swift_retain();
                    long long v95 = (char *)sub_1005E0550();
                    if (v95)
                    {
                      uint64_t v96 = sub_1005E0580();
                      if (__OFSUB__(v94, v96)) {
                        goto LABEL_132;
                      }
                      v95 += v94 - v96;
                    }
                    BOOL v63 = __OFSUB__(v93, v94);
                    int64_t v97 = v93 - v94;
                    if (v63) {
                      goto LABEL_127;
                    }
                    uint64_t v98 = sub_1005E0570();
                    if (!v95) {
                      goto LABEL_137;
                    }
                    break;
                }
                if (v98 >= v97) {
                  size_t v102 = v97;
                }
                else {
                  size_t v102 = v98;
                }
                int v103 = memcmp(&__s1, v95, v102);
                swift_release();
                swift_release();
                sub_1000094D4(v53, v54);
                sub_100057EFC(v47, v137);
                sub_1000094D4(v53, v54);
                uint64_t v21 = v131;
                int v45 = v132;
                if (!v103) {
                  goto LABEL_40;
                }
LABEL_18:
                sub_1000094D4(v53, v54);
                swift_bridgeObjectRelease();
                if (++v51 == v139)
                {
                  unint64_t v49 = v124;
                  swift_bridgeObjectRelease();
                  unint64_t v104 = v49[2];
                  if (v104 <= 0x10)
                  {
                    unint64_t v46 = v123;
                    unint64_t i = v137;
LABEL_99:
                    sub_100008D24(v47, i);
                    swift_bridgeObjectRetain();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      unint64_t v49 = sub_100015CD4(0, v104 + 1, 1, v49);
                    }
                    unint64_t v106 = v49[2];
                    unint64_t v105 = v49[3];
                    if (v106 >= v105 >> 1) {
                      unint64_t v49 = sub_100015CD4((void *)(v105 > 1), v106 + 1, 1, v49);
                    }
                    v49[2] = v106 + 1;
                    long long v107 = &v49[6 * v106];
                    v107[4] = v47;
                    v107[5] = i;
                    *((_DWORD *)v107 + 12) = v45;
                    uint64_t v108 = v134;
                    v107[7] = v21;
                    v107[8] = v108;
                    v107[9] = v129;
                    goto LABEL_110;
                  }
                  Swift::UInt64 v109 = PCG32Random.next()();
                  unint64_t v46 = v123;
                  for (i = v137; !(17 * v109); Swift::UInt64 v109 = PCG32Random.next()())
                    ;
                  unint64_t v110 = (v109 * (unsigned __int128)0x11uLL) >> 64;
                  sub_100008D24(v47, i);
                  swift_bridgeObjectRetain();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    unint64_t v49 = sub_1000933C8(v49);
                  }
                  if (v110 < v49[2])
                  {
                    uint64_t v111 = &v49[6 * v110];
                    uint64_t v112 = v111[4];
                    unint64_t v113 = v111[5];
                    v111[4] = v47;
                    v111[5] = i;
                    *((_DWORD *)v111 + 12) = v45;
                    uint64_t v114 = v134;
                    v111[7] = v21;
                    v111[8] = v114;
                    v111[9] = v129;
                    sub_1000094D4(v112, v113);
                    swift_bridgeObjectRelease();
LABEL_110:
                    sub_1000094D4(v47, i);
                    swift_bridgeObjectRelease();
                    goto LABEL_111;
                  }
LABEL_131:
                  __break(1u);
LABEL_132:
                  __break(1u);
LABEL_133:
                  __break(1u);
LABEL_134:
                  __break(1u);
                }
                continue;
              }
LABEL_39:
              sub_100008D24(v53, v54);
              swift_bridgeObjectRetain();
              sub_1000094D4(v53, v54);
              sub_1000094D4(v53, v54);
LABEL_40:
              if (v55 != v45) {
                goto LABEL_18;
              }
              if (v142 != v134) {
                goto LABEL_18;
              }
              uint64_t v68 = *(void *)(v56 + 16);
              if (v68 != *(void *)(v21 + 16)) {
                goto LABEL_18;
              }
              if (!v68 || v56 == v21) {
                goto LABEL_113;
              }
              if (*(unsigned __int8 *)(v56 + 32) != *(unsigned __int8 *)(v21 + 32)) {
                goto LABEL_18;
              }
              if (v68 == 1) {
                goto LABEL_113;
              }
              if (*(unsigned __int8 *)(v56 + 33) != *(unsigned __int8 *)(v21 + 33)) {
                goto LABEL_18;
              }
              if (v68 == 2) {
                goto LABEL_113;
              }
              if (*(unsigned __int8 *)(v56 + 34) != *(unsigned __int8 *)(v21 + 34)) {
                goto LABEL_18;
              }
              if (v68 == 3) {
                goto LABEL_113;
              }
              if (*(unsigned __int8 *)(v56 + 35) != *(unsigned __int8 *)(v21 + 35)) {
                goto LABEL_18;
              }
              uint64_t v69 = 0;
              uint64_t v70 = v68 - 4;
              while (v70 != v69)
              {
                int v71 = *(unsigned __int8 *)(v56 + v69 + 36);
                int v72 = *(unsigned __int8 *)(v121 + v69++);
                if (v71 != v72) {
                  goto LABEL_18;
                }
              }
LABEL_113:
              sub_1000094D4(v53, v54);
              char v115 = v124;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_100008D24(v47, v137);
              swift_bridgeObjectRetain();
              unint64_t v49 = v115;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v49 = sub_1000933C8(v115);
              }
              if (v51 >= v49[2]) {
                goto LABEL_134;
              }
              char v116 = &v49[6 * v51];
              uint64_t v117 = v116[4];
              unint64_t v118 = v116[5];
              unint64_t i = v137;
              v116[4] = v47;
              v116[5] = i;
              *((_DWORD *)v116 + 12) = v45;
              uint64_t v119 = v134;
              v116[7] = v21;
              v116[8] = v119;
              v116[9] = v129;
              sub_1000094D4(v117, v118);
              swift_bridgeObjectRelease();
              sub_1000094D4(v47, i);
              swift_bridgeObjectRelease();
              unint64_t v46 = v123;
LABEL_111:
              sub_100057EFC(v47, i);
              *(void *)unint64_t v46 = v49;
              sub_100057374((uint64_t)v153, AssociatedTypeWitness);
              sub_1005E2950();
              unint64_t i = *((void *)&__s1 + 1);
              uint64_t v47 = __s1;
              if (*((void *)&__s1 + 1) >> 60 == 15)
              {
LABEL_6:
                _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v153);
                return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v156);
              }
              break;
          }
          break;
        }
      }
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a4, v12);
  sub_100057F2C(a4, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v33 = sub_1005E0EB0();
  os_log_type_t v34 = sub_1005E25A0();
  int v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v36 = swift_slowAlloc();
    LODWORD(v141) = v35;
    uint64_t v37 = v36;
    size_t v140 = swift_slowAlloc();
    v153[0] = v140;
    *(_DWORD *)uint64_t v37 = 68159235;
    LODWORD(v156) = 2;
    sub_1005E2960();
    *(_WORD *)(v37 + 8) = 256;
    uint64_t v38 = *(int *)(v9 + 20);
    uint64_t v142 = v12;
    uint64_t v39 = &v11[v38];
    LOBYTE(v156) = v11[v38];
    sub_1005E2960();
    *(_WORD *)(v37 + 11) = 2082;
    uint64_t v41 = *((void *)v39 + 1);
    unint64_t v40 = *((void *)v39 + 2);
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_1000C6914(v41, v40, v153);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 21) = 1040;
    LODWORD(v156) = 2;
    sub_1005E2960();
    *(_WORD *)(v37 + 27) = 512;
    LOWORD(v156) = *((_WORD *)v39 + 12);
    sub_1005E2960();
    *(_WORD *)(v37 + 31) = 2160;
    uint64_t v156 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v37 + 41) = 2085;
    int v42 = *((_DWORD *)v39 + 10);
    uint64_t v156 = *((void *)v39 + 4);
    int v157 = v42;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1005E1CC0();
    uint64_t v156 = sub_1000C6914(v43, v44, v153);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100057F94((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v141, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Trying to add message-to-skip, but mailbox has no UID validity.", (uint8_t *)v37, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v142);
  }
  else
  {
    sub_100057F94((uint64_t)v11, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_100047810(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (*(unsigned char *)(v3 + 24) == 1)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void **)v3;
    long long v7 = (void *)(v3 + 8);
    uint64_t v6 = *(void *)(v3 + 8);
    uint64_t v8 = *(void *)(*(void *)v3 + 16);
    if (v8)
    {
      uint64_t v9 = result;
      unint64_t v10 = 0;
      uint64_t v11 = *(void *)(v4 + 16);
      while (1)
      {
        uint64_t v12 = (uint64_t)&v5[22 * v10 + 4];
        if ((*(unsigned int *)(v12 + 24) | ((unint64_t)*(unsigned int *)(v12 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
        {
          uint64_t v13 = *(void *)(v12 + 16);
          uint64_t v14 = *(void *)(v13 + 16);
          if (v14 == *(void *)(a2 + 16))
          {
            if (v14) {
              BOOL v15 = v13 == a2;
            }
            else {
              BOOL v15 = 1;
            }
            if (v15) {
              goto LABEL_23;
            }
            if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
            {
              if (v14 == 1) {
                goto LABEL_23;
              }
              if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
              {
                if (v14 == 2) {
                  goto LABEL_23;
                }
                if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34))
                {
                  if (v14 == 3) {
                    goto LABEL_23;
                  }
                  if (*(unsigned __int8 *)(v13 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_4:
        if (++v10 == v8) {
          goto LABEL_22;
        }
      }
      long long v16 = (unsigned __int8 *)(v13 + 36);
      uint64_t v17 = v14 - 4;
      long long v18 = (unsigned __int8 *)(a2 + 36);
      while (v17)
      {
        int v20 = *v16++;
        int v19 = v20;
        int v21 = *v18++;
        --v17;
        if (v19 != v21) {
          goto LABEL_4;
        }
      }
LABEL_23:
      sub_10005636C((uint64_t)v5, v6, *(void *)(v4 + 16), 1);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v22 = v5;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100093440(v5);
        unint64_t v22 = (void *)result;
      }
      if (v10 >= v22[2])
      {
        __break(1u);
        return result;
      }
      sub_100028C24(v9);
      uint64_t result = sub_10000F0D4((uint64_t)v5, v6, v11, 1);
    }
    else
    {
LABEL_22:
      unint64_t v22 = v5;
    }
    *(void *)uint64_t v4 = v22;
    *long long v7 = 0;
    v7[1] = 0;
    *(unsigned char *)(v4 + 24) = 1;
  }
  return result;
}

uint64_t sub_1000479D0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MailboxSyncState();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v34 - v13;
  unint64_t v15 = *(void *)(*(void *)a1 + 16);
  if (v15)
  {
    unint64_t v16 = 0;
    uint64_t v17 = *(void *)a1 + 32;
    while (1)
    {
      uint64_t v18 = v17 + 176 * v16;
      if ((*(unsigned int *)(v18 + 24) | ((unint64_t)*(unsigned int *)(v18 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v19 = *(void *)(v18 + 16);
        uint64_t v20 = *(void *)(v19 + 16);
        if (v20 == *(void *)(a2 + 16))
        {
          if (v20) {
            BOOL v21 = v19 == a2;
          }
          else {
            BOOL v21 = 1;
          }
          if (v21) {
            goto LABEL_21;
          }
          if (*(unsigned __int8 *)(v19 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v20 == 1) {
              goto LABEL_21;
            }
            if (*(unsigned __int8 *)(v19 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v20 == 2) {
                goto LABEL_21;
              }
              if (*(unsigned __int8 *)(v19 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v20 == 3) {
                  goto LABEL_21;
                }
                if (*(unsigned __int8 *)(v19 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v16 == v15) {
        return result;
      }
    }
    unint64_t v22 = (unsigned __int8 *)(v19 + 36);
    uint64_t v23 = v20 - 4;
    uint64_t v24 = (unsigned __int8 *)(a2 + 36);
    while (v23)
    {
      int v26 = *v22++;
      int v25 = v26;
      int v27 = *v24++;
      --v23;
      if (v25 != v27) {
        goto LABEL_3;
      }
    }
LABEL_21:
    if (v16 >= v15)
    {
      __break(1u);
    }
    else
    {
      uint64_t v28 = *(void *)(v17 + 176 * v16 + 96);
      if (!v28) {
        return result;
      }
      uint64_t v29 = v28
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v30 = _s13SelectedStateV7WrappedVMa(0);
      sub_100057F2C(v29 + *(int *)(v30 + 20), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      uint64_t v31 = sub_100057FF4((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      uint64_t v32 = *(void *)&v14[*(int *)(v8 + 56)];
      __chkstk_darwin(v31);
      *(&v34 - 2) = a4;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_100064EC8((void (*)(uint64_t *__return_ptr, void *))sub_100057F10, (uint64_t)(&v34 - 4), v32);
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_10009A848(v33);
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void **)a1;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result) {
        goto LABEL_24;
      }
    }
    uint64_t result = (uint64_t)sub_100093440(v11);
    uint64_t v11 = (void *)result;
LABEL_24:
    if (v16 >= v11[2])
    {
      __break(1u);
    }
    else
    {
      sub_100028C24(v8);
      swift_bridgeObjectRelease();
      *(void *)a1 = v11;
      return sub_100057F94((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    }
  }
  return result;
}

uint64_t sub_100047CE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  sub_10000566C(&qword_100709E38);
  uint64_t result = MessageIdentifierSet.contains(_:)();
  if (result)
  {
    uint64_t result = sub_100008D24(v3, v4);
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = 0xF000000000000000;
  }
  *a2 = v3;
  a2[1] = v4;
  return result;
}

uint64_t sub_100047D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_100007780(a1);
  uint64_t v6 = sub_100055F7C(a2, a1);
  uint64_t result = sub_100007820(a1);
  *a3 = v6;
  return result;
}

uint64_t sub_100047DC0@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v4 = *a1;
  sub_10001FDF0(a2 + 96, (uint64_t)v23, &qword_10070A228);
  uint64_t result = sub_10001FDF0((uint64_t)v23, (uint64_t)&v24, &qword_10070A228);
  if (!v24)
  {
    uint64_t v21 = 0;
    unint64_t v22 = 0xF000000000000000;
LABEL_28:
    *a3 = v21;
    a3[1] = v22;
    return result;
  }
  uint64_t v6 = v24
     + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
  swift_beginAccess();
  uint64_t v7 = v6 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
  uint64_t v8 = *(void *)(v7 + *(int *)(type metadata accessor for MailboxSyncState() + 56));
  uint64_t v9 = v8 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v8 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v14 << 6);
LABEL_6:
    if (v4 == *(_DWORD *)(*(void *)(v8 + 56) + 24 * v16))
    {
      uint64_t v20 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v16);
      uint64_t v21 = *v20;
      unint64_t v22 = v20[1];
      sub_100008D24(*v20, v22);
LABEL_27:
      uint64_t result = swift_release();
      goto LABEL_28;
    }
  }
  int64_t v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v17 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v17);
  ++v14;
  if (v18) {
    goto LABEL_23;
  }
  int64_t v14 = v17 + 1;
  if (v17 + 1 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v14);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v14 = v17 + 2;
  if (v17 + 2 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v14);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v14 = v17 + 3;
  if (v17 + 3 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v14);
  if (v18)
  {
LABEL_23:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_6;
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v13)
  {
LABEL_26:
    uint64_t v21 = 0;
    unint64_t v22 = 0xF000000000000000;
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100047FD0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*result >> 62 == 1 && *(unsigned char *)((*result & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == 1)
  {
    unint64_t v3 = *(void *)((*result & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    if (((v3 >> 59) & 0x1E | (v3 >> 2) & 1) == 0x13)
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      int64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        swift_bridgeObjectRetain();
        sub_10001A7B4(0, v5, 0);
        unint64_t v6 = _swiftEmptyArrayStorage[2];
        uint64_t v7 = 32;
        do
        {
          int v8 = *(_DWORD *)(v4 + v7);
          unint64_t v9 = _swiftEmptyArrayStorage[3];
          if (v6 >= v9 >> 1) {
            sub_10001A7B4(v9 > 1, v6 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v6 + 1;
          *((_DWORD *)&_swiftEmptyArrayStorage[4] + v6) = v8;
          v7 += 56;
          ++v6;
          --v5;
        }
        while (v5);
        uint64_t result = (void *)swift_bridgeObjectRelease();
      }
    }
  }
  *a2 = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_100048100(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for MailboxSyncState();
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (uint64_t *)((char *)&v34 - v15);
  uint64_t v17 = *v5;
  char v18 = *((unsigned char *)v6 + 24);
  if ((v18 & 1) == 0)
  {
    uint64_t v31 = v6[1];
    uint64_t v30 = v6[2];
    sub_10005636C(v17, v31, v30, 0);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v41 = (void *)v17;
    sub_10010330C(a2, a3, a4 & 1, a1, isUniquelyReferenced_nonNull_native);
    uint64_t v21 = v41;
    swift_bridgeObjectRelease();
    uint64_t result = sub_10000F0D4(*v6, v6[1], v6[2], *((unsigned char *)v6 + 24));
LABEL_22:
    *unint64_t v6 = (uint64_t)v21;
    v6[1] = v31;
    _OWORD v6[2] = v30;
    *((unsigned char *)v6 + 24) = v18;
    return result;
  }
  int v36 = *((unsigned __int8 *)v6 + 24);
  if (!*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    char v33 = 1;
    uint64_t v21 = (void *)v17;
LABEL_21:
    uint64_t result = sub_10000F0D4(v17, v6[1], v6[2], v33);
    uint64_t v31 = 0;
    uint64_t v30 = 0;
    char v18 = v36;
    goto LABEL_22;
  }
  uint64_t v37 = v14;
  uint64_t v39 = a5;
  unsigned int v38 = a1;
  int v35 = v6;
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  unint64_t v20 = 0;
  uint64_t v21 = (void *)v17;
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100093440(v21);
      uint64_t v21 = (void *)result;
    }
    if (v20 >= v21[2]) {
      break;
    }
    Swift::Int v23 = v21[v19 + 5];
    v24.rawValue._uint64_t rawValue = (void *)swift_bridgeObjectRetain();
    v24.hashValue = v23;
    LOBYTE(v23) = SyncRequest.includes(_:)(v24);
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0 || v39 && (sub_10001093C(v21[v19 + 4], v21[v19 + 5], v39) & 1) == 0) {
      goto LABEL_6;
    }
    uint64_t v25 = v21[v19 + 16];
    if (v25)
    {
      uint64_t v26 = v25
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v27 = v26 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
      uint64_t v28 = v37;
      sub_100057F2C(v27, v37, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      sub_100057FF4(v28, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      if (*(void *)(v16[19] + 16) != 15 || *(void *)(v16[20] + 16))
      {
        sub_100057F94((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      }
      else
      {
        uint64_t v29 = *(void *)(v16[21] + 16);
        sub_100057F94((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
        if (!v29) {
          goto LABEL_6;
        }
      }
    }
    sub_100018E3C(&v40, v38);
LABEL_6:
    ++v20;
    v19 += 22;
    if (v20 == v21[2])
    {
      unint64_t v6 = v35;
      uint64_t v17 = *v35;
      char v33 = *((unsigned char *)v35 + 24);
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100048428(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = result;
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  char v7 = *(unsigned char *)(v1 + 24);
  if (v7)
  {
    if (!*(void *)(v4 + 16))
    {
LABEL_12:
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    unint64_t v8 = 0;
    uint64_t v9 = 168;
    uint64_t v10 = (void *)v4;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_100093440(v10);
      }
      if (v8 >= v10[2]) {
        break;
      }
      sub_100093598(v3);
      ++v8;
      v9 += 176;
      if (v8 == v10[2])
      {
        uint64_t result = sub_10000F0D4(v4, v5, v6, 1);
        uint64_t v4 = (uint64_t)v10;
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v3 = sub_100024260(result);
    char v12 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v12 & 1) == 0)
    {
      uint64_t result = sub_10000F0D4(v4, v5, v6, 0);
      goto LABEL_14;
    }
    uint64_t v14 = v4;
    uint64_t v13 = v4;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_11;
    }
  }
  sub_100097798();
  uint64_t v13 = v14;
LABEL_11:
  sub_1000960D0(v3, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10000F0D4(v4, v5, v6, 0);
  uint64_t v4 = v13;
LABEL_14:
  *(void *)uint64_t v2 = v4;
  *(void *)(v2 + 8) = v5;
  *(void *)(v2 + 16) = v6;
  *(unsigned char *)(v2 + 24) = v7;
  return result;
}

uint64_t sub_1000485CC(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  int64_t v34 = v6;
  uint64_t v35 = v2;
  uint64_t v33 = result;
  while (1)
  {
LABEL_4:
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      return result;
    }
    if (v11 >= v6) {
      goto LABEL_45;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_45;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_45;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (!v12) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_20:
    if (*((unsigned char *)v1 + 24) == 1)
    {
      uint64_t v14 = (void *)*v1;
      uint64_t v15 = *(void *)(*v1 + 16);
      if (v15)
      {
        unint64_t v16 = 0;
        uint64_t v17 = *(void *)(result + 48) + 16 * v10;
        uint64_t v18 = *(void *)v17;
        uint64_t v19 = v1[2];
        unint64_t v20 = *(unsigned int *)(v17 + 8) | ((unint64_t)*(unsigned int *)(v17 + 8) << 32);
        while (1)
        {
          uint64_t v21 = (uint64_t)&v14[22 * v16 + 4];
          if ((*(unsigned int *)(v21 + 24) | ((unint64_t)*(unsigned int *)(v21 + 24) << 32)) == v20)
          {
            uint64_t v22 = *(void *)(v21 + 16);
            uint64_t v23 = *(void *)(v22 + 16);
            if (v23 == *(void *)(v18 + 16))
            {
              if (v23) {
                BOOL v24 = v22 == v18;
              }
              else {
                BOOL v24 = 1;
              }
              if (v24) {
                goto LABEL_41;
              }
              if (*(unsigned __int8 *)(v22 + 32) == *(unsigned __int8 *)(v18 + 32))
              {
                if (v23 == 1) {
                  goto LABEL_41;
                }
                if (*(unsigned __int8 *)(v22 + 33) == *(unsigned __int8 *)(v18 + 33))
                {
                  if (v23 == 2) {
                    goto LABEL_41;
                  }
                  if (*(unsigned __int8 *)(v22 + 34) == *(unsigned __int8 *)(v18 + 34))
                  {
                    if (v23 == 3) {
                      goto LABEL_41;
                    }
                    if (*(unsigned __int8 *)(v22 + 35) == *(unsigned __int8 *)(v18 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_23:
          if (++v16 == v15) {
            goto LABEL_4;
          }
        }
        uint64_t v25 = (unsigned __int8 *)(v22 + 36);
        uint64_t v26 = v23 - 4;
        uint64_t v27 = (unsigned __int8 *)(v18 + 36);
        while (v26)
        {
          int v29 = *v25++;
          int v28 = v29;
          int v30 = *v27++;
          --v26;
          if (v28 != v30) {
            goto LABEL_23;
          }
        }
LABEL_41:
        uint64_t v31 = v1[1];
        sub_10005636C(*v1, v31, v1[2], 1);
        swift_bridgeObjectRetain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v32 = v14;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100093440(v14);
          uint64_t v32 = (void *)result;
        }
        if (v16 >= v32[2]) {
          goto LABEL_49;
        }
        swift_bridgeObjectRelease();
        v32[22 * v16 + 21] = &_swiftEmptySetSingleton;
        sub_10000F0D4((uint64_t)v14, v31, v19, 1);
        swift_bridgeObjectRelease();
        *uint64_t v1 = (uint64_t)v32;
        uint64_t result = v33;
        v1[1] = 0;
        v1[2] = 0;
        *((unsigned char *)v1 + 24) = 1;
        int64_t v6 = v34;
        uint64_t v2 = v35;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 < v6)
  {
    unint64_t v12 = *(void *)(v2 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_50;
        }
        if (v8 >= v6) {
          goto LABEL_45;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_19;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_19;
  }
LABEL_45:
  return swift_release();
}

uint64_t sub_1000488BC(unint64_t *a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5)
{
  uint64_t v10 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v10);
  unint64_t v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v13 = (void *)*a1;
  unint64_t v14 = *(void *)(*a1 + 16);
  if (v14)
  {
    unint64_t v15 = 0;
    unint64_t v16 = v13 + 4;
    while (1)
    {
      uint64_t v17 = &v16[22 * v15];
      if (v17[1] == a3)
      {
        uint64_t v18 = *v17;
        uint64_t v19 = *(void *)(v18 + 16);
        if (v19 == *(void *)(a2 + 16))
        {
          if (v19) {
            BOOL v20 = v18 == a2;
          }
          else {
            BOOL v20 = 1;
          }
          if (v20) {
            goto LABEL_24;
          }
          if (*(unsigned __int8 *)(v18 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v19 == 1) {
              goto LABEL_24;
            }
            if (*(unsigned __int8 *)(v18 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v19 == 2) {
                goto LABEL_24;
              }
              if (*(unsigned __int8 *)(v18 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v19 == 3) {
                  goto LABEL_24;
                }
                if (*(unsigned __int8 *)(v18 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v15 == v14) {
        goto LABEL_21;
      }
    }
    uint64_t v21 = (unsigned __int8 *)(v18 + 36);
    uint64_t v22 = v19 - 4;
    uint64_t v23 = (unsigned __int8 *)(a2 + 36);
    while (v22)
    {
      int v25 = *v21++;
      int v24 = v25;
      int v26 = *v23++;
      --v22;
      if (v24 != v26) {
        goto LABEL_3;
      }
    }
LABEL_24:
    if (v15 >= v14)
    {
      __break(1u);
      goto LABEL_43;
    }
    a3 = v16[22 * v15 + 12];
    if (a3)
    {
      int64_t v13 = (void *)(a5 & 0xFFFFFFFFFFFFFFBLL);
      swift_retain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v28 = a3
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        sub_100057F2C(v28, (uint64_t)v12, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v29 = swift_allocObject();
        sub_100057FF4((uint64_t)v12, v29+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        a3 = v29;
      }
      uint64_t v30 = a3
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v31 = v30 + *(int *)(v10 + 20);
      swift_retain();
      sub_10004A840(v31, a5);
      a5 = *a1;
      if (v15 < *(void *)(*a1 + 16))
      {
        uint64_t v32 = *(void *)(a5 + 176 * v15 + 128);
        if (v32)
        {
          uint64_t v33 = (int *)(v32
                      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
          swift_beginAccess();
          int v34 = *v33;
          uint64_t v35 = (_DWORD *)(a3
                         + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
          swift_beginAccess();
          if (v34 == *v35)
          {
            swift_retain();
            if (swift_isUniquelyReferenced_nonNull_native())
            {
LABEL_32:
              if (v15 < *(void *)(a5 + 16))
              {
                *(void *)(a5 + 176 * v15 + 128) = a3;
                swift_release();
                *a1 = a5;
                swift_release_n();
                return swift_release();
              }
              __break(1u);
LABEL_46:
              uint64_t result = (uint64_t)sub_100093440(v13);
              int64_t v13 = (void *)result;
LABEL_36:
              if (v15 >= v13[2])
              {
                __break(1u);
              }
              else
              {
                int v36 = &v13[22 * v15];
                sub_10008B6A8((uint64_t)&_swiftEmptySetSingleton);
                Set<>.formNonEmpty()();
                *((_DWORD *)v36 + 34) = 0;
                *((unsigned char *)v36 + 140) = 1;
                uint64_t result = swift_release_n();
                *a1 = (unint64_t)v13;
              }
              return result;
            }
LABEL_44:
            a5 = (unint64_t)sub_100093440((void *)a5);
            goto LABEL_32;
          }
        }
        else
        {
          swift_beginAccess();
        }
        swift_release();
        return swift_release_n();
      }
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (a4)
    {
      swift_retain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result) {
        goto LABEL_36;
      }
      goto LABEL_46;
    }
  }
LABEL_21:
  return swift_release();
}

uint64_t sub_100048CF0(unint64_t *a1, uint64_t a2, unsigned int a3, char a4, unint64_t a5)
{
  uint64_t v10 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v10);
  unint64_t v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v13 = (void *)*a1;
  unint64_t v14 = *(void *)(*a1 + 16);
  if (v14)
  {
    unint64_t v15 = 0;
    unint64_t v16 = v13 + 4;
    while (1)
    {
      uint64_t v17 = &v16[22 * v15];
      if ((*((unsigned int *)v17 + 6) | ((unint64_t)*((unsigned int *)v17 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v18 = v17[2];
        uint64_t v19 = *(void *)(v18 + 16);
        if (v19 == *(void *)(a2 + 16))
        {
          if (v19) {
            BOOL v20 = v18 == a2;
          }
          else {
            BOOL v20 = 1;
          }
          if (v20) {
            goto LABEL_24;
          }
          if (*(unsigned __int8 *)(v18 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v19 == 1) {
              goto LABEL_24;
            }
            if (*(unsigned __int8 *)(v18 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v19 == 2) {
                goto LABEL_24;
              }
              if (*(unsigned __int8 *)(v18 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v19 == 3) {
                  goto LABEL_24;
                }
                if (*(unsigned __int8 *)(v18 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v15 == v14) {
        goto LABEL_21;
      }
    }
    uint64_t v21 = (unsigned __int8 *)(v18 + 36);
    uint64_t v22 = v19 - 4;
    uint64_t v23 = (unsigned __int8 *)(a2 + 36);
    while (v22)
    {
      int v25 = *v21++;
      int v24 = v25;
      int v26 = *v23++;
      --v22;
      if (v24 != v26) {
        goto LABEL_3;
      }
    }
LABEL_24:
    if (v15 >= v14)
    {
      __break(1u);
      goto LABEL_43;
    }
    a2 = v16[22 * v15 + 12];
    if (a2)
    {
      int64_t v13 = (void *)(a5 & 0xFFFFFFFFFFFFFFBLL);
      swift_retain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v28 = a2
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        sub_100057F2C(v28, (uint64_t)v12, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v29 = swift_allocObject();
        sub_100057FF4((uint64_t)v12, v29+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        a2 = v29;
      }
      uint64_t v30 = a2
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v31 = v30 + *(int *)(v10 + 20);
      swift_retain();
      sub_10004A840(v31, a5);
      a5 = *a1;
      if (v15 < *(void *)(*a1 + 16))
      {
        uint64_t v32 = *(void *)(a5 + 176 * v15 + 128);
        if (v32)
        {
          uint64_t v33 = (int *)(v32
                      + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
          swift_beginAccess();
          int v34 = *v33;
          uint64_t v35 = (_DWORD *)(a2
                         + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
          swift_beginAccess();
          if (v34 == *v35)
          {
            swift_retain();
            if (swift_isUniquelyReferenced_nonNull_native())
            {
LABEL_32:
              if (v15 < *(void *)(a5 + 16))
              {
                *(void *)(a5 + 176 * v15 + 128) = a2;
                swift_release();
                *a1 = a5;
                swift_release_n();
                return swift_release();
              }
              __break(1u);
LABEL_46:
              uint64_t result = (uint64_t)sub_100093440(v13);
              int64_t v13 = (void *)result;
LABEL_36:
              if (v15 >= v13[2])
              {
                __break(1u);
              }
              else
              {
                int v36 = &v13[22 * v15];
                sub_10008B6A8((uint64_t)&_swiftEmptySetSingleton);
                Set<>.formNonEmpty()();
                *((_DWORD *)v36 + 34) = 0;
                *((unsigned char *)v36 + 140) = 1;
                uint64_t result = swift_release_n();
                *a1 = (unint64_t)v13;
              }
              return result;
            }
LABEL_44:
            a5 = (unint64_t)sub_100093440((void *)a5);
            goto LABEL_32;
          }
        }
        else
        {
          swift_beginAccess();
        }
        swift_release();
        return swift_release_n();
      }
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (a4)
    {
      swift_retain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result) {
        goto LABEL_36;
      }
      goto LABEL_46;
    }
  }
LABEL_21:
  return swift_release();
}

void sub_100049130(uint64_t a1, void *a2, unsigned int a3, char a4, void (*a5)(char *), void *a6)
{
  uint64_t v12 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *(void **)a1;
  unint64_t v16 = *(void *)(*(void *)a1 + 16);
  if (v16)
  {
    unint64_t v17 = 0;
    uint64_t v18 = v15 + 4;
    while (1)
    {
      uint64_t v19 = &v18[22 * v17];
      if ((*((unsigned int *)v19 + 6) | ((unint64_t)*((unsigned int *)v19 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        BOOL v20 = (void *)v19[2];
        uint64_t v21 = v20[2];
        if (v21 == a2[2])
        {
          if (v21) {
            BOOL v22 = v20 == a2;
          }
          else {
            BOOL v22 = 1;
          }
          if (v22) {
            goto LABEL_21;
          }
          if (*((unsigned __int8 *)v20 + 32) == *((unsigned __int8 *)a2 + 32))
          {
            if (v21 == 1) {
              goto LABEL_21;
            }
            if (*((unsigned __int8 *)v20 + 33) == *((unsigned __int8 *)a2 + 33))
            {
              if (v21 == 2) {
                goto LABEL_21;
              }
              if (*((unsigned __int8 *)v20 + 34) == *((unsigned __int8 *)a2 + 34))
              {
                if (v21 == 3) {
                  goto LABEL_21;
                }
                if (*((unsigned __int8 *)v20 + 35) == *((unsigned __int8 *)a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v17 == v16) {
        return;
      }
    }
    uint64_t v23 = (unsigned __int8 *)v20 + 36;
    uint64_t v24 = v21 - 4;
    int v25 = (unsigned __int8 *)a2 + 36;
    while (v24)
    {
      int v27 = *v23++;
      int v26 = v27;
      int v28 = *v25++;
      --v24;
      if (v26 != v28) {
        goto LABEL_3;
      }
    }
LABEL_21:
    if (v17 >= v16)
    {
      __break(1u);
    }
    else
    {
      a2 = (void *)v18[22 * v17 + 12];
      if (!a2)
      {
        if ((a4 & 1) == 0) {
          return;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_33;
        }
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v29 = (uint64_t)a2
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        sub_100057F2C(v29, (uint64_t)v14, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        unint64_t v15 = (void *)swift_allocObject();
        sub_100057FF4((uint64_t)v14, (uint64_t)v15+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        a2 = v15;
      }
      uint64_t v30 = (char *)a2
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v31 = *(int *)(v12 + 20);
      uint64_t v32 = type metadata accessor for MailboxSyncState();
      a5(&v30[v31 + *(int *)(v32 + 52)]);
      swift_endAccess();
      a6 = *(void **)a1;
      if (v17 < *(void *)(*(void *)a1 + 16))
      {
        uint64_t v33 = a6[22 * v17 + 16];
        if (!v33)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        int v34 = (int *)(v33
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        int v35 = *v34;
        int v36 = (_DWORD *)((char *)a2
                       + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        if (v35 != *v36)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_29;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    a6 = sub_100093440(a6);
LABEL_29:
    if (v17 < a6[2])
    {
      a6[22 * v17 + 16] = a2;
      swift_release();
      *(void *)a1 = a6;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    unint64_t v15 = sub_100093440(v15);
LABEL_33:
    if (v17 >= v15[2])
    {
      __break(1u);
    }
    else
    {
      uint64_t v37 = &v15[22 * v17];
      sub_10008B6A8((uint64_t)&_swiftEmptySetSingleton);
      Set<>.formNonEmpty()();
      *((_DWORD *)v37 + 34) = 0;
      *((unsigned char *)v37 + 140) = 1;
      *(void *)a1 = v15;
    }
  }
}

void sub_1000494F4(uint64_t a1, void *a2, unsigned int a3, char a4, __int16 a5, void *a6)
{
  uint64_t v12 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *(void **)a1;
  unint64_t v16 = *(void *)(*(void *)a1 + 16);
  if (v16)
  {
    unint64_t v17 = 0;
    uint64_t v18 = v15 + 4;
    while (1)
    {
      uint64_t v19 = &v18[22 * v17];
      if ((*((unsigned int *)v19 + 6) | ((unint64_t)*((unsigned int *)v19 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        BOOL v20 = (void *)v19[2];
        uint64_t v21 = v20[2];
        if (v21 == a2[2])
        {
          if (v21) {
            BOOL v22 = v20 == a2;
          }
          else {
            BOOL v22 = 1;
          }
          if (v22) {
            goto LABEL_21;
          }
          if (*((unsigned __int8 *)v20 + 32) == *((unsigned __int8 *)a2 + 32))
          {
            if (v21 == 1) {
              goto LABEL_21;
            }
            if (*((unsigned __int8 *)v20 + 33) == *((unsigned __int8 *)a2 + 33))
            {
              if (v21 == 2) {
                goto LABEL_21;
              }
              if (*((unsigned __int8 *)v20 + 34) == *((unsigned __int8 *)a2 + 34))
              {
                if (v21 == 3) {
                  goto LABEL_21;
                }
                if (*((unsigned __int8 *)v20 + 35) == *((unsigned __int8 *)a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v17 == v16) {
        return;
      }
    }
    uint64_t v23 = (unsigned __int8 *)v20 + 36;
    uint64_t v24 = v21 - 4;
    int v25 = (unsigned __int8 *)a2 + 36;
    while (v24)
    {
      int v27 = *v23++;
      int v26 = v27;
      int v28 = *v25++;
      --v24;
      if (v26 != v28) {
        goto LABEL_3;
      }
    }
LABEL_21:
    if (v17 >= v16)
    {
      __break(1u);
    }
    else
    {
      a2 = (void *)v18[22 * v17 + 12];
      if (!a2)
      {
        if ((a4 & 1) == 0) {
          return;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_33;
        }
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v29 = (uint64_t)a2
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        sub_100057F2C(v29, (uint64_t)v14, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        unint64_t v15 = (void *)swift_allocObject();
        sub_100057FF4((uint64_t)v14, (uint64_t)v15+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        a2 = v15;
      }
      swift_beginAccess();
      sub_10005F4FC(a5 & 0xFF01, (unsigned __int16)a6 & 0xFF01);
      swift_endAccess();
      a6 = *(void **)a1;
      if (v17 < *(void *)(*(void *)a1 + 16))
      {
        uint64_t v30 = a6[22 * v17 + 16];
        if (!v30)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        uint64_t v31 = (int *)(v30
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        int v32 = *v31;
        uint64_t v33 = (_DWORD *)((char *)a2
                       + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        if (v32 != *v33)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_29;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    a6 = sub_100093440(a6);
LABEL_29:
    if (v17 < a6[2])
    {
      a6[22 * v17 + 16] = a2;
      swift_release();
      *(void *)a1 = a6;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    unint64_t v15 = sub_100093440(v15);
LABEL_33:
    if (v17 >= v15[2])
    {
      __break(1u);
    }
    else
    {
      int v34 = &v15[22 * v17];
      sub_10008B6A8((uint64_t)&_swiftEmptySetSingleton);
      Set<>.formNonEmpty()();
      *((_DWORD *)v34 + 34) = 0;
      *((unsigned char *)v34 + 140) = 1;
      *(void *)a1 = v15;
    }
  }
}

void sub_1000498B8(unint64_t *a1, void *a2, unsigned int a3, char a4, void (*a5)(char *, unint64_t), uint64_t a6, unint64_t a7)
{
  uint64_t v37 = a6;
  uint64_t v13 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = (void *)*a1;
  unint64_t v17 = *(void *)(*a1 + 16);
  if (v17)
  {
    unint64_t v18 = 0;
    uint64_t v19 = v16 + 4;
    while (1)
    {
      BOOL v20 = &v19[22 * v18];
      if ((*((unsigned int *)v20 + 6) | ((unint64_t)*((unsigned int *)v20 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v21 = (void *)v20[2];
        uint64_t v22 = v21[2];
        if (v22 == a2[2])
        {
          if (v22) {
            BOOL v23 = v21 == a2;
          }
          else {
            BOOL v23 = 1;
          }
          if (v23) {
            goto LABEL_21;
          }
          if (*((unsigned __int8 *)v21 + 32) == *((unsigned __int8 *)a2 + 32))
          {
            if (v22 == 1) {
              goto LABEL_21;
            }
            if (*((unsigned __int8 *)v21 + 33) == *((unsigned __int8 *)a2 + 33))
            {
              if (v22 == 2) {
                goto LABEL_21;
              }
              if (*((unsigned __int8 *)v21 + 34) == *((unsigned __int8 *)a2 + 34))
              {
                if (v22 == 3) {
                  goto LABEL_21;
                }
                if (*((unsigned __int8 *)v21 + 35) == *((unsigned __int8 *)a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v18 == v17) {
        return;
      }
    }
    uint64_t v24 = (unsigned __int8 *)v21 + 36;
    uint64_t v25 = v22 - 4;
    int v26 = (unsigned __int8 *)a2 + 36;
    while (v25)
    {
      int v28 = *v24++;
      int v27 = v28;
      int v29 = *v26++;
      --v25;
      if (v27 != v29) {
        goto LABEL_3;
      }
    }
LABEL_21:
    if (v18 >= v17)
    {
      __break(1u);
    }
    else
    {
      a2 = (void *)v19[22 * v18 + 12];
      if (!a2)
      {
        if ((a4 & 1) == 0) {
          return;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_33;
        }
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v30 = (uint64_t)a2
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        sub_100057F2C(v30, (uint64_t)v15, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        unint64_t v16 = (void *)swift_allocObject();
        sub_100057FF4((uint64_t)v15, (uint64_t)v16+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        a2 = v16;
      }
      uint64_t v31 = (char *)a2
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      a5(&v31[*(int *)(v13 + 20)], a7 & 0x101010101FFFF01);
      swift_endAccess();
      a7 = *a1;
      if (v18 < *(void *)(*a1 + 16))
      {
        uint64_t v32 = *(void *)(a7 + 176 * v18 + 128);
        if (!v32)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        uint64_t v33 = (int *)(v32
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        int v34 = *v33;
        uint64_t v35 = (_DWORD *)((char *)a2
                       + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        if (v34 != *v35)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_29;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    a7 = (unint64_t)sub_100093440((void *)a7);
LABEL_29:
    if (v18 < *(void *)(a7 + 16))
    {
      *(void *)(a7 + 176 * v18 + 128) = a2;
      swift_release();
      *a1 = a7;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    unint64_t v16 = sub_100093440(v16);
LABEL_33:
    if (v18 >= v16[2])
    {
      __break(1u);
    }
    else
    {
      int v36 = &v16[22 * v18];
      sub_10008B6A8((uint64_t)&_swiftEmptySetSingleton);
      Set<>.formNonEmpty()();
      *((_DWORD *)v36 + 34) = 0;
      *((unsigned char *)v36 + 140) = 1;
      *a1 = (unint64_t)v16;
    }
  }
}

void sub_100049C80(uint64_t *a1, uint64_t a2, unsigned int a3, char a4, uint64_t a5)
{
  uint64_t v10 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*a1;
  unint64_t v14 = *(void *)(*a1 + 16);
  if (v14)
  {
    unint64_t v15 = 0;
    unint64_t v16 = v13 + 4;
    while (1)
    {
      unint64_t v17 = &v16[22 * v15];
      if ((*((unsigned int *)v17 + 6) | ((unint64_t)*((unsigned int *)v17 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v18 = v17[2];
        uint64_t v19 = *(void *)(v18 + 16);
        if (v19 == *(void *)(a2 + 16))
        {
          if (v19) {
            BOOL v20 = v18 == a2;
          }
          else {
            BOOL v20 = 1;
          }
          if (v20) {
            goto LABEL_21;
          }
          if (*(unsigned __int8 *)(v18 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v19 == 1) {
              goto LABEL_21;
            }
            if (*(unsigned __int8 *)(v18 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v19 == 2) {
                goto LABEL_21;
              }
              if (*(unsigned __int8 *)(v18 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v19 == 3) {
                  goto LABEL_21;
                }
                if (*(unsigned __int8 *)(v18 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v15 == v14) {
        return;
      }
    }
    uint64_t v21 = (unsigned __int8 *)(v18 + 36);
    uint64_t v22 = v19 - 4;
    BOOL v23 = (unsigned __int8 *)(a2 + 36);
    while (v22)
    {
      int v25 = *v21++;
      int v24 = v25;
      int v26 = *v23++;
      --v22;
      if (v24 != v26) {
        goto LABEL_3;
      }
    }
LABEL_21:
    if (v15 >= v14)
    {
      __break(1u);
    }
    else
    {
      a2 = v16[22 * v15 + 12];
      if (!a2)
      {
        if ((a4 & 1) == 0) {
          return;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_33;
        }
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v27 = a2
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        sub_100057F2C(v27, (uint64_t)v12, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v28 = swift_allocObject();
        sub_100057FF4((uint64_t)v12, v28+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        a2 = v28;
      }
      uint64_t v29 = a2
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v30 = *(int *)(v10 + 20);
      uint64_t v31 = (void *)(v29 + v30 + *(int *)(type metadata accessor for MailboxSyncState() + 48));
      uint64_t v32 = v31[3];
      uint64_t v33 = v31[4];
      sub_10003BCDC(v31, v32);
      *(void *)a5 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 72))(v32, v33);
      *(unsigned char *)(a5 + 8) = v34 & 1;
      uint64_t v35 = v31[3];
      uint64_t v36 = v31[4];
      sub_100057374((uint64_t)v31, v35);
      (*(void (**)(uint64_t, uint64_t))(v36 + 48))(v35, v36);
      uint64_t v37 = v31[3];
      uint64_t v13 = (void *)v31[4];
      sub_100057374((uint64_t)v31, v37);
      ((void (*)(uint64_t, void *))v13[10])(v37, v13);
      swift_endAccess();
      uint64_t v10 = *a1;
      if (v15 < *(void *)(*a1 + 16))
      {
        uint64_t v38 = *(void *)(v10 + 176 * v15 + 128);
        if (!v38)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        uint64_t v39 = (int *)(v38
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        int v40 = *v39;
        uint64_t v41 = (_DWORD *)(a2
                       + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        if (v40 != *v41)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_29;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    uint64_t v10 = (uint64_t)sub_100093440((void *)v10);
LABEL_29:
    if (v15 < *(void *)(v10 + 16))
    {
      *(void *)(v10 + 176 * v15 + 128) = a2;
      swift_release();
      *a1 = v10;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    uint64_t v13 = sub_100093440(v13);
LABEL_33:
    if (v15 >= v13[2])
    {
      __break(1u);
    }
    else
    {
      int v42 = &v13[22 * v15];
      sub_10008B6A8((uint64_t)&_swiftEmptySetSingleton);
      Set<>.formNonEmpty()();
      *((_DWORD *)v42 + 34) = 0;
      *((unsigned char *)v42 + 140) = 1;
      *a1 = (uint64_t)v13;
    }
  }
}

void sub_10004A0D4(uint64_t *a1, uint64_t a2, unsigned int a3, char a4)
{
  int64_t v8 = (void *)_s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v8);
  uint64_t v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = *a1;
  unint64_t v12 = *(void *)(*a1 + 16);
  if (v12)
  {
    unint64_t v13 = 0;
    uint64_t v14 = v11 + 32;
    while (1)
    {
      uint64_t v15 = v14 + 176 * v13;
      if ((*(unsigned int *)(v15 + 24) | ((unint64_t)*(unsigned int *)(v15 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v16 = *(void *)(v15 + 16);
        uint64_t v17 = *(void *)(v16 + 16);
        if (v17 == *(void *)(a2 + 16))
        {
          if (v17) {
            BOOL v18 = v16 == a2;
          }
          else {
            BOOL v18 = 1;
          }
          if (v18) {
            goto LABEL_21;
          }
          if (*(unsigned __int8 *)(v16 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v17 == 1) {
              goto LABEL_21;
            }
            if (*(unsigned __int8 *)(v16 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v17 == 2) {
                goto LABEL_21;
              }
              if (*(unsigned __int8 *)(v16 + 34) == *(unsigned __int8 *)(a2 + 34))
              {
                if (v17 == 3) {
                  goto LABEL_21;
                }
                if (*(unsigned __int8 *)(v16 + 35) == *(unsigned __int8 *)(a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v13 == v12) {
        return;
      }
    }
    uint64_t v19 = (unsigned __int8 *)(v16 + 36);
    uint64_t v20 = v17 - 4;
    uint64_t v21 = (unsigned __int8 *)(a2 + 36);
    while (v20)
    {
      int v23 = *v19++;
      int v22 = v23;
      int v24 = *v21++;
      --v20;
      if (v22 != v24) {
        goto LABEL_3;
      }
    }
LABEL_21:
    if (v13 >= v12)
    {
      __break(1u);
    }
    else
    {
      a2 = *(void *)(v14 + 176 * v13 + 96);
      if (!a2)
      {
        if ((a4 & 1) == 0) {
          return;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_33;
        }
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v25 = a2
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        sub_100057F2C(v25, (uint64_t)v10, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v11 = swift_allocObject();
        sub_100057FF4((uint64_t)v10, v11+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        a2 = v11;
      }
      swift_beginAccess();
      sub_1000935B0(8u);
      sub_100019080(v31, 8);
      swift_endAccess();
      int64_t v8 = (void *)*a1;
      if (v13 < *(void *)(*a1 + 16))
      {
        uint64_t v26 = v8[22 * v13 + 16];
        if (!v26)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        uint64_t v27 = (unsigned int *)(v26
                             + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        uint64_t v11 = *v27;
        uint64_t v28 = (_DWORD *)(a2
                       + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        if (v11 != *v28)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_29;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    int64_t v8 = sub_100093440(v8);
LABEL_29:
    if (v13 < v8[2])
    {
      v8[22 * v13 + 16] = a2;
      swift_release();
      *a1 = (uint64_t)v8;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    uint64_t v11 = (uint64_t)sub_100093440((void *)v11);
LABEL_33:
    if (v13 >= *(void *)(v11 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = v11 + 176 * v13;
      sub_10008B6A8((uint64_t)&_swiftEmptySetSingleton);
      Set<>.formNonEmpty()();
      *(_DWORD *)(v29 + 136) = 0;
      *(unsigned char *)(v29 + 140) = 1;
      *a1 = v11;
    }
  }
}

void sub_10004A48C(uint64_t a1, void *a2, unsigned int a3, char a4, void (*a5)(char *), void *a6)
{
  uint64_t v12 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)a1;
  unint64_t v16 = *(void *)(*(void *)a1 + 16);
  if (v16)
  {
    unint64_t v17 = 0;
    BOOL v18 = v15 + 4;
    while (1)
    {
      uint64_t v19 = &v18[22 * v17];
      if ((*((unsigned int *)v19 + 6) | ((unint64_t)*((unsigned int *)v19 + 6) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v20 = (void *)v19[2];
        uint64_t v21 = v20[2];
        if (v21 == a2[2])
        {
          if (v21) {
            BOOL v22 = v20 == a2;
          }
          else {
            BOOL v22 = 1;
          }
          if (v22) {
            goto LABEL_21;
          }
          if (*((unsigned __int8 *)v20 + 32) == *((unsigned __int8 *)a2 + 32))
          {
            if (v21 == 1) {
              goto LABEL_21;
            }
            if (*((unsigned __int8 *)v20 + 33) == *((unsigned __int8 *)a2 + 33))
            {
              if (v21 == 2) {
                goto LABEL_21;
              }
              if (*((unsigned __int8 *)v20 + 34) == *((unsigned __int8 *)a2 + 34))
              {
                if (v21 == 3) {
                  goto LABEL_21;
                }
                if (*((unsigned __int8 *)v20 + 35) == *((unsigned __int8 *)a2 + 35)) {
                  break;
                }
              }
            }
          }
        }
      }
LABEL_3:
      if (++v17 == v16) {
        return;
      }
    }
    int v23 = (unsigned __int8 *)v20 + 36;
    uint64_t v24 = v21 - 4;
    uint64_t v25 = (unsigned __int8 *)a2 + 36;
    while (v24)
    {
      int v27 = *v23++;
      int v26 = v27;
      int v28 = *v25++;
      --v24;
      if (v26 != v28) {
        goto LABEL_3;
      }
    }
LABEL_21:
    if (v17 >= v16)
    {
      __break(1u);
    }
    else
    {
      a2 = (void *)v18[22 * v17 + 12];
      if (!a2)
      {
        if ((a4 & 1) == 0) {
          return;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_33;
        }
        goto LABEL_42;
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v29 = (uint64_t)a2
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        sub_100057F2C(v29, (uint64_t)v14, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v15 = (void *)swift_allocObject();
        sub_100057FF4((uint64_t)v14, (uint64_t)v15+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        a2 = v15;
      }
      uint64_t v30 = (char *)a2
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      a5(&v30[*(int *)(v12 + 20)]);
      swift_endAccess();
      a6 = *(void **)a1;
      if (v17 < *(void *)(*(void *)a1 + 16))
      {
        uint64_t v31 = a6[22 * v17 + 16];
        if (!v31)
        {
          swift_beginAccess();
          goto LABEL_36;
        }
        uint64_t v32 = (int *)(v31
                    + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        int v33 = *v32;
        char v34 = (_DWORD *)((char *)a2
                       + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
        swift_beginAccess();
        if (v33 != *v34)
        {
LABEL_36:
          swift_release();
          return;
        }
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_29;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_40:
    a6 = sub_100093440(a6);
LABEL_29:
    if (v17 < a6[2])
    {
      a6[22 * v17 + 16] = a2;
      swift_release();
      *(void *)a1 = a6;
      goto LABEL_36;
    }
    __break(1u);
LABEL_42:
    uint64_t v15 = sub_100093440(v15);
LABEL_33:
    if (v17 >= v15[2])
    {
      __break(1u);
    }
    else
    {
      uint64_t v35 = &v15[22 * v17];
      sub_10008B6A8((uint64_t)&_swiftEmptySetSingleton);
      Set<>.formNonEmpty()();
      *((_DWORD *)v35 + 34) = 0;
      *((unsigned char *)v35 + 140) = 1;
      *(void *)a1 = v15;
    }
  }
}

uint64_t sub_10004A840(uint64_t a1, unint64_t a2)
{
  uint64_t result = type metadata accessor for MailboxSyncState();
  unint64_t v5 = (unsigned char *)(a1 + *(int *)(result + 52));
  switch((a2 >> 59) & 0x1E | (a2 >> 2) & 1)
  {
    case 0xDuLL:
      uint64_t result = swift_release();
      *unint64_t v5 = 1;
      break;
    case 0xFuLL:
      uint64_t result = swift_release();
      v5[1] = 1;
      break;
    case 0x11uLL:
      uint64_t result = swift_release();
      long long v5[2] = 1;
      break;
    case 0x15uLL:
      return result;
    default:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_10004A960(uint64_t result, unsigned int a2, void (*a3)(uint64_t))
{
  if (*((unsigned char *)v3 + 24) == 1)
  {
    uint64_t v4 = (void *)*v3;
    uint64_t v5 = v3[1];
    uint64_t v6 = *(void *)(*v3 + 16);
    if (v6)
    {
      unint64_t v8 = 0;
      uint64_t v9 = v3[2];
      while (1)
      {
        uint64_t v10 = (uint64_t)&v4[22 * v8 + 4];
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          uint64_t v11 = *(void *)(v10 + 16);
          uint64_t v12 = *(void *)(v11 + 16);
          if (v12 == *(void *)(result + 16))
          {
            if (v12) {
              BOOL v13 = v11 == result;
            }
            else {
              BOOL v13 = 1;
            }
            if (v13) {
              goto LABEL_23;
            }
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v12 == 1) {
                goto LABEL_23;
              }
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v12 == 2) {
                  goto LABEL_23;
                }
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(result + 34))
                {
                  if (v12 == 3) {
                    goto LABEL_23;
                  }
                  if (*(unsigned __int8 *)(v11 + 35) == *(unsigned __int8 *)(result + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_4:
        if (++v8 == v6) {
          goto LABEL_22;
        }
      }
      uint64_t v14 = (unsigned __int8 *)(v11 + 36);
      uint64_t v15 = v12 - 4;
      unint64_t v16 = (unsigned __int8 *)(result + 36);
      while (v15)
      {
        int v18 = *v14++;
        int v17 = v18;
        int v19 = *v16++;
        --v15;
        if (v17 != v19) {
          goto LABEL_4;
        }
      }
LABEL_23:
      sub_10005636C(*v3, v3[1], v3[2], 1);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = (uint64_t)v4;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100093440(v4);
        uint64_t v20 = result;
      }
      if (v8 >= *(void *)(v20 + 16))
      {
        __break(1u);
        return result;
      }
      a3(v20 + 176 * v8 + 72);
      uint64_t result = sub_10000F0D4((uint64_t)v4, v5, v9, 1);
    }
    else
    {
LABEL_22:
      uint64_t v20 = *v3;
    }
    *uint64_t v3 = v20;
    v3[1] = 0;
    v3[2] = 0;
    *((unsigned char *)v3 + 24) = 1;
  }
  return result;
}

uint64_t sub_10004AB2C(uint64_t result, char a2, uint64_t a3, unsigned int a4)
{
  if (*(unsigned char *)(v4 + 24) == 1)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void **)v4;
    unint64_t v8 = (void *)(v4 + 8);
    uint64_t v7 = *(void *)(v4 + 8);
    uint64_t v9 = *(void *)(*(void *)v4 + 16);
    if (v9)
    {
      uint64_t v10 = result;
      unint64_t v11 = 0;
      char v12 = a2 & 1;
      uint64_t v13 = *(void *)(v5 + 16);
      while (1)
      {
        uint64_t v14 = (uint64_t)&v6[22 * v11 + 4];
        if ((*(unsigned int *)(v14 + 24) | ((unint64_t)*(unsigned int *)(v14 + 24) << 32)) == (a4 | ((unint64_t)a4 << 32)))
        {
          uint64_t v15 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v15 + 16);
          if (v16 == *(void *)(a3 + 16))
          {
            if (v16) {
              BOOL v17 = v15 == a3;
            }
            else {
              BOOL v17 = 1;
            }
            if (v17) {
              goto LABEL_23;
            }
            if (*(unsigned __int8 *)(v15 + 32) == *(unsigned __int8 *)(a3 + 32))
            {
              if (v16 == 1) {
                goto LABEL_23;
              }
              if (*(unsigned __int8 *)(v15 + 33) == *(unsigned __int8 *)(a3 + 33))
              {
                if (v16 == 2) {
                  goto LABEL_23;
                }
                if (*(unsigned __int8 *)(v15 + 34) == *(unsigned __int8 *)(a3 + 34))
                {
                  if (v16 == 3) {
                    goto LABEL_23;
                  }
                  if (*(unsigned __int8 *)(v15 + 35) == *(unsigned __int8 *)(a3 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_4:
        if (++v11 == v9) {
          goto LABEL_22;
        }
      }
      int v18 = (unsigned __int8 *)(v15 + 36);
      uint64_t v19 = v16 - 4;
      uint64_t v20 = (unsigned __int8 *)(a3 + 36);
      while (v19)
      {
        int v22 = *v18++;
        int v21 = v22;
        int v23 = *v20++;
        --v19;
        if (v21 != v23) {
          goto LABEL_4;
        }
      }
LABEL_23:
      sub_10005636C((uint64_t)v6, v7, *(void *)(v5 + 16), 1);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = v6;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100093440(v6);
        uint64_t v24 = (void *)result;
      }
      if (v11 >= v24[2])
      {
        __break(1u);
        return result;
      }
      MailboxOfInterest.highestModificationSequenceValue.setter(v10, v12);
      uint64_t result = sub_10000F0D4((uint64_t)v6, v7, v13, 1);
    }
    else
    {
LABEL_22:
      uint64_t v24 = v6;
    }
    *(void *)uint64_t v5 = v24;
    *unint64_t v8 = 0;
    v8[1] = 0;
    *(unsigned char *)(v5 + 24) = 1;
  }
  return result;
}

uint64_t sub_10004ACFC(uint64_t result, unsigned int a2, uint64_t a3)
{
  if (*(unsigned char *)(v3 + 24) != 1) {
    return result;
  }
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 16);
  if (!v5) {
    return result;
  }
  unint64_t v7 = 0;
  uint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v3 + 16);
  while (1)
  {
    uint64_t v10 = (uint64_t)&v4[22 * v7 + 4];
    if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
    {
      uint64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12 == *(void *)(result + 16))
      {
        if (v12) {
          BOOL v13 = v11 == result;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13) {
          goto LABEL_21;
        }
        if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(result + 32))
        {
          if (v12 == 1) {
            goto LABEL_21;
          }
          if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(result + 33))
          {
            if (v12 == 2) {
              goto LABEL_21;
            }
            if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(result + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v5) {
      return result;
    }
  }
  uint64_t v14 = (unsigned __int8 *)(v11 + 35);
  uint64_t v15 = v12 - 3;
  uint64_t v16 = (unsigned __int8 *)(result + 35);
  while (v15)
  {
    int v18 = *v14++;
    int v17 = v18;
    int v19 = *v16++;
    --v15;
    if (v17 != v19) {
      goto LABEL_4;
    }
  }
LABEL_21:
  sub_10005636C(*(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), 1);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = v4;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100093440(v4);
    uint64_t v20 = (void *)result;
  }
  if (v7 >= v20[2])
  {
    __break(1u);
    goto LABEL_29;
  }
  int v21 = &v20[22 * v7];
  long long v22 = *(_OWORD *)(a3 + 16);
  *((_OWORD *)v21 + 4) = *(_OWORD *)a3;
  *((_OWORD *)v21 + 5) = v22;
  *((unsigned char *)v21 + 96) = *(unsigned char *)(a3 + 32);
  uint64_t v24 = v21[4];
  uint64_t v23 = v21[5];
  swift_bridgeObjectRetain();
  sub_10000F0D4((uint64_t)v4, v8, v9, 1);
  *(void *)uint64_t v3 = v20;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 1;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_100057B44(v3 + 48, v24, v23);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v26 = *(void *)(*(void *)(v3 + 48) + 16);
  if (v26 < v25)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  sub_1000D4040(v25, v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004AF38(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  char v116 = a3;
  uint64_t v122 = a2;
  uint64_t v5 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v5);
  unint64_t v7 = (uint64_t (*)())&v106[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v117 = (void (**)(uint64_t (*)(), unsigned char *, unint64_t))type metadata accessor for UntaggedResponse(0);
  uint64_t v8 = __chkstk_darwin((void (**)(uint64_t (*)(), uint64_t (*)(), unint64_t))v117);
  unint64_t v118 = &v106[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t)&v106[-v10];
  unint64_t v124 = sub_1005E0ED0();
  char v115 = *(void **)(v124 - 8);
  uint64_t v12 = __chkstk_darwin(v124);
  uint64_t v14 = &v106[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (unint64_t)&v106[-v16];
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v121 = (uint64_t (*)())&v106[-v19];
  __chkstk_darwin(v18);
  uint64_t v120 = (uint64_t (*)())&v106[-v20];
  uint64_t v123 = _s12LocalMailboxV6LoggerVMa();
  uint64_t v21 = __chkstk_darwin(v123);
  uint64_t v114 = &v106[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = &v106[-v24];
  uint64_t v26 = __chkstk_darwin(v23);
  int v28 = (uint64_t (*)())&v106[-v27];
  __chkstk_darwin(v26);
  uint64_t v30 = (uint64_t (*)())&v106[-v29];
  uint64_t v119 = (unsigned __int8 *)a1;
  sub_100057594(a1 + 8, (uint64_t)v125);
  uint64_t result = sub_100057594((uint64_t)v125, (uint64_t)&v131);
  switch(v131 >> 60)
  {
    case 1uLL:
      v131 &= 0xFFFFFFFFFFFFFFFuLL;
      goto LABEL_49;
    case 2uLL:
      uint64_t v32 = v131 & 0xFFFFFFFFFFFFFFFLL;
      v131 &= 0xFFFFFFFFFFFFFFFuLL;
      if (*(unsigned char *)(v3 + 24) != 1) {
        return result;
      }
      uint64_t v25 = *(void **)v3;
      int v33 = (void *)(v3 + 8);
      if (!*(void *)(*(void *)v3 + 16)) {
        goto LABEL_58;
      }
      uint64_t v112 = *(void *)(v3 + 8);
      uint64_t v114 = (unsigned char *)(v3 + 8);
      uint64_t v34 = *(void *)(v32 + 16);
      uint64_t v35 = *(unsigned int *)(v32 + 24);
      uint64_t v36 = *(void *)(v32 + 32);
      uint64_t v37 = *(void *)(v32 + 40);
      uint64_t v38 = *(unsigned int *)(v32 + 48);
      int v39 = *(unsigned __int8 *)(v32 + 52);
      uint64_t v40 = *(void *)(v32 + 56);
      uint64_t v41 = *(unsigned int *)(v32 + 64);
      int v42 = *(unsigned __int8 *)(v32 + 68);
      uint64_t v43 = *(unsigned int *)(v32 + 72);
      int v44 = *(unsigned __int8 *)(v32 + 76);
      uint64_t v45 = *(void *)(v32 + 80);
      __int16 v46 = *(unsigned __int8 *)(v32 + 88);
      int v47 = *(unsigned __int8 *)(v32 + 89);
      int v48 = *(unsigned __int8 *)(v32 + 90);
      uint64_t v113 = v3;
      uint64_t v111 = *(uint64_t (**)())(v3 + 16);
      BOOL v49 = v39 == 0;
      BOOL v50 = &_mh_execute_header;
      if (v49) {
        unint64_t v51 = 0;
      }
      else {
        unint64_t v51 = &_mh_execute_header;
      }
      unint64_t v52 = (unint64_t)v51 | v38;
      if (v42) {
        uint64_t v53 = &_mh_execute_header;
      }
      else {
        uint64_t v53 = 0;
      }
      unint64_t v54 = (unint64_t)v53 | v41;
      if (!v44) {
        BOOL v50 = 0;
      }
      unint64_t v55 = (unint64_t)v50 | v43;
      if (v47) {
        __int16 v56 = 256;
      }
      else {
        __int16 v56 = 0;
      }
      *(void *)&long long v126 = v34;
      *((void *)&v126 + 1) = v35;
      *(void *)&long long v127 = v36;
      *((void *)&v127 + 1) = v37;
      *(void *)&long long v128 = v52;
      *((void *)&v128 + 1) = v40;
      *(void *)__uint64_t v129 = v54;
      *(void *)&v129[8] = v55;
      *(void *)&v129[16] = v45;
      v129[26] = v48 != 0;
      *(_WORD *)&v129[24] = v56 | v46;
      LODWORD(v121) = *(_DWORD *)v119;
      uint64_t v119 = &v116[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l];
      unint64_t v118 = v115 + 2;
      uint64_t v117 = (void (**)(uint64_t (*)(), unsigned char *, unint64_t))(v115 + 4);
      LODWORD(v116) = v116[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id];
      swift_bridgeObjectRetain();
      int v28 = 0;
      unint64_t v17 = 0;
      char v115 = v25;
      uint64_t v57 = v120;
      unint64_t v58 = v124;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v25 = sub_100093440(v25);
        }
        if (v17 >= v25[2]) {
          goto LABEL_71;
        }
        uint64_t v14 = *(void **)((char *)v28 + (void)v25 + 48);
        uint64_t v11 = *(unsigned int *)((char *)v28 + (void)v25 + 56);
        unint64_t v7 = (uint64_t (*)())*(unsigned int *)((char *)v28 + (void)v25 + 204);
        (*(void (**)(uint64_t (*)(), unsigned __int8 *, unint64_t))v118)(v57, v119, v58);
        (*v117)(v30, v57, v58);
        uint64_t v59 = (char *)v30 + *(int *)(v123 + 20);
        *uint64_t v59 = (char)v116;
        *((_WORD *)v59 + 1) = (_WORD)v7;
        *((void *)v59 + 1) = v14;
        *((_DWORD *)v59 + 4) = v11;
        swift_bridgeObjectRetain();
        sub_100027A04((uint64_t *)&v126, (int)v121, v122, v30);
        sub_100057F94((uint64_t)v30, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        ++v17;
        int v28 = (uint64_t (*)())((char *)v28 + 176);
        if (v17 == v25[2])
        {
          uint64_t result = sub_10000F0D4((uint64_t)v115, v112, (uint64_t)v111, 1);
          uint64_t v3 = v113;
          int v33 = v114;
LABEL_58:
          *(void *)uint64_t v3 = v25;
          void *v33 = 0;
          v33[1] = 0;
          goto LABEL_68;
        }
      }
    case 3uLL:
      v131 &= 0xFFFFFFFFFFFFFFFuLL;
      uint64_t v60 = swift_projectBox();
      sub_100057F2C(v60, v11, type metadata accessor for UntaggedResponse);
      if (*(unsigned char *)(v3 + 24) != 1) {
        goto LABEL_63;
      }
      uint64_t v122 = v11;
      uint64_t v11 = *(void *)v3;
      uint64_t v14 = (void *)(v3 + 8);
      uint64_t v57 = *(uint64_t (**)())(*(void *)v3 + 16);
      if (!v57)
      {
        uint64_t v73 = *(void **)v3;
        goto LABEL_62;
      }
      uint64_t v114 = *(unsigned char **)(v3 + 8);
      uint64_t v120 = v7;
      uint64_t v121 = (uint64_t (*)())v5;
      int v28 = 0;
      unint64_t v7 = 0;
      int v61 = *(_DWORD *)v119;
      uint64_t v113 = v3;
      uint64_t v112 = *(void *)(v3 + 16);
      while (1)
      {
        uint64_t v62 = *(void *)((char *)v28 + v11 + 128);
        if (v62)
        {
          BOOL v63 = (_DWORD *)(v62
                         + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped);
          swift_beginAccess();
          if (*v63 == v61) {
            break;
          }
        }
        unint64_t v7 = (uint64_t (*)())((char *)v7 + 1);
        int v28 = (uint64_t (*)())((char *)v28 + 176);
        if (v57 == v7) {
          goto LABEL_59;
        }
      }
      if ((unint64_t)v7 >= (unint64_t)v57) {
        goto LABEL_72;
      }
      uint64_t v64 = *(void *)((char *)v28 + v11 + 128);
      if (!v64)
      {
LABEL_59:
        uint64_t v73 = (void *)v11;
        uint64_t v3 = v113;
        goto LABEL_62;
      }
      uint64_t v109 = *(void *)((char *)v28 + v11 + 48);
      unsigned int v110 = *(_DWORD *)((char *)v28 + v11 + 56);
      uint64_t v108 = (char *)v28 + v11;
      int v107 = *(_DWORD *)((char *)v28 + v11 + 204);
      uint64_t v111 = (uint64_t (*)())v64;
      uint64_t v65 = v116;
      uint64_t v66 = (uint64_t)v115;
      ((void (*)(unint64_t, unsigned __int8 *, unint64_t))v115[2])(v17, &v116[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l], v124);
      LODWORD(v116) = v65[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id];
      uint64_t v57 = v111;
      (*(void (**)(void *, unint64_t, unint64_t))(v66 + 32))(v25, v17, v124);
      uint64_t v67 = (char *)v25 + *(int *)(v123 + 20);
      *uint64_t v67 = (char)v116;
      *((_WORD *)v67 + 1) = v107;
      *((void *)v67 + 1) = v109;
      *((_DWORD *)v67 + 4) = v110;
      uint64_t v68 = *((void *)v108 + 4);
      uint64_t v123 = *(void *)((char *)v28 + v11 + 48);
      unint64_t v124 = *(void *)((char *)v28 + v11 + 104);
      unsigned int v110 = *(_DWORD *)((char *)v28 + v11 + 112);
      LODWORD(v116) = *((_DWORD *)v119 + 4);
      uint64_t v69 = *((void *)v119 + 4);
      char v115 = (void *)*((void *)v119 + 3);
      uint64_t v119 = (unsigned __int8 *)v69;
      sub_10005636C(v11, (uint64_t)v114, v112, 1);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v17 = v110;
      sub_100007810(v124);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v109 = v68;
        uint64_t v70 = (uint64_t)v57
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        int v71 = v120;
        sub_100057F2C(v70, (uint64_t)v120, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v72 = swift_allocObject();
        sub_100057FF4((uint64_t)v71, v72+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        uint64_t v57 = (uint64_t (*)())v72;
      }
      swift_beginAccess();
      sub_10005DA70(v122, (int)v116, (uint64_t)v115, (uint64_t)v119, (uint64_t)v25);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000078B0(v124);
      swift_retain();
      uint64_t v73 = (void *)v11;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_33;
      }
      goto LABEL_74;
    case 4uLL:
      v131 &= 0xFFFFFFFFFFFFFFFuLL;
      if (*(unsigned char *)(v3 + 24) != 1) {
        return result;
      }
      uint64_t v25 = *(void **)v3;
      uint64_t v73 = (void *)(v3 + 8);
      int v28 = *(uint64_t (**)())(v3 + 8);
      uint64_t v57 = *(uint64_t (**)())(*(void *)v3 + 16);
      if (!v57)
      {
        uint64_t v94 = *(void **)v3;
        goto LABEL_67;
      }
      uint64_t v120 = v7;
      uint64_t v121 = (uint64_t (*)())v5;
      uint64_t v11 = 0;
      unint64_t v7 = 0;
      LODWORD(v118) = *((_DWORD *)v119 + 4);
      uint64_t v117 = (void (**)(uint64_t (*)(), unsigned char *, unint64_t))*((void *)v119 + 3);
      uint64_t v112 = *((void *)v119 + 4);
      int v74 = *(_DWORD *)v119;
      uint64_t v113 = v3;
      uint64_t v122 = *(void *)(v3 + 16);
      while (1)
      {
        uint64_t v75 = *(void *)((char *)v25 + v11 + 128);
        if (v75)
        {
          unint64_t v17 = v75
              + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
          uint64_t result = swift_beginAccess();
          if (*(_DWORD *)v17 == v74) {
            break;
          }
        }
        unint64_t v7 = (uint64_t (*)())((char *)v7 + 1);
        v11 += 176;
        if (v57 == v7) {
          goto LABEL_60;
        }
      }
      if ((unint64_t)v7 >= (unint64_t)v57) {
        goto LABEL_73;
      }
      uint64_t v76 = *(void *)((char *)v25 + v11 + 128);
      if (!v76)
      {
LABEL_60:
        uint64_t v94 = v25;
        uint64_t v3 = v113;
        goto LABEL_67;
      }
      uint64_t v109 = *(void *)((char *)v25 + v11 + 48);
      unsigned int v110 = *(_DWORD *)((char *)v25 + v11 + 56);
      uint64_t v108 = (char *)v25 + v11;
      int v107 = *(_DWORD *)((char *)v25 + v11 + 204);
      uint64_t v119 = (unsigned __int8 *)v28;
      uint64_t v77 = v116;
      uint64_t v78 = (uint64_t)v115;
      uint64_t v79 = (void (*)(void *, unsigned __int8 *, unint64_t))v115[2];
      uint64_t v111 = (uint64_t (*)())v76;
      unint64_t v80 = v124;
      v79(v14, &v116[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l], v124);
      LODWORD(v116) = v77[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id];
      uint64_t v81 = v114;
      (*(void (**)(unsigned char *, void *, unint64_t))(v78 + 32))(v114, v14, v80);
      uint64_t v82 = &v81[*(int *)(v123 + 20)];
      *uint64_t v82 = (_BYTE)v116;
      *((_WORD *)v82 + 1) = v107;
      *((void *)v82 + 1) = v109;
      *((_DWORD *)v82 + 4) = v110;
      unint64_t v83 = *((void *)v108 + 4);
      char v115 = *(void **)((char *)v25 + v11 + 48);
      unint64_t v84 = *(void *)((char *)v25 + v11 + 104);
      int v85 = *(_DWORD *)((char *)v25 + v11 + 112);
      sub_10005636C((uint64_t)v25, (uint64_t)v119, v122, 1);
      unint64_t v17 = (unint64_t)v111;
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v124 = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v116 = (unsigned __int8 *)v84;
      LODWORD(v123) = v85;
      sub_100007810(v84);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v86 = v17
            + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
        swift_beginAccess();
        uint64_t v87 = v120;
        sub_100057F2C(v86, (uint64_t)v120, _s13SelectedStateV7WrappedVMa);
        _s13SelectedStateV8_StorageCMa(0);
        uint64_t v88 = swift_allocObject();
        sub_100057FF4((uint64_t)v87, v88+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
        swift_release();
        unint64_t v17 = v88;
      }
      unint64_t v89 = v17
          + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      uint64_t v90 = *((int *)v121 + 5);
      uint64_t v91 = v89 + v90 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
      uint64_t v93 = *(void *)(v91 + 24);
      uint64_t v92 = *(void *)(v91 + 32);
      sub_100057374(v91, v93);
      (*(void (**)(void, void (**)(uint64_t (*)(), uint64_t (*)(), unint64_t), uint64_t, uint64_t, uint64_t))(v92 + 56))(v118, (void (**)(uint64_t (*)(), uint64_t (*)(), unint64_t))v117, v112, v93, v92);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000078B0((unint64_t)v116);
      swift_retain();
      uint64_t v94 = v25;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_46;
      }
      goto LABEL_76;
    case 8uLL:
      if (v131 != 0x8000000000000000) {
        return result;
      }
LABEL_49:
      if (*(unsigned char *)(v3 + 24) != 1) {
        return result;
      }
      uint64_t v96 = *(void *)v3;
      int64_t v97 = (void *)(v3 + 8);
      if (!*(void *)(*(void *)v3 + 16)) {
        goto LABEL_57;
      }
      uint64_t v112 = *(void *)(v3 + 8);
      uint64_t v114 = (unsigned char *)(v3 + 8);
      uint64_t v113 = v3;
      uint64_t v111 = *(uint64_t (**)())(v3 + 16);
      long long v128 = 0u;
      memset(v129, 0, 27);
      long long v126 = 0u;
      long long v127 = 0u;
      LODWORD(v120) = *(_DWORD *)v119;
      uint64_t v119 = &v116[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_l];
      LODWORD(v118) = v116[OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id];
      uint64_t v117 = (void (**)(uint64_t (*)(), unsigned char *, unint64_t))(v115 + 2);
      char v116 = (unsigned __int8 *)(v115 + 4);
      swift_bridgeObjectRetain();
      unint64_t v7 = 0;
      unint64_t v17 = 0;
      char v115 = (void *)v96;
      uint64_t v57 = v121;
      unint64_t v98 = v124;
      break;
    default:
      return result;
  }
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v96 = (uint64_t)sub_100093440((void *)v96);
    }
    if (v17 >= *(void *)(v96 + 16)) {
      break;
    }
    uint64_t v25 = *(void **)((char *)v7 + v96 + 48);
    uint64_t v11 = *(unsigned int *)((char *)v7 + v96 + 56);
    uint64_t v14 = (void *)*(unsigned int *)((char *)v7 + v96 + 204);
    (*v117)(v57, v119, v98);
    (*(void (**)(uint64_t (*)(), uint64_t (*)(), unint64_t))v116)(v28, v57, v98);
    uint64_t v99 = (char *)v28 + *(int *)(v123 + 20);
    *uint64_t v99 = (char)v118;
    *((_WORD *)v99 + 1) = (_WORD)v14;
    *((void *)v99 + 1) = v25;
    *((_DWORD *)v99 + 4) = v11;
    swift_bridgeObjectRetain();
    sub_100027A04((uint64_t *)&v126, (int)v120, v122, v28);
    sub_100057F94((uint64_t)v28, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
    ++v17;
    unint64_t v7 = (uint64_t (*)())((char *)v7 + 176);
    if (v17 == *(void *)(v96 + 16))
    {
      uint64_t result = sub_10000F0D4((uint64_t)v115, v112, (uint64_t)v111, 1);
      uint64_t v3 = v113;
      int64_t v97 = v114;
LABEL_57:
      *(void *)uint64_t v3 = v96;
      *int64_t v97 = 0;
      v97[1] = 0;
LABEL_68:
      *(unsigned char *)(v3 + 24) = 1;
      return result;
    }
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  uint64_t v73 = sub_100093440((void *)v11);
LABEL_33:
  uint64_t v3 = v113;
  if ((unint64_t)v7 >= v73[2])
  {
    __break(1u);
LABEL_76:
    uint64_t v94 = sub_100093440(v25);
LABEL_46:
    uint64_t v3 = v113;
    uint64_t v95 = (uint64_t)v119;
    if ((unint64_t)v7 >= v94[2])
    {
      __break(1u);
      JUMPOUT(0x10004C134);
    }
    *(void *)((char *)v94 + v11 + 128) = v17;
    swift_release();
    sub_100057F94((uint64_t)v114, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
    swift_release();
    uint64_t result = sub_10000F0D4((uint64_t)v25, v95, v122, 1);
LABEL_67:
    *(void *)uint64_t v3 = v94;
    *uint64_t v73 = 0;
    v73[1] = 0;
    goto LABEL_68;
  }
  *(void *)((char *)v28 + (void)v73 + 128) = v57;
  swift_release();
  sub_100057F94((uint64_t)v25, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
  swift_release();
  sub_10000F0D4(v11, (uint64_t)v114, v112, 1);
LABEL_62:
  *(void *)uint64_t v3 = v73;
  *uint64_t v14 = 0;
  v14[1] = 0;
  *(unsigned char *)(v3 + 24) = 1;
  uint64_t v11 = v122;
LABEL_63:
  uint64_t v100 = v118;
  sub_100057F2C(v11, (uint64_t)v118, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    uint64_t v101 = *(void *)v100;
    unsigned int v102 = *((_DWORD *)v100 + 2);
    long long v103 = *((_OWORD *)v100 + 5);
    *(_OWORD *)uint64_t v130 = *((_OWORD *)v100 + 6);
    *(_OWORD *)&v130[9] = *(_OWORD *)(v100 + 105);
    long long v104 = *((_OWORD *)v100 + 2);
    long long v126 = *((_OWORD *)v100 + 1);
    long long v127 = v104;
    long long v105 = *((_OWORD *)v100 + 3);
    *(_OWORD *)__uint64_t v129 = *((_OWORD *)v100 + 4);
    *(_OWORD *)&v129[16] = v103;
    long long v128 = v105;
    sub_10004CD7C(v101, v102, (uint64_t)&v126);
    swift_bridgeObjectRelease();
    return sub_100057F94(v11, type metadata accessor for UntaggedResponse);
  }
  else
  {
    sub_100057F94(v11, type metadata accessor for UntaggedResponse);
    return sub_100057F94((uint64_t)v100, type metadata accessor for UntaggedResponse);
  }
}

unint64_t sub_10004C158(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    unint64_t v4 = result;
    uint64_t v5 = (uint64_t)v3;
    switch((result >> 59) & 0x1E | (result >> 2) & 1)
    {
      case 2uLL:
        uint64_t v28 = *(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        char v29 = *(unsigned char *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        uint64_t v30 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
        char v31 = *(unsigned char *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x28);
        long long v32 = v3[3];
        void v45[2] = v3[2];
        v46[0] = v32;
        *(_OWORD *)((char *)v46 + 12) = *(_OWORD *)((char *)v3 + 60);
        long long v33 = v3[1];
        v45[0] = *v3;
        v45[1] = v33;
        swift_retain();
        uint64_t v34 = sub_1000408DC();
        BOOL v35 = sub_100010AAC(v28, v34);
        swift_bridgeObjectRelease();
        if (v35)
        {
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v36 = sub_1005E0EB0();
          os_log_type_t v37 = sub_1005E25A0();
          if (os_log_type_enabled(v36, v37))
          {
            uint64_t v38 = swift_slowAlloc();
            *(_DWORD *)uint64_t v38 = 68158208;
            sub_1005E2960();
            *(_WORD *)(v38 + 8) = 256;
            sub_1005E2960();
            swift_release();
            *(_WORD *)(v38 + 11) = 1024;
            sub_1005E2960();
            _os_log_impl((void *)&_mh_execute_header, v36, v37, "[%.*hhx] Requesting sync with ID that already exists: #%u", (uint8_t *)v38, 0x11u);
            swift_slowDealloc();
          }
          else
          {
            swift_release();
          }
        }
        sub_100048100(v28, v29, v30, v31, 0);
        return sub_100057604(v4, 1);
      case 3uLL:
        uint64_t v17 = *(unsigned int *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        return sub_100048428(v17);
      case 5uLL:
        uint64_t v18 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v19 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        sub_1000575F0(result, 1);
        uint64_t v20 = sub_10003E4FC(v18, v19);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_bridgeObjectRetain_n();
        uint64_t v21 = sub_1005E0EB0();
        os_log_type_t v22 = sub_1005E25C0();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 68158208;
          LODWORD(v45[0]) = 2;
          sub_1005E2960();
          *(_WORD *)(v23 + 8) = 256;
          char v24 = *(unsigned char *)(a3 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          swift_release();
          LOBYTE(v45[0]) = v24;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v23 + 11) = 2048;
          uint64_t v25 = *(void *)(v20 + 16);
          swift_bridgeObjectRelease();
          *(void *)&v45[0] = v25;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%.*hhx] Updating mailbox priorities (%ld).", (uint8_t *)v23, 0x15u);
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRelease();
        uint64_t result = sub_100057604(v4, 1);
        *(void *)(v5 + 40) = v20;
        return result;
      case 6uLL:
        uint64_t v26 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v27 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        sub_1000575F0(result, 1);
        swift_retain();
        sub_100056404(v26, v27, v5, a3);
        swift_release();
        return sub_100057604(v4, 1);
      case 7uLL:
      case 0xBuLL:
      case 0xFuLL:
        unint64_t v7 = (uint64_t *)((result & 0xFFFFFFFFFFFFFFBLL) + 16);
        uint64_t v8 = (uint64_t *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 24);
        goto LABEL_5;
      case 8uLL:
      case 9uLL:
      case 0x10uLL:
        unint64_t v7 = (uint64_t *)swift_projectBox();
        uint64_t v8 = v7 + 1;
LABEL_5:
        uint64_t v9 = *v7;
        uint64_t v10 = *v8;
        swift_bridgeObjectRetain();
        if ((*(unsigned char *)(v5 + 24) & 1) == 0) {
          goto LABEL_10;
        }
        uint64_t v12 = *(void *)(v5 + 8);
        uint64_t v11 = *(void *)(v5 + 16);
        *(void *)&v45[0] = *(void *)v5;
        uint64_t v13 = *(void *)&v45[0];
        sub_1000575F0(v4, 1);
        sub_10005636C(*(uint64_t *)&v45[0], v12, v11, 1);
        sub_1000488BC((unint64_t *)v45, v9, v10, 1, v4);
        goto LABEL_9;
      case 0xCuLL:
      case 0xDuLL:
      case 0x11uLL:
        uint64_t v14 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        unsigned int v15 = *(_DWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        swift_bridgeObjectRetain();
        if (*(unsigned char *)(v5 + 24))
        {
          uint64_t v12 = *(void *)(v5 + 8);
          uint64_t v11 = *(void *)(v5 + 16);
          *(void *)&v45[0] = *(void *)v5;
          uint64_t v13 = *(void *)&v45[0];
          sub_1000575F0(v4, 1);
          sub_10005636C(*(uint64_t *)&v45[0], v12, v11, 1);
          sub_100048CF0((unint64_t *)v45, v14, v15, 1, v4);
LABEL_9:
          sub_10000F0D4(v13, v12, v11, 1);
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v16 = *(void *)&v45[0];
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)uint64_t v5 = v16;
          *(unsigned char *)(v5 + 24) = 1;
        }
        else
        {
LABEL_10:
          uint64_t result = swift_bridgeObjectRelease();
        }
        break;
      case 0x13uLL:
        uint64_t v39 = *(void *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_retain();
        sub_1000575F0(v4, 1);
        swift_retain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_bridgeObjectRetain_n();
        uint64_t v40 = sub_1005E0EB0();
        os_log_type_t v41 = sub_1005E2580();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = swift_slowAlloc();
          *(_DWORD *)uint64_t v42 = 68158208;
          LODWORD(v45[0]) = 2;
          sub_1005E2960();
          *(_WORD *)(v42 + 8) = 256;
          char v43 = *(unsigned char *)(a3 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
          swift_release();
          LOBYTE(v45[0]) = v43;
          sub_1005E2960();
          swift_release();
          *(_WORD *)(v42 + 11) = 2048;
          uint64_t v44 = *(void *)(v39 + 16);
          swift_bridgeObjectRelease();
          *(void *)&v45[0] = v44;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%.*hhx] Setting %ld download requests.", (uint8_t *)v42, 0x15u);
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        sub_100043000(v39, a3);
        return sub_100057604(v4, 1);
      default:
        return result;
    }
  }
  return result;
}

void sub_10004C908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13SelectedStateV7WrappedVMa(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 96))
  {
    uint64_t v7 = *(void *)(a1 + 16);
    int v8 = *(_DWORD *)(a1 + 24);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(void *)(a1 + 96)
         + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
      swift_beginAccess();
      sub_100057F2C(v9, (uint64_t)v6, _s13SelectedStateV7WrappedVMa);
      _s13SelectedStateV8_StorageCMa(0);
      uint64_t v10 = swift_allocObject();
      sub_100057FF4((uint64_t)v6, v10+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
      *(void *)(a1 + 96) = v10;
      swift_release();
    }
    swift_beginAccess();
    type metadata accessor for MailboxSyncState();
    if (sub_10006FE3C())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (*(void *)(a1 + 96))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v11 = *(void *)(a1 + 96)
              + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
          swift_beginAccess();
          sub_100057F2C(v11, (uint64_t)v6, _s13SelectedStateV7WrappedVMa);
          _s13SelectedStateV8_StorageCMa(0);
          uint64_t v12 = swift_allocObject();
          sub_100057FF4((uint64_t)v6, v12+ OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped, _s13SelectedStateV7WrappedVMa);
          *(void *)(a1 + 96) = v12;
          swift_release();
        }
        swift_beginAccess();
        sub_1000935B0(0xCu);
        sub_100019080(&v20, 12);
        swift_endAccess();
      }
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1005E0EB0();
      os_log_type_t v14 = sub_1005E25C0();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 68158467;
        LODWORD(v21) = 2;
        sub_1005E2960();
        *(_WORD *)(v15 + 8) = 256;
        char v16 = *(unsigned char *)(a2 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
        swift_release();
        LOBYTE(v21) = v16;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v15 + 11) = 2160;
        uint64_t v21 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v15 + 21) = 2085;
        uint64_t v21 = v7;
        int v22 = v8;
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1005E1CC0();
        uint64_t v21 = sub_1000C6914(v17, v18, &v20);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%.*hhx] [%{sensitive,mask.mailbox}s] Did mark should temporarily grow window of interest.", (uint8_t *)v15, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_release_n();
      }
    }
  }
}

uint64_t sub_10004CD7C(uint64_t result, unsigned int a2, uint64_t a3)
{
  if (*((unsigned char *)v3 + 24) == 1)
  {
    uint64_t v4 = (void *)*v3;
    uint64_t v5 = *(void *)(*v3 + 16);
    if (v5)
    {
      unint64_t v7 = 0;
      uint64_t v8 = v3[1];
      uint64_t v9 = v3[2];
      while (1)
      {
        uint64_t v10 = (uint64_t)&v4[22 * v7 + 4];
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          uint64_t v11 = *(void *)(v10 + 16);
          uint64_t v12 = *(void *)(v11 + 16);
          if (v12 == *(void *)(result + 16))
          {
            if (v12) {
              BOOL v13 = v11 == result;
            }
            else {
              BOOL v13 = 1;
            }
            if (v13) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v12 == 1) {
                goto LABEL_20;
              }
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v12 == 2) {
                  goto LABEL_20;
                }
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(result + 34)) {
                  break;
                }
              }
            }
          }
        }
LABEL_4:
        if (++v7 == v5) {
          return result;
        }
      }
      os_log_type_t v14 = (unsigned __int8 *)(v11 + 35);
      uint64_t v15 = v12 - 3;
      char v16 = (unsigned __int8 *)(result + 35);
      while (v15)
      {
        int v18 = *v14++;
        int v17 = v18;
        int v19 = *v16++;
        --v15;
        if (v17 != v19) {
          goto LABEL_4;
        }
      }
LABEL_20:
      sub_10005636C(*v3, v3[1], v3[2], 1);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = v4;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100093440(v4);
        uint64_t v20 = (void *)result;
      }
      if (v7 >= v20[2])
      {
        __break(1u);
      }
      else
      {
        sub_10001FDF0(a3 + 48, (uint64_t)v22, &qword_10070A710);
        sub_10001FDF0((uint64_t)v22, (uint64_t)&v23, &qword_10070A710);
        if ((v24 & 1) == 0)
        {
          uint64_t v21 = &v20[22 * v7 + 24];
          if (LOBYTE(v20[22 * v7 + 25]) != 1 || *v21 != v23)
          {
            *uint64_t v21 = v23;
            LOBYTE(v20[22 * v7 + 25]) = 0;
          }
        }
        uint64_t result = sub_10000F0D4((uint64_t)v4, v8, v9, 1);
        *uint64_t v3 = (uint64_t)v20;
        v3[1] = 0;
        v3[2] = 0;
        *((unsigned char *)v3 + 24) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_10004CF6C(uint64_t result)
{
  uint64_t v2 = v1;
  if (v1[24] == 1)
  {
    uint64_t v3 = *(void *)v1;
    uint64_t v4 = v1 + 8;
    uint64_t v5 = *(void *)(*(void *)v1 + 16);
    if (v5)
    {
      uint64_t v6 = result;
      uint64_t v27 = *((void *)v2 + 1);
      uint64_t v26 = *((void *)v2 + 2);
      uint64_t v7 = v3 + 32;
      swift_bridgeObjectRetain();
      unint64_t v8 = 0;
      unint64_t v9 = 0;
      uint64_t v10 = v5 - 1;
      uint64_t v11 = (void *)v3;
      while (1)
      {
        long long v12 = *(_OWORD *)(v7 + v8);
        long long v13 = *(_OWORD *)(v7 + v8 + 32);
        long long v29 = *(_OWORD *)(v7 + v8 + 16);
        long long v30 = v13;
        long long v28 = v12;
        long long v14 = *(_OWORD *)(v7 + v8 + 48);
        long long v15 = *(_OWORD *)(v7 + v8 + 64);
        long long v16 = *(_OWORD *)(v7 + v8 + 96);
        long long v33 = *(_OWORD *)(v7 + v8 + 80);
        long long v34 = v16;
        long long v31 = v14;
        long long v32 = v15;
        long long v17 = *(_OWORD *)(v7 + v8 + 112);
        long long v18 = *(_OWORD *)(v7 + v8 + 128);
        long long v19 = *(_OWORD *)(v7 + v8 + 160);
        long long v37 = *(_OWORD *)(v7 + v8 + 144);
        long long v38 = v19;
        long long v35 = v17;
        long long v36 = v18;
        if (*(void *)(v6 + 16))
        {
          unint64_t v20 = sub_100024264(v29, DWORD2(v29));
          if (v21)
          {
            uint64_t v22 = *(void *)(v6 + 56) + 48 * v20;
            uint64_t v23 = *(void *)(v22 + 16);
            char v24 = *(unsigned char *)(v22 + 24);
            sub_100007780((uint64_t)&v28);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_100093440(v11);
              uint64_t v11 = (void *)result;
            }
            if (v9 >= v11[2])
            {
              __break(1u);
              return result;
            }
            if ((v24 & 1) == 0)
            {
              uint64_t v25 = &v11[v8 / 8];
              if (LOBYTE(v11[v8 / 8 + 25]) != 1 || v25[24] != v23)
              {
                v25[24] = v23;
                *((unsigned char *)v25 + 200) = 0;
              }
            }
            sub_100007820((uint64_t)&v28);
          }
        }
        if (v10 == v9)
        {
          uint64_t result = sub_10000F0D4(v3, v27, v26, 1);
          uint64_t v4 = v2 + 8;
          goto LABEL_18;
        }
        v8 += 176;
        ++v9;
      }
    }
    uint64_t v11 = *(void **)v1;
LABEL_18:
    *(void *)uint64_t v2 = v11;
    void *v4 = 0;
    v4[1] = 0;
    v2[24] = 1;
  }
  return result;
}

uint64_t sub_10004D104(uint64_t result, unsigned int a2, uint64_t a3)
{
  if (*((unsigned char *)v3 + 24) == 1)
  {
    uint64_t v4 = (void *)*v3;
    uint64_t v5 = *(void *)(*v3 + 16);
    if (v5)
    {
      unint64_t v7 = 0;
      uint64_t v8 = v3[1];
      uint64_t v9 = v3[2];
      while (1)
      {
        uint64_t v10 = (uint64_t)&v4[22 * v7 + 4];
        if ((*(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32)) == (a2 | ((unint64_t)a2 << 32)))
        {
          uint64_t v11 = *(void *)(v10 + 16);
          uint64_t v12 = *(void *)(v11 + 16);
          if (v12 == *(void *)(result + 16))
          {
            if (v12) {
              BOOL v13 = v11 == result;
            }
            else {
              BOOL v13 = 1;
            }
            if (v13) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(result + 32))
            {
              if (v12 == 1) {
                goto LABEL_20;
              }
              if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(result + 33))
              {
                if (v12 == 2) {
                  goto LABEL_20;
                }
                if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(result + 34)) {
                  break;
                }
              }
            }
          }
        }
LABEL_4:
        if (++v7 == v5) {
          return result;
        }
      }
      long long v14 = (unsigned __int8 *)(v11 + 35);
      uint64_t v15 = v12 - 3;
      long long v16 = (unsigned __int8 *)(result + 35);
      while (v15)
      {
        int v18 = *v14++;
        int v17 = v18;
        int v19 = *v16++;
        --v15;
        if (v17 != v19) {
          goto LABEL_4;
        }
      }
LABEL_20:
      sub_10005636C(*v3, v3[1], v3[2], 1);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v20 = v4;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100093440(v4);
        unint64_t v20 = (void *)result;
      }
      if (v7 >= v20[2])
      {
        __break(1u);
      }
      else
      {
        sub_10001FDF0(a3 + 16, (uint64_t)v22, &qword_10070A710);
        sub_10001FDF0((uint64_t)v22, (uint64_t)&v23, &qword_10070A710);
        if ((v24 & 1) == 0)
        {
          char v21 = &v20[22 * v7 + 24];
          if (LOBYTE(v20[22 * v7 + 25]) != 1 || *v21 != v23)
          {
            *char v21 = v23;
            LOBYTE(v20[22 * v7 + 25]) = 0;
          }
        }
        uint64_t result = sub_10000F0D4((uint64_t)v4, v8, v9, 1);
        *uint64_t v3 = (uint64_t)v20;
        v3[1] = 0;
        v3[2] = 0;
        *((unsigned char *)v3 + 24) = 1;
      }
    }
  }
  return result;
}

void *sub_10004D2F4()
{
  if (*(unsigned char *)(v0 + 24) != 1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v13 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  uint64_t v3 = (unsigned char *)(v1 + 200);
  uint64_t v4 = _swiftEmptyArrayStorage;
  do
  {
    if (!*v3)
    {
      uint64_t v6 = *((void *)v3 - 21);
      uint64_t v7 = *((void *)v3 - 20);
      uint64_t v8 = *((void *)v3 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_100016E88(0, v4[2] + 1, 1, v4);
      }
      unint64_t v10 = v4[2];
      unint64_t v9 = v4[3];
      if (v10 >= v9 >> 1) {
        uint64_t v4 = sub_100016E88((void *)(v9 > 1), v10 + 1, 1, v4);
      }
      v4[2] = v10 + 1;
      uint64_t v5 = &v4[3 * v10];
      v5[4] = v6;
      v5[5] = v7;
      v5[6] = v8;
    }
    v3 += 176;
    --v2;
  }
  while (v2);
  sub_10000F0D4(v1, v13, v12, 1);
  return v4;
}

void sub_10004D428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0D40();
  __int16 v46 = *(void (***)(char *, char *, uint64_t))(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  BOOL v49 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v45 - v7;
  uint64_t v9 = sub_1005E0D80();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (id)*tracingLog.unsafeMutableAddressor();
  char v14 = sub_1005E28A0();

  if (v14)
  {
    int v48 = v12;
    uint64_t v15 = sub_10004D8DC(a2);
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v15 + 16);
    if (v18)
    {
      uint64_t v19 = v10;
      uint64_t v20 = v9;
      swift_bridgeObjectRetain();
      uint64_t v21 = 32;
      do
      {
        long long v22 = *(_OWORD *)(v15 + v21);
        long long v23 = *(_OWORD *)(v15 + v21 + 32);
        v56[1] = *(_OWORD *)(v15 + v21 + 16);
        v56[2] = v23;
        v56[0] = v22;
        long long v24 = *(_OWORD *)(v15 + v21 + 48);
        long long v25 = *(_OWORD *)(v15 + v21 + 64);
        long long v26 = *(_OWORD *)(v15 + v21 + 96);
        v56[5] = *(_OWORD *)(v15 + v21 + 80);
        v56[6] = v26;
        v56[3] = v24;
        v56[4] = v25;
        long long v27 = *(_OWORD *)(v15 + v21 + 112);
        long long v28 = *(_OWORD *)(v15 + v21 + 128);
        long long v29 = *(_OWORD *)(v15 + v21 + 160);
        v56[9] = *(_OWORD *)(v15 + v21 + 144);
        v56[10] = v29;
        v56[7] = v27;
        v56[8] = v28;
        sub_100007780((uint64_t)v56);
        sub_1000297AC(a1);
        sub_100007820((uint64_t)v56);
        v21 += 176;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      uint64_t v9 = v20;
      uint64_t v10 = v19;
    }
    uint64_t v55 = *(void *)(v17 + 16);
    if (v55)
    {
      v45[1] = v15;
      swift_bridgeObjectRetain();
      uint64_t v53 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v30 = 0;
      long long v32 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
      uint64_t v31 = v10 + 16;
      unint64_t v52 = v32;
      unint64_t v51 = (void (**)(char *, uint64_t))(v46 + 1);
      BOOL v50 = (void (**)(char *, uint64_t))(v31 - 8);
      v46 += 2;
      long long v33 = v48;
      uint64_t v47 = v31;
      uint64_t v54 = v17;
      do
      {
        int v42 = *(_DWORD *)(v17 + 4 * v30 + 32);
        v52(v33, v53, v9);
        OSSignpostID.init(engine:kind:idA:idB:)(a1, 5, v42, 0);
        char v43 = sub_1005E0D70();
        os_signpost_type_t v44 = sub_1005E26F0();
        if (sub_1005E28A0())
        {
          long long v34 = v49;
          (*v46)(v49, v8, v4);
          uint64_t v35 = v9;
          long long v36 = v8;
          uint64_t v37 = v4;
          uint64_t v38 = a1;
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v39 = 0;
          os_signpost_id_t v40 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v43, v44, v40, "LocalMailboxRemoved", "", v39, 2u);
          a1 = v38;
          uint64_t v4 = v37;
          uint64_t v8 = v36;
          uint64_t v9 = v35;
          long long v33 = v48;
          swift_slowDealloc();

          os_log_type_t v41 = *v51;
          (*v51)(v8, v4);
          (*v50)(v33, v9);
          v41(v34, v4);
        }
        else
        {

          (*v51)(v8, v4);
          (*v50)(v33, v9);
        }
        ++v30;
        uint64_t v17 = v54;
      }
      while (v55 != v30);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10004D8DC(uint64_t a1)
{
  uint64_t v2 = _swiftEmptyArrayStorage;
  v14[0] = _swiftEmptyArrayStorage;
  v14[1] = _swiftEmptyArrayStorage;
  if (*(unsigned char *)(a1 + 24) == 1)
  {
    uint64_t v2 = *(void **)a1;
    swift_bridgeObjectRetain();
  }
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    uint64_t v3 = *(void **)v1;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  KeyPath = (void *)swift_getKeyPath();
  uint64_t v5 = __chkstk_darwin(KeyPath);
  v13[2] = (void (*)(char *, void))v14;
  uint64_t v6 = __chkstk_darwin(v5);
  void v12[2] = v7;
  __chkstk_darwin(v6);
  v11[2] = v8;
  uint64_t v9 = (void (**)(char *, void))sub_10002AF94();
  Array.findAppendOnlyDiff<A>(from:id:added:removed:update:)((uint64_t)v2, KeyPath, (void (**)(char *, void))sub_1000563B4, v13, (void (*)(char *))sub_1000563BC, v12, (void (*)(char *, char *))sub_1000563C4, (uint64_t)v11, (uint64_t)v3, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14[0];
}

__n128 sub_10004DA64(__n128 *a1, void **a2)
{
  __n128 v3 = a1[9];
  __n128 v29 = a1[8];
  __n128 v30 = v3;
  __n128 v31 = a1[10];
  __n128 v4 = a1[5];
  __n128 v25 = a1[4];
  __n128 v26 = v4;
  __n128 v5 = a1[7];
  __n128 v27 = a1[6];
  __n128 v28 = v5;
  __n128 v6 = a1[1];
  __n128 v21 = *a1;
  __n128 v22 = v6;
  __n128 v7 = a1[3];
  __n128 v23 = a1[2];
  __n128 v24 = v7;
  uint64_t v8 = *a2;
  sub_100007780((uint64_t)&v21);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_100016C38(0, v8[2] + 1, 1, v8);
    *a2 = v8;
  }
  unint64_t v11 = v8[2];
  unint64_t v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    uint64_t v8 = sub_100016C38((void *)(v10 > 1), v11 + 1, 1, v8);
    *a2 = v8;
  }
  long long v8[2] = v11 + 1;
  uint64_t v12 = (__n128 *)&v8[22 * v11];
  __n128 v13 = v21;
  __n128 v14 = v23;
  v12[3] = v22;
  v12[4] = v14;
  void v12[2] = v13;
  __n128 v15 = v24;
  __n128 v16 = v25;
  __n128 v17 = v27;
  v12[7] = v26;
  v12[8] = v17;
  v12[5] = v15;
  v12[6] = v16;
  __n128 result = v28;
  __n128 v19 = v29;
  __n128 v20 = v31;
  v12[11] = v30;
  v12[12] = v20;
  v12[9] = result;
  v12[10] = v19;
  return result;
}

uint64_t sub_10004DB74(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 172);
  __n128 v4 = *(void **)(a2 + 8);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 8) = v4;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100016FB0(0, v4[2] + 1, 1, v4);
    __n128 v4 = (void *)result;
    *(void *)(a2 + 8) = result;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t result = (uint64_t)sub_100016FB0((void *)(v6 > 1), v7 + 1, 1, v4);
    __n128 v4 = (void *)result;
  }
  v4[2] = v7 + 1;
  *((_DWORD *)v4 + v7 + 8) = v3;
  *(void *)(a2 + 8) = v4;
  return result;
}

__n128 sub_10004DC20(_OWORD *a1, __n128 *a2, void **a3)
{
  long long v4 = a1[9];
  v27[8] = a1[8];
  v27[9] = v4;
  v27[10] = a1[10];
  long long v5 = a1[5];
  v27[4] = a1[4];
  v27[5] = v5;
  long long v6 = a1[7];
  v27[6] = a1[6];
  v27[7] = v6;
  long long v7 = a1[1];
  v27[0] = *a1;
  v27[1] = v7;
  long long v8 = a1[3];
  v27[2] = a1[2];
  v27[3] = v8;
  __n128 v9 = a2[9];
  __n128 v36 = a2[8];
  __n128 v37 = v9;
  __n128 v38 = a2[10];
  __n128 v10 = a2[5];
  __n128 v32 = a2[4];
  __n128 v33 = v10;
  __n128 v11 = a2[7];
  __n128 v34 = a2[6];
  __n128 v35 = v11;
  __n128 v12 = a2[1];
  __n128 v28 = *a2;
  __n128 v29 = v12;
  __n128 v13 = a2[3];
  __n128 v30 = a2[2];
  __n128 v31 = v13;
  if (!sub_100029F48((uint64_t)v27, (uint64_t)&v28))
  {
    __n128 v15 = *a3;
    sub_100007780((uint64_t)&v28);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      __n128 v15 = sub_100016C38(0, v15[2] + 1, 1, v15);
      *a3 = v15;
    }
    unint64_t v18 = v15[2];
    unint64_t v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      __n128 v15 = sub_100016C38((void *)(v17 > 1), v18 + 1, 1, v15);
      *a3 = v15;
    }
    void v15[2] = v18 + 1;
    __n128 v19 = (__n128 *)&v15[22 * v18];
    __n128 v20 = v28;
    __n128 v21 = v30;
    v19[3] = v29;
    v19[4] = v21;
    long long v19[2] = v20;
    __n128 v22 = v31;
    __n128 v23 = v32;
    __n128 v24 = v34;
    v19[7] = v33;
    v19[8] = v24;
    v19[5] = v22;
    void v19[6] = v23;
    __n128 result = v35;
    __n128 v25 = v36;
    __n128 v26 = v38;
    v19[11] = v37;
    v19[12] = v26;
    v19[9] = result;
    v19[10] = v25;
  }
  return result;
}

void sub_10004DD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  long long v5 = sub_1005E0EB0();
  os_log_type_t v6 = sub_1005E25A0();
  uint64_t v49 = a1;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 68158208;
    LODWORD(v56[0]) = 2;
    sub_1005E2960();
    *(_WORD *)(v7 + 8) = 256;
    char v8 = *(unsigned char *)(a3 + OBJC_IVAR____TtCV13IMAP2Behavior5State6Logger_id);
    swift_release();
    LOBYTE(v56[0]) = v8;
    sub_1005E2960();
    swift_release();
    *(_WORD *)(v7 + 11) = 2048;
    uint64_t v9 = *(void *)(a1 + 16);
    swift_bridgeObjectRelease();
    *(void *)&v56[0] = v9;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%.*hhx] Persistence passed list of %ld mailboxes with duplicate names/IDs.", (uint8_t *)v7, 0x15u);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = a3;
  uint64_t v11 = a2;
  uint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    uint64_t v14 = 32;
    uint64_t v47 = a3;
    while (1)
    {
      long long v15 = *(_OWORD *)(v11 + v14 + 48);
      v56[2] = *(_OWORD *)(v11 + v14 + 32);
      v56[3] = v15;
      v57[0] = *(_OWORD *)(v11 + v14 + 64);
      *(_OWORD *)((char *)v57 + 9) = *(_OWORD *)(v11 + v14 + 73);
      long long v16 = *(_OWORD *)(v11 + v14 + 16);
      v56[0] = *(_OWORD *)(v11 + v14);
      v56[1] = v16;
      long long v17 = v56[0];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_100057150((uint64_t)v56);
      uint64_t v19 = sub_100055A60(a1, v17, *((uint64_t *)&v17 + 1), v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v19 + 16) <= 1uLL) {
        break;
      }
      uint64_t v53 = v14;
      uint64_t v54 = v13;
      uint64_t v52 = v12;
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = v10;
      __n128 v21 = sub_1005E0EB0();
      os_log_type_t type = sub_1005E25A0();
      if (os_log_type_enabled(v21, type))
      {
        uint64_t v22 = swift_slowAlloc();
        v55[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 68159491;
        sub_1005E2960();
        *(_WORD *)(v22 + 8) = 256;
        swift_release();
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v22 + 11) = 2048;
        swift_bridgeObjectRelease();
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 21) = 2080;
        uint64_t v23 = swift_bridgeObjectRetain();
        uint64_t v24 = OpaqueMailboxID.description.getter(v23);
        unint64_t v26 = v25;
        swift_bridgeObjectRelease();
        sub_1000C6914(v24, v26, v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 31) = 2160;
        sub_1005E2960();
        *(_WORD *)(v22 + 41) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_1005E1CC0();
        sub_1000C6914(v27, v28, v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 51) = 2160;
        sub_1005E2960();
        *(_WORD *)(v22 + 61) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1005E1CC0();
        sub_1000C6914(v29, v30, v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v21, type, "[%.*hhx] Persistence passed %ld copies of mailbox with ID %s \"%{sensitive,mask.mailbox}s\" - \"%{sensitive,mask.mailbox}s\".", (uint8_t *)v22, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        a1 = v49;
        swift_slowDealloc();

        uint64_t v10 = v47;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        swift_release_n();
        swift_bridgeObjectRelease_n();
        uint64_t v10 = v20;
      }
      uint64_t v13 = v54;
      swift_bridgeObjectRetain();
      sub_100057150((uint64_t)v56);
      uint64_t v32 = sub_100055CF4(a1, (uint64_t)v56, v31);
      sub_1000571A4((uint64_t)v56);
      swift_bridgeObjectRelease();
      if (*(void *)(v32 + 16) < 2uLL) {
        goto LABEL_7;
      }
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100057150((uint64_t)v56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v33 = v10;
      __n128 v34 = sub_1005E0EB0();
      os_log_type_t v35 = sub_1005E25A0();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        v55[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 68159235;
        sub_1005E2960();
        *(_WORD *)(v36 + 8) = 256;
        swift_release();
        os_log_type_t v48 = v35;
        uint64_t v11 = a2;
        sub_1005E2960();
        swift_release();
        *(_WORD *)(v36 + 11) = 2048;
        swift_bridgeObjectRelease();
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 21) = 2160;
        sub_1005E2960();
        *(_WORD *)(v36 + 31) = 2085;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_1005E1CC0();
        sub_1000C6914(v37, v38, v55);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000571A4((uint64_t)v56);
        sub_1000571A4((uint64_t)v56);
        *(_WORD *)(v36 + 41) = 2080;
        uint64_t v39 = swift_bridgeObjectRetain();
        uint64_t v40 = OpaqueMailboxID.description.getter(v39);
        unint64_t v42 = v41;
        swift_bridgeObjectRelease();
        sub_1000C6914(v40, v42, v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 51) = 2080;
        uint64_t v43 = swift_bridgeObjectRetain();
        uint64_t v44 = OpaqueMailboxID.description.getter(v43);
        unint64_t v46 = v45;
        swift_bridgeObjectRelease();
        sub_1000C6914(v44, v46, v55);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, v48, "[%.*hhx] Persistence passed %ld copies of mailbox with name \"%{sensitive,mask.mailbox}s\" %s - %s.", (uint8_t *)v36, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v12 = v52;
        swift_slowDealloc();

        uint64_t v10 = v33;
        a1 = v49;
        uint64_t v14 = v53;
        uint64_t v13 = v54;
        goto LABEL_9;
      }

      swift_release_n();
      swift_bridgeObjectRelease_n();
      sub_1000571A4((uint64_t)v56);
      sub_1000571A4((uint64_t)v56);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v10 = v33;
      a1 = v49;
      uint64_t v14 = v53;
      uint64_t v13 = v54;
LABEL_8:
      uint64_t v11 = a2;
LABEL_9:
      v14 += 96;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1000571A4((uint64_t)v56);
    goto LABEL_8;
  }
}

uint64_t sub_10004E7BC(uint64_t (*a1)(unint64_t))
{
  int v3 = v1;
  uint64_t v5 = _s19UserInitiatedSearchVMa(0) - 8;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v33 = (uint64_t)&v30 - v9;
  __chkstk_darwin(v8);
  uint64_t v35 = (uint64_t)&v30 - v11;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    unint64_t v30 = v1;
    uint64_t v32 = v15;
    while (v21 < v19)
    {
      uint64_t v22 = v3;
      uint64_t v36 = v20;
      uint64_t v23 = v35;
      sub_100057F2C(v12 + v20, v35, _s19UserInitiatedSearchVMa);
      char v24 = a1(v23);
      uint64_t result = sub_100057F94(v23, _s19UserInitiatedSearchVMa);
      if (v24)
      {
        int v3 = v22;
        uint64_t v25 = v32;
      }
      else
      {
        int v3 = v22;
        uint64_t v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v26 = *v3;
          unint64_t v27 = *(void *)(*v3 + 16);
          if (v16 >= v27) {
            goto LABEL_33;
          }
          uint64_t result = sub_100057F2C(v26 + v31 + v16 * v32, v33, _s19UserInitiatedSearchVMa);
          if (v21 >= v27) {
            goto LABEL_34;
          }
          sub_100057F2C(v26 + v36, v34, _s19UserInitiatedSearchVMa);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          int v3 = v30;
          *unint64_t v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1000933DC(v26);
            unint64_t v26 = result;
            *int v3 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1000573C4(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1000573C4(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v3;
      unint64_t v19 = *(void *)(*v3 + 16);
      ++v21;
      uint64_t v20 = v36 + v25;
      if (v29 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004EB40(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A770);
  char v42 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    uint64_t v23 = v40;
    unint64_t v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = v40[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          int v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = v40[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    long long v30 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 24 * v21;
    int v32 = *(_DWORD *)v31;
    uint64_t v33 = *(void *)(v31 + 8);
    char v34 = *(unsigned char *)(v31 + 16);
    char v35 = *(unsigned char *)(v31 + 17);
    long long v43 = v30;
    unint64_t v36 = *((void *)&v30 + 1);
    if ((v42 & 1) == 0) {
      sub_100008D24(v30, *((unint64_t *)&v30 + 1));
    }
    sub_1005E33F0();
    sub_100008D24(v43, v36);
    sub_1005E08B0();
    sub_1000094D4(v43, v36);
    uint64_t result = sub_1005E3470();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      long long v18 = v43;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      long long v18 = v43;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v18;
    uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
    *(_DWORD *)uint64_t v19 = v32;
    *(void *)(v19 + 8) = v33;
    *(unsigned char *)(v19 + 16) = v34;
    *(unsigned char *)(v19 + 17) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int v3 = v38;
  uint64_t v23 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}

uint64_t sub_10004EEB0(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A678);
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v8 = 0;
    char v35 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v34) {
          goto LABEL_31;
        }
        unint64_t v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v34) {
            goto LABEL_31;
          }
          unint64_t v18 = v35[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_38;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v35 = -1 << v32;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v34) {
                  goto LABEL_31;
                }
                unint64_t v18 = v35[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 56) + 16 * v16;
      Swift::UInt32 v21 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v16);
      char v22 = *(unsigned char *)(v20 + 9);
      char v23 = *(unsigned char *)(v20 + 8);
      uint64_t v24 = *(void *)v20;
      sub_1005E33F0();
      sub_1005E3440(v21);
      uint64_t result = sub_1005E3470();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v13) = v21;
      uint64_t v14 = *(void *)(v7 + 56) + 16 * v13;
      *(void *)uint64_t v14 = v24;
      *(unsigned char *)(v14 + 8) = v23;
      *(unsigned char *)(v14 + 9) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *int v3 = v7;
  return result;
}

uint64_t sub_10004F198(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A720);
  char v34 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      unint64_t v27 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v19);
      uint64_t v29 = *v27;
      Swift::UInt v28 = v27[1];
      __int16 v30 = *(_WORD *)(*(void *)(v5 + 56) + 2 * v19);
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v28);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      int64_t v17 = (void *)(*(void *)(v7 + 48) + 16 * v16);
      *int64_t v17 = v29;
      v17[1] = v28;
      *(_WORD *)(*(void *)(v7 + 56) + 2 * v16) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_10004F480(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A690);
  char v39 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v38 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v8 << 6);
      }
      else
      {
        int64_t v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v8;
        if (!v23)
        {
          int64_t v8 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v8];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v38 = -1 << v36;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v8 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v8];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      uint64_t v29 = 16 * v21;
      __int16 v30 = (uint64_t *)(*(void *)(v5 + 48) + v29);
      uint64_t v32 = *v30;
      Swift::UInt v31 = v30[1];
      uint64_t v33 = *(void *)(v5 + 56) + v29;
      uint64_t v34 = *(void *)v33;
      int v35 = *(_DWORD *)(v33 + 8);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v31);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v15 == v26;
          if (v15 == v26) {
            unint64_t v15 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v15);
        }
        while (v28 == -1);
        unint64_t v16 = __clz(__rbit64(~v28)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 16 * v16;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + v17);
      *unint64_t v18 = v32;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + v17;
      *(void *)uint64_t v19 = v34;
      *(_DWORD *)(v19 + 8) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_10004F788(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_10000566C(&qword_10070A740);
  char v33 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v32 = (void *)(v4 + 64);
    uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 64);
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = result + 64;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v18 = v17 | (v7 << 6);
      }
      else
      {
        int64_t v19 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v4 + 64;
        if (v19 >= v31) {
          goto LABEL_33;
        }
        unint64_t v20 = v32[v19];
        ++v7;
        if (!v20)
        {
          int64_t v7 = v19 + 1;
          if (v19 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v20 = v32[v7];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v31)
            {
LABEL_33:
              if (v33)
              {
                uint64_t v30 = 1 << *(unsigned char *)(v4 + 32);
                if (v30 >= 64) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v30;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v32[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v7 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v7 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v20 = v32[v7];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v7 = v21;
          }
        }
LABEL_30:
        unint64_t v10 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v7 << 6);
      }
      unint64_t v26 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v18);
      uint64_t v28 = *v26;
      Swift::UInt v27 = v26[1];
      uint64_t v29 = *(void *)(*(void *)(v4 + 56) + 8 * v18);
      if ((v33 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v13 = result & ~v12;
      unint64_t v14 = v13 >> 6;
      if (((-1 << v13) & ~*(void *)(v11 + 8 * (v13 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v11 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v12) >> 6;
        do
        {
          if (++v14 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v24 = v14 == v23;
          if (v14 == v23) {
            unint64_t v14 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v14);
        }
        while (v25 == -1);
        unint64_t v15 = __clz(__rbit64(~v25)) + (v14 << 6);
      }
      *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      unint64_t v16 = (void *)(*(void *)(v6 + 48) + 16 * v15);
      *unint64_t v16 = v28;
      v16[1] = v27;
      *(void *)(*(void *)(v6 + 56) + 8 * v15) = v29;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_10004FA78(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A680);
  char v39 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v37 = (void *)(v5 + 64);
    uint64_t v38 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
              if (v35 >= 64) {
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v37 = -1 << v35;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v11 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
      uint64_t v30 = *v28;
      Swift::UInt v29 = v28[1];
      uint64_t v31 = *(void *)(v5 + 56) + 32 * v20;
      uint64_t v32 = *(void *)v31;
      int v33 = *(_DWORD *)(v31 + 8);
      uint64_t v34 = *(void *)(v31 + 16);
      int v40 = *(_DWORD *)(v31 + 24);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v29);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v15 == v25;
          if (v15 == v25) {
            unint64_t v15 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        unint64_t v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      unint64_t v17 = (void *)(*(void *)(v7 + 48) + 16 * v16);
      *unint64_t v17 = v30;
      v17[1] = v29;
      uint64_t v18 = *(void *)(v7 + 56) + 32 * v16;
      *(void *)uint64_t v18 = v32;
      *(_DWORD *)(v18 + 8) = v33;
      *(void *)(v18 + 16) = v34;
      *(_DWORD *)(v18 + 24) = v40;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v38;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_10004FDA0(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A6B8);
  char v41 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v8 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v9 = 0;
    char v39 = (void *)(v5 + 64);
    uint64_t v40 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v22 >= v38) {
          goto LABEL_33;
        }
        unint64_t v23 = v39[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v23 = v39[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
              if (v37 >= 64) {
                bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v39 = -1 << v37;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v23 = v39[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v12 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = *(void *)(v5 + 56);
      uint64_t v30 = *(void *)(v5 + 48) + 16 * v21;
      uint64_t v31 = *(void *)v30;
      uint64_t v32 = *(unsigned int *)(v30 + 8);
      int v33 = (uint64_t *)(v29 + 96 * v21);
      uint64_t v34 = *v33;
      uint64_t v50 = v33[1];
      uint64_t v35 = v33[2];
      int v48 = *((_DWORD *)v33 + 8);
      int v49 = *((_DWORD *)v33 + 6);
      char v47 = *((unsigned char *)v33 + 36);
      uint64_t v46 = v33[5];
      char v45 = *((unsigned char *)v33 + 48);
      uint64_t v44 = v33[7];
      unint64_t v36 = v33[9];
      *(void *)&long long v7 = v33[10];
      long long v51 = v7;
      char v42 = *((unsigned char *)v33 + 88);
      char v43 = *((unsigned char *)v33 + 64);
      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100007810(v36);
      }
      sub_1005E33F0();
      sub_1005E3410(v32 | (v32 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v8 + 48) + 16 * v17;
      *(void *)uint64_t v18 = v31;
      *(_DWORD *)(v18 + 8) = v32;
      uint64_t v19 = *(void *)(v8 + 56) + 96 * v17;
      *(void *)uint64_t v19 = v34;
      *(void *)(v19 + 8) = v50;
      *(void *)(v19 + 16) = v35;
      *(_DWORD *)(v19 + 24) = v49;
      *(_DWORD *)(v19 + 32) = v48;
      *(unsigned char *)(v19 + 36) = v47;
      *(void *)(v19 + 40) = v46;
      *(unsigned char *)(v19 + 48) = v45;
      *(void *)(v19 + 56) = v44;
      *(unsigned char *)(v19 + 64) = v43;
      *(void *)(v19 + 72) = v36;
      *((void *)&v7 + 1) = *((void *)&v51 + 1);
      *(void *)(v19 + 80) = v51;
      *(unsigned char *)(v19 + 88) = v42;
      ++*(void *)(v8 + 16);
      uint64_t v5 = v40;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v8;
  return result;
}

uint64_t sub_100050168(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A6B0);
  char v35 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v34 = -1 << v32;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      char v29 = *(unsigned char *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      char v31 = *(unsigned char *)(v28 + 16);
      if ((v35 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3440(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(unsigned char *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(unsigned char *)(v17 + 16) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_10005046C(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A768);
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    int64_t v8 = 0;
    unint64_t v36 = (void *)(v5 + 64);
    uint64_t v37 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v17 >= v35) {
          goto LABEL_31;
        }
        unint64_t v18 = v36[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v35) {
            goto LABEL_31;
          }
          unint64_t v18 = v36[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v35)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_38;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v36 = -1 << v33;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v36[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v35) {
                  goto LABEL_31;
                }
                unint64_t v18 = v36[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      Swift::UInt32 v20 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v16);
      uint64_t v21 = *(void *)(v5 + 56) + 24 * v16;
      char v22 = *(unsigned char *)(v21 + 17);
      char v23 = *(unsigned char *)(v21 + 16);
      uint64_t v24 = *(void *)(v21 + 8);
      int v25 = *(_DWORD *)v21;
      sub_1005E33F0();
      sub_1005E3440(v20);
      uint64_t result = sub_1005E3470();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v13 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v13) = v20;
      uint64_t v14 = *(void *)(v7 + 56) + 24 * v13;
      *(_DWORD *)uint64_t v14 = v25;
      *(void *)(v14 + 8) = v24;
      *(unsigned char *)(v14 + 16) = v23;
      *(unsigned char *)(v14 + 17) = v22;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v37;
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *int v3 = v7;
  return result;
}

uint64_t sub_100050768(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A718);
  char v40 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v38 = (void *)(v5 + 64);
    uint64_t v39 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_33;
        }
        unint64_t v22 = v38[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v22 = v38[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v38 = -1 << v36;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v22 = v38[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v11 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(v5 + 56);
      uint64_t v29 = *(void *)(v5 + 48) + 16 * v20;
      uint64_t v30 = *(void *)v29;
      uint64_t v31 = *(unsigned int *)(v29 + 8);
      uint64_t v32 = (uint64_t *)(v28 + 72 * v20);
      uint64_t v33 = *v32;
      int v34 = *((_DWORD *)v32 + 2);
      char v35 = *((unsigned char *)v32 + 12);
      char v44 = *((unsigned char *)v32 + 16);
      __int16 v45 = *((_WORD *)v32 + 7);
      long long v46 = *(_OWORD *)(v32 + 5);
      long long v47 = *(_OWORD *)(v32 + 3);
      uint64_t v43 = v32[7];
      char v41 = *((unsigned char *)v32 + 65);
      char v42 = *((unsigned char *)v32 + 64);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v31 | (v31 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v15 == v25;
          if (v15 == v25) {
            unint64_t v15 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        unint64_t v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = *(void *)(v7 + 48) + 16 * v16;
      *(void *)uint64_t v17 = v30;
      *(_DWORD *)(v17 + 8) = v31;
      uint64_t v18 = *(void *)(v7 + 56) + 72 * v16;
      *(void *)uint64_t v18 = v33;
      *(_DWORD *)(v18 + 8) = v34;
      *(unsigned char *)(v18 + 12) = v35;
      *(_WORD *)(v18 + 14) = v45;
      *(unsigned char *)(v18 + 16) = v44;
      *(_OWORD *)(v18 + 24) = v47;
      *(_OWORD *)(v18 + 40) = v46;
      *(void *)(v18 + 56) = v43;
      *(unsigned char *)(v18 + 64) = v42;
      *(unsigned char *)(v18 + 65) = v41;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v39;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100050AEC(uint64_t a1, char a2)
{
  return sub_100050AF8(a1, a2, &qword_10070A688);
}

uint64_t sub_100050AF8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10000566C(a3);
  char v35 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    int v34 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v9 << 6);
      }
      else
      {
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v34[v21];
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v34[v9];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v6 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int v34 = -1 << v32;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v22 = v34[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v9 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v34[v9];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      uint64_t v28 = *(void *)(v6 + 48) + 16 * v20;
      uint64_t v29 = *(void *)v28;
      uint64_t v30 = *(unsigned int *)(v28 + 8);
      char v31 = *(unsigned char *)(*(void *)(v6 + 56) + v20);
      if ((v35 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v30 | (v30 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v8 + 48) + 16 * v17;
      *(void *)uint64_t v18 = v29;
      *(_DWORD *)(v18 + 8) = v30;
      *(unsigned char *)(*(void *)(v8 + 56) + v17) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_100050DE0(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A6A8);
  char v40 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v38 = (void *)(v5 + 64);
    uint64_t v39 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v21 >= v37) {
          goto LABEL_33;
        }
        unint64_t v22 = v38[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v22 = v38[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v38 = -1 << v36;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v22 = v38[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v11 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(v5 + 48) + 16 * v20;
      uint64_t v29 = *(void *)v28;
      uint64_t v30 = *(unsigned int *)(v28 + 8);
      uint64_t v31 = *(void *)(v5 + 56) + 48 * v20;
      uint64_t v32 = *(void *)v31;
      uint64_t v33 = *(void *)(v31 + 8);
      uint64_t v42 = *(void *)(v31 + 16);
      char v34 = *(unsigned char *)(v31 + 24);
      uint64_t v35 = *(void *)(v31 + 32);
      char v41 = *(unsigned char *)(v31 + 40);
      if ((v40 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v30 | (v30 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v15 == v25;
          if (v15 == v25) {
            unint64_t v15 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        unint64_t v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = *(void *)(v7 + 48) + 16 * v16;
      *(void *)uint64_t v17 = v29;
      *(_DWORD *)(v17 + 8) = v30;
      uint64_t v18 = *(void *)(v7 + 56) + 48 * v16;
      *(void *)uint64_t v18 = v32;
      *(void *)(v18 + 8) = v33;
      *(void *)(v18 + 16) = v42;
      *(unsigned char *)(v18 + 24) = v34;
      *(void *)(v18 + 32) = v35;
      *(unsigned char *)(v18 + 40) = v41;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v39;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100051124(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A708);
  char v34 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(v5 + 48) + 16 * v19;
      uint64_t v28 = *(void *)v27;
      uint64_t v29 = *(unsigned int *)(v27 + 8);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v29 | (v29 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = *(void *)(v7 + 48) + 16 * v16;
      *(void *)uint64_t v17 = v28;
      *(_DWORD *)(v17 + 8) = v29;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100051410(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A700);
  char v37 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v35 = (void *)(v5 + 64);
    uint64_t v36 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v35;
        if (v20 >= v34) {
          goto LABEL_33;
        }
        unint64_t v21 = v35[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v21 = v35[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v34)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v35 = -1 << v33;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v35[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v21 = v35[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 32 * v19;
      char v29 = *(unsigned char *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      char v31 = *(unsigned char *)(v28 + 16);
      uint64_t v32 = *(void *)(v28 + 24);
      if ((v37 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3440(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 32 * v16;
      *(unsigned char *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(unsigned char *)(v17 + 16) = v31;
      *(void *)(v17 + 24) = v32;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v36;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100051718(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A738);
  char v37 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          int v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1005E33F0();
    sub_1005E1DB0();
    uint64_t result = sub_1005E3470();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}

uint64_t sub_100051A24(uint64_t a1, char a2)
{
  return sub_100051A3C(a1, a2, &qword_10070A730);
}

uint64_t sub_100051A30(uint64_t a1, char a2)
{
  return sub_100051A3C(a1, a2, &qword_10070A728);
}

uint64_t sub_100051A3C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10000566C(a3);
  char v37 = a2;
  uint64_t v7 = sub_1005E2FE0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1005E33F0();
    sub_1005E1DB0();
    uint64_t result = sub_1005E3470();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_100051D50(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A670);
  char v39 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v37 = (void *)(v5 + 64);
    uint64_t v38 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
              if (v35 >= 64) {
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v37 = -1 << v35;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v11 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      BOOL v28 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
      uint64_t v30 = *v28;
      Swift::UInt v29 = v28[1];
      uint64_t v31 = *(void *)(v5 + 56) + 24 * v20;
      int v32 = *(_DWORD *)v31;
      char v33 = *(unsigned char *)(v31 + 4);
      uint64_t v34 = *(void *)(v31 + 8);
      char v40 = *(unsigned char *)(v31 + 16);
      if ((v39 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v29);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v15 == v25;
          if (v15 == v25) {
            unint64_t v15 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v12 + 8 * v15);
        }
        while (v27 == -1);
        unint64_t v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      unint64_t v17 = (void *)(*(void *)(v7 + 48) + 16 * v16);
      *unint64_t v17 = v30;
      v17[1] = v29;
      uint64_t v18 = *(void *)(v7 + 56) + 24 * v16;
      *(_DWORD *)uint64_t v18 = v32;
      *(unsigned char *)(v18 + 4) = v33;
      *(void *)(v18 + 8) = v34;
      *(unsigned char *)(v18 + 16) = v40;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v38;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100052070(uint64_t a1, int a2)
{
  int v3 = v2;
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10000566C(&qword_10070A6A0);
  int v41 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    char v39 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    char v37 = v2;
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v21 >= v38) {
          goto LABEL_34;
        }
        unint64_t v22 = v39[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v22 = v39[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v37;
                goto LABEL_41;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v39 = -1 << v36;
              }
              int v3 = v37;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v22 = v39[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(v8 + 48) + 16 * v20;
      uint64_t v25 = *(void *)v24;
      uint64_t v26 = *(unsigned int *)(v24 + 8);
      uint64_t v27 = *(void *)(v40 + 72);
      uint64_t v28 = *(void *)(v8 + 56) + v27 * v20;
      if (v41)
      {
        sub_10001FDF0(v28, (uint64_t)v7, &qword_100709E38);
      }
      else
      {
        sub_1000079E4(v28, (uint64_t)v7, &qword_100709E38);
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v26 | (v26 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v10 + 48) + 16 * v17;
      *(void *)uint64_t v18 = v25;
      *(_DWORD *)(v18 + 8) = v26;
      uint64_t result = sub_10001FDF0((uint64_t)v7, *(void *)(v10 + 56) + v27 * v17, &qword_100709E38);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *int v3 = v10;
  return result;
}

uint64_t sub_100052418(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A698);
  char v34 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(v5 + 48) + 16 * v19;
      uint64_t v28 = *(void *)v27;
      uint64_t v29 = *(unsigned int *)(v27 + 8);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v29 | (v29 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = *(void *)(v7 + 48) + 16 * v16;
      *(void *)uint64_t v17 = v28;
      *(_DWORD *)(v17 + 8) = v29;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100052710(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A748);
  char v34 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v19);
      uint64_t v29 = *v27;
      Swift::UInt v28 = v27[1];
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v28);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = (void *)(*(void *)(v7 + 48) + 16 * v16);
      *uint64_t v17 = v29;
      v17[1] = v28;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_1000529F8(uint64_t a1, int a2)
{
  int v3 = v2;
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v56 = (uint64_t)&v47 - v11;
  uint64_t v12 = *v2;
  sub_10000566C(&qword_10070A798);
  int v54 = a2;
  uint64_t v13 = sub_1005E2FE0();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_47;
  }
  long long v47 = v2;
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 64);
  uint64_t v50 = (void *)(v12 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  int64_t v49 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = v13 + 64;
  swift_retain();
  int64_t v20 = 0;
  uint64_t v51 = v12;
  uint64_t v55 = v10;
LABEL_8:
  if (v18)
  {
    unint64_t v22 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v23 = v22 | (v20 << 6);
    goto LABEL_22;
  }
  int64_t v24 = v20 + 1;
  if (__OFADD__(v20, 1)) {
    goto LABEL_48;
  }
  if (v24 >= v49)
  {
    swift_release();
    int v3 = v47;
    BOOL v25 = v50;
    if (v54)
    {
LABEL_43:
      uint64_t v45 = 1 << *(unsigned char *)(v12 + 32);
      if (v45 >= 64) {
        bzero(v25, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *BOOL v25 = -1 << v45;
      }
      *(void *)(v12 + 16) = 0;
    }
  }
  else
  {
    BOOL v25 = v50;
    unint64_t v26 = v50[v24];
    ++v20;
    if (v26) {
      goto LABEL_21;
    }
    int64_t v20 = v24 + 1;
    if (v24 + 1 >= v49) {
      goto LABEL_40;
    }
    unint64_t v26 = v50[v20];
    if (v26)
    {
LABEL_21:
      unint64_t v18 = (v26 - 1) & v26;
      unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
      uint64_t v28 = v56;
      uint64_t v29 = *(void *)(v52 + 72);
      uint64_t v30 = *(void *)(v12 + 48) + v29 * v23;
      if (v54) {
        sub_100057FF4(v30, v56, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      }
      else {
        sub_100057F2C(v30, v56, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      }
      char v31 = *(unsigned char *)(*(void *)(v12 + 56) + v23);
      sub_1005E33F0();
      sub_100057F2C(v28, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v33 = *((unsigned int *)v10 + 2);
          uint64_t v34 = *((void *)v55 + 2);
          sub_1005E3410(2uLL);
          sub_1005E3410(v33 | (v33 << 32));
          sub_1000D3538((uint64_t)v57, v34);
          goto LABEL_29;
        case 2u:
          uint64_t v35 = *((unsigned int *)v10 + 2);
          uint64_t v36 = *((void *)v55 + 2);
          sub_1005E3410(3uLL);
          sub_1005E3410(v35 | (v35 << 32));
          sub_1000D3378((uint64_t)v57, v36);
LABEL_29:
          uint64_t v10 = v55;
          swift_bridgeObjectRelease();
          uint64_t v12 = v51;
          swift_bridgeObjectRelease();
          break;
        case 3u:
          sub_1005E3410(1uLL);
          break;
        default:
          uint64_t v32 = v48;
          sub_10001FDF0((uint64_t)v10, v48, &qword_100709E38);
          sub_1005E3410(0);
          sub_10000566C(&qword_100709E60);
          sub_10001FBA4();
          uint64_t v12 = v51;
          sub_1005E19C0();
          uint64_t v10 = v55;
          sub_100007A48(v32, &qword_100709E38);
          break;
      }
      Swift::Int v37 = sub_1005E3470();
      uint64_t v38 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v39 = v37 & ~v38;
      unint64_t v40 = v39 >> 6;
      if (((-1 << v39) & ~*(void *)(v19 + 8 * (v39 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v39) & ~*(void *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      while (++v40 != v42 || (v41 & 1) == 0)
      {
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v19 + 8 * v40);
        if (v44 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v44)) + (v40 << 6);
LABEL_7:
          *(void *)(v19 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
          sub_100057FF4(v56, *(void *)(v14 + 48) + v29 * v21, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          *(unsigned char *)(*(void *)(v14 + 56) + v21) = v31;
          ++*(void *)(v14 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      JUMPOUT(0x100052F84);
    }
    int64_t v27 = v24 + 2;
    if (v27 < v49)
    {
      unint64_t v26 = v50[v27];
      if (!v26)
      {
        while (1)
        {
          int64_t v20 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_49;
          }
          if (v20 >= v49) {
            goto LABEL_40;
          }
          unint64_t v26 = v50[v20];
          ++v27;
          if (v26) {
            goto LABEL_21;
          }
        }
      }
      int64_t v20 = v27;
      goto LABEL_21;
    }
LABEL_40:
    swift_release();
    int v3 = v47;
    if (v54) {
      goto LABEL_43;
    }
  }
LABEL_47:
  uint64_t result = swift_release();
  *int v3 = v14;
  return result;
}

uint64_t sub_100052F94(uint64_t a1, int a2)
{
  int v3 = v2;
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v5 - 8);
  uint64_t v52 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v7 = __chkstk_darwin(v57);
  uint64_t v59 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v11 = *v2;
  sub_10000566C(&qword_10070A788);
  int v58 = a2;
  uint64_t v12 = sub_1005E2FE0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_47;
  }
  uint64_t v51 = v2;
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int v54 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v53 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 + 64;
  swift_retain();
  int64_t v19 = 0;
  uint64_t v20 = v11;
  uint64_t v55 = v11;
  uint64_t v56 = v10;
LABEL_8:
  if (v17)
  {
    unint64_t v23 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v24 = v23 | (v19 << 6);
    goto LABEL_22;
  }
  int64_t v25 = v19 + 1;
  if (__OFADD__(v19, 1)) {
    goto LABEL_48;
  }
  if (v25 >= v53)
  {
    swift_release();
    int v3 = v51;
    unint64_t v26 = v54;
    if ((v58 & 1) == 0) {
      goto LABEL_47;
    }
LABEL_41:
    uint64_t v49 = 1 << *(unsigned char *)(v55 + 32);
    if (v49 >= 64) {
      bzero(v26, ((unint64_t)(v49 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v26 = -1 << v49;
    }
    *(void *)(v55 + 16) = 0;
  }
  else
  {
    unint64_t v26 = v54;
    unint64_t v27 = v54[v25];
    ++v19;
    if (v27) {
      goto LABEL_21;
    }
    int64_t v19 = v25 + 1;
    if (v25 + 1 >= v53) {
      goto LABEL_40;
    }
    unint64_t v27 = v54[v19];
    if (v27)
    {
LABEL_21:
      unint64_t v17 = (v27 - 1) & v27;
      unint64_t v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_22:
      uint64_t v29 = 8 * v24;
      uint64_t v30 = *(void *)(*(void *)(v20 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v20 + 56) + v29);
      if ((v58 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      uint64_t v32 = v30 + *(void *)(*(void *)v30 + 96);
      swift_beginAccess();
      sub_100057F2C(v32, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_100057F2C((uint64_t)v10, v59, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v35 = *(unsigned int *)(v59 + 8);
          uint64_t v36 = *(void *)(v59 + 16);
          sub_1005E3410(2uLL);
          Swift::UInt v37 = v35 | (v35 << 32);
          uint64_t v10 = v56;
          sub_1005E3410(v37);
          sub_1000D3538((uint64_t)v60, v36);
          uint64_t v20 = v55;
          swift_bridgeObjectRelease();
          goto LABEL_28;
        case 2u:
          uint64_t v38 = *(unsigned int *)(v59 + 8);
          uint64_t v39 = *(void *)(v59 + 16);
          sub_1005E3410(3uLL);
          Swift::UInt v40 = v38 | (v38 << 32);
          uint64_t v10 = v56;
          sub_1005E3410(v40);
          sub_1000D3378((uint64_t)v60, v39);
          swift_bridgeObjectRelease();
          uint64_t v20 = v55;
LABEL_28:
          swift_bridgeObjectRelease();
          break;
        case 3u:
          sub_1005E3410(1uLL);
          break;
        default:
          uint64_t v33 = v52;
          sub_10001FDF0(v59, v52, &qword_100709E38);
          sub_1005E3410(0);
          sub_10000566C(&qword_100709E60);
          sub_10001FBA4();
          sub_1005E19C0();
          uint64_t v34 = v33;
          uint64_t v10 = v56;
          sub_100007A48(v34, &qword_100709E38);
          break;
      }
      sub_100057F94((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      Swift::Int v41 = sub_1005E3470();
      uint64_t v42 = -1 << *(unsigned char *)(v13 + 32);
      unint64_t v43 = v41 & ~v42;
      unint64_t v44 = v43 >> 6;
      if (((-1 << v43) & ~*(void *)(v18 + 8 * (v43 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v43) & ~*(void *)(v18 + 8 * (v43 >> 6)))) | v43 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v45 = 0;
      unint64_t v46 = (unint64_t)(63 - v42) >> 6;
      while (++v44 != v46 || (v45 & 1) == 0)
      {
        BOOL v47 = v44 == v46;
        if (v44 == v46) {
          unint64_t v44 = 0;
        }
        v45 |= v47;
        uint64_t v48 = *(void *)(v18 + 8 * v44);
        if (v48 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v48)) + (v44 << 6);
LABEL_7:
          *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
          uint64_t v22 = 8 * v21;
          *(void *)(*(void *)(v13 + 48) + v22) = v30;
          *(void *)(*(void *)(v13 + 56) + v22) = v31;
          ++*(void *)(v13 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      JUMPOUT(0x100053524);
    }
    int64_t v28 = v25 + 2;
    if (v28 < v53)
    {
      unint64_t v27 = v54[v28];
      if (!v27)
      {
        while (1)
        {
          int64_t v19 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_49;
          }
          if (v19 >= v53) {
            goto LABEL_40;
          }
          unint64_t v27 = v54[v19];
          ++v28;
          if (v27) {
            goto LABEL_21;
          }
        }
      }
      int64_t v19 = v28;
      goto LABEL_21;
    }
LABEL_40:
    swift_release();
    int v3 = v51;
    if (v58) {
      goto LABEL_41;
    }
  }
LABEL_47:
  uint64_t result = swift_release();
  *int v3 = v13;
  return result;
}

uint64_t sub_100053534(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A758);
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt32 v26 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3440(v26);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100053808(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A7A0);
  char v47 = a2;
  uint64_t v6 = sub_1005E2FE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v45 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v43 = v2;
  int64_t v44 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (uint64_t i = v7; ; ++*(void *)(i + 16))
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v21 = v13;
      unint64_t v22 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v44) {
      break;
    }
    BOOL v24 = v45;
    unint64_t v25 = v45[v23];
    int64_t v26 = v13 + 1;
    if (!v25)
    {
      int64_t v26 = v23 + 1;
      if (v23 + 1 >= v44) {
        goto LABEL_33;
      }
      unint64_t v25 = v45[v26];
      if (!v25)
      {
        int64_t v27 = v23 + 2;
        if (v27 >= v44)
        {
LABEL_33:
          swift_release();
          int v3 = v43;
          uint64_t v7 = i;
          if ((v47 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = v45[v27];
        if (!v25)
        {
          while (1)
          {
            int64_t v26 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v26 >= v44) {
              goto LABEL_33;
            }
            unint64_t v25 = v45[v26];
            ++v27;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v26 = v27;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    int64_t v21 = v26;
    unint64_t v22 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_31:
    uint64_t v32 = *(void *)(v5 + 56);
    uint64_t v33 = v5;
    uint64_t v34 = *(void *)(v5 + 48) + 40 * v22;
    char v35 = *(unsigned char *)v34;
    int v36 = *(_DWORD *)(v34 + 4);
    uint64_t v37 = *(void *)(v34 + 8);
    int v38 = *(_DWORD *)(v34 + 16);
    uint64_t v40 = *(void *)(v34 + 24);
    unint64_t v39 = *(void *)(v34 + 32);
    Swift::Int v41 = (uint64_t *)(v32 + 12 * v22);
    uint64_t v48 = *v41;
    char v49 = *((unsigned char *)v41 + 8);
    if ((v47 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_100008D24(v40, v39);
    }
    LOBYTE(v50) = v35;
    DWORD1(v50) = v36;
    *((void *)&v50 + 1) = v37;
    LODWORD(v51) = v38;
    *((void *)&v51 + 1) = v40;
    uint64_t v7 = i;
    sub_1005E33F0();
    MoveOrCopy.hash(into:)();
    uint64_t result = sub_1005E3470();
    uint64_t v14 = -1 << *(unsigned char *)(i + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v5 = v33;
      int64_t v13 = v21;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v14) >> 6;
      uint64_t v5 = v33;
      int64_t v13 = v21;
      do
      {
        if (++v16 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v16 == v29;
        if (v16 == v29) {
          unint64_t v16 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v16);
      }
      while (v31 == -1);
      unint64_t v17 = __clz(__rbit64(~v31)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(i + 48) + 40 * v17;
    *(_OWORD *)uint64_t v18 = v50;
    *(_OWORD *)(v18 + 16) = v51;
    *(void *)(v18 + 32) = v39;
    uint64_t v19 = *(void *)(i + 56) + 12 * v17;
    *(void *)uint64_t v19 = v48;
    *(unsigned char *)(v19 + 8) = v49;
  }
  swift_release();
  int v3 = v43;
  BOOL v24 = v45;
  if ((v47 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v42 = 1 << *(unsigned char *)(v5 + 32);
  if (v42 >= 64) {
    bzero(v24, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v24 = -1 << v42;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int v3 = v7;
  return result;
}

uint64_t sub_100053BAC(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A7B0);
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v29 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v29[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v29 = -1 << v28;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v29[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      long long v30 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0) {
        sub_100008D24(v30, *((unint64_t *)&v30 + 1));
      }
      sub_1005E33F0();
      sub_1005E3440(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v17) = v27;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v17) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100053E88(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A7A8);
  char v35 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v34 = -1 << v32;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      char v29 = *(unsigned char *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      unint64_t v31 = *(void *)(v28 + 16);
      if ((v35 & 1) == 0) {
        sub_100008D24(v30, v31);
      }
      sub_1005E33F0();
      sub_1005E3440(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(unsigned char *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_100054188(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A790);
  char v35 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v34 = -1 << v32;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 40 * v19;
      char v29 = *(unsigned char *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      long long v36 = *(_OWORD *)(v28 + 16);
      char v31 = *(unsigned char *)(v28 + 32);
      if ((v35 & 1) == 0) {
        sub_100008D24(v30, v36);
      }
      sub_1005E33F0();
      sub_1005E3440(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 40 * v16;
      *(unsigned char *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(_OWORD *)(v17 + 16) = v36;
      *(unsigned char *)(v17 + 32) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_1000544A4(uint64_t a1, char a2)
{
  int v3 = v2;
  uint64_t v5 = *v2;
  sub_10000566C(&qword_10070A750);
  char v35 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v2;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v34 = -1 << v32;
              }
              int v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      uint64_t v29 = *(void *)v28;
      char v30 = *(unsigned char *)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      if ((v35 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3440(v27);
      uint64_t result = sub_1005E3470();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(void *)uint64_t v17 = v29;
      *(unsigned char *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *int v3 = v7;
  return result;
}

uint64_t sub_1000547A8(uint64_t a1, int a2)
{
  int v3 = v2;
  uint64_t v5 = sub_10000566C(&qword_100709E38);
  uint64_t v34 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10000566C(&qword_10070A760);
  int v35 = a2;
  uint64_t v9 = sub_1005E2FE0();
  uint64_t v10 = (void *)v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    int64_t v33 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    uint64_t v31 = v2;
    int64_t v32 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v21 = v20 | (v17 << 6);
      }
      else
      {
        int64_t v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        char v23 = v33;
        if (v22 >= v32) {
          goto LABEL_24;
        }
        unint64_t v24 = v33[v22];
        ++v17;
        if (!v24)
        {
          int64_t v17 = v22 + 1;
          if (v22 + 1 >= v32) {
            goto LABEL_24;
          }
          unint64_t v24 = v33[v17];
          if (!v24)
          {
            int64_t v25 = v22 + 2;
            if (v25 >= v32)
            {
LABEL_24:
              swift_release();
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                int v3 = v31;
                goto LABEL_31;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v8 + 32);
              if (v29 >= 64) {
                bzero(v23, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v23 = -1 << v29;
              }
              int v3 = v31;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v24 = v33[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v17 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_33;
                }
                if (v17 >= v32) {
                  goto LABEL_24;
                }
                unint64_t v24 = v33[v17];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v25;
          }
        }
LABEL_21:
        unint64_t v14 = (v24 - 1) & v24;
        unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
      }
      uint64_t v26 = *(void *)(v34 + 72);
      uint64_t v27 = *(void *)(v8 + 56) + v26 * v21;
      uint64_t v28 = *(void *)(*(void *)(v8 + 48) + 16 * v21 + 8);
      long long v36 = *(_OWORD *)(*(void *)(v8 + 48) + 16 * v21);
      if (v35)
      {
        sub_10001FDF0(v27, (uint64_t)v7, &qword_100709E38);
      }
      else
      {
        sub_1000079E4(v27, (uint64_t)v7, &qword_100709E38);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      uint64_t v18 = v36;
      swift_bridgeObjectRetain();
      sub_10001B1B0((uint64_t)v37, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10001B1B0((uint64_t)v37, v28);
      swift_bridgeObjectRelease();
      sub_1005E3470();
      unint64_t v19 = sub_1005E2AF0();
      *(void *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_OWORD *)(v10[6] + 16 * v19) = v36;
      uint64_t result = sub_10001FDF0((uint64_t)v7, v10[7] + v26 * v19, &qword_100709E38);
      ++v10[2];
    }
  }
  uint64_t result = swift_release();
LABEL_31:
  *int v3 = v10;
  return result;
}

unint64_t sub_100054B18(uint64_t a1, unsigned int a2, _OWORD *a3)
{
  uint64_t v5 = v3[1];
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(void *)(v5 + 16);
  if (*v3)
  {
    Swift::Int v8 = sub_1000CE1DC(a1, a2, v6, v7, (void *)(*v3 + 16));
    if ((v9 & 1) == 0) {
      goto LABEL_3;
    }
    return v8;
  }
  Swift::Int v8 = sub_1000CE0E8(a1, a2, v6, v7);
  if (v13) {
    return v8;
  }
LABEL_3:
  sub_10001FDF0((uint64_t)a3, (uint64_t)v21, &qword_10070A6C8);
  sub_100057494(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100057230);
  uint64_t v11 = v3[2];
  uint64_t v10 = v3 + 2;
  unint64_t result = sub_100054CA8(v8, *(void *)(v11 + 16) - 1);
  if (*(void *)(*v10 + 16))
  {
    sub_100055878(v20);
    sub_10001FDF0((uint64_t)v20, (uint64_t)v22, &qword_10070A6C8);
    sub_10001FDF0((uint64_t)v22, (uint64_t)v23, &qword_10070A6C8);
    if (sub_1000571F8(v23) == 1)
    {
      sub_1000A496C(*(void *)(*v10 + 16) - 1, a3);
    }
    else
    {
      sub_10001FDF0((uint64_t)v22, (uint64_t)v19, &qword_10070A6C8);
      long long v14 = v19[9];
      a3[8] = v19[8];
      a3[9] = v14;
      a3[10] = v19[10];
      long long v15 = v19[5];
      a3[4] = v19[4];
      a3[5] = v15;
      long long v16 = v19[7];
      a3[6] = v19[6];
      a3[7] = v16;
      long long v17 = v19[1];
      *a3 = v19[0];
      a3[1] = v17;
      long long v18 = v19[3];
      a3[2] = v19[2];
      a3[3] = v18;
    }
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)a3);
    return v8;
  }
  __break(1u);
  return result;
}

unint64_t sub_100054CA8(unint64_t result, unint64_t a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = *v2;
      unint64_t v5 = *(void *)(*v2 + 16);
      if (v5 > result)
      {
        uint64_t v7 = (long long *)(v4 + 32 + 176 * result);
        long long v8 = *v7;
        long long v9 = v7[2];
        long long v62 = v7[1];
        long long v63 = v9;
        long long v61 = v8;
        long long v10 = v7[3];
        long long v11 = v7[4];
        long long v12 = v7[6];
        long long v66 = v7[5];
        long long v67 = v12;
        long long v64 = v10;
        long long v65 = v11;
        long long v13 = v7[7];
        long long v14 = v7[8];
        long long v15 = v7[10];
        long long v70 = v7[9];
        long long v71 = v15;
        long long v68 = v13;
        long long v69 = v14;
        if (v5 > a2)
        {
          long long v16 = (long long *)(v4 + 32 + 176 * a2);
          long long v17 = *v16;
          long long v18 = v16[2];
          long long v73 = v16[1];
          long long v74 = v18;
          long long v72 = v17;
          long long v19 = v16[3];
          long long v20 = v16[4];
          long long v21 = v16[6];
          long long v77 = v16[5];
          long long v78 = v21;
          long long v75 = v19;
          long long v76 = v20;
          long long v22 = v16[7];
          long long v23 = v16[8];
          long long v24 = v16[10];
          long long v81 = v16[9];
          long long v82 = v24;
          long long v79 = v22;
          long long v80 = v23;
          sub_100007780((uint64_t)&v61);
          sub_100007780((uint64_t)&v72);
          unint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            unint64_t result = sub_1000A4C78(v4);
            uint64_t v4 = result;
          }
          if (*(void *)(v4 + 16) > v3)
          {
            int64_t v25 = (long long *)(v4 + 32 + 176 * v3);
            long long v26 = *v25;
            long long v27 = v25[2];
            v59[1] = v25[1];
            void v59[2] = v27;
            v59[0] = v26;
            long long v28 = v25[3];
            long long v29 = v25[4];
            long long v30 = v25[6];
            uint64_t v59[5] = v25[5];
            v59[6] = v30;
            v59[3] = v28;
            v59[4] = v29;
            long long v31 = v25[7];
            long long v32 = v25[8];
            long long v33 = v25[10];
            v59[9] = v25[9];
            v59[10] = v33;
            v59[7] = v31;
            v59[8] = v32;
            long long v34 = v72;
            long long v35 = v74;
            v25[1] = v73;
            v25[2] = v35;
            *int64_t v25 = v34;
            long long v36 = v75;
            long long v37 = v76;
            long long v38 = v78;
            v25[5] = v77;
            v25[6] = v38;
            v25[3] = v36;
            v25[4] = v37;
            long long v39 = v79;
            long long v40 = v80;
            long long v41 = v82;
            v25[9] = v81;
            v25[10] = v41;
            v25[7] = v39;
            v25[8] = v40;
            unint64_t result = sub_100007820((uint64_t)v59);
            if (*(void *)(v4 + 16) > a2)
            {
              uint64_t v42 = (long long *)(v4 + 32 + 176 * a2);
              long long v43 = *v42;
              long long v44 = v42[2];
              v60[1] = v42[1];
              uint64_t v60[2] = v44;
              v60[0] = v43;
              long long v45 = v42[3];
              long long v46 = v42[4];
              long long v47 = v42[6];
              v60[5] = v42[5];
              v60[6] = v47;
              v60[3] = v45;
              v60[4] = v46;
              long long v48 = v42[7];
              long long v49 = v42[8];
              long long v50 = v42[10];
              v60[9] = v42[9];
              v60[10] = v50;
              v60[7] = v48;
              v60[8] = v49;
              long long v51 = v61;
              long long v52 = v63;
              v42[1] = v62;
              v42[2] = v52;
              *uint64_t v42 = v51;
              long long v53 = v64;
              long long v54 = v65;
              long long v55 = v67;
              v42[5] = v66;
              v42[6] = v55;
              v42[3] = v53;
              v42[4] = v54;
              long long v56 = v68;
              long long v57 = v69;
              long long v58 = v71;
              v42[9] = v70;
              v42[10] = v58;
              v42[7] = v56;
              v42[8] = v57;
              unint64_t result = sub_100007820((uint64_t)v60);
              *uint64_t v2 = v4;
              return result;
            }
LABEL_15:
            __break(1u);
            return result;
          }
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100054EB8(uint64_t a1, int a2, int64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  sub_10001FDF0(a6, (uint64_t)v72, &qword_10070A6C8);
  if (a4)
  {
    sub_10001FDF0((uint64_t)v72, (uint64_t)v71, &qword_10070A6C8);
    uint64_t result = sub_1000571F8(v71);
    if (result != 1)
    {
      sub_10001FDF0((uint64_t)v72, (uint64_t)&v60, &qword_10070A6C8);
      sub_100007780((uint64_t)&v60);
      sub_1000A3CE4(a1, a2);
      uint64_t v31 = *(void *)(v7 + 16);
      long long v29 = (uint64_t *)(v7 + 16);
      uint64_t v30 = v31;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *long long v29 = v31;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_10001A4F4(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = *v29;
      }
      unint64_t v33 = *(void *)(v30 + 16);
      unint64_t v32 = *(void *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        uint64_t result = sub_10001A4F4(v32 > 1, v33 + 1, 1);
        uint64_t v30 = *v29;
      }
      *(void *)(v30 + 16) = v33 + 1;
      long long v34 = (_OWORD *)(v30 + 176 * v33);
      long long v35 = v60;
      long long v36 = v62;
      v34[3] = v61;
      _OWORD v34[4] = v36;
      v34[2] = v35;
      long long v37 = v63;
      long long v38 = v64;
      long long v39 = v66;
      v34[7] = v65;
      v34[8] = v39;
      v34[5] = v37;
      v34[6] = v38;
      long long v40 = v67;
      long long v41 = v68;
      long long v42 = v70;
      v34[11] = v69;
      v34[12] = v42;
      v34[9] = v40;
      v34[10] = v41;
      *long long v29 = v30;
    }
  }
  else
  {
    sub_10001FDF0((uint64_t)v72, (uint64_t)v71, &qword_10070A6C8);
    if (sub_1000571F8(v71) == 1)
    {
      long long v13 = (uint64_t *)(v7 + 16);
      if (*(void *)(*(void *)(v7 + 16) + 16) > a3)
      {
        sub_1000A496C(a3, &v60);
        uint64_t v14 = *v13;
        sub_100007780((uint64_t)&v60);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *long long v13 = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10001A4F4(0, *(void *)(v14 + 16) + 1, 1);
          uint64_t v14 = *v13;
        }
        unint64_t v17 = *(void *)(v14 + 16);
        unint64_t v16 = *(void *)(v14 + 24);
        unint64_t v18 = v17 + 1;
        if (v17 >= v16 >> 1)
        {
          sub_10001A4F4(v16 > 1, v17 + 1, 1);
          unint64_t v18 = v17 + 1;
          uint64_t v14 = *v13;
        }
        *(void *)(v14 + 16) = v18;
        long long v19 = (_OWORD *)(v14 + 176 * v17);
        long long v20 = v60;
        long long v21 = v62;
        v19[3] = v61;
        v19[4] = v21;
        long long v19[2] = v20;
        long long v22 = v63;
        long long v23 = v64;
        long long v24 = v66;
        v19[7] = v65;
        v19[8] = v24;
        v19[5] = v22;
        void v19[6] = v23;
        long long v25 = v67;
        long long v26 = v68;
        long long v27 = v70;
        _OWORD v19[11] = v69;
        v19[12] = v27;
        v19[9] = v25;
        v19[10] = v26;
        sub_100007820((uint64_t)&v60);
        *long long v13 = v14;
      }
      sub_1000A4434(a3, a5);
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v45 = *(void *)(v7 + 16);
      long long v43 = (uint64_t *)(v7 + 16);
      uint64_t v44 = v45;
      sub_10001FDF0((uint64_t)v72, (uint64_t)&v60, &qword_10070A6C8);
      sub_100057494(v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100057500);
      sub_100007780((uint64_t)&v60);
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      *long long v43 = v45;
      if ((v46 & 1) == 0)
      {
        sub_10001A4F4(0, *(void *)(v44 + 16) + 1, 1);
        uint64_t v44 = *v43;
      }
      unint64_t v48 = *(void *)(v44 + 16);
      unint64_t v47 = *(void *)(v44 + 24);
      if (v48 >= v47 >> 1) {
        sub_10001A4F4(v47 > 1, v48 + 1, 1);
      }
      sub_10001FDF0((uint64_t)v72, (uint64_t)v59, &qword_10070A6C8);
      uint64_t v49 = *v43;
      *(void *)(v49 + 16) = v48 + 1;
      long long v50 = (_OWORD *)(v49 + 176 * v48);
      long long v51 = v59[7];
      long long v52 = v59[8];
      long long v53 = v59[10];
      v50[11] = v59[9];
      v50[12] = v53;
      v50[9] = v51;
      v50[10] = v52;
      long long v54 = v59[3];
      long long v55 = v59[4];
      long long v56 = v59[6];
      v50[7] = v59[5];
      v50[8] = v56;
      v50[5] = v54;
      v50[6] = v55;
      long long v57 = v59[0];
      long long v58 = v59[2];
      v50[3] = v59[1];
      unsigned char v50[4] = v58;
      v50[2] = v57;
      *long long v43 = v49;
      sub_100054CA8(a3, *(void *)(v49 + 16) - 1);
      return (uint64_t)sub_100057494(v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100057230);
    }
  }
  return result;
}

uint64_t sub_100055234(uint64_t a1, unint64_t *a2)
{
  uint64_t v47 = _s19UserInitiatedSearchVMa(0);
  uint64_t v4 = *(void *)(v47 - 8);
  uint64_t v5 = __chkstk_darwin(v47);
  uint64_t v7 = (int *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  long long v9 = (char *)&v42 - v8;
  uint64_t v10 = sub_10000566C(&qword_10070A038);
  long long v11 = *(unsigned int (***)(int *, uint64_t, uint64_t))(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v46 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (int *)((char *)&v42 - v15);
  __chkstk_darwin(v14);
  long long v51 = (int *)((char *)&v42 - v17);
  uint64_t v18 = sub_10000566C(&qword_10070A6D0);
  __chkstk_darwin(v18 - 8);
  long long v50 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10000566C(&qword_10070A6D8);
  uint64_t v58 = sub_100057E98(&qword_10070A6E0, &qword_10070A6D8);
  v56[0] = a1;
  long long v52 = v56;
  swift_bridgeObjectRetain();
  uint64_t result = sub_10004E7BC((uint64_t (*)(unint64_t))sub_100057354);
  uint64_t v21 = *(void *)(*a2 + 16);
  if (v21 < result)
  {
    __break(1u);
  }
  else
  {
    uint64_t v45 = v9;
    sub_1000D5684(result, v21);
    uint64_t v49 = v11;
    long long v22 = sub_10003BCDC(v56, v57);
    __chkstk_darwin(v22);
    (*(void (**)(char *))(v24 + 16))((char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_100021E04(v53);
    sub_1005E1F60();
    long long v25 = (int *)v50;
    v49 += 6;
    uint64_t v44 = a2;
    uint64_t v43 = v4;
    uint64_t v48 = v10;
    while (1)
    {
      sub_100057374((uint64_t)v53, AssociatedTypeWitness);
      sub_1005E2950();
      if ((*v49)(v25, 1, v10) == 1) {
        break;
      }
      uint64_t v26 = *(int *)(v10 + 48);
      long long v27 = v51;
      uint64_t v28 = (uint64_t)v51 + v26;
      int v29 = *v25;
      *long long v51 = *v25;
      sub_100057FF4((uint64_t)v25 + v26, (uint64_t)v27 + v26, _s19UserInitiatedSearchV5StateOMa);
      unint64_t v30 = *a2;
      uint64_t v31 = (uint64_t)v16 + *(int *)(v10 + 48);
      *unint64_t v16 = v29;
      sub_100057F2C(v28, v31, _s19UserInitiatedSearchV5StateOMa);
      uint64_t v32 = *(void *)(v30 + 16);
      if (v32)
      {
        uint64_t v33 = v30 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        swift_bridgeObjectRetain();
        uint64_t v34 = *(void *)(v4 + 72);
        do
        {
          sub_100057F2C(v33, (uint64_t)v7, _s19UserInitiatedSearchVMa);
          int v35 = *v7;
          int v36 = *v16;
          sub_100057F94((uint64_t)v7, _s19UserInitiatedSearchVMa);
          if (v35 == v36)
          {
            swift_bridgeObjectRelease();
            sub_100007A48((uint64_t)v16, &qword_10070A038);
            a2 = v44;
            uint64_t v4 = v43;
            uint64_t v10 = v48;
            goto LABEL_4;
          }
          v33 += v34;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease();
        a2 = v44;
        uint64_t v4 = v43;
      }
      sub_100007A48((uint64_t)v16, &qword_10070A038);
      uint64_t v10 = v48;
      uint64_t v37 = (uint64_t)&v46[*(int *)(v48 + 48)];
      sub_100057F2C(v28, v37, _s19UserInitiatedSearchV5StateOMa);
      uint64_t v38 = (uint64_t)v45;
      *uint64_t v45 = v29;
      sub_100057FF4(v37, v38 + *(int *)(v47 + 20), _s19UserInitiatedSearchV5StateOMa);
      unint64_t v39 = *a2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v39 = sub_10001612C(0, *(void *)(v39 + 16) + 1, 1, v39);
      }
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      if (v41 >= v40 >> 1) {
        unint64_t v39 = sub_10001612C(v40 > 1, v41 + 1, 1, v39);
      }
      *(void *)(v39 + 16) = v41 + 1;
      sub_100057FF4(v38, v39+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v41, _s19UserInitiatedSearchVMa);
      *a2 = v39;
LABEL_4:
      sub_100007A48((uint64_t)v51, &qword_10070A038);
      long long v25 = (int *)v50;
    }
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v53);
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v56);
  }
  return result;
}

uint64_t sub_100055878@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1000A4C78(v3);
    uint64_t v3 = result;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = v5 - 1;
    memmove(a1, (const void *)(v3 + 176 * (v5 - 1) + 32), 0xB0uLL);
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
    return UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_100055900(uint64_t a1, uint64_t a2)
{
  sub_100055A48((long long *)a1, v16);
  sub_100055A48((long long *)a2, v15);
  sub_100055A48(v16, &v17);
  uint64_t v4 = v17;
  if (v19)
  {
    sub_100055A48(v15, &v20);
    if ((v22 & 1) == 0 || !sub_100077D1C(v4, v20)) {
      return 0;
    }
  }
  else
  {
    uint64_t v12 = *((void *)&v17 + 1);
    uint64_t v11 = v18;
    sub_100055A48(v15, &v20);
    if (v22) {
      return 0;
    }
    uint64_t v13 = *((void *)&v20 + 1);
    uint64_t v14 = v21;
    if ((sub_1000206A8(v4, v20) & 1) == 0 || (sub_100077ADC(v12, v13) & 1) == 0 || (sub_100077C3C(v11, v14) & 1) == 0) {
      return 0;
    }
  }
  if ((sub_100020394(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) == 0
    || (sub_100020538(*(void *)(a1 + 40), *(void *)(a2 + 40)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  char v9 = sub_100077E34(*(void *)(a1 + 48), *(void *)(a2 + 48));
  BOOL result = 0;
  if ((v9 & 1) != 0 && v5 == v7 && v6 == v8) {
    return *(_DWORD *)(a1 + 72) == *(_DWORD *)(a2 + 72);
  }
  return result;
}

_OWORD *sub_100055A48(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  *(_OWORD *)((char *)a2 + 9) = *(long long *)((char *)a1 + 9);
  *a2 = v2;
  return a2;
}

uint64_t sub_100055A60(uint64_t result, uint64_t a2, uint64_t a3, __n128 a4)
{
  unint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    unint64_t v7 = 0;
    uint64_t v8 = result + 32;
    uint64_t v9 = a2 + 35;
    do
    {
      if (v7 <= v4) {
        unint64_t v10 = v4;
      }
      else {
        unint64_t v10 = v7;
      }
      while (1)
      {
        if (v7 == v10)
        {
          __break(1u);
          return result;
        }
        uint64_t v11 = v8 + 96 * v7++;
        if (*(void *)(v11 + 8) == a3)
        {
          uint64_t v12 = *(unsigned __int8 **)v11;
          uint64_t v13 = *(void *)(*(void *)v11 + 16);
          if (v13 == *(void *)(a2 + 16))
          {
            if (!v13) {
              goto LABEL_22;
            }
            if (v12 == (unsigned __int8 *)a2)
            {
              uint64_t v12 = (unsigned __int8 *)a2;
              goto LABEL_22;
            }
            if (v12[32] == *(unsigned __int8 *)(a2 + 32))
            {
              if (v13 == 1) {
                goto LABEL_22;
              }
              if (v12[33] == *(unsigned __int8 *)(a2 + 33))
              {
                if (v13 == 2) {
                  goto LABEL_22;
                }
                if (v12[34] == *(unsigned __int8 *)(a2 + 34)) {
                  break;
                }
              }
            }
          }
        }
LABEL_6:
        if (v7 == v4) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      uint64_t v14 = 0;
      uint64_t v15 = v13 - 3;
      while (v15 != v14)
      {
        int v16 = v12[v14 + 35];
        int v17 = *(unsigned __int8 *)(v9 + v14++);
        if (v16 != v17) {
          goto LABEL_6;
        }
      }
LABEL_22:
      char v33 = *(unsigned char *)(v11 + 88);
      a4.n128_u64[0] = *(void *)(v11 + 80);
      __n128 v34 = a4;
      unint64_t v18 = *(void *)(v11 + 72);
      char v32 = *(unsigned char *)(v11 + 64);
      uint64_t v31 = *(void *)(v11 + 56);
      char v30 = *(unsigned char *)(v11 + 48);
      uint64_t v29 = *(void *)(v11 + 40);
      int v27 = *(_DWORD *)(v11 + 32);
      char v28 = *(unsigned char *)(v11 + 36);
      int v26 = *(_DWORD *)(v11 + 24);
      uint64_t v19 = *(void *)(v11 + 16);
      swift_bridgeObjectRetain();
      uint64_t v25 = v19;
      swift_bridgeObjectRetain();
      sub_100007810(v18);
      BOOL result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        BOOL result = sub_10001A714(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      unint64_t v20 = _swiftEmptyArrayStorage[3];
      unint64_t v22 = v21 + 1;
      uint64_t v9 = v24;
      if (v21 >= v20 >> 1)
      {
        BOOL result = sub_10001A714(v20 > 1, v21 + 1, 1);
        unint64_t v22 = v21 + 1;
        uint64_t v9 = v24;
      }
      _swiftEmptyArrayStorage[2] = v22;
      uint64_t v23 = &_swiftEmptyArrayStorage[12 * v21];
      v23[4] = v12;
      v23[5] = a3;
      v23[6] = v25;
      *((_DWORD *)v23 + 14) = v26;
      *((_DWORD *)v23 + 16) = v27;
      *((unsigned char *)v23 + 68) = v28;
      v23[9] = v29;
      *((unsigned char *)v23 + 80) = v30;
      v23[11] = v31;
      *((unsigned char *)v23 + 96) = v32;
      v23[13] = v18;
      a4.n128_u64[1] = v34.n128_u64[1];
      v23[14] = v34.n128_u64[0];
      *((unsigned char *)v23 + 120) = v33;
    }
    while (v7 != v4);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_100055CF4(uint64_t result, uint64_t a2, __n128 a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    unint64_t v5 = 0;
    uint64_t v6 = result + 32;
    do
    {
      if (v5 <= v3) {
        unint64_t v7 = v3;
      }
      else {
        unint64_t v7 = v5;
      }
      while (1)
      {
        if (v5 == v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = v6 + 96 * v5;
        uint64_t v9 = *(unsigned int *)(v8 + 24);
        ++v5;
        if ((v9 | (v9 << 32)) == (*(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned int *)(a2 + 24) << 32)))
        {
          uint64_t v10 = *(void *)(v8 + 16);
          uint64_t v11 = *(void *)(a2 + 16);
          uint64_t v12 = *(void *)(v10 + 16);
          if (v12 == *(void *)(v11 + 16))
          {
            if (v12) {
              BOOL v13 = v10 == v11;
            }
            else {
              BOOL v13 = 1;
            }
            if (v13) {
              goto LABEL_23;
            }
            if (*(unsigned __int8 *)(v10 + 32) == *(unsigned __int8 *)(v11 + 32))
            {
              if (v12 == 1) {
                goto LABEL_23;
              }
              if (*(unsigned __int8 *)(v10 + 33) == *(unsigned __int8 *)(v11 + 33))
              {
                if (v12 == 2) {
                  goto LABEL_23;
                }
                if (*(unsigned __int8 *)(v10 + 34) == *(unsigned __int8 *)(v11 + 34)) {
                  break;
                }
              }
            }
          }
        }
LABEL_6:
        if (v5 == v3) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      uint64_t v14 = (unsigned __int8 *)(v10 + 35);
      uint64_t v15 = (unsigned __int8 *)(v11 + 35);
      uint64_t v16 = v12 - 3;
      while (v16)
      {
        int v18 = *v14++;
        int v17 = v18;
        int v19 = *v15++;
        --v16;
        if (v17 != v19) {
          goto LABEL_6;
        }
      }
LABEL_23:
      char v33 = *(unsigned char *)(v8 + 88);
      a3.n128_u64[0] = *(void *)(v8 + 80);
      __n128 v34 = a3;
      unint64_t v20 = *(void *)(v8 + 72);
      char v32 = *(unsigned char *)(v8 + 64);
      uint64_t v31 = *(void *)(v8 + 56);
      char v30 = *(unsigned char *)(v8 + 48);
      uint64_t v29 = *(void *)(v8 + 40);
      int v27 = *(_DWORD *)(v8 + 32);
      char v28 = *(unsigned char *)(v8 + 36);
      uint64_t v25 = *(void *)v8;
      uint64_t v26 = *(void *)(v8 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100007810(v20);
      BOOL result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        BOOL result = sub_10001A714(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v22 = _swiftEmptyArrayStorage[2];
      unint64_t v21 = _swiftEmptyArrayStorage[3];
      unint64_t v23 = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        BOOL result = sub_10001A714(v21 > 1, v22 + 1, 1);
        unint64_t v23 = v22 + 1;
      }
      _swiftEmptyArrayStorage[2] = v23;
      uint64_t v24 = &_swiftEmptyArrayStorage[12 * v22];
      v24[4] = v25;
      v24[5] = v26;
      v24[6] = v10;
      *((_DWORD *)v24 + 14) = v9;
      *((_DWORD *)v24 + 16) = v27;
      *((unsigned char *)v24 + 68) = v28;
      v24[9] = v29;
      *((unsigned char *)v24 + 80) = v30;
      _OWORD v24[11] = v31;
      *((unsigned char *)v24 + 96) = v32;
      v24[13] = v20;
      a3.n128_u64[1] = v34.n128_u64[1];
      v24[14] = v34.n128_u64[0];
      *((unsigned char *)v24 + 120) = v33;
    }
    while (v5 != v3);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

void *sub_100055F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000566C(&qword_10070A378);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000079E4(a1, (uint64_t)v8, &qword_100709E38);
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = MessageIdentifierSet.startIndex.getter(v9);
  uint64_t v12 = v11;
  int v27 = (uint64_t *)&v8[*(int *)(v6 + 44)];
  uint64_t v14 = _swiftEmptyArrayStorage;
  if (v10 == MessageIdentifierSet.endIndex.getter(v9) && v12 == v13)
  {
LABEL_15:
    unint64_t v23 = v27;
    *int v27 = v10;
    v23[1] = v12;
    sub_100007A48((uint64_t)v8, &qword_10070A378);
  }
  else
  {
    uint64_t v28 = a2;
    while (1)
    {
      MessageIdentifierSet.subscript.getter();
      MessageIdentifierSet.index(_:offsetBy:)();
      uint64_t v10 = v16;
      uint64_t v12 = v17;
      sub_100047DC0(&v32, a2, &v30);
      if (v2) {
        break;
      }
      unint64_t v18 = v31;
      if (v31 >> 60 != 15)
      {
        uint64_t v29 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_100016D78(0, v14[2] + 1, 1, v14);
        }
        unint64_t v20 = v14[2];
        unint64_t v19 = v14[3];
        if (v20 >= v19 >> 1) {
          uint64_t v14 = sub_100016D78((void *)(v19 > 1), v20 + 1, 1, v14);
        }
        void v14[2] = v20 + 1;
        unint64_t v21 = &v14[2 * v20];
        a2 = v28;
        v21[4] = v29;
        v21[5] = v18;
      }
      if (v10 == MessageIdentifierSet.endIndex.getter(v9) && v12 == v22) {
        goto LABEL_15;
      }
    }
    uint64_t v24 = v27;
    *int v27 = v10;
    v24[1] = v12;
    sub_100007A48((uint64_t)v8, &qword_10070A378);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1000561B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v6 = a1 + 32;
  while (1)
  {
    uint64_t v7 = (uint64_t *)(v6 + 176 * result);
    if (v7[1] == a3)
    {
      uint64_t v8 = *v7;
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9 == *(void *)(a2 + 16))
      {
        if (!v9 || v8 == a2) {
          return result;
        }
        if (*(unsigned __int8 *)(v8 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v9 == 1) {
            return result;
          }
          if (*(unsigned __int8 *)(v8 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v9 == 2) {
              return result;
            }
            if (*(unsigned __int8 *)(v8 + 34) == *(unsigned __int8 *)(a2 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++result == v3) {
      return 0;
    }
  }
  uint64_t v10 = (unsigned __int8 *)(v8 + 35);
  uint64_t v11 = v9 - 3;
  uint64_t v12 = (unsigned __int8 *)(a2 + 35);
  while (v11)
  {
    int v14 = *v10++;
    int v13 = v14;
    int v15 = *v12++;
    --v11;
    if (v13 != v15) {
      goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_100056288(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v6 = a1 + 32;
  while (1)
  {
    uint64_t v7 = v6 + 176 * result;
    if ((*(unsigned int *)(v7 + 24) | ((unint64_t)*(unsigned int *)(v7 + 24) << 32)) == (a3 | ((unint64_t)a3 << 32)))
    {
      uint64_t v8 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9 == *(void *)(a2 + 16))
      {
        if (!v9 || v8 == a2) {
          return result;
        }
        if (*(unsigned __int8 *)(v8 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v9 == 1) {
            return result;
          }
          if (*(unsigned __int8 *)(v8 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v9 == 2) {
              return result;
            }
            if (*(unsigned __int8 *)(v8 + 34) == *(unsigned __int8 *)(a2 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++result == v3) {
      return 0;
    }
  }
  uint64_t v10 = (unsigned __int8 *)(v8 + 35);
  uint64_t v11 = v9 - 3;
  uint64_t v12 = (unsigned __int8 *)(a2 + 35);
  while (v11)
  {
    int v14 = *v10++;
    int v13 = v14;
    int v15 = *v12++;
    --v11;
    if (v13 != v15) {
      goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_10005636C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = vars8;
  }
  return swift_bridgeObjectRetain();
}

double sub_1000563B4(__n128 *a1)
{
  *(void *)&double result = sub_10004DA64(a1, (void **)*(void *)(v1 + 16)).n128_u64[0];
  return result;
}

uint64_t sub_1000563BC(uint64_t a1)
{
  return sub_10004DB74(a1, *(void *)(v1 + 16));
}

double sub_1000563C4(_OWORD *a1, __n128 *a2)
{
  *(void *)&double result = sub_10004DC20(a1, a2, (void **)*(void *)(v2 + 16)).n128_u64[0];
  return result;
}

uint64_t sub_1000563CC()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100056404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a3 + 24) == 1)
  {
    uint64_t v6 = *(void **)a3;
    uint64_t v7 = *(void *)(a3 + 8);
    uint64_t v8 = *(void *)(a3 + 16);
    uint64_t v9 = sub_1000561B0(*(void *)a3, a1, a2);
    if ((v10 & 1) == 0)
    {
      unint64_t v11 = v9;
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      int v13 = v6;
      if (result)
      {
        if ((v11 & 0x8000000000000000) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_100093440(v6);
        int v13 = (void *)result;
        if ((v11 & 0x8000000000000000) == 0)
        {
LABEL_5:
          if (v11 < v13[2])
          {
            sub_10004C908((uint64_t)&v13[22 * v11 + 4], a4);
            sub_10000F0D4((uint64_t)v6, v7, v8, 1);
            uint64_t result = 0;
            *(void *)a3 = v13;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            *(unsigned char *)(a3 + 24) = 1;
            return result;
          }
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return result;
    }
  }
  return 1;
}

uint64_t sub_100056504(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v21 = (unint64_t *)result;
  uint64_t v22 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v24 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v24) {
      return sub_10006C7E4(v21, a2, v22, a3);
    }
    unint64_t v17 = *(void *)(v23 + 8 * v16);
    ++v6;
    if (!v17)
    {
      int64_t v6 = v16 + 1;
      if (v16 + 1 >= v24) {
        return sub_10006C7E4(v21, a2, v22, a3);
      }
      unint64_t v17 = *(void *)(v23 + 8 * v6);
      if (!v17)
      {
        int64_t v6 = v16 + 2;
        if (v16 + 2 >= v24) {
          return sub_10006C7E4(v21, a2, v22, a3);
        }
        unint64_t v17 = *(void *)(v23 + 8 * v6);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_5:
    uint64_t v12 = *(void **)a4;
    Swift::Int v13 = *(void *)(a4 + 8);
    swift_bridgeObjectRetain();
    v14.rawValue._uint64_t rawValue = v12;
    v14.hashValue = v13;
    Swift::Bool v15 = SyncRequest.includes(_:)(v14);
    uint64_t result = swift_bridgeObjectRelease();
    if (v15)
    {
      *(unint64_t *)((char *)v21 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
        return sub_10006C7E4(v21, a2, v22, a3);
      }
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v24) {
    return sub_10006C7E4(v21, a2, v22, a3);
  }
  unint64_t v17 = *(void *)(v23 + 8 * v18);
  if (v17)
  {
    int64_t v6 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v6 >= v24) {
      return sub_10006C7E4(v21, a2, v22, a3);
    }
    unint64_t v17 = *(void *)(v23 + 8 * v6);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100056704(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  sub_100057150(a2);
  uint64_t isStackAllocationSafe = sub_100057150(a2);
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    sub_100057150(a2);
    uint64_t v10 = sub_100056504((uint64_t)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    sub_1000571A4(a2);
    if (v2) {
      swift_willThrow();
    }
    sub_1000571A4(a2);
    sub_1000571A4(a2);
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    sub_100057150(a2);
    uint64_t v10 = sub_100056504((uint64_t)v11, v7, a1, a2);
    sub_1000571A4(a2);
    swift_slowDealloc();
    sub_1000571A4(a2);
    sub_1000571A4(a2);
  }
  return v10;
}

void *sub_1000568D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v6 = *(void *)(a1 + 16);
  long long v78 = _swiftEmptyArrayStorage;
  sub_10001A4F4(0, v6, 0);
  long long v61 = _swiftEmptyArrayStorage;
  int64_t v44 = v6;
  if (v6)
  {
    uint64_t v43 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    while (1)
    {
      uint64_t v60 = v7;
      size_t v8 = (uint64_t *)(v43 + 96 * v7);
      long long v9 = *((_OWORD *)v8 + 3);
      long long v80 = *((_OWORD *)v8 + 2);
      long long v81 = v9;
      v82[0] = *((_OWORD *)v8 + 4);
      *(_OWORD *)((char *)v82 + 9) = *(_OWORD *)((char *)v8 + 73);
      long long v10 = *((_OWORD *)v8 + 1);
      v79[0] = *(_OWORD *)v8;
      v79[1] = v10;
      uint64_t v54 = v8[1];
      uint64_t v55 = *v8;
      uint64_t v53 = v8[2];
      int v51 = *((_DWORD *)v8 + 8);
      int v52 = *((_DWORD *)v8 + 6);
      char v49 = *((unsigned char *)v8 + 48);
      char v50 = *((unsigned char *)v8 + 36);
      uint64_t v56 = v8[5];
      uint64_t v57 = v8[7];
      uint64_t v58 = v8[9];
      uint64_t v11 = v8[10];
      char v47 = *((unsigned char *)v8 + 88);
      char v48 = *((unsigned char *)v8 + 64);
      sub_100057150((uint64_t)v79);
      swift_bridgeObjectRetain();
      sub_100057150((uint64_t)v79);
      uint64_t v12 = sub_100056704(a2, (uint64_t)v79);
      sub_1000571A4((uint64_t)v79);
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_10003EB0C(v12);
      uint64_t v59 = v4;
      swift_release();
      uint64_t v14 = v13[2];
      sub_100057440();
      uint64_t v15 = sub_1005E2280();
      uint64_t v16 = v15;
      if (v14) {
        break;
      }
LABEL_14:
      swift_bridgeObjectRelease();
      sub_100057150((uint64_t)v79);
      Swift::Int v26 = Set<>.makeNonEmpty()(v16);
      swift_bridgeObjectRelease();
      int v27 = *(_DWORD *)(a3 + 72);
      *(_DWORD *)(a3 + 72) = (v27 + 1) & 0xFFFFFF;
      long long v83 = v80;
      long long v84 = v81;
      char v85 = v82[0];
      sub_10001FDF0((uint64_t)&v83, (uint64_t)v87, &qword_10070A6F0);
      sub_10001FDF0((uint64_t)&v84 + 8, (uint64_t)v86, &qword_10070A6F8);
      sub_10001FDF0((uint64_t)v87, (uint64_t)&v88, &qword_10070A6F0);
      if (v89 & 1) != 0 || (int v28 = v88, sub_10001FDF0((uint64_t)v86, (uint64_t)&v90, &qword_10070A6F8), (v91))
      {
        sub_1000571A4((uint64_t)v79);
        uint64_t v29 = 0;
        uint64_t v30 = 0;
        char v31 = 1;
      }
      else
      {
        uint64_t v62 = v90;
        UIDValidityWith.init(uidValidity:value:)(v28, (uint64_t)&v62, (uint64_t)&type metadata for ModificationSequenceValue, v77);
        sub_1000571A4((uint64_t)v79);
        char v31 = 0;
        uint64_t v29 = LODWORD(v77[0]);
        uint64_t v30 = v77[1];
      }
      uint64_t v33 = v60;
      int v32 = v61;
      long long v78 = v61;
      unint64_t v35 = v61[2];
      unint64_t v34 = v61[3];
      if (v35 >= v34 >> 1)
      {
        sub_10001A4F4(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v60;
        int v32 = v78;
      }
      uint64_t v7 = v33 + 1;
      char v76 = v50;
      char v73 = v49;
      char v72 = v48;
      char v71 = v47;
      char v69 = 1;
      char v66 = v31;
      v32[2] = v35 + 1;
      long long v61 = v32;
      int v36 = &v32[22 * v35];
      v36[4] = v55;
      v36[5] = v54;
      _OWORD v36[6] = v53;
      *((_DWORD *)v36 + 14) = v52;
      *((_DWORD *)v36 + 16) = v51;
      *((unsigned char *)v36 + 68) = v76;
      __int16 v37 = v74;
      *((unsigned char *)v36 + 71) = v75;
      *(_WORD *)((char *)v36 + 69) = v37;
      v36[9] = v56;
      *((unsigned char *)v36 + 80) = v73;
      int v38 = v77[0];
      *((_DWORD *)v36 + 21) = *(_DWORD *)((char *)v77 + 3);
      *(_DWORD *)((char *)v36 + 81) = v38;
      v36[11] = v57;
      *((unsigned char *)v36 + 96) = v72;
      int v39 = v62;
      *((_DWORD *)v36 + 25) = *(_DWORD *)((char *)&v62 + 3);
      *(_DWORD *)((char *)v36 + 97) = v39;
      v36[13] = v58;
      v36[14] = v11;
      *((unsigned char *)v36 + 120) = v71;
      int v40 = *(_DWORD *)&v70[3];
      *(_DWORD *)((char *)v36 + 121) = *(_DWORD *)v70;
      *((_DWORD *)v36 + 31) = v40;
      v36[16] = 0;
      *((_DWORD *)v36 + 34) = 0;
      *((unsigned char *)v36 + 140) = v69;
      LOWORD(v40) = v67;
      *((unsigned char *)v36 + 143) = v68;
      *(_WORD *)((char *)v36 + 141) = v40;
      v36[18] = v29;
      v36[19] = v30;
      *((unsigned char *)v36 + 160) = v66;
      int v41 = *(_DWORD *)v65;
      *((_DWORD *)v36 + 41) = *(_DWORD *)&v65[3];
      *(_DWORD *)((char *)v36 + 161) = v41;
      v36[21] = v26;
      v36[22] = _swiftEmptyArrayStorage;
      v36[23] = _swiftEmptyArrayStorage;
      v36[24] = 0;
      *((unsigned char *)v36 + 200) = 2;
      LOBYTE(v41) = v64;
      *(_WORD *)((char *)v36 + 201) = v63;
      *((unsigned char *)v36 + 203) = v41;
      *((_DWORD *)v36 + 51) = v27;
      uint64_t v4 = v59;
      if (v7 == v44) {
        goto LABEL_23;
      }
    }
    uint64_t v17 = 0;
    uint64_t v18 = v15 + 56;
    while (1)
    {
      Swift::Int v19 = *((unsigned int *)v13 + v17++ + 8);
      sub_1005E33F0();
      sub_1005E3440(v19);
      Swift::Int v20 = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v16 + 32);
      unint64_t v22 = v20 & ~v21;
      if (((*(void *)(v18 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        goto LABEL_12;
      }
      uint64_t v23 = *(void *)(v16 + 48);
      if (*(_DWORD *)(v23 + 4 * v22) == v19)
      {
LABEL_5:
        if (v17 == v14) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v24 = ~v21;
        while (1)
        {
          unint64_t v22 = (v22 + 1) & v24;
          if (((*(void *)(v18 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            break;
          }
          if (*(_DWORD *)(v23 + 4 * v22) == v19) {
            goto LABEL_5;
          }
        }
LABEL_12:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v77[0] = v16;
        sub_1000C9BCC(v19, v22, isUniquelyReferenced_nonNull_native);
        uint64_t v16 = v77[0];
        swift_bridgeObjectRelease();
        if (v17 == v14) {
          goto LABEL_14;
        }
        uint64_t v18 = v16 + 56;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_23:
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_100056E2C(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    char v5 = (unsigned char *)(a1 + 136);
    do
    {
      char v44 = a2;
      uint64_t v8 = *((void *)v5 - 13);
      unsigned int v9 = *((_DWORD *)v5 - 24);
      uint64_t v10 = *((void *)v5 - 11);
      uint64_t v36 = *((void *)v5 - 10);
      uint64_t v11 = *((void *)v5 - 9);
      int v37 = *((_DWORD *)v5 - 16);
      int v38 = *((_DWORD *)v5 - 14);
      char v39 = *(v5 - 52);
      uint64_t v40 = *((void *)v5 - 6);
      char v41 = *(v5 - 40);
      uint64_t v42 = *((void *)v5 - 4);
      char v43 = *(v5 - 24);
      unint64_t v12 = *((void *)v5 - 2);
      int v13 = *((_DWORD *)v5 - 2);
      int v14 = *((_DWORD *)v5 - 1);
      char v15 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100007810(v12);
      if (!v8) {
        break;
      }
      int v34 = v14;
      char v35 = v15;
      uint64_t v33 = v4;
      uint64_t v16 = (void *)*a3;
      unint64_t v18 = sub_100024264(v8, v9);
      uint64_t v19 = v16[2];
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        uint64_t result = sub_1005E3380();
        __break(1u);
        return result;
      }
      char v22 = v17;
      if (v16[3] >= v21)
      {
        if ((v44 & 1) == 0) {
          sub_100097548();
        }
      }
      else
      {
        sub_10004FDA0(v21, v44 & 1);
        unint64_t v23 = sub_100024264(v8, v9);
        if ((v22 & 1) != (v24 & 1)) {
          goto LABEL_18;
        }
        unint64_t v18 = v23;
      }
      uint64_t v25 = (void *)*a3;
      if (v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v25[7] + 96 * v18;
        unint64_t v7 = *(void *)(v6 + 72);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000078B0(v7);
        *(void *)uint64_t v6 = v10;
        *(void *)(v6 + 8) = v36;
        *(void *)(v6 + 16) = v11;
        *(_DWORD *)(v6 + 24) = v37;
        *(_DWORD *)(v6 + 32) = v38;
        *(unsigned char *)(v6 + 36) = v39;
        *(void *)(v6 + 40) = v40;
        *(unsigned char *)(v6 + 48) = v41;
        *(void *)(v6 + 56) = v42;
        *(unsigned char *)(v6 + 64) = v43;
        *(void *)(v6 + 72) = v12;
        *(_DWORD *)(v6 + 80) = v13;
        *(_DWORD *)(v6 + 84) = v34;
        *(unsigned char *)(v6 + 88) = v35;
      }
      else
      {
        v25[(v18 >> 6) + 8] |= 1 << v18;
        uint64_t v26 = v25[6] + 16 * v18;
        *(void *)uint64_t v26 = v8;
        *(_DWORD *)(v26 + 8) = v9;
        uint64_t v27 = v25[7] + 96 * v18;
        *(void *)uint64_t v27 = v10;
        *(void *)(v27 + 8) = v36;
        *(void *)(v27 + 16) = v11;
        *(_DWORD *)(v27 + 24) = v37;
        *(_DWORD *)(v27 + 32) = v38;
        *(unsigned char *)(v27 + 36) = v39;
        *(void *)(v27 + 40) = v40;
        *(unsigned char *)(v27 + 48) = v41;
        *(void *)(v27 + 56) = v42;
        *(unsigned char *)(v27 + 64) = v43;
        *(void *)(v27 + 72) = v12;
        *(_DWORD *)(v27 + 80) = v13;
        *(_DWORD *)(v27 + 84) = v34;
        *(unsigned char *)(v27 + 88) = v35;
        uint64_t v28 = v25[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_17;
        }
        v25[2] = v30;
      }
      v5 += 112;
      a2 = 1;
      uint64_t v4 = v33 - 1;
    }
    while (v33 != 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100057150(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100007810(v2);
  return a1;
}

uint64_t sub_1000571A4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000078B0(v2);
  return a1;
}

uint64_t sub_1000571F8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_100057210(_OWORD *a1)
{
  double result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100057230(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000078B0(a10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1000572C4(uint64_t a1, unint64_t a2)
{
  unint64_t result = swift_bridgeObjectRetain();
  if ((a2 & 4) == 0)
  {
    return sub_100023440(a2);
  }
  return result;
}

unint64_t sub_10005730C(uint64_t a1, unint64_t a2)
{
  unint64_t result = swift_bridgeObjectRelease();
  if ((a2 & 4) == 0)
  {
    return sub_100023388(a2);
  }
  return result;
}

BOOL sub_100057354(uint64_t a1)
{
  return sub_10004579C(a1, *(void **)(v1 + 16));
}

uint64_t sub_100057374(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1000573C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19UserInitiatedSearchVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_100057428(_DWORD *a1)
{
  return *a1 == **(_DWORD **)(v1 + 16);
}

unint64_t sub_100057440()
{
  unint64_t result = qword_10070A6E8;
  if (!qword_10070A6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A6E8);
  }
  return result;
}

void *sub_100057494(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_100057500(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100007810(a10);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100057594(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000575F0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100057604(uint64_t a1, char a2)
{
  if (a2) {
    return swift_release();
  }
  return result;
}

uint64_t _s14LocalMailboxesOwxx(uint64_t a1)
{
  return sub_10000F0D4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t _s14LocalMailboxesOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_10005636C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s14LocalMailboxesOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_10005636C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_10000F0D4(v7, v8, v9, v10);
  return a1;
}

uint64_t _s14LocalMailboxesOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_10000F0D4(v5, v7, v6, v8);
  return a1;
}

uint64_t _s14LocalMailboxesOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14LocalMailboxesOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000577DC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1000577E4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *_s14LocalMailboxesOMa()
{
  return &_s14LocalMailboxesON;
}

uint64_t _s5LocalVwxx(uint64_t a1)
{
  sub_10000F0D4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5LocalVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_10005636C(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5LocalVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_10005636C(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_10000F0D4(v8, v9, v10, v11);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

__n128 _s5LocalVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s5LocalVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_10000F0D4(v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t _s5LocalVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 76)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5LocalVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 76) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 76) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s5LocalVMa()
{
  return &_s5LocalVN;
}

uint64_t sub_100057B18(uint64_t a1)
{
  return a1;
}

uint64_t sub_100057B44(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = (void *)result;
  long long v3 = *(void **)result;
  unint64_t v4 = *(void *)(*(void *)result + 16);
  if (!v4) {
    return 0;
  }
  unint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = (uint64_t)&v3[6 * v5 + 4];
    if (*(void *)(v6 + 32) == a3)
    {
      uint64_t v7 = *(void *)(v6 + 24);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8 == *(void *)(a2 + 16))
      {
        if (v8) {
          BOOL v9 = v7 == a2;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9) {
          goto LABEL_20;
        }
        if (*(unsigned __int8 *)(v7 + 32) == *(unsigned __int8 *)(a2 + 32))
        {
          if (v8 == 1) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v7 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            if (v8 == 2) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v7 + 34) == *(unsigned __int8 *)(a2 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v5 == v4) {
      return *(void *)(*(void *)result + 16);
    }
  }
  uint64_t v10 = (unsigned __int8 *)(v7 + 35);
  uint64_t v11 = v8 - 3;
  unint64_t v12 = (unsigned __int8 *)(a2 + 35);
  while (v11)
  {
    int v14 = *v10++;
    int v13 = v14;
    int v15 = *v12++;
    --v11;
    if (v13 != v15) {
      goto LABEL_3;
    }
  }
LABEL_20:
  unint64_t v16 = v5 + 1;
  if (__OFADD__(v5, 1)) {
    goto LABEL_53;
  }
  if (v16 == v4) {
    return v5;
  }
  uint64_t v37 = v8 - 3;
  int v38 = (unsigned __int8 *)(a2 + 35);
  uint64_t v40 = v8;
  uint64_t v41 = a3;
  while (v16 < v4)
  {
    char v17 = v3 + 4;
    uint64_t v18 = (uint64_t)&v3[6 * v16 + 4];
    uint64_t v19 = *(void *)(v18 + 24);
    if (*(void *)(v18 + 32) != a3 || *(void *)(v19 + 16) != v8) {
      goto LABEL_36;
    }
    if (!v8 || v19 == a2) {
      goto LABEL_43;
    }
    if (*(unsigned __int8 *)(v19 + 32) != *(unsigned __int8 *)(a2 + 32)) {
      goto LABEL_36;
    }
    if (v8 == 1) {
      goto LABEL_43;
    }
    if (*(unsigned __int8 *)(v19 + 33) != *(unsigned __int8 *)(a2 + 33)) {
      goto LABEL_36;
    }
    if (v8 == 2) {
      goto LABEL_43;
    }
    if (*(unsigned __int8 *)(v19 + 34) == *(unsigned __int8 *)(a2 + 34))
    {
      BOOL v20 = (unsigned __int8 *)(v19 + 35);
      uint64_t v21 = v37;
      char v22 = v38;
      while (v21)
      {
        int v24 = *v20++;
        int v23 = v24;
        int v25 = *v22++;
        --v21;
        if (v23 != v25) {
          goto LABEL_36;
        }
      }
    }
    else
    {
LABEL_36:
      if (v5 != v16)
      {
        if (v5 >= v4) {
          goto LABEL_51;
        }
        uint64_t v50 = *(void *)(v18 + 32);
        uint64_t v26 = &v17[6 * v5];
        int v45 = *((_DWORD *)v26 + 4);
        uint64_t v27 = v26[3];
        uint64_t v43 = v26[5];
        uint64_t v44 = v26[4];
        uint64_t v29 = *(void *)v18;
        unint64_t v28 = *(void *)(v18 + 8);
        int v48 = *(_DWORD *)(v18 + 16);
        uint64_t v49 = v17[6 * v16 + 5];
        unint64_t v46 = v26[1];
        uint64_t v47 = *v26;
        sub_100008D24(*v26, v46);
        swift_bridgeObjectRetain();
        sub_100008D24(v29, v28);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v3 = sub_1000933C8(v3);
        }
        uint64_t v30 = (uint64_t)&v3[6 * v5 + 4];
        uint64_t v31 = *(void *)v30;
        unint64_t v32 = *(void *)(v30 + 8);
        *(void *)uint64_t v30 = v29;
        *(void *)(v30 + 8) = v28;
        *(_DWORD *)(v30 + 16) = v48;
        *(void *)(v30 + 24) = v19;
        *(void *)(v30 + 32) = v50;
        *(void *)(v30 + 40) = v49;
        sub_1000094D4(v31, v32);
        __n128 result = swift_bridgeObjectRelease();
        if (v16 >= v3[2]) {
          goto LABEL_52;
        }
        uint64_t v33 = (uint64_t)&v3[6 * v16 + 4];
        uint64_t v34 = *(void *)v33;
        unint64_t v35 = *(void *)(v33 + 8);
        *(void *)uint64_t v33 = v47;
        *(void *)(v33 + 8) = v46;
        *(_DWORD *)(v33 + 16) = v45;
        *(void *)(v33 + 24) = v27;
        *(void *)(v33 + 32) = v44;
        *(void *)(v33 + 40) = v43;
        sub_1000094D4(v34, v35);
        __n128 result = swift_bridgeObjectRelease();
        a3 = v41;
        *uint64_t v42 = v3;
        uint64_t v8 = v40;
      }
      BOOL v36 = __OFADD__(v5++, 1);
      if (v36) {
        goto LABEL_50;
      }
    }
LABEL_43:
    BOOL v36 = __OFADD__(v16++, 1);
    if (v36) {
      goto LABEL_49;
    }
    unint64_t v4 = v3[2];
    if (v16 == v4) {
      return v5;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_100057E90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100047D64(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100057E98(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100057EE8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100008D24(a1, a2);
  }
  return a1;
}

uint64_t sub_100057EFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000094D4(a1, a2);
  }
  return a1;
}

uint64_t sub_100057F10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100047CE4(a1, a2);
}

uint64_t sub_100057F2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100057F94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100057FF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v11[0] = a4;
  v11[1] = a5;
  v11[2] = a6;
  swift_retain();
  swift_retain();
  sub_100058894(a1, a2, a3, v11);
  swift_release_n();
  swift_release_n();
  swift_release();
  uint64_t result = v11[0];
  if (v6)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

BOOL sub_10005810C(_DWORD *a1, _DWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_100058120(_DWORD *a1, _DWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_100058134(_DWORD *a1, _DWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100058148(_DWORD *a1, _DWORD *a2)
{
  return *a2 < *a1;
}

uint64_t sub_10005815C(unsigned int a1)
{
  uint64_t v2 = sub_1005E34A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070A650);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[3] = a1;
  sub_10000566C(&qword_10070A658);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005F66A0;
  *(void *)(v9 + 32) = 0x786F626E497369;
  *(void *)(v9 + 40) = 0xE700000000000000;
  *(unsigned char *)(v9 + 48) = (a1 & 0x80000000) == 0;
  *(void *)(v9 + 72) = &type metadata for Bool;
  *(void *)(v9 + 80) = 0x696C696269736976;
  *(void *)(v9 + 88) = 0xEA00000000007974;
  *(unsigned char *)(v9 + 96) = (a1 & 0x40000000) != 0;
  *(void *)(v9 + 120) = &_s11UserVisibleON;
  *(void *)(v9 + 128) = 0xD000000000000010;
  *(void *)(v9 + 136) = 0x80000001005E4BB0;
  *(unsigned char *)(v9 + 144) = (a1 & 0x20000000) == 0;
  *(void *)(v9 + 168) = &type metadata for Bool;
  strcpy((char *)(v9 + 176), "userPriority");
  *(unsigned char *)(v9 + 189) = 0;
  *(_WORD *)(v9 + 190) = -5120;
  *(_WORD *)(v9 + 192) = (a1 >> 14) & 0x3FFF;
  *(void *)(v9 + 216) = &_s12PriorityInfoV5OrderVN;
  *(void *)(v9 + 224) = 0xD000000000000012;
  *(void *)(v9 + 232) = 0x80000001005E4BD0;
  *(void *)(v9 + 264) = &_s12PriorityInfoV5OrderVN;
  *(_WORD *)(v9 + 240) = a1 & 0x3FFF;
  uint64_t v10 = enum case for Mirror.DisplayStyle.struct(_:);
  uint64_t v11 = sub_1005E3490();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Mirror.AncestorRepresentation.generated(_:), v2);
  return sub_1005E34B0();
}

uint64_t sub_100058440()
{
  return sub_10005815C(*v0);
}

unint64_t sub_10005844C()
{
  unint64_t result = qword_10070A7B8;
  if (!qword_10070A7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A7B8);
  }
  return result;
}

uint64_t sub_1000584A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  a2[1] = a1[1];
  return swift_bridgeObjectRetain();
}

unint64_t sub_1000584B8(uint64_t a1, void (*a2)(uint64_t *__return_ptr, void *), uint64_t a3, uint64_t *a4)
{
  uint64_t v42 = a4;
  uint64_t v5 = a4[2];
  uint64_t v37 = a4 + 2;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1000A4B4C(v5);
  }
  *uint64_t v37 = v5;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v34 = v42 + 1;
  for (uint64_t i = (void *)(a1 + 40); ; i += 2)
  {
    v41[0] = *(i - 1);
    v41[1] = *i;
    swift_bridgeObjectRetain();
    a2(&v38, v41);
    swift_bridgeObjectRelease();
    uint64_t v10 = v38;
    unsigned int v12 = v39;
    int v11 = v40;
    Swift::Int v13 = v42[1];
    uint64_t v14 = v13 + 32;
    uint64_t v15 = *(void *)(v13 + 16);
    if (*v42)
    {
      unint64_t result = sub_1000CE1DC(v38, v39, v14, v15, (void *)(*v42 + 16));
      if (v17)
      {
        int v35 = v11;
        goto LABEL_17;
      }
    }
    else
    {
      unint64_t result = sub_1000CE0E8(v38, v39, v14, v15);
      if (v18)
      {
        int v35 = v11;
LABEL_17:
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v34 = v13;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10001A4D4(0, *(void *)(v13 + 16) + 1, 1);
          Swift::Int v13 = *v34;
        }
        unint64_t v21 = *(void *)(v13 + 16);
        unint64_t v20 = *(void *)(v13 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_10001A4D4(v20 > 1, v21 + 1, 1);
          Swift::Int v13 = *v34;
        }
        *(void *)(v13 + 16) = v21 + 1;
        unint64_t v22 = v13 + 16 * v21;
        *(void *)(v22 + 32) = v10;
        *(_DWORD *)(v22 + 40) = v12;
        int v23 = v42;
        v42[1] = v13;
        uint64_t v24 = *v23;
        if (*v23)
        {
          swift_beginAccess();
          if (sub_1005E0BA0() > (uint64_t)v21)
          {
            int v25 = v42;
            unint64_t result = swift_isUniquelyReferenced_native();
            uint64_t v26 = *v25;
            if ((result & 1) == 0)
            {
              if (!v26) {
                goto LABEL_45;
              }
              uint64_t v26 = sub_1005E0BC0();
              unint64_t v28 = v42;
              unint64_t result = swift_release();
              *unint64_t v28 = v26;
            }
            if (!v26) {
              goto LABEL_44;
            }
            sub_1005E0B60();
            goto LABEL_38;
          }
          uint64_t v27 = *(void *)(v24 + 24) & 0x3FLL;
          if (v21 <= 0xE && !v27)
          {
            swift_release();
            *uint64_t v42 = 0;
            goto LABEL_38;
          }
        }
        else
        {
          if (v21 <= 0xE)
          {
LABEL_38:
            uint64_t v33 = v37;
            uint64_t v5 = *v37;
            char v32 = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v37 = v5;
            if ((v32 & 1) == 0)
            {
              sub_10001A554(0, *(void *)(v5 + 16) + 1, 1);
              uint64_t v33 = v37;
              uint64_t v5 = *v37;
            }
            unint64_t v9 = *(void *)(v5 + 16);
            unint64_t v8 = *(void *)(v5 + 24);
            if (v9 >= v8 >> 1)
            {
              sub_10001A554(v8 > 1, v9 + 1, 1);
              uint64_t v33 = v37;
              uint64_t v5 = *v37;
            }
            *(void *)(v5 + 16) = v9 + 1;
            *(_DWORD *)(v5 + 4 * v9 + 32) = v35;
            goto LABEL_8;
          }
          uint64_t v27 = 0;
        }
        uint64_t v29 = sub_1005E0BD0();
        if (v27 <= v29) {
          uint64_t v30 = v29;
        }
        else {
          uint64_t v30 = v27;
        }
        uint64_t v31 = sub_1000A4124(v13, v30, 0, v27);
        swift_release();
        *uint64_t v42 = v31;
        goto LABEL_38;
      }
    }
    uint64_t v33 = v37;
    if ((result & 0x8000000000000000) != 0) {
      break;
    }
    if (result >= *(void *)(v5 + 16)) {
      goto LABEL_43;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t *v33 = v5;
    if (!--v6)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100058894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = a4[2];
  uint64_t v41 = a4 + 2;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1000A4B4C(v6);
    uint64_t v6 = result;
  }
  *uint64_t v41 = v6;
  uint64_t v8 = *(void *)(a3 + 16);
  if (!v8)
  {
LABEL_43:
    swift_release();
    swift_release();
    return swift_release();
  }
  unint64_t v9 = (int *)(a3 + 32);
  int v40 = a4 + 1;
  uint64_t v10 = *(void *)(a2 + 16);
  int v11 = (unsigned int *)(a2 + 40);
  while (v10)
  {
    uint64_t v14 = *((void *)v11 - 1);
    unsigned int v15 = *v11;
    int v16 = *v9;
    Swift::Int v17 = a4[1];
    uint64_t v18 = v17 + 32;
    uint64_t v19 = *(void *)(v17 + 16);
    if (*a4)
    {
      int v42 = *v9;
      Swift::Int v20 = sub_1000CE1DC(v14, v15, v18, v19, (void *)(*a4 + 16));
      if (v21) {
        goto LABEL_18;
      }
    }
    else
    {
      Swift::Int v20 = sub_1000CE0E8(v14, v15, v18, v19);
      if (v22)
      {
        int v42 = v16;
LABEL_18:
        swift_bridgeObjectRetain_n();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *int v40 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10001A4D4(0, *(void *)(v17 + 16) + 1, 1);
          Swift::Int v17 = *v40;
        }
        unint64_t v27 = *(void *)(v17 + 16);
        unint64_t v26 = *(void *)(v17 + 24);
        unint64_t v28 = v27 + 1;
        uint64_t v29 = v14;
        if (v27 >= v26 >> 1)
        {
          sub_10001A4D4(v26 > 1, v27 + 1, 1);
          unint64_t v28 = v27 + 1;
          Swift::Int v17 = *v40;
          uint64_t v29 = v14;
        }
        *(void *)(v17 + 16) = v28;
        unint64_t v30 = v17 + 16 * v27;
        *(void *)(v30 + 32) = v29;
        *(_DWORD *)(v30 + 40) = v15;
        a4[1] = v17;
        uint64_t v31 = *a4;
        if (*a4)
        {
          swift_beginAccess();
          uint64_t v24 = v41;
          if (sub_1005E0BA0() > (uint64_t)v27)
          {
            uint64_t result = swift_isUniquelyReferenced_native();
            uint64_t v32 = *a4;
            if ((result & 1) == 0)
            {
              if (!v32) {
                goto LABEL_48;
              }
              uint64_t v32 = sub_1005E0BC0();
              uint64_t result = swift_release();
              *a4 = v32;
            }
            if (!v32) {
              goto LABEL_47;
            }
            sub_1005E0B60();
            goto LABEL_41;
          }
          uint64_t v35 = *(void *)(v31 + 24) & 0x3FLL;
          if (v27 > 0xE)
          {
            uint64_t v34 = a4;
          }
          else
          {
            uint64_t v34 = a4;
            if (!v35)
            {
              swift_release();
              *a4 = 0;
LABEL_41:
              uint64_t v6 = *v24;
              char v39 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v24 = v6;
              if ((v39 & 1) == 0)
              {
                sub_10001A554(0, *(void *)(v6 + 16) + 1, 1);
                uint64_t v6 = *v24;
              }
              unint64_t v13 = *(void *)(v6 + 16);
              unint64_t v12 = *(void *)(v6 + 24);
              if (v13 >= v12 >> 1)
              {
                sub_10001A554(v12 > 1, v13 + 1, 1);
                uint64_t v6 = *v24;
              }
              *(void *)(v6 + 16) = v13 + 1;
              *(_DWORD *)(v6 + 4 * v13 + 32) = v42;
              goto LABEL_8;
            }
          }
        }
        else
        {
          BOOL v33 = v27 > 0xE;
          uint64_t v34 = a4;
          uint64_t v24 = v41;
          if (!v33) {
            goto LABEL_41;
          }
          uint64_t v35 = 0;
        }
        uint64_t v36 = sub_1005E0BD0();
        if (v35 <= v36) {
          uint64_t v37 = v36;
        }
        else {
          uint64_t v37 = v35;
        }
        uint64_t v38 = sub_1000A4124(v17, v37, 0, v35);
        swift_release();
        *uint64_t v34 = v38;
        goto LABEL_41;
      }
    }
    unint64_t v23 = v20;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v24 = v41;
    if ((v23 & 0x8000000000000000) != 0) {
      goto LABEL_45;
    }
    if (v23 >= *(void *)(v6 + 16)) {
      goto LABEL_46;
    }
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v24 = v6;
    --v10;
    v11 += 4;
    ++v9;
    if (!--v8) {
      goto LABEL_43;
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_100058C7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  if ((a4 & 1) == 0)
  {
    if (a7) {
      return sub_1000A7014((uint64_t)_swiftEmptyArrayStorage);
    }
    unint64_t v9 = MailboxName.inbox.unsafeMutableAddressor();
    if ((sub_100010004(*v9, *((_DWORD *)v9 + 2), a6) & 1) == 0) {
      return sub_1000A7014((uint64_t)_swiftEmptyArrayStorage);
    }
    sub_10000566C(&qword_10070A0A8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6670;
    int v11 = *((_DWORD *)v9 + 2);
    *(void *)(inited + 32) = *v9;
    *(_DWORD *)(inited + 40) = v11;
    *(_DWORD *)(inited + 44) = 1879048191;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1000A7014(inited);
    swift_setDeallocating();
    sub_10000566C(&qword_10070A0B0);
    swift_arrayDestroy();
    return v12;
  }
  uint64_t v17 = sub_1000A7014((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v145 = v17;
  uint64_t v146 = v18;
  uint64_t v142 = _swiftEmptyArrayStorage;
  int v143 = _swiftEmptyArrayStorage;
  unint64_t v141 = _swiftEmptyArrayStorage;
  uint64_t v22 = sub_1000A7014((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v117 = v23;
  uint64_t v139 = v22;
  uint64_t v140 = v24;
  uint64_t v122 = *(void *)(a1 + 16);
  if (!v122)
  {
LABEL_138:
    *(void *)&long long v127 = v17;
    *((void *)&v127 + 1) = v19;
    *(void *)&long long v128 = v21;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v110 = swift_bridgeObjectRetain();
    sub_1000584B8(v110, (void (*)(uint64_t *__return_ptr, void *))sub_1000584A0, 0, (uint64_t *)&v127);
    swift_bridgeObjectRelease();
    uint64_t v111 = swift_bridgeObjectRetain();
    sub_1000584B8(v111, (void (*)(uint64_t *__return_ptr, void *))sub_1000584A0, 0, (uint64_t *)&v127);
    swift_bridgeObjectRelease();
    uint64_t v112 = swift_bridgeObjectRetain();
    sub_1000584B8(v112, (void (*)(uint64_t *__return_ptr, void *))sub_1000584A0, 0, (uint64_t *)&v127);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_10005805C(v139, v140, v117, v127, *((uint64_t *)&v127 + 1), v128);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v12;
  }
  uint64_t v115 = a2;
  uint64_t v116 = a3;
  uint64_t v123 = a1 + 32;
  uint64_t v114 = a1;
  swift_bridgeObjectRetain();
  unint64_t v25 = 0;
  uint64_t v118 = a6;
  uint64_t v119 = a8;
  while (1)
  {
    uint64_t v29 = (long long *)(v123 + 176 * v25);
    long long v30 = *v29;
    long long v31 = v29[2];
    long long v128 = v29[1];
    long long v129 = v31;
    long long v127 = v30;
    long long v32 = v29[3];
    long long v33 = v29[4];
    long long v34 = v29[6];
    long long v132 = v29[5];
    long long v133 = v34;
    long long v130 = v32;
    long long v131 = v33;
    long long v35 = v29[7];
    long long v36 = v29[8];
    long long v37 = v29[10];
    long long v136 = v29[9];
    long long v137 = v37;
    long long v134 = v35;
    long long v135 = v36;
    long long v38 = v127;
    uint64_t v39 = v128;
    uint64_t v40 = DWORD2(v128);
    if ((sub_100010004(v128, DWORD2(v128), a6) & 1) == 0) {
      goto LABEL_11;
    }
    sub_100007780((uint64_t)&v127);
    swift_bridgeObjectRetain();
    uint64_t v41 = MailboxName.inbox.unsafeMutableAddressor();
    uint64_t v121 = v21;
    if ((v40 | (v40 << 32)) == (*((unsigned int *)v41 + 2) | ((unint64_t)*((unsigned int *)v41 + 2) << 32)))
    {
      BOOL v42 = sub_1000255D4(v39, *v41);
      swift_bridgeObjectRelease();
      if (v25 < 0x10000)
      {
        int v43 = (unsigned __int16)v25;
        if ((unsigned __int16)v25 < 0x4000u)
        {
          if (!*(void *)(a8 + 16)) {
            goto LABEL_25;
          }
          goto LABEL_23;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      BOOL v42 = 0;
      if (!(v25 >> 16) && !((unsigned __int16)v25 >> 14))
      {
        int v43 = (unsigned __int16)v25;
        if (!*(void *)(a8 + 16)) {
          goto LABEL_25;
        }
        goto LABEL_23;
      }
    }
    int v43 = 0x3FFF;
    if (!*(void *)(a8 + 16)) {
      goto LABEL_25;
    }
LABEL_23:
    unint64_t v44 = sub_1000242DC(v38, *((Swift::UInt *)&v38 + 1));
    if (v45)
    {
      __int16 v46 = *(_WORD *)(*(void *)(a8 + 56) + 2 * v44);
      BOOL v47 = v46 < 0;
      int v48 = v46 & 0x3FFF;
      goto LABEL_26;
    }
LABEL_25:
    BOOL v47 = 1;
    int v48 = 0x3FFF;
LABEL_26:
    if ((*((unsigned char *)v29 + 88) & 1) == 0)
    {
      unint64_t v49 = v123 + 176 * v25;
      if ((*(unsigned char *)(v49 + 108) & 1) != 0 || *(_DWORD *)(v49 + 104) < *((_DWORD *)v29 + 21)) {
        break;
      }
    }
    if (a5)
    {
      if (*(void *)(a5 + 16))
      {
        unint64_t v50 = sub_100024264(v39, v40);
        if (v51)
        {
          uint64_t v52 = *(void *)(a5 + 56) + 72 * v50;
          if ((*(unsigned char *)(v52 + 65) & 1) == 0 && (*(unsigned char *)(v52 + 64) & 1) == 0)
          {
            uint64_t v53 = *(void *)(v52 + 56);
            int v54 = *(_DWORD *)(v52 + 36);
            unint64_t v55 = v123 + 176 * v25;
            int v56 = *(_DWORD *)(v55 + 112);
            unint64_t v57 = *(void *)(v55 + 120);
            char v58 = *(unsigned char *)(v55 + 128);
            uint64_t v124 = v53;
            UIDValidityWith.init(uidValidity:value:)(v54, (uint64_t)&v124, (uint64_t)&type metadata for ModificationSequenceValue, &v125);
            if ((v58 & 1) != 0 || v125 != v56 || v57 < v126) {
              break;
            }
          }
        }
      }
    }
    if (!v42)
    {
      if (v47) {
        int v65 = -536870912;
      }
      else {
        int v65 = -1610612736;
      }
      uint64_t v66 = v65 | (v48 << 14) | v43;
      if (v47)
      {
        a6 = v118;
        if (v48 == 0x3FFF)
        {
          uint64_t v67 = v140 + 32;
          uint64_t v68 = *(void *)(v140 + 16);
          if (v139)
          {
            Swift::Int v69 = sub_1000CE1DC(v39, v40, v67, v68, (void *)(v139 + 16));
            a8 = v119;
            if (v70)
            {
LABEL_130:
              uint64_t v105 = swift_bridgeObjectRetain();
              sub_1000A3CE4(v105, v40);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v107 = v117;
              uint64_t v138 = v117;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_10001A554(0, *(void *)(v117 + 16) + 1, 1);
                uint64_t v107 = v138;
              }
              uint64_t v21 = v121;
              unint64_t v109 = *(void *)(v107 + 16);
              unint64_t v108 = *(void *)(v107 + 24);
              if (v109 >= v108 >> 1)
              {
                sub_10001A554(v108 > 1, v109 + 1, 1);
                uint64_t v107 = v138;
              }
              *(void *)(v107 + 16) = v109 + 1;
              uint64_t v117 = v107;
              uint64_t v104 = v107 + 4 * v109;
LABEL_135:
              *(_DWORD *)(v104 + 32) = v66;
              swift_bridgeObjectRelease();
              sub_100007820((uint64_t)&v127);
              goto LABEL_11;
            }
          }
          else
          {
            Swift::Int v69 = sub_1000CE0E8(v39, v40, v67, v68);
            a8 = v119;
            if (v101) {
              goto LABEL_130;
            }
          }
          unint64_t v102 = v69;
          uint64_t v21 = v121;
          swift_bridgeObjectRetain();
          uint64_t v103 = v117;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v103 = sub_1000A4B4C(v117);
          }
          if ((v102 & 0x8000000000000000) != 0) {
            goto LABEL_153;
          }
          if (v102 >= *(void *)(v103 + 16)) {
            goto LABEL_154;
          }
          uint64_t v117 = v103;
          uint64_t v104 = v103 + 4 * v102;
          goto LABEL_135;
        }
        uint64_t v90 = v141;
        uint64_t v91 = v141[2];
        if (!v91 || (uint64_t v92 = v91 - 1, v66 >= HIDWORD(v141[2 * v91 + 3])))
        {
          swift_bridgeObjectRetain_n();
          a8 = v119;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v90 = sub_100015AA0(0, v91 + 1, 1, v90);
          }
          unint64_t v96 = v90[2];
          unint64_t v95 = v90[3];
          if (v96 >= v95 >> 1) {
            uint64_t v90 = sub_100015AA0((void *)(v95 > 1), v96 + 1, 1, v90);
          }
          v90[2] = v96 + 1;
          int64_t v97 = &v90[2 * v96];
          v97[4] = v39;
          *((_DWORD *)v97 + 10) = v40;
          *((_DWORD *)v97 + 11) = v66;
          sub_100007820((uint64_t)&v127);
          swift_bridgeObjectRelease();
          unint64_t v141 = v90;
          uint64_t v21 = v121;
          goto LABEL_11;
        }
        uint64_t v77 = 0;
        a8 = v119;
        do
        {
          while (1)
          {
            if (__OFSUB__(v92, v77))
            {
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              goto LABEL_146;
            }
            unint64_t v93 = v77 + (v92 - v77) / 2;
            if (__OFADD__(v77, (v92 - v77) / 2)) {
              goto LABEL_144;
            }
            if (v93 >= v91) {
              goto LABEL_145;
            }
            unsigned int v94 = HIDWORD(v141[2 * v93 + 5]);
            if (v94 >= v66) {
              break;
            }
            uint64_t v77 = v93 + 1;
            if (v92 < (uint64_t)(v93 + 1)) {
              goto LABEL_110;
            }
          }
          if (v66 >= v94)
          {
LABEL_123:
            sub_100007820((uint64_t)&v127);
            uint64_t v21 = v121;
            goto LABEL_11;
          }
          uint64_t v92 = v93 - 1;
        }
        while ((uint64_t)(v93 - 1) >= v77);
LABEL_110:
        if (v91 < v77) {
          goto LABEL_155;
        }
        if (v77 < 0) {
          goto LABEL_156;
        }
LABEL_112:
        swift_bridgeObjectRetain_n();
        sub_1000D287C(v77, v77, v39, v40 | (v66 << 32));
        sub_100007820((uint64_t)&v127);
        swift_bridgeObjectRelease();
        uint64_t v21 = v121;
        goto LABEL_11;
      }
LABEL_70:
      a6 = v118;
      a8 = v119;
      long long v78 = v143;
      uint64_t v79 = v143[2];
      if (!v79 || (uint64_t v80 = v79 - 1, v66 >= HIDWORD(v143[2 * v79 + 3])))
      {
        swift_bridgeObjectRetain_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v78 = sub_100015AA0(0, v79 + 1, 1, v78);
        }
        unint64_t v86 = v78[2];
        unint64_t v85 = v78[3];
        if (v86 >= v85 >> 1) {
          long long v78 = sub_100015AA0((void *)(v85 > 1), v86 + 1, 1, v78);
        }
        v78[2] = v86 + 1;
        uint64_t v87 = &v78[2 * v86];
        v87[4] = v39;
        *((_DWORD *)v87 + 10) = v40;
        *((_DWORD *)v87 + 11) = v66;
        sub_100007820((uint64_t)&v127);
        swift_bridgeObjectRelease();
        int v143 = v78;
        uint64_t v21 = v121;
        goto LABEL_11;
      }
      uint64_t v77 = 0;
      do
      {
        while (1)
        {
          if (__OFSUB__(v80, v77))
          {
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
            goto LABEL_143;
          }
          unint64_t v81 = v77 + (v80 - v77) / 2;
          if (__OFADD__(v77, (v80 - v77) / 2)) {
            goto LABEL_141;
          }
          if (v81 >= v79) {
            goto LABEL_142;
          }
          unsigned int v82 = HIDWORD(v143[2 * v81 + 5]);
          if (v82 >= v66) {
            break;
          }
          uint64_t v77 = v81 + 1;
          if (v80 < (uint64_t)(v81 + 1)) {
            goto LABEL_80;
          }
        }
        if (v66 >= v82) {
          goto LABEL_123;
        }
        uint64_t v80 = v81 - 1;
      }
      while ((uint64_t)(v81 - 1) >= v77);
LABEL_80:
      if (v79 < v77) {
        goto LABEL_151;
      }
      if (v77 < 0) {
        goto LABEL_152;
      }
      goto LABEL_112;
    }
    if (v47) {
      int v59 = 1610612736;
    }
    else {
      int v59 = 0x20000000;
    }
LABEL_45:
    int v60 = v59 | (v48 << 14) | v43;
    uint64_t v61 = v146 + 32;
    uint64_t v62 = *(void *)(v146 + 16);
    if (v145)
    {
      Swift::Int v63 = sub_1000CE1DC(v39, v40, v61, v62, (void *)(v145 + 16));
      a8 = v119;
      if ((v64 & 1) == 0) {
        goto LABEL_57;
      }
    }
    else
    {
      Swift::Int v63 = sub_1000CE0E8(v39, v40, v61, v62);
      a8 = v119;
      if ((v71 & 1) == 0)
      {
LABEL_57:
        unint64_t v72 = v63;
        uint64_t v21 = v121;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_1000A4B4C(v121);
        }
        if ((v72 & 0x8000000000000000) != 0) {
          goto LABEL_149;
        }
        if (v72 >= *(void *)(v21 + 16)) {
          goto LABEL_150;
        }
        uint64_t v28 = v21 + 4 * v72;
        goto LABEL_10;
      }
    }
    uint64_t v88 = swift_bridgeObjectRetain();
    sub_1000A3CE4(v88, v40);
    uint64_t v21 = v121;
    char v89 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v144 = v121;
    if ((v89 & 1) == 0)
    {
      sub_10001A554(0, *(void *)(v121 + 16) + 1, 1);
      uint64_t v21 = v144;
    }
    unint64_t v27 = *(void *)(v21 + 16);
    unint64_t v26 = *(void *)(v21 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_10001A554(v26 > 1, v27 + 1, 1);
      uint64_t v21 = v144;
    }
    *(void *)(v21 + 16) = v27 + 1;
    uint64_t v28 = v21 + 4 * v27;
LABEL_10:
    *(_DWORD *)(v28 + 32) = v60;
    swift_bridgeObjectRelease();
    sub_100007820((uint64_t)&v127);
    a6 = v118;
LABEL_11:
    if (++v25 == v122)
    {
      sub_10000F0D4(v114, v115, v116, 1);
      uint64_t v17 = v145;
      uint64_t v19 = v146;
      goto LABEL_138;
    }
  }
  if (v42)
  {
    if (v47) {
      int v59 = 0x40000000;
    }
    else {
      int v59 = 0;
    }
    goto LABEL_45;
  }
  if (v47) {
    unsigned int v73 = -1073741824;
  }
  else {
    unsigned int v73 = 0x80000000;
  }
  uint64_t v66 = v73 | (v48 << 14) | v43;
  if (!v47) {
    goto LABEL_70;
  }
  __int16 v74 = v142;
  uint64_t v75 = v142[2];
  a6 = v118;
  a8 = v119;
  if (!v75 || (uint64_t v76 = v75 - 1, v66 >= HIDWORD(v142[2 * v75 + 3])))
  {
    swift_bridgeObjectRetain_n();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      __int16 v74 = sub_100015AA0(0, v75 + 1, 1, v74);
    }
    unint64_t v99 = v74[2];
    unint64_t v98 = v74[3];
    if (v99 >= v98 >> 1) {
      __int16 v74 = sub_100015AA0((void *)(v98 > 1), v99 + 1, 1, v74);
    }
    void v74[2] = v99 + 1;
    uint64_t v100 = &v74[2 * v99];
    v100[4] = v39;
    *((_DWORD *)v100 + 10) = v40;
    *((_DWORD *)v100 + 11) = v66;
    sub_100007820((uint64_t)&v127);
    swift_bridgeObjectRelease();
    uint64_t v142 = v74;
    uint64_t v21 = v121;
    goto LABEL_11;
  }
  uint64_t v77 = 0;
  while (!__OFSUB__(v76, v77))
  {
    unint64_t v83 = v77 + (v76 - v77) / 2;
    if (__OFADD__(v77, (v76 - v77) / 2)) {
      goto LABEL_147;
    }
    if (v83 >= v75) {
      goto LABEL_148;
    }
    unsigned int v84 = HIDWORD(v142[2 * v83 + 5]);
    if (v84 < v66)
    {
      uint64_t v77 = v83 + 1;
      if (v76 < (uint64_t)(v83 + 1)) {
        goto LABEL_90;
      }
    }
    else
    {
      if (v66 >= v84) {
        goto LABEL_123;
      }
      uint64_t v76 = v83 - 1;
      if ((uint64_t)(v83 - 1) < v77)
      {
LABEL_90:
        if (v75 < v77) {
          goto LABEL_157;
        }
        if (v77 < 0) {
          goto LABEL_158;
        }
        goto LABEL_112;
      }
    }
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

ValueMetadata *_s15MailboxPriorityVMa()
{
  return &_s15MailboxPriorityVN;
}

uint64_t sub_100059890(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v52 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v6 = a2[6];
    *(void *)(v4 + 40) = a2[5];
    *(void *)(v4 + 48) = v6;
    uint64_t v7 = a2[8];
    *(void *)(v4 + 56) = a2[7];
    *(void *)(v4 + 64) = v7;
    uint64_t v8 = a2[10];
    *(void *)(v4 + 72) = a2[9];
    *(void *)(v4 + 80) = v8;
    uint64_t v9 = a2[12];
    *(void *)(v4 + 88) = a2[11];
    *(void *)(v4 + 96) = v9;
    uint64_t v86 = a2[14];
    *(void *)(v4 + 104) = a2[13];
    *(void *)(v4 + 112) = v86;
    *(unsigned char *)(v4 + 120) = *((unsigned char *)a2 + 120);
    uint64_t v10 = a2[17];
    *(void *)(v4 + 128) = a2[16];
    *(void *)(v4 + 136) = v10;
    *(unsigned char *)(v4 + 148) = *((unsigned char *)a2 + 148);
    *(_DWORD *)(v4 + 144) = *((_DWORD *)a2 + 36);
    uint64_t v11 = a2[20];
    *(void *)(v4 + 152) = a2[19];
    *(void *)(v4 + 160) = v11;
    uint64_t v93 = a2[22];
    *(void *)(v4 + 168) = a2[21];
    *(void *)(v4 + 176) = v93;
    uint64_t v12 = a3[12];
    uint64_t v13 = v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    long long v15 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)(v4 + v12 + 24) = v15;
    uint64_t v89 = v15;
    unsigned int v84 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v84(v13, v14, v89);
    uint64_t v16 = *(void *)(v14 + 40);
    LOBYTE(v9) = *(unsigned char *)(v14 + 48);
    sub_10003C120(v16, v9);
    *(void *)(v13 + 40) = v16;
    *(unsigned char *)(v13 + 48) = v9;
    uint64_t v17 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    unsigned int v94 = a2;
    uint64_t v20 = sub_10000566C(&qword_100709E60);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    v21(v18, v19, v20);
    uint64_t v22 = a3[13];
    uint64_t v23 = v4 + v22;
    *(unsigned char *)uint64_t v23 = *((unsigned char *)v94 + v22);
    uint64_t v24 = (uint64_t)v94 + v22;
    uint64_t v87 = v4 + v22;
    uint64_t v90 = (uint64_t)v94 + v22;
    *(_WORD *)(v23 + 1) = *(_WORD *)((char *)v94 + v22 + 1);
    uint64_t v25 = v4 + v22;
    uint64_t v85 = type metadata accessor for PendingPersistenceUpdates();
    uint64_t v26 = *(int *)(v85 + 28);
    unint64_t v27 = (void *)(v25 + v26);
    uint64_t v28 = v24 + v26;
    *unint64_t v27 = *(void *)(v24 + v26);
    uint64_t v29 = type metadata accessor for MessagesPendingDownload();
    uint64_t v30 = *(int *)(v29 + 20);
    long long v31 = (char *)v27 + v30;
    uint64_t v32 = v28 + v30;
    swift_bridgeObjectRetain();
    v21((uint64_t)v31, v32, v20);
    uint64_t v33 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
    long long v34 = (void *)((char *)v27 + v33);
    long long v35 = (void *)(v28 + v33);
    *long long v34 = *v35;
    uint64_t v36 = *(int *)(v29 + 20);
    long long v37 = (char *)v34 + v36;
    long long v38 = (char *)v35 + v36;
    swift_bridgeObjectRetain();
    v21((uint64_t)v37, (uint64_t)v38, v20);
    uint64_t v39 = *(int *)(v85 + 32);
    uint64_t v40 = v87 + v39;
    uint64_t v41 = v90 + v39;
    uint64_t v88 = (void (*)(char *, char *, uint64_t))v21;
    uint64_t v91 = v20;
    uint64_t v42 = v20;
    int v43 = v94;
    v21(v40, v41, v42);
    uint64_t v44 = a3[15];
    *(void *)(v4 + a3[14]) = *(uint64_t *)((char *)v94 + a3[14]);
    char v45 = (void *)(v4 + v44);
    __int16 v46 = (uint64_t *)((char *)v94 + v44);
    uint64_t v47 = type metadata accessor for MessageBatches(0);
    uint64_t v48 = *(void *)(v47 - 8);
    unint64_t v49 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v48 + 48);
    swift_bridgeObjectRetain();
    if (v49(v46, 1, v47))
    {
      uint64_t v50 = sub_10000566C(&qword_10070A338);
      memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
      char v51 = a3;
    }
    else
    {
      uint64_t v53 = v46[1];
      *char v45 = *v46;
      v45[1] = v53;
      uint64_t v54 = *(int *)(v47 + 24);
      unint64_t v55 = (char *)v45 + v54;
      int v56 = (char *)v46 + v54;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_10000566C(&qword_100709E30);
      uint64_t v58 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        uint64_t v59 = sub_10000566C(&qword_10070A000);
        memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        v88(v55, v56, v91);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      char v51 = a3;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    uint64_t v60 = v51[16];
    uint64_t v61 = (char *)(v4 + v60);
    uint64_t v62 = (char *)v94 + v60;
    uint64_t v63 = type metadata accessor for NewestMessages();
    uint64_t v64 = *(void *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      uint64_t v65 = sub_10000566C(&qword_10070A390);
      memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      v88(v61, v62, v91);
      *(void *)&v61[*(int *)(v63 + 20)] = *(void *)&v62[*(int *)(v63 + 20)];
      *(void *)&v61[*(int *)(v63 + 24)] = *(void *)&v62[*(int *)(v63 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    }
    uint64_t v66 = v51[17];
    uint64_t v67 = (char *)(v4 + v66);
    uint64_t v68 = (char *)v94 + v66;
    uint64_t v69 = _s15MissingMessagesOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
      v67[4] = v68[4];
      uint64_t v79 = _s15MissingMessagesO8CompleteVMa(0);
      v88(&v67[*(int *)(v79 + 20)], &v68[*(int *)(v79 + 20)], v91);
      v67[*(int *)(v79 + 24)] = v68[*(int *)(v79 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      v88(v67, v68, v91);
      uint64_t v71 = _s15MissingMessagesO8ProgressVMa(0);
      v88(&v67[*(int *)(v71 + 20)], &v68[*(int *)(v71 + 20)], v91);
      uint64_t v72 = *(int *)(v71 + 24);
      unsigned int v73 = &v67[v72];
      __int16 v74 = &v68[v72];
      *(_DWORD *)unsigned int v73 = *(_DWORD *)v74;
      v73[4] = v74[4];
      uint64_t v75 = _s15MissingMessagesO10IncompleteVMa(0);
      uint64_t v76 = *(int *)(v75 + 20);
      uint64_t v77 = &v67[v76];
      long long v78 = &v68[v76];
      *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
      v77[4] = v78[4];
      int v43 = v94;
      v88(&v67[*(int *)(v75 + 24)], &v68[*(int *)(v75 + 24)], v91);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v80 = v51[18];
    uint64_t v81 = v4 + v80;
    uint64_t v82 = (uint64_t)v43 + v80;
    *(void *)uint64_t v81 = *(void *)v82;
    *(_WORD *)(v81 + 8) = *(_WORD *)(v82 + 8);
  }
  return v4;
}

uint64_t sub_10005A04C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[12];
  _s13IMAP2Behavior4TaskOwxx_0(v4);
  sub_10005A3F4(*(void *)(v4 + 40), *(unsigned char *)(v4 + 48));
  uint64_t v5 = v4 + *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v25)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + a2[13];
  uint64_t v8 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v9 = v7 + *(int *)(v8 + 28);
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for MessagesPendingDownload();
  v25(v9 + *(int *)(v10 + 20), v6);
  uint64_t v11 = v9 + *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  swift_bridgeObjectRelease();
  v25(v11 + *(int *)(v10 + 20), v6);
  v25(v7 + *(int *)(v8 + 32), v6);
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[15];
  uint64_t v13 = type metadata accessor for MessageBatches(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v12 + *(int *)(v13 + 24);
    uint64_t v15 = sub_10000566C(&qword_100709E30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15)) {
      v25(v14, v6);
    }
  }
  uint64_t v16 = a1 + a2[16];
  uint64_t v17 = type metadata accessor for NewestMessages();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17)) {
    v25(v16, v6);
  }
  uint64_t v18 = a1 + a2[17];
  _s15MissingMessagesOMa(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v21 = _s15MissingMessagesO8CompleteVMa(0);
    uint64_t v23 = 5;
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))v25;
  }
  else
  {
    if (result) {
      return result;
    }
    v25(v18, v6);
    uint64_t v20 = _s15MissingMessagesO8ProgressVMa(0);
    v25(v18 + *(int *)(v20 + 20), v6);
    uint64_t v21 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))v25;
    uint64_t v23 = 6;
  }
  uint64_t v24 = v18 + *(int *)(v21 + 4 * v23);
  return v22(v24, v6);
}

uint64_t sub_10005A3F4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10005A400(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v84 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v84;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  uint64_t v10 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v10;
  uint64_t v90 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v90;
  uint64_t v11 = a3[12];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v14;
  uint64_t v87 = v14;
  uint64_t v82 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v82(v12, v13, v87);
  uint64_t v15 = *(void *)(v13 + 40);
  LOBYTE(v8) = *(unsigned char *)(v13 + 48);
  sub_10003C120(v15, v8);
  *(void *)(v12 + 40) = v15;
  *(unsigned char *)(v12 + 48) = v8;
  uint64_t v16 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v17 = v12 + v16;
  uint64_t v18 = v13 + v16;
  uint64_t v19 = sub_10000566C(&qword_100709E60);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  uint64_t v21 = a3[13];
  uint64_t v22 = a1 + v21;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)(a2 + v21);
  uint64_t v23 = a2 + v21;
  uint64_t v85 = a1 + v21;
  uint64_t v88 = a2 + v21;
  *(_WORD *)(v22 + 1) = *(_WORD *)(a2 + v21 + 1);
  uint64_t v24 = a1 + v21;
  uint64_t v83 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v25 = *(int *)(v83 + 28);
  uint64_t v26 = (void *)(v24 + v25);
  uint64_t v27 = v23 + v25;
  *uint64_t v26 = *(void *)(v23 + v25);
  uint64_t v28 = type metadata accessor for MessagesPendingDownload();
  uint64_t v29 = *(int *)(v28 + 20);
  uint64_t v30 = (char *)v26 + v29;
  uint64_t v31 = v27 + v29;
  swift_bridgeObjectRetain();
  v20((uint64_t)v30, v31, v19);
  uint64_t v32 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v33 = (void *)((char *)v26 + v32);
  long long v34 = (void *)(v27 + v32);
  void *v33 = *v34;
  uint64_t v35 = *(int *)(v28 + 20);
  uint64_t v36 = (char *)v33 + v35;
  long long v37 = (char *)v34 + v35;
  swift_bridgeObjectRetain();
  v20((uint64_t)v36, (uint64_t)v37, v19);
  uint64_t v38 = *(int *)(v83 + 32);
  uint64_t v39 = v85 + v38;
  uint64_t v86 = v19;
  v20(v39, v88 + v38, v19);
  uint64_t v40 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  uint64_t v43 = type metadata accessor for MessageBatches(0);
  uint64_t v44 = *(void *)(v43 - 8);
  char v45 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v44 + 48);
  swift_bridgeObjectRetain();
  if (v45(v42, 1, v43))
  {
    uint64_t v46 = sub_10000566C(&qword_10070A338);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    uint64_t v47 = v86;
  }
  else
  {
    uint64_t v48 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v48;
    uint64_t v49 = *(int *)(v43 + 24);
    uint64_t v50 = (char *)v41 + v49;
    char v51 = (char *)v42 + v49;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_10000566C(&qword_100709E30);
    uint64_t v53 = *(void *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      uint64_t v54 = sub_10000566C(&qword_10070A000);
      memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
      uint64_t v47 = v86;
    }
    else
    {
      unint64_t v55 = v50;
      int v56 = v51;
      uint64_t v57 = v50;
      uint64_t v47 = v86;
      v20((uint64_t)v55, (uint64_t)v56, v86);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v57, 0, 1, v52);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  uint64_t v58 = a3[16];
  uint64_t v59 = (char *)(a1 + v58);
  uint64_t v60 = (char *)(a2 + v58);
  uint64_t v61 = type metadata accessor for NewestMessages();
  uint64_t v62 = *(void *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
  {
    uint64_t v63 = sub_10000566C(&qword_10070A390);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    v20((uint64_t)v59, (uint64_t)v60, v47);
    *(void *)&v59[*(int *)(v61 + 20)] = *(void *)&v60[*(int *)(v61 + 20)];
    *(void *)&v59[*(int *)(v61 + 24)] = *(void *)&v60[*(int *)(v61 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  uint64_t v64 = a3[17];
  uint64_t v65 = (char *)(a1 + v64);
  uint64_t v66 = (char *)(a2 + v64);
  uint64_t v67 = _s15MissingMessagesOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    uint64_t v77 = _s15MissingMessagesO8CompleteVMa(0);
    v20((uint64_t)&v65[*(int *)(v77 + 20)], (uint64_t)&v66[*(int *)(v77 + 20)], v47);
    v65[*(int *)(v77 + 24)] = v66[*(int *)(v77 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    v20((uint64_t)v65, (uint64_t)v66, v47);
    uint64_t v69 = _s15MissingMessagesO8ProgressVMa(0);
    v20((uint64_t)&v65[*(int *)(v69 + 20)], (uint64_t)&v66[*(int *)(v69 + 20)], v47);
    uint64_t v70 = *(int *)(v69 + 24);
    uint64_t v71 = &v65[v70];
    uint64_t v72 = &v66[v70];
    *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
    v71[4] = v72[4];
    uint64_t v73 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v74 = *(int *)(v73 + 20);
    uint64_t v75 = &v65[v74];
    uint64_t v76 = &v66[v74];
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v76;
    v75[4] = v76[4];
    v20((uint64_t)&v65[*(int *)(v73 + 24)], (uint64_t)&v66[*(int *)(v73 + 24)], v47);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v78 = a3[18];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  *(void *)uint64_t v79 = *(void *)v80;
  *(_WORD *)(v79 + 8) = *(_WORD *)(v80 + 8);
  return a1;
}

uint64_t sub_10005AB78(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  int v6 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v6;
  int v7 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(unsigned char *)(a1 + 147) = *(unsigned char *)(a2 + 147);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[12];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  sub_100022498((uint64_t *)(a1 + v9), (uint64_t *)(a2 + v9));
  uint64_t v12 = *(void *)(v11 + 40);
  char v13 = *(unsigned char *)(v11 + 48);
  sub_10003C120(v12, v13);
  uint64_t v14 = *(void *)(v10 + 40);
  char v15 = *(unsigned char *)(v10 + 48);
  *(void *)(v10 + 40) = v12;
  *(unsigned char *)(v10 + 48) = v13;
  sub_10005A3F4(v14, v15);
  uint64_t v16 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v17 = v10 + v16;
  uint64_t v18 = v11 + v16;
  uint64_t v19 = sub_10000566C(&qword_100709E60);
  uint64_t v88 = *(void *)(v19 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 24);
  v20(v17, v18, v19);
  uint64_t v91 = v20;
  uint64_t v21 = a3[13];
  uint64_t v22 = (unsigned char *)(a1 + v21);
  uint64_t v23 = a2 + v21;
  unsigned char *v22 = *(unsigned char *)(a2 + v21);
  v22[1] = *(unsigned char *)(a2 + v21 + 1);
  v22[2] = *(unsigned char *)(a2 + v21 + 2);
  uint64_t v89 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v24 = *(int *)(v89 + 28);
  uint64_t v25 = &v22[v24];
  uint64_t v26 = v23 + v24;
  *(void *)&v22[v24] = *(void *)(v23 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = type metadata accessor for MessagesPendingDownload();
  v20((uint64_t)&v25[*(int *)(v27 + 20)], v26 + *(int *)(v27 + 20), v19);
  uint64_t v28 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v29 = &v25[v28];
  uint64_t v30 = (char *)(v26 + v28);
  *(void *)&v25[v28] = *(void *)v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v91((uint64_t)&v29[*(int *)(v27 + 20)], (uint64_t)&v30[*(int *)(v27 + 20)], v19);
  uint64_t v31 = *(int *)(v89 + 32);
  uint64_t v90 = v19;
  v91((uint64_t)&v22[v31], v23 + v31, v19);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[15];
  uint64_t v33 = (char *)(a1 + v32);
  long long v34 = (char *)(a2 + v32);
  uint64_t v35 = type metadata accessor for MessageBatches(0);
  uint64_t v36 = *(void *)(v35 - 8);
  long long v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  LODWORD(v23) = v37(v33, 1, v35);
  int v38 = v37(v34, 1, v35);
  if (!v23)
  {
    if (!v38)
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = *((void *)v34 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v48 = *(int *)(v35 + 24);
      uint64_t v49 = (uint64_t)&v33[v48];
      uint64_t v50 = &v34[v48];
      uint64_t v51 = sub_10000566C(&qword_100709E30);
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
      int v54 = v53(v49, 1, v51);
      int v55 = v53((uint64_t)v50, 1, v51);
      if (v54)
      {
        if (!v55)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v49, v50, v90);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v55)
        {
          v91(v49, (uint64_t)v50, v90);
          goto LABEL_14;
        }
        sub_100007A48(v49, &qword_100709E30);
      }
      size_t v45 = *(void *)(*(void *)(sub_10000566C(&qword_10070A000) - 8) + 64);
      uint64_t v46 = (void *)v49;
      uint64_t v47 = v50;
LABEL_8:
      memcpy(v46, v47, v45);
      goto LABEL_14;
    }
    sub_100061A50((uint64_t)v33, type metadata accessor for MessageBatches);
LABEL_7:
    size_t v45 = *(void *)(*(void *)(sub_10000566C(&qword_10070A338) - 8) + 64);
    uint64_t v46 = v33;
    uint64_t v47 = v34;
    goto LABEL_8;
  }
  if (v38) {
    goto LABEL_7;
  }
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  uint64_t v39 = *(int *)(v35 + 24);
  uint64_t v40 = &v33[v39];
  uint64_t v41 = &v34[v39];
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_10000566C(&qword_100709E30);
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_10000566C(&qword_10070A000);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v40, v41, v90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
LABEL_14:
  uint64_t v56 = a3[16];
  uint64_t v57 = (char *)(a1 + v56);
  uint64_t v58 = (char *)(a2 + v56);
  uint64_t v59 = type metadata accessor for NewestMessages();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  int v62 = v61(v57, 1, v59);
  int v63 = v61(v58, 1, v59);
  if (!v62)
  {
    if (!v63)
    {
      v91((uint64_t)v57, (uint64_t)v58, v90);
      *(void *)&v57[*(int *)(v59 + 20)] = *(void *)&v58[*(int *)(v59 + 20)];
      *(void *)&v57[*(int *)(v59 + 24)] = *(void *)&v58[*(int *)(v59 + 24)];
      if (a1 == a2) {
        goto LABEL_27;
      }
      goto LABEL_21;
    }
    sub_100061A50((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for NewestMessages);
LABEL_20:
    uint64_t v64 = sub_10000566C(&qword_10070A390);
    memcpy(v57, v58, *(void *)(*(void *)(v64 - 8) + 64));
    if (a1 == a2) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  if (v63) {
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v57, v58, v90);
  *(void *)&v57[*(int *)(v59 + 20)] = *(void *)&v58[*(int *)(v59 + 20)];
  *(void *)&v57[*(int *)(v59 + 24)] = *(void *)&v58[*(int *)(v59 + 24)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  if (a1 == a2) {
    goto LABEL_27;
  }
LABEL_21:
  uint64_t v65 = a3[17];
  uint64_t v66 = (unsigned char *)(a1 + v65);
  uint64_t v67 = (char *)(a2 + v65);
  sub_100061A50(a1 + v65, _s15MissingMessagesOMa);
  uint64_t v68 = _s15MissingMessagesOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    int v81 = *(_DWORD *)v67;
    v66[4] = v67[4];
    *(_DWORD *)uint64_t v66 = v81;
    uint64_t v82 = _s15MissingMessagesO8CompleteVMa(0);
    (*(void (**)(unsigned char *, char *, uint64_t))(v88 + 16))(&v66[*(int *)(v82 + 20)], &v67[*(int *)(v82 + 20)], v90);
    v66[*(int *)(v82 + 24)] = v67[*(int *)(v82 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    uint64_t v70 = *(void (**)(unsigned char *, char *, uint64_t))(v88 + 16);
    v70(v66, v67, v90);
    uint64_t v71 = _s15MissingMessagesO8ProgressVMa(0);
    v70(&v66[*(int *)(v71 + 20)], &v67[*(int *)(v71 + 20)], v90);
    uint64_t v72 = *(int *)(v71 + 24);
    uint64_t v73 = &v66[v72];
    uint64_t v74 = &v67[v72];
    char v75 = v74[4];
    *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
    v73[4] = v75;
    uint64_t v76 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v77 = *(int *)(v76 + 20);
    uint64_t v78 = &v66[v77];
    uint64_t v79 = &v67[v77];
    char v80 = v79[4];
    *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
    v78[4] = v80;
    v70(&v66[*(int *)(v76 + 24)], &v67[*(int *)(v76 + 24)], v90);
    swift_storeEnumTagMultiPayload();
  }
LABEL_27:
  uint64_t v83 = a3[18];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = (uint64_t *)(a2 + v83);
  uint64_t v86 = *v85;
  *(_WORD *)(v84 + 8) = *((_WORD *)v85 + 4);
  *(void *)uint64_t v84 = v86;
  return a1;
}

uint64_t sub_10005B59C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 40) = v5;
  long long v7 = *(_OWORD *)(a2 + 88);
  long long v8 = *(_OWORD *)(a2 + 104);
  long long v9 = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v9;
  *(_OWORD *)(a1 + 104) = v8;
  *(_OWORD *)(a1 + 88) = v7;
  int v10 = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  uint64_t v12 = a3[12];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v14 + 16) = v16;
  uint64_t v17 = *(void *)(a2 + v12 + 40);
  *(void *)(v14 + 32) = *(void *)(a2 + v12 + 32);
  *(void *)(v14 + 40) = v17;
  *(unsigned char *)(v14 + 48) = *(unsigned char *)(a2 + v12 + 48);
  uint64_t v18 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v19 = v14 + v18;
  uint64_t v20 = v15 + v18;
  uint64_t v21 = sub_10000566C(&qword_100709E60);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32);
  v22(v19, v20, v21);
  uint64_t v23 = a3[13];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)(a2 + v23);
  *(_WORD *)(v24 + 1) = *(_WORD *)(a2 + v23 + 1);
  uint64_t v73 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v26 = *(int *)(v73 + 28);
  uint64_t v27 = v24 + v26;
  uint64_t v28 = v25 + v26;
  *(void *)(v24 + v26) = *(void *)(v25 + v26);
  uint64_t v29 = type metadata accessor for MessagesPendingDownload();
  v22(v27 + *(int *)(v29 + 20), v28 + *(int *)(v29 + 20), v21);
  uint64_t v30 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v31 = (void *)(v27 + v30);
  uint64_t v32 = (void (*)(char *, char *, uint64_t))v22;
  uint64_t v33 = (void *)(v28 + v30);
  *uint64_t v31 = *v33;
  v22((uint64_t)v31 + *(int *)(v29 + 20), (uint64_t)v33 + *(int *)(v29 + 20), v21);
  uint64_t v34 = *(int *)(v73 + 32);
  uint64_t v74 = v21;
  v22(v24 + v34, v25 + v34, v21);
  uint64_t v35 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v36 = (_OWORD *)(a1 + v35);
  long long v37 = (_OWORD *)(a2 + v35);
  uint64_t v38 = type metadata accessor for MessageBatches(0);
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    uint64_t v40 = sub_10000566C(&qword_10070A338);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    *uint64_t v36 = *v37;
    uint64_t v41 = *(int *)(v38 + 24);
    __dst = (char *)v36 + v41;
    uint64_t v71 = v32;
    uint64_t v42 = (char *)v37 + v41;
    uint64_t v43 = sub_10000566C(&qword_100709E30);
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      uint64_t v45 = sub_10000566C(&qword_10070A000);
      memcpy(__dst, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      v71(__dst, v42, v74);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 1, v43);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    uint64_t v32 = v71;
  }
  uint64_t v46 = a3[16];
  uint64_t v47 = (char *)(a1 + v46);
  uint64_t v48 = (char *)(a2 + v46);
  uint64_t v49 = type metadata accessor for NewestMessages();
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    uint64_t v51 = sub_10000566C(&qword_10070A390);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    v32(v47, v48, v74);
    *(void *)&v47[*(int *)(v49 + 20)] = *(void *)&v48[*(int *)(v49 + 20)];
    *(void *)&v47[*(int *)(v49 + 24)] = *(void *)&v48[*(int *)(v49 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  uint64_t v52 = a3[17];
  uint64_t v53 = (char *)(a1 + v52);
  int v54 = (char *)(a2 + v52);
  uint64_t v55 = _s15MissingMessagesOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
    IMAP2Persistence::CredentialsRequestID v53[4] = v54[4];
    uint64_t v65 = _s15MissingMessagesO8CompleteVMa(0);
    v32(&v53[*(int *)(v65 + 20)], &v54[*(int *)(v65 + 20)], v74);
    v53[*(int *)(v65 + 24)] = v54[*(int *)(v65 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    v32(v53, v54, v74);
    uint64_t v57 = _s15MissingMessagesO8ProgressVMa(0);
    v32(&v53[*(int *)(v57 + 20)], &v54[*(int *)(v57 + 20)], v74);
    uint64_t v58 = *(int *)(v57 + 24);
    uint64_t v59 = &v53[v58];
    uint64_t v60 = &v54[v58];
    *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
    v59[4] = v60[4];
    uint64_t v61 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v62 = *(int *)(v61 + 20);
    int v63 = &v53[v62];
    uint64_t v64 = &v54[v62];
    *(_DWORD *)int v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    v32(&v53[*(int *)(v61 + 24)], &v54[*(int *)(v61 + 24)], v74);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v66 = a3[18];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  *(void *)uint64_t v67 = *(void *)v68;
  *(_WORD *)(v67 + 8) = *(_WORD *)(v68 + 8);
  return a1;
}

uint64_t sub_10005BBE8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(unsigned char *)(a1 + 147) = *(unsigned char *)(a2 + 147);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[12];
  int v10 = a3;
  uint64_t v92 = a3;
  uint64_t v11 = a1 + v9;
  uint64_t v12 = a2 + v9;
  _s13IMAP2Behavior4TaskOwxx_0(a1 + v9);
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  uint64_t v14 = *(void *)(v12 + 40);
  char v15 = *(unsigned char *)(v12 + 48);
  uint64_t v16 = *(void *)(v11 + 40);
  char v17 = *(unsigned char *)(v11 + 48);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(v11 + 40) = v14;
  *(unsigned char *)(v11 + 48) = v15;
  sub_10005A3F4(v16, v17);
  uint64_t v18 = *(int *)(type metadata accessor for PendingServerResponses() + 24);
  uint64_t v19 = v11 + v18;
  uint64_t v20 = v12 + v18;
  uint64_t v21 = sub_10000566C(&qword_100709E60);
  uint64_t v89 = *(void *)(v21 - 8);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 40);
  v22(v19, v20, v21);
  uint64_t v23 = v10[13];
  uint64_t v24 = (unsigned char *)(a1 + v23);
  uint64_t v25 = a2 + v23;
  *uint64_t v24 = *(unsigned char *)(a2 + v23);
  v24[1] = *(unsigned char *)(a2 + v23 + 1);
  v24[2] = *(unsigned char *)(a2 + v23 + 2);
  uint64_t v90 = type metadata accessor for PendingPersistenceUpdates();
  uint64_t v26 = *(int *)(v90 + 28);
  uint64_t v27 = &v24[v26];
  uint64_t v28 = v25 + v26;
  *(void *)&v24[v26] = *(void *)(v25 + v26);
  swift_bridgeObjectRelease();
  uint64_t v29 = type metadata accessor for MessagesPendingDownload();
  v22((uint64_t)&v27[*(int *)(v29 + 20)], v28 + *(int *)(v29 + 20), v21);
  uint64_t v30 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v31 = &v27[v30];
  uint64_t v32 = (void *)(v28 + v30);
  *uint64_t v31 = *v32;
  swift_bridgeObjectRelease();
  v22((uint64_t)v31 + *(int *)(v29 + 20), (uint64_t)v32 + *(int *)(v29 + 20), v21);
  uint64_t v33 = *(int *)(v90 + 32);
  uint64_t v91 = v21;
  v22((uint64_t)&v24[v33], v25 + v33, v21);
  uint64_t v34 = (void (*)(uint64_t, char *, uint64_t))v22;
  uint64_t v35 = a2;
  *(void *)(a1 + v92[14]) = *(void *)(a2 + v92[14]);
  swift_bridgeObjectRelease();
  uint64_t v36 = v92[15];
  long long v37 = (char *)(a1 + v36);
  uint64_t v38 = (char *)(v35 + v36);
  uint64_t v39 = type metadata accessor for MessageBatches(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  LODWORD(v31) = v41(v37, 1, v39);
  int v42 = v41(v38, 1, v39);
  if (!v31)
  {
    if (!v42)
    {
      uint64_t v52 = *((void *)v38 + 1);
      *(void *)long long v37 = *(void *)v38;
      *((void *)v37 + 1) = v52;
      swift_bridgeObjectRelease();
      uint64_t v53 = *(int *)(v39 + 24);
      uint64_t v54 = (uint64_t)&v37[v53];
      uint64_t v55 = &v38[v53];
      uint64_t v56 = sub_10000566C(&qword_100709E30);
      uint64_t v57 = *(void *)(v56 - 8);
      uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
      int v59 = v58(v54, 1, v56);
      int v60 = v58((uint64_t)v55, 1, v56);
      if (v59)
      {
        if (!v60)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v54, v55, v91);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v60)
        {
          v34(v54, v55, v91);
          goto LABEL_14;
        }
        sub_100007A48(v54, &qword_100709E30);
      }
      size_t v49 = *(void *)(*(void *)(sub_10000566C(&qword_10070A000) - 8) + 64);
      uint64_t v50 = (void *)v54;
      uint64_t v51 = v55;
LABEL_8:
      memcpy(v50, v51, v49);
      goto LABEL_14;
    }
    sub_100061A50((uint64_t)v37, type metadata accessor for MessageBatches);
LABEL_7:
    size_t v49 = *(void *)(*(void *)(sub_10000566C(&qword_10070A338) - 8) + 64);
    uint64_t v50 = v37;
    uint64_t v51 = v38;
    goto LABEL_8;
  }
  if (v42) {
    goto LABEL_7;
  }
  *(_OWORD *)long long v37 = *(_OWORD *)v38;
  uint64_t v43 = *(int *)(v39 + 24);
  uint64_t v44 = &v37[v43];
  uint64_t v45 = &v38[v43];
  uint64_t v46 = sub_10000566C(&qword_100709E30);
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    uint64_t v48 = sub_10000566C(&qword_10070A000);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v44, v45, v91);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_14:
  uint64_t v61 = v92[16];
  uint64_t v62 = (char *)(a1 + v61);
  int v63 = (char *)(v35 + v61);
  uint64_t v64 = type metadata accessor for NewestMessages();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  int v67 = v66(v62, 1, v64);
  int v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (!v68)
    {
      v34((uint64_t)v62, v63, v91);
      *(void *)&v62[*(int *)(v64 + 20)] = *(void *)&v63[*(int *)(v64 + 20)];
      *(void *)&v62[*(int *)(v64 + 24)] = *(void *)&v63[*(int *)(v64 + 24)];
      if (a1 == v35) {
        goto LABEL_27;
      }
      goto LABEL_21;
    }
    sub_100061A50((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for NewestMessages);
LABEL_20:
    uint64_t v69 = sub_10000566C(&qword_10070A390);
    memcpy(v62, v63, *(void *)(*(void *)(v69 - 8) + 64));
    if (a1 == v35) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  if (v68) {
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v62, v63, v91);
  *(void *)&v62[*(int *)(v64 + 20)] = *(void *)&v63[*(int *)(v64 + 20)];
  *(void *)&v62[*(int *)(v64 + 24)] = *(void *)&v63[*(int *)(v64 + 24)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  if (a1 == v35) {
    goto LABEL_27;
  }
LABEL_21:
  uint64_t v70 = v92[17];
  uint64_t v71 = (char *)(a1 + v70);
  uint64_t v72 = (char *)(v35 + v70);
  sub_100061A50(a1 + v70, _s15MissingMessagesOMa);
  uint64_t v73 = _s15MissingMessagesOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
    v71[4] = v72[4];
    uint64_t v84 = _s15MissingMessagesO8CompleteVMa(0);
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(&v71[*(int *)(v84 + 20)], &v72[*(int *)(v84 + 20)], v91);
    v71[*(int *)(v84 + 24)] = v72[*(int *)(v84 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    char v75 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
    v75(v71, v72, v91);
    uint64_t v76 = _s15MissingMessagesO8ProgressVMa(0);
    v75(&v71[*(int *)(v76 + 20)], &v72[*(int *)(v76 + 20)], v91);
    uint64_t v77 = *(int *)(v76 + 24);
    uint64_t v78 = &v71[v77];
    uint64_t v79 = &v72[v77];
    *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
    v78[4] = v79[4];
    uint64_t v80 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v81 = *(int *)(v80 + 20);
    uint64_t v82 = &v71[v81];
    uint64_t v83 = &v72[v81];
    *(_DWORD *)uint64_t v82 = *(_DWORD *)v83;
    v82[4] = v83[4];
    v75(&v71[*(int *)(v80 + 24)], &v72[*(int *)(v80 + 24)], v91);
    swift_storeEnumTagMultiPayload();
  }
LABEL_27:
  uint64_t v85 = v92[18];
  uint64_t v86 = a1 + v85;
  uint64_t v87 = v35 + v85;
  *(void *)uint64_t v86 = *(void *)v87;
  *(_WORD *)(v86 + 8) = *(_WORD *)(v87 + 8);
  return a1;
}

uint64_t sub_10005C560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005C574);
}

uint64_t sub_10005C574(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for PendingServerResponses();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[12];
LABEL_13:
    char v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v15(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for PendingPersistenceUpdates();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[13];
    goto LABEL_13;
  }
  uint64_t v13 = sub_10000566C(&qword_10070A338);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[15];
    goto LABEL_13;
  }
  uint64_t v14 = sub_10000566C(&qword_10070A390);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[16];
    goto LABEL_13;
  }
  uint64_t v16 = _s15MissingMessagesOMa(0);
  char v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[17];
  return v17(v19, a2, v18);
}

uint64_t sub_10005C78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005C7A0);
}

uint64_t sub_10005C7A0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for PendingServerResponses();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[12];
LABEL_11:
    char v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v15(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for PendingPersistenceUpdates();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[13];
    goto LABEL_11;
  }
  uint64_t v13 = sub_10000566C(&qword_10070A338);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[15];
    goto LABEL_11;
  }
  uint64_t v14 = sub_10000566C(&qword_10070A390);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[16];
    goto LABEL_11;
  }
  uint64_t v16 = _s15MissingMessagesOMa(0);
  char v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = v5 + a4[17];
  return v17(v19, a2, a2, v18);
}

uint64_t type metadata accessor for MailboxSyncState()
{
  uint64_t result = qword_10070A818;
  if (!qword_10070A818) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005CA04()
{
  type metadata accessor for PendingServerResponses();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PendingPersistenceUpdates();
    if (v1 <= 0x3F)
    {
      sub_10005CC14(319, &qword_10070A828, (void (*)(uint64_t))type metadata accessor for MessageBatches);
      if (v2 <= 0x3F)
      {
        sub_10005CC14(319, (unint64_t *)&unk_10070A830, (void (*)(uint64_t))type metadata accessor for NewestMessages);
        if (v3 <= 0x3F)
        {
          _s15MissingMessagesOMa(319);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_10005CC14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1005E28C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10005CC68()
{
  uint64_t v1 = 0;
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v20 = v0[21];
  uint64_t v4 = v2 + 56;
  uint64_t v5 = v3 + 56;
  do
  {
    unsigned __int8 v6 = *((unsigned char *)&off_1006B9EE0 + v1 + 32);
    if (!sub_100010180(v6, v2) || sub_100010180(v6, v3)) {
      return 1;
    }
    uint64_t v7 = 0;
    ++v1;
    while (*(void *)(v2 + 16))
    {
      Swift::UInt v8 = *((unsigned __int8 *)&off_1006B9F08 + v7 + 32);
      sub_1005E33F0();
      sub_1005E3410(v8);
      Swift::Int v9 = sub_1005E3470();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        break;
      }
      uint64_t v12 = *(void *)(v2 + 48);
      if (*(unsigned __int8 *)(v12 + v11) != v8)
      {
        uint64_t v13 = ~v10;
        do
        {
          unint64_t v11 = (v11 + 1) & v13;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            goto LABEL_3;
          }
        }
        while (*(unsigned __int8 *)(v12 + v11) != v8);
      }
      if (*(void *)(v3 + 16))
      {
        sub_1005E33F0();
        sub_1005E3410(v8);
        Swift::Int v14 = sub_1005E3470();
        uint64_t v15 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v16 = v14 & ~v15;
        if ((*(void *)(v5 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
        {
          uint64_t v17 = *(void *)(v3 + 48);
          if (*(unsigned __int8 *)(v17 + v16) == v8) {
            break;
          }
          uint64_t v18 = ~v15;
          while (1)
          {
            unint64_t v16 = (v16 + 1) & v18;
            if (((*(void *)(v5 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v17 + v16) == v8) {
              goto LABEL_3;
            }
          }
        }
      }
      if (++v7 == 15)
      {
        if (sub_100010180(v6, v20)) {
          return 1;
        }
        break;
      }
    }
LABEL_3:
    ;
  }
  while (v1 != 7);
  return 0;
}

uint64_t sub_10005CE54(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v6) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v6) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v2 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v6) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v2 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v6) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v2 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(a1 + 48);
    Swift::Int v12 = *(unsigned __int8 *)(v11 + v10);
    sub_1000935B0(*(unsigned char *)(v11 + v10));
    uint64_t result = sub_100019080(&v16, v12);
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v6) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v2 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v6) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v2 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10005CFD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v38 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v4);
  uint64_t v41 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for MailboxSyncState();
  uint64_t v6 = __chkstk_darwin(v40);
  uint64_t v42 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v36 - v8;
  uint64_t v11 = v1[19];
  uint64_t v10 = v1[20];
  uint64_t v39 = v1[21];
  if (sub_100010180(0xCu, v11) && !sub_100010180(0xCu, v10))
  {
    uint64_t v37 = 15;
    uint64_t v15 = 0;
    uint64_t v16 = v11 + 56;
    uint64_t v17 = v10 + 56;
    while (*(void *)(v11 + 16))
    {
      Swift::UInt v18 = *((unsigned __int8 *)&off_1006B9EB0 + v15 + 32);
      uint64_t v19 = v17;
      sub_1005E33F0();
      sub_1005E3410(v18);
      Swift::Int v20 = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v22 = v20 & ~v21;
      if (((*(void *)(v16 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        break;
      }
      uint64_t v17 = v19;
      uint64_t v23 = *(void *)(v11 + 48);
      if (*(unsigned __int8 *)(v23 + v22) != v18)
      {
        uint64_t v24 = ~v21;
        do
        {
          unint64_t v22 = (v22 + 1) & v24;
          if (((*(void *)(v16 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            goto LABEL_22;
          }
        }
        while (*(unsigned __int8 *)(v23 + v22) != v18);
      }
      if (*(void *)(v10 + 16))
      {
        sub_1005E33F0();
        sub_1005E3410(v18);
        Swift::Int v25 = sub_1005E3470();
        uint64_t v17 = v19;
        uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v27 = v25 & ~v26;
        if ((*(void *)(v19 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27))
        {
          uint64_t v28 = *(void *)(v10 + 48);
          if (*(unsigned __int8 *)(v28 + v27) == v18) {
            break;
          }
          uint64_t v29 = ~v26;
          while (1)
          {
            unint64_t v27 = (v27 + 1) & v29;
            if (((*(void *)(v19 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v28 + v27) == v18) {
              goto LABEL_22;
            }
          }
        }
      }
      if (++v15 == v37)
      {
        if (sub_100010180(0xCu, v39)) {
          goto LABEL_3;
        }
        break;
      }
    }
LABEL_22:
    sub_100061980((uint64_t)v1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    uint64_t v30 = v41;
    sub_100061980((uint64_t)&v9[*(int *)(v40 + 68)], v41, _s15MissingMessagesOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1) {
        sub_100061A50(v30, _s15MissingMessagesOMa);
      }
      sub_100061A50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    }
    else
    {
      uint64_t v32 = v38;
      sub_1000619E8(v30, v38, _s15MissingMessagesO10IncompleteVMa);
      uint64_t v33 = sub_100071520();
      char v35 = v34;
      sub_100061A50(v32, _s15MissingMessagesO10IncompleteVMa);
      sub_100061A50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
      if ((v35 & 1) == 0)
      {
        uint64_t v12 = v42;
        sub_100061980((uint64_t)v1, v42, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
        if (v33) {
          goto LABEL_4;
        }
LABEL_27:
        char v13 = sub_10005CC68() ^ 1;
        goto LABEL_5;
      }
    }
    uint64_t v12 = v42;
    sub_100061980((uint64_t)v1, v42, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
    goto LABEL_27;
  }
LABEL_3:
  sub_100061980((uint64_t)v1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  sub_100061A50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  uint64_t v12 = v42;
  sub_100061980((uint64_t)v1, v42, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
LABEL_4:
  char v13 = 0;
LABEL_5:
  sub_100061A50(v12, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
  return v13 & 1;
}

uint64_t sub_10005D4A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a3;
  uint64_t v6 = a3 + 8;
  uint64_t v7 = a3 + 16;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 1;
  uint64_t v8 = (int *)type metadata accessor for MailboxSyncState();
  uint64_t v9 = v5 + v8[15];
  uint64_t v10 = type metadata accessor for MessageBatches(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v5 + v8[16];
  uint64_t v12 = type metadata accessor for NewestMessages();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v5 + v8[18];
  *(void *)uint64_t v13 = 0;
  *(_WORD *)(v13 + 8) = 256;
  *(void *)uint64_t v5 = a1[3];
  sub_10001FDF0((uint64_t)(a1 + 6), (uint64_t)v66, &qword_10070A8B8);
  sub_10001FDF0((uint64_t)v66, v6, &qword_10070A8B8);
  sub_10001FDF0((uint64_t)(a1 + 7), (uint64_t)v65, &qword_10070A6F0);
  sub_10001FDF0((uint64_t)v65, v7, &qword_10070A6F0);
  sub_10001FDF0((uint64_t)(a1 + 8), (uint64_t)v64, &qword_10070A8C0);
  sub_10001FDF0((uint64_t)v64, (uint64_t)v67, &qword_10070A8C0);
  unint64_t v14 = _swiftEmptyArrayStorage;
  if ((v67[9] & 1) != 0
    || (sub_100061048((uint64_t)v67, (uint64_t)v68), sub_100061048((uint64_t)v68, (uint64_t)&v69), (v70 & 1) != 0)
    || (*(unsigned char *)(a2 + 2) & 1) != 0)
  {
    uint64_t v15 = sub_1000A7178((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v20 = v5 + v8[12];
    *(void *)(v20 + 24) = &_s14BasicResponsesVN;
    *(void *)(v20 + 32) = sub_100060F4C();
    uint64_t v21 = (void *)swift_allocObject();
    *(void *)uint64_t v20 = v21;
    void v21[2] = v15;
    v21[3] = v17;
    v21[4] = v19;
    v21[5] = _swiftEmptyArrayStorage;
    unint64_t v22 = v21 + 7;
    v21[6] = 1;
  }
  else
  {
    *(void *)(v5 + 24) = v69;
    *(unsigned char *)(v5 + 32) = 0;
    uint64_t v51 = sub_1000A7178((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    uint64_t v20 = v5 + v8[12];
    *(void *)(v20 + 24) = &_s18CondStoreResponsesVN;
    *(void *)(v20 + 32) = sub_1000610A4();
    uint64_t v56 = (void *)swift_allocObject();
    *(void *)uint64_t v20 = v56;
    v56[2] = _swiftEmptyArrayStorage;
    void v56[3] = v51;
    _OWORD v56[4] = v53;
    v56[5] = v55;
    unint64_t v22 = v56 + 8;
    v56[6] = _swiftEmptyArrayStorage;
    v56[7] = 0;
  }
  unsigned char *v22 = 1;
  type metadata accessor for PendingServerResponses();
  sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v20 + 40) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v20 + 48) = 0;
  *(void *)(v5 + 152) = &_swiftEmptySetSingleton;
  *(void *)(v5 + 160) = &_swiftEmptySetSingleton;
  *(void *)(v5 + 168) = &_swiftEmptySetSingleton;
  uint64_t v23 = a1[5];
  if (v23)
  {
    swift_bridgeObjectRetain();
    sub_100060FFC((uint64_t)a1);
LABEL_18:
    uint64_t v41 = swift_bridgeObjectRetain();
    sub_10001C98C(v41, (uint64_t)v62);
    long long v42 = v62[2];
    *(_OWORD *)(v5 + 88) = v62[3];
    long long v43 = v62[5];
    *(_OWORD *)(v5 + 104) = v62[4];
    *(_OWORD *)(v5 + 120) = v43;
    *(void *)(v5 + 136) = v63;
    long long v44 = v62[1];
    *(_OWORD *)(v5 + 40) = v62[0];
    *(_OWORD *)(v5 + 56) = v44;
    *(_OWORD *)(v5 + 72) = v42;
    unint64_t v45 = sub_10001D28C(v23);
    swift_bridgeObjectRelease();
    uint64x2_t v46 = (uint64x2_t)vdupq_n_s64(v45);
    *(unsigned char *)(v5 + 144) = v45 & 1;
    int16x8_t v47 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v46, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v46, (uint64x2_t)xmmword_1005F66B0));
    *(int8x8_t *)v47.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v47), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v5 + 145) = vmovn_s16(v47).u32[0];
    *(void *)(v5 + 176) = &_swiftEmptySetSingleton;
    uint64_t v48 = v5 + v8[13];
    *(_WORD *)uint64_t v48 = 0;
    *(unsigned char *)(v48 + 2) = 0;
    size_t v49 = (unint64_t *)(v48 + *(int *)(type metadata accessor for PendingPersistenceUpdates() + 28));
    *size_t v49 = sub_1000D41B8((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for MessagesPendingDownload();
    sub_10001FC6C();
    sub_1005E3680();
    uint64_t v50 = (unint64_t *)((char *)v49 + *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20));
    *uint64_t v50 = sub_1000D41B8((uint64_t)_swiftEmptyArrayStorage);
    sub_1005E3680();
    sub_1005E3680();
    *(void *)(v5 + v8[14]) = sub_1000C0450((uint64_t)_swiftEmptyArrayStorage);
    _s15MissingMessagesOMa(0);
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = a1[2];
  int64_t v25 = *(void *)(v24 + 16);
  if (!v25)
  {
LABEL_17:
    uint64_t v23 = sub_10009A73C((uint64_t)v14);
    swift_bridgeObjectRelease();
    sub_100060FFC((uint64_t)a1);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v57 = a1;
  uint64_t v58 = v8;
  uint64_t v59 = v5;
  *(void *)&v62[0] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_10001A5D4(0, v25, 0);
  unint64_t v14 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000D38CC(v24);
  uint64_t v27 = result;
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  uint64_t v60 = v24 + 56;
  while ((v27 & 0x8000000000000000) == 0 && v27 < 1 << *(unsigned char *)(v24 + 32))
  {
    if (((*(void *)(v60 + (((unint64_t)v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
      goto LABEL_21;
    }
    if (*(_DWORD *)(v24 + 36) != v29) {
      goto LABEL_22;
    }
    char v61 = v31;
    uint64_t v32 = (uint64_t *)(*(void *)(v24 + 48) + 16 * v27);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    *(void *)&v62[0] = v14;
    uint64_t v35 = v24;
    unint64_t v36 = v14[2];
    unint64_t v37 = v14[3];
    swift_bridgeObjectRetain();
    if (v36 >= v37 >> 1)
    {
      sub_10001A5D4(v37 > 1, v36 + 1, 1);
      unint64_t v14 = *(void **)&v62[0];
    }
    void v14[2] = v36 + 1;
    uint64_t v38 = &v14[2 * v36];
    _OWORD v38[4] = v33;
    v38[5] = v34;
    uint64_t result = sub_1000D3970(v27, v29, v61 & 1, v35);
    uint64_t v27 = result;
    uint64_t v29 = v39;
    char v31 = v40 & 1;
    --v25;
    uint64_t v24 = v35;
    if (!v25)
    {
      sub_100060FF0(result, v39, v31);
      swift_bridgeObjectRelease();
      uint64_t v8 = v58;
      uint64_t v5 = v59;
      a1 = v57;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_10005DA70(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v178 = a5;
  uint64_t v164 = a3;
  uint64_t v165 = a4;
  int v163 = a2;
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  long long v177 = *(objc_class **)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v176 = (os_log_t)sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v176);
  long long v174 = (uint64_t (*)())((char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_t v175 = (os_log_t)((char *)&v157 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v171 = (uint64_t)&v157 - v14;
  __chkstk_darwin(v13);
  long long v172 = (uint64_t (*)())((char *)&v157 - v15);
  uint64_t v16 = _s12LocalMailboxV6LoggerVMa();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v169 = (uint64_t)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v167 = (uint64_t)&v157 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v162 = (uint64_t)&v157 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v161 = (uint64_t)&v157 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v157 = (uint64_t)&v157 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v166 = (char *)&v157 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v160 = (uint64_t)&v157 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v159 = (uint64_t)&v157 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v168 = (uint64_t)&v157 - v34;
  __chkstk_darwin(v33);
  unint64_t v36 = (char *)&v157 - v35;
  uint64_t v37 = sub_1005E0ED0();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v180 = v37;
  uint64_t v181 = v38;
  uint64_t v39 = __chkstk_darwin(v37);
  long long v173 = (char *)&v157 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v170 = (char *)&v157 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v158 = (char *)&v157 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  int16x8_t v47 = (char *)&v157 - v46;
  __chkstk_darwin(v45);
  size_t v49 = (char *)&v157 - v48;
  uint64_t v50 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v50);
  uint64_t v52 = (unsigned int *)((char *)&v157 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100061980(a1, (uint64_t)v52, type metadata accessor for UntaggedResponse);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xEu:
      uint64_t v165 = v16;
      long long v177 = (objc_class *)*v52;
      os_log_t v53 = v179;
      sub_1000935B0(0xCu);
      sub_100019080(v183, 12);
      uint64_t v55 = v180;
      uint64_t v54 = v181;
      uint64_t v56 = (uint64_t)v178;
      (*(void (**)(char *, NSObject *, uint64_t))(v181 + 16))(v49, v178, v180);
      sub_100061980(v56, (uint64_t)v36, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      uint64_t v57 = v168;
      sub_100061980(v56, v168, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v58 = sub_1005E0EB0();
      os_log_type_t v59 = sub_1005E25C0();
      int v60 = v59;
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v61 = swift_slowAlloc();
        os_log_t v176 = (os_log_t)swift_slowAlloc();
        os_log_t v182 = v176;
        *(_DWORD *)uint64_t v61 = 68159235;
        LODWORD(v183[0]) = 2;
        LODWORD(v175) = v60;
        sub_1005E2960();
        *(_WORD *)(v61 + 8) = 256;
        long long v178 = v49;
        uint64_t v62 = v165;
        char v63 = v36[*(int *)(v165 + 20)];
        sub_100061A50((uint64_t)v36, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        LOBYTE(v183[0]) = v63;
        sub_1005E2960();
        *(_WORD *)(v61 + 11) = 1040;
        LODWORD(v183[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v61 + 17) = 512;
        uint64_t v64 = v57 + *(int *)(v62 + 20);
        LOWORD(v183[0]) = *(_WORD *)(v64 + 2);
        sub_1005E2960();
        *(_WORD *)(v61 + 21) = 2160;
        v183[0] = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v61 + 31) = 2085;
        int v65 = *(_DWORD *)(v64 + 16);
        v183[0] = *(void *)(v64 + 8);
        LODWORD(v183[1]) = v65;
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_1005E1CC0();
        v183[0] = sub_1000C6914(v66, v67, (uint64_t *)&v182);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100061A50(v57, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        *(_WORD *)(v61 + 41) = 1024;
        int v68 = v177;
        LODWORD(v183[0]) = v177;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v175, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Updating message count to %u", (uint8_t *)v61, 0x2Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t result = (*(uint64_t (**)(NSObject *, uint64_t))(v181 + 8))(v178, v180);
        v179->Class isa = v68;
      }
      else
      {
        sub_100061A50((uint64_t)v36, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        sub_100061A50(v57, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v49, v55);
        v53->Class isa = v177;
      }
      return result;
    case 0x10u:
      uint64_t v165 = v16;
      uint64_t v70 = *v52;
      uint64_t v71 = type metadata accessor for MailboxSyncState();
      os_log_t v72 = v179;
      sub_10007A310(v70);
      uint64_t v73 = (char *)v72 + *(int *)(v71 + 64);
      uint64_t v74 = type metadata accessor for NewestMessages();
      int v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(v73, 1, v74);
      uint64_t v77 = v180;
      uint64_t v76 = v181;
      uint64_t v78 = (uint64_t)v166;
      if (v75) {
        goto LABEL_8;
      }
      uint64_t v79 = *(int *)(v74 + 24);
      uint64_t v80 = *(void *)&v73[v79];
      BOOL v81 = __OFADD__(v80, 1);
      uint64_t v82 = v80 + 1;
      if (v81) {
        goto LABEL_28;
      }
      *(void *)&v73[v79] = v82;
LABEL_8:
      uint64_t v83 = (uint64_t)v72->isa - 1;
      if ((uint64_t)v72->isa < 1)
      {
        int16x8_t v47 = v158;
        uint64_t v148 = (uint64_t)v178;
        (*(void (**)(char *, NSObject *, uint64_t))(v76 + 16))(v158, v178, v77);
        sub_100061980(v148, v78, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        uint64_t v85 = v157;
        sub_100061980(v148, v157, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v86 = sub_1005E0EB0();
        os_log_type_t v149 = sub_1005E25A0();
        if (os_log_type_enabled(v86, v149))
        {
          uint64_t v150 = swift_slowAlloc();
          long long v178 = swift_slowAlloc();
          os_log_t v182 = v178;
          *(_DWORD *)uint64_t v150 = 68159235;
          LODWORD(v183[0]) = 2;
          LODWORD(v179) = v70;
          sub_1005E2960();
          *(_WORD *)(v150 + 8) = 256;
          uint64_t v151 = v165;
          char v152 = *(unsigned char *)(v78 + *(int *)(v165 + 20));
          long long v177 = (objc_class *)_s12LocalMailboxV6LoggerVMa;
          sub_100061A50(v78, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
          LOBYTE(v183[0]) = v152;
          sub_1005E2960();
          *(_WORD *)(v150 + 11) = 1040;
          LODWORD(v183[0]) = 2;
          sub_1005E2960();
          *(_WORD *)(v150 + 17) = 512;
          uint64_t v153 = v85 + *(int *)(v151 + 20);
          LOWORD(v183[0]) = *(_WORD *)(v153 + 2);
          sub_1005E2960();
          *(_WORD *)(v150 + 21) = 2160;
          v183[0] = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v150 + 31) = 2085;
          int v154 = *(_DWORD *)(v153 + 16);
          v183[0] = *(void *)(v153 + 8);
          LODWORD(v183[1]) = v154;
          swift_bridgeObjectRetain();
          uint64_t v155 = sub_1005E1CC0();
          v183[0] = sub_1000C6914(v155, v156, (uint64_t *)&v182);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100061A50(v85, (uint64_t (*)(void))v177);
          *(_WORD *)(v150 + 41) = 1024;
          LODWORD(v183[0]) = v179;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v86, v149, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Received expunge %u, but mMessage is already zero.", (uint8_t *)v150, 0x2Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v158, v180);
        }
      }
      else
      {
        v72->Class isa = (Class)v83;
        uint64_t v84 = (uint64_t)v178;
        (*(void (**)(char *, NSObject *, uint64_t))(v76 + 16))(v47, v178, v77);
        uint64_t v78 = v159;
        sub_100061980(v84, v159, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        uint64_t v85 = v160;
        sub_100061980(v84, v160, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v86 = sub_1005E0EB0();
        os_log_type_t v87 = sub_1005E25C0();
        int v88 = v87;
        if (os_log_type_enabled(v86, v87))
        {
          uint64_t v89 = swift_slowAlloc();
          LODWORD(v177) = v88;
          uint64_t v90 = v89;
          long long v178 = swift_slowAlloc();
          os_log_t v182 = v178;
          *(_DWORD *)uint64_t v90 = 68159491;
          os_log_t v175 = v86;
          os_log_t v176 = (os_log_t)v83;
          uint64_t v91 = v85;
          LODWORD(v183[0]) = 2;
          sub_1005E2960();
          *(_WORD *)(v90 + 8) = 256;
          LODWORD(v179) = v70;
          uint64_t v92 = v165;
          char v93 = *(unsigned char *)(v78 + *(int *)(v165 + 20));
          long long v174 = _s12LocalMailboxV6LoggerVMa;
          sub_100061A50(v78, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
          LOBYTE(v183[0]) = v93;
          sub_1005E2960();
          *(_WORD *)(v90 + 11) = 1040;
          LODWORD(v183[0]) = 2;
          sub_1005E2960();
          *(_WORD *)(v90 + 17) = 512;
          uint64_t v94 = v85 + *(int *)(v92 + 20);
          LOWORD(v183[0]) = *(_WORD *)(v94 + 2);
          sub_1005E2960();
          *(_WORD *)(v90 + 21) = 2160;
          v183[0] = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v90 + 31) = 2085;
          int v95 = *(_DWORD *)(v94 + 16);
          v183[0] = *(void *)(v94 + 8);
          LODWORD(v183[1]) = v95;
          swift_bridgeObjectRetain();
          uint64_t v96 = sub_1005E1CC0();
          v183[0] = sub_1000C6914(v96, v97, (uint64_t *)&v182);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100061A50(v91, (uint64_t (*)(void))v174);
          *(_WORD *)(v90 + 41) = 1024;
          LODWORD(v183[0]) = v179;
          sub_1005E2960();
          *(_WORD *)(v90 + 47) = 2048;
          v183[0] = v176;
          sub_1005E2960();
          os_log_t v98 = v175;
          _os_log_impl((void *)&_mh_execute_header, v175, (os_log_type_t)v177, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Received expunge %u. Message count is now %ld.", (uint8_t *)v90, 0x39u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v47, v180);
        }
      }
      sub_100061A50(v78, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      sub_100061A50(v85, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);

      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v47, v77);
    case 0x11u:
      uint64_t v165 = v16;
      os_log_t v99 = (os_log_t)v172;
      sub_10001FDF0((uint64_t)v52, (uint64_t)v172, &qword_100709E38);
      type metadata accessor for MailboxSyncState();
      os_log_t v100 = v179;
      type metadata accessor for PendingServerResponses();
      (*((void (**)(char *, os_log_t, uint64_t))v177 + 2))(v8, v99, v6);
      sub_1005E3670();
      Class isa = v100->isa;
      MessageIdentifierSet.count.getter();
      if (__OFSUB__(isa, v102))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        JUMPOUT(0x10005F204);
      }
      long long v177 = (objc_class *)(((unint64_t)isa - v102) & ~(((uint64_t)isa - v102) >> 63));
      v100->Class isa = v177;
      uint64_t v104 = v180;
      uint64_t v103 = v181;
      uint64_t v105 = v170;
      uint64_t v106 = (uint64_t)v178;
      (*(void (**)(char *, NSObject *, uint64_t))(v181 + 16))(v170, v178, v180);
      uint64_t v107 = v161;
      sub_100061980(v106, v161, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      uint64_t v108 = v162;
      sub_100061980(v106, v162, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v109 = v171;
      sub_1000079E4((uint64_t)v99, v171, &qword_100709E38);
      uint64_t v110 = sub_1005E0EB0();
      os_log_type_t v111 = sub_1005E25C0();
      int v112 = v111;
      if (os_log_type_enabled(v110, v111))
      {
        uint64_t v113 = swift_slowAlloc();
        os_log_t v179 = (os_log_t)swift_slowAlloc();
        os_log_t v182 = v179;
        *(_DWORD *)uint64_t v113 = 68159491;
        LODWORD(v178) = v112;
        LODWORD(v183[0]) = 2;
        os_log_t v175 = v110;
        sub_1005E2960();
        *(_WORD *)(v113 + 8) = 256;
        uint64_t v114 = v165;
        char v115 = *(unsigned char *)(v107 + *(int *)(v165 + 20));
        sub_100061A50(v107, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        LOBYTE(v183[0]) = v115;
        sub_1005E2960();
        *(_WORD *)(v113 + 11) = 1040;
        LODWORD(v183[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v113 + 17) = 512;
        uint64_t v116 = v108 + *(int *)(v114 + 20);
        LOWORD(v183[0]) = *(_WORD *)(v116 + 2);
        sub_1005E2960();
        *(_WORD *)(v113 + 21) = 2160;
        v183[0] = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v113 + 31) = 2085;
        int v117 = *(_DWORD *)(v116 + 16);
        v183[0] = *(void *)(v116 + 8);
        LODWORD(v183[1]) = v117;
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_1005E1CC0();
        v183[0] = sub_1000C6914(v118, v119, (uint64_t *)&v182);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100061A50(v108, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        *(_WORD *)(v113 + 41) = 2048;
        uint64_t v120 = v171;
        MessageIdentifierSet.count.getter();
        uint64_t v122 = v121;
        sub_100007A48(v120, &qword_100709E38);
        v183[0] = v122;
        sub_1005E2960();
        *(_WORD *)(v113 + 51) = 2048;
        v183[0] = v177;
        sub_1005E2960();
        os_log_t v123 = v175;
        _os_log_impl((void *)&_mh_execute_header, v175, (os_log_type_t)v178, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Received vanished for %ld UID(s). Message count is now %ld.", (uint8_t *)v113, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v181 + 8))(v170, v180);
        os_log_t v124 = (os_log_t)v172;
        return sub_100007A48((uint64_t)v124, &qword_100709E38);
      }
      sub_100007A48(v109, &qword_100709E38);
      sub_100061A50(v107, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);

      sub_100061A50(v108, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v105, v104);
      goto LABEL_20;
    case 0x12u:
      uint64_t v165 = v16;
      os_log_t v99 = v175;
      sub_10001FDF0((uint64_t)v52, (uint64_t)v175, &qword_100709E38);
      type metadata accessor for MailboxSyncState();
      type metadata accessor for PendingServerResponses();
      (*((void (**)(char *, os_log_t, uint64_t))v177 + 2))(v8, v99, v6);
      sub_1005E3670();
      uint64_t v126 = v180;
      uint64_t v125 = v181;
      long long v127 = v173;
      uint64_t v128 = (uint64_t)v178;
      (*(void (**)(char *, NSObject *, uint64_t))(v181 + 16))(v173, v178, v180);
      uint64_t v129 = v167;
      sub_100061980(v128, v167, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      uint64_t v130 = v128;
      uint64_t v131 = v169;
      sub_100061980(v130, v169, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      long long v132 = v174;
      sub_1000079E4((uint64_t)v99, (uint64_t)v174, &qword_100709E38);
      long long v133 = sub_1005E0EB0();
      os_log_type_t v134 = sub_1005E25C0();
      int v135 = v134;
      os_log_t v179 = v133;
      if (os_log_type_enabled(v133, v134))
      {
        uint64_t v136 = swift_slowAlloc();
        LODWORD(v177) = v135;
        uint64_t v137 = v136;
        long long v178 = swift_slowAlloc();
        os_log_t v182 = v178;
        *(_DWORD *)uint64_t v137 = 68159235;
        LODWORD(v183[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v137 + 8) = 256;
        uint64_t v138 = v165;
        char v139 = *(unsigned char *)(v129 + *(int *)(v165 + 20));
        long long v172 = _s12LocalMailboxV6LoggerVMa;
        sub_100061A50(v129, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        LOBYTE(v183[0]) = v139;
        sub_1005E2960();
        *(_WORD *)(v137 + 11) = 1040;
        LODWORD(v183[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v137 + 17) = 512;
        uint64_t v140 = v131 + *(int *)(v138 + 20);
        LOWORD(v183[0]) = *(_WORD *)(v140 + 2);
        sub_1005E2960();
        *(_WORD *)(v137 + 21) = 2160;
        v183[0] = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v137 + 31) = 2085;
        int v141 = *(_DWORD *)(v140 + 16);
        v183[0] = *(void *)(v140 + 8);
        LODWORD(v183[1]) = v141;
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_1005E1CC0();
        v183[0] = sub_1000C6914(v142, v143, (uint64_t *)&v182);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100061A50(v131, (uint64_t (*)(void))v172);
        *(_WORD *)(v137 + 41) = 2048;
        uint64_t v144 = v174;
        MessageIdentifierSet.count.getter();
        uint64_t v146 = v145;
        sub_100007A48((uint64_t)v144, &qword_100709E38);
        v183[0] = v146;
        sub_1005E2960();
        os_log_t v147 = v179;
        _os_log_impl((void *)&_mh_execute_header, v179, (os_log_type_t)v177, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Received vanished (earlier) for %ld UID(s).", (uint8_t *)v137, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v181 + 8))(v173, v180);
        os_log_t v124 = v175;
      }
      else
      {
        sub_100007A48((uint64_t)v132, &qword_100709E38);
        sub_100061A50(v129, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);

        sub_100061A50(v131, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v127, v126);
LABEL_20:
        os_log_t v124 = v99;
      }
      return sub_100007A48((uint64_t)v124, &qword_100709E38);
    case 0x13u:
      memcpy(v183, v52, 0x248uLL);
      sub_10005FB20((int *)v183, v163, v164, v165, (uint64_t)v178);
      return sub_100061150((uint64_t)v183);
    default:
      return sub_100061A50((uint64_t)v52, type metadata accessor for UntaggedResponse);
  }
}

uint64_t sub_10005F21C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_10070A338);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for PendingServerResponses();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2[19];
  uint64_t v10 = v2[20];
  uint64_t v12 = v2[21];
  uint64_t v13 = type metadata accessor for MailboxSyncState();
  sub_100061980((uint64_t)v2 + *(int *)(v13 + 48), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
  uint64_t v14 = *v2;
  sub_1000079E4((uint64_t)v2 + *(int *)(v13 + 60), (uint64_t)v6, &qword_10070A338);
  uint64_t v15 = type metadata accessor for MessageBatches(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v6, 1, v15) == 1)
  {
    sub_100007A48((uint64_t)v6, &qword_10070A338);
    uint64_t v16 = 4507;
  }
  else
  {
    uint64_t v16 = *v6;
    sub_100061A50((uint64_t)v6, type metadata accessor for MessageBatches);
  }
  uint64_t v17 = sub_10007A410(v14, v16, HIBYTE(a1) & 1);
  sub_100061A50((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
  uint64_t v28 = v11;
  uint64_t v29 = v10;
  uint64_t v30 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10005CE54((uint64_t)v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = v28;
  uint64_t v19 = v29;
  uint64_t v20 = v30;
  uint64_t v21 = sub_100077054();
  uint64_t v28 = v18;
  uint64_t v29 = v19;
  uint64_t v30 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10005CE54((uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v28;
  uint64_t v23 = v29;
  uint64_t v24 = v30;
  sub_1000D8674(a1 & 0x101010101FFFF01, &v28);
  uint64_t v25 = sub_10006024C(v28, v22, v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_10005F4FC(unsigned __int16 a1, unsigned __int16 a2)
{
  uint64_t v5 = type metadata accessor for MessagesPendingDownloadPerPass();
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v8 = (unint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (((a2 ^ a1) & 0xFF00) != 0)
  {
    uint64_t v9 = type metadata accessor for MailboxSyncState();
    sub_100061A50(v2 + *(int *)(v9 + 68), _s15MissingMessagesOMa);
    _s15MissingMessagesOMa(0);
    swift_storeEnumTagMultiPayload();
    sub_1000935B0(0xCu);
    sub_100019080(&v15, 12);
    sub_1000935B0(2u);
    sub_100019080(&v15, 2);
    sub_1000935B0(4u);
    uint64_t result = sub_100019080(&v15, 4);
  }
  if ((a1 & 1) != (a2 & 1))
  {
    *uint64_t v8 = sub_1000D41B8((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for MessagesPendingDownload();
    sub_10001FC6C();
    sub_1005E3680();
    uint64_t v10 = (unint64_t *)((char *)v8 + *(int *)(v5 + 20));
    *uint64_t v10 = sub_1000D41B8((uint64_t)_swiftEmptyArrayStorage);
    sub_1005E3680();
    uint64_t v11 = v2 + *(int *)(type metadata accessor for MailboxSyncState() + 52);
    uint64_t v12 = type metadata accessor for PendingPersistenceUpdates();
    sub_100060EE8((uint64_t)v8, v11 + *(int *)(v12 + 28));
    sub_1000935B0(9u);
    sub_100019080(&v14, 9);
    sub_1000935B0(0xAu);
    return sub_100019080(&v14, 10);
  }
  return result;
}

uint64_t sub_10005F754()
{
  sub_1005E2C80(180);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v1._unint64_t object = (void *)0x80000001005E4BF0;
  sub_1005E1E30(v1);
  v2._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x49557478656E202CLL;
  v3._unint64_t object = (void *)0xEB00000000203A44;
  sub_1005E1E30(v3);
  v4._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v4);
  swift_bridgeObjectRelease();
  v5._unint64_t object = (void *)0x80000001005E4C10;
  v5._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_1005E1E30(v5);
  sub_10005FA78();
  v6._uint64_t countAndFlagsBits = sub_1005E1F20();
  sub_1005E1E30(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x6E4567616C66202CLL;
  v7._unint64_t object = (void *)0xEF203A7265646F63;
  sub_1005E1E30(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = sub_1005E1CC0();
  sub_1005E1E30(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x654467616C66202CLL;
  v9._unint64_t object = (void *)0xEF203A7265646F63;
  sub_1005E1E30(v9);
  v10._uint64_t countAndFlagsBits = sub_1005E1CC0();
  sub_1005E1E30(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  v11._unint64_t object = (void *)0x80000001005E4C30;
  sub_1005E1E30(v11);
  sub_10005FACC();
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = sub_1005E2270();
  sub_1005E1E30(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 41;
  v13._unint64_t object = (void *)0xE100000000000000;
  sub_1005E1E30(v13);
  return 0;
}

unint64_t sub_10005FA78()
{
  unint64_t result = qword_10070A898;
  if (!qword_10070A898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A898);
  }
  return result;
}

unint64_t sub_10005FACC()
{
  unint64_t result = qword_10070A8A0;
  if (!qword_10070A8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A8A0);
  }
  return result;
}

uint64_t sub_10005FB20(int *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int v66 = a2;
  uint64_t v11 = _s12LocalMailboxV6LoggerVMa();
  uint64_t v12 = __chkstk_darwin(v11);
  char v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v56 - v15;
  uint64_t v17 = sub_1005E0ED0();
  uint64_t result = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v67 = *((void *)a1 + 69);
  int v68 = a1;
  int v65 = *((unsigned __int8 *)a1 + 560);
  if ((v65 & 1) == 0)
  {
    uint64_t v23 = *(void *)(v6 + 24);
    if (*(unsigned char *)(v6 + 32)) {
      unint64_t v24 = 0;
    }
    else {
      unint64_t v24 = *(void *)(v6 + 24);
    }
    if (v24 <= v67) {
      unint64_t v24 = v67;
    }
    if (*(unsigned char *)(v6 + 32)) {
      goto LABEL_10;
    }
    if (((v24 | v23) & 0x8000000000000000) != 0)
    {
      __break(1u);
      return result;
    }
    if (v23 != v24)
    {
LABEL_10:
      uint64_t v61 = v24;
      *(void *)(v6 + 24) = v24;
      *(unsigned char *)(v6 + 32) = 0;
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
      uint64_t v63 = v19;
      uint64_t v64 = v20;
      v25(v22, a5, v19);
      sub_100061980(a5, (uint64_t)v16, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      sub_100061980(a5, (uint64_t)v14, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v26 = sub_1005E0EB0();
      os_log_type_t v27 = sub_1005E25C0();
      os_log_t v62 = v26;
      int v60 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v59 = v6;
        uint64_t v29 = v28;
        uint64_t v58 = swift_slowAlloc();
        v85[0] = v58;
        *(_DWORD *)uint64_t v29 = 68159235;
        LODWORD(v86) = 2;
        v56[1] = (char *)&v86 + 4;
        sub_1005E2960();
        *(_WORD *)(v29 + 8) = 256;
        v56[0] = v29 + 10;
        uint64_t v30 = a5;
        uint64_t v31 = a4;
        uint64_t v32 = a3;
        char v33 = v16[*(int *)(v11 + 20)];
        uint64_t v57 = _s12LocalMailboxV6LoggerVMa;
        sub_100061A50((uint64_t)v16, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        LOBYTE(v86) = v33;
        a3 = v32;
        a4 = v31;
        a5 = v30;
        sub_1005E2960();
        *(_WORD *)(v29 + 11) = 1040;
        LODWORD(v86) = 2;
        sub_1005E2960();
        *(_WORD *)(v29 + 17) = 512;
        uint64_t v34 = &v14[*(int *)(v11 + 20)];
        LOWORD(v86) = *((_WORD *)v34 + 1);
        sub_1005E2960();
        *(_WORD *)(v29 + 21) = 2160;
        uint64_t v86 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v29 + 31) = 2085;
        int v35 = *((_DWORD *)v34 + 4);
        uint64_t v86 = *((void *)v34 + 1);
        int v87 = v35;
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_1005E1CC0();
        uint64_t v86 = sub_1000C6914(v36, v37, v85);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100061A50((uint64_t)v14, (uint64_t (*)(void))v57);
        *(_WORD *)(v29 + 41) = 2048;
        uint64_t v86 = v61;
        sub_1005E2960();
        os_log_t v38 = v62;
        _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v60, "[%.*hhx-{%.*hx}-%{sensitive,mask.mailbox}s] Updating highest mod-seq to %llu", (uint8_t *)v29, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v6 = v59;
        swift_slowDealloc();
      }
      else
      {
        sub_100061A50((uint64_t)v16, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
        sub_100061A50((uint64_t)v14, (uint64_t (*)(void))_s12LocalMailboxV6LoggerVMa);
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v22, v63);
    }
  }
  uint64_t v39 = v68;
  sub_10001FDF0((uint64_t)(v68 + 4), (uint64_t)v72, &qword_10070A8D8);
  sub_10001FDF0((uint64_t)v72, (uint64_t)v85, &qword_10070A8D8);
  uint64_t result = sub_10006196C((uint64_t)v85);
  if (result == 1 && !*(void *)(*((void *)v39 + 25) + 16))
  {
    sub_10001FDF0((uint64_t)(v39 + 52), (uint64_t)v71, &qword_10070A8D8);
    sub_10001FDF0((uint64_t)v71, (uint64_t)&v86, &qword_10070A8D8);
    uint64_t result = sub_10006196C((uint64_t)&v86);
    if (result == 1)
    {
      sub_10001FDF0((uint64_t)(v39 + 98), (uint64_t)v70, &qword_10070A8E0);
      uint64_t result = sub_10001FDF0((uint64_t)v70, (uint64_t)v88, &qword_10070A8E0);
      if (!v89)
      {
        sub_10001FDF0((uint64_t)(v39 + 132), (uint64_t)v69, &qword_10070A8E8);
        uint64_t result = sub_10001FDF0((uint64_t)v69, (uint64_t)v90, &qword_10070A8E8);
        if (v90[8] == 1)
        {
          uint64_t result = *((void *)v39 + 64);
          if (result)
          {
            uint64_t v40 = a5;
            uint64_t v41 = &_mh_execute_header;
            if (!*(unsigned char *)(v6 + 148)) {
              uint64_t v41 = 0;
            }
            uint64_t v42 = 0x1000000;
            if (!*(unsigned char *)(v6 + 147)) {
              uint64_t v42 = 0;
            }
            uint64_t v43 = 0x10000;
            if (!*(unsigned char *)(v6 + 146)) {
              uint64_t v43 = 0;
            }
            uint64_t v44 = 256;
            if (!*(unsigned char *)(v6 + 145)) {
              uint64_t v44 = 0;
            }
            unint64_t v46 = FlagDecoder.decode(_:)(result, v44 | *(unsigned __int8 *)(v6 + 144) | v43 | v42 | (unint64_t)v41) & 0xFFFFFFFF01010101;
            uint64_t v47 = *((void *)v39 + 65);
          }
          else
          {
            uint64_t v47 = *((void *)v39 + 65);
            if (!v47) {
              return result;
            }
            uint64_t v40 = a5;
            char v45 = 0;
            unint64_t v46 = 2;
          }
          int v48 = *v39;
          char v49 = *((unsigned char *)v39 + 4);
          int v50 = v39[2];
          char v51 = *((unsigned char *)v39 + 12);
          unint64_t v73 = v46;
          char v74 = v45;
          uint64_t v75 = v47;
          int v76 = v48;
          char v77 = v49;
          int v78 = v50;
          char v79 = v51;
          unint64_t v80 = v67;
          char v81 = v65;
          int v82 = v66;
          uint64_t v83 = a3;
          uint64_t v84 = a4;
          uint64_t v52 = v6 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
          uint64_t v53 = *(void *)(v52 + 24);
          uint64_t v54 = *(void *)(v52 + 32);
          sub_100057374(v52, v53);
          uint64_t v55 = *(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v54 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v55(&v73, v40, v53, v54);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

BOOL sub_100060210(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8) == 1) {
    return (*(unsigned char *)(a2 + 8) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 8)) {
    return 0;
  }
  return *(void *)a1 == *(void *)a2;
}

uint64_t sub_10006024C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2;
  uint64_t v13 = a3;
  uint64_t v14 = a2;
  uint64_t v12 = a4;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v4;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v5; ++i)
  {
    Swift::Int v8 = *(unsigned __int8 *)(a1 + i + 32);
    uint64_t v9 = v13;
    if (sub_100010180(*(unsigned char *)(a1 + i + 32), v13))
    {
      sub_1000935B0(v8);
      sub_1000935B0(v8);
      uint64_t v9 = v13;
    }
    else if (sub_100010180(v8, v14) && sub_100010180(v8, v12))
    {
      sub_1000935B0(v8);
    }
    else
    {
      sub_100019080(&v11, v8);
    }
    if (sub_100010180(v8, v9))
    {
      sub_1000935B0(v8);
    }
    else if (!sub_100010180(v8, v14) || !sub_100010180(v8, v12))
    {
      sub_100019080(&v11, v8);
      continue;
    }
    sub_1000935B0(v8);
  }
  swift_bridgeObjectRelease();
  return v14;
}

BOOL sub_1000603E8(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = type metadata accessor for NewestMessages();
  uint64_t v67 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v66 = (uint64_t)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10070A8A8);
  __chkstk_darwin(v5);
  uint64_t v72 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070A390);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v68 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v69 = (uint64_t)&v62 - v11;
  __chkstk_darwin(v10);
  uint64_t v70 = (uint64_t)&v62 - v12;
  uint64_t v13 = type metadata accessor for MessageBatches(0);
  uint64_t v73 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10000566C(&qword_10070A8B0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000566C(&qword_10070A338);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v62 - v24;
  __chkstk_darwin(v23);
  os_log_type_t v27 = (char *)&v62 - v26;
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  char v28 = *(unsigned char *)(a2 + 12);
  if (*(unsigned char *)(a1 + 12))
  {
    if (!*(unsigned char *)(a2 + 12)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 8) != *(_DWORD *)(a1 + 8)) {
      char v28 = 1;
    }
    if (v28) {
      return 0;
    }
  }
  char v29 = *(unsigned char *)(a2 + 20);
  if (*(unsigned char *)(a1 + 20))
  {
    if (!*(unsigned char *)(a2 + 20)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 16) != *(_DWORD *)(a2 + 16)) {
      char v29 = 1;
    }
    if (v29) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 32))
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 32)) {
      return 0;
    }
    uint64_t v30 = *(void *)(a1 + 24);
    uint64_t v31 = *(void *)(a2 + 24);
    if ((v31 | v30) < 0)
    {
      __break(1u);
LABEL_51:
      sub_1000619E8(v13, v66, (uint64_t (*)(void))type metadata accessor for NewestMessages);
      sub_10001FC6C();
      if ((sub_1005E35A0() & 1) != 0 && *(void *)(v68 + *(int *)(v71 + 20)) == *(void *)(v66 + *(int *)(v71 + 20)))
      {
        uint64_t v58 = *(int *)(v71 + 24);
        uint64_t v59 = v68;
        uint64_t v60 = *(void *)(v68 + v58);
        uint64_t v61 = *(void *)(v66 + v58);
        sub_100061A50(v66, (uint64_t (*)(void))type metadata accessor for NewestMessages);
        sub_100007A48(v69, v15);
        sub_100007A48(v70, v15);
        sub_100061A50(v59, (uint64_t (*)(void))type metadata accessor for NewestMessages);
        sub_100007A48(v72, v15);
        if (v60 != v61) {
          return 0;
        }
LABEL_43:
        if (sub_100074A7C(a1 + v65[17], a2 + v65[17]))
        {
          uint64_t v53 = v65[18];
          uint64_t v54 = a1 + v53;
          char v55 = *(unsigned char *)(a1 + v53 + 9);
          uint64_t v56 = a2 + v53;
          char v57 = *(unsigned char *)(v56 + 9);
          if ((v55 & 1) == 0)
          {
            if (*(unsigned char *)(v56 + 9)) {
              return 0;
            }
            char v57 = *(unsigned char *)(v56 + 8);
            if ((*(unsigned char *)(v54 + 8) & 1) == 0) {
              return (*(unsigned char *)(v56 + 8) & 1) == 0 && *(void *)v54 == *(void *)v56;
            }
          }
          if (v57) {
            return 1;
          }
        }
        return 0;
      }
      sub_100061A50(v66, (uint64_t (*)(void))type metadata accessor for NewestMessages);
      sub_100007A48(v69, &qword_10070A390);
      sub_100007A48(v70, &qword_10070A390);
      sub_100061A50(v68, (uint64_t (*)(void))type metadata accessor for NewestMessages);
      uint64_t v46 = v72;
      char v45 = &qword_10070A390;
LABEL_56:
      sub_100007A48(v46, v45);
      return 0;
    }
    if (v31 != v30) {
      return 0;
    }
  }
  long long v32 = *(_OWORD *)(a1 + 88);
  long long v33 = *(_OWORD *)(a1 + 120);
  v74[4] = *(_OWORD *)(a1 + 104);
  v74[5] = v33;
  uint64_t v75 = *(void *)(a1 + 136);
  long long v34 = *(_OWORD *)(a1 + 56);
  v74[0] = *(_OWORD *)(a1 + 40);
  v74[1] = v34;
  long long v35 = *(_OWORD *)(a1 + 72);
  v74[3] = v32;
  void v74[2] = v35;
  long long v36 = *(_OWORD *)(a2 + 56);
  long long v37 = *(_OWORD *)(a2 + 72);
  v76[0] = *(_OWORD *)(a2 + 40);
  v76[1] = v36;
  long long v38 = *(_OWORD *)(a2 + 88);
  long long v39 = *(_OWORD *)(a2 + 104);
  long long v40 = *(_OWORD *)(a2 + 120);
  uint64_t v77 = *(void *)(a2 + 136);
  v76[4] = v39;
  v76[5] = v40;
  void v76[2] = v37;
  _OWORD v76[3] = v38;
  if ((_s13IMAP2Behavior11FlagEncoderV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v74, (uint64_t)v76) & 1) == 0) {
    return 0;
  }
  BOOL result = 0;
  if (*(unsigned __int8 *)(a1 + 144) == *(unsigned __int8 *)(a2 + 144)
    && ((*(unsigned __int8 *)(a1 + 145) ^ *(unsigned __int8 *)(a2 + 145)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 146) ^ *(unsigned __int8 *)(a2 + 146)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 147) ^ *(unsigned __int8 *)(a2 + 147)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 148) ^ *(unsigned __int8 *)(a2 + 148)) & 1) == 0)
  {
    Swift::Int v42 = *(void *)(a1 + 152);
    int v65 = *(int **)(a1 + 160);
    Swift::Int v63 = *(void *)(a1 + 168);
    uint64_t v43 = *(void *)(a2 + 152);
    uint64_t v64 = *(void *)(a2 + 160);
    uint64_t v62 = *(void *)(a2 + 168);
    if ((sub_100012F74(v42, v43) & 1) == 0) {
      return 0;
    }
    if ((sub_100012F74((Swift::Int)v65, v64) & 1) == 0) {
      return 0;
    }
    if ((sub_100012F74(v63, v62) & 1) == 0) {
      return 0;
    }
    if ((sub_100013DE0(*(void *)(a1 + 176), *(void *)(a2 + 176)) & 1) == 0) {
      return 0;
    }
    int v65 = (int *)type metadata accessor for MailboxSyncState();
    if ((sub_10007B594(a1 + v65[12], a2 + v65[12]) & 1) == 0
      || (sub_1000770E4((unsigned __int8 *)(a1 + v65[13]), (unsigned __int8 *)(a2 + v65[13])) & 1) == 0
      || (sub_10002172C(*(void *)(a1 + v65[14]), *(void *)(a2 + v65[14])) & 1) == 0)
    {
      return 0;
    }
    sub_1000079E4(a1 + v65[15], (uint64_t)v27, &qword_10070A338);
    sub_1000079E4(a2 + v65[15], (uint64_t)v25, &qword_10070A338);
    uint64_t v44 = (uint64_t)&v18[*(int *)(v16 + 48)];
    sub_1000079E4((uint64_t)v27, (uint64_t)v18, &qword_10070A338);
    uint64_t v64 = v44;
    sub_1000079E4((uint64_t)v25, v44, &qword_10070A338);
    uint64_t v73 = *(void *)(v73 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v73)(v18, 1, v13) == 1)
    {
      sub_100007A48((uint64_t)v25, &qword_10070A338);
      sub_100007A48((uint64_t)v27, &qword_10070A338);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73)(v64, 1, v13) == 1)
      {
        sub_100007A48((uint64_t)v18, &qword_10070A338);
LABEL_40:
        int v48 = v65;
        uint64_t v15 = &qword_10070A390;
        uint64_t v49 = v70;
        sub_1000079E4(a1 + v65[16], v70, &qword_10070A390);
        uint64_t v50 = v69;
        sub_1000079E4(a2 + v48[16], v69, &qword_10070A390);
        uint64_t v51 = v72;
        uint64_t v13 = v72 + *(int *)(v5 + 48);
        sub_1000079E4(v49, v72, &qword_10070A390);
        sub_1000079E4(v50, v13, &qword_10070A390);
        uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
        if (v52(v51, 1, v71) == 1)
        {
          sub_100007A48(v69, &qword_10070A390);
          sub_100007A48(v70, &qword_10070A390);
          if (v52(v13, 1, v71) == 1)
          {
            sub_100007A48(v72, &qword_10070A390);
            goto LABEL_43;
          }
          goto LABEL_49;
        }
        sub_1000079E4(v72, v68, &qword_10070A390);
        if (v52(v13, 1, v71) == 1)
        {
          sub_100007A48(v69, &qword_10070A390);
          sub_100007A48(v70, &qword_10070A390);
          sub_100061A50(v68, (uint64_t (*)(void))type metadata accessor for NewestMessages);
LABEL_49:
          char v45 = &qword_10070A8A8;
          uint64_t v46 = v72;
          goto LABEL_56;
        }
        goto LABEL_51;
      }
    }
    else
    {
      sub_1000079E4((uint64_t)v18, (uint64_t)v22, &qword_10070A338);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v73)(v64, 1, v13) != 1)
      {
        sub_1000619E8(v64, (uint64_t)v15, type metadata accessor for MessageBatches);
        BOOL v47 = sub_100068CEC((uint64_t)v22, (uint64_t)v15);
        sub_100061A50((uint64_t)v15, type metadata accessor for MessageBatches);
        sub_100007A48((uint64_t)v25, &qword_10070A338);
        sub_100007A48((uint64_t)v27, &qword_10070A338);
        sub_100061A50((uint64_t)v22, type metadata accessor for MessageBatches);
        sub_100007A48((uint64_t)v18, &qword_10070A338);
        if (!v47) {
          return 0;
        }
        goto LABEL_40;
      }
      sub_100007A48((uint64_t)v25, &qword_10070A338);
      sub_100007A48((uint64_t)v27, &qword_10070A338);
      sub_100061A50((uint64_t)v22, type metadata accessor for MessageBatches);
    }
    char v45 = &qword_10070A8B0;
    uint64_t v46 = (uint64_t)v18;
    goto LABEL_56;
  }
  return result;
}

uint64_t sub_100060EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesPendingDownloadPerPass();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100060F4C()
{
  unint64_t result = qword_10070A8C8;
  if (!qword_10070A8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A8C8);
  }
  return result;
}

uint64_t sub_100060FA0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_100060FF0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100060FFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100061048(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1000610A4()
{
  unint64_t result = qword_10070A8D0;
  if (!qword_10070A8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A8D0);
  }
  return result;
}

uint64_t sub_1000610F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_100061150(uint64_t a1)
{
  uint64_t v25 = *(void *)(a1 + 208);
  uint64_t v24 = *(void *)(a1 + 216);
  uint64_t v23 = *(void *)(a1 + 224);
  uint64_t v22 = *(void *)(a1 + 232);
  uint64_t v21 = *(void *)(a1 + 240);
  uint64_t v20 = *(void *)(a1 + 248);
  uint64_t v19 = *(void *)(a1 + 256);
  uint64_t v18 = *(void *)(a1 + 264);
  long long v12 = *(_OWORD *)(a1 + 272);
  long long v11 = *(_OWORD *)(a1 + 288);
  long long v10 = *(_OWORD *)(a1 + 304);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 352);
  long long v8 = *(_OWORD *)(a1 + 336);
  uint64_t v2 = *(void *)(a1 + 368);
  uint64_t v3 = *(void *)(a1 + 376);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 384);
  uint64_t v16 = *(void *)(a1 + 400);
  uint64_t v17 = *(void *)(a1 + 392);
  uint64_t v14 = *(void *)(a1 + 416);
  uint64_t v15 = *(void *)(a1 + 408);
  uint64_t v5 = *(void *)(a1 + 432);
  uint64_t v13 = *(void *)(a1 + 424);
  sub_10006133C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(unsigned char *)(a1 + 192));
  swift_bridgeObjectRelease();
  sub_10006133C(v25, v24, v23, v22, v21, v20, v19, v18, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7,
    *((uint64_t *)&v7 + 1),
    v2,
    v3,
    v4);
  sub_1000618AC(v17, v16, v15, v14, v13, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_10006133C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 254)
  {
    sub_1000613BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23);
  }
}

void sub_1000613BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 a23)
{
  if (a23 != 255)
  {
    sub_100061440(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23 & 1);
  }
}

void sub_100061440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000617EC(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000615E4(a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

void sub_1000615E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_100061688(a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
}

uint64_t sub_100061688(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2 != 1)
  {
    sub_1000616EC(result, a2);
    return sub_100061750(a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_1000616EC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100061750(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1000617A8(a2, a3, a4);
  }
  return result;
}

uint64_t sub_1000617A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1000617EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a2)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_100061688(a4, a5, a6, a7, a8, a9, a10, a11, a12);
  }
}

uint64_t sub_1000618AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10006196C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 <= 1) {
    return 0;
  }
  else {
    return v1 ^ 0xFF;
  }
}

uint64_t sub_100061980(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000619E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100061A50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s6RemoteV6ServerV11AppendLimitOwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MailboxSelectionUsage(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MailboxSelectionUsage(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100061B14(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100061B30(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSpecificAppendLimit()
{
  return &type metadata for MailboxSpecificAppendLimit;
}

void *sub_100061B60()
{
  if ((*(unsigned char *)(v0 + 184) & 1) == 0) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 200);
  v32[0] = *(_OWORD *)(v0 + 112);
  long long v5 = *(_OWORD *)(v0 + 144);
  v32[1] = *(_OWORD *)(v0 + 128);
  v32[2] = v5;
  sub_100063E6C((uint64_t)v32, (uint64_t)v33);
  sub_100063E6C((uint64_t)v33, (uint64_t)&v43);
  if (!v43) {
    return &_swiftEmptySetSingleton;
  }
  char v31 = *(unsigned char *)(v0 + 9);
  char v28 = *(unsigned char *)(v0 + 17);
  uint64_t v6 = *(void *)(v0 + 24);
  char v7 = *(unsigned char *)(v0 + 10);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v10 = v1;
  uint64_t v29 = v1;
  char v11 = *(unsigned char *)(v0 + 32);
  char v12 = *(unsigned char *)(v0 + 16);
  uint64_t v30 = v43;
  sub_10005636C(v10, v2, v3, 1);
  sub_10002292C((uint64_t)v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000D8938();
  char v14 = sub_1000D8D74(v12, v28 & 1, v6, v11, v8, v7, v9, v13) >> 32;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000D8938();
  unint64_t v16 = sub_1000D8D74(v12, v28 & 1, v6, v11, v8, v7, v9, v15) >> 16;
  uint64_t v17 = (_OWORD *)swift_allocObject();
  long long v18 = *(_OWORD *)(v0 + 208);
  v17[13] = *(_OWORD *)(v0 + 192);
  v17[14] = v18;
  long long v19 = *(_OWORD *)(v0 + 240);
  v17[15] = *(_OWORD *)(v0 + 224);
  v17[16] = v19;
  long long v20 = *(_OWORD *)(v0 + 144);
  v17[9] = *(_OWORD *)(v0 + 128);
  v17[10] = v20;
  long long v21 = *(_OWORD *)(v0 + 176);
  v17[11] = *(_OWORD *)(v0 + 160);
  v17[12] = v21;
  long long v22 = *(_OWORD *)(v0 + 80);
  v17[5] = *(_OWORD *)(v0 + 64);
  v17[6] = v22;
  long long v23 = *(_OWORD *)(v0 + 112);
  v17[7] = *(_OWORD *)(v0 + 96);
  v17[8] = v23;
  long long v24 = *(_OWORD *)(v0 + 16);
  v17[1] = *(_OWORD *)v0;
  long long v17[2] = v24;
  long long v25 = *(_OWORD *)(v0 + 48);
  v17[3] = *(_OWORD *)(v0 + 32);
  v17[4] = v25;
  uint64_t v34 = v29;
  uint64_t v35 = v30;
  char v36 = v31;
  uint64_t v37 = v4;
  char v38 = v14 & 1;
  char v39 = v16;
  long long v40 = sub_100063F68;
  uint64_t v41 = v17;
  uint64_t v42 = 7;
  sub_100063F70(v0);
  uint64_t v26 = sub_100061F38();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (void *)v26;
}

uint64_t sub_100061D90(uint64_t (*a1)(int *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v12++, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16)
    {
      int64_t v17 = v12 + 1;
      if (v12 + 1 >= v10) {
        goto LABEL_27;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v12 + 2;
        if (v12 + 2 >= v10) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v12 + 3;
          if (v12 + 3 >= v10) {
            goto LABEL_27;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v12 + 4;
            if (v12 + 4 >= v10)
            {
LABEL_27:
              swift_release();
              char v18 = 0;
              return v18 & 1;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_30;
                }
                if (v12 >= v10) {
                  goto LABEL_27;
                }
                unint64_t v16 = *(void *)(v6 + 8 * v12);
                ++v17;
                if (v16) {
                  goto LABEL_18;
                }
              }
            }
          }
        }
      }
      int64_t v12 = v17;
    }
LABEL_18:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_19:
    int v19 = *(_DWORD *)(*(void *)(a3 + 48) + 4 * v14);
    uint64_t result = a1(&v19);
    if (v3)
    {
      swift_release();
      return v18 & 1;
    }
    if (result)
    {
      swift_release();
      char v18 = 1;
      return v18 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100061F38()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v3 = *(void *)v0;
    uint64_t v4 = *(void *)(v0 + 8);
    char v5 = *(unsigned char *)(v0 + 16);
    uint64_t v6 = *(void *)(v0 + 24);
    sub_100063B74(v0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000632B4((uint64_t)&_swiftEmptySetSingleton, v3, v4, v5, v6);
    sub_100063BCC(v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v1 = sub_100062390();
  if (v1)
  {
    uint64_t v2 = v1;
  }
  else
  {
    uint64_t v7 = *(void *)v0;
    uint64_t v8 = *(void *)(v0 + 8);
    uint64_t v9 = *(unsigned __int8 *)(v0 + 16);
    uint64_t v10 = *(void *)(v0 + 24);
    sub_100063B74(v0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1000636DC(&_swiftEmptySetSingleton, v7, v8, v9, v10);
    sub_100063BCC(v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = *(void *)(v0 + 56);
  if (*(void *)(v2 + 16) < v11) {
    return v2;
  }
  uint64_t result = (*(uint64_t (**)(void))(v0 + 40))();
  if ((v11 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10001A4D4(0, 0, 0);
    int64_t v17 = _swiftEmptyArrayStorage;
    if (!v11 || (uint64_t v18 = *(void *)(v16 + 16)) == 0)
    {
LABEL_25:
      swift_release();
      swift_release();
      swift_release();
      uint64_t v27 = sub_10009A448((uint64_t)v17);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v27;
    }
    uint64_t v32 = v11;
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    unint64_t v19 = 0;
    uint64_t v20 = v15 + 40;
LABEL_12:
    char v31 = v17;
    --v32;
    long long v21 = (unsigned int *)(v20 + 16 * v19);
    while (v19 < *(void *)(v15 + 16))
    {
      if (v19 >= *(void *)(v16 + 16)) {
        goto LABEL_27;
      }
      if ((~*(_DWORD *)(v16 + 32 + 4 * v19) & 0x6FFFC000) != 0)
      {
        uint64_t v22 = *((void *)v21 - 1);
        unsigned int v23 = *v21;
        uint64_t v24 = v20;
        uint64_t result = sub_100010004(v22, *v21, v2);
        uint64_t v20 = v24;
        if (result)
        {
          int64_t v17 = v31;
          unint64_t v28 = v31[3];
          int64_t v29 = v31[2] + 1;
          unint64_t v30 = v31[2];
          uint64_t result = swift_bridgeObjectRetain();
          unint64_t v25 = v30;
          if (v30 >= v28 >> 1)
          {
            uint64_t result = sub_10001A4D4(v28 > 1, v29, 1);
            unint64_t v25 = v30;
            int64_t v17 = v31;
          }
          long long v17[2] = v29;
          uint64_t v26 = &v17[2 * v25];
          v26[4] = v22;
          *((_DWORD *)v26 + 10) = v23;
          if (!v32) {
            goto LABEL_24;
          }
          uint64_t v20 = v24;
          if ((uint64_t)++v19 >= v18) {
            goto LABEL_24;
          }
          goto LABEL_12;
        }
      }
      ++v19;
      v21 += 4;
      if ((uint64_t)v19 >= v18)
      {
        int64_t v17 = v31;
LABEL_24:
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10006228C(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 168);
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v16 = *(void *)(a1 + 176);
  uint64_t v19 = *(void *)(a1 + 200);
  char v15 = *(unsigned char *)(a1 + 184) & 1;
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = sub_10008C078();
  char v4 = *(unsigned char *)(a1 + 17);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 10);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000D8938();
  unint64_t v12 = sub_1000D8D74(v10, v4 & 1, v5, v9, v8, v6, v7, v11);
  uint64_t v13 = sub_100058C7C(v18, v17, v16, v15, v2, (uint64_t)v3, BYTE4(v12) & 1, v19);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100062390()
{
  uint64_t v1 = type metadata accessor for MessagesPendingDownloadPerPass();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MessagesPendingDownload();
  __chkstk_darwin(v4 - 8);
  uint64_t v112 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070A390);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v111 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v118 = (uint64_t)&v104 - v10;
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v104 - v11;
  uint64_t v117 = type metadata accessor for NewestMessages();
  uint64_t v13 = *(void *)(v117 - 8);
  uint64_t v14 = __chkstk_darwin(v117);
  uint64_t v113 = (uint64_t)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v116 = (uint64_t)&v104 - v16;
  uint64_t v115 = type metadata accessor for MailboxSyncState();
  uint64_t v17 = __chkstk_darwin(v115);
  uint64_t v114 = (uint64_t)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v119 = (uint64_t)&v104 - v19;
  uint64_t v20 = *v0;
  uint64_t v21 = v0[1];
  int v122 = *((unsigned __int8 *)v0 + 16);
  uint64_t v22 = v0[3];
  uint64_t v167 = v21;
  uint64_t v168 = v20;
  uint64_t v121 = v22;
  uint64_t v166 = v22;
  uint64_t v165 = &_swiftEmptySetSingleton;
  sub_10002292C((uint64_t)&v168);
  sub_10002292C((uint64_t)&v167);
  sub_10002292C((uint64_t)&v166);
  sub_10002292C((uint64_t)&v168);
  sub_10002292C((uint64_t)&v167);
  uint64_t result = sub_10002292C((uint64_t)&v166);
  unint64_t v124 = *(void *)(v20 + 16);
  if (!v124)
  {
    LOBYTE(v25) = 0;
    goto LABEL_81;
  }
  uint64_t v108 = v3;
  uint64_t v109 = v0;
  uint64_t v104 = v1;
  uint64_t v105 = 0;
  unint64_t v24 = 0;
  int v25 = 0;
  uint64_t v106 = v12;
  uint64_t v107 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v26 = v20 + 32;
  unint64_t v27 = v124;
  uint64_t v123 = v21;
  uint64_t v110 = v20 + 32;
  while (2)
  {
    if (v24 >= v27)
    {
      __break(1u);
      return result;
    }
    int v120 = v25;
    unint64_t v28 = (long long *)(v26 + 176 * v24);
    for (unint64_t i = v24 + 1; ; ++i)
    {
      long long v30 = *v28;
      long long v31 = v28[2];
      long long v155 = v28[1];
      long long v156 = v31;
      long long v32 = v28[3];
      long long v33 = v28[4];
      long long v34 = v28[6];
      long long v159 = v28[5];
      long long v160 = v34;
      long long v157 = v32;
      long long v158 = v33;
      long long v35 = v28[7];
      long long v36 = v28[8];
      long long v37 = v28[10];
      long long v163 = v28[9];
      long long v164 = v37;
      long long v161 = v35;
      long long v162 = v36;
      long long v154 = v30;
      if (!*(void *)(v21 + 16)) {
        goto LABEL_14;
      }
      Swift::UInt v136 = *((void *)&v154 + 1);
      uint64_t v137 = v154;
      uint64_t v38 = DWORD2(v155);
      LODWORD(v135) = DWORD1(v159);
      char v39 = BYTE8(v159);
      unint64_t v40 = sub_100024264(v155, DWORD2(v155));
      if ((v41 & 1) == 0) {
        goto LABEL_14;
      }
      unint64_t v134 = i;
      uint64_t v42 = *(void *)(v21 + 56) + 72 * v40;
      uint64_t v43 = *(void *)v42;
      int v44 = *(_DWORD *)(v42 + 8);
      int v128 = *(unsigned __int8 *)(v42 + 12);
      int v129 = v44;
      int v45 = *(unsigned __int16 *)(v42 + 14);
      unsigned int v46 = *(unsigned __int8 *)(v42 + 16);
      uint64_t v47 = *(void *)(v42 + 24);
      uint64_t v48 = *(void *)(v42 + 32);
      uint64_t v126 = *(void *)(v42 + 40);
      uint64_t v127 = v47;
      uint64_t v125 = *(void *)(v42 + 48);
      uint64_t v130 = *(void *)(v42 + 56);
      uint64_t v131 = v48;
      LODWORD(v132) = *(unsigned __int8 *)(v42 + 64);
      int v133 = *(unsigned __int8 *)(v42 + 65);
      sub_100007780((uint64_t)&v154);
      swift_bridgeObjectRetain();
      int v49 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
      int v50 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      if (v49)
      {
        if ((v50 & ~v49) == 0)
        {
          if ((v49 & v45) != 0) {
            goto LABEL_13;
          }
          goto LABEL_16;
        }
      }
      else if (!v50)
      {
        goto LABEL_16;
      }
      if (((v50 | v49) & v45) != 0)
      {
LABEL_13:
        sub_100007820((uint64_t)&v154);
        swift_bridgeObjectRelease();
        uint64_t v21 = v123;
        unint64_t v27 = v124;
        unint64_t i = v134;
LABEL_14:
        if (v27 == i) {
          goto LABEL_79;
        }
        goto LABEL_15;
      }
LABEL_16:
      v141[7] = v161;
      v141[8] = v162;
      v141[9] = v163;
      v141[10] = v164;
      v141[5] = v159;
      v141[6] = v160;
      v141[0] = v154;
      v141[1] = v155;
      v141[3] = v157;
      v141[4] = v158;
      v141[2] = v156;
      uint64_t v142 = v43;
      int v143 = v129;
      char v144 = v128;
      __int16 v145 = v45;
      char v146 = v46;
      uint64_t v147 = v127;
      uint64_t v148 = v131;
      uint64_t v149 = v126;
      unint64_t v27 = v124;
      uint64_t v150 = v125;
      uint64_t v151 = v130;
      char v152 = v132;
      char v153 = v133;
      uint64_t v21 = v123;
      if ((v122 & 1) == 0) {
        goto LABEL_31;
      }
      sub_100007780((uint64_t)&v154);
      uint64_t v51 = swift_bridgeObjectRetain();
      char v52 = MailboxName.isInbox.getter(v51, v38);
      swift_bridgeObjectRelease();
      if ((v52 & 1) != 0
        || v46 > 7
        || ((1 << v46) & 0xDB) == 0
        || (v39 & 1) == 0 && ((BYTE12(v160) & 1) != 0 || DWORD2(v160) < v135))
      {
        break;
      }
      uint64_t v53 = v121;
      if (*(void *)(v121 + 16) && (unint64_t v54 = sub_1000242DC(v137, v136), (v55 & 1) != 0))
      {
        int v56 = *(unsigned __int16 *)(*(void *)(v53 + 56) + 2 * v54);
        sub_100007820((uint64_t)&v154);
        if ((~v56 & 0x3FFF) != 0) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_100007820((uint64_t)&v154);
      }
      sub_100024350((uint64_t)v141);
      unint64_t i = v134;
      if (v27 == v134)
      {
LABEL_79:
        sub_10001D550((uint64_t)&v168);
        sub_10001D550((uint64_t)&v167);
        LOBYTE(v25) = v120;
        goto LABEL_82;
      }
LABEL_15:
      v28 += 11;
    }
    sub_100007820((uint64_t)&v154);
LABEL_31:
    uint64_t v57 = *((void *)&v162 + 1);
    if (*(void *)(*((void *)&v162 + 1) + 16))
    {
      int v25 = v120;
      if (v133 & 1) != 0 || (v132)
      {
        uint64_t result = sub_100024350((uint64_t)v141);
      }
      else
      {
        uint64_t v138 = v130;
        UIDValidityWith.init(uidValidity:value:)(SHIDWORD(v131), (uint64_t)&v138, (uint64_t)&type metadata for ModificationSequenceValue, &v139);
        LODWORD(v136) = v139;
        unint64_t v135 = v140;
        uint64_t v58 = v155;
        uint64_t v59 = *((void *)&v158 + 1);
        uint64_t v60 = v159;
        unsigned int v61 = DWORD1(v159);
        char v62 = BYTE8(v159);
        long long v169 = v154;
        uint64_t v170 = v155;
        LODWORD(v137) = DWORD2(v155);
        int v171 = DWORD2(v155);
        int v172 = v156;
        char v173 = BYTE4(v156);
        uint64_t v174 = *((void *)&v156 + 1);
        char v175 = v157;
        uint64_t v176 = *((void *)&v157 + 1);
        char v177 = v158;
        uint64_t v178 = *((void *)&v158 + 1);
        uint64_t v179 = v159;
        char v180 = BYTE8(v159);
        MailboxOfInterest.highestModificationSequenceValue.getter();
        if ((v63 & 1) == 0
          && ((int v64 = *((unsigned __int8 *)v109 + 33), *(void *)(v57 + 16))
           || (v62 & 1) == 0 && ((BYTE12(v160) & 1) != 0 || DWORD2(v160) < v61))
          && (static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v59, v60, 0, 0) & 1) != 0)
        {
          if (!(void)v160)
          {
            uint64_t v21 = v123;
            goto LABEL_71;
          }
          int v133 = v64;
          uint64_t v132 = v58;
          uint64_t v65 = v160
              + OBJC_IVAR____TtCVVV13IMAP2Behavior5State12LocalMailbox13SelectedStateP33_FBA699F01A458FEA4D2013E40A8E4C8B8_Storage_wrapped;
          swift_beginAccess();
          uint64_t v66 = v65 + *(int *)(_s13SelectedStateV7WrappedVMa(0) + 20);
          uint64_t v67 = v114;
          sub_100063CE8(v66, v114, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
          uint64_t v68 = v119;
          sub_100063DB0(v67, v119, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
          uint64_t v69 = *(int *)(v115 + 52);
          uint64_t v70 = v68 + *(int *)(v115 + 64);
          uint64_t v71 = *(int *)(type metadata accessor for PendingPersistenceUpdates() + 28);
          uint64_t v131 = v70;
          uint64_t v72 = v70;
          uint64_t v73 = (uint64_t)v106;
          sub_100063C20(v72, (uint64_t)v106);
          char v74 = *v107;
          uint64_t v75 = v117;
          if ((*v107)(v73, 1, v117) == 1)
          {
            sub_10001FC6C();
            uint64_t v76 = v116;
            sub_1005E3680();
            uint64_t v77 = *(int *)(v75 + 24);
            *(void *)(v76 + *(int *)(v75 + 20)) = 0;
            *(void *)(v76 + v77) = 0;
            uint64_t v78 = v73;
            uint64_t v79 = v76;
            sub_100063C88(v78);
          }
          else
          {
            uint64_t v80 = v73;
            uint64_t v79 = v116;
            sub_100063DB0(v80, v116, (uint64_t (*)(void))type metadata accessor for NewestMessages);
          }
          uint64_t v21 = v123;
          char v81 = (uint64_t *)(v119 + v69 + v71);
          if (v133 == 1)
          {
            uint64_t v82 = v119 + v69 + v71;
            uint64_t v83 = v112;
            sub_100063CE8(v82, v112, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
            char v84 = *(void *)(*(void *)v83 + 16) != 0;
            sub_100063D50(v83, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
          }
          else
          {
            sub_10000566C(&qword_100709E60);
            uint64_t v85 = sub_1005E3630();
            uint64_t v86 = *v81;
            if (v85)
            {
              char v84 = *(void *)(v86 + 16) != 0;
            }
            else
            {
              __chkstk_darwin(v85);
              *(&v104 - 2) = v116;
              swift_bridgeObjectRetain();
              uint64_t v87 = v105;
              char v84 = sub_100061D90((uint64_t (*)(int *))sub_10003E08C, (uint64_t)(&v104 - 4), v86);
              uint64_t v105 = v87;
              swift_bridgeObjectRelease();
              uint64_t v79 = v116;
            }
            uint64_t v21 = v123;
          }
          sub_100063D50(v79, (uint64_t (*)(void))type metadata accessor for NewestMessages);
          uint64_t v88 = (uint64_t)v108;
          sub_100063CE8((uint64_t)v81, (uint64_t)v108, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownloadPerPass);
          uint64_t v89 = v118;
          sub_100063C20(v131, v118);
          if (v84)
          {
            sub_100063D50(v88, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownloadPerPass);
            sub_100063C88(v89);
            sub_100063D50(v119, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
            unint64_t v27 = v124;
            uint64_t v58 = v132;
            goto LABEL_77;
          }
          uint64_t v90 = v111;
          sub_100063C20(v89, v111);
          uint64_t v91 = v117;
          if (v74(v90, 1, v117) == 1)
          {
            sub_10001FC6C();
            uint64_t v92 = v113;
            sub_1005E3680();
            uint64_t v93 = *(int *)(v91 + 20);
            uint64_t v94 = *(int *)(v91 + 24);
            uint64_t v95 = v92;
            *(void *)(v92 + v93) = 0;
            *(void *)(v92 + v94) = 0;
            sub_100063C88(v90);
          }
          else
          {
            uint64_t v95 = v113;
            sub_100063DB0(v90, v113, (uint64_t (*)(void))type metadata accessor for NewestMessages);
          }
          uint64_t v58 = v132;
          uint64_t v96 = v118;
          unint64_t v27 = v124;
          if (!v133)
          {
            sub_100063D50(v95, (uint64_t (*)(void))type metadata accessor for NewestMessages);
            sub_100063D50((uint64_t)v108, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownloadPerPass);
            sub_100063C88(v96);
            sub_100063D50(v119, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
            goto LABEL_71;
          }
          if (v133 == 1)
          {
            uint64_t v97 = (uint64_t)v108;
            uint64_t v98 = v112;
            sub_100063CE8((uint64_t)&v108[*(int *)(v104 + 20)], v112, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
            char v99 = *(void *)(*(void *)v98 + 16) != 0;
            uint64_t v100 = v98;
            uint64_t v58 = v132;
            sub_100063D50(v100, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
          }
          else
          {
            sub_10000566C(&qword_100709E60);
            uint64_t v101 = sub_1005E3630();
            uint64_t v102 = *(void *)&v108[*(int *)(v104 + 20)];
            if (v101)
            {
              char v99 = *(void *)(v102 + 16) != 0;
            }
            else
            {
              __chkstk_darwin(v101);
              *(&v104 - 2) = v95;
              swift_bridgeObjectRetain();
              uint64_t v103 = v105;
              char v99 = sub_100061D90((uint64_t (*)(int *))sub_10003BBE8, (uint64_t)(&v104 - 4), v102);
              uint64_t v105 = v103;
              swift_bridgeObjectRelease();
              uint64_t v58 = v132;
            }
            uint64_t v97 = (uint64_t)v108;
          }
          sub_100063D50(v113, (uint64_t (*)(void))type metadata accessor for NewestMessages);
          sub_100063D50(v97, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownloadPerPass);
          sub_100063C88(v118);
          sub_100063D50(v119, (uint64_t (*)(void))type metadata accessor for MailboxSyncState);
          if (v99)
          {
LABEL_77:
            swift_bridgeObjectRetain();
            sub_1000187DC((uint64_t)&v139, v58, v137);
            swift_bridgeObjectRelease();
          }
          else
          {
LABEL_71:
            if ((v62 & 1) == 0 && ((BYTE12(v160) & 1) != 0 || DWORD2(v160) < v61)
              || (v162 & 1) != 0
              || v136 != v161
              || *((void *)&v161 + 1) < v135)
            {
              goto LABEL_77;
            }
          }
          uint64_t result = sub_100024350((uint64_t)v141);
          int v25 = 1;
        }
        else
        {
          uint64_t result = sub_100024350((uint64_t)v141);
          int v25 = 1;
          uint64_t v21 = v123;
        }
      }
      uint64_t v26 = v110;
    }
    else
    {
      uint64_t result = sub_100024350((uint64_t)v141);
      uint64_t v26 = v110;
      int v25 = v120;
    }
    unint64_t v24 = v134;
    if (v27 != v134) {
      continue;
    }
    break;
  }
LABEL_81:
  sub_10001D550((uint64_t)&v168);
  sub_10001D550((uint64_t)&v167);
LABEL_82:
  sub_10001D550((uint64_t)&v166);
  sub_10001D550((uint64_t)&v168);
  sub_10001D550((uint64_t)&v167);
  sub_10001D550((uint64_t)&v166);
  uint64_t result = (uint64_t)v165;
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1000630DC(uint64_t a1)
{
  return sub_10006311C(a1, (void (*)(uint64_t))sub_100063E18, (uint64_t)&type metadata for UID);
}

uint64_t sub_1000630FC(uint64_t a1)
{
  return sub_10006311C(a1, (void (*)(uint64_t))sub_100064094, (uint64_t)&type metadata for SequenceNumber);
}

uint64_t sub_10006311C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  sub_10001FC6C();
  uint64_t v6 = sub_1005E3680();
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    a2(v6);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v7; ++i)
    {
      v12[0] = *(void *)(a1 + 8 * i + 32);
      Range<>.init<A>(_:)((uint64_t)v12, a3);
      v12[4] = v9;
      if (HIDWORD(v9) != v9)
      {
        sub_10000566C(&qword_100709E60);
        uint64_t v10 = (void (*)(void *, void))sub_1005E3620();
        sub_10000566C(&qword_10070A8F8);
        sub_1005E35D0();
        v10(v12, 0);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100063284()
{
  sub_10000566C(&qword_100709E60);
  return sub_1005E3630();
}

uint64_t sub_1000632B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = a2;
  uint64_t v79 = a1;
  unint64_t v8 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_43;
  }
  unint64_t v10 = 0;
  unint64_t v38 = v8;
  uint64_t v39 = v7;
  while (v10 < v8)
  {
    for (uint64_t i = 176 * v10++ + 32; ; i += 176)
    {
      long long v12 = *(_OWORD *)(v7 + i + 144);
      long long v76 = *(_OWORD *)(v7 + i + 128);
      long long v77 = v12;
      long long v78 = *(_OWORD *)(v7 + i + 160);
      long long v13 = *(_OWORD *)(v7 + i + 80);
      long long v72 = *(_OWORD *)(v7 + i + 64);
      long long v73 = v13;
      long long v14 = *(_OWORD *)(v7 + i + 112);
      long long v74 = *(_OWORD *)(v7 + i + 96);
      long long v75 = v14;
      long long v15 = *(_OWORD *)(v7 + i + 16);
      long long v68 = *(_OWORD *)(v7 + i);
      long long v69 = v15;
      long long v16 = *(_OWORD *)(v7 + i + 48);
      long long v70 = *(_OWORD *)(v7 + i + 32);
      long long v71 = v16;
      if (!*(void *)(a3 + 16)) {
        goto LABEL_14;
      }
      uint64_t v17 = v69;
      Swift::UInt v51 = *((void *)&v68 + 1);
      uint64_t v52 = v68;
      uint64_t v18 = DWORD2(v69);
      uint64_t v19 = *((void *)&v72 + 1);
      uint64_t v50 = v73;
      char v53 = BYTE8(v73);
      unint64_t v20 = sub_100024264(v69, DWORD2(v69));
      if ((v21 & 1) == 0) {
        goto LABEL_14;
      }
      uint64_t v40 = v19;
      uint64_t v22 = *(void *)(a3 + 56) + 72 * v20;
      uint64_t v23 = *(void *)v22;
      char v48 = *(unsigned char *)(v22 + 12);
      int v49 = *(_DWORD *)(v22 + 8);
      int v24 = *(unsigned __int16 *)(v22 + 14);
      unsigned int v25 = *(unsigned __int8 *)(v22 + 16);
      uint64_t v46 = *(void *)(v22 + 32);
      uint64_t v47 = *(void *)(v22 + 24);
      uint64_t v44 = *(void *)(v22 + 48);
      uint64_t v45 = *(void *)(v22 + 40);
      uint64_t v43 = *(void *)(v22 + 56);
      char v41 = *(unsigned char *)(v22 + 65);
      char v42 = *(unsigned char *)(v22 + 64);
      sub_100007780((uint64_t)&v68);
      swift_bridgeObjectRetain();
      int v26 = *(unsigned __int16 *)RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor();
      int v27 = *(unsigned __int16 *)RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor();
      if (v26)
      {
        if ((v27 & ~v26) == 0)
        {
          if ((v26 & v24) != 0) {
            goto LABEL_13;
          }
          goto LABEL_16;
        }
      }
      else if (!v27)
      {
        goto LABEL_16;
      }
      if (((v27 | v26) & v24) != 0)
      {
LABEL_13:
        sub_100007820((uint64_t)&v68);
        swift_bridgeObjectRelease();
        unint64_t v8 = v38;
        uint64_t v7 = v39;
LABEL_14:
        if (v8 == v10) {
          goto LABEL_43;
        }
        goto LABEL_15;
      }
LABEL_16:
      unsigned int v36 = DWORD2(v74);
      char v37 = BYTE12(v74);
      v55[8] = v76;
      v55[9] = v77;
      v55[10] = v78;
      v55[4] = v72;
      v55[5] = v73;
      v55[6] = v74;
      v55[7] = v75;
      v55[0] = v68;
      v55[1] = v69;
      uint64_t v55[2] = v70;
      v55[3] = v71;
      uint64_t v56 = v23;
      int v57 = v49;
      char v58 = v48;
      __int16 v59 = v24;
      char v60 = v25;
      uint64_t v61 = v47;
      uint64_t v62 = v46;
      uint64_t v63 = v45;
      uint64_t v64 = v44;
      uint64_t v65 = v43;
      char v66 = v42;
      char v67 = v41;
      if ((a4 & 1) == 0)
      {
        unint64_t v8 = v38;
        uint64_t v7 = v39;
        uint64_t v30 = v40;
        goto LABEL_35;
      }
      sub_100007780((uint64_t)&v68);
      uint64_t v28 = swift_bridgeObjectRetain();
      char v29 = MailboxName.isInbox.getter(v28, v18);
      swift_bridgeObjectRelease();
      uint64_t v30 = v40;
      if ((v29 & 1) != 0 || v25 > 7 || ((1 << v25) & 0xDB) == 0)
      {
        unint64_t v8 = v38;
        uint64_t v7 = v39;
        goto LABEL_34;
      }
      unint64_t v8 = v38;
      uint64_t v7 = v39;
      if ((v53 & 1) == 0)
      {
        if (v37)
        {
          char v53 = 0;
          char v37 = 1;
          goto LABEL_34;
        }
        if (v36 < HIDWORD(v50)) {
          break;
        }
      }
      if (*(void *)(a5 + 16) && (unint64_t v31 = sub_1000242DC(v52, v51), (v32 & 1) != 0))
      {
        int v33 = *(unsigned __int16 *)(*(void *)(a5 + 56) + 2 * v31);
        sub_100007820((uint64_t)&v68);
        if ((~v33 & 0x3FFF) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        sub_100007820((uint64_t)&v68);
      }
      sub_100024350((uint64_t)v55);
      if (v38 == v10) {
        goto LABEL_43;
      }
LABEL_15:
      ++v10;
    }
    char v37 = 0;
    char v53 = 0;
LABEL_34:
    sub_100007820((uint64_t)&v68);
LABEL_35:
    if (*(void *)(*((void *)&v76 + 1) + 16)) {
      goto LABEL_36;
    }
    if ((v53 & 1) == 0)
    {
      char v34 = v37;
      if (v36 < HIDWORD(v50)) {
        char v34 = 1;
      }
      if (v34)
      {
LABEL_36:
        if (static MailboxOfInterest.LocalModification.__derived_enum_equals(_:_:)(v30, v50, 0, 0))
        {
          swift_bridgeObjectRetain();
          sub_1000187DC((uint64_t)&v54, v17, v18);
          swift_bridgeObjectRelease();
        }
      }
    }
    uint64_t result = sub_100024350((uint64_t)v55);
    if (v8 == v10)
    {
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v79;
    }
  }
  __break(1u);
  return result;
}

#error "100063ABC: switch analysis failed: failed to propagate the switch expression (funcsize=285)"

uint64_t sub_100063B74(uint64_t a1)
{
  return a1;
}

uint64_t sub_100063BCC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100063C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063C88(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070A390);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100063CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100063D50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100063DB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100063E18()
{
  unint64_t result = qword_10070A8F0;
  if (!qword_10070A8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A8F0);
  }
  return result;
}

uint64_t sub_100063E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063ED4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10000F0D4(*(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(unsigned char *)(v0 + 200));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 272, 7);
}

uint64_t sub_100063F68()
{
  return sub_10006228C(v0 + 16);
}

uint64_t sub_100063F70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v4 = *(void *)(a1 + 168);
  uint64_t v5 = *(void *)(a1 + 176);
  char v6 = *(unsigned char *)(a1 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100064054(v2);
  sub_10005636C(v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100064054(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_100064094()
{
  unint64_t result = qword_10070A908;
  if (!qword_10070A908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A908);
  }
  return result;
}

uint64_t *sub_1000640E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10000566C(&qword_100709E30);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_10000566C(&qword_10070A000);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return a1;
}

uint64_t sub_100064274(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_10000566C(&qword_100709E30);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v4, v7);
  }
  return result;
}

void *sub_100064340(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_10000566C(&qword_10070A000);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v6, v7, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_10006447C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E30);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v17 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v7, v8, v17);
      return a1;
    }
    sub_100007A48((uint64_t)v7, &qword_100709E30);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_10000566C(&qword_10070A000);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  uint64_t v14 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_100064654(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10000566C(&qword_100709E30);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10000566C(&qword_10070A000);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_10006478C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100709E30);
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v18 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v8, v9, v18);
      return a1;
    }
    sub_100007A48((uint64_t)v8, &qword_100709E30);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_10000566C(&qword_10070A000);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  uint64_t v15 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100064954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100064968);
}

uint64_t sub_100064968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_10070A000);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100064A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064A30);
}

uint64_t sub_100064A30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_10070A000);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MessageBatches(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_10070A968);
}

void sub_100064AFC()
{
  sub_100064BA4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100064BA4()
{
  if (!qword_10070A978)
  {
    sub_10000744C(&qword_100709E30);
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10070A978);
    }
  }
}

void *sub_100064C00(void (*a1)(void *__return_ptr, void), uint64_t a2, uint64_t a3)
{
  void (*v13)(void *__return_ptr, void);
  uint64_t v14;
  char v15;
  uint64_t v16;

  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = _swiftEmptyArrayStorage;
  int v13 = a1;
  do
  {
    uint64_t v16 = *(void *)(a3 + 8 * v7 + 32);
    a1(&v14, &v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    if ((v15 & 1) == 0)
    {
      uint64_t v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1000168B0(0, v8[2] + 1, 1, v8);
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1) {
        uint64_t v8 = sub_1000168B0((void *)(v10 > 1), v11 + 1, 1, v8);
      }
      long long v8[2] = v11 + 1;
      v8[v11 + 4] = v9;
      a1 = v13;
    }
    ++v7;
  }
  while (v4 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_100064D58(void (*a1)(void *__return_ptr, void), uint64_t a2, uint64_t a3)
{
  void (*v21)(void *__return_ptr, void);

  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = (unsigned char *)(a3 + 40);
  uint64_t v9 = _swiftEmptyArrayStorage;
  char v21 = a1;
  do
  {
    char v11 = *v8;
    uint64_t v19 = *((void *)v8 - 1);
    char v20 = v11;
    a1(&v17, &v19);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    char v12 = v18;
    if (v18 != 2)
    {
      uint64_t v13 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1000169C0(0, v9[2] + 1, 1, v9);
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1) {
        uint64_t v9 = sub_1000169C0((void *)(v14 > 1), v15 + 1, 1, v9);
      }
      void v9[2] = v15 + 1;
      unint64_t v10 = (char *)v9 + 12 * v15;
      *((void *)v10 + 4) = v13;
      v10[40] = v12 & 1;
      a1 = v21;
    }
    v8 += 12;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100064EC8(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  void (*v23)(uint64_t *__return_ptr, void *);
  uint64_t v24;
  void *v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  unint64_t v36;
  void v37[2];
  int v38;
  uint64_t v39;
  char v40;
  char v41;
  void *v42;

  uint64_t v4 = a3;
  int v33 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  char v34 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  char v42 = _swiftEmptyArrayStorage;
  char v32 = v4;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v10 >= v34) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_19:
    uint64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    unint64_t v17 = v16[1];
    uint64_t v19 = *(void *)(v4 + 56) + 24 * v12;
    LODWORD(v16) = *(_DWORD *)v19;
    uint64_t v20 = *(void *)(v19 + 8);
    char v21 = *(unsigned char *)(v19 + 16);
    LOBYTE(v19) = *(unsigned char *)(v19 + 17);
    v37[0] = v18;
    v37[1] = v17;
    unint64_t v38 = (int)v16;
    uint64_t v39 = v20;
    uint64_t v40 = v21;
    char v41 = v19;
    sub_100008D24(v18, v17);
    a1(&v35, v37);
    if (v3)
    {
      sub_1000094D4(v18, v17);
      unint64_t v31 = v42;
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v31;
    }
    uint64_t result = sub_1000094D4(v18, v17);
    unint64_t v22 = v36;
    if (v36 >> 60 != 15)
    {
      uint64_t v23 = a1;
      int v24 = v35;
      unsigned int v25 = v42;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100016D78(0, v25[2] + 1, 1, v25);
        unsigned int v25 = (void *)result;
      }
      int v26 = v25;
      int v27 = v25[2];
      char v42 = v26;
      uint64_t v28 = v26[3];
      if (v27 >= v28 >> 1)
      {
        uint64_t result = (uint64_t)sub_100016D78((void *)(v28 > 1), v27 + 1, 1, v42);
        char v42 = (void *)result;
      }
      char v29 = v42;
      v42[2] = v27 + 1;
      uint64_t v30 = &v29[2 * v27];
      v30[4] = v24;
      v30[5] = v22;
      uint64_t v4 = v32;
      a1 = v23;
    }
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v34) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v34) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v34) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_31:
    swift_release();
    return (uint64_t)v42;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v10 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v34) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

void *sub_1000651A4(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = *(void *)(a3 + 32);
  swift_bridgeObjectRetain();
  a1(v30, &v31);
  if (v3)
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = v4 - 1;
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v25 = v9;
    while (1)
    {
      swift_bridgeObjectRelease();
      sub_10001FDF0((uint64_t)v30, (uint64_t)v28, &qword_10070AB58);
      sub_10001FDF0((uint64_t)v28, (uint64_t)v29, &qword_10070AB58);
      if (sub_100069C6C((uint64_t)v29) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_100017B88(0, v7[2] + 1, 1, v7);
        }
        unint64_t v11 = v7[2];
        unint64_t v10 = v7[3];
        if (v11 >= v10 >> 1) {
          uint64_t v7 = sub_100017B88((void *)(v10 > 1), v11 + 1, 1, v7);
        }
        sub_10001FDF0((uint64_t)v28, (uint64_t)v26, &qword_10070AB58);
        long long v7[2] = v11 + 1;
        unint64_t v12 = &v7[30 * v11];
        long long v13 = v26[2];
        long long v14 = v26[1];
        void v12[2] = v26[0];
        v12[3] = v14;
        v12[4] = v13;
        long long v15 = v26[6];
        long long v16 = v26[4];
        long long v17 = v26[3];
        v12[7] = v26[5];
        v12[8] = v15;
        void v12[5] = v17;
        v12[6] = v16;
        long long v18 = v26[10];
        long long v19 = v26[8];
        long long v20 = v26[7];
        v12[11] = v26[9];
        v12[12] = v18;
        v12[9] = v20;
        v12[10] = v19;
        long long v21 = v27[0];
        long long v22 = v26[12];
        long long v23 = v26[11];
        *(_OWORD *)((char *)v12 + 249) = *(_OWORD *)((char *)v27 + 9);
        v12[14] = v22;
        v12[15] = v21;
        v12[13] = v23;
        uint64_t v9 = v25;
      }
      if (v9 == v8) {
        break;
      }
      uint64_t v31 = *(void *)(a3 + 8 * v8 + 40);
      swift_bridgeObjectRetain();
      a1(v30, &v31);
      ++v8;
    }
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_1000653E4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10001A614(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      swift_getKeyPath();
      swift_getAtKeyPath();
      swift_release();
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_10001A614(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v7;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000654F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v7 = sub_10000566C(&qword_100709E30);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v11);
  long long v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v14 - 8);
  long long v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000079E4(a3, (uint64_t)v13, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v17 < 1)
  {
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    uint64_t v18 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v13, (uint64_t)v10, &qword_100709E38);
    sub_10001FDF0((uint64_t)v10, (uint64_t)v16, &qword_100709E30);
    uint64_t v18 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, v18, 1, v7);
  sub_100065700(a1, v21, (uint64_t)v16, a4);
  return sub_100007A48(a3, &qword_100709E38);
}

uint64_t sub_100065700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)a4 + *(int *)(type metadata accessor for MessageBatches(0) + 24);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1000630DC(v13);
  MessageIdentifierSet.count.getter();
  uint64_t v15 = v14;
  sub_100007A48((uint64_t)v10, &qword_100709E38);
  long long v16 = sub_1000653E4(a2);
  uint64_t v17 = v16[2];
  if (v17)
  {
    uint64_t v18 = 0;
    long long v19 = v16 + 4;
    while (1)
    {
      uint64_t v20 = *v19++;
      BOOL v21 = __OFADD__(v18, v20);
      v18 += v20;
      if (v21) {
        break;
      }
      if (!--v17) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v18 = 0;
LABEL_7:
    swift_bridgeObjectRelease();
    if (v15 == v18)
    {
      *a4 = a1;
      uint64_t v24 = a2;
      swift_bridgeObjectRetain();
      sub_100068268(&v24);
      swift_bridgeObjectRelease();
      a4[1] = v24;
      return sub_10006909C(a3, v11);
    }
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000658B8(uint64_t result)
{
  uint64_t v1 = 4507;
  if (result < 4507) {
    uint64_t v1 = result;
  }
  if (v1 <= 1000) {
    uint64_t v2 = 1000;
  }
  else {
    uint64_t v2 = v1;
  }
LABEL_7:
  uint64_t v3 = v2;
  if (v2 >= 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 + 1;
  }
  uint64_t v5 = v4 >> 1;
  if ((v4 >> 1))
  {
    uint64_t v7 = 1;
    uint64_t v9 = 1;
    if ((unint64_t)(v2 + 1) < 3) {
      goto LABEL_19;
    }
LABEL_41:
    uint64_t v9 = 1;
    uint64_t v16 = 31;
    while (1)
    {
      if (v5)
      {
        uint64_t v18 = v9 * v16;
        if ((unsigned __int128)(v9 * (__int128)v16) >> 64 != (v9 * v16) >> 63) {
          goto LABEL_59;
        }
        if (v2 == -1 && v18 == 0x8000000000000000) {
          goto LABEL_60;
        }
        uint64_t v9 = v18 % v2;
      }
      uint64_t v19 = v16 * v16;
      if ((unsigned __int128)(v16 * (__int128)v16) >> 64 != (v16 * v16) >> 63) {
        goto LABEL_56;
      }
      if (v2 == -1 && v19 == 0x8000000000000000) {
        break;
      }
      uint64_t v16 = v19 % v2;
      BOOL v17 = (unint64_t)v5 >= 2;
      v5 >>= 1;
      if (!v17) {
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v6 = 1;
  do
  {
    uint64_t v7 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    uint64_t v8 = v5;
    v5 /= 2;
    ++v6;
  }
  while ((v5 & 1) == 0);
  if ((unint64_t)(v8 + 1) >= 3)
  {
    if (!v2) {
      goto LABEL_64;
    }
    goto LABEL_41;
  }
  uint64_t v9 = 1;
LABEL_16:
  if (v7 < 1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
LABEL_19:
  if (v2)
  {
    --v2;
    BOOL v10 = __OFSUB__(v3, 1);
    uint64_t v11 = 1;
    while (1)
    {
      uint64_t v12 = v9 * v9;
      if ((unsigned __int128)(v9 * (__int128)v9) >> 64 != (v9 * v9) >> 63) {
        break;
      }
      if (v3 == -1 && v12 == 0x8000000000000000) {
        goto LABEL_57;
      }
      uint64_t v13 = v12 % v3;
      if (v13 == 1 && v9 != 1)
      {
        if (v10) {
          goto LABEL_58;
        }
        if (v9 != v2) {
          goto LABEL_6;
        }
      }
      if (v7 == v11)
      {
        if (v13 == 1)
        {
          uint64_t result = sub_100065B30(73, v3);
          if ((result & 1) == 0) {
            return v3;
          }
        }
LABEL_6:
        if (v3 == 0x8000000000000000) {
          goto LABEL_61;
        }
        goto LABEL_7;
      }
      uint64_t v9 = v13;
      if (__OFADD__(v11++, 1))
      {
        __break(1u);
        goto LABEL_55;
      }
    }
LABEL_53:
    __break(1u);
    return v3;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_100065AA0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    return 1;
  }
  if (a3)
  {
    uint64_t v3 = result;
    uint64_t result = 1;
    while (1)
    {
      if (a2)
      {
        uint64_t v4 = result * v3;
        if ((unsigned __int128)(result * (__int128)v3) >> 64 != (result * v3) >> 63) {
          goto LABEL_20;
        }
        if (v4 == 0x8000000000000000 && a3 == -1) {
          goto LABEL_22;
        }
        uint64_t result = v4 % a3;
      }
      uint64_t v6 = v3 * v3;
      if ((unsigned __int128)(v3 * (__int128)v3) >> 64 != (v3 * v3) >> 63) {
        break;
      }
      if (v6 == 0x8000000000000000 && a3 == -1) {
        goto LABEL_21;
      }
      uint64_t v3 = v6 % a3;
      BOOL v8 = (unint64_t)a2 > 1;
      a2 >>= 1;
      if (!v8) {
        return result;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100065B30(uint64_t result, uint64_t a2)
{
  if (a2 >= 0) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = a2 + 1;
  }
  uint64_t v4 = v3 >> 1;
  if (((v3 >> 1) & 1) == 0)
  {
    uint64_t v5 = 1;
    while (1)
    {
      uint64_t v6 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_35;
      }
      if (v4 >= 0) {
        uint64_t v7 = v4;
      }
      else {
        uint64_t v7 = v4 + 1;
      }
      uint64_t v4 = v7 >> 1;
      ++v5;
      if ((v7 >> 1))
      {
        uint64_t result = sub_100065AA0(result, v4, a2);
        if (v6 >= 1) {
          goto LABEL_14;
        }
        __break(1u);
        break;
      }
    }
  }
  uint64_t result = sub_100065AA0(result, v4, a2);
  uint64_t v6 = 1;
LABEL_14:
  if (a2)
  {
    BOOL v8 = __OFSUB__(a2, 1);
    uint64_t v9 = 1;
    while (1)
    {
      uint64_t v10 = result * result;
      if ((unsigned __int128)(result * (__int128)result) >> 64 != (result * result) >> 63) {
        break;
      }
      if (a2 == -1 && v10 == 0x8000000000000000) {
        goto LABEL_36;
      }
      uint64_t v11 = v10 % a2;
      BOOL v13 = v10 % a2 == 1;
      BOOL v12 = v10 % a2 != 1;
      BOOL v13 = !v13 || result == 1;
      if (!v13)
      {
        if (v8) {
          goto LABEL_37;
        }
        if (result != a2 - 1) {
          return 1;
        }
      }
      if (v6 == v9) {
        return v12;
      }
      uint64_t result = v11;
      if (__OFADD__(v9++, 1))
      {
        __break(1u);
        return 1;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100065C30()
{
  uint64_t v1 = sub_10000566C(&qword_100709E30);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v33 = (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  BOOL v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for MessageBatches.OtherUIDsBatchSequence(0);
  __chkstk_darwin(v13);
  uint64_t v34 = (uint64_t)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v0[1];
  int64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    uint64_t v28 = v13;
    char v29 = v12;
    uint64_t v30 = v7;
    uint64_t v31 = v1;
    char v32 = v0;
    unsigned int v36 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001A6D4(0, v16, 0);
    BOOL v17 = v36;
    sub_100063E18();
    for (uint64_t i = 0; i != v16; ++i)
    {
      uint64_t v35 = *(void *)(v15 + 8 * i + 32);
      Range<>.init<A>(_:)((uint64_t)&v35, (uint64_t)&type metadata for UID);
      uint64_t v35 = v19;
      sub_10001FC6C();
      sub_1005E36A0();
      unsigned int v36 = v17;
      unint64_t v21 = v17[2];
      unint64_t v20 = v17[3];
      if (v21 >= v20 >> 1)
      {
        sub_10001A6D4(v20 > 1, v21 + 1, 1);
        BOOL v17 = v36;
      }
      long long v17[2] = v21 + 1;
      sub_10001FDF0((uint64_t)v4, (uint64_t)v17+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v21, &qword_100709E30);
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = v31;
    unint64_t v0 = v32;
    BOOL v12 = v29;
    uint64_t v7 = v30;
    uint64_t v13 = v28;
  }
  unsigned int v36 = v17;
  uint64_t v22 = type metadata accessor for MessageBatches(0);
  sub_1000079E4((uint64_t)v0 + *(int *)(v22 + 24), (uint64_t)v7, &qword_10070A000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_100007A48((uint64_t)v7, &qword_10070A000);
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v23 = v33;
    sub_1000079E4((uint64_t)v7, v33, &qword_100709E38);
    sub_100007A48((uint64_t)v7, &qword_100709E30);
    sub_10001FDF0(v23, (uint64_t)v12, &qword_100709E38);
  }
  uint64_t v24 = *v0;
  uint64_t v25 = v34;
  sub_10001FDF0((uint64_t)v12, v34, &qword_100709E38);
  *(void *)(v25 + *(int *)(v13 + 20)) = v24;
  sub_100011630(v25);
  return v36;
}

void sub_100065FF0(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000566C(&qword_100709E30);
  uint64_t v53 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v55 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v52 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  BOOL v17 = (char *)&v48 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v56 = v1;
  uint64_t v57 = v6;
  if (sub_1005E3630())
  {
    unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
    v20(a1, 1, 1, v3);
  }
  else
  {
    uint64_t v50 = v5;
    uint64_t v51 = a1;
    uint64_t v49 = v3;
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v54 = (void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v21 = v56;
    while (1)
    {
      MessageIdentifierSet.ranges.getter((uint64_t)v11);
      sub_10000566C(&qword_10070A8F8);
      uint64_t v22 = sub_1005E35B0();
      uint64_t v23 = sub_1005E35E0();
      uint64_t v24 = sub_1005E35B0();
      uint64_t v25 = sub_1005E35E0();
      if (v22 < v24 || v25 < v22)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      uint64_t v27 = sub_1005E35B0();
      uint64_t v28 = sub_1005E35E0();
      if (v23 < v27 || v28 < v23) {
        goto LABEL_32;
      }
      if (__OFSUB__(v23, v22)) {
        goto LABEL_33;
      }
      sub_100007A48((uint64_t)v11, &qword_10070A9C0);
      if (v23 - v22 > 486) {
        break;
      }
      MessageIdentifierSet.count.getter();
      uint64_t v30 = v29;
      uint64_t v31 = *(void *)(v21
                      + *(int *)(type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator(0) + 20));
      if (v30 >= v31 || (sub_1005E3630() & 1) != 0) {
        break;
      }
      MessageIdentifierSet.count.getter();
      uint64_t v33 = v31 - v32;
      if (__OFSUB__(v31, v32)) {
        goto LABEL_34;
      }
      MessageIdentifierSet.ranges.getter((uint64_t)v11);
      uint64_t v34 = sub_1005E35B0();
      uint64_t v35 = sub_1005E35E0();
      uint64_t v36 = sub_1005E35B0();
      uint64_t v37 = sub_1005E35E0();
      if (v34 < v36 || v37 < v34) {
        goto LABEL_35;
      }
      uint64_t v38 = sub_1005E35B0();
      uint64_t v39 = sub_1005E35E0();
      if (v35 < v38 || v39 < v35) {
        goto LABEL_36;
      }
      uint64_t v40 = v35 - v34;
      if (__OFSUB__(v35, v34)) {
        goto LABEL_37;
      }
      sub_100007A48((uint64_t)v11, &qword_10070A9C0);
      if (__OFSUB__(487, v40)) {
        goto LABEL_38;
      }
      if (487 - v40 >= v33) {
        uint64_t v41 = v33;
      }
      else {
        uint64_t v41 = 487 - v40;
      }
      uint64_t v21 = v56;
      sub_10006654C(v41, (uint64_t)v17);
      uint64_t v42 = v57;
      sub_1005E3660();
      (*v54)(v55, v17, v42);
      sub_1005E3670();
      sub_100007A48((uint64_t)v17, &qword_100709E38);
    }
    uint64_t v43 = v52;
    sub_1000079E4((uint64_t)v19, v52, &qword_100709E38);
    MessageIdentifierSet.count.getter();
    uint64_t v45 = (uint64_t)v50;
    uint64_t v44 = v51;
    if (v46 < 1)
    {
      sub_100007A48(v43, &qword_100709E38);
      uint64_t v47 = 1;
    }
    else
    {
      sub_10001FDF0(v43, (uint64_t)v50, &qword_100709E38);
      sub_10001FDF0(v45, v44, &qword_100709E30);
      uint64_t v47 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v44, v47, 1, v49);
    sub_100007A48((uint64_t)v19, &qword_100709E38);
  }
}

void sub_10006654C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = sub_10000566C(&qword_100709E60);
  uint64_t v4 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070A9C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10070A9D0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v44 - v13;
  uint64_t v15 = sub_10000566C(&qword_100709E38);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v47 = (uint64_t)v44 - v19;
  if (a1 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v20 = sub_10001FC6C();
  if (!a1)
  {
    sub_1005E3680();
    return;
  }
  v44[0] = a2;
  v44[1] = v20;
  sub_1005E3680();
  MessageIdentifierSet.ranges.getter((uint64_t)v8);
  sub_1000079E4((uint64_t)v8, (uint64_t)v12, &qword_10070A9C0);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v21 = sub_1005E35E0();
  sub_100007A48((uint64_t)v8, &qword_10070A9C0);
  *(void *)&v12[*(int *)(v9 + 36)] = v21;
  sub_10001FDF0((uint64_t)v12, (uint64_t)v14, &qword_10070A9D0);
  uint64_t v22 = *(int *)(v9 + 36);
  uint64_t v23 = *(void *)&v14[v22];
  if (v23 == sub_1005E35B0())
  {
LABEL_21:
    sub_100007A48((uint64_t)v14, &qword_10070A9D0);
    sub_10001FDF0(v47, v44[0], &qword_100709E38);
    return;
  }
  uint64_t v24 = 0;
  uint64_t v25 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  while (1)
  {
    uint64_t v26 = v23 - 1;
    if (__OFSUB__(v23, 1))
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v27 = sub_1005E35B0();
    uint64_t v28 = sub_1005E35E0();
    if (v26 < v27 || v26 >= v28) {
      goto LABEL_23;
    }
    *(void *)&v14[v22] = v26;
    sub_10000566C(&qword_10070A9C0);
    MessageIdentifierSet.RangeView.subscript.getter();
    unint64_t v29 = HIDWORD(v50) - (unint64_t)v50 + 1;
    uint64_t v30 = v24 + v29;
    if (__OFADD__(v24, v29)) {
      goto LABEL_24;
    }
    if (v30 > a1) {
      break;
    }
    unint64_t v49 = v50;
    sub_100063E18();
    Range<>.init<A>(_:)((uint64_t)&v49, (uint64_t)&type metadata for UID);
    unint64_t v49 = v31;
    sub_1005E36A0();
    (*v25)(v45, v18, v46);
    sub_1005E3670();
    sub_100007A48((uint64_t)v18, &qword_100709E38);
    if (v30 < a1)
    {
      uint64_t v23 = *(void *)&v14[v22];
      uint64_t v24 = v30;
      if (v23 != sub_1005E35B0()) {
        continue;
      }
    }
    goto LABEL_21;
  }
  if (__OFSUB__(a1, v24)) {
    goto LABEL_26;
  }
  unint64_t v32 = sub_1000681C8(a1 - v24, v50 | ((unint64_t)HIDWORD(v50) << 32), (uint64_t (*)(uint64_t))sub_100068C18);
  uint64_t v34 = v33;
  uint64_t v35 = HIDWORD(v32) & 1;
  LOBYTE(v49) = BYTE4(v32) & 1;
  uint64_t v37 = HIDWORD(v36) & 1;
  char v48 = BYTE4(v36) & 1;
  uint64_t v38 = v32;
  uint64_t v39 = v36;
  unint64_t v40 = sub_1001CB458(v32 | (unint64_t)(v35 << 32), v36 | ((unint64_t)(BYTE4(v36) & 1) << 32));
  if ((v40 & 0x100000000) == 0)
  {
    unsigned int v41 = v40;
    LOBYTE(v49) = v35;
    char v48 = v37;
    uint64_t v42 = sub_100070014(v38 | (v35 << 32), v39 | (v37 << 32), v34);
    if ((v42 & 0x100000000) != 0) {
      goto LABEL_29;
    }
    if (v42 >= v41)
    {
      unint64_t v49 = __PAIR64__(v42, v41);
      sub_100063E18();
      Range<>.init<A>(_:)((uint64_t)&v49, (uint64_t)&type metadata for UID);
      unint64_t v49 = v43;
      sub_1005E36A0();
      (*v25)(v45, v18, v46);
      sub_1005E3670();
      sub_100007A48((uint64_t)v18, &qword_100709E38);
      goto LABEL_21;
    }
    goto LABEL_27;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_100066A80(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = sub_10000566C(&qword_100709E60);
  uint64_t v4 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070AB20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10070AB28);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v44 - v13;
  uint64_t v15 = sub_10000566C(&qword_10070AB30);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v47 = (uint64_t)v44 - v19;
  if (a1 < 0)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v20 = sub_10001FC6C();
  if (!a1)
  {
    sub_1005E3680();
    return;
  }
  v44[0] = a2;
  v44[1] = v20;
  sub_1005E3680();
  MessageIdentifierSet.ranges.getter((uint64_t)v8);
  sub_1000079E4((uint64_t)v8, (uint64_t)v12, &qword_10070AB10);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v21 = sub_1005E35E0();
  sub_100007A48((uint64_t)v8, &qword_10070AB10);
  *(void *)&v12[*(int *)(v9 + 36)] = v21;
  sub_10001FDF0((uint64_t)v12, (uint64_t)v14, &qword_10070AB28);
  uint64_t v22 = *(int *)(v9 + 36);
  uint64_t v23 = *(void *)&v14[v22];
  if (v23 == sub_1005E35B0())
  {
LABEL_21:
    sub_100007A48((uint64_t)v14, &qword_10070AB28);
    sub_10001FDF0(v47, v44[0], &qword_10070AB30);
    return;
  }
  uint64_t v24 = 0;
  uint64_t v25 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  while (1)
  {
    uint64_t v26 = v23 - 1;
    if (__OFSUB__(v23, 1))
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v27 = sub_1005E35B0();
    uint64_t v28 = sub_1005E35E0();
    if (v26 < v27 || v26 >= v28) {
      goto LABEL_23;
    }
    *(void *)&v14[v22] = v26;
    sub_10000566C(&qword_10070AB10);
    MessageIdentifierSet.RangeView.subscript.getter();
    unint64_t v29 = HIDWORD(v50) - (unint64_t)v50 + 1;
    uint64_t v30 = v24 + v29;
    if (__OFADD__(v24, v29)) {
      goto LABEL_24;
    }
    if (v30 > a1) {
      break;
    }
    unint64_t v49 = v50;
    sub_100064094();
    Range<>.init<A>(_:)((uint64_t)&v49, (uint64_t)&type metadata for SequenceNumber);
    unint64_t v49 = v31;
    sub_1005E36A0();
    (*v25)(v45, v18, v46);
    sub_1005E3670();
    sub_100007A48((uint64_t)v18, &qword_10070AB30);
    if (v30 < a1)
    {
      uint64_t v23 = *(void *)&v14[v22];
      uint64_t v24 = v30;
      if (v23 != sub_1005E35B0()) {
        continue;
      }
    }
    goto LABEL_21;
  }
  if (__OFSUB__(a1, v24)) {
    goto LABEL_26;
  }
  unint64_t v32 = sub_1000681C8(a1 - v24, v50 | ((unint64_t)HIDWORD(v50) << 32), (uint64_t (*)(uint64_t))sub_100068C18);
  uint64_t v34 = v33;
  uint64_t v35 = HIDWORD(v32) & 1;
  LOBYTE(v49) = BYTE4(v32) & 1;
  uint64_t v37 = HIDWORD(v36) & 1;
  char v48 = BYTE4(v36) & 1;
  uint64_t v38 = v32;
  uint64_t v39 = v36;
  unint64_t v40 = sub_1001CB458(v32 | (unint64_t)(v35 << 32), v36 | ((unint64_t)(BYTE4(v36) & 1) << 32));
  if ((v40 & 0x100000000) == 0)
  {
    unsigned int v41 = v40;
    LOBYTE(v49) = v35;
    char v48 = v37;
    uint64_t v42 = sub_100070014(v38 | (v35 << 32), v39 | (v37 << 32), v34);
    if ((v42 & 0x100000000) != 0) {
      goto LABEL_29;
    }
    if (v42 >= v41)
    {
      unint64_t v49 = __PAIR64__(v42, v41);
      sub_100064094();
      Range<>.init<A>(_:)((uint64_t)&v49, (uint64_t)&type metadata for SequenceNumber);
      unint64_t v49 = v43;
      sub_1005E36A0();
      (*v25)(v45, v18, v46);
      sub_1005E3670();
      sub_100007A48((uint64_t)v18, &qword_10070AB30);
      goto LABEL_21;
    }
    goto LABEL_27;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_100066FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000079E4(v2, a2, &qword_100709E38);
  uint64_t v5 = *(void *)(v2 + *(int *)(a1 + 20));
  *(void *)(a2 + *(int *)(type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator(0) + 20)) = v5;
  return sub_100069178(v2);
}

size_t sub_100067024()
{
  size_t v1 = sub_10002569C(v0);
  sub_100069178(v0);
  return v1;
}

uint64_t sub_10006705C(uint64_t result)
{
  if ((result & 0x100000000) == 0)
  {
    uint64_t v2 = *(void **)(v1 + 8);
    if (v2[2])
    {
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        if (v2[2])
        {
LABEL_5:
          v2[4] = v4;
          *(void *)(v1 + 8) = v2;
          return result;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_10009342C(v2);
        uint64_t v2 = (void *)result;
        if (*(void *)(result + 16)) {
          goto LABEL_5;
        }
      }
      __break(1u);
    }
    else
    {
      sub_10000566C(&qword_100709FF8);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1005F6670;
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v1 + 8) = v3;
    }
  }
  return result;
}

uint64_t sub_100067184@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10070A000);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000566C(&qword_100709E38);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v39 - v22;
  if ((a1 & 0x100000000) != 0)
  {
    uint64_t v36 = *v3;
    uint64_t v37 = type metadata accessor for MessageBatches(0);
    sub_1000079E4((uint64_t)v3 + *(int *)(v37 + 24), (uint64_t)v12, &qword_10070A000);
    return sub_100065700(v36, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v12, a2);
  }
  else
  {
    unint64_t v40 = v8;
    uint64_t v41 = v21;
    uint64_t v42 = a2;
    LODWORD(v45) = a1;
    int v46 = -1;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v45 = v47;
    Range<>.init<A>(_:)((uint64_t)&v45, (uint64_t)&type metadata for UID);
    uint64_t v45 = v24;
    sub_10001FC6C();
    uint64_t v25 = sub_1005E36A0();
    uint64_t v27 = *v3;
    uint64_t v26 = v3[1];
    __chkstk_darwin(v25);
    *(&v39 - 2) = (uint64_t)v23;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_100064C00((void (*)(void *__return_ptr, void))sub_10006911C, (uint64_t)(&v39 - 4), v26);
    swift_bridgeObjectRelease();
    uint64_t v29 = type metadata accessor for MessageBatches(0);
    sub_1000079E4((uint64_t)v3 + *(int *)(v29 + 24), (uint64_t)v14, &qword_10070A000);
    uint64_t v30 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v14, 1, v44) != 1)
    {
      uint64_t v31 = (uint64_t)v14;
      uint64_t v32 = (uint64_t)v40;
      sub_10001FDF0(v31, (uint64_t)v40, &qword_100709E30);
      sub_1000079E4(v32, (uint64_t)v17, &qword_100709E38);
      sub_100007A48(v32, &qword_100709E30);
      uint64_t v30 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, v30, 1, v18);
    int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
    uint64_t v35 = v41;
    uint64_t v34 = v42;
    if (v33 == 1)
    {
      sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
      sub_100007A48((uint64_t)v17, &qword_10070A2D0);
    }
    else
    {
      sub_10001FDF0((uint64_t)v17, v41, &qword_100709E38);
    }
    sub_1000654F0(v27, (uint64_t)v28, v35, v34);
    return sub_100007A48((uint64_t)v23, &qword_100709E38);
  }
}

uint64_t sub_1000675E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_100709E38);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v25 = *a1;
  sub_100063E18();
  Range<>.init<A>(_:)((uint64_t)&v25, (uint64_t)&type metadata for UID);
  uint64_t v25 = v15;
  sub_10001FC6C();
  sub_1005E36A0();
  MessageIdentifierSet.intersection(_:)(a2, v9);
  sub_100007A48((uint64_t)v12, &qword_100709E38);
  unint64_t v16 = sub_1000702CC();
  if ((v16 & 0x100000000) != 0
    || (unsigned int v17 = v16,
        MessageIdentifierSet.ranges.getter((uint64_t)v8),
        uint64_t v18 = sub_100070018(),
        char v20 = v19,
        sub_100007A48((uint64_t)v8, &qword_10070A9C0),
        (v20 & 1) != 0))
  {
    uint64_t result = sub_100007A48((uint64_t)v14, &qword_100709E38);
    unint64_t v23 = 0;
    char v22 = 1;
    goto LABEL_6;
  }
  uint64_t result = sub_100007A48((uint64_t)v14, &qword_100709E38);
  if (HIDWORD(v18) >= v17)
  {
    char v22 = 0;
    unint64_t v23 = v18 & 0xFFFFFFFF00000000 | v17;
LABEL_6:
    *(void *)a3 = v23;
    *(unsigned char *)(a3 + 8) = v22;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1000677E8(Swift::Int a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v7 = sub_10000566C(&qword_10070AB48);
  uint64_t v48 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10070AB30);
  uint64_t v11 = __chkstk_darwin(v10);
  int v46 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v39 - v14;
  __chkstk_darwin(v13);
  unsigned int v17 = (char *)&v39 - v16;
  v18.Swift::UInt32 rawValue = WindowOfInterestSize.lowestSequenceNumber(messageCount:)(a1).rawValue;
  if ((unint64_t)(a1 - 0x100000000) < 0xFFFFFFFF00000001)
  {
    char v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
    v19(a4, 1, 1, v7);
    return;
  }
  unint64_t v40 = v9;
  uint64_t v42 = v17;
  uint64_t v43 = a4;
  uint64_t v44 = v7;
  Swift::UInt32 rawValue = v18.rawValue;
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 16) = a1;
  *(unsigned char *)(v21 + 20) = 0;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = a3;
  Swift::UInt32 v45 = rawValue;
  *(_DWORD *)(v22 + 32) = rawValue;
  *(_DWORD *)(v22 + 36) = a1;
  uint64_t v23 = v47;
  *(void *)(v22 + 40) = v47;
  *(void *)(v22 + 48) = a3;
  sub_10000566C(&qword_10070AB50);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = sub_100069BDC;
  *(void *)(inited + 24) = v22;
  uint64_t v41 = inited;
  sub_10001FC6C();
  sub_1005E3680();
  swift_beginAccess();
  if (*(unsigned char *)(v21 + 20))
  {
LABEL_6:
    *(_DWORD *)(v21 + 16) = 0;
    *(unsigned char *)(v21 + 20) = 1;
    uint64_t v25 = (uint64_t)v42;
    sub_10001FDF0((uint64_t)v15, (uint64_t)v42, &qword_10070AB30);
    Swift::UInt32 v49 = v45;
    MessageIdentifierSet.insert(_:)();
    uint64_t v15 = v46;
    sub_1000079E4(v25, (uint64_t)v46, &qword_10070AB30);
    MessageIdentifierSet.count.getter();
    uint64_t v26 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
    if (v27 < 1)
    {
LABEL_26:
      swift_retain();
      sub_100007A48((uint64_t)v15, &qword_10070AB30);
      (*v26)(v43, 1, 1, v44);
    }
    else
    {
      uint64_t v28 = (uint64_t)v15;
      uint64_t v29 = (uint64_t)v40;
      sub_10001FDF0(v28, (uint64_t)v40, &qword_10070AB30);
      uint64_t v30 = v29;
      uint64_t v31 = v43;
      sub_10001FDF0(v30, v43, &qword_10070AB48);
      (*v26)(v31, 0, 1, v44);
      swift_retain();
    }
    swift_release();
    sub_100007A48(v25, &qword_10070AB30);
    swift_release();
    return;
  }
  uint64_t v25 = v45;
  uint64_t v26 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 == 0x8000000000000000 && a3 == -1);
  uint64_t v33 = v23 % a3;
  while (1)
  {
    uint64_t v35 = *(unsigned int *)(v21 + 16);
    if (v35 - v25 < a3)
    {
      LODWORD(v34) = 0;
      goto LABEL_16;
    }
    uint64_t v36 = a3;
    if (v35 == a1)
    {
      if (v26) {
        goto LABEL_32;
      }
      uint64_t v36 = a3 - v33;
      if (__OFSUB__(a3, v33)) {
        goto LABEL_31;
      }
    }
    BOOL v37 = __OFSUB__(0, v36);
    uint64_t v38 = -v36;
    if (v37) {
      break;
    }
    if (v38 > 0xFFFFFFFFLL) {
      goto LABEL_29;
    }
    uint64_t v34 = v38 + v35;
    if (v34 < 1) {
      goto LABEL_30;
    }
    if (HIDWORD(v34))
    {
      __break(1u);
      goto LABEL_26;
    }
LABEL_16:
    *(_DWORD *)(v21 + 16) = v34;
    *(unsigned char *)(v21 + 20) = v35 - v25 < a3;
    Swift::UInt32 v49 = v35;
    MessageIdentifierSet.insert(_:)();
    if (*(unsigned char *)(v21 + 20) == 1) {
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

uint64_t sub_100067C70(unsigned int *a1, int64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = swift_beginAccess();
  if ((a1[1] & 1) != 0 || (uint64_t v13 = *a1, v13 - a3 < a2))
  {
    LODWORD(v14) = 0;
    char v15 = 1;
LABEL_14:
    uint64_t result = swift_beginAccess();
    *a1 = v14;
    *((unsigned char *)a1 + 4) = v15;
    return result;
  }
  if (v13 != a4) {
    goto LABEL_9;
  }
  if (!a6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a5 == 0x8000000000000000 && a6 == -1) {
    goto LABEL_21;
  }
  BOOL v16 = __OFSUB__(a2, a5 % a6);
  a2 -= a5 % a6;
  if (!v16)
  {
LABEL_9:
    uint64_t v17 = -a2;
    if (__OFSUB__(0, a2))
    {
      __break(1u);
    }
    else if (v17 <= 0xFFFFFFFFLL)
    {
      unint64_t v14 = v13 - a2;
      if (v17 + v13 >= 1)
      {
        if (!HIDWORD(v14))
        {
          char v15 = 0;
          goto LABEL_14;
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_100067D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000697BC(a2);
  sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  sub_1000654F0(a1, v11, (uint64_t)v10, a4);
  if ((a3 & 1) == 0) {
    return sub_100007A48(a2, &qword_100709E38);
  }
  uint64_t v12 = (void *)a4[1];
  unint64_t v13 = v12[2];
  if (!v13) {
    return sub_100007A48(a2, &qword_100709E38);
  }
  v16[1] = 1;
  v16[0] = HIDWORD(v12[v13 + 3]);
  sub_100063E18();
  static MessageIdentifier.... infix(_:_:)();
  uint64_t v14 = v17;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10009342C(v12);
    uint64_t v12 = (void *)result;
  }
  if (v13 <= v12[2])
  {
    v12[v13 + 3] = v14;
    a4[1] = v12;
    return sub_100007A48(a2, &qword_100709E38);
  }
  __break(1u);
  return result;
}

uint64_t sub_100067EE0()
{
  if (!*(void *)(*(void *)(v0 + 8) + 16)) {
    return 0;
  }
  sub_100063E18();
  static MessageIdentifier.... infix(_:_:)();
  return v2;
}

unint64_t sub_100067F58()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 8) + 16);
  if (v1)
  {
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    uint64_t v2 = v4;
  }
  else
  {
    uint64_t v2 = 0;
  }
  return v2 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_100067FDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006802C(a1, &qword_10070AB10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000B1D38, &qword_10070AB18, a2);
}

uint64_t sub_100068004@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006802C(a1, &qword_10070A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000B1D38, &qword_10070A9D8, a2);
}

uint64_t sub_10006802C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = v5;
  uint64_t v12 = sub_10000566C(a2);
  uint64_t result = __chkstk_darwin(v12 - 8);
  char v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_10000566C(&qword_10070A8F8);
  uint64_t v16 = sub_1005E35E0();
  uint64_t v17 = sub_1005E35B0();
  uint64_t v18 = a3(v16, -a1, v17);
  char v20 = v19;
  sub_1000079E4(v9, (uint64_t)v15, a2);
  if (v20) {
    uint64_t v18 = sub_1005E35B0();
  }
  sub_100007A48((uint64_t)v15, a2);
  uint64_t result = sub_1005E35E0();
  if (result < v18) {
    goto LABEL_10;
  }
  uint64_t v21 = result;
  uint64_t v22 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (result < v22)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v18 < v22)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (result >= v21)
  {
    uint64_t v23 = sub_10000566C(a4);
    sub_1000079E4(v9, (uint64_t)a5 + *(int *)(v23 + 40), a2);
    *a5 = v18;
    a5[1] = v21;
    return sub_100007A48(v9, a2);
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1000681C8(unint64_t result, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a2;
    uint64_t v4 = a2 + ~HIDWORD(a2);
    if (v4 > 0 || v4 <= -(uint64_t)result)
    {
      unint64_t v6 = a3(0x100000000);
      uint64_t v7 = HIDWORD(v6) & 1;
      uint64_t v3 = v6;
    }
    else
    {
      LOBYTE(v7) = 0;
    }
    return v3 | ((unint64_t)v7 << 32);
  }
  return result;
}

Swift::Int sub_100068268(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000A4BD4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1000682D4(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1000682D4(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = 0;
      uint64_t v84 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v86 = *(_DWORD *)(v84 + 8 * i);
        uint64_t v87 = v83;
        do
        {
          if (*(_DWORD *)(v84 + v87) >= v86) {
            break;
          }
          if (!v84) {
            goto LABEL_140;
          }
          uint64_t v88 = (unsigned int *)(v84 + v87);
          unsigned int v89 = *(_DWORD *)(v84 + v87 + 12);
          *(void *)(v84 + v87 + 8) = *(void *)(v84 + v87);
          *uint64_t v88 = v86;
          v88[1] = v89;
          v87 -= 8;
        }
        while (v87 != -8);
        v83 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v6 = result;
  uint64_t v98 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      uint64_t v90 = v12;
      uint64_t v101 = v9;
      if (v13 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v91) {
            goto LABEL_144;
          }
          uint64_t v93 = v90;
          uint64_t v94 = *(void *)&v90[16 * v92 + 32];
          uint64_t v95 = *(void *)&v90[16 * v13 + 24];
          sub_10006899C((char *)(v91 + 8 * v94), (char *)(v91 + 8 * *(void *)&v90[16 * v13 + 16]), v91 + 8 * v95, __dst);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v93 = sub_1000A6DE0((uint64_t)v93);
          }
          if (v92 >= *((void *)v93 + 2)) {
            goto LABEL_133;
          }
          uint64_t v96 = &v93[16 * v92 + 32];
          *(void *)uint64_t v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v93 + 2);
          if (v13 > v97) {
            goto LABEL_134;
          }
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          uint64_t v90 = v93;
          *((void *)v93 + 2) = v97 - 1;
          unint64_t v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v101[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v101 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_10000566C(&qword_10070A9B8);
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    uint64_t v101 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v99 = *a1 - 8;
  uint64_t v100 = *a1 + 16;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v102 = v6;
  Swift::Int v103 = v3;
  uint64_t v104 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(_DWORD *)(v11 + 8 * v10);
      unsigned int v16 = *(_DWORD *)(v11 + 8 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (unsigned int *)(v100 + 8 * v14);
        unsigned int v18 = v15;
        while (1)
        {
          unsigned int v20 = *v17;
          v17 += 2;
          unsigned int v19 = v20;
          if (v16 < v15 == v18 >= v20) {
            break;
          }
          ++v10;
          unsigned int v18 = v19;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = (uint64_t *)(v99 + 8 * v10);
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          uint64_t v24 = (uint64_t *)(v11 + 8 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = *v24;
              *uint64_t v24 = *v21;
              *uint64_t v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v26 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v26 >= v3) {
      Swift::Int v26 = v3;
    }
    if (v26 < v14) {
      break;
    }
    if (v10 != v26)
    {
      uint64_t v27 = v99 + 8 * v10;
      do
      {
        unsigned int v28 = *(_DWORD *)(v11 + 8 * v10);
        Swift::Int v29 = v14;
        uint64_t v30 = v27;
        do
        {
          if (*(_DWORD *)v30 >= v28) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          int v31 = *(_DWORD *)(v30 + 12);
          *(void *)(v30 + 8) = *(void *)v30;
          *(_DWORD *)uint64_t v30 = v28;
          *(_DWORD *)(v30 + 4) = v31;
          v30 -= 8;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 8;
      }
      while (v10 != v26);
      Swift::Int v10 = v26;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1000A66A4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v33 = *((void *)v12 + 2);
    unint64_t v32 = *((void *)v12 + 3);
    unint64_t v13 = v33 + 1;
    uint64_t v11 = v104;
    if (v33 >= v32 >> 1)
    {
      uint64_t v82 = sub_1000A66A4((char *)(v32 > 1), v33 + 1, 1, v12);
      uint64_t v11 = v104;
      uint64_t v12 = v82;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v34 = v12 + 32;
    uint64_t v35 = &v12[16 * v33 + 32];
    *(void *)uint64_t v35 = v14;
    *((void *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        unint64_t v36 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v41 = &v34[16 * v13];
          uint64_t v42 = *((void *)v41 - 8);
          uint64_t v43 = *((void *)v41 - 7);
          BOOL v47 = __OFSUB__(v43, v42);
          uint64_t v44 = v43 - v42;
          if (v47) {
            goto LABEL_119;
          }
          uint64_t v46 = *((void *)v41 - 6);
          uint64_t v45 = *((void *)v41 - 5);
          BOOL v47 = __OFSUB__(v45, v46);
          uint64_t v39 = v45 - v46;
          char v40 = v47;
          if (v47) {
            goto LABEL_120;
          }
          unint64_t v48 = v13 - 2;
          Swift::UInt32 v49 = &v34[16 * v13 - 32];
          uint64_t v51 = *(void *)v49;
          uint64_t v50 = *((void *)v49 + 1);
          BOOL v47 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          if (v47) {
            goto LABEL_122;
          }
          BOOL v47 = __OFADD__(v39, v52);
          uint64_t v53 = v39 + v52;
          if (v47) {
            goto LABEL_125;
          }
          if (v53 >= v44)
          {
            long long v71 = &v34[16 * v36];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v47 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v47) {
              goto LABEL_129;
            }
            BOOL v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v65 = *((void *)v12 + 4);
            uint64_t v66 = *((void *)v12 + 5);
            BOOL v47 = __OFSUB__(v66, v65);
            uint64_t v58 = v66 - v65;
            char v59 = v47;
            goto LABEL_77;
          }
          uint64_t v38 = *((void *)v12 + 4);
          uint64_t v37 = *((void *)v12 + 5);
          BOOL v47 = __OFSUB__(v37, v38);
          uint64_t v39 = v37 - v38;
          char v40 = v47;
        }
        if (v40) {
          goto LABEL_121;
        }
        unint64_t v48 = v13 - 2;
        uint64_t v54 = &v34[16 * v13 - 32];
        uint64_t v56 = *(void *)v54;
        uint64_t v55 = *((void *)v54 + 1);
        BOOL v57 = __OFSUB__(v55, v56);
        uint64_t v58 = v55 - v56;
        char v59 = v57;
        if (v57) {
          goto LABEL_124;
        }
        char v60 = &v34[16 * v36];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v47 = __OFSUB__(v61, v62);
        uint64_t v63 = v61 - v62;
        if (v47) {
          goto LABEL_127;
        }
        if (__OFADD__(v58, v63)) {
          goto LABEL_128;
        }
        if (v58 + v63 >= v39)
        {
          BOOL v64 = v39 < v63;
LABEL_83:
          if (v64) {
            unint64_t v36 = v48;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v59) {
          goto LABEL_123;
        }
        char v67 = &v34[16 * v36];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v47 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v47) {
          goto LABEL_126;
        }
        if (v70 < v58) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        long long v76 = v12;
        long long v77 = &v34[16 * v75];
        uint64_t v78 = *(void *)v77;
        uint64_t v79 = &v34[16 * v36];
        uint64_t v80 = *((void *)v79 + 1);
        sub_10006899C((char *)(v11 + 8 * *(void *)v77), (char *)(v11 + 8 * *(void *)v79), v11 + 8 * v80, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v80 < v78) {
          goto LABEL_116;
        }
        if (v36 > *((void *)v76 + 2)) {
          goto LABEL_117;
        }
        *(void *)long long v77 = v78;
        *(void *)&v34[16 * v75 + 8] = v80;
        unint64_t v81 = *((void *)v76 + 2);
        if (v36 >= v81) {
          goto LABEL_118;
        }
        uint64_t v12 = v76;
        unint64_t v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((void *)v76 + 2) = v81 - 1;
        uint64_t v11 = v104;
        if (v81 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v102;
    Swift::Int v3 = v103;
    if (v10 >= v103)
    {
      uint64_t v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_10006899C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  Swift::Int v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      unsigned int v16 = &v4[8 * v13];
      Swift::Int v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        unsigned int v18 = v6;
        while (1)
        {
          unsigned int v19 = v17 + 8;
          unsigned int v20 = *((_DWORD *)v18 - 2);
          v18 -= 8;
          if (v20 >= *((_DWORD *)v16 - 2))
          {
            Swift::Int v22 = v16 - 8;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            unsigned int v18 = v6;
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = *(void *)v18;
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          Swift::Int v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    Swift::Int v14 = &v4[8 * v10];
    Swift::Int v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_DWORD *)v4 >= *(_DWORD *)v6)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          Swift::Int v23 = v4;
          unsigned int v15 = v6;
        }
        else
        {
          unsigned int v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        Swift::Int v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1000A67A0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

unint64_t sub_100068C18(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100068C30(a1, a2, a3, (uint64_t (*)(unint64_t, uint64_t))sub_100068C18);
}

unint64_t sub_100068C30(unint64_t result, uint64_t a2, unint64_t a3, uint64_t (*a4)(unint64_t, uint64_t))
{
  if ((result & 0x100000000) != 0)
  {
    if (!a2) {
      goto LABEL_8;
    }
    if (a2 < 0)
    {
      uint64_t result = a4(HIDWORD(a3), a2 + 1);
      uint64_t v6 = HIDWORD(result) & 1;
      return result | ((unint64_t)v6 << 32);
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = result;
  int64_t v5 = HIDWORD(a3) - result;
  if (v5 < a2)
  {
    if (v5 + 1 == a2)
    {
      LODWORD(result) = 0;
LABEL_8:
      LOBYTE(v6) = 1;
      return result | ((unint64_t)v6 << 32);
    }
    goto LABEL_15;
  }
  uint64_t result = result + a2;
  if (v4 + a2 < 1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (HIDWORD(result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result >= a3)
  {
    LOBYTE(v6) = 0;
    return result | ((unint64_t)v6 << 32);
  }
LABEL_18:
  __break(1u);
  return result;
}

BOOL sub_100068CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E30);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_10070A9B0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10070A000);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  Swift::Int v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v28 - v16;
  __chkstk_darwin(v15);
  unsigned int v19 = (char *)&v28 - v18;
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  sub_100079AB0(*(int32x2_t **)(a1 + 8), *(int32x2_t **)(a2 + 8));
  if ((v20 & 1) == 0) {
    return 0;
  }
  Swift::Int v29 = v7;
  uint64_t v21 = v5;
  uint64_t v22 = type metadata accessor for MessageBatches(0);
  sub_1000079E4(a1 + *(int *)(v22 + 24), (uint64_t)v19, &qword_10070A000);
  sub_1000079E4(a2 + *(int *)(v22 + 24), (uint64_t)v17, &qword_10070A000);
  uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000079E4((uint64_t)v19, (uint64_t)v10, &qword_10070A000);
  sub_1000079E4((uint64_t)v17, v23, &qword_10070A000);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v24((uint64_t)v10, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v17, &qword_10070A000);
    sub_100007A48((uint64_t)v19, &qword_10070A000);
    if (v24(v23, 1, v4) == 1)
    {
      sub_100007A48((uint64_t)v10, &qword_10070A000);
      return 1;
    }
    goto LABEL_8;
  }
  sub_1000079E4((uint64_t)v10, (uint64_t)v14, &qword_10070A000);
  if (v24(v23, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v17, &qword_10070A000);
    sub_100007A48((uint64_t)v19, &qword_10070A000);
    sub_100007A48((uint64_t)v14, &qword_100709E30);
LABEL_8:
    sub_100007A48((uint64_t)v10, &qword_10070A9B0);
    return 0;
  }
  uint64_t v25 = (uint64_t)v29;
  sub_10001FDF0(v23, (uint64_t)v29, &qword_100709E30);
  sub_10001FC6C();
  char v26 = sub_1005E35A0();
  sub_100007A48(v25, &qword_100709E30);
  sub_100007A48((uint64_t)v17, &qword_10070A000);
  sub_100007A48((uint64_t)v19, &qword_10070A000);
  sub_100007A48((uint64_t)v14, &qword_100709E30);
  sub_100007A48((uint64_t)v10, &qword_10070A000);
  return (v26 & 1) != 0;
}

uint64_t sub_10006909C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned int *sub_100069108@<X0>(unsigned int *result@<X0>, void *a2@<X8>)
{
  *a2 = result[1] - (unint64_t)*result + 1;
  return result;
}

uint64_t sub_10006911C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000675E8(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for MessageBatches.OtherUIDsBatchSequence(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070AAD0);
}

uint64_t type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_10070AA38);
}

uint64_t sub_100069178(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageBatches.OtherUIDsBatchSequence(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000691EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100069200);
}

uint64_t sub_100069204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100069218);
}

void sub_100069220()
{
  if (!qword_10070AA48)
  {
    sub_10001FC6C();
    unint64_t v0 = sub_1005E3690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10070AA48);
    }
  }
}

uint64_t *sub_10006927C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10006934C(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100709E60);
  Swift::Int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1000693B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100069434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000694B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100069534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000695B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000695C8);
}

uint64_t sub_1000695CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_10006963C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100069650);
}

uint64_t sub_100069654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_1000696C8()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100069764()
{
  unint64_t result = qword_10070AB08;
  if (!qword_10070AB08)
  {
    type metadata accessor for MessageBatches.OtherUIDsBatchSequence.Iterator(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070AB08);
  }
  return result;
}

uint64_t sub_1000697BC(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070AB38);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000566C(&qword_10070AB40);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v46 - v10;
  v46[1] = a1;
  sub_1000079E4(a1, (uint64_t)v4, &qword_100709E38);
  sub_1000079E4((uint64_t)v4, (uint64_t)v9, &qword_100709E38);
  uint64_t v12 = sub_10000566C(&qword_100709E38);
  uint64_t v13 = MessageIdentifierSet.endIndex.getter(v12);
  uint64_t v15 = v14;
  sub_100007A48((uint64_t)v4, &qword_100709E38);
  uint64_t v16 = (uint64_t *)&v9[*(int *)(v6 + 44)];
  *uint64_t v16 = v13;
  v16[1] = v15;
  sub_10001FDF0((uint64_t)v9, (uint64_t)v11, &qword_10070AB40);
  uint64_t v17 = &v11[*(int *)(v6 + 44)];
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *((void *)v17 + 1);
  if (v18 == MessageIdentifierSet.startIndex.getter(v12) && v19 == v20) {
    goto LABEL_23;
  }
  int v22 = 0;
  char v23 = 1;
  uint64_t v24 = _swiftEmptyArrayStorage;
  while (1)
  {
    int v29 = v22;
    MessageIdentifierSet.index(_:offsetBy:)();
    *(void *)uint64_t v17 = v30;
    *((void *)v17 + 1) = v31;
    MessageIdentifierSet.subscript.getter();
    int v22 = v49;
    if ((v23 & 1) == 0) {
      break;
    }
LABEL_7:
    uint64_t v25 = *(void *)v17;
    uint64_t v26 = *((void *)v17 + 1);
    char v23 = 0;
    if (v25 == MessageIdentifierSet.startIndex.getter(v12) && v26 == v27) {
      goto LABEL_24;
    }
  }
  uint64_t v32 = MessageIdentifierSet.startIndex.getter(v12);
  uint64_t v34 = v33;
  if (v32 != MessageIdentifierSet.endIndex.getter(v12) || v34 != v35)
  {
    MessageIdentifierSet.subscript.getter();
    if (v49 == v22)
    {
      int v48 = v22;
LABEL_18:
      int v47 = v29;
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t v36 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_1000168B0(0, v24[2] + 1, 1, v24);
      }
      unint64_t v38 = v24[2];
      unint64_t v37 = v24[3];
      if (v38 >= v37 >> 1) {
        uint64_t v24 = sub_1000168B0((void *)(v37 > 1), v38 + 1, 1, v24);
      }
      v24[2] = v38 + 1;
      v24[v38 + 4] = v36;
      goto LABEL_7;
    }
  }
  if (v22 != -1)
  {
    int v48 = v22 + 1;
    goto LABEL_18;
  }
  __break(1u);
LABEL_23:
  uint64_t v24 = _swiftEmptyArrayStorage;
LABEL_24:
  sub_100007A48((uint64_t)v11, &qword_10070AB40);
  if (v24[2]) {
    return sub_100037F28((uint64_t)v24);
  }
  uint64_t v39 = MessageIdentifierSet.startIndex.getter(v12);
  uint64_t v41 = v40;
  if (v39 == MessageIdentifierSet.endIndex.getter(v12) && v41 == v42) {
    return sub_100037F28((uint64_t)v24);
  }
  MessageIdentifierSet.subscript.getter();
  swift_bridgeObjectRelease();
  int v45 = v49;
  sub_10000566C(&qword_100709FF8);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1005F6670;
  int v48 = v45;
  LODWORD(v49) = v45;
  sub_100063E18();
  static MessageIdentifier.... infix(_:_:)();
  return v43;
}

uint64_t sub_100069B94()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100069BA4()
{
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100069BDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  int64_t v3 = *(void *)(v1 + 24);
  unsigned int v5 = *(_DWORD *)(v1 + 32);
  int v6 = *(_DWORD *)(v1 + 36);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  swift_beginAccess();
  char v9 = *(unsigned char *)(v4 + 20);
  *(_DWORD *)a1 = *(_DWORD *)(v4 + 16);
  *(unsigned char *)(a1 + 4) = v9;
  return sub_100067C70((unsigned int *)(v4 + 16), v3, v5, v6, v8, v7);
}

uint64_t sub_100069C6C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t *sub_100069C84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_100069D50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_10000566C(&qword_100709E60);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_100069DCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_100069E50(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_100069EE8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100069F68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100069FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006A00C);
}

uint64_t sub_10006A00C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100709E38);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10006A0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006A0D4);
}

void *sub_10006A0D4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E38);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MessagesPendingDownload()
{
  uint64_t result = qword_10070ABB8;
  if (!qword_10070ABB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006A1CC()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_10006A268()
{
  uint64_t v0 = sub_10000566C(&qword_10070A9C0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  int64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v1);
  uint64_t v5 = &v21[-v4];
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v6);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1001712FC(v9);
  MessageIdentifierSet.ranges.getter((uint64_t)v5);
  unint64_t v10 = sub_100070018();
  unsigned __int8 v12 = v11;
  sub_100007A48((uint64_t)v5, &qword_10070A9C0);
  unint64_t v13 = HIDWORD(v10);
  type metadata accessor for MessagesPendingDownload();
  MessageIdentifierSet.ranges.getter((uint64_t)v3);
  unint64_t v14 = sub_100070018();
  unsigned __int8 v16 = v15;
  sub_100007A48((uint64_t)v3, &qword_10070A9C0);
  unint64_t v17 = HIDWORD(v14);
  if (HIDWORD(v14) <= v13) {
    unsigned int v18 = v13;
  }
  else {
    unsigned int v18 = HIDWORD(v14);
  }
  if (v16)
  {
    LODWORD(v17) = 0;
    unsigned int v18 = v13;
  }
  if (v12) {
    uint64_t v19 = v17;
  }
  else {
    uint64_t v19 = v18;
  }
  sub_100007A48((uint64_t)v8, &qword_100709E38);
  return v19 | ((unint64_t)(v12 & v16 & 1) << 32);
}

uint64_t sub_10006A428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)__chkstk_darwin(v4);
  uint64_t v9 = (char *)&v14 - v8;
  char v11 = sub_1000208B0(*v7, *v10);
  sub_10006A538(a1, (uint64_t)v9);
  sub_10006A538(a2, (uint64_t)v6);
  if (v11)
  {
    sub_10001FC6C();
    char v12 = sub_1005E35A0();
  }
  else
  {
    char v12 = 0;
  }
  sub_10006A59C((uint64_t)v6);
  sub_10006A59C((uint64_t)v9);
  return v12 & 1;
}

uint64_t sub_10006A538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesPendingDownload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006A59C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessagesPendingDownload();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006A5F8(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return result;
  }
  int64_t v3 = v1;
  for (uint64_t i = (char *)(swift_bridgeObjectRetain() + 49); ; i += 24)
  {
    uint64_t v27 = v2;
    uint64_t v7 = *(unsigned int *)(i - 17);
    uint64_t v8 = *(void *)(i - 9);
    char v9 = *(i - 1);
    char v10 = *i;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int v29 = (void *)*v3;
    char v12 = v29;
    unint64_t v13 = v3;
    *int64_t v3 = 0x8000000000000000;
    unint64_t v15 = sub_100024260(v7);
    uint64_t v16 = v12[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    char v19 = v14;
    if (v12[3] >= v18)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        int v22 = v29;
        if (v14) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_10009795C();
        int v22 = v29;
        if (v19) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_10005046C(v18, isUniquelyReferenced_nonNull_native);
      uint64_t v20 = sub_100024260(v7);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_20;
      }
      unint64_t v15 = v20;
      int v22 = v29;
      if (v19)
      {
LABEL_3:
        uint64_t v5 = v22[7] + 24 * v15;
        *(_DWORD *)uint64_t v5 = v7;
        *(void *)(v5 + 8) = v8;
        *(unsigned char *)(v5 + 16) = v9;
        *(unsigned char *)(v5 + 17) = v10;
        goto LABEL_4;
      }
    }
    v22[(v15 >> 6) + 8] |= 1 << v15;
    *(_DWORD *)(v22[6] + 4 * v15) = v7;
    uint64_t v23 = v22[7] + 24 * v15;
    *(_DWORD *)uint64_t v23 = v7;
    *(void *)(v23 + 8) = v8;
    *(unsigned char *)(v23 + 16) = v9;
    *(unsigned char *)(v23 + 17) = v10;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_19;
    }
    v22[2] = v26;
LABEL_4:
    int64_t v3 = v13;
    *unint64_t v13 = v22;
    swift_bridgeObjectRelease();
    int v28 = v7;
    type metadata accessor for MessagesPendingDownload();
    uint64_t v6 = sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.remove(_:)((uint64_t)&v28, v6);
    uint64_t v2 = v27 - 1;
    if (v27 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

uint64_t sub_10006A7F4()
{
  return MessageIdentifierSet.contains(_:)() & 1;
}

uint64_t sub_10006A83C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 18);
  return result;
}

uint64_t sub_10006A848(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  int v4 = *(unsigned __int8 *)(a1 + 18);
  sub_10000566C(&qword_100709E38);
  return (v4 == a3) & ~MessageIdentifierSet.contains(_:)();
}

uint64_t sub_10006A8B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(result + 8);
  unint64_t v6 = *(void *)(result + 16);
  char v7 = *(unsigned char *)(result + 32);
  sub_100008D24(v5, v6);
  unint64_t v8 = sub_10002445C(v5, v6);
  if ((v9 & 1) == 0)
  {
    uint64_t result = sub_1000094D4(v5, v6);
LABEL_8:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(unsigned char *)(a3 + 18) = 0;
    __int16 v16 = 512;
    goto LABEL_9;
  }
  char v10 = (unsigned int *)(*(void *)(a2 + 56) + 24 * v8);
  uint64_t v11 = *v10;
  uint64_t v12 = *((void *)v10 + 1);
  __int16 v13 = *((unsigned __int8 *)v10 + 16);
  int v14 = *((unsigned __int8 *)v10 + 17);
  uint64_t result = sub_1000094D4(v5, v6);
  if (v14) {
    __int16 v15 = 256;
  }
  else {
    __int16 v15 = 0;
  }
  *(void *)a3 = v11;
  *(void *)(a3 + 8) = v12;
  __int16 v16 = v15 | v13;
  *(unsigned char *)(a3 + 18) = v7;
LABEL_9:
  *(_WORD *)(a3 + 16) = v16;
  return result;
}

uint64_t sub_10006A97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v7 = sub_10000566C(&qword_100709E38);
  uint64_t v8 = __chkstk_darwin(v7);
  char v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v25 = (uint64_t)&v23 - v11;
  int64_t v12 = *(void *)(a2 + 16);
  __int16 v13 = _swiftEmptyArrayStorage;
  if (v12)
  {
    uint64_t v23 = a3;
    uint64_t v24 = a1;
    int v28 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001A5B4(0, v12, 0);
    __int16 v13 = v28;
    unint64_t v14 = v28[2];
    uint64_t v15 = 32;
    do
    {
      int v16 = *(_DWORD *)(a2 + v15);
      int v28 = v13;
      unint64_t v17 = v13[3];
      if (v14 >= v17 >> 1)
      {
        sub_10001A5B4(v17 > 1, v14 + 1, 1);
        __int16 v13 = v28;
      }
      v13[2] = v14 + 1;
      *((_DWORD *)v13 + v14 + 8) = v16;
      v15 += 24;
      ++v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    a3 = v23;
    a1 = v24;
  }
  sub_10001FC6C();
  sub_1005E3680();
  uint64_t v18 = v13[2];
  if (v18)
  {
    char v19 = (int *)(v13 + 4);
    do
    {
      int v20 = *v19++;
      int v27 = v20;
      MessageIdentifierSet.insert(_:)();
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v25;
  sub_10006B1BC((uint64_t)v10, v25);
  if ((a3 & 0x100000000) != 0) {
    sub_10006ABD0(a1, v26);
  }
  else {
    sub_10006AE64(a1, a3, v26);
  }
  return sub_100007A48(v21, &qword_100709E38);
}

uint64_t sub_10006AB7C()
{
  return MessageIdentifierSet.contains(_:)() & 1;
}

uint64_t sub_10006ABD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FC6C();
  sub_1005E3680();
  sub_10000566C(&qword_100709E60);
  if (sub_1005E3630())
  {
    sub_1005E3680();
    return sub_100007A48((uint64_t)v6, &qword_100709E38);
  }
  else
  {
    MessageIdentifierSet.endIndex.getter(v4);
    MessageIdentifierSet.index(_:offsetBy:)();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v12 = MessageIdentifierSet.startIndex.getter(v4);
    BOOL v14 = v11 < v13;
    if (v9 != v12) {
      BOOL v14 = v9 < v12;
    }
    if (!v14)
    {
      do
      {
        MessageIdentifierSet.count.getter();
        if (v15 >= a1) {
          break;
        }
        MessageIdentifierSet.subscript.getter();
        HIDWORD(v38) = v39;
        MessageIdentifierSet.insert(_:)();
        MessageIdentifierSet.index(_:offsetBy:)();
        uint64_t v17 = v16;
        uint64_t v19 = v18;
        uint64_t v20 = MessageIdentifierSet.startIndex.getter(v4);
        BOOL v22 = v19 < v21;
        if (v17 != v20) {
          BOOL v22 = v17 < v20;
        }
      }
      while (!v22);
    }
    MessageIdentifierSet.endIndex.getter(v4);
    MessageIdentifierSet.index(_:offsetBy:)();
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    uint64_t v27 = MessageIdentifierSet.startIndex.getter(v4);
    BOOL v29 = v26 < v28;
    if (v24 != v27) {
      BOOL v29 = v24 < v27;
    }
    if (!v29)
    {
      do
      {
        MessageIdentifierSet.count.getter();
        if (v30 >= a1) {
          break;
        }
        MessageIdentifierSet.subscript.getter();
        HIDWORD(v38) = v39;
        MessageIdentifierSet.insert(_:)();
        MessageIdentifierSet.index(_:offsetBy:)();
        uint64_t v32 = v31;
        uint64_t v34 = v33;
        uint64_t v35 = MessageIdentifierSet.startIndex.getter(v4);
        BOOL v37 = v34 < v36;
        if (v32 != v35) {
          BOOL v37 = v32 < v35;
        }
      }
      while (!v37);
    }
    return sub_10006B1BC((uint64_t)v6, a2);
  }
}

uint64_t sub_10006AE64@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FC6C();
  sub_1005E3680();
  sub_10000566C(&qword_100709E60);
  if (sub_1005E3630())
  {
    sub_1005E3680();
    return sub_100007A48((uint64_t)v8, &qword_100709E38);
  }
  else
  {
    MessageIdentifierSet.endIndex.getter(v6);
    MessageIdentifierSet.index(_:offsetBy:)();
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v14 = MessageIdentifierSet.startIndex.getter(v6);
    BOOL v16 = v15 < v13;
    if (v14 != v11) {
      BOOL v16 = v14 < v11;
    }
    if (v16)
    {
      do
      {
        MessageIdentifierSet.count.getter();
        if (v17 >= a1) {
          break;
        }
        MessageIdentifierSet.subscript.getter();
        if (v51 <= a2) {
          break;
        }
        unsigned int v50 = v51;
        MessageIdentifierSet.insert(_:)();
        MessageIdentifierSet.index(_:offsetBy:)();
        uint64_t v11 = v18;
        uint64_t v13 = v19;
        uint64_t v20 = MessageIdentifierSet.startIndex.getter(v6);
        BOOL v22 = v21 < v13;
        if (v20 != v11) {
          BOOL v22 = v20 < v11;
        }
      }
      while (v22);
    }
    uint64_t v23 = MessageIdentifierSet.startIndex.getter(v6);
    BOOL v25 = v13 < v24;
    if (v11 != v23) {
      BOOL v25 = v11 < v23;
    }
    if (!v25)
    {
      do
      {
        MessageIdentifierSet.count.getter();
        if (v26 >= a1) {
          break;
        }
        MessageIdentifierSet.subscript.getter();
        HIDWORD(v49) = v50;
        MessageIdentifierSet.insert(_:)();
        MessageIdentifierSet.index(_:offsetBy:)();
        uint64_t v28 = v27;
        uint64_t v30 = v29;
        uint64_t v31 = MessageIdentifierSet.startIndex.getter(v6);
        BOOL v33 = v30 < v32;
        if (v28 != v31) {
          BOOL v33 = v28 < v31;
        }
      }
      while (!v33);
    }
    MessageIdentifierSet.endIndex.getter(v6);
    MessageIdentifierSet.index(_:offsetBy:)();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v38 = MessageIdentifierSet.startIndex.getter(v6);
    BOOL v40 = v37 < v39;
    if (v35 != v38) {
      BOOL v40 = v35 < v38;
    }
    if (!v40)
    {
      do
      {
        MessageIdentifierSet.count.getter();
        if (v41 >= a1) {
          break;
        }
        MessageIdentifierSet.subscript.getter();
        HIDWORD(v49) = v50;
        MessageIdentifierSet.insert(_:)();
        MessageIdentifierSet.index(_:offsetBy:)();
        uint64_t v43 = v42;
        uint64_t v45 = v44;
        uint64_t v46 = MessageIdentifierSet.startIndex.getter(v6);
        BOOL v48 = v45 < v47;
        if (v43 != v46) {
          BOOL v48 = v43 < v46;
        }
      }
      while (!v48);
    }
    return sub_10006B1BC((uint64_t)v8, a3);
  }
}

uint64_t sub_10006B1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10006B224(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = type metadata accessor for MessagesPendingDownload();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)v7 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10000566C(&qword_100709E60);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = (uint64_t *)((char *)v7 + v14);
    BOOL v16 = (uint64_t *)((char *)a2 + v14);
    *uint64_t v15 = *v16;
    uint64_t v17 = *(int *)(v8 + 20);
    uint64_t v18 = (char *)v15 + v17;
    uint64_t v19 = (char *)v16 + v17;
    swift_bridgeObjectRetain();
    v13(v18, v19, v12);
  }
  return v7;
}

uint64_t sub_10006B364(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for MessagesPendingDownload();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(v4 + 20);
  return v10(v8, v6);
}

void *sub_10006B43C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for MessagesPendingDownload();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  *uint64_t v13 = *v14;
  uint64_t v15 = *(int *)(v6 + 20);
  BOOL v16 = (char *)v13 + v15;
  uint64_t v17 = (char *)v14 + v15;
  swift_bridgeObjectRetain();
  v11(v16, v17, v10);
  return a1;
}

void *sub_10006B530(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for MessagesPendingDownload();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11(&v13[*(int *)(v6 + 20)], &v14[*(int *)(v6 + 20)], v10);
  return a1;
}

void *sub_10006B630(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for MessagesPendingDownload();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  v11(&v13[*(int *)(v6 + 20)], &v14[*(int *)(v6 + 20)], v10);
  return a1;
}

void *sub_10006B710(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for MessagesPendingDownload();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)v14;
  swift_bridgeObjectRelease();
  v11(&v13[*(int *)(v6 + 20)], &v14[*(int *)(v6 + 20)], v10);
  return a1;
}

uint64_t sub_10006B800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006B814);
}

uint64_t sub_10006B814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesPendingDownload();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_10006B880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006B894);
}

uint64_t sub_10006B894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessagesPendingDownload();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MessagesPendingDownloadPerPass()
{
  uint64_t result = qword_10070AC48;
  if (!qword_10070AC48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006B950()
{
  uint64_t result = type metadata accessor for MessagesPendingDownload();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10006B9DC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for MessagesPendingDownload();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)&v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v20[-v13];
  if (a2)
  {
    if (a2 == 1)
    {
      if (a1) {
        uint64_t v15 = v4 + *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
      }
      else {
        uint64_t v15 = v4;
      }
      return sub_10006D344(v15, (uint64_t)a4, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    }
    if (a1) {
      v4 += *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
    }
  }
  else if (a1)
  {
    *a4 = sub_1000D41B8((uint64_t)_swiftEmptyArrayStorage);
    sub_10001FC6C();
    return sub_1005E3680();
  }
  sub_10006D344(v4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_10000566C(&qword_100709E60);
  if (sub_1005E3630())
  {
    sub_10006D344((uint64_t)v14, (uint64_t)a4, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  }
  else
  {
    uint64_t v17 = sub_10006D344((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    __chkstk_darwin(v17);
    *(void *)&v20[-16] = a3;
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_10006D5F0(v18, (uint64_t (*)(void, uint64_t, uint64_t, void))sub_10006D40C, (uint64_t)&v20[-32]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v12 = v19;
    sub_10006D768((uint64_t)v12, (uint64_t)a4, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  }
  return sub_10006D3AC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
}

BOOL sub_10006BC68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MessagesPendingDownload();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v27 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27 - v16;
  char v18 = sub_1000208B0(*a1, *a2);
  sub_10006D344((uint64_t)a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_10006D344((uint64_t)a2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  if ((v18 & 1) == 0)
  {
    sub_10006D3AC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    uint64_t v26 = (uint64_t)v17;
LABEL_7:
    sub_10006D3AC(v26, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    return 0;
  }
  uint64_t v28 = a3;
  sub_10001FC6C();
  char v19 = sub_1005E35A0();
  sub_10006D3AC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_10006D3AC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  if ((v19 & 1) == 0) {
    return 0;
  }
  uint64_t v20 = *(int *)(v28 + 20);
  uint64_t v21 = (uint64_t)a1 + v20;
  BOOL v22 = (uint64_t *)((char *)a2 + v20);
  char v23 = sub_1000208B0(*(uint64_t *)((char *)a1 + v20), *v22);
  sub_10006D344(v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_10006D344((uint64_t)v22, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  if ((v23 & 1) == 0)
  {
    sub_10006D3AC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    uint64_t v26 = (uint64_t)v12;
    goto LABEL_7;
  }
  char v24 = sub_1005E35A0();
  sub_10006D3AC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_10006D3AC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  return (v24 & 1) != 0;
}

uint64_t sub_10006BF1C(int a1, uint64_t a2)
{
  int v31 = a1;
  uint64_t v4 = type metadata accessor for MessagesPendingDownloadPerPass();
  __chkstk_darwin(v4 - 8);
  uint64_t v30 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070A390);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v30 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = type metadata accessor for NewestMessages();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  char v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v30 - v20;
  uint64_t v22 = a2;
  sub_100063C20(a2, (uint64_t)v14);
  char v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v23(v14, 1, v15) == 1)
  {
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v24 = *(int *)(v15 + 24);
    *(void *)&v21[*(int *)(v15 + 20)] = 0;
    *(void *)&v21[v24] = 0;
    sub_100063C88((uint64_t)v14);
  }
  else
  {
    sub_10006D768((uint64_t)v14, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for NewestMessages);
  }
  char v25 = sub_10006C288(0, v31, (uint64_t)v21);
  sub_10006D3AC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for NewestMessages);
  uint64_t v26 = v30;
  sub_10006D344(v2, v30, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownloadPerPass);
  sub_100063C20(v22, (uint64_t)v12);
  if (v25)
  {
    char v27 = 1;
  }
  else
  {
    sub_100063C20((uint64_t)v12, (uint64_t)v9);
    if (v23(v9, 1, v15) == 1)
    {
      sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v28 = *(int *)(v15 + 24);
      *(void *)&v19[*(int *)(v15 + 20)] = 0;
      *(void *)&v19[v28] = 0;
      sub_100063C88((uint64_t)v9);
    }
    else
    {
      sub_10006D768((uint64_t)v9, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for NewestMessages);
    }
    char v27 = sub_10006C288(1, v31, (uint64_t)v19);
    sub_10006D3AC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for NewestMessages);
  }
  sub_100063C88((uint64_t)v12);
  sub_10006D3AC(v26, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownloadPerPass);
  return v27 & 1;
}

uint64_t sub_10006C288(char a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for MessagesPendingDownload();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (uint64_t *)&v23[-v13];
  __chkstk_darwin(v12);
  uint64_t v16 = (uint64_t *)&v23[-v15];
  if (a2)
  {
    if (a2 == 1)
    {
      if (a1) {
        v4 += *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
      }
      sub_10006D344(v4, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
      char v17 = *(void *)(*(void *)v11 + 16) != 0;
      sub_10006D3AC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
      return v17 & 1;
    }
  }
  else if (a1)
  {
    char v17 = 0;
    return v17 & 1;
  }
  sub_10000566C(&qword_100709E60);
  if (sub_1005E3630())
  {
    if (a1) {
      v4 += *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
    }
    sub_10006D344(v4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    uint64_t v18 = *v14;
    swift_bridgeObjectRetain();
    sub_10006D3AC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    uint64_t v19 = *(void *)(v18 + 16);
    swift_bridgeObjectRelease();
    char v17 = v19 != 0;
  }
  else
  {
    if (a1) {
      v4 += *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
    }
    sub_10006D344(v4, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    uint64_t v20 = *v16;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_10006D3AC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    __chkstk_darwin(v21);
    *(void *)&v23[-16] = a3;
    char v17 = sub_100061D90((uint64_t (*)(int *))sub_10006D2F0, (uint64_t)&v23[-32], v20);
    swift_bridgeObjectRelease();
  }
  return v17 & 1;
}

uint64_t sub_10006C518(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000566C(&qword_10070A768);
  uint64_t result = sub_1005E2FF0();
  uint64_t v8 = result;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v36 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v37 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v34) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v34) {
          return v8;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v34) {
            return v8;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v34) {
              return v8;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v34) {
                  return v8;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v37 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v13);
    uint64_t v19 = *(void *)(v4 + 56) + 24 * v13;
    int v20 = *(_DWORD *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(unsigned char *)(v19 + 16);
    char v23 = *(unsigned char *)(v19 + 17);
    sub_1005E33F0();
    sub_1005E3440(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v26);
      }
      while (v31 == -1);
      unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(void *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    *(_DWORD *)(*(void *)(v8 + 48) + 4 * v27) = v18;
    uint64_t v32 = *(void *)(v8 + 56) + 24 * v27;
    *(_DWORD *)uint64_t v32 = v20;
    *(void *)(v32 + 8) = v21;
    *(unsigned char *)(v32 + 16) = v22;
    *(unsigned char *)(v32 + 17) = v23;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v36;
    uint64_t v10 = v37;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10006C7E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000566C(&qword_10070A6B0);
  uint64_t result = sub_1005E2FF0();
  uint64_t v9 = result;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v37 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v36) {
        return v9;
      }
      unint64_t v16 = v35[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v36) {
          return v9;
        }
        unint64_t v16 = v35[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v36) {
            return v9;
          }
          unint64_t v16 = v35[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v36) {
              return v9;
            }
            unint64_t v16 = v35[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v36) {
                  return v9;
                }
                unint64_t v16 = v35[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v37 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = v4;
    Swift::UInt32 v20 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v14);
    uint64_t v21 = *(void *)(v4 + 56) + 24 * v14;
    char v22 = *(unsigned char *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    sub_1005E33F0();
    sub_1005E3440(v20);
    uint64_t result = sub_1005E3470();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(_DWORD *)(*(void *)(v9 + 48) + 4 * v28) = v20;
    uint64_t v33 = *(void *)(v9 + 56) + 24 * v28;
    *(unsigned char *)uint64_t v33 = v22;
    *(void *)(v33 + 8) = v23;
    *(unsigned char *)(v33 + 16) = v24;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = v19;
    uint64_t v11 = v37;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10006CAA4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000566C(&qword_10070A718);
  uint64_t result = sub_1005E2FF0();
  uint64_t v9 = result;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  uint64_t v40 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v41 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v39) {
        return v9;
      }
      unint64_t v16 = v38[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v39) {
          return v9;
        }
        unint64_t v16 = v38[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v39) {
            return v9;
          }
          unint64_t v16 = v38[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v39) {
              return v9;
            }
            unint64_t v16 = v38[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  return v9;
                }
                unint64_t v16 = v38[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v41 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = *(void *)(v4 + 56);
    uint64_t v20 = *(void *)(v4 + 48) + 16 * v14;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(unsigned int *)(v20 + 8);
    uint64_t v23 = (uint64_t *)(v19 + 72 * v14);
    uint64_t v24 = *v23;
    int v25 = *((_DWORD *)v23 + 2);
    __int16 v26 = *((_WORD *)v23 + 7);
    char v49 = *((unsigned char *)v23 + 16);
    char v50 = *((unsigned char *)v23 + 12);
    uint64_t v47 = v23[4];
    uint64_t v48 = v23[3];
    uint64_t v45 = v23[6];
    uint64_t v46 = v23[5];
    uint64_t v44 = v23[7];
    char v42 = *((unsigned char *)v23 + 65);
    char v43 = *((unsigned char *)v23 + 64);
    sub_1005E33F0();
    sub_1005E3410(v22 | (v22 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v35 = *(void *)(v9 + 48) + 16 * v30;
    *(void *)uint64_t v35 = v21;
    *(_DWORD *)(v35 + 8) = v22;
    uint64_t v36 = *(void *)(v9 + 56) + 72 * v30;
    *(void *)uint64_t v36 = v24;
    *(_DWORD *)(v36 + 8) = v25;
    *(unsigned char *)(v36 + 12) = v50;
    *(_WORD *)(v36 + 14) = v26;
    *(unsigned char *)(v36 + 16) = v49;
    *(void *)(v36 + 24) = v48;
    *(void *)(v36 + 32) = v47;
    *(void *)(v36 + 40) = v46;
    *(void *)(v36 + 48) = v45;
    *(void *)(v36 + 56) = v44;
    *(unsigned char *)(v36 + 64) = v43;
    *(unsigned char *)(v36 + 65) = v42;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = v40;
    uint64_t v11 = v41;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10006CDF0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000566C(&qword_10070A688);
  uint64_t result = sub_1005E2FF0();
  uint64_t v9 = result;
  unint64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v33) {
              return v9;
            }
            unint64_t v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v33) {
                  return v9;
                }
                unint64_t v16 = v32[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(v4 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(unsigned int *)(v18 + 8);
    char v21 = *(unsigned char *)(*(void *)(v4 + 56) + v14);
    sub_1005E33F0();
    sub_1005E3410(v20 | (v20 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = *(void *)(v9 + 48) + 16 * v25;
    *(void *)uint64_t v30 = v19;
    *(_DWORD *)(v30 + 8) = v20;
    *(unsigned char *)(*(void *)(v9 + 56) + v25) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10006D088(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for MessagesPendingDownload();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  unint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v24 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - v14;
  char v16 = sub_1000208B0(*a1, *a2);
  sub_10006D344((uint64_t)a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_10006D344((uint64_t)a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  if ((v16 & 1) == 0)
  {
    char v22 = 0;
LABEL_9:
    sub_10006D3AC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    sub_10006D3AC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    return v22 & 1;
  }
  sub_10001FC6C();
  char v17 = sub_1005E35A0();
  sub_10006D3AC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  sub_10006D3AC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
  if (v17)
  {
    uint64_t v18 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    char v21 = sub_1000208B0(*v19, *v20);
    sub_10006D344((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    sub_10006D344((uint64_t)v20, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MessagesPendingDownload);
    if (v21) {
      char v22 = sub_1005E35A0();
    }
    else {
      char v22 = 0;
    }
    unint64_t v13 = v7;
    uint64_t v15 = v10;
    goto LABEL_9;
  }
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_10006D2F0()
{
  return MessageIdentifierSet.contains(_:)() & 1;
}

uint64_t sub_10006D344(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006D3AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006D40C()
{
  return sub_10006A7F4();
}

uint64_t sub_10006D424(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, uint64_t, void))
{
  uint64_t v24 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (2)
  {
    uint64_t v25 = v6;
    do
    {
      if (v11)
      {
        unint64_t v13 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v14 = v13 | (v7 << 6);
      }
      else
      {
        int64_t v20 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        if (v20 >= v12) {
          return sub_10006C518(v24, a2, v25, a3);
        }
        unint64_t v21 = *(void *)(v8 + 8 * v20);
        ++v7;
        if (!v21)
        {
          int64_t v7 = v20 + 1;
          if (v20 + 1 >= v12) {
            return sub_10006C518(v24, a2, v25, a3);
          }
          unint64_t v21 = *(void *)(v8 + 8 * v7);
          if (!v21)
          {
            int64_t v7 = v20 + 2;
            if (v20 + 2 >= v12) {
              return sub_10006C518(v24, a2, v25, a3);
            }
            unint64_t v21 = *(void *)(v8 + 8 * v7);
            if (!v21)
            {
              int64_t v22 = v20 + 3;
              if (v22 >= v12) {
                return sub_10006C518(v24, a2, v25, a3);
              }
              unint64_t v21 = *(void *)(v8 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  int64_t v7 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_28;
                  }
                  if (v7 >= v12) {
                    return sub_10006C518(v24, a2, v25, a3);
                  }
                  unint64_t v21 = *(void *)(v8 + 8 * v7);
                  ++v22;
                  if (v21) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v7 = v22;
            }
          }
        }
LABEL_25:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v14 = __clz(__rbit64(v21)) + (v7 << 6);
      }
      uint64_t v15 = (unsigned int *)(*(void *)(a3 + 56) + 24 * v14);
      uint64_t v16 = *v15;
      uint64_t v17 = *((void *)v15 + 1);
      unsigned int v18 = *((unsigned __int8 *)v15 + 16);
      if (*((unsigned char *)v15 + 17)) {
        int v19 = 256;
      }
      else {
        int v19 = 0;
      }
      uint64_t result = a4(*(unsigned int *)(*(void *)(a3 + 48) + 4 * v14), v16, v17, v19 | v18);
    }
    while ((result & 1) == 0);
    *(unint64_t *)((char *)v24 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v6 = v25 + 1;
    if (!__OFADD__(v25, 1)) {
      continue;
    }
    break;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10006D5F0(uint64_t isStackAllocationSafe, uint64_t (*a2)(void, uint64_t, uint64_t, void), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_10006D424((uint64_t)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_10006D424((uint64_t)v11, v8, v6, a2);
    swift_slowDealloc();
  }
  return a3;
}

uint64_t sub_10006D768(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_10006D7D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_10006D8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10006D96C(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10006DA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10006DAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10006DB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006DB6C);
}

uint64_t sub_10006DB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t _s15MissingMessagesO11QueriedUIDsVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070AD70);
}

uint64_t sub_10006DC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006DC74);
}

uint64_t sub_10006DC74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = _s15MissingMessagesO11QueriedUIDsVMa(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t _s15MissingMessagesO8CompleteVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070ACD8);
}

void sub_10006DD54()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10006DDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_10006DE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10006DECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10006DF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10006DF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10006E004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006E018);
}

uint64_t sub_10006E018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_10006E088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006E09C);
}

uint64_t sub_10006E09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_10006E110()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_10006E19C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = _s15MissingMessagesO8ProgressVMa(0);
    v8((uint64_t *)((char *)a1 + *(int *)(v9 + 20)), (uint64_t *)((char *)a2 + *(int *)(v9 + 20)), v7);
    uint64_t v10 = *(int *)(v9 + 24);
    uint64_t v11 = (char *)a1 + v10;
    unsigned int v12 = (char *)a2 + v10;
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
    void v11[4] = v12[4];
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v8((uint64_t *)((char *)a1 + v14), (uint64_t *)((char *)a2 + v14), v7);
  }
  return a1;
}

uint64_t _s15MissingMessagesO8ProgressVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070AE98);
}

uint64_t sub_10006E30C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = _s15MissingMessagesO8ProgressVMa(0);
  v8(a1 + *(int *)(v5 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
}

uint64_t sub_10006E3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = _s15MissingMessagesO8ProgressVMa(0);
  v7(a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20), v6);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(unsigned char *)(v10 + 4) = *(unsigned char *)(v11 + 4);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  v7(a1 + v13, a2 + v13, v6);
  return a1;
}

uint64_t sub_10006E4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = _s15MissingMessagesO8ProgressVMa(0);
  v7(a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20), v6);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  char v12 = *(unsigned char *)(v11 + 4);
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(unsigned char *)(v10 + 4) = v12;
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  char v16 = *(unsigned char *)(v15 + 4);
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = v16;
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10006E5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = _s15MissingMessagesO8ProgressVMa(0);
  v7(a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20), v6);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(unsigned char *)(v10 + 4) = *(unsigned char *)(v11 + 4);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  v7(a1 + v13, a2 + v13, v6);
  return a1;
}

uint64_t sub_10006E6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = _s15MissingMessagesO8ProgressVMa(0);
  v7(a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20), v6);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(unsigned char *)(v10 + 4) = *(unsigned char *)(v11 + 4);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  v7(a1 + v13, a2 + v13, v6);
  return a1;
}

uint64_t sub_10006E7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006E7EC);
}

uint64_t sub_10006E7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s15MissingMessagesO8ProgressVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = _s15MissingMessagesO11QueriedUIDsVMa(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10006E8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006E8F8);
}

uint64_t sub_10006E8F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = _s15MissingMessagesO8ProgressVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = _s15MissingMessagesO11QueriedUIDsVMa(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s15MissingMessagesO10IncompleteVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070AE00);
}

void sub_10006EA1C()
{
  _s15MissingMessagesO8ProgressVMa(319);
  if (v0 <= 0x3F)
  {
    sub_100069220();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10006EAEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
  }
  return a1;
}

uint64_t sub_10006EBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t sub_10006EC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  return a1;
}

uint64_t sub_10006ED50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = v11;
  return a1;
}

uint64_t sub_10006EE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  return a1;
}

uint64_t sub_10006EEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  return a1;
}

uint64_t sub_10006EF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006EF8C);
}

uint64_t sub_10006EF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_10000566C(&qword_100709E38);
    char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10006F08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006F0A0);
}

uint64_t sub_10006F0A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_10000566C(&qword_100709E38);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_10006F1AC()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

char *sub_10006F244(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[4] = a2[4];
      uint64_t v19 = _s15MissingMessagesO8CompleteVMa(0);
      uint64_t v20 = *(int *)(v19 + 20);
      unint64_t v21 = &a1[v20];
      int64_t v22 = &a2[v20];
      uint64_t v23 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      a1[*(int *)(v19 + 24)] = a2[*(int *)(v19 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      uint64_t v10 = _s15MissingMessagesO8ProgressVMa(0);
      v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v8);
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
      v12[4] = v13[4];
      uint64_t v14 = _s15MissingMessagesO10IncompleteVMa(0);
      uint64_t v15 = *(int *)(v14 + 20);
      char v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      *(_DWORD *)char v16 = *(_DWORD *)v17;
      v16[4] = v17[4];
      v9(&a1[*(int *)(v14 + 24)], &a2[*(int *)(v14 + 24)], v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10006F468(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v8 = a1 + *(int *)(_s15MissingMessagesO8CompleteVMa(0) + 20);
    uint64_t v9 = sub_10000566C(&qword_100709E60);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v6 = v9;
    uint64_t v5 = v8;
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_10000566C(&qword_100709E60);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v3 - 8), a1, v3);
    uint64_t v4 = _s15MissingMessagesO8ProgressVMa(0);
    v10(a1 + *(int *)(v4 + 20), v3);
    uint64_t v5 = a1 + *(int *)(_s15MissingMessagesO10IncompleteVMa(0) + 24);
    uint64_t v6 = v3;
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v10;
  }
  return v7(v5, v6);
}

char *sub_10006F590(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[4] = a2[4];
    uint64_t v17 = _s15MissingMessagesO8CompleteVMa(0);
    uint64_t v18 = *(int *)(v17 + 20);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    a1[*(int *)(v17 + 24)] = a2[*(int *)(v17 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = _s15MissingMessagesO8ProgressVMa(0);
    v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
    uint64_t v10 = *(int *)(v9 + 24);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
    void v11[4] = v12[4];
    uint64_t v13 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v14 = *(int *)(v13 + 20);
    uint64_t v15 = &a1[v14];
    char v16 = &a2[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v8(&a1[*(int *)(v13 + 24)], &a2[*(int *)(v13 + 24)], v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10006F770(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100074568((uint64_t)a1, _s15MissingMessagesOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      int v19 = *(_DWORD *)a2;
      a1[4] = a2[4];
      *(_DWORD *)a1 = v19;
      uint64_t v20 = _s15MissingMessagesO8CompleteVMa(0);
      uint64_t v21 = *(int *)(v20 + 20);
      int64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      a1[*(int *)(v20 + 24)] = a2[*(int *)(v20 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_10000566C(&qword_100709E60);
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      uint64_t v9 = _s15MissingMessagesO8ProgressVMa(0);
      v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
      uint64_t v10 = *(int *)(v9 + 24);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      char v13 = v12[4];
      *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
      void v11[4] = v13;
      uint64_t v14 = _s15MissingMessagesO10IncompleteVMa(0);
      uint64_t v15 = *(int *)(v14 + 20);
      char v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      char v18 = v17[4];
      *(_DWORD *)char v16 = *(_DWORD *)v17;
      v16[4] = v18;
      v8(&a1[*(int *)(v14 + 24)], &a2[*(int *)(v14 + 24)], v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t _s15MissingMessagesOMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070AF48);
}

char *sub_10006F994(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[4] = a2[4];
    uint64_t v17 = _s15MissingMessagesO8CompleteVMa(0);
    uint64_t v18 = *(int *)(v17 + 20);
    int v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    a1[*(int *)(v17 + 24)] = a2[*(int *)(v17 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    uint64_t v9 = _s15MissingMessagesO8ProgressVMa(0);
    v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
    uint64_t v10 = *(int *)(v9 + 24);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
    void v11[4] = v12[4];
    uint64_t v13 = _s15MissingMessagesO10IncompleteVMa(0);
    uint64_t v14 = *(int *)(v13 + 20);
    uint64_t v15 = &a1[v14];
    char v16 = &a2[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v8(&a1[*(int *)(v13 + 24)], &a2[*(int *)(v13 + 24)], v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10006FB74(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100074568((uint64_t)a1, _s15MissingMessagesOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[4] = a2[4];
      uint64_t v17 = _s15MissingMessagesO8CompleteVMa(0);
      uint64_t v18 = *(int *)(v17 + 20);
      int v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      a1[*(int *)(v17 + 24)] = a2[*(int *)(v17 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_10000566C(&qword_100709E60);
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      uint64_t v9 = _s15MissingMessagesO8ProgressVMa(0);
      v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
      uint64_t v10 = *(int *)(v9 + 24);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
      void v11[4] = v12[4];
      uint64_t v13 = _s15MissingMessagesO10IncompleteVMa(0);
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v15 = &a1[v14];
      char v16 = &a2[v14];
      *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
      v15[4] = v16[4];
      v8(&a1[*(int *)(v13 + 24)], &a2[*(int *)(v13 + 24)], v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10006FD78()
{
  uint64_t result = _s15MissingMessagesO10IncompleteVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = _s15MissingMessagesO8CompleteVMa(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10006FE3C()
{
  uint64_t v1 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s15MissingMessagesO8CompleteVMa(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100074ED4(v0, (uint64_t)v3, _s15MissingMessagesOMa);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v7 = _s15MissingMessagesOMa;
    uint64_t v8 = (uint64_t)v3;
    goto LABEL_5;
  }
  sub_1000745C8((uint64_t)v3, (uint64_t)v6, _s15MissingMessagesO8CompleteVMa);
  if (v6[*(int *)(v4 + 24)])
  {
    uint64_t v7 = _s15MissingMessagesO8CompleteVMa;
    uint64_t v8 = (uint64_t)v6;
LABEL_5:
    sub_100074568(v8, v7);
    return 1;
  }
  sub_100074568(v0, _s15MissingMessagesOMa);
  int v10 = *(_DWORD *)v6;
  char v11 = v6[4];
  sub_1000745C8((uint64_t)&v6[*(int *)(v4 + 20)], v0 + *(int *)(v4 + 20), _s15MissingMessagesO11QueriedUIDsVMa);
  *(_DWORD *)uint64_t v0 = v10;
  *(unsigned char *)(v0 + 4) = v11;
  *(unsigned char *)(v0 + *(int *)(v4 + 24)) = 1;
  swift_storeEnumTagMultiPayload();
  return 0;
}

uint64_t sub_100070018()
{
  return sub_1000701F8(&qword_10070A9C0);
}

double sub_100070024@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = a1 + 32 * v2;
    char v4 = *(unsigned char *)(v3 + 4);
    char v5 = *(unsigned char *)(v3 + 5);
    char v6 = *(unsigned char *)(v3 + 6);
    char v7 = *(unsigned char *)(v3 + 7);
    char v8 = *(unsigned char *)(v3 + 8);
    char v9 = *(unsigned char *)(v3 + 9);
    __int16 v10 = *(_WORD *)(v3 + 10);
    char v11 = *(unsigned char *)(v3 + 12);
    uint64_t v12 = *(void *)(v3 + 13);
    char v13 = *(unsigned char *)(v3 + 21);
    uint64_t v14 = *(void *)(v3 + 24);
    *(_DWORD *)a2 = *(_DWORD *)v3;
    *(unsigned char *)(a2 + 4) = v4;
    *(unsigned char *)(a2 + 5) = v5;
    *(unsigned char *)(a2 + 6) = v6;
    *(unsigned char *)(a2 + 7) = v7;
    *(unsigned char *)(a2 + 8) = v8;
    *(unsigned char *)(a2 + 9) = v9;
    *(_WORD *)(a2 + 10) = v10;
    *(unsigned char *)(a2 + 12) = v11;
    *(void *)(a2 + 13) = v12;
    *(unsigned char *)(a2 + 21) = v13;
    *(void *)(a2 + 24) = v14;
    swift_bridgeObjectRetain();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1000700A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 40 * v2);
    int v4 = *((_DWORD *)v3 - 1);
    uint64_t v5 = *v3;
    int v6 = *((_DWORD *)v3 + 2);
    uint64_t v7 = v3[2];
    unint64_t v8 = v3[3];
    *(unsigned char *)a2 = *((unsigned char *)v3 - 8);
    *(_DWORD *)(a2 + 4) = v4;
    *(void *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
    *(void *)(a2 + 32) = v8;
    swift_bridgeObjectRetain();
    sub_100008D24(v7, v8);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

unint64_t sub_100070128(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((a1 & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) != 0) {
      goto LABEL_12;
    }
  }
  else if ((a2 & 0x100000000) == 0 && a2 == a1)
  {
    goto LABEL_12;
  }
  unint64_t result = sub_100074630(a2 | ((unint64_t)(BYTE4(a2) & 1) << 32), a1 | ((HIDWORD(a1) & 1) << 32), a2 | ((unint64_t)(BYTE4(a2) & 1) << 32), a3);
  if ((result & 0x100000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((a1 & 0x100000000) == 0)
  {
    if (result >= a1)
    {
      unsigned __int8 v6 = 0;
      if ((a2 & 0x100000000) != 0 || result < a2) {
        return result | ((unint64_t)v6 << 32);
      }
      __break(1u);
LABEL_12:
      LODWORD(result) = 0;
      unsigned __int8 v6 = 1;
      return result | ((unint64_t)v6 << 32);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1000701EC()
{
  return sub_1000701F8(&qword_10070AB10);
}

uint64_t sub_1000701F8(uint64_t *a1)
{
  sub_10000566C(&qword_10070A8F8);
  uint64_t v2 = sub_1005E35B0();
  if (v2 == sub_1005E35E0()) {
    return 0;
  }
  uint64_t result = sub_1005E35E0();
  uint64_t v4 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v5 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v4 < v5 || v4 >= result) {
    goto LABEL_9;
  }
  sub_10000566C(a1);
  MessageIdentifierSet.RangeView.subscript.getter();
  return v6;
}

unint64_t sub_1000702CC()
{
  uint64_t v0 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100709E38);
  MessageIdentifierSet.ranges.getter((uint64_t)v2);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v3 = sub_1005E35B0();
  uint64_t v4 = sub_1005E35E0();
  if (v3 == v4)
  {
    uint64_t v5 = 0;
  }
  else
  {
    MessageIdentifierSet.RangeView.subscript.getter();
    uint64_t v5 = v7[2];
  }
  sub_100007A48((uint64_t)v2, &qword_10070A9C0);
  return v5 | ((unint64_t)(v3 == v4) << 32);
}

uint64_t sub_1000703E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s15MissingMessagesO8CompleteVMa(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v7);
  char v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100074ED4(v2, (uint64_t)v12, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1000745C8((uint64_t)v12, (uint64_t)v9, _s15MissingMessagesO10IncompleteVMa);
    sub_100074ED4((uint64_t)&v9[*(int *)(v7 + 24)], a1, _s15MissingMessagesO11QueriedUIDsVMa);
    sub_100074568((uint64_t)v9, _s15MissingMessagesO10IncompleteVMa);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1000745C8((uint64_t)v12, (uint64_t)v6, _s15MissingMessagesO8CompleteVMa);
    sub_1000745C8((uint64_t)&v6[*(int *)(v4 + 20)], a1, _s15MissingMessagesO11QueriedUIDsVMa);
LABEL_5:
    uint64_t v14 = _s15MissingMessagesO11QueriedUIDsVMa(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);
  }
  uint64_t v16 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
}

uint64_t sub_100070660()
{
  sub_10001FC6C();
  return sub_1005E35A0();
}

uint64_t sub_1000706AC()
{
  return 0;
}

unint64_t sub_100070700()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v5);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = _s15MissingMessagesO8CompleteVMa(0);
  __chkstk_darwin(v8);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100074ED4(v1, (uint64_t)v7, _s15MissingMessagesOMa);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v14 = _s15MissingMessagesOMa;
    uint64_t v15 = (uint64_t)v7;
LABEL_8:
    sub_100074568(v15, v14);
    uint64_t v12 = 0;
    unsigned __int8 v13 = 1;
    return v12 | ((unint64_t)v13 << 32);
  }
  sub_1000745C8((uint64_t)v7, (uint64_t)v10, _s15MissingMessagesO8CompleteVMa);
  if (v10[*(int *)(v8 + 24)] != 1
    || (sub_100074ED4((uint64_t)&v10[*(int *)(v8 + 20)], (uint64_t)v4, _s15MissingMessagesO11QueriedUIDsVMa),
        unint64_t v11 = sub_1000702CC(),
        sub_100007A48((uint64_t)v4, &qword_100709E38),
        (v11 & 0x100000000) != 0)
    || (v11 & 0xFFFFFFFE) == 0)
  {
    uint64_t v14 = _s15MissingMessagesO8CompleteVMa;
    uint64_t v15 = (uint64_t)v10;
    goto LABEL_8;
  }
  uint64_t v12 = (v11 - 1);
  sub_100074568((uint64_t)v10, _s15MissingMessagesO8CompleteVMa);
  unsigned __int8 v13 = 0;
  return v12 | ((unint64_t)v13 << 32);
}

uint64_t sub_100070934(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)a2 != *(_DWORD *)a1) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  sub_10001FC6C();
  return sub_1005E35A0();
}

uint64_t sub_1000709B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s15MissingMessagesO8CompleteVMa(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100074ED4(v2, (uint64_t)v15, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1000745C8((uint64_t)v15, (uint64_t)v6, _s15MissingMessagesO8CompleteVMa);
      int v17 = *(_DWORD *)v6;
      char v18 = v6[4];
      uint64_t v19 = (uint64_t)&v6[*(int *)(v4 + 20)];
      uint64_t v20 = _s15MissingMessagesO30WindowUpperBoundAndQueriedUIDsVMa(0);
      sub_1000745C8(v19, a1 + *(int *)(v20 + 20), _s15MissingMessagesO11QueriedUIDsVMa);
      *(_DWORD *)a1 = v17;
      *(unsigned char *)(a1 + 4) = v18;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 0, 1, v20);
    }
    else
    {
      uint64_t v26 = _s15MissingMessagesO30WindowUpperBoundAndQueriedUIDsVMa(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a1, 1, 1, v26);
    }
  }
  else
  {
    sub_1000745C8((uint64_t)v15, (uint64_t)v12, _s15MissingMessagesO10IncompleteVMa);
    int64_t v22 = &v12[*(int *)(v10 + 20)];
    int v23 = *(_DWORD *)v22;
    char v24 = v22[4];
    sub_100074ED4((uint64_t)&v12[*(int *)(v10 + 24)], (uint64_t)v9, _s15MissingMessagesO11QueriedUIDsVMa);
    sub_100074568((uint64_t)v12, _s15MissingMessagesO10IncompleteVMa);
    *(_DWORD *)a1 = v23;
    *(unsigned char *)(a1 + 4) = v24;
    uint64_t v25 = _s15MissingMessagesO30WindowUpperBoundAndQueriedUIDsVMa(0);
    sub_1000745C8((uint64_t)v9, a1 + *(int *)(v25 + 20), _s15MissingMessagesO11QueriedUIDsVMa);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a1, 0, 1, v25);
  }
}

uint64_t sub_100070D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  uint64_t v5 = sub_10000566C(&qword_10070AF88);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v15 - 8);
  int v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100074ED4(v3, (uint64_t)v20, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v22 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      sub_100074568((uint64_t)v20, _s15MissingMessagesOMa);
      uint64_t v22 = 0;
    }
  }
  else
  {
    sub_1000745C8((uint64_t)v20, (uint64_t)v17, _s15MissingMessagesO10IncompleteVMa);
    sub_1000079E4((uint64_t)v17, (uint64_t)v14, &qword_100709E30);
    sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.count.getter();
    uint64_t v22 = v23;
    sub_100074568((uint64_t)v17, _s15MissingMessagesO10IncompleteVMa);
    sub_100007A48((uint64_t)v14, &qword_100709E38);
  }
  if (a1 >= 0) {
    uint64_t v24 = a1;
  }
  else {
    uint64_t v24 = a1 + 1;
  }
  if (v22 >= v24 >> 1) {
    goto LABEL_15;
  }
  sub_1000703E8((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_1000745C8((uint64_t)v7, (uint64_t)v11, _s15MissingMessagesO11QueriedUIDsVMa);
    sub_10000566C(&qword_100709E60);
    if ((sub_1005E3630() & 1) == 0 && (v28 & 0x100000000) == 0)
    {
      int v29 = v28;
      sub_10000566C(&qword_100709E38);
      char v26 = MessageIdentifierSet.contains(_:)();
      sub_100074568((uint64_t)v11, _s15MissingMessagesO11QueriedUIDsVMa);
      char v25 = v26 ^ 1;
      return v25 & 1;
    }
    sub_100074568((uint64_t)v11, _s15MissingMessagesO11QueriedUIDsVMa);
LABEL_15:
    char v25 = 0;
    return v25 & 1;
  }
  sub_100007A48((uint64_t)v7, &qword_10070AF88);
  char v25 = 1;
  return v25 & 1;
}

uint64_t sub_1000710CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100074ED4(v1, (uint64_t)v10, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_100074568((uint64_t)v10, _s15MissingMessagesOMa);
    }
    return 0;
  }
  else
  {
    sub_1000745C8((uint64_t)v10, (uint64_t)v7, _s15MissingMessagesO10IncompleteVMa);
    sub_1000079E4((uint64_t)v7, (uint64_t)v4, &qword_100709E30);
    sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.count.getter();
    uint64_t v12 = v13;
    sub_100074568((uint64_t)v7, _s15MissingMessagesO10IncompleteVMa);
    sub_100007A48((uint64_t)v4, &qword_100709E38);
  }
  return v12;
}

uint64_t sub_1000712BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s15MissingMessagesO8ProgressVMa(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100074ED4(v2, (uint64_t)v15, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_100074568((uint64_t)v15, _s15MissingMessagesOMa);
    }
    return sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    sub_1000745C8((uint64_t)v15, (uint64_t)v12, _s15MissingMessagesO10IncompleteVMa);
    sub_100074ED4((uint64_t)v12, (uint64_t)v9, _s15MissingMessagesO8ProgressVMa);
    sub_100074568((uint64_t)v12, _s15MissingMessagesO10IncompleteVMa);
    sub_1000079E4((uint64_t)v9, (uint64_t)v6, &qword_100709E30);
    sub_100074568((uint64_t)v9, _s15MissingMessagesO8ProgressVMa);
    return sub_10001FDF0((uint64_t)v6, a1, &qword_100709E38);
  }
}

uint64_t sub_100071520()
{
  uint64_t v1 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1000716EC();
  sub_1000079E4(v0, (uint64_t)v3, &qword_100709E30);
  MessageIdentifierSet.intersection(_:)((uint64_t)v9, v4);
  sub_100007A48((uint64_t)v3, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  uint64_t v11 = v10;
  sub_100007A48((uint64_t)v7, &qword_100709E38);
  if (v11 < 1)
  {
    uint64_t v12 = 0;
  }
  else
  {
    _s15MissingMessagesO8ProgressVMa(0);
    MessageIdentifierSet.intersection(_:)((uint64_t)v9, v4);
    MessageIdentifierSet.count.getter();
    sub_100007A48((uint64_t)v7, &qword_100709E38);
    uint64_t v12 = v11;
  }
  sub_100007A48((uint64_t)v9, &qword_100709E38);
  return v12;
}

uint64_t sub_1000716EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = v1 + *(int *)(_s15MissingMessagesO8ProgressVMa(0) + 24);
  if ((*(unsigned char *)(v14 + 4) & 1) == 0)
  {
    int v15 = *(_DWORD *)v14;
    if (v15 != -1)
    {
      LODWORD(v31) = v15 + 1;
LABEL_15:
      int v32 = -1;
      sub_100063E18();
      static MessageIdentifier.... infix(_:_:)();
      uint64_t v31 = v33;
      Range<>.init<A>(_:)((uint64_t)&v31, (uint64_t)&type metadata for UID);
      uint64_t v31 = v28;
      sub_10001FC6C();
      return sub_1005E36A0();
    }
  }
  sub_1000079E4(v1, (uint64_t)v7, &qword_100709E30);
  MessageIdentifierSet.union(_:)();
  sub_100007A48((uint64_t)v7, &qword_100709E38);
  sub_10006654C(3000, (uint64_t)v13);
  sub_100007A48((uint64_t)v11, &qword_100709E38);
  uint64_t v16 = MessageIdentifierSet.startIndex.getter(v8);
  uint64_t v18 = v17;
  if (v16 != MessageIdentifierSet.endIndex.getter(v8) || v18 != v19)
  {
    MessageIdentifierSet.subscript.getter();
    int v21 = v33;
    uint64_t v22 = (uint64_t)v13;
LABEL_14:
    sub_100007A48(v22, &qword_100709E38);
    LODWORD(v31) = v21;
    goto LABEL_15;
  }
  sub_100007A48((uint64_t)v13, &qword_100709E38);
  sub_1000079E4(v1, (uint64_t)v5, &qword_100709E30);
  uint64_t v23 = MessageIdentifierSet.startIndex.getter(v8);
  uint64_t v25 = v24;
  if (v23 != MessageIdentifierSet.endIndex.getter(v8) || v25 != v26)
  {
    MessageIdentifierSet.subscript.getter();
    int v21 = v33;
    uint64_t v22 = (uint64_t)v5;
    goto LABEL_14;
  }
  uint64_t result = sub_100007A48((uint64_t)v5, &qword_100709E38);
  __break(1u);
  return result;
}

uint64_t sub_1000719E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_100709E30);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v20 - v9;
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000079E4(v2, (uint64_t)v10, &qword_100709E30);
  v20[1] = a1;
  MessageIdentifierSet.union(_:)();
  sub_100007A48((uint64_t)v10, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v17 < 1)
  {
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    uint64_t v18 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v13, (uint64_t)v8, &qword_100709E38);
    sub_10001FDF0((uint64_t)v8, (uint64_t)v16, &qword_100709E30);
    uint64_t v18 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, v18, 1, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100075484((uint64_t)v16, v2);
    _s15MissingMessagesO8ProgressVMa(0);
    sub_10000566C(&qword_100709E60);
    return sub_1005E3660();
  }
  return result;
}

uint64_t sub_100071C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v46 = a2;
  uint64_t v5 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v5 - 8);
  uint64_t v47 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10000566C(&qword_100709E30);
  uint64_t v7 = *(void *)(v48 - 8);
  uint64_t v8 = __chkstk_darwin(v48);
  uint64_t v45 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v42 = (uint64_t)&v41 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = sub_10000566C(&qword_100709E38);
  uint64_t v15 = __chkstk_darwin(v14);
  char v43 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v41 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v41 - v23;
  sub_1000079E4(v3, (uint64_t)v13, &qword_100709E30);
  MessageIdentifierSet.intersection(_:)(a1, v14);
  sub_100007A48((uint64_t)v13, &qword_100709E38);
  uint64_t v44 = v3;
  sub_1000079E4(v3, (uint64_t)v13, &qword_100709E30);
  MessageIdentifierSet.subtracting(_:)((uint64_t)v24, v14);
  sub_100007A48((uint64_t)v13, &qword_100709E38);
  sub_1000079E4((uint64_t)v22, (uint64_t)v19, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v25 < 1)
  {
    sub_100007A48((uint64_t)v19, &qword_100709E38);
    uint64_t v28 = 1;
    uint64_t v27 = v47;
  }
  else
  {
    uint64_t v26 = v45;
    sub_10001FDF0((uint64_t)v19, v45, &qword_100709E38);
    uint64_t v27 = v47;
    sub_10001FDF0(v26, v47, &qword_100709E30);
    uint64_t v28 = 0;
  }
  uint64_t v29 = v48;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v27, v28, 1, v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v27, 1, v29) == 1)
  {
    sub_100007A48((uint64_t)v22, &qword_100709E38);
    sub_100007A48((uint64_t)v24, &qword_100709E38);
    sub_100007A48(v27, &qword_10070A000);
    uint64_t v30 = _s15MissingMessagesO8ProgressVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v46, 1, 1, v30);
  }
  else
  {
    uint64_t v32 = v42;
    sub_10001FDF0(v27, v42, &qword_100709E30);
    sub_1000079E4(v32, (uint64_t)v13, &qword_100709E30);
    uint64_t v33 = _s15MissingMessagesO8ProgressVMa(0);
    uint64_t v35 = (uint64_t)v43;
    uint64_t v34 = v44;
    MessageIdentifierSet.union(_:)();
    sub_100007A48(v32, &qword_100709E30);
    sub_100007A48((uint64_t)v22, &qword_100709E38);
    sub_100007A48((uint64_t)v24, &qword_100709E38);
    uint64_t v36 = (int *)(v34 + *(int *)(v33 + 24));
    int v37 = *v36;
    LOBYTE(v34) = *((unsigned char *)v36 + 4);
    uint64_t v38 = (uint64_t)v13;
    uint64_t v39 = v46;
    sub_10001FDF0(v38, v46, &qword_100709E30);
    sub_10001FDF0(v35, v39 + *(int *)(v33 + 20), &qword_100709E38);
    uint64_t v40 = v39 + *(int *)(v33 + 24);
    *(_DWORD *)uint64_t v40 = v37;
    *(unsigned char *)(v40 + 4) = v34;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v39, 0, 1, v33);
  }
}

uint64_t sub_100072114(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v3 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_10070B028);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s15MissingMessagesO8ProgressVMa(0);
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v15 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s15MissingMessagesOMa(0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v43 = v2;
  uint64_t v24 = v2;
  uint64_t v26 = v25;
  sub_100074ED4(v24, (uint64_t)&v40 - v22, _s15MissingMessagesOMa);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1) {
      return sub_100074568((uint64_t)v23, _s15MissingMessagesOMa);
    }
  }
  else
  {
    sub_100074568(v43, _s15MissingMessagesOMa);
    sub_1000745C8((uint64_t)v23, (uint64_t)v17, _s15MissingMessagesO10IncompleteVMa);
    sub_100071C74(v42, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v8, 1, v9) == 1)
    {
      sub_100007A48((uint64_t)v8, &qword_10070B028);
      uint64_t v28 = &v17[*(int *)(v15 + 20)];
      int v29 = *(_DWORD *)v28;
      char v30 = v28[4];
      sub_100074ED4((uint64_t)&v17[*(int *)(v15 + 24)], (uint64_t)v5, _s15MissingMessagesO11QueriedUIDsVMa);
      sub_100074568((uint64_t)v17, _s15MissingMessagesO10IncompleteVMa);
      *(_DWORD *)uint64_t v21 = v29;
      v21[4] = v30;
      uint64_t v31 = _s15MissingMessagesO8CompleteVMa(0);
      sub_1000745C8((uint64_t)v5, (uint64_t)&v21[*(int *)(v31 + 20)], _s15MissingMessagesO11QueriedUIDsVMa);
      v21[*(int *)(v31 + 24)] = 0;
    }
    else
    {
      uint64_t v42 = v26;
      sub_1000745C8((uint64_t)v8, (uint64_t)v14, _s15MissingMessagesO8ProgressVMa);
      sub_100071520();
      if (v32)
      {
        uint64_t v33 = &v17[*(int *)(v15 + 20)];
        int v34 = *(_DWORD *)v33;
        LOBYTE(v33) = v33[4];
        uint64_t v35 = &v14[*(int *)(v9 + 24)];
        *(_DWORD *)uint64_t v35 = v34;
        v35[4] = (char)v33;
      }
      sub_1000745C8((uint64_t)v14, (uint64_t)v12, _s15MissingMessagesO8ProgressVMa);
      uint64_t v36 = &v17[*(int *)(v15 + 20)];
      int v37 = *(_DWORD *)v36;
      char v38 = v36[4];
      sub_100074ED4((uint64_t)&v17[*(int *)(v15 + 24)], (uint64_t)v5, _s15MissingMessagesO11QueriedUIDsVMa);
      sub_100074568((uint64_t)v17, _s15MissingMessagesO10IncompleteVMa);
      sub_1000745C8((uint64_t)v12, (uint64_t)v21, _s15MissingMessagesO8ProgressVMa);
      uint64_t v39 = &v21[*(int *)(v15 + 20)];
      *(_DWORD *)uint64_t v39 = v37;
      v39[4] = v38;
      sub_1000745C8((uint64_t)v5, (uint64_t)&v21[*(int *)(v15 + 24)], _s15MissingMessagesO11QueriedUIDsVMa);
    }
    swift_storeEnumTagMultiPayload();
    return sub_1000745C8((uint64_t)v21, v43, _s15MissingMessagesOMa);
  }
  return result;
}

BOOL sub_1000725F4(unsigned int *a1, unsigned int *a2)
{
  return sub_1000748B4(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), a1[2] | ((unint64_t)*((unsigned __int8 *)a1 + 12) << 32), a1[4] | ((unint64_t)*((unsigned __int8 *)a1 + 20) << 32), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32), a2[2] | ((unint64_t)*((unsigned __int8 *)a2 + 12) << 32), a2[4] | ((unint64_t)*((unsigned __int8 *)a2 + 20) << 32));
}

uint64_t sub_100072678(uint64_t a1)
{
  uint64_t v200 = a1;
  uint64_t v198 = _s15MissingMessagesO10IncompleteVMa(0);
  uint64_t v1 = __chkstk_darwin(v198);
  uint64_t v189 = (uint64_t)&v173 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v191 = (uint64_t)&v173 - v3;
  uint64_t v4 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  __chkstk_darwin(v4 - 8);
  char v197 = (char *)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = _s15MissingMessagesOMa(0);
  uint64_t v6 = __chkstk_darwin(v201);
  uint64_t v187 = (uint64_t)&v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v190 = (uint64_t)&v173 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  char v185 = (unsigned int *)((char *)&v173 - v11);
  __chkstk_darwin(v10);
  uint64_t v188 = (uint64_t)&v173 - v12;
  uint64_t v194 = _s15MissingMessagesO8CompleteVMa(0);
  uint64_t v13 = __chkstk_darwin(v194);
  uint64_t v178 = (uint64_t)&v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v186 = (uint64_t)&v173 - v15;
  uint64_t v196 = _s15MissingMessagesO8ProgressVMa(0);
  uint64_t v16 = __chkstk_darwin(v196);
  uint64_t v182 = (uint64_t)&v173 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v181 = (uint64_t)&v173 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v184 = (uint64_t)&v173 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v180 = (uint64_t)&v173 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v183 = (uint64_t)&v173 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v179 = (uint64_t)&v173 - v27;
  __chkstk_darwin(v26);
  uint64_t v177 = (uint64_t)&v173 - v28;
  uint64_t v29 = sub_10000566C(&qword_10070B020);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v173 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10000566C(&qword_100709E30);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v193 = (uint64_t)&v173 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v176 = (uint64_t)&v173 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v192 = (uint64_t)&v173 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v175 = (uint64_t)&v173 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v173 - v43;
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v173 - v45;
  uint64_t v47 = sub_10000566C(&qword_100709E38);
  uint64_t v48 = __chkstk_darwin(v47);
  uint64_t v174 = (char *)&v173 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  char v173 = (char *)&v173 - v51;
  __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v173 - v52;
  uint64_t v54 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v54 - 8);
  uint64_t v56 = (char *)&v173 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000079E4(v200, (uint64_t)v53, &qword_100709E38);
  uint64_t v195 = v47;
  MessageIdentifierSet.count.getter();
  if (v57 < 1)
  {
    sub_100007A48((uint64_t)v53, &qword_100709E38);
    uint64_t v58 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v53, (uint64_t)v46, &qword_100709E38);
    sub_10001FDF0((uint64_t)v46, (uint64_t)v56, &qword_100709E30);
    uint64_t v58 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v56, v58, 1, v32);
  uint64_t v59 = (uint64_t)&v31[*(int *)(v29 + 48)];
  uint64_t v60 = v199;
  sub_1000745C8(v199, (uint64_t)v31, _s15MissingMessagesOMa);
  sub_10001FDF0((uint64_t)v56, v59, &qword_10070A000);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v59, 1, v32) == 1)
    {
      uint64_t v76 = v189;
      sub_1000745C8((uint64_t)v31, v189, _s15MissingMessagesO10IncompleteVMa);
      uint64_t v77 = v181;
      sub_100074ED4(v76, v181, _s15MissingMessagesO8ProgressVMa);
      uint64_t v78 = v77 + *(int *)(v196 + 24);
      unsigned int v79 = *(_DWORD *)v78;
      int v80 = *(unsigned __int8 *)(v78 + 4);
      unint64_t v81 = (unsigned int *)(v200 + *(int *)(_s15MissingMessagesO10NewMissingVMa(0) + 20));
      unsigned int v82 = *v81;
      unsigned int v83 = v81[2];
      if (*v81 <= v83) {
        unsigned int v84 = v81[2];
      }
      else {
        unsigned int v84 = *v81;
      }
      if (*((unsigned char *)v81 + 4)) {
        unsigned int v82 = v81[2];
      }
      else {
        unsigned int v83 = v84;
      }
      if (!*((unsigned char *)v81 + 12)) {
        unsigned int v82 = v83;
      }
      char v85 = v81[3] & v81[1];
      if (v82 >= v79) {
        unsigned int v86 = v79;
      }
      else {
        unsigned int v86 = v82;
      }
      if ((_BYTE)v81[3] & (_BYTE)v81[1])
      {
        unsigned int v82 = v79;
        unsigned int v86 = v79;
      }
      if (!v80) {
        unsigned int v82 = v86;
      }
      *(_DWORD *)uint64_t v78 = v82;
      *(unsigned char *)(v78 + 4) = v80 & v85;
      uint64_t v87 = v182;
      sub_100074ED4(v77, v182, _s15MissingMessagesO8ProgressVMa);
      uint64_t v88 = v198;
      uint64_t v89 = v76 + *(int *)(v198 + 20);
      unsigned int v90 = *(_DWORD *)v89;
      unsigned int v91 = v81[4];
      if (v91 <= *(_DWORD *)v89) {
        unsigned int v92 = *(_DWORD *)v89;
      }
      else {
        unsigned int v92 = v81[4];
      }
      if (*((unsigned char *)v81 + 20)) {
        unsigned int v91 = *(_DWORD *)v89;
      }
      else {
        unsigned int v90 = v92;
      }
      int v93 = *(unsigned __int8 *)(v89 + 4);
      if (v93) {
        unsigned int v94 = v91;
      }
      else {
        unsigned int v94 = v90;
      }
      char v95 = v93 & v81[5];
      uint64_t v96 = (uint64_t)v197;
      MessageIdentifierSet.union(_:)();
      sub_100074568(v77, _s15MissingMessagesO8ProgressVMa);
      sub_100074568(v76, _s15MissingMessagesO10IncompleteVMa);
      uint64_t v97 = v187;
      sub_1000745C8(v87, v187, _s15MissingMessagesO8ProgressVMa);
      uint64_t v98 = v97 + *(int *)(v88 + 20);
      *(_DWORD *)uint64_t v98 = v94;
      *(unsigned char *)(v98 + 4) = v95;
      sub_1000745C8(v96, v97 + *(int *)(v88 + 24), _s15MissingMessagesO11QueriedUIDsVMa);
      swift_storeEnumTagMultiPayload();
      uint64_t v75 = v97;
      uint64_t v99 = v199;
      return sub_1000745C8(v75, v99, _s15MissingMessagesOMa);
    }
    uint64_t v131 = v191;
    sub_1000745C8((uint64_t)v31, v191, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v132 = v59;
    uint64_t v133 = v193;
    sub_10001FDF0(v132, v193, &qword_100709E30);
    uint64_t v134 = v180;
    sub_100074ED4(v131, v180, _s15MissingMessagesO8ProgressVMa);
    sub_1000719E4(v133);
    uint64_t v135 = v134 + *(int *)(v196 + 24);
    unsigned int v136 = *(_DWORD *)v135;
    int v137 = *(unsigned __int8 *)(v135 + 4);
    uint64_t v196 = _s15MissingMessagesO10NewMissingVMa(0);
    uint64_t v138 = (unsigned int *)(v200 + *(int *)(v196 + 20));
    unsigned int v139 = *v138;
    unsigned int v140 = v138[2];
    if (*v138 <= v140) {
      unsigned int v141 = v138[2];
    }
    else {
      unsigned int v141 = *v138;
    }
    if (*((unsigned char *)v138 + 4)) {
      unsigned int v139 = v138[2];
    }
    else {
      unsigned int v140 = v141;
    }
    if (!*((unsigned char *)v138 + 12)) {
      unsigned int v139 = v140;
    }
    char v142 = v138[3] & v138[1];
    if (v139 >= v136) {
      unsigned int v143 = v136;
    }
    else {
      unsigned int v143 = v139;
    }
    if ((_BYTE)v138[3] & (_BYTE)v138[1])
    {
      unsigned int v139 = v136;
      unsigned int v143 = v136;
    }
    if (!v137) {
      unsigned int v139 = v143;
    }
    *(_DWORD *)uint64_t v135 = v139;
    *(unsigned char *)(v135 + 4) = v137 & v142;
    uint64_t v144 = v184;
    sub_100074ED4(v134, v184, _s15MissingMessagesO8ProgressVMa);
    uint64_t v145 = v198;
    uint64_t v146 = v131 + *(int *)(v198 + 20);
    unsigned int v147 = *(_DWORD *)v146;
    unsigned int v148 = v138[4];
    if (v148 <= *(_DWORD *)v146) {
      unsigned int v149 = *(_DWORD *)v146;
    }
    else {
      unsigned int v149 = v138[4];
    }
    if (*((unsigned char *)v138 + 20)) {
      unsigned int v148 = *(_DWORD *)v146;
    }
    else {
      unsigned int v147 = v149;
    }
    int v150 = *(unsigned __int8 *)(v146 + 4);
    if (v150) {
      unsigned int v151 = v148;
    }
    else {
      unsigned int v151 = v147;
    }
    char v152 = v150 & v138[5];
    char v153 = v197;
    MessageIdentifierSet.union(_:)();
    sub_100074568(v134, _s15MissingMessagesO8ProgressVMa);
    sub_100007A48(v193, &qword_100709E30);
    sub_100074568(v131, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v126 = v190;
    sub_1000745C8(v144, v190, _s15MissingMessagesO8ProgressVMa);
    uint64_t v154 = v126 + *(int *)(v145 + 20);
    *(_DWORD *)uint64_t v154 = v151;
    *(unsigned char *)(v154 + 4) = v152;
    uint64_t v129 = v126 + *(int *)(v145 + 24);
    uint64_t v130 = (uint64_t)v153;
    goto LABEL_88;
  }
  if (EnumCaseMultiPayload == 1)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v59, 1, v32) == 1)
    {
      uint64_t v62 = (uint64_t)v31;
      uint64_t v63 = v178;
      sub_1000745C8(v62, v178, _s15MissingMessagesO8CompleteVMa);
      unsigned int v64 = *(_DWORD *)v63;
      int v65 = *(unsigned __int8 *)(v63 + 4);
      uint64_t v66 = v200 + *(int *)(_s15MissingMessagesO10NewMissingVMa(0) + 20);
      unsigned int v67 = *(_DWORD *)(v66 + 16);
      int v68 = *(unsigned __int8 *)(v66 + 20);
      if (v67 <= v64) {
        unsigned int v69 = v64;
      }
      else {
        unsigned int v69 = v67;
      }
      if (v68)
      {
        unsigned int v67 = v64;
        unsigned int v69 = v64;
      }
      if (v65) {
        unsigned int v70 = v67;
      }
      else {
        unsigned int v70 = v69;
      }
      char v71 = v65 & v68;
      uint64_t v72 = v194;
      uint64_t v73 = (uint64_t)v197;
      MessageIdentifierSet.union(_:)();
      sub_100074568(v63, _s15MissingMessagesO8CompleteVMa);
      uint64_t v74 = v185;
      unsigned int *v185 = v70;
      *((unsigned char *)v74 + 4) = v71;
      sub_1000745C8(v73, (uint64_t)v74 + *(int *)(v72 + 20), _s15MissingMessagesO11QueriedUIDsVMa);
      *((unsigned char *)v74 + *(int *)(v72 + 24)) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v75 = (uint64_t)v74;
      goto LABEL_89;
    }
    uint64_t v105 = v186;
    sub_1000745C8((uint64_t)v31, v186, _s15MissingMessagesO8CompleteVMa);
    uint64_t v106 = v59;
    uint64_t v107 = v192;
    sub_10001FDF0(v106, v192, &qword_100709E30);
    uint64_t v108 = v176;
    sub_1000079E4(v107, v176, &qword_100709E30);
    uint64_t v109 = (uint64_t)v174;
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v110 = (unsigned int *)(v200 + *(int *)(_s15MissingMessagesO10NewMissingVMa(0) + 20));
    unsigned int v111 = *v110;
    unsigned int v112 = v110[2];
    if (*v110 <= v112) {
      unsigned int v113 = v110[2];
    }
    else {
      unsigned int v113 = *v110;
    }
    if (*((unsigned char *)v110 + 4)) {
      unsigned int v111 = v110[2];
    }
    else {
      unsigned int v112 = v113;
    }
    if (*((unsigned char *)v110 + 12)) {
      unsigned int v114 = v111;
    }
    else {
      unsigned int v114 = v112;
    }
    char v115 = v110[3] & v110[1];
    uint64_t v116 = v179;
    sub_10001FDF0(v108, v179, &qword_100709E30);
    uint64_t v117 = v196;
    sub_10001FDF0(v109, v116 + *(int *)(v196 + 20), &qword_100709E38);
    uint64_t v118 = v116 + *(int *)(v117 + 24);
    *(_DWORD *)uint64_t v118 = v114;
    *(unsigned char *)(v118 + 4) = v115;
    uint64_t v119 = v183;
    sub_100074ED4(v116, v183, _s15MissingMessagesO8ProgressVMa);
    unsigned int v120 = *(_DWORD *)v105;
    unsigned int v121 = v110[4];
    if (v121 <= *(_DWORD *)v105) {
      unsigned int v122 = *(_DWORD *)v105;
    }
    else {
      unsigned int v122 = v110[4];
    }
    if (*((unsigned char *)v110 + 20)) {
      unsigned int v121 = *(_DWORD *)v105;
    }
    else {
      unsigned int v120 = v122;
    }
    if (*(unsigned char *)(v105 + 4)) {
      unsigned int v123 = v121;
    }
    else {
      unsigned int v123 = v120;
    }
    char v124 = *(unsigned char *)(v105 + 4) & v110[5];
    uint64_t v125 = v197;
    MessageIdentifierSet.union(_:)();
    sub_100074568(v116, _s15MissingMessagesO8ProgressVMa);
    sub_100007A48(v192, &qword_100709E30);
    sub_100074568(v105, _s15MissingMessagesO8CompleteVMa);
    uint64_t v126 = v188;
    sub_1000745C8(v119, v188, _s15MissingMessagesO8ProgressVMa);
    uint64_t v127 = v198;
    uint64_t v128 = v126 + *(int *)(v198 + 20);
    *(_DWORD *)uint64_t v128 = v123;
    *(unsigned char *)(v128 + 4) = v124;
    uint64_t v129 = v126 + *(int *)(v127 + 24);
    uint64_t v130 = (uint64_t)v125;
LABEL_88:
    sub_1000745C8(v130, v129, _s15MissingMessagesO11QueriedUIDsVMa);
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = v126;
LABEL_89:
    uint64_t v99 = v60;
    return sub_1000745C8(v75, v99, _s15MissingMessagesOMa);
  }
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v59, 1, v32) == 1)
  {
    uint64_t v100 = _s15MissingMessagesO10NewMissingVMa(0);
    uint64_t v101 = v200 + *(int *)(v100 + 20);
    int v102 = *(_DWORD *)(v101 + 16);
    char v103 = *(unsigned char *)(v101 + 20);
    uint64_t v104 = v194;
    sub_100074ED4(v200 + *(int *)(v100 + 24), v60 + *(int *)(v194 + 20), _s15MissingMessagesO11QueriedUIDsVMa);
    *(_DWORD *)uint64_t v60 = v102;
    *(unsigned char *)(v60 + 4) = v103;
    *(unsigned char *)(v60 + *(int *)(v104 + 24)) = 0;
  }
  else
  {
    sub_10001FDF0(v59, (uint64_t)v44, &qword_100709E30);
    uint64_t v156 = v175;
    sub_1000079E4((uint64_t)v44, v175, &qword_100709E30);
    uint64_t v157 = (uint64_t)v173;
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    sub_100007A48((uint64_t)v44, &qword_100709E30);
    uint64_t v158 = _s15MissingMessagesO10NewMissingVMa(0);
    uint64_t v159 = v200;
    long long v160 = (unsigned int *)(v200 + *(int *)(v158 + 20));
    unsigned int v161 = *v160;
    unsigned int v162 = v160[2];
    if (*v160 <= v162) {
      unsigned int v163 = v160[2];
    }
    else {
      unsigned int v163 = *v160;
    }
    if (*((unsigned char *)v160 + 4)) {
      unsigned int v161 = v160[2];
    }
    else {
      unsigned int v162 = v163;
    }
    if (*((unsigned char *)v160 + 12)) {
      unsigned int v164 = v161;
    }
    else {
      unsigned int v164 = v162;
    }
    char v165 = v160[3] & v160[1];
    uint64_t v166 = v177;
    sub_10001FDF0(v156, v177, &qword_100709E30);
    uint64_t v167 = v196;
    sub_10001FDF0(v157, v166 + *(int *)(v196 + 20), &qword_100709E38);
    uint64_t v168 = v166 + *(int *)(v167 + 24);
    *(_DWORD *)uint64_t v168 = v164;
    *(unsigned char *)(v168 + 4) = v165;
    unsigned int v169 = v160[4];
    LOBYTE(v167) = *((unsigned char *)v160 + 20);
    uint64_t v170 = v159 + *(int *)(v158 + 24);
    uint64_t v171 = v198;
    sub_100074ED4(v170, v60 + *(int *)(v198 + 24), _s15MissingMessagesO11QueriedUIDsVMa);
    sub_1000745C8(v166, v60, _s15MissingMessagesO8ProgressVMa);
    uint64_t v172 = v60 + *(int *)(v171 + 20);
    *(_DWORD *)uint64_t v172 = v169;
    *(unsigned char *)(v172 + 4) = v167;
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000736AC()
{
  uint64_t v1 = _s15MissingMessagesO8CompleteVMa(0);
  __chkstk_darwin(v1);
  uint64_t v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v4);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = _s15MissingMessagesOMa(0);
  __chkstk_darwin(v7);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100074ED4(v0, (uint64_t)v9, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1000745C8((uint64_t)v9, (uint64_t)v6, _s15MissingMessagesO10IncompleteVMa);
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1005E2C80(65);
    v30._uint64_t countAndFlagsBits = 0xD000000000000016;
    v30._unint64_t object = (void *)0x80000001005E4CA0;
    sub_1005E1E30(v30);
    v31._uint64_t countAndFlagsBits = sub_100073B78();
    sub_1005E1E30(v31);
    swift_bridgeObjectRelease();
    v32._unint64_t object = (void *)0x80000001005E4CC0;
    v32._uint64_t countAndFlagsBits = 0xD000000000000015;
    sub_1005E1E30(v32);
    uint64_t v13 = &v6[*(int *)(v4 + 20)];
    if (v13[4])
    {
      v14._uint64_t countAndFlagsBits = 7104878;
      unint64_t object = (void *)0xE300000000000000;
    }
    else
    {
      int v22 = *(_DWORD *)v13;
      v26._uint64_t countAndFlagsBits = 0;
      v26._unint64_t object = (void *)0xE000000000000000;
      int v25 = v22;
      sub_1005E2E90();
      v14._uint64_t countAndFlagsBits = v26._countAndFlagsBits;
      unint64_t object = v26._object;
    }
    v14._unint64_t object = object;
    sub_1005E1E30(v14);
    swift_bridgeObjectRelease();
    v36._uint64_t countAndFlagsBits = 0x656972657571202CLL;
    v36._unint64_t object = (void *)0xEF203A7344495564;
    sub_1005E1E30(v36);
    v26._uint64_t countAndFlagsBits = 0;
    v26._unint64_t object = (void *)0xE000000000000000;
    sub_10000566C(&qword_100709E38);
    sub_1005E2E90();
    sub_1005E1E30(v26);
    swift_bridgeObjectRelease();
    v37._uint64_t countAndFlagsBits = 41;
    v37._unint64_t object = (void *)0xE100000000000000;
    sub_1005E1E30(v37);
    uint64_t v16 = v27;
    uint64_t v20 = _s15MissingMessagesO10IncompleteVMa;
    uint64_t v21 = (uint64_t)v6;
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1000745C8((uint64_t)v9, (uint64_t)v3, _s15MissingMessagesO8CompleteVMa);
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1005E2C80(64);
    v29._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v29._unint64_t object = (void *)0x80000001005E4C80;
    sub_1005E1E30(v29);
    if (v3[4])
    {
      v11._uint64_t countAndFlagsBits = 7104878;
      uint64_t v12 = (void *)0xE300000000000000;
    }
    else
    {
      int v17 = *(_DWORD *)v3;
      v26._uint64_t countAndFlagsBits = 0;
      v26._unint64_t object = (void *)0xE000000000000000;
      int v25 = v17;
      sub_1005E2E90();
      v11._uint64_t countAndFlagsBits = v26._countAndFlagsBits;
      uint64_t v12 = v26._object;
    }
    v11._unint64_t object = v12;
    sub_1005E1E30(v11);
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 0x656972657571202CLL;
    v33._unint64_t object = (void *)0xEF203A7344495564;
    sub_1005E1E30(v33);
    v26._uint64_t countAndFlagsBits = 0;
    v26._unint64_t object = (void *)0xE000000000000000;
    sub_10000566C(&qword_100709E38);
    sub_1005E2E90();
    sub_1005E1E30(v26);
    swift_bridgeObjectRelease();
    v34._uint64_t countAndFlagsBits = 0x646C756F6873202CLL;
    v34._unint64_t object = (void *)0xEF203A776F726720;
    sub_1005E1E30(v34);
    if (v3[*(int *)(v1 + 24)]) {
      v18._uint64_t countAndFlagsBits = 1702195828;
    }
    else {
      v18._uint64_t countAndFlagsBits = 0x65736C6166;
    }
    if (v3[*(int *)(v1 + 24)]) {
      uint64_t v19 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v19 = (void *)0xE500000000000000;
    }
    v18._unint64_t object = v19;
    sub_1005E1E30(v18);
    swift_bridgeObjectRelease();
    v35._uint64_t countAndFlagsBits = 41;
    v35._unint64_t object = (void *)0xE100000000000000;
    sub_1005E1E30(v35);
    uint64_t v16 = v27;
    uint64_t v20 = _s15MissingMessagesO8CompleteVMa;
    uint64_t v21 = (uint64_t)v3;
LABEL_18:
    sub_100074568(v21, v20);
    return v16;
  }
  return 0x6E776F6E6B6E75;
}

uint64_t sub_100073B78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100709E30);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v39 - v6;
  sub_1000079E4(v0, (uint64_t)&v39 - v6, &qword_100709E30);
  sub_10000566C(&qword_100709E38);
  MessageIdentifierSet.count.getter();
  unint64_t v9 = v8;
  sub_100007A48((uint64_t)v7, &qword_100709E38);
  uint64_t v10 = _s15MissingMessagesO8ProgressVMa(0);
  MessageIdentifierSet.count.getter();
  if (v9 <= 0xA && (v11 & 0x8000000000000000) == 0 && v11 <= 10)
  {
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_1005E2C80(73);
    v45._uint64_t countAndFlagsBits = 0x20676E697373696DLL;
    v45._unint64_t object = (void *)0xE800000000000000;
    sub_1005E1E30(v45);
    uint64_t v39 = v10;
    sub_1000079E4(v0, (uint64_t)v5, &qword_100709E30);
    MessageIdentifierSet.count.getter();
    uint64_t v13 = v12;
    sub_100007A48((uint64_t)v5, &qword_100709E38);
    uint64_t v41 = v13;
    v46._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v46);
    swift_bridgeObjectRelease();
    v47._uint64_t countAndFlagsBits = 0x207344495520;
    v47._unint64_t object = (void *)0xE600000000000000;
    sub_1005E1E30(v47);
    sub_1000079E4(v1, (uint64_t)v5, &qword_100709E30);
    sub_1005E2E90();
    sub_100007A48((uint64_t)v5, &qword_100709E38);
    v48._uint64_t countAndFlagsBits = 0x203A656E6F64202CLL;
    v48._unint64_t object = (void *)0xE800000000000000;
    sub_1005E1E30(v48);
    MessageIdentifierSet.count.getter();
    uint64_t v41 = v14;
    v49._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v49);
    swift_bridgeObjectRelease();
    v50._uint64_t countAndFlagsBits = 0x207344495520;
    v50._unint64_t object = (void *)0xE600000000000000;
    sub_1005E1E30(v50);
    sub_1005E2E90();
    v51._unint64_t object = (void *)0x80000001005E4CE0;
    v51._uint64_t countAndFlagsBits = 0xD000000000000023;
    sub_1005E1E30(v51);
    uint64_t v15 = v1 + *(int *)(v39 + 24);
    if ((*(unsigned char *)(v15 + 4) & 1) == 0)
    {
      int v16 = *(_DWORD *)v15;
      uint64_t v41 = 0;
LABEL_19:
      unint64_t v42 = 0xE000000000000000;
      int v40 = v16;
      sub_1005E2E90();
      v37._uint64_t countAndFlagsBits = v41;
      uint64_t v38 = (void *)v42;
      goto LABEL_20;
    }
    goto LABEL_17;
  }
  if ((unint64_t)v11 <= 0xA)
  {
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_1005E2C80(82);
    v58._uint64_t countAndFlagsBits = 0x20676E697373696DLL;
    v58._unint64_t object = (void *)0xE800000000000000;
    sub_1005E1E30(v58);
    sub_1000079E4(v0, (uint64_t)v5, &qword_100709E30);
    MessageIdentifierSet.count.getter();
    uint64_t v26 = v25;
    sub_100007A48((uint64_t)v5, &qword_100709E38);
    uint64_t v41 = v26;
    v59._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v59);
    swift_bridgeObjectRelease();
    v60._uint64_t countAndFlagsBits = 0x6E69207344495520;
    v60._unint64_t object = (void *)0xEF2065676E617220;
    sub_1005E1E30(v60);
    sub_1000079E4(v1, (uint64_t)v5, &qword_100709E30);
    uint64_t v27 = sub_100074458();
    char v29 = v28;
    uint64_t result = sub_100007A48((uint64_t)v5, &qword_100709E38);
    if ((v29 & 1) == 0)
    {
      uint64_t v41 = v27;
      sub_10000566C(&qword_10070A9B8);
      sub_1005E2E90();
      v61._uint64_t countAndFlagsBits = 0x203A656E6F64202CLL;
      v61._unint64_t object = (void *)0xE800000000000000;
      sub_1005E1E30(v61);
      MessageIdentifierSet.count.getter();
      uint64_t v41 = v30;
      v62._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v62);
      swift_bridgeObjectRelease();
      v63._uint64_t countAndFlagsBits = 0x207344495520;
      v63._unint64_t object = (void *)0xE600000000000000;
      sub_1005E1E30(v63);
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_22;
  }
  if (v9 > 0xA)
  {
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_1005E2C80(91);
    v52._uint64_t countAndFlagsBits = 0x20676E697373696DLL;
    v52._unint64_t object = (void *)0xE800000000000000;
    sub_1005E1E30(v52);
    sub_1000079E4(v0, (uint64_t)v5, &qword_100709E30);
    MessageIdentifierSet.count.getter();
    uint64_t v18 = v17;
    sub_100007A48((uint64_t)v5, &qword_100709E38);
    uint64_t v41 = v18;
    v53._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v53);
    swift_bridgeObjectRelease();
    v54._uint64_t countAndFlagsBits = 0x6E69207344495520;
    v54._unint64_t object = (void *)0xEF2065676E617220;
    sub_1005E1E30(v54);
    sub_1000079E4(v1, (uint64_t)v5, &qword_100709E30);
    uint64_t v19 = sub_100074458();
    char v21 = v20;
    uint64_t result = sub_100007A48((uint64_t)v5, &qword_100709E38);
    if ((v21 & 1) == 0)
    {
      uint64_t v41 = v19;
      sub_10000566C(&qword_10070A9B8);
      sub_1005E2E90();
      v55._uint64_t countAndFlagsBits = 0x203A656E6F64202CLL;
      v55._unint64_t object = (void *)0xE800000000000000;
      sub_1005E1E30(v55);
      MessageIdentifierSet.count.getter();
      uint64_t v41 = v23;
      v56._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v56);
      swift_bridgeObjectRelease();
      v57._uint64_t countAndFlagsBits = 0x6E69207344495520;
      v57._unint64_t object = (void *)0xEF2065676E617220;
      sub_1005E1E30(v57);
      uint64_t result = sub_100074458();
      if ((v24 & 1) == 0)
      {
        uint64_t v41 = result;
LABEL_13:
        sub_1005E2E90();
        v64._unint64_t object = (void *)0x80000001005E4CE0;
        v64._uint64_t countAndFlagsBits = 0xD000000000000023;
        sub_1005E1E30(v64);
        uint64_t v31 = *(int *)(v10 + 24);
        goto LABEL_16;
      }
      goto LABEL_23;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v39 = v10;
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  sub_1005E2C80(82);
  v65._uint64_t countAndFlagsBits = 0x20676E697373696DLL;
  v65._unint64_t object = (void *)0xE800000000000000;
  sub_1005E1E30(v65);
  sub_1000079E4(v0, (uint64_t)v5, &qword_100709E30);
  MessageIdentifierSet.count.getter();
  uint64_t v33 = v32;
  sub_100007A48((uint64_t)v5, &qword_100709E38);
  uint64_t v41 = v33;
  v66._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v66);
  swift_bridgeObjectRelease();
  v67._uint64_t countAndFlagsBits = 0x207344495520;
  v67._unint64_t object = (void *)0xE600000000000000;
  sub_1005E1E30(v67);
  sub_1000079E4(v1, (uint64_t)v5, &qword_100709E30);
  sub_1005E2E90();
  sub_100007A48((uint64_t)v5, &qword_100709E38);
  v68._uint64_t countAndFlagsBits = 0x203A656E6F64202CLL;
  v68._unint64_t object = (void *)0xE800000000000000;
  sub_1005E1E30(v68);
  MessageIdentifierSet.count.getter();
  uint64_t v41 = v34;
  v69._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v69);
  swift_bridgeObjectRelease();
  v70._uint64_t countAndFlagsBits = 0x6E69207344495520;
  v70._unint64_t object = (void *)0xEF2065676E617220;
  sub_1005E1E30(v70);
  uint64_t result = sub_100074458();
  if ((v35 & 1) == 0)
  {
    uint64_t v41 = result;
    sub_10000566C(&qword_10070A9B8);
    sub_1005E2E90();
    v71._unint64_t object = (void *)0x80000001005E4CE0;
    v71._uint64_t countAndFlagsBits = 0xD000000000000023;
    sub_1005E1E30(v71);
    uint64_t v31 = *(int *)(v39 + 24);
LABEL_16:
    Swift::String v36 = (int *)(v1 + v31);
    if ((v36[1] & 1) == 0)
    {
      int v16 = *v36;
      uint64_t v41 = 0;
      goto LABEL_19;
    }
LABEL_17:
    v37._uint64_t countAndFlagsBits = 7104878;
    uint64_t v38 = (void *)0xE300000000000000;
LABEL_20:
    v37._unint64_t object = v38;
    sub_1005E1E30(v37);
    swift_bridgeObjectRelease();
    return v43;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100074458()
{
  uint64_t v0 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v3 = sub_1000702CC();
  if ((v3 & 0x100000000) != 0) {
    return 0;
  }
  int v4 = v3;
  sub_10000566C(&qword_100709E38);
  MessageIdentifierSet.ranges.getter((uint64_t)v2);
  int v5 = (unint64_t)sub_1000701F8(&qword_10070A9C0) >> 32;
  char v7 = v6;
  sub_100007A48((uint64_t)v2, &qword_10070A9C0);
  if (v7) {
    return 0;
  }
  v9[0] = v5;
  v9[1] = v4;
  sub_100063E18();
  static MessageIdentifier.... infix(_:_:)();
  return v10;
}

uint64_t sub_100074568(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000745C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100074630(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((result & 0x100000000) != 0)
  {
    unint64_t v4 = HIDWORD(a4);
    if (HIDWORD(a4) >= a4) {
      return v4;
    }
  }
  else
  {
    if (a4 >= result)
    {
      __break(1u);
    }
    else if ((result & 0xFFFFFFFE) != 0)
    {
      return (result - 1);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10007467C(uint64_t a1, uint64_t a2)
{
  sub_10001FC6C();
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(_s15MissingMessagesO10NewMissingVMa(0) + 20);
  uint64_t v5 = (_DWORD *)(a1 + v4);
  char v6 = *(unsigned char *)(a1 + v4 + 4);
  int v7 = *(_DWORD *)(a1 + v4 + 8);
  char v8 = *(unsigned char *)(a1 + v4 + 12);
  int v9 = *(_DWORD *)(a1 + v4 + 16);
  char v10 = *(unsigned char *)(a1 + v4 + 20);
  uint64_t v11 = (_DWORD *)(a2 + v4);
  int v12 = *(unsigned __int8 *)(a2 + v4 + 4);
  int v13 = *(_DWORD *)(a2 + v4 + 8);
  int v14 = *(unsigned __int8 *)(a2 + v4 + 12);
  int v15 = *(_DWORD *)(a2 + v4 + 16);
  int v16 = *(unsigned __int8 *)(a2 + v4 + 20);
  if (v6)
  {
    if (!v12) {
      return 0;
    }
  }
  else
  {
    if (*v11 == *v5) {
      char v17 = v12;
    }
    else {
      char v17 = 1;
    }
    if (v17) {
      return 0;
    }
  }
  if (v8)
  {
    if (!v14) {
      return 0;
    }
  }
  else
  {
    if (v13 == v7) {
      char v18 = v14;
    }
    else {
      char v18 = 1;
    }
    if (v18) {
      return 0;
    }
  }
  if (v10)
  {
    if (!v16) {
      return 0;
    }
  }
  else
  {
    if (v15 == v9) {
      char v20 = v16;
    }
    else {
      char v20 = 1;
    }
    if (v20) {
      return 0;
    }
  }
  return sub_1005E35A0();
}

uint64_t sub_100074790(uint64_t a1, uint64_t a2)
{
  sub_10001FC6C();
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = _s15MissingMessagesO8ProgressVMa(0);
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  char v6 = (_DWORD *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 4);
  char v8 = (_DWORD *)(a2 + v5);
  int v9 = *(unsigned __int8 *)(a2 + v5 + 4);
  if (v7)
  {
    if (!v9) {
      return 0;
    }
  }
  else
  {
    if (*v8 != *v6) {
      LOBYTE(v9) = 1;
    }
    if (v9) {
      return 0;
    }
  }
  uint64_t v10 = *(int *)(_s15MissingMessagesO10IncompleteVMa(0) + 20);
  uint64_t v11 = (_DWORD *)(a1 + v10);
  char v12 = *(unsigned char *)(a1 + v10 + 4);
  int v13 = (_DWORD *)(a2 + v10);
  int v14 = *(unsigned __int8 *)(a2 + v10 + 4);
  if (v12)
  {
    if (!v14) {
      return 0;
    }
  }
  else
  {
    if (*v13 != *v11) {
      LOBYTE(v14) = 1;
    }
    if (v14) {
      return 0;
    }
  }
  return sub_1005E35A0();
}

BOOL sub_1000748B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a1 & 0x100000000) != 0)
  {
    if ((a4 & 0x100000000) == 0) {
      return 0;
    }
  }
  else if ((a4 & 0x100000000) != 0 || a4 != a1)
  {
    return 0;
  }
  if ((a2 & 0x100000000) != 0)
  {
    if ((a5 & 0x100000000) == 0) {
      return 0;
    }
  }
  else if ((a5 & 0x100000000) != 0 || a5 != a2)
  {
    return 0;
  }
  if ((a3 & 0x100000000) != 0) {
    return (a6 & 0x100000000) != 0;
  }
  return (a6 & 0x100000000) == 0 && a6 == a3;
}

uint64_t sub_100074908(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return v4 & 1;
    }
  }
  else
  {
    if (*(_DWORD *)a2 != *(_DWORD *)a1) {
      char v4 = 1;
    }
    if (v4) {
      goto LABEL_9;
    }
  }
  uint64_t v5 = _s15MissingMessagesO8CompleteVMa(0);
  sub_10001FC6C();
  if ((sub_1005E35A0() & 1) == 0)
  {
LABEL_9:
    char v4 = 0;
    return v4 & 1;
  }
  char v4 = *(unsigned char *)(a1 + *(int *)(v5 + 24)) ^ *(unsigned char *)(a2 + *(int *)(v5 + 24)) ^ 1;
  return v4 & 1;
}

uint64_t sub_1000749C4(uint64_t a1, uint64_t a2)
{
  sub_10001FC6C();
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = _s15MissingMessagesO8ProgressVMa(0);
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  char v6 = (_DWORD *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 4);
  char v8 = (_DWORD *)(a2 + v5);
  char v9 = *(unsigned char *)(a2 + v5 + 4);
  if (v7)
  {
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*v8 != *v6) {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_100074A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = _s15MissingMessagesO8CompleteVMa(0);
  __chkstk_darwin(v27);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s15MissingMessagesO10IncompleteVMa(0);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s15MissingMessagesOMa(0);
  uint64_t v10 = __chkstk_darwin(v9);
  char v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  int v14 = (char *)&v26 - v13;
  uint64_t v15 = sub_10000566C(&qword_10070AF80);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  char v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_100074ED4(a1, (uint64_t)v18, _s15MissingMessagesOMa);
  sub_100074ED4(a2, v19, _s15MissingMessagesOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100074ED4((uint64_t)v18, (uint64_t)v14, _s15MissingMessagesOMa);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1000745C8(v19, (uint64_t)v8, _s15MissingMessagesO10IncompleteVMa);
      char v24 = sub_100074790((uint64_t)v14, (uint64_t)v8);
      sub_100074568((uint64_t)v8, _s15MissingMessagesO10IncompleteVMa);
      sub_100074568((uint64_t)v14, _s15MissingMessagesO10IncompleteVMa);
      sub_100074568((uint64_t)v18, _s15MissingMessagesOMa);
      return v24 & 1;
    }
    int v22 = _s15MissingMessagesO10IncompleteVMa;
    uint64_t v23 = (uint64_t)v14;
LABEL_12:
    sub_100074568(v23, v22);
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_100074ED4((uint64_t)v18, (uint64_t)v12, _s15MissingMessagesOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1000745C8(v19, (uint64_t)v5, _s15MissingMessagesO8CompleteVMa);
      char v21 = v5[4];
      if (v12[4])
      {
        if (!v5[4])
        {
LABEL_20:
          sub_100074568((uint64_t)v5, _s15MissingMessagesO8CompleteVMa);
          sub_100074568((uint64_t)v12, _s15MissingMessagesO8CompleteVMa);
          sub_100074568((uint64_t)v18, _s15MissingMessagesOMa);
          goto LABEL_21;
        }
      }
      else
      {
        if (*(_DWORD *)v5 != *(_DWORD *)v12) {
          char v21 = 1;
        }
        if (v21) {
          goto LABEL_20;
        }
      }
      sub_10001FC6C();
      if ((sub_1005E35A0() & 1) == 0 || v12[*(int *)(v27 + 24)] != v5[*(int *)(v27 + 24)]) {
        goto LABEL_20;
      }
      sub_100074568((uint64_t)v5, _s15MissingMessagesO8CompleteVMa);
      sub_100074568((uint64_t)v12, _s15MissingMessagesO8CompleteVMa);
      goto LABEL_10;
    }
    int v22 = _s15MissingMessagesO8CompleteVMa;
    uint64_t v23 = (uint64_t)v12;
    goto LABEL_12;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_13:
    sub_100007A48((uint64_t)v18, &qword_10070AF80);
LABEL_21:
    char v24 = 0;
    return v24 & 1;
  }
LABEL_10:
  sub_100074568((uint64_t)v18, _s15MissingMessagesOMa);
  char v24 = 1;
  return v24 & 1;
}

uint64_t sub_100074ED4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s15MissingMessagesO30WindowUpperBoundAndQueriedUIDsVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070AFE8);
}

void *sub_100074F5C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100075034(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_10000566C(&qword_100709E60);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t sub_1000750A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_100075128(uint64_t a1, int *a2, uint64_t a3)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = (uint64_t)a2 + v5;
  uint64_t v8 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_1000751B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_100075238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000752C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000752D4);
}

uint64_t sub_1000752D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_100075344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100075358);
}

uint64_t sub_100075358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = _s15MissingMessagesO11QueriedUIDsVMa(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

void sub_1000753CC()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t _s15MissingMessagesO10NewMissingVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070B088);
}

uint64_t sub_100075484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1000754EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)a1 + v9;
    char v12 = (char *)a2 + v9;
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *(void *)(v11 + 13) = *(void *)(v12 + 13);
    v8((uint64_t *)((char *)a1 + v10), (uint64_t *)((char *)a2 + v10), v7);
  }
  return a1;
}

uint64_t sub_1000755F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  return v7(v5, v4);
}

uint64_t sub_100075694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(void *)(v10 + 13) = *(void *)(v11 + 13);
  v7(a1 + v9, a2 + v9, v6);
  return a1;
}

uint64_t sub_100075748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = v11;
  char v12 = *(unsigned char *)(v10 + 12);
  *(_DWORD *)(v9 + 8) = *(_DWORD *)(v10 + 8);
  *(unsigned char *)(v9 + 12) = v12;
  char v13 = *(unsigned char *)(v10 + 20);
  *(_DWORD *)(v9 + 16) = *(_DWORD *)(v10 + 16);
  *(unsigned char *)(v9 + 20) = v13;
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_100075820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(void *)(v10 + 13) = *(void *)(v11 + 13);
  v7(a1 + v9, a2 + v9, v6);
  return a1;
}

uint64_t sub_1000758D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(unsigned char *)(v10 + 4) = *(unsigned char *)(v11 + 4);
  *(_DWORD *)(v10 + 8) = *(_DWORD *)(v11 + 8);
  *(unsigned char *)(v10 + 12) = *(unsigned char *)(v11 + 12);
  *(_DWORD *)(v10 + 16) = *(_DWORD *)(v11 + 16);
  *(unsigned char *)(v10 + 20) = *(unsigned char *)(v11 + 20);
  v7(a1 + v9, a2 + v9, v6);
  return a1;
}

uint64_t sub_1000759A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000759BC);
}

uint64_t sub_1000759BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = _s15MissingMessagesO11QueriedUIDsVMa(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100075AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100075ACC);
}

uint64_t sub_100075ACC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = _s15MissingMessagesO11QueriedUIDsVMa(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

void sub_100075BD4()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

__n128 _s15MissingMessagesO12WindowUpdateVwCP(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15MissingMessagesO12WindowUpdateVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 21)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s15MissingMessagesO12WindowUpdateVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 21) = v3;
  return result;
}

ValueMetadata *_s15MissingMessagesO12WindowUpdateVMa()
{
  return &_s15MissingMessagesO12WindowUpdateVN;
}

uint64_t *sub_100075CE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_100075DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100075E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100075ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100075F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100075FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100075FF0);
}

uint64_t sub_100075FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_100076060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100076074);
}

uint64_t sub_100076074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NewestMessages()
{
  uint64_t result = qword_10070B120;
  if (!qword_10070B120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100076134()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

BOOL sub_1000761D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_1005E35A0() & 1) != 0
      && *(void *)(a1 + *(int *)(a3 + 20)) == *(void *)(a2 + *(int *)(a3 + 20))
      && *(void *)(a1 + *(int *)(a3 + 24)) == *(void *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_100076250(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_10070A378);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v12 > 520)
  {
    unint64_t v13 = sub_1000702CC();
    if ((v13 & (unint64_t)&_mh_execute_header) != 0) {
      unsigned int v14 = 1;
    }
    else {
      unsigned int v14 = v13;
    }
    sub_100026334(a1, (uint64_t)v6);
    uint64_t v15 = MessageIdentifierSet.startIndex.getter(v11);
    uint64_t v17 = v16;
    if (v15 != MessageIdentifierSet.endIndex.getter(v11) || v17 != v18)
    {
      do
      {
        MessageIdentifierSet.subscript.getter();
        unsigned int v20 = v32[3];
        MessageIdentifierSet.index(_:offsetBy:)();
        uint64_t v15 = v21;
        uint64_t v17 = v22;
        if (v14 < v20)
        {
          v32[1] = v20;
          MessageIdentifierSet.insert(_:)();
        }
      }
      while (v15 != MessageIdentifierSet.endIndex.getter(v11) || v17 != v23);
    }
    char v24 = (uint64_t *)&v6[*(int *)(v4 + 36)];
    *char v24 = v15;
    v24[1] = v17;
    sub_1000764B4((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
    sub_1005E3670();
  }
  MessageIdentifierSet.count.getter();
  uint64_t v26 = v25;
  uint64_t result = type metadata accessor for NewestMessages();
  uint64_t v28 = *(int *)(result + 20);
  uint64_t v29 = *(void *)(v2 + v28);
  BOOL v30 = __OFADD__(v29, v26);
  uint64_t v31 = v29 + v26;
  if (v30) {
    __break(1u);
  }
  else {
    *(void *)(v2 + v28) = v31;
  }
  return result;
}

uint64_t sub_1000764B4(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070A378);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100076514(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(void *)(a1 + v7) = *(uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for MessagesPendingDownload();
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = v8 + v11;
    uint64_t v23 = v9 + v11;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_10000566C(&qword_100709E60);
    unsigned int v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    v14(v12, v23, v13);
    uint64_t v15 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
    uint64_t v16 = (void *)(v8 + v15);
    uint64_t v17 = (void *)(v9 + v15);
    *uint64_t v16 = *v17;
    uint64_t v18 = *(int *)(v10 + 20);
    uint64_t v19 = (char *)v16 + v18;
    unsigned int v20 = (char *)v17 + v18;
    swift_bridgeObjectRetain();
    v14((uint64_t)v19, (uint64_t)v20, v13);
    v14((uint64_t)v4 + *(int *)(a3 + 32), (uint64_t)a2 + *(int *)(a3 + 32), v13);
  }
  return v4;
}

uint64_t sub_1000766A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for MessagesPendingDownload();
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v7 - 8), v6, v7);
  uint64_t v8 = v4 + *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  swift_bridgeObjectRelease();
  v11(v8 + *(int *)(v5 + 20), v7);
  uint64_t v9 = a1 + *(int *)(a2 + 32);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v7);
}

uint64_t sub_1000767A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for MessagesPendingDownload();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10000566C(&qword_100709E60);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  uint64_t v14 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v15 = (void *)(v6 + v14);
  uint64_t v16 = (void *)(v7 + v14);
  *uint64_t v15 = *v16;
  uint64_t v17 = *(int *)(v8 + 20);
  uint64_t v18 = (char *)v15 + v17;
  uint64_t v19 = (char *)v16 + v17;
  swift_bridgeObjectRetain();
  v13((uint64_t)v18, (uint64_t)v19, v12);
  v13(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v12);
  return a1;
}

unsigned char *sub_1000768E8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  *(void *)&a1[v5] = *(void *)&a2[v5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for MessagesPendingDownload();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_10000566C(&qword_100709E60);
  uint64_t v13 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 24);
  v13(v10, v11, v12);
  uint64_t v14 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  *uint64_t v15 = *(void *)&v7[v14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13((unsigned char *)v15 + *(int *)(v8 + 20), &v16[*(int *)(v8 + 20)], v12);
  v13(&a1[*(int *)(a3 + 32)], &a2[*(int *)(a3 + 32)], v12);
  return a1;
}

uint64_t sub_100076A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for MessagesPendingDownload();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = (char *)(v6 + v9);
  uint64_t v11 = (char *)(v7 + v9);
  uint64_t v12 = sub_10000566C(&qword_100709E60);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  uint64_t v14 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v15 = (char *)(v6 + v14);
  uint64_t v16 = (char *)(v7 + v14);
  *(void *)uint64_t v15 = *(void *)v16;
  v13(&v15[*(int *)(v8 + 20)], &v16[*(int *)(v8 + 20)], v12);
  v13((char *)(a1 + *(int *)(a3 + 32)), (char *)(a2 + *(int *)(a3 + 32)), v12);
  return a1;
}

unsigned char *sub_100076B68(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = &a1[v5];
  uint64_t v7 = &a2[v5];
  *(void *)&a1[v5] = *(void *)&a2[v5];
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for MessagesPendingDownload();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_10000566C(&qword_100709E60);
  uint64_t v13 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  uint64_t v14 = *(int *)(type metadata accessor for MessagesPendingDownloadPerPass() + 20);
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  *(void *)&v6[v14] = *(void *)&v7[v14];
  swift_bridgeObjectRelease();
  v13(&v15[*(int *)(v8 + 20)], &v16[*(int *)(v8 + 20)], v12);
  v13(&a1[*(int *)(a3 + 32)], &a2[*(int *)(a3 + 32)], v12);
  return a1;
}

uint64_t sub_100076CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100076CC0);
}

uint64_t sub_100076CC0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for MessagesPendingDownloadPerPass();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = &a1[*(int *)(a3 + 28)];
      uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_10000566C(&qword_100709E38);
      uint64_t v16 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = &a1[*(int *)(a3 + 32)];
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_100076DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100076E04);
}

unsigned char *sub_100076E04(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for MessagesPendingDownloadPerPass();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 28)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E38);
      uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = &v5[*(int *)(a4 + 32)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for PendingPersistenceUpdates()
{
  uint64_t result = qword_10070B1B8;
  if (!qword_10070B1B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100076F7C()
{
  type metadata accessor for MessagesPendingDownloadPerPass();
  if (v0 <= 0x3F)
  {
    sub_100069220();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_100077054()
{
  BOOL v5 = &_swiftEmptySetSingleton;
  if (*v0 == 1) {
    sub_100019080(&v2, 6);
  }
  if (v0[1] == 1) {
    sub_100019080(&v3, 7);
  }
  if (v0[2] == 1) {
    sub_100019080(&v4, 8);
  }
  return v5;
}

uint64_t sub_1000770E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] != a2[1]) {
    return 0;
  }
  if (a1[2] != a2[2]) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for PendingPersistenceUpdates();
  if ((sub_10006D088((uint64_t *)&a1[*(int *)(v4 + 28)], (uint64_t *)&a2[*(int *)(v4 + 28)]) & 1) == 0) {
    return 0;
  }
  sub_10001FC6C();
  return sub_1005E35A0();
}

uint64_t sub_1000771A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[5];
    char v9 = *((unsigned char *)a2 + 48);
    sub_10003C120(v8, v9);
    *(void *)(v4 + 40) = v8;
    *(unsigned char *)(v4 + 48) = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = v4 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return v4;
}

uint64_t sub_1000772D8(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  sub_10005A3F4(*(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_10000566C(&qword_100709E60);
  int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_10007735C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  sub_10003C120(v7, v8);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t sub_100077434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100022498((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v6 = *(void *)(a2 + 40);
  char v7 = *(unsigned char *)(a2 + 48);
  sub_10003C120(v6, v7);
  uint64_t v8 = *(void *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  sub_10005A3F4(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1000774E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_100077578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  sub_10005A3F4(v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_100077620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100077634);
}

uint64_t sub_100077634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100709E38);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000776E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000776FC);
}

uint64_t sub_1000776FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E38);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PendingServerResponses()
{
  uint64_t result = qword_10070B258;
  if (!qword_10070B258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000777F4()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100077894(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x1000779ECLL);
      }
      uint64_t v8 = HIDWORD(a1) - (int)a1;
LABEL_6:
      sub_100008D24(a1, a2);
LABEL_7:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v11) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_21;
          }
          uint64_t v11 = (int)v11;
LABEL_12:
          if (v8 == v11)
          {
            if (v8 < 1)
            {
LABEL_17:
              char v15 = 1;
            }
            else
            {
              sub_100008D24(a3, a4);
              char v15 = sub_10000F5C4(a1, a2, a3, a4);
            }
          }
          else
          {
LABEL_16:
            char v15 = 0;
          }
          sub_1000094D4(a1, a2);
          return v15 & 1;
        case 2uLL:
          uint64_t v13 = *(void *)(a3 + 16);
          uint64_t v12 = *(void *)(a3 + 24);
          BOOL v14 = __OFSUB__(v12, v13);
          uint64_t v11 = v12 - v13;
          if (!v14) {
            goto LABEL_12;
          }
          goto LABEL_22;
        case 3uLL:
          if (v8) {
            goto LABEL_16;
          }
          goto LABEL_17;
        default:
          uint64_t v11 = BYTE6(a4);
          goto LABEL_12;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v8 = v9 - v10;
      if (!__OFSUB__(v9, v10)) {
        goto LABEL_6;
      }
      goto LABEL_20;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_7;
  }
}

BOOL sub_100077A0C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  BOOL v4 = (a4 & 1) == 0;
  if (a4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a3;
  }
  if (v5 != a1) {
    BOOL v4 = 0;
  }
  if (a2) {
    return a4 & 1;
  }
  else {
    return v4;
  }
}

uint64_t sub_100077A30(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v4 = v3;
    }
    else {
      unint64_t v4 = 0;
    }
    if (v2 >= v4) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

BOOL _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  unint64_t v3 = (unsigned __int8 *)(a1 + 33);
  unint64_t v4 = (unsigned __int8 *)(a2 + 33);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_100077ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t v5 = *(void *)(a1 + 48);
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  uint64_t v8 = *(unsigned int *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  unint64_t v10 = *(void *)(a2 + 48);
  sub_1000572C4(v6, v5);
  sub_1000572C4(v9, v10);
  LOBYTE(v7) = static SearchRequest.__derived_struct_equals(_:_:)(v7, v6, v5, v8, v9, v10);
  sub_10005730C(v9, v10);
  sub_10005730C(v6, v5);
  if ((v7 & 1) == 0) {
    return 0;
  }
  uint64_t v11 = (unint64_t *)(a2 + 72);
  uint64_t v12 = (unint64_t *)(a1 + 72);
  do
  {
    BOOL v13 = --v2 == 0;
    if (!v2) {
      break;
    }
    BOOL v14 = v11 + 3;
    char v15 = v12 + 3;
    uint64_t v17 = *(v12 - 1);
    unint64_t v16 = *v12;
    uint64_t v18 = *((unsigned int *)v12 - 4);
    uint64_t v19 = *((unsigned int *)v11 - 4);
    uint64_t v20 = *(v11 - 1);
    unint64_t v21 = *v11;
    sub_1000572C4(v17, *v12);
    sub_1000572C4(v20, v21);
    LOBYTE(v18) = static SearchRequest.__derived_struct_equals(_:_:)(v18, v17, v16, v19, v20, v21);
    sub_10005730C(v20, v21);
    sub_10005730C(v17, v16);
    uint64_t v12 = v15;
    uint64_t v11 = v14;
  }
  while ((v18 & 1) != 0);
  return v13;
}

uint64_t sub_100077C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v8 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        long long v6 = *(_OWORD *)(v3 + 16);
        v12[0] = *(_OWORD *)v3;
        v12[1] = v6;
        void v12[2] = *(_OWORD *)(v3 + 32);
        char v13 = *(unsigned char *)(v3 + 48);
        long long v7 = *(_OWORD *)(v4 + 16);
        v14[0] = *(_OWORD *)v4;
        v14[1] = v7;
        void v14[2] = *(_OWORD *)(v4 + 32);
        char v15 = *(unsigned char *)(v4 + 48);
        sub_10007BA04((uint64_t)v12);
        sub_10007BA04((uint64_t)v14);
        char v8 = static DownloadRequest.__derived_struct_equals(_:_:)(v12, v14);
        sub_10007BA54((uint64_t)v14);
        sub_10007BA54((uint64_t)v12);
        BOOL v10 = v5-- != 0;
        if ((v8 & 1) == 0) {
          break;
        }
        v4 += 56;
        v3 += 56;
      }
      while (v10);
    }
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

BOOL sub_100077D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        long long v6 = v3[9];
        v20[8] = v3[8];
        void v20[9] = v6;
        v20[10] = v3[10];
        long long v7 = v3[5];
        _OWORD v20[4] = v3[4];
        v20[5] = v7;
        long long v8 = v3[7];
        v20[6] = v3[6];
        v20[7] = v8;
        long long v9 = v3[1];
        v20[0] = *v3;
        v20[1] = v9;
        long long v10 = v3[3];
        void v20[2] = v3[2];
        v20[3] = v10;
        long long v11 = v4[9];
        v21[8] = v4[8];
        void v21[9] = v11;
        v21[10] = v4[10];
        long long v12 = v4[5];
        v21[4] = v4[4];
        v21[5] = v12;
        long long v13 = v4[7];
        v21[6] = v4[6];
        v21[7] = v13;
        long long v14 = v4[1];
        v21[0] = *v4;
        v21[1] = v14;
        long long v15 = v4[3];
        void v21[2] = v4[2];
        v21[3] = v15;
        sub_100007780((uint64_t)v20);
        sub_100007780((uint64_t)v21);
        BOOL v16 = sub_100029F48((uint64_t)v20, (uint64_t)v21);
        sub_100007820((uint64_t)v21);
        sub_100007820((uint64_t)v20);
        BOOL v18 = v5-- != 0;
        if (!v16) {
          break;
        }
        v3 += 11;
        v4 += 11;
      }
      while (v18);
    }
  }
  else
  {
    return 0;
  }
  return v16;
}

uint64_t sub_100077E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = v2 - 1;
  uint64_t v4 = a2 + 40;
  uint64_t v5 = a1 + 40;
  while (2)
  {
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)v5;
    uint64_t v8 = *(void *)(v5 + 16);
    uint64_t v9 = *(void *)(v4 - 8);
    unint64_t v10 = *(void *)v4;
    int v36 = *(_DWORD *)(v4 + 8);
    int v37 = *(_DWORD *)(v5 + 8);
    uint64_t v38 = *(void *)(v4 + 16);
    uint64_t v34 = *(void *)(v4 + 24);
    uint64_t v35 = *(void *)(v5 + 24);
    uint64_t v11 = *(void *)v5 >> 62;
    uint64_t v32 = *(void *)(v4 + 32);
    uint64_t v33 = *(void *)(v5 + 32);
    uint64_t v12 = 0;
    switch(v11)
    {
      case 1:
        if (__OFSUB__(HIDWORD(v6), v6))
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
        }
        uint64_t v12 = HIDWORD(v6) - (int)v6;
LABEL_10:
        sub_100008D24(v6, v7);
        sub_100008D24(v6, v7);
        break;
      case 2:
        uint64_t v14 = *(void *)(v6 + 16);
        uint64_t v13 = *(void *)(v6 + 24);
        uint64_t v12 = v13 - v14;
        if (!__OFSUB__(v13, v14)) {
          goto LABEL_10;
        }
        goto LABEL_50;
      case 3:
        break;
      default:
        uint64_t v12 = BYTE6(v7);
        break;
    }
    switch(v10 >> 62)
    {
      case 1uLL:
        LODWORD(v15) = HIDWORD(v9) - v9;
        if (__OFSUB__(HIDWORD(v9), v9)) {
          goto LABEL_51;
        }
        uint64_t v15 = (int)v15;
LABEL_16:
        if (v12 == v15)
        {
          if (v12 < 1)
          {
LABEL_21:
            sub_100008D24(v6, v7);
            swift_bridgeObjectRetain();
            sub_100008D24(v9, v10);
            uint64_t v19 = v38;
            swift_bridgeObjectRetain();
            sub_1000094D4(v6, v7);
            sub_1000094D4(v6, v7);
          }
          else
          {
            uint64_t v19 = v38;
            switch((int)v11)
            {
              case 1:
                uint64_t v31 = v8;
                if (v6 >> 32 < (int)v6) {
                  goto LABEL_53;
                }
                sub_100008D24(v6, v7);
                sub_100008D24(v6, v7);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                uint64_t v20 = sub_1005E0550();
                if (!v20) {
                  goto LABEL_26;
                }
                uint64_t v21 = sub_1005E0580();
                if (__OFSUB__((int)v6, v21)) {
                  goto LABEL_55;
                }
                v20 += (int)v6 - v21;
LABEL_26:
                sub_1005E0570();
                sub_1000260B8(v20, v9, v10, (BOOL *)__s1);
                sub_1000094D4(v6, v7);
                break;
              case 2:
                uint64_t v22 = v8;
                uint64_t v23 = *(void *)(v6 + 16);
                uint64_t v30 = *(void *)(v6 + 24);
                sub_100008D24(v6, v7);
                uint64_t v31 = v22;
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_retain();
                swift_retain();
                uint64_t v24 = sub_1005E0550();
                if (!v24) {
                  goto LABEL_30;
                }
                uint64_t v25 = sub_1005E0580();
                if (__OFSUB__(v23, v25)) {
                  goto LABEL_56;
                }
                v24 += v23 - v25;
LABEL_30:
                if (__OFSUB__(v30, v23)) {
                  goto LABEL_54;
                }
                sub_1005E0570();
                sub_1000260B8(v24, v9, v10, (BOOL *)__s1);
                swift_release();
                swift_release();
                break;
              case 3:
                memset(__s1, 0, 14);
                sub_100008D24(v6, v7);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                goto LABEL_35;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v7;
                BYTE2(__s1[1]) = BYTE2(v7);
                BYTE3(__s1[1]) = BYTE3(v7);
                BYTE4(__s1[1]) = BYTE4(v7);
                BYTE5(__s1[1]) = BYTE5(v7);
                sub_100008D24(v6, v7);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
LABEL_35:
                sub_1000260B8((uint64_t)__s1, v9, v10, &v39);
                sub_1000094D4(v6, v7);
                sub_1000094D4(v9, v10);
                sub_1000094D4(v6, v7);
                if (v39) {
                  goto LABEL_36;
                }
                goto LABEL_46;
            }
            sub_1000094D4(v6, v7);
            sub_1000094D4(v9, v10);
            sub_1000094D4(v6, v7);
            uint64_t v8 = v31;
            uint64_t v19 = v38;
            if (LOBYTE(__s1[0]) != 1) {
              goto LABEL_46;
            }
          }
LABEL_36:
          if (v37 != v36 || v35 != v34) {
            goto LABEL_46;
          }
          BOOL v26 = sub_1000255D4(v8, v19);
          sub_1000094D4(v9, v10);
          swift_bridgeObjectRelease();
          sub_1000094D4(v6, v7);
          swift_bridgeObjectRelease();
          uint64_t result = v26 & (v33 == v32);
          BOOL v29 = v3-- != 0;
          if (result != 1) {
            return result;
          }
          v4 += 48;
          v5 += 48;
          if (!v29) {
            return result;
          }
          continue;
        }
LABEL_45:
        sub_100008D24(v6, v7);
        swift_bridgeObjectRetain();
        sub_100008D24(v9, v10);
        swift_bridgeObjectRetain();
        sub_1000094D4(v6, v7);
        sub_1000094D4(v6, v7);
LABEL_46:
        sub_1000094D4(v9, v10);
        swift_bridgeObjectRelease();
        sub_1000094D4(v6, v7);
        swift_bridgeObjectRelease();
        return 0;
      case 2uLL:
        uint64_t v17 = *(void *)(v9 + 16);
        uint64_t v16 = *(void *)(v9 + 24);
        BOOL v18 = __OFSUB__(v16, v17);
        uint64_t v15 = v16 - v17;
        if (!v18) {
          goto LABEL_16;
        }
        goto LABEL_52;
      case 3uLL:
        if (!v12) {
          goto LABEL_21;
        }
        goto LABEL_45;
      default:
        uint64_t v15 = BYTE6(v10);
        goto LABEL_16;
    }
  }
}

uint64_t sub_100078494(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v30 = a2;
  uint64_t v29 = a1;
  while (2)
  {
    uint64_t v4 = a1 + v3;
    uint64_t v5 = a2 + v3;
    if (*(_DWORD *)(a1 + v3 + 32) != *(_DWORD *)(a2 + v3 + 32)) {
      return 0;
    }
    uint64_t v6 = *(void *)(v4 + 40);
    unint64_t v7 = *(void *)(v4 + 48);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v9 = *(void *)(v5 + 40);
    unint64_t v10 = *(void *)(v5 + 48);
    uint64_t v11 = *(void *)(v5 + 56);
    int v31 = *(unsigned __int8 *)(v5 + 64);
    int v32 = *(unsigned __int8 *)(v4 + 64);
    uint64_t v12 = 0;
    switch(v7 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v6), v6))
        {
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
        }
        uint64_t v12 = HIDWORD(v6) - (int)v6;
LABEL_11:
        sub_100008D24(v6, v7);
        sub_100008D24(v6, v7);
        break;
      case 2uLL:
        uint64_t v14 = *(void *)(v6 + 16);
        uint64_t v13 = *(void *)(v6 + 24);
        uint64_t v12 = v13 - v14;
        if (!__OFSUB__(v13, v14)) {
          goto LABEL_11;
        }
        goto LABEL_46;
      case 3uLL:
        break;
      default:
        uint64_t v12 = BYTE6(v7);
        break;
    }
    switch(v10 >> 62)
    {
      case 1uLL:
        LODWORD(v15) = HIDWORD(v9) - v9;
        if (__OFSUB__(HIDWORD(v9), v9)) {
          goto LABEL_47;
        }
        uint64_t v15 = (int)v15;
LABEL_17:
        if (v12 == v15)
        {
          if (v12 < 1)
          {
LABEL_22:
            sub_100008D24(v6, v7);
            swift_bridgeObjectRetain();
            sub_100008D24(v9, v10);
            swift_bridgeObjectRetain();
            sub_1000094D4(v6, v7);
            sub_1000094D4(v6, v7);
          }
          else
          {
            switch(v7 >> 62)
            {
              case 1uLL:
                uint64_t v28 = v8;
                if (v6 >> 32 < (int)v6) {
                  goto LABEL_49;
                }
                sub_100008D24(v6, v7);
                sub_100008D24(v6, v7);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                uint64_t v19 = sub_1005E0550();
                if (!v19) {
                  goto LABEL_27;
                }
                uint64_t v20 = sub_1005E0580();
                if (__OFSUB__((int)v6, v20)) {
                  goto LABEL_52;
                }
                v19 += (int)v6 - v20;
LABEL_27:
                sub_1005E0570();
                sub_1000260B8(v19, v9, v10, (BOOL *)__s1);
                sub_1000094D4(v6, v7);
                break;
              case 2uLL:
                uint64_t v21 = v8;
                uint64_t v22 = *(void *)(v6 + 16);
                uint64_t v27 = *(void *)(v6 + 24);
                sub_100008D24(v6, v7);
                uint64_t v28 = v21;
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_retain();
                swift_retain();
                uint64_t v23 = sub_1005E0550();
                if (!v23) {
                  goto LABEL_31;
                }
                uint64_t v24 = sub_1005E0580();
                if (__OFSUB__(v22, v24)) {
                  goto LABEL_51;
                }
                v23 += v22 - v24;
LABEL_31:
                if (__OFSUB__(v27, v22)) {
                  goto LABEL_50;
                }
                sub_1005E0570();
                sub_1000260B8(v23, v9, v10, (BOOL *)__s1);
                swift_release();
                swift_release();
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                sub_100008D24(v6, v7);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                goto LABEL_36;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v7;
                BYTE2(__s1[1]) = BYTE2(v7);
                BYTE3(__s1[1]) = BYTE3(v7);
                BYTE4(__s1[1]) = BYTE4(v7);
                BYTE5(__s1[1]) = BYTE5(v7);
                sub_100008D24(v6, v7);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v9, v10);
LABEL_36:
                sub_1000260B8((uint64_t)__s1, v9, v10, &v33);
                sub_1000094D4(v6, v7);
                sub_1000094D4(v9, v10);
                sub_1000094D4(v6, v7);
                if (v33) {
                  goto LABEL_37;
                }
                goto LABEL_42;
            }
            sub_1000094D4(v6, v7);
            sub_1000094D4(v9, v10);
            sub_1000094D4(v6, v7);
            uint64_t v8 = v28;
            if ((__s1[0] & 1) == 0) {
              goto LABEL_42;
            }
          }
LABEL_37:
          char v25 = static DownloadRequest.Kind.__derived_enum_equals(_:_:)(v8, v11);
          sub_1000094D4(v9, v10);
          swift_bridgeObjectRelease();
          sub_1000094D4(v6, v7);
          if ((v25 & 1) == 0) {
            goto LABEL_43;
          }
          swift_bridgeObjectRelease();
          if (v32 != v31) {
            return 0;
          }
          v3 += 40;
          --v2;
          a1 = v29;
          a2 = v30;
          if (!v2) {
            return 1;
          }
          continue;
        }
LABEL_41:
        sub_100008D24(v6, v7);
        swift_bridgeObjectRetain();
        sub_100008D24(v9, v10);
        swift_bridgeObjectRetain();
        sub_1000094D4(v6, v7);
        sub_1000094D4(v6, v7);
LABEL_42:
        sub_1000094D4(v9, v10);
        swift_bridgeObjectRelease();
        sub_1000094D4(v6, v7);
LABEL_43:
        swift_bridgeObjectRelease();
        return 0;
      case 2uLL:
        uint64_t v17 = *(void *)(v9 + 16);
        uint64_t v16 = *(void *)(v9 + 24);
        BOOL v18 = __OFSUB__(v16, v17);
        uint64_t v15 = v16 - v17;
        if (!v18) {
          goto LABEL_17;
        }
        goto LABEL_48;
      case 3uLL:
        if (!v12) {
          goto LABEL_22;
        }
        goto LABEL_41;
      default:
        uint64_t v15 = BYTE6(v10);
        goto LABEL_17;
    }
  }
}

uint64_t sub_100078AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v78 = a2;
  uint64_t v79 = a1;
  uint64_t v74 = sub_10000566C(&qword_100709E38);
  uint64_t v77 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v67 = (uint64_t)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v70 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10000566C(&qword_10070B2A8);
  __chkstk_darwin(v75);
  uint64_t v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  __chkstk_darwin(MessagesVMa);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s19UserInitiatedSearchV5StateOMa(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v59 - v14;
  uint64_t v16 = sub_10000566C(&qword_10070B2B0);
  __chkstk_darwin(v16);
  BOOL v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = _s19UserInitiatedSearchVMa(0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (_DWORD *)((char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __chkstk_darwin(v20);
  BOOL v26 = (_DWORD *)((char *)&v59 - v25);
  uint64_t v27 = *(void *)(v79 + 16);
  if (v27 != *(void *)(v78 + 16)) {
    return 0;
  }
  uint64_t v64 = v23;
  uint64_t v65 = v16;
  Swift::String v62 = v15;
  uint64_t v72 = v9;
  uint64_t v73 = v10;
  Swift::String v66 = v13;
  uint64_t v71 = MessagesVMa;
  if (!v27 || v79 == v78) {
    return 1;
  }
  unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v63 = *(void *)(v24 + 72);
  Swift::String v59 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
  Swift::String v60 = v6;
  uint64_t v29 = v65;
  uint64_t v30 = (uint64_t)v66;
  uint64_t v31 = v75;
  uint64_t v32 = (uint64_t)v6;
  uint64_t v33 = v64;
  Swift::String v61 = v18;
  Swift::String v68 = (_DWORD *)((char *)&v59 - v25);
  Swift::String v69 = v22;
  while (1)
  {
    uint64_t v77 = v27;
    sub_10007C5FC(v79 + v28, (uint64_t)v26, _s19UserInitiatedSearchVMa);
    unint64_t v76 = v28;
    sub_10007C5FC(v78 + v28, (uint64_t)v22, _s19UserInitiatedSearchVMa);
    if (*v26 != *v22) {
      goto LABEL_31;
    }
    uint64_t v34 = *(int *)(v33 + 20);
    uint64_t v35 = (uint64_t)v22 + v34;
    uint64_t v36 = (uint64_t)&v18[*(int *)(v29 + 48)];
    sub_10007C5FC((uint64_t)v26 + v34, (uint64_t)v18, _s19UserInitiatedSearchV5StateOMa);
    sub_10007C5FC(v35, v36, _s19UserInitiatedSearchV5StateOMa);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_10007C5FC((uint64_t)v18, v30, _s19UserInitiatedSearchV5StateOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v38 = (uint64_t)v72;
    if (EnumCaseMultiPayload != 1)
    {
      sub_10007C664(v30, _s19UserInitiatedSearchV13FetchMessagesVMa);
LABEL_25:
      BOOL v26 = v68;
      uint64_t v22 = v69;
      sub_100007A48((uint64_t)v18, &qword_10070B2B0);
      goto LABEL_31;
    }
    sub_10007C594(v36, (uint64_t)v72, _s19UserInitiatedSearchV13FetchMessagesVMa);
    sub_10001FC6C();
    if ((sub_1005E35A0() & 1) == 0 || (sub_1005E35A0() & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t v39 = *(int *)(v71 + 24);
    uint64_t v40 = v38 + v39;
    uint64_t v41 = v32 + *(int *)(v31 + 48);
    sub_10007BAA4(v30 + v39, v32);
    sub_10007BAA4(v40, v41);
    unint64_t v42 = *v59;
    if ((*v59)(v32, 1, v74) == 1)
    {
      if (v42(v41, 1, v74) != 1) {
        goto LABEL_28;
      }
      sub_100007A48(v32, &qword_10070A2D0);
      uint64_t v38 = (uint64_t)v72;
    }
    else
    {
      sub_10007BAA4(v32, v70);
      if (v42(v41, 1, v74) == 1)
      {
        sub_100007A48(v70, &qword_100709E38);
LABEL_28:
        sub_100007A48(v32, &qword_10070B2A8);
        uint64_t v38 = (uint64_t)v72;
LABEL_29:
        sub_10007C664(v38, _s19UserInitiatedSearchV13FetchMessagesVMa);
        sub_10007C664(v30, _s19UserInitiatedSearchV13FetchMessagesVMa);
        goto LABEL_30;
      }
      uint64_t v54 = v41;
      uint64_t v55 = v67;
      sub_10006B1BC(v54, v67);
      uint64_t v56 = v70;
      char v57 = sub_1005E35A0();
      sub_100007A48(v55, &qword_100709E38);
      sub_100007A48(v56, &qword_100709E38);
      sub_100007A48(v32, &qword_10070A2D0);
      uint64_t v38 = (uint64_t)v72;
      if ((v57 & 1) == 0) {
        goto LABEL_29;
      }
    }
    sub_10007C664(v38, _s19UserInitiatedSearchV13FetchMessagesVMa);
    sub_10007C664(v30, _s19UserInitiatedSearchV13FetchMessagesVMa);
LABEL_6:
    sub_10007C664((uint64_t)v18, _s19UserInitiatedSearchV5StateOMa);
    uint64_t v22 = v69;
    sub_10007C664((uint64_t)v69, _s19UserInitiatedSearchVMa);
    BOOL v26 = v68;
    sub_10007C664((uint64_t)v68, _s19UserInitiatedSearchVMa);
    unint64_t v28 = v76 + v63;
    uint64_t v27 = v77 - 1;
    if (v77 == 1) {
      return 1;
    }
  }
  uint64_t v43 = (uint64_t)v62;
  sub_10007C5FC((uint64_t)v18, (uint64_t)v62, _s19UserInitiatedSearchV5StateOMa);
  unint64_t v45 = *(void *)v43;
  unint64_t v44 = *(int32x2_t **)(v43 + 8);
  uint64_t v46 = *(void *)(v43 + 16);
  char v47 = *(unsigned char *)(v43 + 24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10000952C(v45);
    swift_bridgeObjectRelease();
    BOOL v18 = v61;
    goto LABEL_25;
  }
  unint64_t v49 = *(void *)v36;
  Swift::String v48 = *(int32x2_t **)(v36 + 8);
  uint64_t v50 = *(void *)(v36 + 16);
  char v51 = *(unsigned char *)(v36 + 24);
  static SearchKey.__derived_enum_equals(_:_:)(v45, v49);
  if (v52)
  {
    char v53 = static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)(v44, v46, v47, v48, v50, v51);
    sub_10000952C(v49);
    swift_bridgeObjectRelease();
    sub_10000952C(v45);
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t)v60;
    BOOL v18 = v61;
    uint64_t v31 = v75;
    uint64_t v29 = v65;
    uint64_t v30 = (uint64_t)v66;
    uint64_t v33 = v64;
    if ((v53 & 1) == 0) {
      goto LABEL_30;
    }
    goto LABEL_6;
  }
  sub_10000952C(v49);
  swift_bridgeObjectRelease();
  sub_10000952C(v45);
  swift_bridgeObjectRelease();
  BOOL v18 = v61;
LABEL_30:
  sub_10007C664((uint64_t)v18, _s19UserInitiatedSearchV5StateOMa);
  BOOL v26 = v68;
  uint64_t v22 = v69;
LABEL_31:
  sub_10007C664((uint64_t)v22, _s19UserInitiatedSearchVMa);
  sub_10007C664((uint64_t)v26, _s19UserInitiatedSearchVMa);
  return 0;
}

uint64_t sub_100079308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  Swift::String v48 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10070B2A8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t SearchResult = type metadata accessor for FetchSearchResultMessages.Requests.Search(0);
  uint64_t v14 = __chkstk_darwin(SearchResult);
  uint64_t v16 = (_DWORD *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v20 = (_DWORD *)((char *)&v39 - v19);
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21 == *(void *)(a2 + 16))
  {
    uint64_t v41 = v10;
    if (!v21 || a1 == a2) {
      return 1;
    }
    uint64_t v46 = v4;
    uint64_t v47 = v17;
    uint64_t v39 = v6;
    uint64_t v40 = v9;
    unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v42 = *(void *)(v18 + 72);
    uint64_t v43 = a2;
    v48 += 6;
    uint64_t v23 = v41;
    uint64_t v44 = a1;
    unint64_t v45 = v16;
    while (1)
    {
      sub_10007C5FC(a1 + v22, (uint64_t)v20, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      sub_10007C5FC(a2 + v22, (uint64_t)v16, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      if (*v20 != *v16) {
        break;
      }
      uint64_t v24 = *(int *)(v47 + 20);
      uint64_t v25 = (char *)v20 + v24;
      BOOL v26 = (char *)v16 + v24;
      sub_10001FC6C();
      if ((sub_1005E35A0() & 1) == 0) {
        break;
      }
      uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
      if ((sub_1005E35A0() & 1) == 0) {
        break;
      }
      uint64_t v28 = *(int *)(MessagesVMa + 24);
      uint64_t v29 = (uint64_t)&v25[v28];
      uint64_t v30 = (uint64_t)&v26[v28];
      uint64_t v31 = (uint64_t)&v12[*(int *)(v23 + 48)];
      sub_10007BAA4(v29, (uint64_t)v12);
      sub_10007BAA4(v30, v31);
      uint64_t v32 = *v48;
      uint64_t v33 = v46;
      if ((*v48)(v12, 1, v46) == 1)
      {
        if (v32((char *)v31, 1, v33) != 1) {
          goto LABEL_17;
        }
        sub_100007A48((uint64_t)v12, &qword_10070A2D0);
        uint64_t v16 = v45;
      }
      else
      {
        uint64_t v34 = (uint64_t)v40;
        sub_10007BAA4((uint64_t)v12, (uint64_t)v40);
        if (v32((char *)v31, 1, v33) == 1)
        {
          sub_100007A48(v34, &qword_100709E38);
LABEL_17:
          sub_100007A48((uint64_t)v12, &qword_10070B2A8);
          uint64_t v16 = v45;
          break;
        }
        uint64_t v35 = v31;
        uint64_t v36 = (uint64_t)v39;
        sub_10006B1BC(v35, (uint64_t)v39);
        char v37 = sub_1005E35A0();
        sub_100007A48(v36, &qword_100709E38);
        sub_100007A48(v34, &qword_100709E38);
        sub_100007A48((uint64_t)v12, &qword_10070A2D0);
        uint64_t v23 = v41;
        uint64_t v16 = v45;
        if ((v37 & 1) == 0) {
          break;
        }
      }
      sub_10007C664((uint64_t)v16, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      sub_10007C664((uint64_t)v20, type metadata accessor for FetchSearchResultMessages.Requests.Search);
      a2 = v43;
      v22 += v42;
      --v21;
      a1 = v44;
      if (!v21) {
        return 1;
      }
    }
    sub_10007C664((uint64_t)v16, type metadata accessor for FetchSearchResultMessages.Requests.Search);
    sub_10007C664((uint64_t)v20, type metadata accessor for FetchSearchResultMessages.Requests.Search);
  }
  return 0;
}

BOOL sub_1000797C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32)) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v4++;
    int v7 = v8;
    int v9 = *v3++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_100079830(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); *((_DWORD *)v3 - 6) == *((_DWORD *)i - 6); i += 4)
    {
      uint64_t v5 = *i;
      uint64_t v6 = *v3;
      uint64_t v7 = *(v3 - 2);
      if (*(i - 2) == 2)
      {
        if (v7 != 2) {
          return 0;
        }
      }
      else if (v7 == 2 {
             || (static FlagsUpdate.__derived_struct_equals(_:_:)(*(i - 2) & 0xFFFFFFFF01010101, *((unsigned char *)i - 8), *(v3 - 2) & 0xFFFFFFFF01010101, *((unsigned char *)v3 - 8)) & 1) == 0)
      }
      {
        return 0;
      }
      if (v5)
      {
        if (!v6) {
          return 0;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v8 = sub_100013754(v5, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      else if (v6)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

BOOL sub_10007995C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32)) {
    return 0;
  }
  BOOL result = 0;
  if (*(_DWORD *)(a2 + 36) == *(_DWORD *)(a1 + 36)
    && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0)
  {
    uint64_t v5 = (unsigned __int8 *)(a2 + 52);
    uint64_t v6 = (unsigned __int8 *)(a1 + 52);
    do
    {
      BOOL result = --v2 == 0;
      if (!v2) {
        break;
      }
      if (*((_DWORD *)v5 - 2) != *((_DWORD *)v6 - 2)) {
        break;
      }
      if (*((_DWORD *)v5 - 1) != *((_DWORD *)v6 - 1)) {
        break;
      }
      int v8 = *v5;
      v5 += 12;
      int v7 = v8;
      int v9 = *v6;
      v6 += 12;
    }
    while (((v9 ^ v7) & 1) == 0);
  }
  return result;
}

uint64_t sub_100079A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    for (uint64_t i = 0; ; i += 32)
    {
      uint64_t v6 = *(void *)(a1 + i + 56);
      uint64_t v7 = *(void *)(a2 + i + 56);
      uint64_t result = static ConnectionCommandIDSet.__derived_struct_equals(_:_:)(*(_DWORD *)(a1 + i + 32), *(void *)(a1 + i + 40), *(void *)(a1 + i + 48), *(_DWORD *)(a2 + i + 32), *(void *)(a2 + i + 40), *(void *)(a2 + i + 48));
      if ((result & 1) == 0) {
        break;
      }
      if ((v7 | v6) < 0)
      {
        __break(1u);
        return result;
      }
      if (v7 != v6) {
        return 0;
      }
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

int32x2_t sub_100079AB0(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2 = a1[2];
  if (*(void *)&v2 == *(void *)&a2[2]
    && *(void *)&v2
    && a1 != a2
    && a2[4].i32[0] == a1[4].i32[0]
    && a2[4].i32[1] == a1[4].i32[1])
  {
    uint64_t v4 = a1 + 5;
    uint64_t v5 = a2 + 5;
    uint64_t v6 = *(void *)&v2 - 1;
    do
    {
      if (!v6) {
        break;
      }
      int32x2_t v7 = *v5++;
      int32x2_t v8 = v7;
      int32x2_t v9 = *v4++;
      int32x2_t result = vceq_s32(v8, v9);
      --v6;
    }
    while ((result.i32[0] & result.i32[1] & 1) != 0);
  }
  return result;
}

int32x2_t sub_100079B2C(int32x2_t *a1, int32x2_t *a2)
{
  int32x2_t v2 = a1[2];
  if (*(void *)&v2 == *(void *)&a2[2]
    && *(void *)&v2
    && a1 != a2
    && a1[4].i32[0] == a2[4].i32[0]
    && a1[4].i32[1] == a2[4].i32[1])
  {
    uint64_t v4 = a1 + 5;
    uint64_t v5 = a2 + 5;
    uint64_t v6 = *(void *)&v2 - 1;
    do
    {
      if (!v6) {
        break;
      }
      int32x2_t v7 = *v4++;
      int32x2_t v8 = v7;
      int32x2_t v9 = *v5++;
      int32x2_t result = vceq_s32(v8, v9);
      --v6;
    }
    while ((result.i32[0] & result.i32[1] & 1) != 0);
  }
  return result;
}

uint64_t sub_100079BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TaskHistory.Running(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  int32x2_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_10007C5FC(a1 + v12, (uint64_t)v10, type metadata accessor for TaskHistory.Running);
        sub_10007C5FC(a2 + v12, (uint64_t)v7, type metadata accessor for TaskHistory.Running);
        char v15 = sub_1000F6870((uint64_t)v10, (uint64_t)v7);
        sub_10007C664((uint64_t)v7, type metadata accessor for TaskHistory.Running);
        sub_10007C664((uint64_t)v10, type metadata accessor for TaskHistory.Running);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100079D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10000566C(&qword_10070B300);
  __chkstk_darwin(v46);
  int32x2_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v44 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v19 = (char *)&v39 - v17;
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v20 || v48 == v47) {
    return 1;
  }
  uint64_t v40 = v18;
  uint64_t v41 = v14;
  uint64_t v45 = v15;
  unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v22 = *(void *)(v16 + 72);
  uint64_t v43 = (char *)&v39 - v17;
  uint64_t v39 = v22;
  while (1)
  {
    sub_10007C5FC(v48 + v21, (uint64_t)v19, type metadata accessor for TaskHistory.Previous);
    sub_10007C5FC(v47 + v21, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
    uint64_t v23 = (uint64_t)&v7[*(int *)(v46 + 48)];
    sub_10007C5FC((uint64_t)v19, (uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    sub_10007C5FC((uint64_t)v14, v23, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    uint64_t v24 = v44;
    sub_10007C5FC((uint64_t)v7, v44, type metadata accessor for TaskHistory.Previous);
    unint64_t v25 = *(void *)v24;
    int v26 = *(_DWORD *)(v24 + 8);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10007C4A4(v25);
      goto LABEL_19;
    }
    unint64_t v27 = *(void *)v23;
    int v28 = *(_DWORD *)(v23 + 8);
    char v29 = static Action.__derived_enum_equals(_:_:)(v25, *(void *)v23);
    sub_10007C4A4(v27);
    sub_10007C4A4(v25);
    if ((v29 & 1) == 0) {
      goto LABEL_16;
    }
    sub_10007C664((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    uint64_t v14 = v41;
    uint64_t v19 = v43;
    if (v26 != v28) {
      goto LABEL_20;
    }
LABEL_5:
    sub_10007C664((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
    sub_10007C664((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
    v21 += v22;
    if (!--v20) {
      return 1;
    }
  }
  uint64_t v30 = v20;
  uint64_t v31 = v40;
  sub_10007C5FC((uint64_t)v7, v40, type metadata accessor for TaskHistory.Previous);
  uint64_t v32 = *(int *)(sub_10000566C(&qword_10070B308) + 48);
  int v33 = *(_DWORD *)(v31 + v32);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    int v34 = *(_DWORD *)(v23 + v32);
    uint64_t v35 = v42;
    sub_10007C594(v23, v42, type metadata accessor for ClientCommand);
    char v36 = static ClientCommand.__derived_enum_equals(_:_:)(v31, v35);
    sub_10007C664(v35, type metadata accessor for ClientCommand);
    sub_10007C664(v31, type metadata accessor for ClientCommand);
    if ((v36 & 1) == 0)
    {
LABEL_16:
      sub_10007C664((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
      uint64_t v14 = v41;
      uint64_t v19 = v43;
      goto LABEL_20;
    }
    sub_10007C664((uint64_t)v7, type metadata accessor for TaskHistory.Previous);
    BOOL v37 = v33 == v34;
    uint64_t v14 = v41;
    uint64_t v19 = v43;
    uint64_t v20 = v30;
    uint64_t v22 = v39;
    if (!v37) {
      goto LABEL_20;
    }
    goto LABEL_5;
  }
  sub_10007C664(v31, type metadata accessor for ClientCommand);
  uint64_t v19 = v43;
LABEL_19:
  sub_100007A48((uint64_t)v7, &qword_10070B300);
LABEL_20:
  sub_10007C664((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
  sub_10007C664((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
  return 0;
}

uint64_t sub_10007A22C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 40;
    uint64_t v4 = a2 + 40;
    do
    {
      uint64_t v5 = sub_1005E1CD0();
      uint64_t v7 = v6;
      if (v5 == sub_1005E1CD0() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      v3 += 16;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_10007A310(uint64_t result)
{
  uint64_t v4 = *(void **)v1;
  if (*(unsigned char *)(v1 + 8)) {
    goto LABEL_8;
  }
  unint64_t v3 = v4[2];
  if (v3 > 0x294)
  {
    int32x2_t result = sub_10005A3F4(*(void *)v1, 0);
    uint64_t v4 = (void *)v3;
LABEL_8:
    uint64_t v5 = (void *)((char *)v4 + 1);
    if (!__OFADD__(v4, 1))
    {
      char v9 = 1;
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_12;
  }
  int v2 = result;
  swift_bridgeObjectRetain();
  uint64_t v5 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_12:
  }
    uint64_t v5 = sub_100016174(0, v3 + 1, 1, v4);
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  unint64_t v8 = v7 + 1;
  if (v7 >= v6 >> 1)
  {
    char v10 = sub_100016174((void *)(v6 > 1), v7 + 1, 1, v5);
    unint64_t v8 = v7 + 1;
    uint64_t v5 = v10;
  }
  uint64_t v5[2] = v8;
  *((_DWORD *)v5 + v7 + 8) = v2;
  int32x2_t result = sub_10005A3F4((uint64_t)v4, 0);
  char v9 = 0;
LABEL_10:
  *(void *)uint64_t v1 = v5;
  *(unsigned char *)(v1 + 8) = v9;
  return result;
}

void *sub_10007A410(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v8 = type metadata accessor for PendingServerResponses();
  __chkstk_darwin(v8 - 8);
  char v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  BOOL v37 = &_swiftEmptySetSingleton;
  uint64_t v11 = v3[3];
  uint64_t v12 = v3[4];
  sub_10003BCDC(v3, v11);
  unint64_t v13 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12) + 16);
  swift_bridgeObjectRelease();
  BOOL v15 = (a3 & 1) == 0 || v13 > 0x52;
  if (v13) {
    BOOL v16 = !v15;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16)
  {
    uint64_t v17 = *(void *)(v4 + 24);
    uint64_t v18 = *(void *)(v4 + 32);
    sub_10003BCDC((void *)v4, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    LOBYTE(v17) = sub_10010EE50(a1, a2, v19);
    swift_bridgeObjectRelease();
    if (v17)
    {
      uint64_t v20 = (char *)&v36 + 3;
      Swift::Int v21 = 5;
    }
    else
    {
      uint64_t v20 = (char *)&v36 + 4;
      Swift::Int v21 = 4;
    }
    sub_100019080(v20, v21);
  }
  uint64_t v22 = *(void *)(v4 + 24);
  uint64_t v23 = *(void *)(v4 + 32);
  sub_10003BCDC((void *)v4, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
  uint64_t v25 = *(void *)(v24 + 16);
  swift_release();
  swift_release();
  swift_release();
  sub_10007C5FC(v4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
  if (v25)
  {
    sub_10007C664((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
LABEL_17:
    sub_100019080((unsigned char *)&v36 + 7, 11);
    goto LABEL_18;
  }
  uint64_t v31 = v10[3];
  uint64_t v32 = v10[4];
  sub_10003BCDC(v10, v31);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 72))(v31, v32);
  LOBYTE(v31) = v34;
  sub_10007C664((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PendingServerResponses);
  if ((v31 & 1) == 0 || v33) {
    goto LABEL_17;
  }
LABEL_18:
  uint64_t v26 = *(void *)(v4 + 40);
  uint64_t v27 = v26;
  if ((*(unsigned char *)(v4 + 48) & 1) == 0) {
    uint64_t v27 = *(void *)(v26 + 16);
  }
  uint64_t v28 = 82;
  if ((a3 & 1) == 0) {
    uint64_t v28 = 0;
  }
  if (v27 > v28)
  {
    if (sub_10010EEB8(a1, a2, v26, *(unsigned char *)(v4 + 48)))
    {
      char v29 = (char *)&v36 + 5;
      Swift::Int v30 = 3;
    }
    else
    {
      char v29 = (char *)&v36 + 6;
      Swift::Int v30 = 2;
    }
    sub_100019080(v29, v30);
  }
  return v37;
}

IMAP2Persistence::CredentialsRequestID __swiftcall CredentialsRequestID.init()()
{
  return (IMAP2Persistence::CredentialsRequestID)1;
}

void PathAttribute.hash(into:)()
{
}

uint64_t sub_10007A710()
{
  return 12383;
}

void sub_10007A720(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10007A72C(uint64_t a1)
{
  unint64_t v2 = sub_10007C304();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007A768(uint64_t a1)
{
  unint64_t v2 = sub_10007C304();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007A7A4(void *a1)
{
  uint64_t v17 = sub_10000566C(&qword_10070B2C0);
  uint64_t v16 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  BOOL v15 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000566C(&qword_10070B2C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070B2D0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_10007C208();
  sub_1005E3500();
  sub_10007C1E8(v18, (uint64_t)&v23);
  char v11 = v26;
  if (v26 < 0)
  {
    v26 &= ~0x80u;
    long long v29 = v23;
    long long v30 = v24;
    long long v31 = v25;
    char v32 = v11 & 0x7F;
    LOBYTE(v19) = 1;
    sub_10007C25C();
    uint64_t v12 = v15;
    sub_1005E3120();
    long long v19 = v29;
    long long v20 = v30;
    long long v21 = v31;
    char v22 = v32;
    sub_10007C2B0();
    uint64_t v13 = v17;
    sub_1005E31C0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v13);
  }
  else
  {
    long long v27 = v23;
    long long v28 = v24;
    LOBYTE(v19) = 0;
    sub_10007C304();
    sub_1005E3120();
    long long v19 = v27;
    long long v20 = v28;
    sub_10007C358();
    sub_1005E31C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10007AB4C()
{
  if (*v0) {
    return 0x726F7453646E6F63;
  }
  else {
    return 0x6369736162;
  }
}

uint64_t sub_10007AB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007C3AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_10007ABB0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10007ABBC(uint64_t a1)
{
  unint64_t v2 = sub_10007C208();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007ABF8(uint64_t a1)
{
  unint64_t v2 = sub_10007C208();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int PathAttribute.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10007AC78()
{
  return sub_1005E3470();
}

uint64_t sub_10007ACB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1005E3290();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10007AD38(uint64_t a1)
{
  unint64_t v2 = sub_10007C25C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007AD74(uint64_t a1)
{
  unint64_t v2 = sub_10007C25C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007ADB0(void *a1)
{
  sub_10007C1E8(v1, (uint64_t)v4);
  return sub_10007A7A4(a1);
}

uint64_t sub_10007AE00(uint64_t result, char a2)
{
  if ((a2 & 1) == 0) {
    return *(void *)(result + 16);
  }
  return result;
}

BOOL sub_10007AE0C(uint64_t a1, uint64_t a2)
{
  return sub_10007B868(*(_DWORD *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)(a1 + 24), *(_DWORD *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), *(void *)(a2 + 24));
}

Swift::Int sub_10007AE38(uint64_t a1, char a2, uint64_t a3)
{
  sub_1005E33F0();
  if (a1 != 2)
  {
    sub_1005E3420(1u);
    FlagsUpdate.hash(into:)((uint64_t)v7, a1 & 0xFFFFFFFF01010101, a2);
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1005E3420(0);
    goto LABEL_6;
  }
  sub_1005E3420(0);
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1005E3420(1u);
  swift_bridgeObjectRetain();
  sub_10001B014((uint64_t)v7, a3);
LABEL_6:
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

Swift::Int sub_10007AF00()
{
  return sub_10007AE38(*(void *)v0, *(unsigned char *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_10007AF10(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  if (*v1 == 2)
  {
    sub_1005E3420(0);
    if (v4)
    {
LABEL_3:
      sub_1005E3420(1u);
      swift_bridgeObjectRetain();
      sub_10001B014(a1, v4);
      goto LABEL_6;
    }
  }
  else
  {
    char v5 = *((unsigned char *)v1 + 8);
    sub_1005E3420(1u);
    FlagsUpdate.hash(into:)(a1, v3 & 0xFFFFFFFF01010101, v5);
    if (v4) {
      goto LABEL_3;
    }
  }
  sub_1005E3420(0);
LABEL_6:
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10007AFD8()
{
  uint64_t v1 = *v0;
  char v2 = *((unsigned char *)v0 + 8);
  uint64_t v3 = v0[2];
  sub_1005E33F0();
  if (v1 != 2)
  {
    sub_1005E3420(1u);
    FlagsUpdate.hash(into:)((uint64_t)v5, v1 & 0xFFFFFFFF01010101, v2);
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1005E3420(0);
    goto LABEL_6;
  }
  sub_1005E3420(0);
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1005E3420(1u);
  swift_bridgeObjectRetain();
  sub_10001B014((uint64_t)v5, v3);
LABEL_6:
  swift_bridgeObjectRelease();
  return sub_1005E3470();
}

uint64_t sub_10007B09C(uint64_t a1, uint64_t a2)
{
  return sub_10007B944(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(unsigned char *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t *sub_10007B0BC(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  unsigned int v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned char *)result + 8) == 1)
  {
    BOOL v5 = v3 == 0;
    if (v3) {
      unsigned int v6 = *((unsigned __int8 *)a2 + 8);
    }
    else {
      unsigned int v6 = 0;
    }
    if (!v5) {
      unsigned int v4 = 0;
    }
    if (v2) {
      return (uint64_t *)v6;
    }
    else {
      return (uint64_t *)v4;
    }
  }
  else if (*((unsigned char *)a2 + 8))
  {
    return 0;
  }
  else if ((v3 | v2) < 0)
  {
    __break(1u);
  }
  else
  {
    return (uint64_t *)(v3 == v2);
  }
  return result;
}

uint64_t sub_10007B110(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v24 = *v1;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v3 = a1;
    uint64_t v23 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t result = v2;
    uint64_t v21 = v3;
    while (1)
    {
      if (v23 == v5)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      if (v5 >= *(void *)(result + 16)) {
        break;
      }
      uint64_t v7 = v3 + v4;
      int v8 = *(_DWORD *)(v3 + v4 + 32);
      uint64_t v9 = result + v4;
      if (*(_DWORD *)(result + v4 + 32) != v8) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v7 + 40);
      char v27 = *(unsigned char *)(v7 + 48);
      uint64_t v11 = *(void *)(v7 + 56);
      uint64_t v12 = *(void *)(v9 + 40);
      unsigned __int8 v13 = *(unsigned char *)(v9 + 48);
      uint64_t v14 = *(void *)(v9 + 56);
      if (v10 == 2)
      {
        if (v12 != 2) {
          goto LABEL_23;
        }
      }
      else if (v12 == 2 {
             || (static FlagsUpdate.__derived_struct_equals(_:_:)(v10 & 0xFFFFFFFF01010101, v27, v12 & 0xFFFFFFFF01010101, v13) & 1) == 0)
      }
      {
        goto LABEL_23;
      }
      unsigned __int8 v25 = v13;
      uint64_t v26 = v11;
      if (v11)
      {
        if (!v14) {
          goto LABEL_31;
        }
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        char v15 = sub_100013754(v11, v14);
        swift_bridgeObjectRelease();
        uint64_t v16 = v14;
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_24:
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v16 = v14;
        if (v14)
        {
LABEL_31:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10001A7D4(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      uint64_t result = v24;
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1)
      {
        sub_10001A7D4(v17 > 1, v18 + 1, 1);
        uint64_t result = v24;
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      long long v19 = &_swiftEmptyArrayStorage[8 * v18];
      *((_DWORD *)v19 + 8) = v8;
      ++v5;
      v19[5] = v10;
      *((unsigned char *)v19 + 48) = v27;
      v19[7] = v26;
      *((_DWORD *)v19 + 16) = v8;
      v19[9] = v12;
      *((unsigned char *)v19 + 80) = v25;
      v4 += 32;
      _OWORD v19[11] = v16;
      uint64_t v3 = v21;
      if (v22 == v5) {
        goto LABEL_23;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_25:
  unint64_t v20 = _swiftEmptyArrayStorage[2];
  uint64_t result = swift_release();
  if (v20)
  {
    if (*(void *)(v24 + 16) < v20)
    {
LABEL_33:
      __break(1u);
      return result;
    }
    return sub_1000D5C24(0, v20);
  }
  return result;
}

uint64_t sub_10007B400(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (v4 == v5) {
      return v6;
    }
    else {
      return 0;
    }
  }
  else
  {
    return (v6 & 1) == 0 && sub_1000797C4(v4, v5);
  }
}

uint64_t sub_10007B438(uint64_t result)
{
  if (result >= 1)
  {
    uint64_t v6 = *(void *)v2;
    if (*(unsigned char *)(v2 + 8))
    {
      uint64_t v7 = v6 - result;
      if (!__OFSUB__(v6, result))
      {
        BOOL v8 = v7 > 0;
        if (v7 <= 0) {
          uint64_t v9 = _swiftEmptyArrayStorage;
        }
        else {
          uint64_t v9 = (void *)(v6 - result);
        }
        goto LABEL_18;
      }
      __break(1u);
    }
    else
    {
      if (*(void *)(v6 + 16) < (unint64_t)result)
      {
        uint64_t result = sub_10005A3F4(*(void *)v2, 0);
        BOOL v8 = 0;
        uint64_t v9 = _swiftEmptyArrayStorage;
LABEL_18:
        *(void *)uint64_t v2 = v9;
        *(unsigned char *)(v2 + 8) = v8;
        return result;
      }
      uint64_t v1 = sub_100077A30(result, v6);
      uint64_t v3 = v10;
      uint64_t v4 = v11;
      unint64_t v5 = v12;
      if ((v12 & 1) == 0) {
        goto LABEL_10;
      }
      sub_1005E3300();
      swift_unknownObjectRetain_n();
      unsigned __int8 v13 = (void *)swift_dynamicCastClass();
      if (!v13)
      {
        swift_unknownObjectRelease();
        unsigned __int8 v13 = _swiftEmptyArrayStorage;
      }
      uint64_t v14 = v13[2];
      swift_release();
      if (!__OFSUB__(v5 >> 1, v4))
      {
        if (v14 == (v5 >> 1) - v4)
        {
          uint64_t v9 = (void *)swift_dynamicCastClass();
          if (!v9)
          {
            swift_unknownObjectRelease();
            uint64_t v9 = _swiftEmptyArrayStorage;
          }
          goto LABEL_17;
        }
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_22:
    swift_unknownObjectRelease();
LABEL_10:
    uint64_t v9 = sub_100038E24(v1, v3, v4, v5);
LABEL_17:
    uint64_t result = swift_unknownObjectRelease();
    BOOL v8 = 0;
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_10007B594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a2 + 40);
  int v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned char *)(a1 + 48))
  {
    if (v4 != v5) {
      int v6 = 0;
    }
    if (v6 != 1) {
      goto LABEL_18;
    }
  }
  else if ((v6 & 1) != 0 || !sub_1000797C4(v4, v5))
  {
    goto LABEL_18;
  }
  sub_100021C34(a1, (uint64_t)v23);
  sub_100021C34(a2, (uint64_t)v24);
  sub_10000566C(&qword_10070B298);
  if (!swift_dynamicCast())
  {
LABEL_12:
    if (swift_dynamicCast())
    {
      if (swift_dynamicCast())
      {
        char v7 = sub_100080E78(v16, v18, v19, v20, v21, v22, v9, v11, v12, v13, v14, v15);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    sub_100007A48((uint64_t)v23, &qword_10070B2A0);
LABEL_18:
    char v7 = 0;
    return v7 & 1;
  }
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_12;
  }
  char v7 = sub_10007E414(v17, v18, v19, v20, v21, v10, v11, v12, v13, v14);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
LABEL_15:
  swift_release();
  swift_release();
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v24);
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v23);
  return v7 & 1;
}

BOOL sub_10007B868(int a1, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6, unsigned __int8 a7, uint64_t a8)
{
  if (a5 != a1) {
    return 0;
  }
  if (a2 == 2)
  {
    if (a6 != 2) {
      return 0;
    }
  }
  else if (a6 == 2 {
         || (static FlagsUpdate.__derived_struct_equals(_:_:)(a2 & 0xFFFFFFFF01010101, a3, a6 & 0xFFFFFFFF01010101, a7) & 1) == 0)
  }
  {
    return 0;
  }
  if (a4)
  {
    if (!a8) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    char v12 = sub_100013754(v11, a8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v12 & 1) != 0;
  }
  if (!a8) {
    return 1;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10007B944(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  if (a1 == 2)
  {
    if (a4 != 2) {
      return 0;
    }
  }
  else if (a4 == 2 {
         || (static FlagsUpdate.__derived_struct_equals(_:_:)(a1 & 0xFFFFFFFF01010101, a2, a4 & 0xFFFFFFFF01010101, a5) & 1) == 0)
  }
  {
    return 0;
  }
  if (a3)
  {
    if (!a6) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_bridgeObjectRetain();
    char v9 = sub_100013754(v8, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  else if (a6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t sub_10007BA04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_100008D24(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10007BA54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_1000094D4(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10007BAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for PendingServerResponses.Change(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PendingServerResponses.Change()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for PendingServerResponses.Change(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PendingServerResponses.Change(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingServerResponses.Change(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingServerResponses.Change(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.Change()
{
  return &type metadata for PendingServerResponses.Change;
}

uint64_t sub_10007BCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 < 0) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for PendingServerResponses.CapturedValue(uint64_t a1)
{
  return sub_10007BD1C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t sub_10007BD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 < 0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PendingServerResponses.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_10007BCA4(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for PendingServerResponses.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_10007BCA4(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_10007BD1C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 _s18CondStoreResponsesVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PendingServerResponses.CapturedValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_10007BD1C(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingServerResponses.CapturedValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 48) & 0x7E | (*(unsigned __int8 *)(a1 + 48) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PendingServerResponses.CapturedValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(unsigned char *)(result + 48) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_10007BFB4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 7;
}

uint64_t sub_10007BFC0(uint64_t result)
{
  *(unsigned char *)(result + 48) &= ~0x80u;
  return result;
}

uint64_t sub_10007BFD0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for PendingServerResponses.CapturedValue()
{
  return &type metadata for PendingServerResponses.CapturedValue;
}

uint64_t initializeBufferWithCopyOfBuffer for PendingServerResponses.ExpungedMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10003C120(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}