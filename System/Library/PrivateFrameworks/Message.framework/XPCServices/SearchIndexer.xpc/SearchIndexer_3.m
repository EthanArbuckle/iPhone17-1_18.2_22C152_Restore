Swift::Int sub_100187034(uint64_t a1)
{
  Swift::UInt *v1;

  sub_1005E33F0();
  sub_1005E3410(*v1);
  sub_10000566C(&qword_100709E60);
  sub_10001FBA4();
  sub_1005E19C0();
  sub_1005E19C0();
  sub_1005E19C0();
  sub_1005E3420(*((unsigned char *)v1 + *(int *)(a1 + 32)));
  return sub_1005E3470();
}

void sub_100187100(uint64_t a1, uint64_t a2)
{
  sub_1005E3410(*v2);
  sub_10000566C(&qword_100709E60);
  sub_10001FBA4();
  sub_1005E19C0();
  sub_1005E19C0();
  sub_1005E19C0();
  sub_1005E3420(*((unsigned char *)v2 + *(int *)(a2 + 32)));
}

Swift::Int sub_1001871B4(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  sub_1005E3410(*v2);
  sub_10000566C(&qword_100709E60);
  sub_10001FBA4();
  sub_1005E19C0();
  sub_1005E19C0();
  sub_1005E19C0();
  sub_1005E3420(*((unsigned char *)v2 + *(int *)(a2 + 32)));
  return sub_1005E3470();
}

void *sub_100187280@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100187290(void *a1@<X8>)
{
  *a1 = *v1;
}

Swift::Int sub_10018729C()
{
  Swift::UInt v1 = *v0;
  sub_1005E33F0();
  sub_1005E3410(v1);
  return sub_1005E3470();
}

void sub_1001872E4()
{
  sub_1005E3410(*v0);
}

Swift::Int sub_100187310()
{
  Swift::UInt v1 = *v0;
  sub_1005E33F0();
  sub_1005E3410(v1);
  return sub_1005E3470();
}

int64_t sub_100187354@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v34 = a2;
  uint64_t v3 = sub_10000566C(&qword_10070A9C0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v32 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - v6;
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v8 - 8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1 + *(int *)(type metadata accessor for MessagesToRemoveHelper.Range() + 20);
  sub_1000079E4(v33, (uint64_t)v10, &qword_100709E30);
  sub_10001FDF0((uint64_t)v10, (uint64_t)v13, &qword_100709E38);
  MessageIdentifierSet.ranges.getter((uint64_t)v7);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v14 = sub_1005E35B0();
  uint64_t v15 = sub_1005E35E0();
  uint64_t v16 = sub_1005E35B0();
  int64_t result = sub_1005E35E0();
  if (v14 < v16 || result < v14)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v19 = sub_1005E35B0();
  int64_t result = sub_1005E35E0();
  if (v15 < v19 || result < v15) {
    goto LABEL_17;
  }
  BOOL v21 = __OFSUB__(v15, v14);
  uint64_t v22 = v15 - v14;
  if (v21)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_100007A48((uint64_t)v7, &qword_10070A9C0);
  if (v22 <= 1)
  {
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
LABEL_15:
    sub_1005E2E90();
    uint64_t v29 = v35;
    unint64_t v30 = v36;
    v31 = v34;
    int64_t result = sub_100007A48((uint64_t)v13, &qword_100709E38);
    void *v31 = v29;
    v31[1] = v30;
    return result;
  }
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_1000079E4(v33, (uint64_t)v10, &qword_100709E30);
  MessageIdentifierSet.count.getter();
  uint64_t v24 = v23;
  sub_100007A48((uint64_t)v10, &qword_100709E38);
  uint64_t v37 = v24;
  v38._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v38);
  swift_bridgeObjectRelease();
  v39._countAndFlagsBits = 544106784;
  v39._object = (void *)0xE400000000000000;
  sub_1005E1E30(v39);
  int64_t result = sub_1000702CC();
  if ((result & 0x100000000) != 0) {
    goto LABEL_19;
  }
  LODWORD(v37) = result;
  sub_1005E2E90();
  v40._countAndFlagsBits = 58;
  v40._object = (void *)0xE100000000000000;
  sub_1005E1E30(v40);
  uint64_t v25 = v32;
  MessageIdentifierSet.ranges.getter(v32);
  uint64_t v26 = sub_100070018();
  char v28 = v27;
  int64_t result = sub_100007A48(v25, &qword_10070A9C0);
  if ((v28 & 1) == 0)
  {
    LODWORD(v37) = HIDWORD(v26);
    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1001876F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E60);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a1 + *(int *)(type metadata accessor for MessagesToRemoveHelper.Range() + 32)) = 1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  return sub_1005E3670();
}

uint64_t sub_1001877F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000566C(&qword_100709E60);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MessagesToRemoveHelper.Range();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  return sub_1005E3670();
}

uint64_t sub_1001878DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (char *)(a1 + *(int *)(type metadata accessor for MailboxTaskLogger(0) + 20));
  char v4 = *v3;
  uint64_t v6 = *((void *)v3 + 1);
  uint64_t v5 = *((void *)v3 + 2);
  __int16 v7 = *((_WORD *)v3 + 12);
  uint64_t v8 = *((void *)v3 + 4);
  LODWORD(v3) = *((_DWORD *)v3 + 10);
  *(unsigned char *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v5;
  *(_WORD *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100187950(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x100000000) != 0 || a2 != -1)
  {
    sub_10000566C(&qword_100709FF8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6670;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    return sub_1000630DC(inited);
  }
  else
  {
    sub_10001FC6C();
    return sub_1005E3680();
  }
}

_DWORD **sub_100187A80(_DWORD **result)
{
  Swift::UInt v1 = *result;
  _DWORD *v1 = 2;
  *int64_t result = v1 + 1;
  return result;
}

uint64_t sub_100187A94(void *a1, void *a2)
{
  if (*a1 == *a2
    && (uint64_t v4 = type metadata accessor for MessagesToRemoveHelper.Range(), sub_10001FC6C(), (sub_1005E35A0() & 1) != 0)
    && (sub_1005E35A0() & 1) != 0
    && (sub_1005E35A0() & 1) != 0)
  {
    char v5 = *((unsigned char *)a1 + *(int *)(v4 + 32)) ^ *((unsigned char *)a2 + *(int *)(v4 + 32)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

void *sub_100187B7C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  Swift::String v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v37 = (char *)&v36 - v9;
  uint64_t v10 = type metadata accessor for MessageBatches(0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v36 - v14);
  uint64_t v16 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v16 - 8);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000566C(&qword_100709E30);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    sub_100189D6C(a1, (uint64_t)v13, type metadata accessor for MessageBatches);
    LOBYTE(v39) = 1;
    sub_10006705C(0x100000000);
    uint64_t v23 = 0;
  }
  else
  {
    unsigned int v24 = EngineAccountMailboxLoggerID.account.getter(a2);
    sub_100189D6C(a1, (uint64_t)v13, type metadata accessor for MessageBatches);
    LOBYTE(v39) = 0;
    sub_10006705C(v24);
    uint64_t v23 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)a2);
  }
  LOBYTE(v39) = a3 & 1;
  sub_100067184(v23 | ((unint64_t)(a3 & 1) << 32), v15);
  sub_100189DD4((uint64_t)v13, type metadata accessor for MessageBatches);
  uint64_t v25 = v15[1];
  swift_bridgeObjectRetain();
  sub_100189DD4((uint64_t)v15, type metadata accessor for MessageBatches);
  if (*(void *)(v25 + 16))
  {
    uint64_t v26 = *(void *)(v25 + 32);
    swift_bridgeObjectRelease();
    uint64_t v39 = v26;
    sub_100063E18();
    Range<>.init<A>(_:)((uint64_t)&v39, (uint64_t)&type metadata for UID);
    uint64_t v39 = v27;
    sub_10001FC6C();
    sub_1005E36A0();
    uint64_t v28 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, v28, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
  {
    sub_10001FDF0((uint64_t)v18, (uint64_t)v22, &qword_100709E30);
    sub_10000566C(&qword_10070A138);
    unint64_t v30 = (int *)(type metadata accessor for MessagesToRemoveHelper.Range() - 8);
    unint64_t v31 = (*(unsigned __int8 *)(*(void *)v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v30 + 80);
    uint64_t v29 = (void *)swift_allocObject();
    *((_OWORD *)v29 + 1) = xmmword_1005F6670;
    uint64_t v32 = (void *)((char *)v29 + v31);
    uint64_t v33 = (uint64_t)v37;
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v34 = (uint64_t)v38;
    sub_1000630DC((uint64_t)_swiftEmptyArrayStorage);
    *uint64_t v32 = 0;
    sub_1000079E4((uint64_t)v22, (uint64_t)v32 + v30[7], &qword_100709E30);
    sub_10001FDF0(v33, (uint64_t)v32 + v30[8], &qword_100709E38);
    sub_10001FDF0(v34, (uint64_t)v32 + v30[9], &qword_100709E38);
    *((unsigned char *)v32 + v30[10]) = 0;
    sub_100007A48((uint64_t)v22, &qword_100709E30);
    if (a3) {
      return v29;
    }
    goto LABEL_9;
  }
  sub_100007A48((uint64_t)v18, &qword_10070A000);
  uint64_t v29 = _swiftEmptyArrayStorage;
  if ((a3 & 1) == 0) {
LABEL_9:
  }
    EngineAccountMailboxLoggerID.account.getter(a2);
  return v29;
}

uint64_t type metadata accessor for MessagesToRemoveHelper.Range()
{
  uint64_t result = qword_10070E488;
  if (!qword_10070E488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1001880B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for MessageBatches(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = &v28[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13);
  v18 = &v28[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v28[-v19];
  uint64_t v21 = *(void *)(*(void *)(a1 + 8) + 16);
  sub_100189D6C(a1, (uint64_t)&v28[-v19], type metadata accessor for MessageBatches);
  if (!v21)
  {
    sub_1000079E4((uint64_t)&v20[*(int *)(v12 + 24)], (uint64_t)v11, &qword_10070A000);
    uint64_t v23 = sub_10000566C(&qword_100709E30);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v11, 1, v23) == 1)
    {
      sub_100189DD4((uint64_t)v20, type metadata accessor for MessageBatches);
      sub_100007A48((uint64_t)v11, &qword_10070A000);
    }
    else
    {
      sub_1000079E4((uint64_t)v11, (uint64_t)v8, &qword_100709E38);
      sub_100007A48((uint64_t)v11, &qword_100709E30);
      sub_10000566C(&qword_100709E60);
      char v26 = sub_1005E3630();
      sub_100007A48((uint64_t)v8, &qword_100709E38);
      sub_100189DD4((uint64_t)v20, type metadata accessor for MessageBatches);
      if ((v26 & 1) == 0) {
        goto LABEL_3;
      }
    }
    return _swiftEmptyArrayStorage;
  }
  sub_100189DD4((uint64_t)v20, type metadata accessor for MessageBatches);
LABEL_3:
  if (a3)
  {
    sub_100189D6C(a1, (uint64_t)v15, type metadata accessor for MessageBatches);
    char v29 = 1;
    sub_10006705C(0x100000000);
    uint64_t v22 = 0;
  }
  else
  {
    unsigned int v24 = EngineAccountMailboxLoggerID.account.getter(a2);
    sub_100189D6C(a1, (uint64_t)v15, type metadata accessor for MessageBatches);
    char v29 = 0;
    sub_10006705C(v24);
    uint64_t v22 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)a2);
  }
  v28[8] = a3 & 1;
  sub_100067184(v22 | ((unint64_t)(a3 & 1) << 32), v18);
  sub_100189DD4((uint64_t)v15, type metadata accessor for MessageBatches);
  uint64_t v25 = sub_100065C30();
  sub_100189DD4((uint64_t)v18, type metadata accessor for MessageBatches);
  return v25;
}

char *sub_100188454(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_10000566C(&qword_100709E60);
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[a3[6]], &a2[a3[6]], v10);
    v11(&v4[a3[7]], &a2[a3[7]], v10);
    v4[a3[8]] = a2[a3[8]];
  }
  return v4;
}

uint64_t sub_100188584(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  v8(a1 + a2[6], v5);
  uint64_t v6 = a1 + a2[7];
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v5);
}

char *sub_10018864C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_10018872C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_10018880C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_1001888EC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_1001889CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001889E0);
}

uint64_t sub_1001889E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
  }
  else
  {
    uint64_t v10 = sub_10000566C(&qword_100709E38);
    if (*(_DWORD *)(*(void *)(v10 - 8) + 84) != a2)
    {
      unsigned int v13 = *(unsigned __int8 *)(a1 + a3[8]);
      if (v13 >= 2) {
        return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  return v11(a1 + v9, a2, v7);
}

uint64_t sub_100188B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100188B1C);
}

uint64_t sub_100188B1C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_10000566C(&qword_100709E38);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(unsigned char *)(a1 + a4[8]) = a2 + 1;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v13(a1 + v11, a2, a2, v9);
}

void sub_100188C30()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper.ActionID()
{
  return &type metadata for MessagesToRemoveHelper.ActionID;
}

uint64_t assignWithCopy for MessagesToRemoveHelper(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper()
{
  return &type metadata for MessagesToRemoveHelper;
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper.CommandID()
{
  return &type metadata for MessagesToRemoveHelper.CommandID;
}

unint64_t sub_100188D64()
{
  unint64_t result = qword_10070E4D0;
  if (!qword_10070E4D0)
  {
    type metadata accessor for MessagesToRemoveHelper.Range();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E4D0);
  }
  return result;
}

uint64_t sub_100188DC4()
{
  return sub_100029D28(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_100188DCC()
{
  return sub_1000C6624(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100188DD4()
{
  return sub_100029D8C(*(void (**)(void *__return_ptr))(v0 + 16));
}

uint64_t sub_100188DDC()
{
  return sub_100029DE4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100188DE4()
{
  return sub_100029E0C(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_100188DEC()
{
  return sub_1000C65B4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100188DF4()
{
  return sub_100029E70(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_100188DFC()
{
  return sub_1000C65DC(*(void (**)(void))(v0 + 16));
}

void sub_100188E10(uint64_t a1@<X8>)
{
}

uint64_t sub_100188E7C()
{
  return sub_1001629F4(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100188E84()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_100188E94(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C66AC(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_100188E9C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188EAC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188EBC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188ECC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000C667C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100188ED4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C66C0(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_100188EDC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188EEC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188EFC()
{
  return sub_1000C6874(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100188F04(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1000C689C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_100188F0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188F1C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188F2C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188F3C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188F4C@<X0>(_WORD *a1@<X8>)
{
  return sub_1000C6844(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100188F54(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C6720(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_100188F5C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188F6C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188F7C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100188F8C@<X0>(void *a1@<X8>)
{
  return sub_1001D5948(*(void *)(v1 + 16), a1);
}

uint64_t sub_100188F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C6780(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100188F9C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188FAC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188FBC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188FCC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188FDC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000C664C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100188FE4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100188FF4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MailboxTaskLogger(0) - 8);
  return sub_1001878DC(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_10018906C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018907C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018908C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018909C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001890AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001890BC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001890CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001890DC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001890EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001890FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018910C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018911C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018912C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018913C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018914C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189160()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100189170()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100189180()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189190()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001891A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001891B0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001891C0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001891D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001891E0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001891F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189200()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189210()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189220()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189230()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189240()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100189250()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189260()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189270()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189280()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189290()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001892A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001892B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10018931C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100189330()
{
}

void sub_10018939C(uint64_t a1@<X8>)
{
}

uint64_t sub_100189404()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189414()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189424()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189434()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189444()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189454()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189464()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189474()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189484()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189494()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001894A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001894B4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001894C4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001894D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001894E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001894F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189504()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189514()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189524()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189534()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189544()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189558()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018956C()
{
  uint64_t v1 = (int *)(_s15MissingMessagesO10NewMissingVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[8], v7);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100189678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(_s15MissingMessagesO10NewMissingVMa(0) - 8);
  return sub_1000079E4(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, &qword_100709E38);
}

uint64_t sub_1001896E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001896F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189704()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189714()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189724()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189734()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189744()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189754()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189764()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189774()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189784()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189794()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001897A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001897B4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001897C4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001897D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001897E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001897F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189804()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_10018981C()
{
}

uint64_t sub_100189884()
{
  uint64_t v1 = *(void *)(sub_10000566C(&qword_100709E38) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100189964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_10000566C(&qword_100709E38) - 8);
  return sub_1000079E4(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, &qword_100709E38);
}

uint64_t sub_1001899DC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001899EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001899FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A1C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A2C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A3C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A4C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A5C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A6C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A7C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A8C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189A9C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100189AAC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189ABC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189ACC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189ADC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189AEC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189AFC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189B0C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100189B48()
{
  uint64_t v1 = *(void *)(type metadata accessor for MailboxTaskLogger(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100189C44()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t CommandConnection.RecentErrors.Statistics.networkErrorCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100189C5C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189C6C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189C7C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189C8C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189C9C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189CAC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189CBC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189CCC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189CDC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189CEC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189CFC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189D0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189D1C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100189D2C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189D3C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189D4C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189D5C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100189D6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100189DD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for MessagesToRemoveHelper.Index()
{
  return &type metadata for MessagesToRemoveHelper.Index;
}

unint64_t sub_100189E48()
{
  unint64_t result = qword_10070E4E0;
  if (!qword_10070E4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E4E0);
  }
  return result;
}

uint64_t sub_10018A138@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v5 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000566C(&qword_10070E6C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000079E4(v2, (uint64_t)v11, &qword_10070E6C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    uint64_t v12 = sub_10000566C(&qword_10070E6D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    sub_10019C0B4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    v16(v8);
    uint64_t result = sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    if (!v3)
    {
      uint64_t v14 = sub_10000566C(&qword_10070E6D0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
    }
  }
  return result;
}

uint64_t sub_10018A368(uint64_t (*a1)(int *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = 0;
  for (i = (void *)(a3 + 48); ; i += 3)
  {
    uint64_t v8 = *(i - 1);
    uint64_t v9 = *i;
    int v12 = *((_DWORD *)i - 4);
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v10 = a1(&v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3 || (v10 & 1) != 0) {
      break;
    }
    if (v4 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_10018A450@<X0>(long long *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  *(void *)(a3 + 96) = sub_10001DF10((uint64_t)&off_1006BA4C0);
  *(unsigned char *)(a3 + 104) = 0;
  *(void *)(a3 + 112) = 0;
  *(unsigned char *)(a3 + 120) = 0;
  *(void *)(a3 + 128) = sub_100196E1C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(a3 + 136) = v6;
  *(void *)(a3 + 144) = v7;
  *(void *)(a3 + 152) = v8;
  *(unsigned char *)(a3 + 160) = 0;
  *(void *)(a3 + 168) = _swiftEmptyArrayStorage;
  *(void *)(a3 + 176) = _swiftEmptyArrayStorage;
  *(void *)(a3 + 184) = &_swiftEmptySetSingleton;
  long long v10 = a1[1];
  long long v15 = *a1;
  long long v9 = v15;
  uint64_t v13 = *((void *)a1 + 3);
  int v14 = *((_DWORD *)a1 + 8);
  *(_DWORD *)(a3 + 40) = v14;
  *(_OWORD *)(a3 + 24) = v10;
  *(_OWORD *)(a3 + 8) = v9;
  *(void *)(a3 + 48) = &type metadata for MoveAndCopyMessages;
  swift_bridgeObjectRetain();
  sub_10002292C((uint64_t)&v13);
  sub_10002292C((uint64_t)&v15);
  sub_10003BC88();
  sub_1005E2BF0();
  *(unsigned char *)(a3 + 105) = v5;
  sub_10000566C(&qword_10070B898);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005F6670;
  *(void *)(v11 + 32) = type metadata accessor for NotifyMessagesVanished();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  sub_10001D550((uint64_t)&v15);
  uint64_t result = sub_10001D550((uint64_t)&v13);
  *(void *)a3 = v11;
  return result;
}

uint64_t sub_10018A5D4()
{
  return sub_1005E0E20();
}

void sub_10018A5EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MoveAndCopyMessages.CommandID();
  __chkstk_darwin(v7);
  long long v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019BFCC(v2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = *((unsigned int *)v9 + 2);
      uint64_t v13 = *((void *)v9 + 2);
      sub_1005E3410(2uLL);
      sub_1005E3410(v12 | (v12 << 32));
      sub_1000D3538(a1, v13);
      goto LABEL_6;
    case 2u:
      uint64_t v10 = *((unsigned int *)v9 + 2);
      uint64_t v11 = *((void *)v9 + 2);
      sub_1005E3410(3uLL);
      sub_1005E3410(v10 | (v10 << 32));
      sub_1000D3378(a1, v11);
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      sub_1005E3410(1uLL);
      break;
    default:
      sub_10001FDF0((uint64_t)v9, (uint64_t)v6, &qword_100709E38);
      sub_1005E3410(0);
      sub_10000566C(&qword_100709E60);
      sub_10001FBA4();
      sub_1005E19C0();
      sub_100007A48((uint64_t)v6, &qword_100709E38);
      break;
  }
}

Swift::Int sub_10018A7E0()
{
  sub_1005E33F0();
  sub_10018A5EC((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_10018A824()
{
  sub_1005E33F0();
  sub_10018A5EC((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_10018A864()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA498);
  qword_1007617A8 = result;
  return result;
}

uint64_t sub_10018A88C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_10019BFCC(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003BE58(v2, (uint64_t)v33);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v28 = v13;
    uint64_t v15 = v14;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v15 = 68159491;
    LODWORD(v30) = 2;
    os_log_t v26 = v11;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    uint64_t v29 = v7;
    uint64_t v17 = &v6[v16];
    LOBYTE(v30) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1000C6914(v19, v18, &v32);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v30) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v30) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v30 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v30 = *((void *)v17 + 4);
    int v31 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v30 = sub_1000C6914(v21, v22, &v32);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10019C054((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 1024;
    BOOL v23 = (v33[105] & 1) == 0;
    sub_10003BEB4((uint64_t)v33);
    LODWORD(v30) = v23;
    sub_1005E2960();
    os_log_t v24 = v26;
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v28, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Server supports move: %{BOOL}d", (uint8_t *)v15, 0x39u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v29);
  }
  else
  {
    sub_10003BEB4((uint64_t)v33);
    sub_10019C054((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_10018AD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v71 = a4;
  uint64_t v76 = a1;
  uint64_t v74 = a5;
  uint64_t v66 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v65 = *(void *)(v66 - 8);
  uint64_t v7 = __chkstk_darwin(v66);
  uint64_t v64 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v63 = (char *)&v62 - v9;
  uint64_t v10 = sub_10000566C(&qword_10070E6C0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v72 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v69 = (uint64_t)&v62 - v13;
  uint64_t v14 = sub_10000566C(&qword_10070E6C8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v70 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v67 = (char *)&v62 - v17;
  uint64_t v83 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v73 = *(void *)(v83 - 8);
  uint64_t v18 = __chkstk_darwin(v83);
  int v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v62 - v21;
  uint64_t v23 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v80 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  os_log_t v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  int v28 = (char *)&v62 - v27;
  uint64_t v29 = sub_100104D34(0, a3);
  uint64_t v30 = v29[2];
  if (!v30)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v53 = v74;
    uint64_t v54 = sub_10000566C(&qword_10070E6D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 1, 1, v54);
  }
  uint64_t v31 = 0;
  v78 = v29 + 4;
  uint64_t v79 = a2;
  uint64_t v82 = *(void *)(a2 + 16);
  v77 = v29;
  uint64_t v75 = v30;
  while (!v82)
  {
LABEL_5:
    if (++v31 == v30) {
      goto LABEL_22;
    }
  }
  uint64_t v81 = v31;
  int v32 = *((_DWORD *)v78 + v31);
  uint64_t v33 = v80;
  uint64_t v34 = a2 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v35 = *(void *)(v33 + 72);
  uint64_t v36 = v82;
  while (1)
  {
    sub_10019BFCC(v34, (uint64_t)v28, type metadata accessor for TaskHistory.Previous);
    sub_10019BFCC((uint64_t)v28, (uint64_t)v26, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_10019C054((uint64_t)v26, type metadata accessor for TaskHistory.Previous);
LABEL_9:
    sub_10019C054((uint64_t)v28, type metadata accessor for TaskHistory.Previous);
    v34 += v35;
    if (!--v36)
    {
      a2 = v79;
LABEL_4:
      uint64_t v30 = v75;
      uint64_t v31 = v81;
      swift_bridgeObjectRelease_n();
      goto LABEL_5;
    }
  }
  int v37 = *((_DWORD *)v26 + 2);
  sub_10007C4A4(*(void *)v26);
  if (v37 != v32) {
    goto LABEL_9;
  }
  sub_10019C054((uint64_t)v28, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  uint64_t v38 = *(void *)(v76 + 16);
  if (v38)
  {
    uint64_t v39 = v73;
    uint64_t v40 = v76 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v41 = *(void *)(v39 + 72);
    do
    {
      sub_10019BFCC(v40, (uint64_t)v22, type metadata accessor for TaskHistory.Running);
      sub_10019BFCC((uint64_t)v22, (uint64_t)v20, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v42 = *((_DWORD *)v20 + 1);
        sub_10007C4A4(*((void *)v20 + 1));
        if (v42 == v32)
        {
          sub_10019C054((uint64_t)v22, type metadata accessor for TaskHistory.Running);
          a2 = v79;
          goto LABEL_4;
        }
      }
      else
      {
        sub_10019C054((uint64_t)v20, type metadata accessor for TaskHistory.Running);
      }
      sub_10019C054((uint64_t)v22, type metadata accessor for TaskHistory.Running);
      v40 += v41;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = v74;
  uint64_t v45 = (uint64_t)v67;
  uint64_t v44 = v68;
  uint64_t v46 = v66;
  uint64_t v47 = v65;
  swift_bridgeObjectRelease();
  uint64_t v48 = v69;
  uint64_t v49 = sub_10018BDB4((void (*)(uint64_t, uint64_t))sub_10018B674, 0, v69);
  __chkstk_darwin(v49);
  *(&v62 - 2) = v71;
  sub_10018A138((void (*)(char *))sub_10019C034, v45);
  sub_100007A48(v48, &qword_10070E6C0);
  uint64_t v50 = v70;
  sub_1000079E4(v45, v70, &qword_10070E6C8);
  uint64_t v51 = sub_10000566C(&qword_10070E6D0);
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51) == 1)
  {
    sub_100007A48(v50, &qword_10070E6C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v72, 1, 1, v46);
    return sub_10001FDF0(v45, v43, &qword_10070E6C8);
  }
  uint64_t v56 = v50;
  uint64_t v57 = v50 + *(int *)(v51 + 48);
  uint64_t v58 = v72;
  sub_10019C0B4(v56, v72, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v58, 0, 1, v46);
  sub_10019C054(v57, type metadata accessor for ClientCommand);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v58, 1, v46) == 1) {
    return sub_10001FDF0(v45, v43, &qword_10070E6C8);
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_10001FDF0(v45, v43, &qword_10070E6C8);
    case 3u:
      if (*(unsigned char *)(v44 + 160)) {
        return sub_10001FDF0(v45, v43, &qword_10070E6C8);
      }
      uint64_t v59 = (uint64_t)v63;
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = v64;
      sub_10019BFCC(v59, v64, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v84 = *(void *)(v44 + 152);
      *(void *)(v44 + 152) = 0x8000000000000000;
      sub_1001038F4(1, v60, isUniquelyReferenced_nonNull_native);
      *(void *)(v44 + 152) = v84;
      swift_bridgeObjectRelease();
      sub_10019C054(v60, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10019C054(v59, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_100007A48(v45, &qword_10070E6C8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v43, 1, 1, v51);
      break;
    default:
      *(unsigned char *)(v44 + 160) = 1;
      sub_10019C054(v58, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      return sub_10001FDF0(v45, v43, &qword_10070E6C8);
  }
  return result;
}

uint64_t sub_10018B678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v59 = (char *)sub_10000566C(&qword_100709E38);
  uint64_t v5 = __chkstk_darwin(v59);
  uint64_t v58 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v57 = (uint64_t)&v57 - v7;
  uint64_t v8 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v57 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  int v20 = (char *)&v57 - v19;
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v57 - v21;
  uint64_t v23 = sub_10000566C(&qword_100709FE8);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  os_log_t v26 = (char *)&v57 + *(int *)(v24 + 56) - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  int v28 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019BFCC(v27, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t v29 = v8;
  sub_10019BFCC(a2, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10019BFCC((uint64_t)v28, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v30 = *(void *)v22;
      uint64_t v31 = *((unsigned int *)v22 + 2);
      uint64_t v32 = *((void *)v22 + 2);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_16;
      }
      uint64_t v59 = v26;
      sub_10019BFCC((uint64_t)v26, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if ((v31 | (v31 << 32)) != (*((unsigned int *)v20 + 2) | ((unint64_t)*((unsigned int *)v20 + 2) << 32))
        || !sub_1000255D4(v30, *(void *)v20))
      {
        goto LABEL_15;
      }
      uint64_t v33 = v29;
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v35 = sub_10008B0D4(v34);
      uint64_t v36 = swift_bridgeObjectRetain();
      char v37 = sub_1000D8B7C(v36, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v37)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = swift_bridgeObjectRetain();
        uint64_t v39 = sub_100192DF8(v38, v32, (uint64_t)sub_100196198, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_100194B00);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v40 = v60;
        *uint64_t v60 = v30;
        *((_DWORD *)v40 + 2) = v31;
        v40[2] = v39;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v61 + 56))(v40, 0, 1, v33);
        goto LABEL_23;
      }
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v60, 1, 1, v33);
      goto LABEL_22;
    case 2u:
      sub_10019BFCC((uint64_t)v28, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v41 = *(void *)v14;
      uint64_t v42 = *((unsigned int *)v14 + 2);
      uint64_t v43 = *((void *)v14 + 2);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_16;
      }
      uint64_t v59 = v26;
      sub_10019BFCC((uint64_t)v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if ((v42 | (v42 << 32)) == (*((unsigned int *)v11 + 2) | ((unint64_t)*((unsigned int *)v11 + 2) << 32))
        && sub_1000255D4(v41, *(void *)v11))
      {
        uint64_t v58 = v29;
        uint64_t v44 = swift_bridgeObjectRetain();
        uint64_t v45 = sub_10008B0D4(v44);
        uint64_t v46 = swift_bridgeObjectRetain();
        char v47 = sub_1000D8B7C(v46, v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = v60;
        if (v47)
        {
          swift_bridgeObjectRetain();
          uint64_t v49 = swift_bridgeObjectRetain();
          uint64_t v50 = sub_100192DF8(v49, v43, (uint64_t)sub_100196180, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_100194820);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *uint64_t v48 = v41;
          *((_DWORD *)v48 + 2) = v42;
          v48[2] = v50;
          uint64_t v51 = v58;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v61 + 56))(v48, 0, 1, v51);
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v60, 1, 1, v58);
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_23:
        sub_10019C054((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        return sub_10019C054((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      }
LABEL_15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 3u:
      goto LABEL_17;
    default:
      sub_10019BFCC((uint64_t)v28, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100007A48((uint64_t)v17, &qword_100709E38);
LABEL_17:
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v60, 1, 1, v29);
        return sub_100007A48((uint64_t)v28, &qword_100709FE8);
      }
      else
      {
        uint64_t v53 = (uint64_t)v17;
        uint64_t v54 = v57;
        sub_10001FDF0(v53, v57, &qword_100709E38);
        uint64_t v55 = v58;
        sub_10001FDF0((uint64_t)v26, v58, &qword_100709E38);
        uint64_t v56 = v60;
        MessageIdentifierSet.union(_:)();
        sub_100007A48(v55, &qword_100709E38);
        sub_100007A48(v54, &qword_100709E38);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v61 + 56))(v56, 0, 1, v8);
        return sub_10019C054((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      }
  }
}

uint64_t sub_10018BDB4@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v94 = a2;
  v97 = a1;
  uint64_t v89 = a3;
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v83 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v85 = (uint64_t)&v82 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v84 = (uint64_t)&v82 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v86 = (uint64_t)&v82 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v95 = (uint64_t)&v82 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v105 = (uint64_t)&v82 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  int v20 = (char *)&v82 - v19;
  __chkstk_darwin(v18);
  uint64_t v104 = (uint64_t)&v82 - v21;
  uint64_t v22 = sub_10000566C(&qword_10070E6C0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v88 = (uint64_t)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  v93 = (char *)&v82 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v96 = (uint64_t)&v82 - v28;
  __chkstk_darwin(v27);
  uint64_t v29 = *(void (**)(void))(v5 + 56);
  uint64_t v98 = (uint64_t)&v82 - v30;
  uint64_t v91 = v5 + 56;
  v90 = v29;
  v29();
  uint64_t v107 = v3;
  uint64_t v100 = v4;
  uint64_t v112 = v4;
  uint64_t v113 = sub_100198000((unint64_t *)&qword_10070B758);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_10019660C(v32, KeyPath);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v34 = sub_10009ADE4((uint64_t)v33);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v36 = 0;
  uint64_t v37 = *(void *)(v34 + 56);
  uint64_t v102 = v34 + 56;
  uint64_t v109 = v34;
  uint64_t v38 = -1;
  uint64_t v39 = -1 << *(unsigned char *)(v34 + 32);
  uint64_t v87 = ~v39;
  if (-v39 < 64) {
    uint64_t v38 = ~(-1 << -(char)v39);
  }
  unint64_t v40 = v38 & v37;
  int64_t v101 = (unint64_t)(63 - v39) >> 6;
  uint64_t v108 = v5;
  v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v92 = _swiftEmptyArrayStorage;
  do
  {
LABEL_4:
    int64_t v41 = v36;
    unint64_t v42 = v40;
    int64_t v106 = v36;
    if (v40)
    {
LABEL_5:
      uint64_t v43 = (v42 - 1) & v42;
      unint64_t v44 = __clz(__rbit64(v42)) | (v41 << 6);
      int64_t v45 = v41;
      goto LABEL_17;
    }
    while (1)
    {
      while (1)
      {
        int64_t v45 = v41 + 1;
        if (__OFADD__(v41, 1))
        {
          __break(1u);
LABEL_51:
          __break(1u);
          return result;
        }
        if (v45 >= v101) {
          goto LABEL_46;
        }
        unint64_t v46 = *(void *)(v102 + 8 * v45);
        if (!v46)
        {
          int64_t v47 = v41 + 2;
          if (v41 + 2 >= v101) {
            goto LABEL_46;
          }
          unint64_t v46 = *(void *)(v102 + 8 * v47);
          if (!v46)
          {
            int64_t v47 = v41 + 3;
            if (v41 + 3 >= v101) {
              goto LABEL_46;
            }
            unint64_t v46 = *(void *)(v102 + 8 * v47);
            if (!v46)
            {
              int64_t v47 = v41 + 4;
              if (v41 + 4 >= v101) {
                goto LABEL_46;
              }
              unint64_t v46 = *(void *)(v102 + 8 * v47);
              if (!v46)
              {
                while (1)
                {
                  int64_t v45 = v47 + 1;
                  if (__OFADD__(v47, 1)) {
                    goto LABEL_51;
                  }
                  if (v45 >= v101) {
                    goto LABEL_46;
                  }
                  unint64_t v46 = *(void *)(v102 + 8 * v45);
                  ++v47;
                  if (v46) {
                    goto LABEL_16;
                  }
                }
              }
            }
          }
          int64_t v45 = v47;
        }
LABEL_16:
        uint64_t v43 = (v46 - 1) & v46;
        unint64_t v44 = __clz(__rbit64(v46)) + (v45 << 6);
LABEL_17:
        uint64_t v48 = *(void *)(v109 + 48);
        uint64_t v103 = *(void *)(v108 + 72);
        uint64_t v49 = v104;
        sub_10019BFCC(v48 + v103 * v44, v104, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_10019C0B4(v49, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        uint64_t v51 = *(void *)(v107 + 16);
        uint64_t v50 = *(void *)(v107 + 24);
        if (!*(void *)(v50 + 16)) {
          break;
        }
        sub_1000244EC((uint64_t)v20);
        if ((v52 & 1) == 0) {
          break;
        }
        uint64_t v53 = v105;
        sub_10019BFCC((uint64_t)v20, v105, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_10019C054(v53, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
LABEL_26:
        uint64_t result = sub_10019C054((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        int64_t v41 = v45;
        unint64_t v42 = v43;
        int64_t v106 = v45;
        if (v43) {
          goto LABEL_5;
        }
      }
      int64_t v110 = v45;
      uint64_t v111 = v43;
      uint64_t v54 = (uint64_t)v20;
      uint64_t v55 = (uint64_t)v20;
      uint64_t v56 = v105;
      sub_10019BFCC(v55, v105, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v57 = sub_10019998C(v56, v51);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v58 = sub_100198318(v57, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10019C054(v56, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if ((v58 & 1) == 0)
      {
        int v20 = (char *)v54;
        int64_t v45 = v110;
        uint64_t v43 = v111;
        goto LABEL_26;
      }
      uint64_t v59 = v96;
      sub_1000079E4(v98, v96, &qword_10070E6C0);
      uint64_t v60 = *v99;
      if ((*v99)(v59, 1, v100) == 1) {
        break;
      }
      uint64_t v61 = v95;
      sub_10019C0B4(v59, v95, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v62 = v97;
      int v20 = (char *)v54;
      if (v97)
      {
        swift_retain();
        uint64_t v63 = (uint64_t)v93;
        v62(v61, v54);
        if (v60(v63, 1, v100) != 1)
        {
          uint64_t v69 = v98;
          sub_100007A48(v98, &qword_10070E6C0);
          uint64_t v70 = v84;
          sub_10019C0B4(v63, v84, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          uint64_t v71 = v70;
          int v20 = (char *)v54;
          sub_10019BFCC(v71, v69, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v90)(v69, 0, 1, v100);
          sub_10019BFCC(v54, v85, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v92 = (void *)sub_100017B54(0, v92[2] + 1, 1, (unint64_t)v92);
          }
          unint64_t v73 = v92[2];
          unint64_t v72 = v92[3];
          int64_t v36 = v110;
          if (v73 >= v72 >> 1) {
            v92 = (void *)sub_100017B54(v72 > 1, v73 + 1, 1, (unint64_t)v92);
          }
          uint64_t v74 = v92;
          v92[2] = v73 + 1;
          sub_10019C0B4(v85, (uint64_t)v74+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ v73 * v103, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10003E960((uint64_t)v62);
          sub_10019C054(v84, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10019C054(v61, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          uint64_t result = sub_10019C054((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          unint64_t v40 = v111;
          goto LABEL_4;
        }
        sub_10003E960((uint64_t)v62);
        sub_10019C054(v61, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_10019C054(v54, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        uint64_t result = sub_100007A48(v63, &qword_10070E6C0);
      }
      else
      {
        sub_10019C054(v61, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        uint64_t result = sub_10019C054(v54, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      }
      int64_t v41 = v110;
      unint64_t v42 = v111;
      int64_t v106 = v110;
      if (v111) {
        goto LABEL_5;
      }
    }
    uint64_t v64 = v98;
    sub_100007A48(v98, &qword_10070E6C0);
    sub_100007A48(v59, &qword_10070E6C0);
    int v20 = (char *)v54;
    sub_10019BFCC(v54, v64, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v90)(v64, 0, 1, v100);
    sub_10019BFCC(v54, v86, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v92 = (void *)sub_100017B54(0, v92[2] + 1, 1, (unint64_t)v92);
    }
    int64_t v36 = v110;
    uint64_t v65 = v103;
    unint64_t v67 = v92[2];
    unint64_t v66 = v92[3];
    if (v67 >= v66 >> 1) {
      v92 = (void *)sub_100017B54(v66 > 1, v67 + 1, 1, (unint64_t)v92);
    }
    uint64_t v68 = v92;
    v92[2] = v67 + 1;
    sub_10019C0B4(v86, (uint64_t)v68+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ v67 * v65, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    uint64_t result = sub_10019C054((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    unint64_t v40 = v111;
  }
  while (v97);
LABEL_46:
  sub_10003BC80();
  uint64_t v75 = v98;
  uint64_t v76 = v88;
  sub_1000079E4(v98, v88, &qword_10070E6C0);
  if ((*v99)(v76, 1, v100) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100007A48(v75, &qword_10070E6C0);
    uint64_t v77 = 1;
    uint64_t v75 = v76;
    uint64_t v78 = v89;
  }
  else
  {
    uint64_t v78 = v89;
    sub_10019C0B4(v76, v89, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    uint64_t v79 = v107;
    sub_1001930B4((uint64_t)v92, v78);
    swift_bridgeObjectRelease();
    uint64_t v80 = v83;
    sub_10019BFCC(v78, v83, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v114 = *(void *)(v79 + 24);
    *(void *)(v79 + 24) = 0x8000000000000000;
    sub_1001038F4(0, v80, isUniquelyReferenced_nonNull_native);
    *(void *)(v79 + 24) = v114;
    swift_bridgeObjectRelease();
    sub_10019C054(v80, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    uint64_t v77 = 0;
  }
  sub_100007A48(v75, &qword_10070E6C0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v90)(v78, v77, 1, v100);
}

uint64_t sub_10018CA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v164 = a3;
  uint64_t v161 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v5 = __chkstk_darwin(v161);
  os_log_t v156 = (os_log_t)((char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v151 = (uint64_t)&v147 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_t v152 = (os_log_t)((char *)&v147 - v10);
  __chkstk_darwin(v9);
  uint64_t v150 = (uint64_t)&v147 - v11;
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_t v157 = (os_log_t)((char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  os_log_t v153 = (os_log_t)((char *)&v147 - v17);
  uint64_t v18 = __chkstk_darwin(v16);
  int v20 = (char *)&v147 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v147 - v21;
  uint64_t v154 = sub_10000566C(&qword_100709E38);
  uint64_t v23 = __chkstk_darwin(v154);
  uint64_t v155 = (uint64_t)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  v162 = ((char *)&v147 - v26);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v149 = (uint64_t)&v147 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v160 = ((char *)&v147 - v30);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v147 - v32;
  __chkstk_darwin(v31);
  uint64_t v159 = (uint64_t)&v147 - v34;
  uint64_t v35 = type metadata accessor for MoveAndCopyMessages.CommandID();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v147 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for ClientCommand(0);
  uint64_t v38 = __chkstk_darwin(v165);
  v148 = (char *)&v147 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v166 = (uint64_t)&v147 - v40;
  uint64_t v163 = a1;
  sub_10019BFCC(a1, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v107 = *(void *)v37;
      LODWORD(v162) = *((_DWORD *)v37 + 2);
      uint64_t v108 = *((void *)v37 + 2);
      uint64_t v109 = swift_bridgeObjectRetain();
      uint64_t v110 = (uint64_t)v160;
      sub_1001712FC(v109);
      uint64_t v111 = v13;
      uint64_t v112 = v107;
      uint64_t v113 = *(void (**)(os_log_t, uint64_t))(v111 + 16);
      os_log_t v114 = v153;
      uint64_t v115 = v12;
      uint64_t v116 = v108;
      uint64_t v158 = v115;
      v113(v153, a2);
      uint64_t v117 = v151;
      sub_10019BFCC(a2, v151, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v118 = v149;
      sub_1000079E4(v110, v149, &qword_100709E38);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v119 = sub_1005E0EB0();
      os_log_type_t v120 = sub_1005E25C0();
      int v121 = v120;
      if (os_log_type_enabled(v119, v120))
      {
        uint64_t v122 = swift_slowAlloc();
        os_log_t v156 = v119;
        uint64_t v123 = v122;
        os_log_t v157 = (os_log_t)swift_slowAlloc();
        os_log_t v169 = v157;
        *(_DWORD *)uint64_t v123 = 68160003;
        LODWORD(v167) = 2;
        uint64_t v159 = v116;
        LODWORD(v155) = v121;
        sub_1005E2960();
        *(_WORD *)(v123 + 8) = 256;
        uint64_t v124 = v117 + *(int *)(v161 + 20);
        LOBYTE(v167) = *(unsigned char *)v124;
        sub_1005E2960();
        *(_WORD *)(v123 + 11) = 2082;
        uint64_t v147 = v111;
        uint64_t v125 = *(void *)(v124 + 8);
        unint64_t v126 = *(void *)(v124 + 16);
        swift_bridgeObjectRetain();
        uint64_t v167 = sub_1000C6914(v125, v126, (uint64_t *)&v169);
        uint64_t v161 = v112;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v123 + 21) = 1040;
        LODWORD(v167) = 2;
        sub_1005E2960();
        *(_WORD *)(v123 + 27) = 512;
        LOWORD(v167) = *(_WORD *)(v124 + 24);
        sub_1005E2960();
        *(_WORD *)(v123 + 31) = 2160;
        uint64_t v167 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v123 + 41) = 2085;
        int v127 = *(_DWORD *)(v124 + 40);
        uint64_t v167 = *(void *)(v124 + 32);
        int v168 = v127;
        swift_bridgeObjectRetain();
        uint64_t v128 = sub_1005E1CC0();
        uint64_t v167 = sub_1000C6914(v128, v129, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        uint64_t v112 = v161;
        sub_10019C054(v117, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v123 + 51) = 2160;
        uint64_t v167 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v123 + 61) = 2085;
        uint64_t v167 = v112;
        int v168 = (int)v162;
        swift_bridgeObjectRetain();
        uint64_t v130 = sub_1005E1CC0();
        uint64_t v167 = sub_1000C6914(v130, v131, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v123 + 71) = 2082;
        uint64_t v132 = MessageIdentifierSet.debugDescription.getter(v154);
        uint64_t v167 = sub_1000C6914(v132, v133, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100007A48(v118, &qword_100709E38);
        os_log_t v134 = v156;
        _os_log_impl((void *)&_mh_execute_header, v156, (os_log_type_t)v155, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] [%{sensitive,mask.mailbox}s] Copying messages %{public}s.", (uint8_t *)v123, 0x51u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(os_log_t, uint64_t))(v147 + 8))(v153, v158);
      }
      else
      {
        sub_10019C054(v117, type metadata accessor for MailboxTaskLogger);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_100007A48(v118, &qword_100709E38);

        (*(void (**)(os_log_t, uint64_t))(v111 + 8))(v114, v158);
      }
      uint64_t v89 = v164;
      uint64_t v90 = v163;
      uint64_t v91 = v166;
      int v143 = (int)v162;
      uint64_t v144 = v91 + *(int *)(sub_10000566C(&qword_100709E78) + 48);
      sub_10001FDF0((uint64_t)v160, v91, &qword_100709E38);
      swift_bridgeObjectRelease();
      *(void *)uint64_t v144 = v112;
      *(_DWORD *)(v144 + 8) = v143;
      goto LABEL_18;
    case 2u:
      uint64_t v60 = *(void *)v37;
      LODWORD(v159) = *((_DWORD *)v37 + 2);
      uint64_t v61 = *((void *)v37 + 2);
      uint64_t v62 = swift_bridgeObjectRetain();
      uint64_t v63 = (uint64_t)v162;
      sub_1001712FC(v62);
      uint64_t v64 = v13;
      uint64_t v65 = *(void (**)(os_log_t, uint64_t, uint64_t))(v13 + 16);
      os_log_t v66 = v157;
      uint64_t v158 = v12;
      v65(v157, a2, v12);
      os_log_t v67 = v156;
      sub_10019BFCC(a2, (uint64_t)v156, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v68 = v63;
      uint64_t v69 = v60;
      uint64_t v70 = v155;
      sub_1000079E4(v68, v155, &qword_100709E38);
      v160 = v61;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v71 = sub_1005E0EB0();
      os_log_type_t v72 = sub_1005E25C0();
      int v73 = v72;
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v74 = swift_slowAlloc();
        os_log_t v152 = v71;
        uint64_t v75 = v74;
        os_log_t v153 = (os_log_t)swift_slowAlloc();
        os_log_t v169 = v153;
        *(_DWORD *)uint64_t v75 = 68160003;
        LODWORD(v167) = 2;
        LODWORD(v151) = v73;
        sub_1005E2960();
        *(_WORD *)(v75 + 8) = 256;
        uint64_t v76 = (char *)v67 + *(int *)(v161 + 20);
        LOBYTE(v167) = *v76;
        sub_1005E2960();
        *(_WORD *)(v75 + 11) = 2082;
        uint64_t v147 = v64;
        uint64_t v77 = *((void *)v76 + 1);
        unint64_t v78 = *((void *)v76 + 2);
        swift_bridgeObjectRetain();
        uint64_t v167 = sub_1000C6914(v77, v78, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v75 + 21) = 1040;
        LODWORD(v167) = 2;
        sub_1005E2960();
        *(_WORD *)(v75 + 27) = 512;
        LOWORD(v167) = *((_WORD *)v76 + 12);
        sub_1005E2960();
        *(_WORD *)(v75 + 31) = 2160;
        uint64_t v167 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v75 + 41) = 2085;
        int v79 = *((_DWORD *)v76 + 10);
        uint64_t v167 = *((void *)v76 + 4);
        int v168 = v79;
        swift_bridgeObjectRetain();
        uint64_t v80 = sub_1005E1CC0();
        uint64_t v167 = sub_1000C6914(v80, v81, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10019C054((uint64_t)v156, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v75 + 51) = 2160;
        uint64_t v167 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v75 + 61) = 2085;
        uint64_t v167 = v69;
        int v82 = v159;
        int v168 = v159;
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_1005E1CC0();
        uint64_t v167 = sub_1000C6914(v83, v84, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v75 + 71) = 2082;
        uint64_t v85 = v155;
        uint64_t v86 = MessageIdentifierSet.debugDescription.getter(v154);
        uint64_t v167 = sub_1000C6914(v86, v87, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100007A48(v85, &qword_100709E38);
        os_log_t v88 = v152;
        _os_log_impl((void *)&_mh_execute_header, v152, (os_log_type_t)v151, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] [%{sensitive,mask.mailbox}s] Copying messages %{public}s.", (uint8_t *)v75, 0x51u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(os_log_t, uint64_t))(v147 + 8))(v157, v158);
        uint64_t v90 = v163;
        uint64_t v89 = v164;
        uint64_t v91 = v166;
      }
      else
      {
        sub_10019C054((uint64_t)v67, type metadata accessor for MailboxTaskLogger);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_100007A48(v70, &qword_100709E38);

        (*(void (**)(os_log_t, uint64_t))(v64 + 8))(v66, v158);
        uint64_t v90 = v163;
        uint64_t v89 = v164;
        uint64_t v91 = v166;
        int v82 = v159;
      }
      uint64_t v135 = v91 + *(int *)(sub_10000566C(&qword_100709E78) + 48);
      sub_10001FDF0((uint64_t)v162, v91, &qword_100709E38);
      swift_bridgeObjectRelease();
      *(void *)uint64_t v135 = v69;
      *(_DWORD *)(v135 + 8) = v82;
      swift_storeEnumTagMultiPayload();
      break;
    case 3u:
      uint64_t v92 = v12;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v20, a2, v12);
      os_log_t v93 = v152;
      sub_10019BFCC(a2, (uint64_t)v152, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v94 = sub_1005E0EB0();
      os_log_type_t v95 = sub_1005E25C0();
      int v96 = v95;
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v97 = swift_slowAlloc();
        uint64_t v147 = v13;
        uint64_t v98 = v97;
        v160 = swift_slowAlloc();
        os_log_t v169 = v160;
        *(_DWORD *)uint64_t v98 = 68159235;
        LODWORD(v167) = 2;
        uint64_t v158 = v92;
        sub_1005E2960();
        *(_WORD *)(v98 + 8) = 256;
        uint64_t v99 = *(int *)(v161 + 20);
        v162 = v20;
        uint64_t v100 = (uint64_t)v93;
        int64_t v101 = (char *)v93 + v99;
        LOBYTE(v167) = *v101;
        sub_1005E2960();
        *(_WORD *)(v98 + 11) = 2082;
        uint64_t v102 = *((void *)v101 + 1);
        unint64_t v103 = *((void *)v101 + 2);
        swift_bridgeObjectRetain();
        uint64_t v167 = sub_1000C6914(v102, v103, (uint64_t *)&v169);
        LODWORD(v161) = v96;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 21) = 1040;
        LODWORD(v167) = 2;
        sub_1005E2960();
        *(_WORD *)(v98 + 27) = 512;
        LOWORD(v167) = *((_WORD *)v101 + 12);
        sub_1005E2960();
        *(_WORD *)(v98 + 31) = 2160;
        uint64_t v167 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v98 + 41) = 2085;
        int v104 = *((_DWORD *)v101 + 10);
        uint64_t v167 = *((void *)v101 + 4);
        int v168 = v104;
        swift_bridgeObjectRetain();
        uint64_t v105 = sub_1005E1CC0();
        uint64_t v167 = sub_1000C6914(v105, v106, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10019C054(v100, type metadata accessor for MailboxTaskLogger);
        _os_log_impl((void *)&_mh_execute_header, v94, (os_log_type_t)v161, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Expunging deleted messages.", (uint8_t *)v98, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(NSObject *, uint64_t))(v147 + 8))(v162, v158);
      }
      else
      {
        sub_10019C054((uint64_t)v93, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v92);
      }
      uint64_t v89 = v164;
      uint64_t v90 = v163;
      uint64_t v91 = v166;
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      uint64_t v41 = v159;
      sub_10001FDF0((uint64_t)v37, v159, &qword_100709E38);
      uint64_t v42 = v13;
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
      uint64_t v44 = v12;
      v43(v22, a2, v12);
      uint64_t v45 = v150;
      sub_10019BFCC(a2, v150, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_1000079E4(v41, (uint64_t)v33, &qword_100709E38);
      unint64_t v46 = sub_1005E0EB0();
      os_log_type_t v47 = sub_1005E25C0();
      int v48 = v47;
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v147 = v42;
        uint64_t v50 = v49;
        v162 = swift_slowAlloc();
        os_log_t v169 = v162;
        *(_DWORD *)uint64_t v50 = 68159491;
        LODWORD(v167) = 2;
        v160 = ((char *)&v167 + 4);
        sub_1005E2960();
        *(_WORD *)(v50 + 8) = 256;
        uint64_t v51 = v45 + *(int *)(v161 + 20);
        LOBYTE(v167) = *(unsigned char *)v51;
        sub_1005E2960();
        *(_WORD *)(v50 + 11) = 2082;
        uint64_t v158 = v44;
        uint64_t v52 = *(void *)(v51 + 8);
        unint64_t v53 = *(void *)(v51 + 16);
        swift_bridgeObjectRetain();
        uint64_t v167 = sub_1000C6914(v52, v53, (uint64_t *)&v169);
        os_log_t v157 = v46;
        LODWORD(v161) = v48;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 21) = 1040;
        LODWORD(v167) = 2;
        sub_1005E2960();
        *(_WORD *)(v50 + 27) = 512;
        LOWORD(v167) = *(_WORD *)(v51 + 24);
        sub_1005E2960();
        *(_WORD *)(v50 + 31) = 2160;
        uint64_t v167 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v50 + 41) = 2085;
        int v54 = *(_DWORD *)(v51 + 40);
        uint64_t v167 = *(void *)(v51 + 32);
        int v168 = v54;
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_1005E1CC0();
        uint64_t v167 = sub_1000C6914(v55, v56, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10019C054(v45, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v50 + 51) = 2082;
        uint64_t v57 = MessageIdentifierSet.debugDescription.getter(v154);
        uint64_t v167 = sub_1000C6914(v57, v58, (uint64_t *)&v169);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100007A48((uint64_t)v33, &qword_100709E38);
        os_log_t v59 = v157;
        _os_log_impl((void *)&_mh_execute_header, v157, (os_log_type_t)v161, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking source messages %{public}s as deleted.", (uint8_t *)v50, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v147 + 8))(v22, v158);
      }
      else
      {
        sub_10019C054(v45, type metadata accessor for MailboxTaskLogger);
        sub_100007A48((uint64_t)v33, &qword_100709E38);

        (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v44);
      }
      uint64_t v89 = v164;
      uint64_t v90 = v163;
      uint64_t v136 = (uint64_t)v148;
      uint64_t v137 = v136 + *(int *)(sub_10000566C(&qword_100709E70) + 48);
      uint64_t v138 = v159;
      sub_1000079E4(v159, v136, &qword_100709E38);
      sub_10000566C(&qword_100709F50);
      uint64_t v139 = swift_allocObject();
      *(_OWORD *)(v139 + 16) = xmmword_1005F6670;
      v140 = Flag.deleted.unsafeMutableAddressor();
      uint64_t v142 = *(void *)v140;
      uint64_t v141 = *((void *)v140 + 1);
      *(void *)(v139 + 32) = v142;
      *(void *)(v139 + 40) = v141;
      swift_bridgeObjectRetain();
      sub_100007A48(v138, &qword_100709E38);
      *(_WORD *)uint64_t v137 = 256;
      *(void *)(v137 + 8) = v139;
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = v166;
      sub_10019C0B4(v136, v166, type metadata accessor for ClientCommand);
      break;
  }
  uint64_t v145 = v89 + *(int *)(sub_10000566C(&qword_10070E6D0) + 48);
  sub_10019BFCC(v90, v89, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  return sub_10019C0B4(v91, v145, type metadata accessor for ClientCommand);
}

uint64_t sub_10018E08C(NSObject *a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  v290 = a7;
  LODWORD(v289) = a5;
  unint64_t v293 = a2;
  uint64_t v294 = a4;
  uint64_t v287 = a3;
  uint64_t v282 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v9 = __chkstk_darwin(v282);
  v292 = ((char *)&v265 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v276 = (uint64_t)&v265 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v268 = (uint64_t)&v265 - v14;
  __chkstk_darwin(v13);
  uint64_t v273 = (uint64_t)&v265 - v15;
  uint64_t v295 = sub_1005E0ED0();
  uint64_t v299 = *(void *)(v295 - 8);
  uint64_t v16 = __chkstk_darwin(v295);
  v288 = (char *)&v265 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v280 = (char *)&v265 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v270 = (char *)&v265 - v21;
  __chkstk_darwin(v20);
  v275 = (char *)&v265 - v22;
  uint64_t v283 = sub_10000566C(&qword_100709E38);
  uint64_t v23 = __chkstk_darwin(v283);
  uint64_t v286 = (uint64_t)&v265 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  v279 = ((char *)&v265 - v26);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v271 = (uint64_t)&v265 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v274 = (uint64_t)&v265 - v30;
  __chkstk_darwin(v29);
  uint64_t v296 = (uint64_t)&v265 - v31;
  uint64_t v32 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v297 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v304 = (uint64_t)&v265 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  os_log_t v303 = (os_log_t)((char *)&v265 - v36);
  uint64_t v37 = __chkstk_darwin(v35);
  v285 = (unint64_t *)((char *)&v265 - v38);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v284 = (uint64_t)&v265 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v278 = (uint64_t)&v265 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v291 = (uint64_t)&v265 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v269 = (uint64_t)&v265 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  os_log_t v281 = (os_log_t)((char *)&v265 - v48);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v51 = (char *)&v265 - v50;
  uint64_t v52 = __chkstk_darwin(v49);
  uint64_t v266 = (uint64_t)&v265 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v272 = (uint64_t)&v265 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  unint64_t v58 = (char *)&v265 - v57;
  __chkstk_darwin(v56);
  uint64_t v60 = (char *)&v265 - v59;
  sub_10019BFCC((uint64_t)a1, (uint64_t)&v265 - v59, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v306 = v7[19];
  v7[19] = 0x8000000000000000;
  sub_1001038F4(1, (uint64_t)v60, isUniquelyReferenced_nonNull_native);
  v301 = v7;
  v7[19] = v306;
  swift_bridgeObjectRelease();
  sub_10019C054((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  os_log_t v300 = a1;
  sub_10019BFCC((uint64_t)a1, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  os_log_t v302 = (os_log_t)v32;
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      unint64_t v277 = *(void *)v58;
      unsigned int v267 = *((_DWORD *)v58 + 2);
      uint64_t v63 = *((void *)v58 + 2);
      goto LABEL_5;
    case 2:
      unint64_t v277 = *(void *)v58;
      unsigned int v267 = *((_DWORD *)v58 + 2);
      uint64_t v64 = v298;
      uint64_t v63 = sub_100194DFC(*((void *)v58 + 2));
      uint64_t v298 = v64;
      swift_bridgeObjectRelease();
LABEL_5:
      uint64_t v65 = v296;
      uint64_t v66 = swift_bridgeObjectRetain();
      sub_1001712FC(v66);
      os_log_t v67 = v301;
      unint64_t v68 = v293;
      uint64_t v69 = v295;
      uint64_t v70 = v299;
      if (!(_BYTE)v289)
      {
        if ((~v293 & 0xF000000000000007) != 0 && ((v293 >> 59) & 0x1E | (v293 >> 2) & 1) == 8)
        {
          LODWORD(v297) = *(_DWORD *)((v293 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          uint64_t v98 = *(NSObject **)((v293 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
          uint64_t v97 = *(void *)((v293 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
          uint64_t v99 = (uint64_t)v290;
          (*(void (**)(char *, NSObject *, uint64_t))(v299 + 16))(v275, v290, v295);
          sub_10019BFCC(v99, v273, type metadata accessor for MailboxTaskLogger);
          sub_100086918(v68);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          sub_10019BFCC((uint64_t)v300, v272, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_1000079E4(v296, v274, &qword_100709E38);
          os_log_t v303 = v98;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v100 = sub_1005E0EB0();
          int v101 = sub_1005E2590();
          BOOL v102 = os_log_type_enabled(v100, (os_log_type_t)v101);
          uint64_t v304 = v97;
          if (v102)
          {
            LODWORD(v291) = v101;
            v292 = v100;
            uint64_t v103 = swift_slowAlloc();
            v290 = swift_slowAlloc();
            os_log_t v308 = v290;
            *(_DWORD *)uint64_t v103 = 68160259;
            LODWORD(v306) = 2;
            sub_1005E2960();
            *(_WORD *)(v103 + 8) = 256;
            uint64_t v104 = v273;
            uint64_t v105 = v273 + *(int *)(v282 + 20);
            LOBYTE(v306) = *(unsigned char *)v105;
            sub_1005E2960();
            *(_WORD *)(v103 + 11) = 2082;
            uint64_t v106 = *(void *)(v105 + 8);
            unint64_t v107 = *(void *)(v105 + 16);
            swift_bridgeObjectRetain();
            uint64_t v306 = sub_1000C6914(v106, v107, (uint64_t *)&v308);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v103 + 21) = 1040;
            LODWORD(v306) = 2;
            sub_1005E2960();
            *(_WORD *)(v103 + 27) = 512;
            LOWORD(v306) = *(_WORD *)(v105 + 24);
            sub_1005E2960();
            *(_WORD *)(v103 + 31) = 2160;
            uint64_t v306 = 0x786F626C69616DLL;
            sub_1005E2960();
            *(_WORD *)(v103 + 41) = 2085;
            int v108 = *(_DWORD *)(v105 + 40);
            uint64_t v306 = *(void *)(v105 + 32);
            int v307 = v108;
            swift_bridgeObjectRetain();
            uint64_t v109 = sub_1005E1CC0();
            uint64_t v306 = sub_1000C6914(v109, v110, (uint64_t *)&v308);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_10019C054(v104, type metadata accessor for MailboxTaskLogger);
            os_log_t v300 = (os_log_t)v103;
            *(_WORD *)(v103 + 51) = 2082;
            uint64_t v111 = v272;
            uint64_t v112 = v266;
            sub_10019BFCC(v272, v266, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
            unint64_t v113 = 0xE700000000000000;
            unint64_t v114 = 0xE400000000000000;
            uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v116 = (uint64_t)v292;
            uint64_t v117 = 1498435395;
            uint64_t v118 = 0x45474E55505845;
            switch(EnumCaseMultiPayload)
            {
              case 1:
                goto LABEL_102;
              case 2:
                uint64_t v117 = 1163284301;
                goto LABEL_102;
              case 3:
                goto LABEL_103;
              default:
                unint64_t v114 = 0xE600000000000000;
                uint64_t v117 = 0x4554454C4544;
LABEL_102:
                sub_10019C054(v112, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                uint64_t v118 = v117;
                unint64_t v113 = v114;
LABEL_103:
                os_log_t v236 = v300;
                uint64_t v306 = sub_1000C6914(v118, v113, (uint64_t *)&v308);
                sub_1005E2960();
                swift_bridgeObjectRelease();
                sub_10019C054(v111, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                *(_WORD *)((char *)&v236[7].isa + 5) = 2082;
                uint64_t v237 = v274;
                uint64_t v238 = MessageIdentifierSet.debugDescription.getter(v283);
                uint64_t v306 = sub_1000C6914(v238, v239, (uint64_t *)&v308);
                sub_1005E2960();
                swift_bridgeObjectRelease();
                sub_100007A48(v237, &qword_100709E38);
                *(_WORD *)((char *)&v236[8].isa + 7) = 2082;
                int64_t v240 = *(void *)(v304 + 16);
                v241 = _swiftEmptyArrayStorage;
                if (v240)
                {
                  uint64_t v289 = v63;
                  uint64_t v306 = (uint64_t)_swiftEmptyArrayStorage;
                  swift_bridgeObjectRetain();
                  sub_1001191F8(0, v240, 0);
                  uint64_t v242 = v304;
                  uint64_t v243 = 0;
                  v241 = (void *)v306;
                  do
                  {
                    uint64_t v305 = *(void *)(v242 + 8 * v243 + 32);
                    sub_10000566C(&qword_10070A9B8);
                    uint64_t v244 = sub_1005E1CA0();
                    uint64_t v246 = v245;
                    uint64_t v306 = (uint64_t)v241;
                    unint64_t v248 = v241[2];
                    unint64_t v247 = v241[3];
                    if (v248 >= v247 >> 1)
                    {
                      sub_1001191F8((char *)(v247 > 1), v248 + 1, 1);
                      uint64_t v242 = v304;
                      v241 = (void *)v306;
                    }
                    ++v243;
                    v241[2] = v248 + 1;
                    v249 = &v241[2 * v248];
                    v249[4] = v244;
                    v249[5] = v246;
                  }
                  while (v240 != v243);
                  swift_bridgeObjectRelease();
                  uint64_t v63 = v289;
                  uint64_t v116 = (uint64_t)v292;
                }
                os_log_t v250 = v300;
                uint64_t v306 = (uint64_t)v241;
                sub_10000566C(&qword_100709F58);
                sub_100007494((unint64_t *)&qword_100709F60, &qword_100709F58);
                uint64_t v251 = sub_1005E1A80();
                unint64_t v253 = v252;
                swift_bridgeObjectRelease();
                uint64_t v306 = sub_1000C6914(v251, v253, (uint64_t *)&v308);
                sub_1005E2960();
                swift_bridgeObjectRelease_n();
                os_log_t v209 = v303;
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                *(_WORD *)((char *)&v250[10].isa + 1) = 1024;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                LODWORD(v306) = v297;
                sub_1005E2960();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, (os_log_t)v116, (os_log_type_t)v291, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server completed %{public}s of messages %{public}s with destination UIDs %{public}s and UIDValidity 0x%x", (uint8_t *)v250, 0x57u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v299 + 8))(v275, v295);
                uint64_t v211 = v298;
                uint64_t v212 = v296;
                os_log_t v67 = v301;
                unint64_t v68 = v293;
                break;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            os_log_t v209 = v303;
            swift_bridgeObjectRelease();
            sub_10019C054(v273, type metadata accessor for MailboxTaskLogger);
            sub_10019C054(v272, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
            sub_100007A48(v274, &qword_100709E38);

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            v210 = *(void (**)(char *, uint64_t))(v70 + 8);
            uint64_t v116 = v70 + 8;
            v210(v275, v69);
            uint64_t v211 = v298;
            uint64_t v212 = v296;
          }
          Class isa = v209[2].isa;
          unint64_t v181 = v277;
          uint64_t v255 = 0;
          if (isa)
          {
            v256 = (unsigned int *)&v209[4].isa + 1;
            do
            {
              unint64_t v257 = *v256 - (unint64_t)*(v256 - 1) + 1;
              BOOL v207 = __OFADD__(v255, v257);
              v255 += v257;
              if (v207)
              {
LABEL_129:
                __break(1u);
LABEL_130:
                __break(1u);
                goto LABEL_131;
              }
              v256 += 2;
              Class isa = (Class)((char *)isa - 1);
            }
            while (isa);
          }
          uint64_t v258 = *(void *)(v304 + 16);
          if (v258)
          {
            uint64_t v259 = 0;
            v260 = (unsigned int *)(v304 + 36);
            do
            {
              unint64_t v261 = *v260 - (unint64_t)*(v260 - 1) + 1;
              BOOL v207 = __OFADD__(v259, v261);
              v259 += v261;
              if (v207) {
                goto LABEL_130;
              }
              v260 += 2;
              --v258;
            }
            while (v258);
            if (v255 == v259) {
              goto LABEL_119;
            }
          }
          else if (!v255)
          {
LABEL_119:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v262 = v304;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v263 = sub_100198044(_swiftEmptyDictionarySingleton, (uint64_t)v209, v262, v297, v63);
            uint64_t v116 = v211;
            if (!v211)
            {
              uint64_t v264 = v263;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              sub_1000869F0(v68);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              uint64_t v63 = v264;
              goto LABEL_84;
            }
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_123;
          }
          sub_10019BF00();
          swift_allocError();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_willThrow();
          swift_bridgeObjectRelease();
LABEL_123:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1000869F0(v68);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_124;
        }
        uint64_t v289 = v63;
        sub_10019BFCC((uint64_t)v300, (uint64_t)v51, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          sub_100086918(v68);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v119 = swift_bridgeObjectRelease();
          uint64_t v120 = v67[21];
          __chkstk_darwin(v119);
          *(&v265 - 2) = v296;
          swift_bridgeObjectRetain();
          uint64_t v121 = v298;
          uint64_t v304 = sub_10018A368((uint64_t (*)(int *))sub_10019C614, (uint64_t)(&v265 - 4), v120);
          char v123 = v122;
          uint64_t v298 = v121;
          swift_bridgeObjectRelease();
          uint64_t v65 = v296;
          if ((v123 & 1) == 0)
          {
            uint64_t v124 = v270;
            uint64_t v125 = (uint64_t)v290;
            (*(void (**)(char *, NSObject *, uint64_t))(v70 + 16))(v270, v290, v69);
            uint64_t v126 = v125;
            uint64_t v63 = v268;
            sub_10019BFCC(v126, v268, type metadata accessor for MailboxTaskLogger);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            sub_1000079E4(v65, v271, &qword_100709E38);
            int v127 = sub_1005E0EB0();
            os_log_type_t v128 = sub_1005E2590();
            LODWORD(v303) = v128;
            if (os_log_type_enabled(v127, v128))
            {
              uint64_t v129 = swift_slowAlloc();
              os_log_t v302 = (os_log_t)swift_slowAlloc();
              os_log_t v308 = v302;
              *(_DWORD *)uint64_t v129 = 68159491;
              LODWORD(v306) = 2;
              os_log_t v300 = v127;
              sub_1005E2960();
              *(_WORD *)(v129 + 8) = 256;
              uint64_t v130 = v63 + *(int *)(v282 + 20);
              LOBYTE(v306) = *(unsigned char *)v130;
              sub_1005E2960();
              *(_WORD *)(v129 + 11) = 2082;
              uint64_t v131 = *(void *)(v130 + 8);
              unint64_t v132 = *(void *)(v130 + 16);
              swift_bridgeObjectRetain();
              uint64_t v306 = sub_1000C6914(v131, v132, (uint64_t *)&v308);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v129 + 21) = 1040;
              LODWORD(v306) = 2;
              sub_1005E2960();
              *(_WORD *)(v129 + 27) = 512;
              LOWORD(v306) = *(_WORD *)(v130 + 24);
              uint64_t v116 = v298;
              sub_1005E2960();
              *(_WORD *)(v129 + 31) = 2160;
              uint64_t v306 = 0x786F626C69616DLL;
              sub_1005E2960();
              *(_WORD *)(v129 + 41) = 2085;
              int v133 = *(_DWORD *)(v130 + 40);
              uint64_t v306 = *(void *)(v130 + 32);
              int v307 = v133;
              swift_bridgeObjectRetain();
              uint64_t v134 = sub_1005E1CC0();
              uint64_t v306 = sub_1000C6914(v134, v135, (uint64_t *)&v308);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_10019C054(v63, type metadata accessor for MailboxTaskLogger);
              *(_WORD *)(v129 + 51) = 2082;
              uint64_t v136 = v271;
              uint64_t v137 = MessageIdentifierSet.debugDescription.getter(v283);
              uint64_t v306 = sub_1000C6914(v137, v138, (uint64_t *)&v308);
              os_log_t v67 = v301;
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100007A48(v136, &qword_100709E38);
              os_log_t v139 = v300;
              _os_log_impl((void *)&_mh_execute_header, v300, (os_log_type_t)v303, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server completed move of messages %{public}s with destination UIDs", (uint8_t *)v129, 0x3Du);
              swift_arrayDestroy();
              swift_slowDealloc();
              unint64_t v68 = v293;
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v299 + 8))(v270, v295);
            }
            else
            {
              sub_10019C054(v63, type metadata accessor for MailboxTaskLogger);
              sub_100007A48(v271, &qword_100709E38);

              (*(void (**)(char *, uint64_t))(v70 + 8))(v124, v69);
              uint64_t v116 = v298;
            }
            uint64_t v215 = sub_1000EFA74(v304);
            uint64_t v216 = v213;
            uint64_t v217 = v214;
            uint64_t v218 = *(void *)(v213 + 16);
            uint64_t v219 = v289;
            uint64_t v220 = 0;
            if (v218)
            {
              v221 = (unsigned int *)(v213 + 36);
              unint64_t v181 = v277;
              do
              {
                unint64_t v222 = *v221 - (unint64_t)*(v221 - 1) + 1;
                BOOL v207 = __OFADD__(v220, v222);
                v220 += v222;
                if (v207) {
                  goto LABEL_132;
                }
                v221 += 2;
                --v218;
              }
              while (v218);
            }
            else
            {
              unint64_t v181 = v277;
            }
            uint64_t v231 = *(void *)(v214 + 16);
            if (v231)
            {
              uint64_t v232 = 0;
              v233 = (unsigned int *)(v214 + 36);
              do
              {
                unint64_t v234 = *v233 - (unint64_t)*(v233 - 1) + 1;
                BOOL v207 = __OFADD__(v232, v234);
                v232 += v234;
                if (v207) {
                  goto LABEL_133;
                }
                v233 += 2;
                --v231;
              }
              while (v231);
              if (v220 == v232) {
                goto LABEL_95;
              }
            }
            else if (!v220)
            {
LABEL_95:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v235 = sub_100198044(_swiftEmptyDictionarySingleton, v216, v217, v215, v219);
              if (v116)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_99:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1000869F0(v68);
                uint64_t v212 = v296;
LABEL_124:
                swift_bridgeObjectRelease();
                return sub_100007A48(v212, &qword_100709E38);
              }
              uint64_t v63 = v235;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              sub_1000869F0(v68);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
LABEL_83:
              swift_bridgeObjectRelease();
              goto LABEL_84;
            }
            sub_10019BF00();
            swift_allocError();
            swift_bridgeObjectRetain();
            swift_willThrow();
            goto LABEL_99;
          }
        }
        else
        {
          sub_100086918(v68);
          swift_bridgeObjectRetain();
          sub_10019C054((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        }
        v140 = v280;
        uint64_t v141 = (uint64_t)v290;
        (*(void (**)(char *, NSObject *, uint64_t))(v70 + 16))(v280, v290, v69);
        uint64_t v142 = v141;
        uint64_t v143 = v276;
        sub_10019BFCC(v142, v276, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_10019BFCC((uint64_t)v300, (uint64_t)v281, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        uint64_t v144 = (uint64_t)v279;
        sub_1000079E4(v65, (uint64_t)v279, &qword_100709E38);
        uint64_t v145 = sub_1005E0EB0();
        LODWORD(v304) = sub_1005E2590();
        if (os_log_type_enabled(v145, (os_log_type_t)v304))
        {
          os_log_t v303 = v145;
          uint64_t v146 = swift_slowAlloc();
          os_log_t v300 = (os_log_t)swift_slowAlloc();
          os_log_t v308 = v300;
          *(_DWORD *)uint64_t v146 = 68159747;
          LODWORD(v306) = 2;
          sub_1005E2960();
          *(_WORD *)(v146 + 8) = 256;
          uint64_t v147 = v143 + *(int *)(v282 + 20);
          LOBYTE(v306) = *(unsigned char *)v147;
          sub_1005E2960();
          *(_WORD *)(v146 + 11) = 2082;
          uint64_t v148 = *(void *)(v147 + 8);
          unint64_t v149 = *(void *)(v147 + 16);
          swift_bridgeObjectRetain();
          uint64_t v306 = sub_1000C6914(v148, v149, (uint64_t *)&v308);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v146 + 21) = 1040;
          LODWORD(v306) = 2;
          sub_1005E2960();
          *(_WORD *)(v146 + 27) = 512;
          LOWORD(v306) = *(_WORD *)(v147 + 24);
          sub_1005E2960();
          *(_WORD *)(v146 + 31) = 2160;
          uint64_t v306 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v146 + 41) = 2085;
          int v150 = *(_DWORD *)(v147 + 40);
          uint64_t v306 = *(void *)(v147 + 32);
          int v307 = v150;
          swift_bridgeObjectRetain();
          uint64_t v151 = sub_1005E1CC0();
          uint64_t v306 = sub_1000C6914(v151, v152, (uint64_t *)&v308);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_10019C054(v143, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v146 + 51) = 2082;
          os_log_t v153 = v281;
          uint64_t v154 = v269;
          sub_10019BFCC((uint64_t)v281, v269, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          unint64_t v155 = 0xE700000000000000;
          unint64_t v156 = 0xE400000000000000;
          uint64_t v157 = swift_getEnumCaseMultiPayload();
          uint64_t v158 = v289;
          unint64_t v68 = v293;
          uint64_t v159 = v280;
          uint64_t v160 = 1498435395;
          uint64_t v161 = 0x45474E55505845;
          switch(v157)
          {
            case 1:
              goto LABEL_80;
            case 2:
              uint64_t v160 = 1163284301;
              goto LABEL_80;
            case 3:
              goto LABEL_81;
            default:
              unint64_t v156 = 0xE600000000000000;
              uint64_t v160 = 0x4554454C4544;
LABEL_80:
              sub_10019C054(v154, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              uint64_t v161 = v160;
              unint64_t v155 = v156;
LABEL_81:
              uint64_t v306 = sub_1000C6914(v161, v155, (uint64_t *)&v308);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_10019C054((uint64_t)v153, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              *(_WORD *)(v146 + 61) = 2082;
              uint64_t v223 = (uint64_t)v279;
              uint64_t v224 = MessageIdentifierSet.debugDescription.getter(v283);
              uint64_t v306 = sub_1000C6914(v224, v225, (uint64_t *)&v308);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100007A48(v223, &qword_100709E38);
              os_log_t v226 = v303;
              _os_log_impl((void *)&_mh_execute_header, v303, (os_log_type_t)v304, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server completed %{public}s of messages %{public}s without destination UIDs", (uint8_t *)v146, 0x47u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v299 + 8))(v159, v295);
              uint64_t v162 = v298;
              os_log_t v67 = v301;
              break;
          }
        }
        else
        {
          sub_10019C054(v143, type metadata accessor for MailboxTaskLogger);
          sub_10019C054((uint64_t)v281, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_100007A48(v144, &qword_100709E38);

          (*(void (**)(char *, uint64_t))(v70 + 8))(v140, v69);
          uint64_t v158 = v289;
          uint64_t v162 = v298;
        }
        uint64_t v63 = sub_100194FB8(v158, 1, 1);
        uint64_t v116 = v162;
        uint64_t v227 = v277;
        swift_bridgeObjectRetain();
        sub_1000187DC((uint64_t)&v306, v227, v267);
        sub_1000869F0(v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_83;
      }
      uint64_t v71 = v288;
      uint64_t v72 = (uint64_t)v290;
      unsigned __int8 v73 = v289;
      (*(void (**)(char *, NSObject *, uint64_t))(v299 + 16))(v288, v290, v295);
      sub_10019BFCC(v72, (uint64_t)v292, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_10019BFCC((uint64_t)v300, v291, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v74 = v294;
      uint64_t v75 = v286;
      sub_1000079E4(v65, v286, &qword_100709E38);
      uint64_t v76 = 20302;
      if (v73 == 2) {
        uint64_t v76 = 4473154;
      }
      v290 = v76;
      if (v73 == 2) {
        unint64_t v77 = 0xE300000000000000;
      }
      else {
        unint64_t v77 = 0xE200000000000000;
      }
      swift_bridgeObjectRetain();
      sub_100086918(v68);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100086918(v68);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100086918(v68);
      swift_bridgeObjectRetain();
      unint64_t v78 = v71;
      sub_1000E84F4(v68, v287, v74, v73);
      int v79 = sub_1005E0EB0();
      int v80 = sub_1005E25A0();
      if (os_log_type_enabled(v79, (os_log_type_t)v80))
      {
        LODWORD(v280) = v80;
        os_log_t v281 = v79;
        uint64_t v289 = v63;
        uint64_t v81 = swift_slowAlloc();
        v279 = swift_slowAlloc();
        os_log_t v308 = v279;
        *(_DWORD *)uint64_t v81 = 68160259;
        LODWORD(v306) = 2;
        sub_1005E2960();
        *(_WORD *)(v81 + 8) = 256;
        uint64_t v82 = (uint64_t)v292;
        uint64_t v83 = (char *)v292 + *(int *)(v282 + 20);
        LOBYTE(v306) = *v83;
        sub_1005E2960();
        *(_WORD *)(v81 + 11) = 2082;
        uint64_t v84 = *((void *)v83 + 1);
        unint64_t v85 = *((void *)v83 + 2);
        swift_bridgeObjectRetain();
        uint64_t v306 = sub_1000C6914(v84, v85, (uint64_t *)&v308);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v81 + 21) = 1040;
        LODWORD(v306) = 2;
        sub_1005E2960();
        *(_WORD *)(v81 + 27) = 512;
        LOWORD(v306) = *((_WORD *)v83 + 12);
        sub_1005E2960();
        *(_WORD *)(v81 + 31) = 2160;
        uint64_t v306 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v81 + 41) = 2085;
        int v86 = *((_DWORD *)v83 + 10);
        uint64_t v306 = *((void *)v83 + 4);
        int v307 = v86;
        swift_bridgeObjectRetain();
        uint64_t v87 = sub_1005E1CC0();
        uint64_t v306 = sub_1000C6914(v87, v88, (uint64_t *)&v308);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10019C054(v82, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v81 + 51) = 2082;
        uint64_t v89 = v291;
        uint64_t v90 = v278;
        sub_10019BFCC(v291, v278, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        unint64_t v91 = 0xE700000000000000;
        unint64_t v92 = 0xE400000000000000;
        uint64_t v93 = swift_getEnumCaseMultiPayload();
        uint64_t v94 = v286;
        uint64_t v95 = 1498435395;
        uint64_t v96 = 0x45474E55505845;
        switch(v93)
        {
          case 1:
            goto LABEL_30;
          case 2:
            uint64_t v95 = 1163284301;
            goto LABEL_30;
          case 3:
            goto LABEL_31;
          default:
            unint64_t v92 = 0xE600000000000000;
            uint64_t v95 = 0x4554454C4544;
LABEL_30:
            sub_10019C054(v90, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
            uint64_t v96 = v95;
            unint64_t v91 = v92;
LABEL_31:
            uint64_t v306 = sub_1000C6914(v96, v91, (uint64_t *)&v308);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_10019C054(v89, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
            *(_WORD *)(v81 + 61) = 2082;
            uint64_t v163 = MessageIdentifierSet.debugDescription.getter(v283);
            uint64_t v306 = sub_1000C6914(v163, v164, (uint64_t *)&v308);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_100007A48(v94, &qword_100709E38);
            *(_WORD *)(v81 + 71) = 2082;
            swift_bridgeObjectRetain();
            uint64_t v306 = sub_1000C6914((uint64_t)v290, v77, (uint64_t *)&v308);
            sub_1005E2960();
            swift_bridgeObjectRelease_n();
            unint64_t v165 = v293;
            sub_1000869F0(v293);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000869F0(v165);
            swift_bridgeObjectRelease();
            *(_WORD *)(v81 + 81) = 2082;
            sub_100086918(v165);
            swift_bridgeObjectRetain();
            ResponseText.debugDescription.getter(v165);
            uint64_t v167 = v166;
            unint64_t v169 = v168;
            sub_1000869F0(v165);
            swift_bridgeObjectRelease();
            uint64_t v306 = sub_1000C6914(v167, v169, (uint64_t *)&v308);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000869F0(v165);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000869F0(v165);
            swift_bridgeObjectRelease();
            os_log_t v170 = v281;
            _os_log_impl((void *)&_mh_execute_header, v281, (os_log_type_t)v280, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server failed to %{public}s messages %{public}s: %{public}s %{public}s", (uint8_t *)v81, 0x5Bu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v299 + 8))(v288, v295);
            os_log_t v67 = v301;
            uint64_t v63 = v289;
            break;
        }
      }
      else
      {
        sub_10019C054((uint64_t)v292, type metadata accessor for MailboxTaskLogger);
        sub_10019C054(v291, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_100007A48(v75, &qword_100709E38);
        swift_bridgeObjectRelease();
        sub_1000869F0(v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000869F0(v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000869F0(v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000869F0(v68);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v299 + 8))(v78, v295);
      }
      uint64_t v171 = v284;
      sub_10019BFCC((uint64_t)v300, v284, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      int v172 = swift_getEnumCaseMultiPayload();
      uint64_t v116 = v298;
      if (v172 == 2)
      {
        uint64_t v173 = v63;
        swift_bridgeObjectRelease();
        uint64_t v174 = swift_bridgeObjectRelease();
        uint64_t v175 = v67[21];
        __chkstk_darwin(v174);
        *(&v265 - 2) = v176;
        swift_bridgeObjectRetain();
        unint64_t v177 = sub_10018A368((uint64_t (*)(int *))sub_10019BEE0, (uint64_t)(&v265 - 4), v175);
        char v179 = v178;
        swift_bridgeObjectRelease();
        if ((v179 & 1) == 0)
        {
          sub_1000EFA74(v177);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v63 = v173;
      }
      else
      {
        sub_10019C054(v171, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      }
      v180 = v285;
      uint64_t v295 = sub_100194FB8(v63, 0, 1);
      sub_10019BFCC((uint64_t)v300, (uint64_t)v180, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_10019C054((uint64_t)v180, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        swift_bridgeObjectRelease();
LABEL_71:
        uint64_t v63 = v295;
LABEL_84:
        unint64_t v181 = v67[22];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_85;
      }
      uint64_t v298 = v116;
      unint64_t v181 = *v180;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v182 = *(void *)(v63 + 64);
      uint64_t v299 = v63 + 64;
      uint64_t v183 = 1 << *(unsigned char *)(v63 + 32);
      uint64_t v184 = -1;
      if (v183 < 64) {
        uint64_t v184 = ~(-1 << v183);
      }
      unint64_t v185 = v184 & v182;
      os_log_t v300 = (os_log_t)((unint64_t)(v183 + 63) >> 6);
      swift_bridgeObjectRetain();
      uint64_t v116 = 0;
      while (v185)
      {
        unint64_t v186 = __clz(__rbit64(v185));
        v185 &= v185 - 1;
        unint64_t v187 = v186 | (v116 << 6);
LABEL_59:
        uint64_t v191 = *(void *)(v63 + 56) + 24 * v187;
        if ((*(unsigned char *)v191 & 1) == 0)
        {
          uint64_t v192 = *(void *)(v191 + 8);
          unint64_t v193 = *(void *)(v191 + 16);
          uint64_t v194 = v63;
          LODWORD(v306) = *(_DWORD *)(*(void *)(v63 + 48) + 4 * v187);
          sub_100008D24(v192, v193);
          sub_100063E18();
          os_log_t v195 = v303;
          MessageIdentifierSet.init(_:)();
          swift_storeEnumTagMultiPayload();
          uint64_t v196 = (uint64_t)v195;
          uint64_t v197 = v304;
          sub_10019BFCC(v196, v304, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          uint64_t v63 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v306 = v67[19];
          uint64_t v198 = v306;
          v67[19] = 0x8000000000000000;
          unint64_t v181 = sub_1000244EC(v197);
          uint64_t v200 = *(void *)(v198 + 16);
          BOOL v201 = (v199 & 1) == 0;
          uint64_t v202 = v200 + v201;
          if (__OFADD__(v200, v201))
          {
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
            goto LABEL_129;
          }
          os_log_t v67 = v199;
          if (*(void *)(v198 + 24) >= v202)
          {
            if ((v63 & 1) == 0) {
              sub_100098BD4();
            }
          }
          else
          {
            sub_1000529F8(v202, v63);
            unint64_t v203 = sub_1000244EC(v304);
            if ((v67 & 1) != (v204 & 1))
            {
              sub_1005E3380();
              __break(1u);
              JUMPOUT(0x100190994);
            }
            unint64_t v181 = v203;
          }
          uint64_t v63 = v194;
          v205 = (void *)v306;
          if (v67)
          {
            *(unsigned char *)(*(void *)(v306 + 56) + v181) = 1;
          }
          else
          {
            *(void *)(v306 + 8 * (v181 >> 6) + 64) |= 1 << v181;
            sub_10019BFCC(v304, v205[6] + *(void *)(v297 + 72) * v181, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
            *(unsigned char *)(v205[7] + v181) = 1;
            uint64_t v206 = v205[2];
            BOOL v207 = __OFADD__(v206, 1);
            uint64_t v208 = v206 + 1;
            if (v207) {
              goto LABEL_128;
            }
            v205[2] = v208;
          }
          os_log_t v67 = v301;
          v301[19] = v205;
          swift_bridgeObjectRelease();
          unint64_t v181 = (unint64_t)type metadata accessor for MoveAndCopyMessages.CommandID;
          sub_10019C054(v304, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_1000094D4(v192, v193);
          sub_10019C054((uint64_t)v303, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        }
      }
      uint64_t v188 = v116 + 1;
      if (__OFADD__(v116, 1)) {
        goto LABEL_127;
      }
      if (v188 >= (uint64_t)v300)
      {
LABEL_70:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v116 = v298;
        goto LABEL_71;
      }
      unint64_t v189 = *(void *)(v299 + 8 * v188);
      ++v116;
      if (v189) {
        goto LABEL_58;
      }
      uint64_t v116 = v188 + 1;
      if (v188 + 1 >= (uint64_t)v300) {
        goto LABEL_70;
      }
      unint64_t v189 = *(void *)(v299 + 8 * v116);
      if (v189) {
        goto LABEL_58;
      }
      uint64_t v116 = v188 + 2;
      if (v188 + 2 >= (uint64_t)v300) {
        goto LABEL_70;
      }
      unint64_t v189 = *(void *)(v299 + 8 * v116);
      if (v189)
      {
LABEL_58:
        unint64_t v185 = (v189 - 1) & v189;
        unint64_t v187 = __clz(__rbit64(v189)) + (v116 << 6);
        goto LABEL_59;
      }
      uint64_t v190 = v188 + 3;
      if (v190 >= (uint64_t)v300) {
        goto LABEL_70;
      }
      unint64_t v189 = *(void *)(v299 + 8 * v190);
      if (v189)
      {
        uint64_t v116 = v190;
        goto LABEL_58;
      }
      while (1)
      {
        uint64_t v116 = v190 + 1;
        if (__OFADD__(v190, 1)) {
          break;
        }
        if (v116 >= (uint64_t)v300) {
          goto LABEL_70;
        }
        unint64_t v189 = *(void *)(v299 + 8 * v116);
        ++v190;
        if (v189) {
          goto LABEL_58;
        }
      }
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      unint64_t v181 = (unint64_t)sub_100017F0C(0, *(void *)(v181 + 16) + 1, 1, (void *)v181);
LABEL_85:
      unint64_t v229 = *(void *)(v181 + 16);
      unint64_t v228 = *(void *)(v181 + 24);
      uint64_t v298 = v116;
      if (v229 >= v228 >> 1) {
        unint64_t v181 = (unint64_t)sub_100017F0C((void *)(v228 > 1), v229 + 1, 1, (void *)v181);
      }
      *(void *)(v181 + 16) = v229 + 1;
      unint64_t v230 = v181 + 24 * v229;
      *(void *)(v230 + 32) = v277;
      *(_DWORD *)(v230 + 40) = v267;
      *(void *)(v230 + 48) = v63;
      v67[22] = v181;
      return sub_100007A48(v296, &qword_100709E38);
    case 3:
      return result;
    default:
      return sub_10019C054((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  }
}

uint64_t sub_1001909D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0E30();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0D20();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1005E0CF0();
  sub_10018A5D4();
  sub_1005E0DB0();
  sub_10019C054((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for OSLogStringAlignment);
  sub_10019C054((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for OSLogPrivacy);
  return swift_release();
}

uint64_t sub_100190B38()
{
  uint64_t v0 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1000630DC(v3);
  sub_10001FC6C();
  char v4 = sub_1005E35A0();
  sub_100007A48((uint64_t)v2, &qword_100709E38);
  return v4 & 1;
}

BOOL sub_100190C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - v14;
  sub_10019BFCC(a1, (uint64_t)v22 - v14, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t v16 = &_swiftEmptySetSingleton;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v17 = swift_bridgeObjectRetain();
      uint64_t v16 = (void *)sub_10008B0D4(v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      break;
    default:
      sub_10001FDF0((uint64_t)v15, (uint64_t)v9, &qword_100709E38);
      sub_1000079E4((uint64_t)v9, (uint64_t)v7, &qword_100709E38);
      uint64_t v16 = (void *)sub_10008B294((uint64_t)v7);
      sub_100007A48((uint64_t)v9, &qword_100709E38);
      break;
  }
  sub_10019BFCC(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t v18 = &_swiftEmptySetSingleton;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v18 = (void *)sub_10008B0D4(v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      break;
    default:
      sub_10001FDF0((uint64_t)v13, (uint64_t)v9, &qword_100709E38);
      sub_1000079E4((uint64_t)v9, (uint64_t)v7, &qword_100709E38);
      uint64_t v18 = (void *)sub_10008B294((uint64_t)v7);
      sub_100007A48((uint64_t)v9, &qword_100709E38);
      break;
  }
  char v20 = sub_100092494((Swift::Int)v18, (Swift::Int)v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v20 & 1) == 0;
}

uint64_t sub_100190F28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v75 = a1;
  uint64_t v69 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v5 = __chkstk_darwin(v69);
  uint64_t v70 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v73 = (uint64_t)&v68 - v7;
  uint64_t v78 = sub_1005E0ED0();
  uint64_t v76 = *(void *)(v78 - 8);
  uint64_t v8 = __chkstk_darwin(v78);
  uint64_t v71 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t *)((char *)&v68 - v10);
  uint64_t v11 = *(void *)(v2 + 152);
  uint64_t v80 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v81 = sub_100198000((unint64_t *)&qword_10070B758);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = (uint64_t)sub_10019660C(v13, KeyPath);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v15 = sub_10009ADE4(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v14) = sub_100198318(v15, v11);
  uint64_t v72 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003BE58(v3, (uint64_t)v83);
  uint64_t v77 = a2;
  if (v14)
  {
    uint64_t v16 = *(void *)(v83[22] + 16);
    sub_10003BEB4((uint64_t)v83);
    if (!v16) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_10003BEB4((uint64_t)v83);
  }
  uint64_t v17 = v76;
  uint64_t v18 = v74;
  uint64_t v19 = v78;
  (*(void (**)(void *, uint64_t, uint64_t))(v76 + 16))(v74, a2, v78);
  uint64_t v20 = v73;
  sub_10019BFCC(a2, v73, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v21 = sub_1005E0EB0();
  os_log_type_t v22 = sub_1005E25A0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v82 = v68;
    *(_DWORD *)uint64_t v23 = 68159235;
    LODWORD(v84) = 2;
    sub_1005E2960();
    *(_WORD *)(v23 + 8) = 256;
    uint64_t v24 = v20 + *(int *)(v69 + 20);
    LOBYTE(v84) = *(unsigned char *)v24;
    sub_1005E2960();
    *(_WORD *)(v23 + 11) = 2082;
    uint64_t v26 = *(void *)(v24 + 8);
    unint64_t v25 = *(void *)(v24 + 16);
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_1000C6914(v26, v25, &v82);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 21) = 1040;
    LODWORD(v84) = 2;
    sub_1005E2960();
    *(_WORD *)(v23 + 27) = 512;
    LOWORD(v84) = *(_WORD *)(v24 + 24);
    sub_1005E2960();
    *(_WORD *)(v23 + 31) = 2160;
    uint64_t v84 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v23 + 41) = 2085;
    int v27 = *(_DWORD *)(v24 + 40);
    uint64_t v84 = *(void *)(v24 + 32);
    LODWORD(v85) = v27;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1005E1CC0();
    uint64_t v84 = sub_1000C6914(v28, v29, &v82);
    a2 = v77;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10019C054(v73, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Task is completing, but not done.", (uint8_t *)v23, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(void *, uint64_t))(v76 + 8))(v74, v78);
  }
  else
  {
    sub_10019C054(v20, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(void *, uint64_t))(v17 + 8))(v18, v19);
  }
LABEL_8:
  uint64_t v30 = *(void **)(v79 + 32);
  unsigned int v31 = *(_DWORD *)(v79 + 40);
  uint64_t v32 = __chkstk_darwin(&v68);
  *(&v68 - 2) = v33;
  *(&v68 - 1) = a2;
  uint64_t v34 = v75;
  uint64_t v35 = (void *)(v75 + 168);
  uint64_t v36 = *(void *)(v75 + 168);
  uint64_t v37 = *(void *)(v75 + 160);
  uint64_t v38 = *(void *)(v75 + 176);
  int v39 = *(unsigned __int8 *)(v75 + 184);
  if (v39 == 1)
  {
    uint64_t v84 = *(void *)(v75 + 160);
    uint64_t v74 = (void *)v32;
    uint64_t v40 = (void *)(v75 + 168);
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v84, v30, v31, 0, (void (*)(char *))sub_1001985D8, &v68 - 4);
    sub_10000F0D4(v37, v36, v38, 1);
    uint64_t v35 = v40;
    uint64_t v36 = 0;
    uint64_t v38 = 0;
    uint64_t v37 = v84;
    *(void *)(v34 + 160) = v84;
    *uint64_t v40 = 0;
    v40[1] = 0;
    *(unsigned char *)(v34 + 184) = 1;
  }
  uint64_t v41 = v34;
  uint64_t v42 = v79;
  if (*(unsigned char *)(v79 + 120) == 1)
  {
    uint64_t v74 = v35;
    uint64_t v44 = v76;
    uint64_t v43 = v77;
    uint64_t v45 = v71;
    uint64_t v46 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v71, v77, v78);
    uint64_t v47 = v70;
    sub_10019BFCC(v43, v70, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v48 = sub_1005E0EB0();
    os_log_type_t v49 = sub_1005E25C0();
    int v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v82 = v73;
      *(_DWORD *)uint64_t v51 = 68159235;
      LODWORD(v84) = 2;
      LODWORD(v68) = v50;
      sub_1005E2960();
      *(_WORD *)(v51 + 8) = 256;
      uint64_t v52 = v47 + *(int *)(v69 + 20);
      LOBYTE(v84) = *(unsigned char *)v52;
      sub_1005E2960();
      *(_WORD *)(v51 + 11) = 2082;
      uint64_t v53 = v44;
      uint64_t v55 = *(void *)(v52 + 8);
      unint64_t v54 = *(void *)(v52 + 16);
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_1000C6914(v55, v54, &v82);
      uint64_t v41 = v75;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 21) = 1040;
      LODWORD(v84) = 2;
      sub_1005E2960();
      *(_WORD *)(v51 + 27) = 512;
      LOWORD(v84) = *(_WORD *)(v52 + 24);
      sub_1005E2960();
      *(_WORD *)(v51 + 31) = 2160;
      uint64_t v84 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v51 + 41) = 2085;
      int v56 = *(_DWORD *)(v52 + 40);
      uint64_t v84 = *(void *)(v52 + 32);
      LODWORD(v85) = v56;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1005E1CC0();
      uint64_t v84 = sub_1000C6914(v57, v58, &v82);
      uint64_t v42 = v79;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10019C054(v70, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v68, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence has more messages to move/copy. Will mark as needing to re-run.", (uint8_t *)v51, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v53 + 8))(v71, v78);
    }
    else
    {
      sub_10019C054(v47, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    }
    uint64_t v37 = *(void *)(v41 + 160);
    uint64_t v36 = *(void *)(v41 + 168);
    uint64_t v38 = *(void *)(v41 + 176);
    if (*(unsigned char *)(v41 + 184) == 1)
    {
      unsigned int v59 = *(_DWORD *)(v42 + 40);
      uint64_t v60 = *(void *)(v42 + 32);
      uint64_t v84 = *(void *)(v41 + 160);
      swift_bridgeObjectRetain();
      sub_10004A0D4(&v84, v60, v59, 0);
      LOBYTE(v39) = 1;
      sub_10000F0D4(v37, v36, v38, 1);
      uint64_t v36 = 0;
      uint64_t v38 = 0;
      uint64_t v37 = v84;
      *(void *)(v41 + 160) = v84;
      uint64_t v61 = v74;
      *uint64_t v74 = 0;
      v61[1] = 0;
      *(unsigned char *)(v41 + 184) = 1;
    }
    else
    {
      LOBYTE(v39) = 0;
    }
  }
  uint64_t v62 = *(void *)(v41 + 208);
  int v63 = *(_DWORD *)(v41 + 232);
  uint64_t v84 = v37;
  uint64_t v85 = v36;
  uint64_t v86 = v38;
  char v87 = v39;
  long long v88 = *(_OWORD *)(v41 + 192);
  uint64_t v89 = v62;
  long long v90 = *(_OWORD *)(v41 + 216);
  int v91 = v63;
  uint64_t v64 = sub_100044000(*(void *)(v42 + 32), *(_DWORD *)(v42 + 40));
  uint64_t v65 = *(void *)(v42 + 184);
  uint64_t v66 = __chkstk_darwin(v64);
  *(&v68 - 4) = v77;
  *(&v68 - 3) = v41;
  *(&v68 - 2) = v66;
  swift_bridgeObjectRetain();
  sub_100027678((void (*)(uint64_t *))sub_1001985E0, (uint64_t)(&v68 - 6), v65);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001919E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(a2 + 120) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a3, v9);
    sub_10019BFCC(a3, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v14 = sub_1005E0EB0();
    os_log_type_t v15 = sub_1005E25C0();
    int v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v17 = swift_slowAlloc();
      int v29 = v16;
      uint64_t v18 = v17;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v33 = v28;
      *(_DWORD *)uint64_t v18 = 68159235;
      LODWORD(v31) = 2;
      sub_1005E2960();
      *(_WORD *)(v18 + 8) = 256;
      uint64_t v19 = *(int *)(v6 + 20);
      os_log_t v27 = v14;
      uint64_t v20 = &v8[v19];
      LOBYTE(v31) = v8[v19];
      sub_1005E2960();
      *(_WORD *)(v18 + 11) = 2082;
      uint64_t v30 = a1;
      uint64_t v21 = *((void *)v20 + 1);
      unint64_t v22 = *((void *)v20 + 2);
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1000C6914(v21, v22, &v33);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 21) = 1040;
      LODWORD(v31) = 2;
      sub_1005E2960();
      *(_WORD *)(v18 + 27) = 512;
      LOWORD(v31) = *((_WORD *)v20 + 12);
      sub_1005E2960();
      *(_WORD *)(v18 + 31) = 2160;
      uint64_t v31 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v18 + 41) = 2085;
      int v23 = *((_DWORD *)v20 + 10);
      uint64_t v31 = *((void *)v20 + 4);
      int v32 = v23;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1005E1CC0();
      uint64_t v31 = sub_1000C6914(v24, v25, &v33);
      a1 = v30;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10019C054((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      uint64_t v14 = v27;
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v29, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking no more messages needing move or copy.", (uint8_t *)v18, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10019C054((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t result = type metadata accessor for MailboxSyncState();
    *(unsigned char *)(a1 + *(int *)(result + 52) + 2) = 0;
  }
  return result;
}

uint64_t sub_100191E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v8);
  uint64_t v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1005E0ED0();
  __chkstk_darwin(v11);
  uint64_t v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = *(void *)a1;
  unsigned int v15 = *(_DWORD *)(a1 + 8);
  uint64_t v46 = v17;
  uint64_t v47 = v16;
  (*(void (**)(unsigned char *, uint64_t))(v17 + 16))(v13, a2);
  sub_10019BFCC(a2, (uint64_t)v10, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1005E0EB0();
  os_log_type_t v19 = sub_1005E25C0();
  int v45 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    unsigned int v40 = v15;
    uint64_t v21 = v20;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v50 = v42;
    *(_DWORD *)uint64_t v21 = 68159747;
    LODWORD(v48) = 2;
    os_log_t v41 = v18;
    sub_1005E2960();
    *(_WORD *)(v21 + 8) = 256;
    uint64_t v22 = *(int *)(v8 + 20);
    uint64_t v43 = a4;
    int v23 = &v10[v22];
    LOBYTE(v48) = v10[v22];
    sub_1005E2960();
    *(_WORD *)(v21 + 11) = 2082;
    uint64_t v44 = a3;
    uint64_t v24 = *((void *)v23 + 1);
    unint64_t v25 = *((void *)v23 + 2);
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1000C6914(v24, v25, &v50);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 21) = 1040;
    LODWORD(v48) = 2;
    sub_1005E2960();
    *(_WORD *)(v21 + 27) = 512;
    LOWORD(v48) = *((_WORD *)v23 + 12);
    sub_1005E2960();
    *(_WORD *)(v21 + 31) = 2160;
    uint64_t v48 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v21 + 41) = 2085;
    unsigned int v26 = *((_DWORD *)v23 + 10);
    uint64_t v48 = *((void *)v23 + 4);
    unsigned int v49 = v26;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1005E1CC0();
    uint64_t v48 = sub_1000C6914(v27, v28, &v50);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10019C054((uint64_t)v10, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v21 + 51) = 2160;
    uint64_t v48 = 0x786F626C69616DLL;
    a3 = v44;
    sub_1005E2960();
    *(_WORD *)(v21 + 61) = 2085;
    uint64_t v48 = v14;
    unsigned int v29 = v40;
    unsigned int v49 = v40;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1005E1CC0();
    uint64_t v48 = sub_1000C6914(v30, v31, &v50);
    a4 = v43;
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v32 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v45, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking mailbox '%{sensitive,mask.mailbox}s' as needing to run find-missing-messages.", (uint8_t *)v21, 0x47u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v46 + 8))(v13, v47);
    unsigned int v34 = v29;
  }
  else
  {
    sub_10019C054((uint64_t)v10, type metadata accessor for MailboxTaskLogger);

    swift_bridgeObjectRelease_n();
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v46 + 8))(v13, v47);
    unsigned int v34 = v15;
  }
  if (*(unsigned char *)(a3 + 184) == 1)
  {
    uint64_t v36 = *(void *)(a3 + 168);
    uint64_t v35 = *(void *)(a3 + 176);
    uint64_t v48 = *(void *)(a3 + 160);
    uint64_t v37 = v48;
    swift_bridgeObjectRetain();
    sub_1000433FC((uint64_t)&v48, v14, v34, a4, 12);
    uint64_t result = sub_10000F0D4(v37, v36, v35, 1);
    uint64_t v38 = v48;
    *(void *)(a3 + 168) = 0;
    *(void *)(a3 + 176) = 0;
    *(void *)(a3 + 160) = v38;
    *(unsigned char *)(a3 + 184) = 1;
  }
  return result;
}

uint64_t sub_100192360()
{
  if (qword_100709DB8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001923C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_100199C44(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1001923FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10019A01C(a1, a6, a7);
}

unint64_t sub_100192408(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)())
{
  return sub_10019A970(a1, a2, a3, a5, a6);
}

uint64_t sub_100192414(NSObject *a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return sub_10018E08C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10019242C()
{
  return sub_10019B7B0();
}

unint64_t sub_100192450()
{
  return 0xD000000000000013;
}

Swift::Int sub_10019246C()
{
  Swift::UInt v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_100008D24(v2, v3);
  sub_1005E08B0();
  sub_1000094D4(v2, v3);
  return sub_1005E3470();
}

uint64_t sub_1001924E8()
{
  uint64_t v1 = *((void *)v0 + 1);
  unint64_t v2 = *((void *)v0 + 2);
  sub_1005E3410(*v0);
  sub_100008D24(v1, v2);
  sub_1005E08B0();
  return sub_1000094D4(v1, v2);
}

Swift::Int sub_100192554()
{
  Swift::UInt v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_100008D24(v2, v3);
  sub_1005E08B0();
  sub_1000094D4(v2, v3);
  return sub_1005E3470();
}

uint64_t sub_1001925CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  uint64_t v6 = *((void *)a1 + 1);
  unint64_t v5 = *((void *)a1 + 2);
  sub_100008D24(v6, v5);
  sub_100008D24(v4, v3);
  char v7 = sub_100077894(v6, v5, v4, v3);
  sub_1000094D4(v4, v3);
  sub_1000094D4(v6, v5);
  return v7 & 1;
}

Swift::Int sub_100192664(uint64_t a1, uint64_t a2)
{
  return sub_1001926DC(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D3538);
}

uint64_t sub_10019267C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019275C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1000D3538);
}

Swift::Int sub_100192694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001927DC(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1000D3538);
}

uint64_t sub_1001926AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100192858(a1, a2, a3, a4, sub_100020AA4);
}

Swift::Int sub_1001926C4(uint64_t a1, uint64_t a2)
{
  return sub_1001926DC(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1000D3378);
}

Swift::Int sub_1001926DC(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  uint64_t v5 = *(unsigned int *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  sub_1005E33F0();
  sub_1005E3410(v5 | (v5 << 32));
  a3(v8, v6);
  return sub_1005E3470();
}

uint64_t sub_100192744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019275C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1000D3378);
}

uint64_t sub_10019275C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(v4 + 16);
  sub_1005E3410(*(unsigned int *)(v4 + 8) | ((unint64_t)*(unsigned int *)(v4 + 8) << 32));
  return a4(a1, v6);
}

Swift::Int sub_1001927C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001927DC(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1000D3378);
}

Swift::Int sub_1001927DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *(unsigned int *)(v4 + 8);
  uint64_t v7 = *(void *)(v4 + 16);
  sub_1005E33F0();
  sub_1005E3410(v6 | (v6 << 32));
  a4(v9, v7);
  return sub_1005E3470();
}

uint64_t sub_100192840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100192858(a1, a2, a3, a4, sub_100021118);
}

uint64_t sub_100192858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  if (!sub_1000255D4(*(void *)a1, *(void *)a2)) {
    return 0;
  }
  return a5(v5, v6);
}

Swift::Int sub_1001928E4()
{
  Swift::UInt v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  uint64_t v4 = *((void *)v0 + 3);
  char v5 = v0[32];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_100008D24(v2, v3);
  sub_1005E08B0();
  sub_1000094D4(v2, v3);
  MoveOrCopy.Result.hash(into:)((uint64_t)v7, v4, v5);
  return sub_1005E3470();
}

void sub_100192980(uint64_t a1)
{
  uint64_t v3 = *((void *)v1 + 1);
  unint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  char v6 = v1[32];
  sub_1005E3410(*v1);
  sub_100008D24(v3, v4);
  sub_1005E08B0();
  sub_1000094D4(v3, v4);
  MoveOrCopy.Result.hash(into:)(a1, v5, v6);
}

Swift::Int sub_100192A0C()
{
  Swift::UInt v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  uint64_t v4 = *((void *)v0 + 3);
  char v5 = v0[32];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_100008D24(v2, v3);
  sub_1005E08B0();
  sub_1000094D4(v2, v3);
  MoveOrCopy.Result.hash(into:)((uint64_t)v7, v4, v5);
  return sub_1005E3470();
}

uint64_t sub_100192AA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  unint64_t v3 = *((void *)a1 + 2);
  uint64_t v2 = *((void *)a1 + 3);
  char v4 = a1[32];
  unint64_t v6 = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a2 + 3);
  unsigned __int8 v7 = a2[32];
  uint64_t v8 = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a1 + 1);
  sub_100008D24(v9, v3);
  sub_100008D24(v8, v6);
  char v10 = sub_100077894(v9, v3, v8, v6);
  sub_1000094D4(v8, v6);
  sub_1000094D4(v9, v3);
  if ((v10 & 1) == 0) {
    return 0;
  }
  return static MoveOrCopy.Result.__derived_enum_equals(_:_:)(v2, v4, v5, v7);
}

void *sub_100192B94(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  char v4 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v5 = v4;
    unint64_t v6 = (unsigned int *)(v2 + 8 * v3);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    if (v7 < v8) {
      goto LABEL_37;
    }
    uint64_t v9 = v7 - v8;
    char v10 = (char *)_swiftEmptyArrayStorage;
    if (v7 - v8 != -1) {
      break;
    }
LABEL_7:
    uint64_t v11 = *((void *)v10 + 2);
    int64_t v12 = v5[2];
    int64_t v13 = v12 + v11;
    if (__OFADD__(v12, v11)) {
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && (char v4 = v5, v13 <= v5[3] >> 1))
    {
      if (*((void *)v10 + 2)) {
        goto LABEL_27;
      }
    }
    else
    {
      if (v12 <= v13) {
        int64_t v20 = v12 + v11;
      }
      else {
        int64_t v20 = v12;
      }
      char v4 = sub_10001595C((void *)isUniquelyReferenced_nonNull_native, v20, 1, v5);
      if (*((void *)v10 + 2))
      {
LABEL_27:
        uint64_t v21 = v4[2];
        if ((v4[3] >> 1) - v21 < v11) {
          goto LABEL_40;
        }
        uint64_t v22 = (char *)v4 + 4 * v21 + 32;
        int v23 = v10 + 32;
        size_t v24 = 4 * v11;
        if (v10 + 32 < &v22[4 * v11] && v22 < &v23[v24]) {
          goto LABEL_44;
        }
        memcpy(v22, v23, v24);
        if (v11)
        {
          uint64_t v25 = v4[2];
          BOOL v26 = __OFADD__(v25, v11);
          uint64_t v27 = v25 + v11;
          if (v26) {
            goto LABEL_41;
          }
          v4[2] = v27;
        }
        goto LABEL_4;
      }
    }
    if (v11) {
      goto LABEL_39;
    }
LABEL_4:
    ++v3;
    swift_release();
    swift_bridgeObjectRelease();
    if (v3 == v1)
    {
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  if (v9 < 0) {
    goto LABEL_43;
  }
  sub_10000566C(&qword_10070A190);
  char v10 = (char *)swift_allocObject();
  int64_t v15 = j__malloc_size(v10);
  uint64_t v16 = 0;
  uint64_t v17 = v15 - 32;
  if (v15 < 32) {
    uint64_t v17 = v15 - 29;
  }
  *((void *)v10 + 2) = v7 - v8 + 1;
  *((void *)v10 + 3) = 2 * (v17 >> 2);
  while (2)
  {
    if (v7 == v8)
    {
      int v18 = 0;
      goto LABEL_19;
    }
    int v18 = v8 + 1;
    if (v8 != -1)
    {
LABEL_19:
      *(_DWORD *)&v10[4 * v16 + 32] = v8;
      if (v9 == v16) {
        goto LABEL_7;
      }
      ++v16;
      BOOL v19 = v7 == v8;
      LODWORD(v8) = v18;
      if (v19) {
        goto LABEL_42;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = (void *)sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100192DF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t *))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  uint64_t v10 = v12;
  swift_bridgeObjectRelease();
  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_100192E88(void (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v12 - v7;
  a1(v6);
  sub_10019BFCC((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t v9 = 0x45474E55505845;
  uint64_t v10 = 1498435395;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_4;
    case 2u:
      uint64_t v10 = 1163284301;
      goto LABEL_4;
    case 3u:
      goto LABEL_5;
    default:
      uint64_t v10 = 0x4554454C4544;
LABEL_4:
      sub_10019C054((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v9 = v10;
LABEL_5:
      sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      return v9;
  }
}

uint64_t sub_10019301C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100193054()
{
  return sub_100192E88(*(void (**)(uint64_t))(v0 + 16));
}

unint64_t sub_100193060()
{
  unint64_t result = qword_10070E4E8;
  if (!qword_10070E4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E4E8);
  }
  return result;
}

uint64_t sub_1001930B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10070E6C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = &_swiftEmptySetSingleton;
  unsigned int v34 = &_swiftEmptySetSingleton;
  uint64_t v35 = &_swiftEmptySetSingleton;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    unint64_t v31 = v9;
    uint64_t v32 = a2;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v16 = *(void *)(v3 + 8);
    uint64_t v17 = *(void *)(v3 + 16);
    uint64_t v18 = *(void *)(v7 + 72);
    uint64_t v30 = a1;
    swift_bridgeObjectRetain();
    uint64_t v19 = v15;
    uint64_t v20 = v14;
    do
    {
      uint64_t v21 = sub_10019998C(v19, v16);
      sub_10008BB24(v21);
      uint64_t v22 = sub_10019998C(v19, v17);
      sub_10008BB24(v22);
      v19 += v18;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    if (v35[2])
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = v15;
      uint64_t v24 = v14;
      do
      {
        sub_100093EE4(v23, (uint64_t)v12);
        sub_100007A48((uint64_t)v12, &qword_10070E6C0);
        v23 += v18;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
    }
    if (v34[2])
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = v15;
      uint64_t v26 = v14;
      do
      {
        sub_100093EE4(v25, (uint64_t)v12);
        sub_100007A48((uint64_t)v12, &qword_10070E6C0);
        v25 += v18;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    do
    {
      sub_1001935E8(v15);
      v15 += v18;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    int64_t v13 = v34;
    uint64_t v27 = v35;
    uint64_t v9 = v31;
    a2 = v32;
  }
  else
  {
    uint64_t v27 = &_swiftEmptySetSingleton;
  }
  sub_10019BFCC(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_10000566C(&qword_100709FC8);
  uint64_t v28 = swift_allocObject();
  sub_10019C0B4((uint64_t)v9, v28 + *(void *)(*(void *)v28 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_100019734(&v33, v28);
  swift_release();
  sub_100193D68((uint64_t)v27, a2);
  swift_bridgeObjectRelease();
  sub_1001933D0(a2, (uint64_t)v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001933D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a2 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v12) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v12) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v8 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v12) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v8 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v12) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v8 + 8 * v14);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_5:
    sub_10019BFCC(*(void *)(a2 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10019404C(a1, (uint64_t)v7);
    uint64_t result = sub_10019C054((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v12) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v8 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1001935E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019BFCC(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t v58 = sub_10000566C(&qword_100709FC8);
  uint64_t v7 = swift_allocObject();
  sub_10019C0B4((uint64_t)v6, v7 + *(void *)(*(void *)v7 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_100093BF0(v7);
  swift_release();
  uint64_t v8 = *(void *)(v2 + 8);
  uint64_t v59 = v2 + 8;
  uint64_t v9 = *(void *)(v8 + 16);
  swift_retain();
  if (v9 && (unint64_t v10 = sub_100024558(v7), (v11 & 1) != 0))
  {
    unint64_t v12 = *(void *)(*(void *)(v8 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
  }
  else
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
LABEL_78:
      if (sub_1005E2FB0())
      {
        unint64_t v12 = (unint64_t)sub_10001E144((unint64_t)_swiftEmptyArrayStorage);
        goto LABEL_6;
      }
    }
    unint64_t v12 = (unint64_t)&_swiftEmptySetSingleton;
  }
LABEL_6:
  swift_release();
  if ((v12 & 0xC000000000000001) != 0)
  {
    sub_1005E2B10();
    sub_100007494(&qword_10070E6A0, &qword_100709FC8);
    sub_1005E22D0();
    unint64_t v12 = v62[4];
    uint64_t v57 = (void *)v62[5];
    uint64_t v13 = v62[6];
    uint64_t v14 = v62[7];
    unint64_t v15 = v62[8];
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = -1 << *(unsigned char *)(v12 + 32);
    uint64_t v17 = *(void *)(v12 + 56);
    uint64_t v57 = (void *)(v12 + 56);
    uint64_t v13 = ~v16;
    uint64_t v18 = -v16;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v15 = v19 & v17;
  }
  uint64_t v56 = v12 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v54 = v13;
  int64_t v20 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v60 = v2 + 16;
  uint64_t v55 = (char *)&type metadata for Swift.AnyObject + 8;
  while ((v12 & 0x8000000000000000) != 0)
  {
    uint64_t v24 = sub_1005E2B80();
    if (!v24) {
      goto LABEL_38;
    }
    v62[0] = v24;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v2 = v63[0];
    swift_unknownObjectRelease();
    uint64_t v23 = v14;
    uint64_t v21 = v15;
    if (!v2) {
      goto LABEL_38;
    }
LABEL_36:
    swift_retain();
    uint64_t v28 = sub_100083368(v63, v2);
    if (*v29)
    {
      sub_100093BF0(v7);
      v28(v63, 0);
      swift_release_n();
      swift_release();
    }
    else
    {
      v28(v63, 0);
      swift_release_n();
    }
    uint64_t v14 = v23;
    unint64_t v15 = v21;
  }
  if (v15)
  {
    uint64_t v21 = (v15 - 1) & v15;
    unint64_t v22 = __clz(__rbit64(v15)) | (v14 << 6);
    uint64_t v23 = v14;
    goto LABEL_35;
  }
  int64_t v25 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (v25 >= v20) {
    goto LABEL_38;
  }
  unint64_t v26 = v57[v25];
  uint64_t v23 = v14 + 1;
  if (v26) {
    goto LABEL_34;
  }
  uint64_t v23 = v14 + 2;
  if (v14 + 2 >= v20) {
    goto LABEL_38;
  }
  unint64_t v26 = v57[v23];
  if (v26) {
    goto LABEL_34;
  }
  uint64_t v23 = v14 + 3;
  if (v14 + 3 >= v20) {
    goto LABEL_38;
  }
  unint64_t v26 = v57[v23];
  if (v26) {
    goto LABEL_34;
  }
  uint64_t v23 = v14 + 4;
  if (v14 + 4 >= v20) {
    goto LABEL_38;
  }
  unint64_t v26 = v57[v23];
  if (v26)
  {
LABEL_34:
    uint64_t v21 = (v26 - 1) & v26;
    unint64_t v22 = __clz(__rbit64(v26)) + (v23 << 6);
LABEL_35:
    uint64_t v2 = *(void *)(*(void *)(v12 + 48) + 8 * v22);
    swift_retain();
    if (!v2) {
      goto LABEL_38;
    }
    goto LABEL_36;
  }
  uint64_t v27 = v14 + 5;
  while (v20 != v27)
  {
    unint64_t v26 = v57[v27++];
    if (v26)
    {
      uint64_t v23 = v27 - 1;
      goto LABEL_34;
    }
  }
LABEL_38:
  sub_10003BC80();
  sub_100083ADC(v7);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)v60;
  uint64_t v31 = *(void *)(*(void *)v60 + 16);
  swift_retain();
  if (v31 && (unint64_t v32 = sub_100024558(v7), (v33 & 1) != 0))
  {
    unint64_t v34 = *(void *)(*(void *)(v30 + 56) + 8 * v32);
    swift_bridgeObjectRetain();
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1005E2FB0())
  {
    unint64_t v34 = (unint64_t)sub_10001E144((unint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    unint64_t v34 = (unint64_t)&_swiftEmptySetSingleton;
  }
  swift_release();
  if ((v34 & 0xC000000000000001) != 0)
  {
    sub_1005E2B10();
    sub_100007494(&qword_10070E6A0, &qword_100709FC8);
    sub_1005E22D0();
    unint64_t v34 = v63[0];
    uint64_t v57 = (void *)v63[1];
    uint64_t v35 = v63[2];
    uint64_t v36 = v63[3];
    unint64_t v37 = v63[4];
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v38 = -1 << *(unsigned char *)(v34 + 32);
    uint64_t v39 = *(void *)(v34 + 56);
    uint64_t v57 = (void *)(v34 + 56);
    uint64_t v35 = ~v38;
    uint64_t v40 = -v38;
    if (v40 < 64) {
      uint64_t v41 = ~(-1 << v40);
    }
    else {
      uint64_t v41 = -1;
    }
    unint64_t v37 = v41 & v39;
  }
  uint64_t v56 = v34 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v54 = v35;
  int64_t v42 = (unint64_t)(v35 + 64) >> 6;
  uint64_t v55 = (char *)&type metadata for Swift.AnyObject + 8;
  while (2)
  {
    if ((v34 & 0x8000000000000000) != 0)
    {
      uint64_t v46 = sub_1005E2B80();
      if (!v46) {
        goto LABEL_75;
      }
      uint64_t v61 = v46;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v2 = v62[0];
      swift_unknownObjectRelease();
      uint64_t v45 = v36;
      uint64_t v43 = v37;
      if (!v2) {
        goto LABEL_75;
      }
      goto LABEL_73;
    }
    if (v37)
    {
      uint64_t v43 = (v37 - 1) & v37;
      unint64_t v44 = __clz(__rbit64(v37)) | (v36 << 6);
      uint64_t v45 = v36;
LABEL_72:
      uint64_t v2 = *(void *)(*(void *)(v34 + 48) + 8 * v44);
      swift_retain();
      if (!v2) {
        goto LABEL_75;
      }
LABEL_73:
      swift_retain();
      uint64_t v50 = sub_100083368(v62, v2);
      if (*v51)
      {
        sub_100093BF0(v7);
        v50(v62, 0);
        swift_release_n();
        swift_release();
      }
      else
      {
        v50(v62, 0);
        swift_release_n();
      }
      uint64_t v36 = v45;
      unint64_t v37 = v43;
      continue;
    }
    break;
  }
  int64_t v47 = v36 + 1;
  if (__OFADD__(v36, 1)) {
    goto LABEL_77;
  }
  if (v47 >= v42) {
    goto LABEL_75;
  }
  unint64_t v48 = v57[v47];
  uint64_t v45 = v36 + 1;
  if (v48) {
    goto LABEL_71;
  }
  uint64_t v45 = v36 + 2;
  if (v36 + 2 >= v42) {
    goto LABEL_75;
  }
  unint64_t v48 = v57[v45];
  if (v48) {
    goto LABEL_71;
  }
  uint64_t v45 = v36 + 3;
  if (v36 + 3 >= v42) {
    goto LABEL_75;
  }
  unint64_t v48 = v57[v45];
  if (v48) {
    goto LABEL_71;
  }
  uint64_t v45 = v36 + 4;
  if (v36 + 4 >= v42) {
    goto LABEL_75;
  }
  unint64_t v48 = v57[v45];
  if (v48)
  {
LABEL_71:
    uint64_t v43 = (v48 - 1) & v48;
    unint64_t v44 = __clz(__rbit64(v48)) + (v45 << 6);
    goto LABEL_72;
  }
  uint64_t v49 = v36 + 5;
  while (v42 != v49)
  {
    unint64_t v48 = v57[v49++];
    if (v48)
    {
      uint64_t v45 = v49 - 1;
      goto LABEL_71;
    }
  }
LABEL_75:
  sub_10003BC80();
  sub_100083ADC(v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100193D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v12) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v12) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v8 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v12) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v8 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v12) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v8 + 8 * v14);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_5:
    sub_10019BFCC(*(void *)(a1 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10019404C((uint64_t)v7, a2);
    uint64_t result = sub_10019C054((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v12) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v8 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_100193F80()
{
  if (!(*v0 >> 62))
  {
    if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (!v3) {
    return 0;
  }
LABEL_3:
  unint64_t result = sub_100195D80();
  if (!result)
  {
    if (*v0 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
      unint64_t result = v4 - 1;
      if (!__OFSUB__(v4, 1)) {
        return sub_1000EF57C(result);
      }
    }
    else
    {
      uint64_t v2 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = v2 - 1;
      if (!__OFSUB__(v2, 1)) {
        return sub_1000EF57C(result);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10019404C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MoveAndCopyMessages.CommandID();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019BFCC(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_10000566C(&qword_100709FC8);
  uint64_t v9 = swift_allocObject();
  sub_10019C0B4((uint64_t)v8, v9 + *(void *)(*(void *)v9 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_10019BFCC(a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t v10 = swift_allocObject();
  sub_10019C0B4((uint64_t)v8, v10 + *(void *)(*(void *)v10 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  unint64_t v11 = *(void *)(v3 + 8);
  uint64_t v12 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_100198600(v10, v9, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    __break(1u);
    goto LABEL_23;
  }
  swift_retain();
  swift_retain();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = *(void *)(v3 + 16);
  uint64_t v15 = v37;
  *(void *)(v3 + 16) = 0x8000000000000000;
  unint64_t v11 = sub_100024558(v9);
  uint64_t v17 = *(void *)(v15 + 16);
  BOOL v18 = (v16 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  LOBYTE(v12) = v16;
  if (*(void *)(v15 + 24) >= v19)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_25;
    }
  }
  else
  {
    sub_100052F94(v19, isUniquelyReferenced_nonNull_native);
    uint64_t v15 = v37;
    unint64_t v20 = sub_100024558(v9);
    if ((v12 & 1) != (v21 & 1)) {
      goto LABEL_30;
    }
    unint64_t v11 = v20;
  }
  while (1)
  {
    *(void *)(v3 + 16) = v15;
    swift_bridgeObjectRelease();
    unint64_t v22 = *(void **)(v3 + 16);
    swift_bridgeObjectRetain();
    if ((v12 & 1) == 0)
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1005E2FB0()) {
        uint64_t v23 = sub_10001E144((unint64_t)_swiftEmptyArrayStorage);
      }
      else {
        uint64_t v23 = &_swiftEmptySetSingleton;
      }
      sub_1001031E4(v11, v9, (uint64_t)v23, v22);
      swift_retain();
    }
    uint64_t v12 = v22[7];
    swift_bridgeObjectRelease();
    sub_100019734(&v37, v10);
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    int v24 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = *(void *)(v3 + 8);
    uint64_t v25 = v37;
    *(void *)(v3 + 8) = 0x8000000000000000;
    unint64_t v11 = sub_100024558(v10);
    uint64_t v27 = *(void *)(v25 + 16);
    BOOL v28 = (v26 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (!__OFADD__(v27, v28)) {
      break;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    sub_100098E50();
    uint64_t v15 = v37;
  }
  char v30 = v26;
  if (*(void *)(v25 + 24) >= v29)
  {
    if ((v24 & 1) == 0)
    {
      sub_100098E50();
      uint64_t v25 = v37;
    }
    goto LABEL_17;
  }
  sub_100052F94(v29, v24);
  uint64_t v25 = v37;
  unint64_t v31 = sub_100024558(v10);
  if ((v30 & 1) != (v32 & 1))
  {
LABEL_30:
    uint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
  unint64_t v11 = v31;
LABEL_17:
  *(void *)(v3 + 8) = v25;
  swift_bridgeObjectRelease();
  char v33 = *(void **)(v3 + 8);
  swift_bridgeObjectRetain();
  if ((v30 & 1) == 0)
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1005E2FB0()) {
      unint64_t v34 = sub_10001E144((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      unint64_t v34 = &_swiftEmptySetSingleton;
    }
    sub_1001031E4(v11, v10, (uint64_t)v34, v33);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_100019734(&v37, v9);
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t type metadata accessor for MoveAndCopyMessages.CommandID()
{
  uint64_t result = qword_10070E580;
  if (!qword_10070E580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001944DC(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v4) {
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  while (1)
  {
    if (v6 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1005E3380();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v7 = *(unsigned __int8 *)(a1 + v5 + 32);
    uint64_t v8 = *(unsigned int *)(a1 + v5 + 36);
    uint64_t v9 = *(void *)(a1 + v5 + 40);
    uint64_t v10 = *(unsigned int *)(a1 + v5 + 48);
    uint64_t v12 = *(void *)(a1 + v5 + 56);
    unint64_t v11 = *(void *)(a1 + v5 + 64);
    uint64_t v34 = *(void *)(a1 + v5 + 72);
    char v33 = *(unsigned char *)(a1 + v5 + 80);
    swift_bridgeObjectRetain();
    sub_100008D24(v12, v11);
    if (!v9) {
      return swift_bridgeObjectRelease_n();
    }
    *(void *)&long long v37 = v7 | (v8 << 32);
    *((void *)&v37 + 1) = v9;
    *(void *)&long long v38 = v10;
    *((void *)&v38 + 1) = v12;
    unint64_t v39 = v11;
    unint64_t v36 = v11;
    uint64_t v35 = v12;
    char v13 = (void *)*a3;
    unint64_t v15 = sub_100024780((uint64_t)&v37);
    uint64_t v16 = v13[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      goto LABEL_21;
    }
    char v19 = v14;
    if (v13[3] < v18) {
      break;
    }
    if (a2)
    {
      if (v14) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1000991A4();
      if (v19) {
        goto LABEL_16;
      }
    }
LABEL_12:
    unint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    uint64_t v23 = v22[6] + 40 * v15;
    long long v24 = v38;
    *(_OWORD *)uint64_t v23 = v37;
    *(_OWORD *)(v23 + 16) = v24;
    *(void *)(v23 + 32) = v39;
    uint64_t v25 = v22[7] + 12 * v15;
    *(void *)uint64_t v25 = v34;
    *(unsigned char *)(v25 + 8) = v33;
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_22;
    }
    ++v6;
    void v22[2] = v28;
    v5 += 56;
    a2 = 1;
    if (v4 == v6) {
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_100053808(v18, a2 & 1);
  unint64_t v20 = sub_100024780((uint64_t)&v37);
  if ((v19 & 1) != (v21 & 1)) {
    goto LABEL_23;
  }
  unint64_t v15 = v20;
  if ((v19 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v29 = swift_allocError();
  swift_willThrow();
  uint64_t v40 = v29;
  swift_errorRetain();
  sub_10000566C(&qword_10070B730);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000094D4(v35, v36);
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
LABEL_24:
  sub_1005E2C80(30);
  v41._object = (void *)0x80000001005E4EC0;
  v41._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1005E1E30(v41);
  sub_1005E2E90();
  v42._countAndFlagsBits = 39;
  v42._object = (void *)0xE100000000000000;
  sub_1005E1E30(v42);
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

unint64_t sub_100194820(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v44 = a1;
  uint64_t v45 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v46 = v8;
  uint64_t v47 = 0;
  uint64_t v48 = v11 & v9;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100176608(&v41);
  unint64_t v12 = v43;
  if (v43 >> 60 == 15) {
    goto LABEL_16;
  }
  uint64_t v13 = v41;
  uint64_t v14 = v42;
  unint64_t v15 = (void *)*a5;
  unint64_t result = sub_100024260(v41);
  uint64_t v18 = v15[2];
  BOOL v19 = (v17 & 1) == 0;
  BOOL v20 = __OFADD__(v18, v19);
  uint64_t v21 = v18 + v19;
  if (v20)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  char v22 = v17;
  if (v15[3] < v21)
  {
    sub_100053BAC(v21, a4 & 1);
    unint64_t result = sub_100024260(v13);
    if ((v22 & 1) == (v23 & 1)) {
      goto LABEL_10;
    }
LABEL_8:
    unint64_t result = sub_1005E3380();
    __break(1u);
  }
  if ((a4 & 1) == 0)
  {
    unint64_t v26 = result;
    sub_1000993A0();
    unint64_t result = v26;
    long long v24 = (void *)*a5;
    if (v22) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
LABEL_10:
  long long v24 = (void *)*a5;
  if (v22)
  {
LABEL_11:
    uint64_t v25 = v24[7] + 16 * result;
    sub_1000094D4(*(void *)v25, *(void *)(v25 + 8));
    *(void *)uint64_t v25 = v14;
    *(void *)(v25 + 8) = v12;
LABEL_15:
    sub_100176608(&v41);
    unint64_t v12 = v43;
    if (v43 >> 60 == 15)
    {
LABEL_16:
      swift_release();
      swift_bridgeObjectRelease();
      sub_10003BC80();
      return swift_release();
    }
    char v22 = 1;
    while (1)
    {
      uint64_t v13 = v41;
      uint64_t v14 = v42;
      unint64_t v31 = (void *)*a5;
      unint64_t result = sub_100024260(v41);
      uint64_t v33 = v31[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v20 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v20) {
        goto LABEL_26;
      }
      a4 = v32;
      if (v31[3] < v35)
      {
        sub_100053BAC(v35, 1);
        unint64_t result = sub_100024260(v13);
        if ((a4 & 1) != (v36 & 1)) {
          goto LABEL_8;
        }
      }
      long long v37 = (void *)*a5;
      if (a4)
      {
        uint64_t v30 = v37[7] + 16 * result;
        sub_1000094D4(*(void *)v30, *(void *)(v30 + 8));
        *(void *)uint64_t v30 = v14;
        *(void *)(v30 + 8) = v12;
      }
      else
      {
        v37[(result >> 6) + 8] |= 1 << result;
        *(_DWORD *)(v37[6] + 4 * result) = v13;
        long long v38 = (void *)(v37[7] + 16 * result);
        *long long v38 = v14;
        v38[1] = v12;
        uint64_t v39 = v37[2];
        BOOL v20 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v20) {
          goto LABEL_27;
        }
        v37[2] = v40;
      }
      sub_100176608(&v41);
      unint64_t v12 = v43;
      if (v43 >> 60 == 15) {
        goto LABEL_16;
      }
    }
  }
LABEL_13:
  v24[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(v24[6] + 4 * result) = v13;
  BOOL v27 = (void *)(v24[7] + 16 * result);
  *BOOL v27 = v14;
  v27[1] = v12;
  uint64_t v28 = v24[2];
  BOOL v20 = __OFADD__(v28, 1);
  uint64_t v29 = v28 + 1;
  if (!v20)
  {
    v24[2] = v29;
    goto LABEL_15;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100194B00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = -v8;
  uint64_t v49 = a1;
  uint64_t v50 = a1 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  uint64_t v51 = v9;
  uint64_t v52 = 0;
  uint64_t v53 = v12 & v10;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10017679C((uint64_t)&v45);
  char v13 = v46;
  if (v46 != 2)
  {
    uint64_t v14 = v45;
    uint64_t v15 = v47;
    uint64_t v16 = v48;
    char v17 = (void *)*a5;
    unint64_t v18 = sub_100024260(v45);
    uint64_t v20 = v17[2];
    BOOL v21 = (v19 & 1) == 0;
    BOOL v22 = __OFADD__(v20, v21);
    uint64_t v23 = v20 + v21;
    if (v22) {
      goto LABEL_25;
    }
    LOBYTE(v5) = v19;
    if (v17[3] < v23)
    {
      sub_100053E88(v23, a4 & 1);
      unint64_t v18 = sub_100024260(v14);
      if ((v5 & 1) == (v24 & 1)) {
        goto LABEL_10;
      }
LABEL_8:
      unint64_t v18 = sub_1005E3380();
      __break(1u);
    }
    if ((a4 & 1) == 0) {
      goto LABEL_27;
    }
    while (1)
    {
LABEL_10:
      char v25 = v13 & 1;
      unint64_t v26 = (void *)*a5;
      if (v5)
      {
        uint64_t v27 = v26[7] + 24 * v18;
        sub_1000094D4(*(void *)(v27 + 8), *(void *)(v27 + 16));
        *(unsigned char *)uint64_t v27 = v25;
        *(void *)(v27 + 8) = v15;
        *(void *)(v27 + 16) = v16;
      }
      else
      {
        v26[(v18 >> 6) + 8] |= 1 << v18;
        *(_DWORD *)(v26[6] + 4 * v18) = v14;
        uint64_t v28 = v26[7] + 24 * v18;
        *(unsigned char *)uint64_t v28 = v25;
        *(void *)(v28 + 8) = v15;
        *(void *)(v28 + 16) = v16;
        uint64_t v29 = v26[2];
        BOOL v22 = __OFADD__(v29, 1);
        uint64_t v30 = v29 + 1;
        if (v22) {
          goto LABEL_26;
        }
        v26[2] = v30;
      }
      sub_10017679C((uint64_t)&v45);
      char v13 = v46;
      if (v46 == 2) {
        break;
      }
      uint64_t v16 = 24;
      while (1)
      {
        uint64_t v14 = v45;
        uint64_t v5 = v47;
        uint64_t v15 = v48;
        uint64_t v33 = (void *)*a5;
        unint64_t v18 = sub_100024260(v45);
        uint64_t v35 = v33[2];
        BOOL v36 = (v34 & 1) == 0;
        BOOL v22 = __OFADD__(v35, v36);
        uint64_t v37 = v35 + v36;
        if (v22) {
          break;
        }
        a4 = v34;
        if (v33[3] < v37)
        {
          sub_100053E88(v37, 1);
          unint64_t v18 = sub_100024260(v14);
          if ((a4 & 1) != (v38 & 1)) {
            goto LABEL_8;
          }
        }
        char v39 = v13 & 1;
        uint64_t v40 = (void *)*a5;
        if (a4)
        {
          uint64_t v32 = v40[7] + 24 * v18;
          sub_1000094D4(*(void *)(v32 + 8), *(void *)(v32 + 16));
          *(unsigned char *)uint64_t v32 = v39;
          *(void *)(v32 + 8) = v5;
          *(void *)(v32 + 16) = v15;
        }
        else
        {
          v40[(v18 >> 6) + 8] |= 1 << v18;
          *(_DWORD *)(v40[6] + 4 * v18) = v14;
          uint64_t v41 = v40[7] + 24 * v18;
          *(unsigned char *)uint64_t v41 = v39;
          *(void *)(v41 + 8) = v5;
          *(void *)(v41 + 16) = v15;
          uint64_t v42 = v40[2];
          BOOL v22 = __OFADD__(v42, 1);
          uint64_t v43 = v42 + 1;
          if (v22) {
            goto LABEL_26;
          }
          v40[2] = v43;
        }
        sub_10017679C((uint64_t)&v45);
        char v13 = v46;
        if (v46 == 2) {
          goto LABEL_15;
        }
      }
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      unint64_t v44 = v18;
      sub_100099550();
      unint64_t v18 = v44;
    }
  }
LABEL_15:
  swift_release();
  swift_bridgeObjectRelease();
  sub_10003BC80();
  return swift_release();
}

uint64_t sub_100194DFC(uint64_t a1)
{
  sub_10000566C(&qword_10070A7A8);
  uint64_t result = sub_1005E2FD0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    int v16 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * i);
    char v17 = (uint64_t *)(*(void *)(a1 + 56) + 16 * i);
    uint64_t result = *v17;
    unint64_t v18 = v17[1];
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_DWORD *)(v3[6] + 4 * i) = v16;
    uint64_t v19 = v3[7] + 24 * i;
    *(unsigned char *)uint64_t v19 = 0;
    *(void *)(v19 + 8) = result;
    *(void *)(v19 + 16) = v18;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    uint64_t result = sub_100008D24(result, v18);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100194FB8(uint64_t a1, uint64_t a2, char a3)
{
  sub_10000566C(&qword_10070A790);
  uint64_t result = sub_1005E2FD0();
  uint64_t v7 = (void *)result;
  int64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = result + 64;
  char v15 = a3 & 1;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v16 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v8 << 6))
  {
    int v21 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * i);
    uint64_t v22 = *(void *)(a1 + 56) + 24 * i;
    char v23 = *(unsigned char *)v22;
    uint64_t result = *(void *)(v22 + 8);
    unint64_t v24 = *(void *)(v22 + 16);
    *(void *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_DWORD *)(v7[6] + 4 * i) = v21;
    uint64_t v25 = v7[7] + 40 * i;
    *(unsigned char *)uint64_t v25 = v23;
    *(void *)(v25 + 8) = result;
    *(void *)(v25 + 16) = v24;
    *(void *)(v25 + 24) = a2;
    *(unsigned char *)(v25 + 32) = v15;
    uint64_t v26 = v7[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v7[2] = v28;
    uint64_t result = sub_100008D24(result, v24);
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_24;
    }
    if (v18 >= v13) {
      return (uint64_t)v7;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v18);
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v13) {
        return (uint64_t)v7;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v8);
      if (!v19)
      {
        int64_t v8 = v18 + 2;
        if (v18 + 2 >= v13) {
          return (uint64_t)v7;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v8);
        if (!v19) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v12 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    return (uint64_t)v7;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19)
  {
    int64_t v8 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v8 >= v13) {
      return (uint64_t)v7;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v8);
    ++v20;
    if (v19) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100195194(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

void *sub_10019530C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  char v5 = (uint64_t (*)(char *))isStackAllocationSafe;
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_100195AD8((unint64_t *)((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a3, v5);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = sub_100195AD8((unint64_t *)v10, v7, a3, v5);
    swift_release();
    swift_slowDealloc();
  }
  return v9;
}

void *sub_100195490(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  size_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v6);
  uint64_t v11 = (char *)&v24 - v10;
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v29 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v19 >= v29) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v28 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v29) {
        goto LABEL_27;
      }
      unint64_t v20 = *(void *)(v28 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v29) {
          goto LABEL_27;
        }
        unint64_t v20 = *(void *)(v28 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v16 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_22:
    sub_10019BFCC(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10019BFCC((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) < 2)
    {
      sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      goto LABEL_5;
    }
    if (EnumCaseMultiPayload == 3)
    {
LABEL_5:
      uint64_t result = (void *)sub_10019C054((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    }
    else
    {
      sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t result = (void *)sub_10019C054((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      *(unint64_t *)((char *)v26 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
LABEL_27:
        swift_retain();
        return sub_1000D1E88(v26, v25, v27, a3);
      }
    }
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v29) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v29) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v28 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1001957A4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  size_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v26 = 0;
  uint64_t v27 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v28 = (unint64_t)(v13 + 63) >> 6;
  while (2)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v11 << 6);
LABEL_22:
      sub_10019BFCC(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10019BFCC((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10019C054((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          *(unint64_t *)((char *)v25 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          if (!__OFADD__(v26++, 1)) {
            continue;
          }
          __break(1u);
          goto LABEL_26;
        case 3u:
          goto LABEL_5;
        default:
          sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
LABEL_5:
          sub_10019C054((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          continue;
      }
    }
    break;
  }
  int64_t v18 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v18 < v28)
  {
    unint64_t v19 = *(void *)(v27 + 8 * v18);
    ++v11;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v11 = v18 + 1;
    if (v18 + 1 >= v28) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v27 + 8 * v11);
    if (v19) {
      goto LABEL_21;
    }
    int64_t v11 = v18 + 2;
    if (v18 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v27 + 8 * v11);
    if (v19)
    {
LABEL_21:
      unint64_t v15 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v18 + 3;
    if (v20 < v28)
    {
      unint64_t v19 = *(void *)(v27 + 8 * v20);
      if (v19)
      {
        int64_t v11 = v20;
        goto LABEL_21;
      }
      while (1)
      {
        int64_t v11 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (v11 >= v28) {
          goto LABEL_26;
        }
        unint64_t v19 = *(void *)(v27 + 8 * v11);
        ++v20;
        if (v19) {
          goto LABEL_21;
        }
      }
LABEL_28:
      __break(1u);
      JUMPOUT(0x100195AC8);
    }
  }
LABEL_26:
  swift_retain();
  return sub_1000D1E88(v25, v24, v26, a3);
}

void *sub_100195AD8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  unint64_t v31 = a4;
  uint64_t v26 = a2;
  uint64_t v27 = a1;
  uint64_t v6 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (void *)__chkstk_darwin(v6 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v28 = 0;
  uint64_t v29 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  while (v16)
  {
    unint64_t v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_17:
    sub_10019BFCC(*(void *)(v12 + 48) + *(void *)(v7 + 72) * v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    char v22 = v31(v10);
    uint64_t result = (void *)sub_10019C054((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    if (v4) {
      return result;
    }
    if (v22)
    {
      *(unint64_t *)((char *)v27 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      BOOL v19 = __OFADD__(v28++, 1);
      if (v19) {
        goto LABEL_30;
      }
    }
  }
  BOOL v19 = __OFADD__(v11++, 1);
  if (v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v29 + 8 * v11);
  if (v20)
  {
LABEL_16:
    unint64_t v16 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_17;
  }
  int64_t v21 = v11 + 1;
  if (v11 + 1 >= v30) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v29 + 8 * v21);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v11 + 2;
  if (v11 + 2 >= v30) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v29 + 8 * v21);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v11 + 3;
  if (v11 + 3 >= v30)
  {
LABEL_27:
    uint64_t v23 = v26;
    uint64_t v24 = v28;
    swift_retain();
    return sub_1000D1E88(v27, v23, v24, v12);
  }
  unint64_t v20 = *(void *)(v29 + 8 * v21);
  if (v20)
  {
LABEL_15:
    int64_t v11 = v21;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v30) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v29 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100195D80()
{
  unint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v0 = v1;
  if (!result || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_1000934A4(v1);
    unint64_t v1 = result;
    unint64_t *v0 = result;
  }
  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(void *)(v3 + 16) = v5;
    sub_1005E20E0();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100195DF0(unint64_t a1, int a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  int64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v24 - v13;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) == 0)
    {
      if ((a1 & 0x8000000000000000) != 0 || 1 << *(unsigned char *)(a4 + 32) <= (uint64_t)a1)
      {
        __break(1u);
      }
      else if ((*(void *)(a4 + 8 * (a1 >> 6) + 56) >> a1))
      {
        if (*(_DWORD *)(a4 + 36) == a2)
        {
LABEL_17:
          uint64_t v15 = *(void *)(*(void *)(a4 + 48) + 8 * a1);
          swift_retain();
          return v15;
        }
        __break(1u);
        goto LABEL_10;
      }
      __break(1u);
      goto LABEL_21;
    }
LABEL_10:
    uint64_t result = sub_1005E2B30();
    if (result == *(_DWORD *)(a4 + 36))
    {
      uint64_t v25 = sub_1005E2B40();
      swift_unknownObjectRetain();
      sub_10000566C(&qword_100709FC8);
      swift_dynamicCast();
      uint64_t v16 = v26[0];
      swift_unknownObjectRelease();
      sub_1005E33F0();
      uint64_t v17 = *(void *)(*(void *)v16 + 96);
      v24[1] = v16;
      uint64_t v18 = v16 + v17;
      swift_beginAccess();
      sub_10019BFCC(v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10018A5EC((uint64_t)v26);
      sub_10019C054((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      Swift::Int v19 = sub_1005E3470();
      uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
      a1 = v19 & ~v20;
      if ((*(void *)(a4 + 56 + ((a1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a1))
      {
        uint64_t v21 = ~v20;
        while (1)
        {
          uint64_t v22 = *(void *)(*(void *)(a4 + 48) + 8 * a1);
          uint64_t v23 = v22 + *(void *)(*(void *)v22 + 96);
          swift_beginAccess();
          sub_10019BFCC(v23, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10019BFCC(v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          swift_retain();
          LOBYTE(v23) = sub_1001961B8((uint64_t)v14, (uint64_t)v11);
          sub_10019C054((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10019C054((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          swift_release();
          if (v23) {
            break;
          }
          a1 = (a1 + 1) & v21;
          if (((*(void *)(a4 + 56 + ((a1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a1) & 1) == 0) {
            goto LABEL_15;
          }
        }
      }
      else
      {
LABEL_15:
        swift_release();
        __break(1u);
      }
      swift_release();
      goto LABEL_17;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a3)
  {
    uint64_t v25 = sub_1005E2B70();
    swift_unknownObjectRetain();
    sub_10000566C(&qword_100709FC8);
    swift_dynamicCast();
    uint64_t v15 = v26[0];
    swift_unknownObjectRelease();
    return v15;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_100196180@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v2 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  unint64_t v3 = *((void *)a1 + 2);
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v3;
  *(_DWORD *)a2 = v2;
  return sub_100008D24(v4, v3);
}

uint64_t sub_100196198@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  int v2 = *a1;
  uint64_t v4 = *((void *)a1 + 2);
  unint64_t v3 = *((void *)a1 + 3);
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  *(_DWORD *)a2 = v2;
  return sub_100008D24(v4, v3);
}

uint64_t sub_1001961B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v35 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = sub_10000566C(&qword_100709FE8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  Swift::Int v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_10019BFCC(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_10019BFCC(a2, v20, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10019BFCC((uint64_t)v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v27 = *(void *)v13;
      uint64_t v28 = *((void *)v13 + 2);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_16;
      }
      uint64_t v29 = *(void *)v20;
      uint64_t v30 = *(unsigned int *)(v20 + 8);
      uint64_t v31 = *(void *)(v20 + 16);
      if ((*((unsigned int *)v13 + 2) | ((unint64_t)*((unsigned int *)v13 + 2) << 32)) != (v30 | (v30 << 32))
        || !sub_1000255D4(v27, v29))
      {
        goto LABEL_18;
      }
      char v26 = sub_100020AA4(v28, v31);
      goto LABEL_14;
    case 2u:
      sub_10019BFCC((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v21 = *(void *)v10;
      uint64_t v22 = *((void *)v10 + 2);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v23 = *(void *)v20;
      uint64_t v24 = *(unsigned int *)(v20 + 8);
      uint64_t v25 = *(void *)(v20 + 16);
      if ((*((unsigned int *)v10 + 2) | ((unint64_t)*((unsigned int *)v10 + 2) << 32)) == (v24 | (v24 << 32))
        && sub_1000255D4(v21, v23))
      {
        char v26 = sub_100021118(v22, v25);
LABEL_14:
        char v32 = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v32)
        {
LABEL_15:
          sub_10019C054((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          char v33 = 1;
          return v33 & 1;
        }
      }
      else
      {
LABEL_18:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_10019C054((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      goto LABEL_20;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_17;
      }
      goto LABEL_15;
    default:
      sub_10019BFCC((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100007A48((uint64_t)v15, &qword_100709E38);
LABEL_17:
        sub_100007A48((uint64_t)v19, &qword_100709FE8);
LABEL_20:
        char v33 = 0;
      }
      else
      {
        sub_10001FDF0(v20, (uint64_t)v6, &qword_100709E38);
        sub_10001FC6C();
        char v33 = sub_1005E35A0();
        sub_100007A48((uint64_t)v6, &qword_100709E38);
        sub_100007A48((uint64_t)v15, &qword_100709E38);
        sub_10019C054((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      }
      return v33 & 1;
  }
}

void *sub_10019660C(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v31 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v7 = sub_1005E2B50();
  }
  else {
    uint64_t v7 = *(void *)(a1 + 16);
  }
  uint64_t result = _swiftEmptyArrayStorage;
  if (v7)
  {
    BOOL v36 = _swiftEmptyArrayStorage;
    sub_10001AA14(0, v7 & ~(v7 >> 63), 0);
    if (v31)
    {
      uint64_t result = (void *)sub_1005E2B00();
      unsigned __int8 v10 = 1;
    }
    else
    {
      uint64_t result = (void *)sub_1001A9060(a1);
      unsigned __int8 v10 = v11 & 1;
    }
    unint64_t v33 = (unint64_t)result;
    uint64_t v34 = v9;
    unsigned __int8 v35 = v10;
    if (v7 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
      uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0) {
        uint64_t v12 = a1;
      }
      uint64_t v28 = v12;
      uint64_t v29 = a1;
      uint64_t v27 = v6;
      do
      {
        while (1)
        {
          uint64_t v20 = v33;
          uint64_t v19 = v34;
          uint64_t v21 = v35;
          v32[0] = sub_100195DF0(v33, v34, v35, a1);
          swift_getAtKeyPath();
          swift_release();
          uint64_t v22 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10001AA14(0, v22[2] + 1, 1);
            uint64_t v22 = v36;
          }
          unint64_t v24 = v22[2];
          unint64_t v23 = v22[3];
          if (v24 >= v23 >> 1)
          {
            sub_10001AA14(v23 > 1, v24 + 1, 1);
            uint64_t v22 = v36;
          }
          void v22[2] = v24 + 1;
          uint64_t result = (void *)sub_10019C0B4((uint64_t)v6, (uint64_t)v22+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v24, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          if (v31) {
            break;
          }
          a1 = v29;
          uint64_t v13 = sub_1000D3970(v20, v19, v21, v29);
          uint64_t v14 = v4;
          uint64_t v16 = v15;
          char v18 = v17;
          sub_100060FF0(v20, v19, v21);
          unint64_t v33 = v13;
          uint64_t v34 = v16;
          uint64_t v4 = v14;
          uint64_t v6 = v27;
          unsigned __int8 v35 = v18 & 1;
          if (!--v7) {
            goto LABEL_22;
          }
        }
        a1 = v29;
        if ((v21 & 1) == 0) {
          goto LABEL_25;
        }
        if (sub_1005E2B20()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_10000566C(&qword_10070E690);
        uint64_t v25 = (void (*)(uint64_t *, void))sub_1005E22B0();
        sub_1005E2BA0();
        v25(v32, 0);
        --v7;
      }
      while (v7);
LABEL_22:
      sub_100060FF0(v33, v34, v35);
      return v36;
    }
  }
  return result;
}

uint64_t sub_100196934(uint64_t a1, uint64_t a2, int a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (!v3) {
    return (uint64_t)v4;
  }
  uint64_t v5 = a1;
  uint64_t v47 = _swiftEmptyArrayStorage;
  sub_10001AE54(0, v3, 0);
  uint64_t v4 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100103FDC(v5);
  uint64_t v8 = result;
  uint64_t v9 = 0;
  uint64_t v10 = v5 + 64;
  uint64_t v27 = v5 + 80;
  int64_t v28 = v3;
  int v29 = v7;
  uint64_t v30 = v5 + 64;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(v5 + 32))
  {
    unint64_t v13 = (unint64_t)v8 >> 6;
    if ((*(void *)(v10 + 8 * ((unint64_t)v8 >> 6)) & (1 << v8)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v5 + 36) != v7) {
      goto LABEL_24;
    }
    int v14 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v8);
    uint64_t v15 = (unsigned __int8 *)(*(void *)(v5 + 56) + 40 * v8);
    uint64_t v16 = v5;
    uint64_t v18 = *((void *)v15 + 1);
    unint64_t v17 = *((void *)v15 + 2);
    uint64_t v40 = *((void *)v15 + 3);
    unsigned __int8 v39 = v15[32];
    MoveOrCopy.init(operation:sourceMessage:targetMailbox:targetMessage:)(*v15, v14, a2, a3, v18, v17, (uint64_t)v41);
    int v37 = v42;
    char v38 = v41[0];
    uint64_t v36 = v43;
    int v35 = v44;
    uint64_t v33 = v46;
    uint64_t v34 = v45;
    sub_100008D24(v18, v17);
    uint64_t v47 = v4;
    unint64_t v19 = v4[2];
    unint64_t v20 = v4[3];
    uint64_t result = swift_bridgeObjectRetain();
    if (v19 >= v20 >> 1)
    {
      uint64_t result = sub_10001AE54(v20 > 1, v19 + 1, 1);
      uint64_t v4 = v47;
    }
    v4[2] = v19 + 1;
    uint64_t v21 = &v4[7 * v19];
    *((unsigned char *)v21 + 32) = v38;
    *((_DWORD *)v21 + 9) = v37;
    v21[5] = v36;
    *((_DWORD *)v21 + 12) = v35;
    v21[7] = v34;
    v21[8] = v33;
    v21[9] = v40;
    *((unsigned char *)v21 + 80) = v39;
    int64_t v11 = 1 << *(unsigned char *)(v16 + 32);
    if (v8 >= v11) {
      goto LABEL_25;
    }
    uint64_t v10 = v30;
    uint64_t v22 = *(void *)(v30 + 8 * v13);
    if ((v22 & (1 << v8)) == 0) {
      goto LABEL_26;
    }
    uint64_t v5 = v16;
    int v7 = v29;
    if (*(_DWORD *)(v16 + 36) != v29) {
      goto LABEL_27;
    }
    unint64_t v23 = v22 & (-2 << (v8 & 0x3F));
    if (v23)
    {
      int64_t v11 = __clz(__rbit64(v23)) | v8 & 0xFFFFFFFFFFFFFFC0;
      int64_t v12 = v28;
    }
    else
    {
      unint64_t v24 = v13 + 1;
      unint64_t v25 = (unint64_t)(v11 + 63) >> 6;
      int64_t v12 = v28;
      if (v13 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v30 + 8 * v24);
        if (v26)
        {
LABEL_20:
          int64_t v11 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v13)
          {
            unint64_t v26 = *(void *)(v27 + 8 * v13++);
            if (v26)
            {
              unint64_t v24 = v13 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v9;
    uint64_t v8 = v11;
    if (v9 == v12) {
      return (uint64_t)v4;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100196BF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - v7;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1005E2FB0()) {
    uint64_t v9 = sub_10001E144((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v9 = &_swiftEmptySetSingleton;
  }
  sub_1000C078C((uint64_t)_swiftEmptyArrayStorage);
  sub_1000C078C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v16 = v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_10019BFCC(v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10019BFCC((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10000566C(&qword_100709FC8);
      uint64_t v13 = swift_allocObject();
      sub_10019C0B4((uint64_t)v6, v13 + *(void *)(*(void *)v13 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_100019734(&v15, v13);
      swift_release();
      sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      v11 += v12;
      --v10;
    }
    while (v10);
    return v16;
  }
  return v9;
}

void *sub_100196E1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = sub_100196BF0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v11 = v10;
  sub_1000C059C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v19 = v9;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    v17[1] = v11;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v14 = *(void *)(v3 + 72);
    do
    {
      sub_10019BFCC(v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10019BFCC((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10000566C(&qword_100709FC8);
      uint64_t v15 = swift_allocObject();
      sub_10019C0B4((uint64_t)v6, v15 + *(void *)(*(void *)v15 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_100019734(&v18, v15);
      swift_release();
      sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      v13 += v14;
      --v12;
    }
    while (v12);
    return v19;
  }
  return v9;
}

unsigned char *storeEnumTagSinglePayload for MoveAndCopyMessages.CommandID.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001970ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.CommandID.Kind()
{
  return &type metadata for MoveAndCopyMessages.CommandID.Kind;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.Move()
{
  return &type metadata for MoveAndCopyMessages.Move;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.Copy()
{
  return &type metadata for MoveAndCopyMessages.Copy;
}

uint64_t _s13IMAP2Behavior19MoveAndCopyMessagesV16CompletedCommandVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13IMAP2Behavior19MoveAndCopyMessagesV16CompletedCommandVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13IMAP2Behavior19MoveAndCopyMessagesV16CompletedCommandVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.CompletedCommand()
{
  return &type metadata for MoveAndCopyMessages.CompletedCommand;
}

uint64_t destroy for MoveAndCopyMessages(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MoveAndCopyMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = a2 + 56;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 56, v5, v7);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MoveAndCopyMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_100022498((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MoveAndCopyMessages(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for MoveAndCopyMessages(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAndCopyMessages(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages()
{
  return &type metadata for MoveAndCopyMessages;
}

_DWORD *sub_100197814(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (_DWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[2] = a2[2];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100197990(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_10000566C(&qword_100709E60);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

_DWORD *sub_100197A44(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    *(void *)a1 = *(void *)a2;
    a1[2] = a2[2];
    *((void *)a1 + 2) = *((void *)a2 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_100197B7C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10019C054((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[2] = a2[2];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_10000566C(&qword_100709E60);
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_100197CD8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10019C054((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_100197DB4()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_100197E48()
{
  return sub_100198000(&qword_10070E5B8);
}

unint64_t sub_100197E80()
{
  unint64_t result = qword_10070E5C0;
  if (!qword_10070E5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E5C0);
  }
  return result;
}

unint64_t sub_100197ED4(uint64_t a1)
{
  unint64_t result = sub_100197EFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100197EFC()
{
  unint64_t result = qword_10070E678;
  if (!qword_10070E678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E678);
  }
  return result;
}

unint64_t sub_100197F54()
{
  unint64_t result = qword_10070E680;
  if (!qword_10070E680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E680);
  }
  return result;
}

unint64_t sub_100197FAC()
{
  unint64_t result = qword_10070E688;
  if (!qword_10070E688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E688);
  }
  return result;
}

uint64_t sub_100198000(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MoveAndCopyMessages.CommandID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100198044(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v10 = sub_100192B94(a2);
  uint64_t v11 = sub_100192B94(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v46 = v10[2];
  if (v46)
  {
    uint64_t v41 = v11;
    unint64_t v12 = 0;
    uint64_t v44 = a4 << 32;
    uint64_t v45 = v10 + 4;
    int v42 = v10;
    uint64_t v43 = a5;
    while (v12 < v10[2])
    {
      if (v12 >= v11[2]) {
        goto LABEL_22;
      }
      if (!*(void *)(a5 + 16)) {
        goto LABEL_23;
      }
      uint64_t v14 = *((unsigned int *)v45 + v12);
      uint64_t v15 = *((unsigned int *)v11 + v12 + 8);
      uint64_t v16 = sub_100024260(v14);
      if ((v17 & 1) == 0) {
        goto LABEL_24;
      }
      if (!*(void *)(a5 + 16)) {
        goto LABEL_25;
      }
      char v18 = *(unsigned char *)(*(void *)(a5 + 56) + 24 * v16);
      uint64_t v19 = sub_100024260(v14);
      if ((v20 & 1) == 0) {
        goto LABEL_26;
      }
      uint64_t v47 = v15;
      char v21 = v18;
      uint64_t v22 = *(void *)(a5 + 56) + 24 * v19;
      uint64_t v23 = *(void *)(v22 + 8);
      unint64_t v24 = *(void *)(v22 + 16);
      sub_100008D24(v23, v24);
      unint64_t v25 = a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v48 = a1;
      unint64_t v28 = sub_100024260(v14);
      uint64_t v29 = a1[2];
      BOOL v30 = (v27 & 1) == 0;
      uint64_t v31 = v29 + v30;
      if (__OFADD__(v29, v30)) {
        goto LABEL_27;
      }
      char v32 = v27;
      if (v25[3] >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10009970C();
        }
      }
      else
      {
        sub_100054188(v31, isUniquelyReferenced_nonNull_native);
        uint64_t v33 = sub_100024260(v14);
        if ((v32 & 1) != (v34 & 1)) {
          goto LABEL_29;
        }
        unint64_t v28 = v33;
      }
      uint64_t v35 = v44 | v47;
      if (v32)
      {
        a1 = v48;
        uint64_t v13 = v48[7] + 40 * v28;
        sub_1000094D4(*(void *)(v13 + 8), *(void *)(v13 + 16));
        *(unsigned char *)uint64_t v13 = v21;
        *(void *)(v13 + 8) = v23;
        *(void *)(v13 + 16) = v24;
        *(void *)(v13 + 24) = v35;
        *(unsigned char *)(v13 + 32) = 0;
      }
      else
      {
        v48[(v28 >> 6) + 8] |= 1 << v28;
        *(_DWORD *)(v48[6] + 4 * v28) = v14;
        uint64_t v36 = v48[7] + 40 * v28;
        *(unsigned char *)uint64_t v36 = v21;
        *(void *)(v36 + 8) = v23;
        *(void *)(v36 + 16) = v24;
        *(void *)(v36 + 24) = v35;
        *(unsigned char *)(v36 + 32) = 0;
        uint64_t v37 = v48[2];
        BOOL v38 = __OFADD__(v37, 1);
        uint64_t v39 = v37 + 1;
        if (v38) {
          goto LABEL_28;
        }
        a1 = v48;
        v48[2] = v39;
      }
      ++v12;
      swift_bridgeObjectRelease();
      long long v10 = v42;
      a5 = v43;
      uint64_t v11 = v41;
      if (v46 == v12) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = sub_1005E3380();
    __break(1u);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_100198318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v10 = (char *)&v25 - v9;
  uint64_t v11 = a1 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a1 + 56);
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  while (v14)
  {
    unint64_t v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v18 = v17 | (v16 << 6);
LABEL_21:
    sub_10019BFCC(*(void *)(a1 + 48) + *(void *)(v5 + 72) * v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10019C0B4((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    if (!*(void *)(a2 + 16) || (unint64_t v22 = sub_1000244EC((uint64_t)v8), (v23 & 1) == 0))
    {
      sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
LABEL_26:
      swift_release();
      return 0;
    }
    char v24 = *(unsigned char *)(*(void *)(a2 + 56) + v22);
    uint64_t result = sub_10019C054((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    if ((v24 & 1) == 0) {
      goto LABEL_26;
    }
  }
  int64_t v19 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v19 >= v26) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v19);
  ++v16;
  if (v20) {
    goto LABEL_20;
  }
  int64_t v16 = v19 + 1;
  if (v19 + 1 >= v26) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v16);
  if (v20) {
    goto LABEL_20;
  }
  int64_t v16 = v19 + 2;
  if (v19 + 2 >= v26) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v16);
  if (v20) {
    goto LABEL_20;
  }
  int64_t v16 = v19 + 3;
  if (v19 + 3 >= v26) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v16);
  if (v20) {
    goto LABEL_20;
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v26)
  {
LABEL_28:
    swift_release();
    return 1;
  }
  unint64_t v20 = *(void *)(v11 + 8 * v21);
  int64_t v16 = v21;
  if (v20)
  {
LABEL_20:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v11 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1001985D8(uint64_t a1)
{
  return sub_1001919E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001985E0(uint64_t a1)
{
  return sub_100191E08(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100198600(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v165 = sub_10000566C(&qword_100709FE8);
  __chkstk_darwin(v165 - 8);
  Swift::UInt v7 = (Swift::UInt)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v139 = (uint64_t)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v134 = (uint64_t)&v133 - v11;
  unint64_t v12 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v148 = (uint64_t)&v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v147 = (uint64_t)&v133 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v146 = (uint64_t)&v133 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v171 = (char *)&v133 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v168 = (uint64_t)&v133 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v141 = (uint64_t)&v133 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v143 = (uint64_t)&v133 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (uint64_t)&v133 - v28;
  __chkstk_darwin(v27);
  uint64_t v150 = (uint64_t)&v133 - v30;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
    goto LABEL_152;
  }
LABEL_2:
  uint64_t v31 = &_swiftEmptySetSingleton;
LABEL_3:
  unint64_t v191 = (unint64_t)v31;
  sub_10000566C(&qword_10070E698);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1005F6740;
  *(void *)(v32 + 32) = a1;
  uint64_t v181 = v32;
  sub_1005E20E0();
  uint64_t v190 = v181;
  uint64_t v33 = *(void *)(*(void *)a2 + 96);
  swift_retain();
  unint64_t v34 = sub_100193F80();
  if (v34)
  {
    unint64_t v35 = v34;
    uint64_t v149 = a2 + v33;
    v140 = (char *)&type metadata for Swift.AnyObject + 8;
    unint64_t v152 = v12;
    Swift::UInt v153 = v7;
    uint64_t v133 = a3;
    uint64_t v138 = v29;
LABEL_6:
    uint64_t v36 = *(void *)(a3 + 16);
    swift_retain();
    if (v36)
    {
      unint64_t v37 = sub_100024558(v35);
      a2 = (unint64_t)&_swiftEmptySetSingleton;
      if (v38)
      {
        a2 = *(void *)(*(void *)(a3 + 56) + 8 * v37);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      a2 = (unint64_t)&_swiftEmptySetSingleton;
    }
    unint64_t v137 = v35;
    swift_release();
    if ((a2 & 0xC000000000000001) != 0)
    {
      sub_1005E2B10();
      sub_10000566C(&qword_100709FC8);
      sub_100007494(&qword_10070E6A0, &qword_100709FC8);
      sub_1005E22D0();
      a2 = v192;
      unint64_t v145 = v193;
      uint64_t v39 = v194;
      unint64_t v12 = v195;
      a1 = v196;
    }
    else
    {
      unint64_t v12 = 0;
      uint64_t v40 = -1 << *(unsigned char *)(a2 + 32);
      uint64_t v41 = *(void *)(a2 + 56);
      unint64_t v145 = a2 + 56;
      uint64_t v42 = ~v40;
      uint64_t v43 = -v40;
      if (v43 < 64) {
        uint64_t v44 = ~(-1 << v43);
      }
      else {
        uint64_t v44 = -1;
      }
      a1 = v44 & v41;
      uint64_t v39 = v42;
    }
    a3 = (uint64_t)v171;
    uint64_t v142 = a2 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v136 = v39;
    int64_t v144 = (unint64_t)(v39 + 64) >> 6;
    unint64_t v151 = a2;
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_21;
    }
    while (1)
    {
LABEL_17:
      uint64_t v45 = sub_1005E2B80();
      if (!v45) {
        goto LABEL_5;
      }
      uint64_t v172 = v45;
      swift_unknownObjectRetain();
      sub_10000566C(&qword_100709FC8);
      swift_dynamicCast();
      uint64_t v46 = v181;
      swift_unknownObjectRelease();
      unint64_t v47 = v12;
      uint64_t v157 = a1;
      if (!v46) {
        goto LABEL_5;
      }
LABEL_38:
      unint64_t v156 = v47;
      uint64_t v52 = *(void *)(*(void *)v46 + 96);
      uint64_t v158 = v46;
      uint64_t v53 = v46 + v52;
      swift_beginAccess();
      uint64_t v170 = v53;
      uint64_t v54 = v53;
      uint64_t v55 = v150;
      sub_10019BFCC(v54, v150, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      uint64_t v56 = v149;
      swift_beginAccess();
      sub_10019BFCC(v56, v29, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      char v57 = sub_1001961B8(v55, v29);
      sub_10019C054(v29, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10019C054(v55, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      if (v57) {
        break;
      }
      uint64_t v58 = (void *)v191;
      if ((v191 & 0xC000000000000001) == 0)
      {
        if (!*(void *)(v191 + 16)) {
          goto LABEL_139;
        }
        sub_1005E33F0();
        uint64_t v60 = v143;
        sub_10019BFCC(v170, v143, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        sub_10019BFCC(v60, v141, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        unint64_t v169 = v58;
        switch(EnumCaseMultiPayload)
        {
          case 1:
            unint64_t v135 = *(void *)v141;
            a2 = *(unsigned int *)(v141 + 8);
            a1 = *(void *)(v141 + 16);
            sub_1005E3410(2uLL);
            sub_1005E3410(a2 | (a2 << 32));
            uint64_t v63 = *(void *)(a1 + 64);
            unint64_t v154 = a1 + 64;
            uint64_t v64 = 1 << *(unsigned char *)(a1 + 32);
            if (v64 < 64) {
              uint64_t v65 = ~(-1 << v64);
            }
            else {
              uint64_t v65 = -1;
            }
            unint64_t v12 = v65 & v63;
            int64_t v155 = (unint64_t)(v64 + 63) >> 6;
            uint64_t v166 = v182;
            uint64_t v167 = v181;
            uint64_t v163 = v184;
            uint64_t v164 = v183;
            uint64_t v161 = v186;
            uint64_t v162 = v185;
            unint64_t v66 = v189;
            int64_t v159 = v188;
            uint64_t v160 = v187;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            Swift::UInt v7 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              if (v12)
              {
                unint64_t v67 = __clz(__rbit64(v12));
                v12 &= v12 - 1;
                unint64_t v68 = v67 | (v29 << 6);
                goto LABEL_50;
              }
              int64_t v73 = v29 + 1;
              if (__OFADD__(v29, 1))
              {
                __break(1u);
LABEL_148:
                __break(1u);
                goto LABEL_149;
              }
              unint64_t v12 = v152;
              if (v73 < v155)
              {
                unint64_t v74 = *(void *)(v154 + 8 * v73);
                ++v29;
                if (v74) {
                  goto LABEL_65;
                }
                uint64_t v29 = v73 + 1;
                if (v73 + 1 < v155)
                {
                  unint64_t v74 = *(void *)(v154 + 8 * v29);
                  if (v74) {
                    goto LABEL_65;
                  }
                  uint64_t v29 = v73 + 2;
                  if (v73 + 2 < v155)
                  {
                    unint64_t v74 = *(void *)(v154 + 8 * v29);
                    if (v74) {
                      goto LABEL_65;
                    }
                    int64_t v75 = v73 + 3;
                    if (v75 < v155)
                    {
                      unint64_t v74 = *(void *)(v154 + 8 * v75);
                      if (v74)
                      {
                        uint64_t v29 = v75;
LABEL_65:
                        unint64_t v12 = (v74 - 1) & v74;
                        unint64_t v68 = __clz(__rbit64(v74)) + (v29 << 6);
LABEL_50:
                        Swift::UInt32 v69 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v68);
                        uint64_t v70 = (unsigned __int8 *)(*(void *)(a1 + 56) + 24 * v68);
                        Swift::UInt v71 = *v70;
                        uint64_t v72 = *((void *)v70 + 1);
                        a2 = *((void *)v70 + 2);
                        uint64_t v172 = v167;
                        uint64_t v173 = v166;
                        uint64_t v174 = v164;
                        uint64_t v175 = v163;
                        uint64_t v176 = v162;
                        uint64_t v177 = v161;
                        uint64_t v178 = v160;
                        int64_t v179 = v159;
                        unint64_t v180 = v66;
                        sub_1005E3440(v69);
                        sub_1005E3410(v71);
                        sub_100008D24(v72, a2);
                        sub_100008D24(v72, a2);
                        sub_1005E08B0();
                        sub_1000094D4(v72, a2);
                        sub_1000094D4(v72, a2);
                        v7 ^= sub_1005E3470();
                        a3 = (uint64_t)v171;
                        continue;
                      }
                      while (1)
                      {
                        uint64_t v29 = v75 + 1;
                        if (__OFADD__(v75, 1)) {
                          break;
                        }
                        if (v29 >= v155) {
                          goto LABEL_88;
                        }
                        unint64_t v74 = *(void *)(v154 + 8 * v29);
                        ++v75;
                        if (v74) {
                          goto LABEL_65;
                        }
                      }
LABEL_149:
                      __break(1u);
LABEL_150:
                      __break(1u);
LABEL_151:
                      __break(1u);
LABEL_152:
                      if (!sub_1005E2FB0()) {
                        goto LABEL_2;
                      }
                      uint64_t v31 = sub_10001E144((unint64_t)_swiftEmptyArrayStorage);
                      goto LABEL_3;
                    }
                  }
                }
              }
              break;
            }
LABEL_88:
            swift_release();
            sub_1005E3410(v7);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            Swift::UInt v7 = v153;
            uint64_t v58 = v169;
LABEL_89:
            sub_10019C054(v143, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
            Swift::Int v88 = sub_1005E3470();
            uint64_t v89 = -1 << *((unsigned char *)v58 + 32);
            unint64_t v90 = v88 & ~v89;
            uint64_t v167 = (uint64_t)(v58 + 7);
            uint64_t v91 = v168;
            if (((*(void *)((char *)v58 + ((v90 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v90) & 1) == 0)
            {
LABEL_138:
              swift_bridgeObjectRelease();
              uint64_t v29 = v138;
              goto LABEL_139;
            }
            uint64_t v166 = ~v89;
            break;
          case 2:
            unint64_t v154 = *(void *)v141;
            a2 = *(unsigned int *)(v141 + 8);
            a1 = *(void *)(v141 + 16);
            sub_1005E3410(3uLL);
            sub_1005E3410(a2 | (a2 << 32));
            uint64_t v76 = *(void *)(a1 + 64);
            int64_t v155 = a1 + 64;
            uint64_t v77 = 1 << *(unsigned char *)(a1 + 32);
            if (v77 < 64) {
              uint64_t v78 = ~(-1 << v77);
            }
            else {
              uint64_t v78 = -1;
            }
            a3 = v78 & v76;
            uint64_t v166 = v182;
            uint64_t v167 = v181;
            uint64_t v163 = v184;
            uint64_t v164 = v183;
            uint64_t v161 = v186;
            uint64_t v162 = v185;
            int64_t v79 = v188;
            int64_t v159 = (unint64_t)(v77 + 63) >> 6;
            uint64_t v160 = v187;
            unint64_t v12 = v189;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            Swift::UInt v7 = 0;
            uint64_t v29 = 0;
            while (2)
            {
              if (a3)
              {
                unint64_t v80 = __clz(__rbit64(a3));
                a3 &= a3 - 1;
                unint64_t v81 = v80 | (v29 << 6);
                goto LABEL_71;
              }
              int64_t v85 = v29 + 1;
              if (__OFADD__(v29, 1)) {
                goto LABEL_148;
              }
              a3 = (uint64_t)v171;
              if (v85 >= v159) {
                goto LABEL_88;
              }
              unint64_t v86 = *(void *)(v155 + 8 * v85);
              ++v29;
              if (v86) {
                goto LABEL_86;
              }
              uint64_t v29 = v85 + 1;
              if (v85 + 1 >= v159) {
                goto LABEL_88;
              }
              unint64_t v86 = *(void *)(v155 + 8 * v29);
              if (v86) {
                goto LABEL_86;
              }
              uint64_t v29 = v85 + 2;
              if (v85 + 2 >= v159) {
                goto LABEL_88;
              }
              unint64_t v86 = *(void *)(v155 + 8 * v29);
              if (v86) {
                goto LABEL_86;
              }
              int64_t v87 = v85 + 3;
              if (v87 >= v159) {
                goto LABEL_88;
              }
              unint64_t v86 = *(void *)(v155 + 8 * v87);
              if (v86)
              {
                uint64_t v29 = v87;
LABEL_86:
                a3 = (v86 - 1) & v86;
                unint64_t v81 = __clz(__rbit64(v86)) + (v29 << 6);
LABEL_71:
                Swift::UInt32 v82 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v81);
                uint64_t v83 = (unint64_t *)(*(void *)(a1 + 56) + 16 * v81);
                a2 = *v83;
                unint64_t v84 = v83[1];
                uint64_t v172 = v167;
                uint64_t v173 = v166;
                uint64_t v174 = v164;
                uint64_t v175 = v163;
                uint64_t v176 = v162;
                uint64_t v177 = v161;
                uint64_t v178 = v160;
                int64_t v179 = v79;
                unint64_t v180 = v12;
                sub_1005E3440(v82);
                sub_100008D24(a2, v84);
                sub_100008D24(a2, v84);
                sub_1005E08B0();
                sub_1000094D4(a2, v84);
                sub_1000094D4(a2, v84);
                v7 ^= sub_1005E3470();
                continue;
              }
              break;
            }
            while (1)
            {
              uint64_t v29 = v87 + 1;
              if (__OFADD__(v87, 1)) {
                goto LABEL_150;
              }
              if (v29 >= v159) {
                goto LABEL_88;
              }
              unint64_t v86 = *(void *)(v155 + 8 * v29);
              ++v87;
              if (v86) {
                goto LABEL_86;
              }
            }
          case 3:
            sub_1005E3410(1uLL);
            swift_bridgeObjectRetain();
            goto LABEL_89;
          default:
            uint64_t v62 = v134;
            sub_10001FDF0(v141, v134, &qword_100709E38);
            sub_1005E3410(0);
            swift_bridgeObjectRetain();
            sub_10000566C(&qword_100709E60);
            sub_10001FBA4();
            uint64_t v58 = v169;
            sub_1005E19C0();
            sub_100007A48(v62, &qword_100709E38);
            goto LABEL_89;
        }
        while (2)
        {
          uint64_t v92 = *(void *)(v58[6] + 8 * v90);
          uint64_t v93 = v92 + *(void *)(*(void *)v92 + 96);
          swift_beginAccess();
          sub_10019BFCC(v93, v91, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10019BFCC(v170, a3, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          uint64_t v94 = v7 + *(int *)(v165 + 48);
          sub_10019BFCC(v91, v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          sub_10019BFCC(a3, v94, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v97 = v147;
              sub_10019BFCC(v7, v147, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              uint64_t v98 = *(void *)v97;
              uint64_t v99 = *(void *)(v97 + 16);
              if (swift_getEnumCaseMultiPayload() != 1) {
                goto LABEL_91;
              }
              uint64_t v100 = *(void *)v94;
              uint64_t v101 = *(unsigned int *)(v94 + 8);
              uint64_t v102 = *(void *)(v94 + 16);
              if ((*(unsigned int *)(v97 + 8) | ((unint64_t)*(unsigned int *)(v97 + 8) << 32)) != (v101 | (v101 << 32))) {
                goto LABEL_136;
              }
              uint64_t v103 = *(void *)(v98 + 16);
              if (v103 != *(void *)(v100 + 16)) {
                goto LABEL_136;
              }
              if (!v103 || v98 == v100) {
                goto LABEL_104;
              }
              if (*(unsigned __int8 *)(v98 + 32) != *(unsigned __int8 *)(v100 + 32)) {
                goto LABEL_136;
              }
              if (v103 == 1) {
                goto LABEL_104;
              }
              if (*(unsigned __int8 *)(v98 + 33) != *(unsigned __int8 *)(v100 + 33)) {
                goto LABEL_136;
              }
              if (v103 == 2) {
                goto LABEL_104;
              }
              if (*(unsigned __int8 *)(v98 + 34) != *(unsigned __int8 *)(v100 + 34)) {
                goto LABEL_136;
              }
              if (v103 == 3) {
                goto LABEL_104;
              }
              if (*(unsigned __int8 *)(v98 + 35) == *(unsigned __int8 *)(v100 + 35))
              {
                uint64_t v118 = (unsigned __int8 *)(v98 + 36);
                uint64_t v119 = (unsigned __int8 *)(v100 + 36);
                uint64_t v120 = v103 - 4;
                do
                {
                  if (!v120)
                  {
LABEL_104:
                    swift_retain();
                    char v104 = sub_100020AA4(v99, v102);
                    goto LABEL_113;
                  }
                  int v122 = *v118++;
                  int v121 = v122;
                  int v123 = *v119++;
                  --v120;
                }
                while (v121 == v123);
              }
              goto LABEL_136;
            case 2u:
              uint64_t v105 = v148;
              sub_10019BFCC(v7, v148, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              uint64_t v106 = *(void *)v105;
              uint64_t v107 = *(void *)(v105 + 16);
              if (swift_getEnumCaseMultiPayload() != 2)
              {
LABEL_91:
                swift_retain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                Swift::UInt v7 = v153;
                uint64_t v58 = v169;
LABEL_92:
                sub_100007A48(v7, &qword_100709FE8);
LABEL_93:
                sub_10019C054(a3, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                uint64_t v91 = v168;
                sub_10019C054(v168, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                swift_release();
                unint64_t v90 = (v90 + 1) & v166;
                if (((*(void *)(v167 + ((v90 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v90) & 1) == 0) {
                  goto LABEL_138;
                }
                continue;
              }
              uint64_t v108 = *(void *)v94;
              uint64_t v109 = *(unsigned int *)(v94 + 8);
              uint64_t v110 = *(void *)(v94 + 16);
              if ((*(unsigned int *)(v105 + 8) | ((unint64_t)*(unsigned int *)(v105 + 8) << 32)) != (v109 | (v109 << 32))) {
                goto LABEL_136;
              }
              uint64_t v111 = *(void *)(v106 + 16);
              if (v111 != *(void *)(v108 + 16)) {
                goto LABEL_136;
              }
              if (!v111 || v106 == v108) {
                goto LABEL_112;
              }
              if (*(unsigned __int8 *)(v106 + 32) != *(unsigned __int8 *)(v108 + 32)) {
                goto LABEL_136;
              }
              if (v111 == 1) {
                goto LABEL_112;
              }
              if (*(unsigned __int8 *)(v106 + 33) != *(unsigned __int8 *)(v108 + 33)) {
                goto LABEL_136;
              }
              if (v111 == 2) {
                goto LABEL_112;
              }
              if (*(unsigned __int8 *)(v106 + 34) != *(unsigned __int8 *)(v108 + 34)) {
                goto LABEL_136;
              }
              if (v111 == 3) {
                goto LABEL_112;
              }
              if (*(unsigned __int8 *)(v106 + 35) != *(unsigned __int8 *)(v108 + 35))
              {
LABEL_136:
                swift_retain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                Swift::UInt v7 = v153;
                a3 = (uint64_t)v171;
                uint64_t v58 = v169;
LABEL_137:
                sub_10019C054(v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
                goto LABEL_93;
              }
              uint64_t v124 = (unsigned __int8 *)(v106 + 36);
              uint64_t v125 = (unsigned __int8 *)(v108 + 36);
              uint64_t v126 = v111 - 4;
              while (v126)
              {
                int v128 = *v124++;
                int v127 = v128;
                int v129 = *v125++;
                --v126;
                if (v127 != v129) {
                  goto LABEL_136;
                }
              }
LABEL_112:
              swift_retain();
              char v104 = sub_100021118(v107, v110);
LABEL_113:
              char v112 = v104;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              Swift::UInt v7 = v153;
              a3 = (uint64_t)v171;
              uint64_t v58 = v169;
              if ((v112 & 1) == 0) {
                goto LABEL_137;
              }
LABEL_142:
              sub_10019C054(v7, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              sub_10019C054(a3, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              sub_10019C054(v168, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              unint64_t v12 = v156;
              a1 = v157;
              uint64_t v29 = v138;
              a2 = v151;
              if ((v151 & 0x8000000000000000) != 0) {
                goto LABEL_17;
              }
LABEL_21:
              if (a1)
              {
                uint64_t v157 = (a1 - 1) & a1;
                unint64_t v48 = __clz(__rbit64(a1)) | (v12 << 6);
                unint64_t v47 = v12;
                goto LABEL_37;
              }
              int64_t v49 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_151;
              }
              if (v49 >= v144) {
                goto LABEL_5;
              }
              unint64_t v50 = *(void *)(v145 + 8 * v49);
              unint64_t v47 = v12 + 1;
              if (v50) {
                goto LABEL_36;
              }
              unint64_t v47 = v12 + 2;
              if ((uint64_t)(v12 + 2) >= v144) {
                goto LABEL_5;
              }
              unint64_t v50 = *(void *)(v145 + 8 * v47);
              if (v50) {
                goto LABEL_36;
              }
              unint64_t v47 = v12 + 3;
              if ((uint64_t)(v12 + 3) >= v144) {
                goto LABEL_5;
              }
              unint64_t v50 = *(void *)(v145 + 8 * v47);
              if (v50)
              {
LABEL_36:
                uint64_t v157 = (v50 - 1) & v50;
                unint64_t v48 = __clz(__rbit64(v50)) + (v47 << 6);
LABEL_37:
                uint64_t v46 = *(void *)(*(void *)(a2 + 48) + 8 * v48);
                swift_retain();
                if (!v46) {
                  goto LABEL_5;
                }
                goto LABEL_38;
              }
              unint64_t v47 = v12 + 4;
              if ((uint64_t)(v12 + 4) < v144)
              {
                unint64_t v50 = *(void *)(v145 + 8 * v47);
                if (!v50)
                {
                  unint64_t v51 = v12 + 5;
                  do
                  {
                    if (v144 == v51) {
                      goto LABEL_5;
                    }
                    unint64_t v50 = *(void *)(v145 + 8 * v51++);
                  }
                  while (!v50);
                  unint64_t v47 = v51 - 1;
                  a3 = (uint64_t)v171;
                }
                goto LABEL_36;
              }
LABEL_5:
              sub_10003BC80();
              swift_release();
              unint64_t v35 = sub_100193F80();
              a3 = v133;
              if (!v35) {
                goto LABEL_145;
              }
              break;
            case 3u:
              int v113 = swift_getEnumCaseMultiPayload();
              swift_retain();
              uint64_t v58 = v169;
              if (v113 == 3) {
                goto LABEL_142;
              }
              goto LABEL_92;
            default:
              uint64_t v95 = v146;
              sub_10019BFCC(v7, v146, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
              int v96 = swift_getEnumCaseMultiPayload();
              uint64_t v58 = v169;
              if (v96)
              {
                swift_retain();
                sub_100007A48(v95, &qword_100709E38);
                goto LABEL_92;
              }
              uint64_t v114 = v139;
              sub_10001FDF0(v94, v139, &qword_100709E38);
              sub_10001FC6C();
              uint64_t v115 = v95;
              swift_retain();
              char v116 = sub_1005E35A0();
              uint64_t v117 = v114;
              uint64_t v58 = v169;
              sub_100007A48(v117, &qword_100709E38);
              sub_100007A48(v115, &qword_100709E38);
              if (v116) {
                goto LABEL_142;
              }
              goto LABEL_137;
          }
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRetain();
      swift_retain();
      char v59 = sub_1005E2B90();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v59 & 1) == 0)
      {
LABEL_139:
        uint64_t v130 = v158;
        swift_retain();
        sub_1005E20A0();
        if (*(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1005E2110();
        }
        sub_1005E2170();
        sub_1005E20E0();
        sub_100019734(&v181, v130);
      }
      swift_release();
      unint64_t v12 = v156;
      a1 = v157;
      a2 = v151;
      if ((v151 & 0x8000000000000000) == 0) {
        goto LABEL_21;
      }
    }
    swift_release();
    swift_release();
    sub_10003BC80();
    swift_bridgeObjectRelease();
    uint64_t v131 = 1;
  }
  else
  {
LABEL_145:
    swift_bridgeObjectRelease();
    uint64_t v131 = 0;
  }
  swift_bridgeObjectRelease();
  return v131;
}

uint64_t sub_10019998C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoveAndCopyMessages.CommandID();
  __chkstk_darwin(v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10019BFCC(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  sub_10000566C(&qword_100709FC8);
  uint64_t v7 = swift_allocObject();
  sub_10019C0B4((uint64_t)v6, v7 + *(void *)(*(void *)v7 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  if (*(void *)(a2 + 16) && (unint64_t v8 = sub_100024558(v7), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void **)(*(void *)(a2 + 56) + 8 * v8);
    swift_setDeallocating();
    uint64_t v11 = v7 + *(void *)(*(void *)v7 + 96);
    swift_bridgeObjectRetain();
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_1005E2FB0())
  {
    uint64_t v10 = sub_10001E144((unint64_t)_swiftEmptyArrayStorage);
    swift_setDeallocating();
    uint64_t v11 = v7 + *(void *)(*(void *)v7 + 96);
  }
  else
  {
    swift_setDeallocating();
    uint64_t v11 = v7 + *(void *)(*(void *)v7 + 96);
    uint64_t v10 = &_swiftEmptySetSingleton;
  }
  sub_10019C054(v11, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  uint64_t v12 = swift_deallocClassInstance();
  __chkstk_darwin(v12);
  *(void *)&v17[-16] = v4;
  *(void *)&v17[-8] = sub_100198000((unint64_t *)&qword_10070B758);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v14 = sub_10019660C((uint64_t)v10, KeyPath);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v15 = sub_10009ADE4((uint64_t)v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100199C44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v35 - v9;
  uint64_t v11 = sub_100104D34(0, a2);
  uint64_t v12 = v11[2];
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v31 = swift_allocObject();
    int v32 = *(_DWORD *)(v2 + 40);
    *(void *)(v31 + 16) = *(void *)(v2 + 32);
    *(_DWORD *)(v31 + 24) = v32;
    *(void *)(v31 + 32) = 257;
    swift_bridgeObjectRetain();
    return 0;
  }
  v35[1] = v11;
  uint64_t v36 = v2;
  uint64_t v13 = 0;
  char v38 = v11 + 4;
  uint64_t v39 = a1;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v37 = v12;
  while (!v14)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = v36;
      goto LABEL_15;
    }
  }
  int v15 = *((_DWORD *)v38 + v13);
  uint64_t v16 = v40;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v19 = v14;
  while (1)
  {
    sub_10019BFCC(v17, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_10019BFCC((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_10019C054((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_10019C054((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v17 += v18;
    if (!--v19)
    {
      a1 = v39;
      swift_bridgeObjectRelease_n();
      uint64_t v12 = v37;
      goto LABEL_4;
    }
  }
  int v20 = *((_DWORD *)v8 + 2);
  sub_10007C4A4(*(void *)v8);
  if (v20 != v15) {
    goto LABEL_8;
  }
  sub_10019C054((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v21 = 2;
  swift_bridgeObjectRelease_n();
  uint64_t v22 = v36;
  uint64_t v23 = *(void *)(v36 + 176);
  if (*(void *)(v23 + 16))
  {
    int v24 = *(_DWORD *)(v23 + 40);
    uint64_t v25 = *(void *)(v23 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000D7DC0(0, 1);
    swift_bridgeObjectRetain();
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_100196934(v26, v25, v24);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v28 = swift_allocObject();
    int v29 = *(_DWORD *)(v22 + 40);
    *(void *)(v28 + 16) = *(void *)(v22 + 32);
    *(_DWORD *)(v28 + 24) = v29;
    if (*(void *)(v27 + 16))
    {
      sub_10000566C(&qword_10070A7A0);
      uint64_t v30 = (void *)sub_1005E2FF0();
    }
    else
    {
      uint64_t v30 = _swiftEmptyDictionarySingleton;
    }
    uint64_t v41 = v30;
    swift_bridgeObjectRetain();
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_1001944DC(v33, 1, &v41);
    swift_bridgeObjectRelease();
    *(void *)(v28 + 32) = v41;
    return 1;
  }
  return v21;
}

uint64_t sub_10019A01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (void *)((char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10019BFCC(a1, (uint64_t)v16, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_10019C054((uint64_t)v16, type metadata accessor for UntaggedResponse);
  }
  unint64_t v18 = *v16;
  unint64_t v19 = v16[2];
  if ((~v18 & 0xF000000000000007) == 0) {
    return swift_bridgeObjectRelease();
  }
  if (((v18 >> 59) & 0x1E | (v18 >> 2) & 1) != 8)
  {
    sub_1000869F0(v18);
    return swift_bridgeObjectRelease();
  }
  unint64_t v80 = v19;
  int v79 = *(_DWORD *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
  int v20 = v13;
  uint64_t v22 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
  uint64_t v21 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v20, a3, v10);
  sub_10019BFCC(a3, (uint64_t)v9, type metadata accessor for MailboxTaskLogger);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  unint64_t v81 = v20;
  uint64_t v23 = sub_1005E0EB0();
  int v77 = sub_1005E2590();
  BOOL v24 = os_log_type_enabled(v23, (os_log_type_t)v77);
  uint64_t v82 = v21;
  uint64_t v83 = v22;
  if (v24)
  {
    os_log_t v72 = v23;
    uint64_t v73 = v11;
    uint64_t v74 = v10;
    unint64_t v75 = v18;
    uint64_t v76 = v4;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    v87[0] = v71;
    *(_DWORD *)uint64_t v25 = 68160003;
    LODWORD(v85) = 2;
    sub_1005E2960();
    *(_WORD *)(v25 + 8) = 256;
    uint64_t v26 = &v9[*(int *)(v7 + 20)];
    LOBYTE(v85) = *v26;
    sub_1005E2960();
    *(_WORD *)(v25 + 11) = 2082;
    uint64_t v27 = *((void *)v26 + 1);
    unint64_t v28 = *((void *)v26 + 2);
    swift_bridgeObjectRetain();
    uint64_t v85 = sub_1000C6914(v27, v28, v87);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 21) = 1040;
    LODWORD(v85) = 2;
    sub_1005E2960();
    *(_WORD *)(v25 + 27) = 512;
    LOWORD(v85) = *((_WORD *)v26 + 12);
    sub_1005E2960();
    *(_WORD *)(v25 + 31) = 2160;
    uint64_t v85 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v25 + 41) = 2085;
    int v29 = *((_DWORD *)v26 + 10);
    uint64_t v85 = *((void *)v26 + 4);
    int v86 = v29;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1005E1CC0();
    uint64_t v85 = sub_1000C6914(v30, v31, v87);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10019C054((uint64_t)v9, type metadata accessor for MailboxTaskLogger);
    uint64_t v78 = v25;
    *(_WORD *)(v25 + 51) = 2082;
    int64_t v32 = *(void *)(v83 + 16);
    uint64_t v33 = _swiftEmptyArrayStorage;
    unint64_t v34 = v81;
    if (v32)
    {
      uint64_t v85 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1001191F8(0, v32, 0);
      uint64_t v35 = v83;
      uint64_t v36 = 0;
      uint64_t v33 = (void *)v85;
      do
      {
        uint64_t v84 = *(void *)(v35 + 8 * v36 + 32);
        sub_10000566C(&qword_10070A9B8);
        uint64_t v37 = sub_1005E1CA0();
        uint64_t v39 = v38;
        uint64_t v85 = (uint64_t)v33;
        unint64_t v41 = v33[2];
        unint64_t v40 = v33[3];
        if (v41 >= v40 >> 1)
        {
          sub_1001191F8((char *)(v40 > 1), v41 + 1, 1);
          uint64_t v35 = v83;
          uint64_t v33 = (void *)v85;
        }
        ++v36;
        v33[2] = v41 + 1;
        uint64_t v42 = &v33[2 * v41];
        v42[4] = v37;
        v42[5] = v39;
      }
      while (v32 != v36);
      swift_bridgeObjectRelease();
    }
    uint64_t v44 = v78;
    uint64_t v85 = (uint64_t)v33;
    uint64_t v45 = sub_10000566C(&qword_100709F58);
    v70[1] = sub_100007494((unint64_t *)&qword_100709F60, &qword_100709F58);
    uint64_t v46 = sub_1005E1A80();
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_1000C6914(v46, v48, v87);
    sub_1005E2960();
    uint64_t v49 = v82;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 61) = 2082;
    int64_t v50 = *(void *)(v49 + 16);
    unint64_t v51 = _swiftEmptyArrayStorage;
    if (v50)
    {
      v70[0] = v45;
      uint64_t v85 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1001191F8(0, v50, 0);
      uint64_t v52 = v82;
      uint64_t v53 = 0;
      unint64_t v51 = (void *)v85;
      do
      {
        uint64_t v84 = *(void *)(v52 + 8 * v53 + 32);
        sub_10000566C(&qword_10070A9B8);
        uint64_t v54 = sub_1005E1CA0();
        uint64_t v56 = v55;
        uint64_t v85 = (uint64_t)v51;
        unint64_t v58 = v51[2];
        unint64_t v57 = v51[3];
        if (v58 >= v57 >> 1)
        {
          sub_1001191F8((char *)(v57 > 1), v58 + 1, 1);
          uint64_t v52 = v82;
          unint64_t v51 = (void *)v85;
        }
        ++v53;
        v51[2] = v58 + 1;
        char v59 = &v51[2 * v58];
        v59[4] = v54;
        v59[5] = v56;
      }
      while (v50 != v53);
      swift_bridgeObjectRelease();
      unint64_t v34 = v81;
    }
    uint64_t v60 = v78;
    uint64_t v85 = (uint64_t)v51;
    uint64_t v61 = sub_1005E1A80();
    unint64_t v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_1000C6914(v61, v63, v87);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 71) = 1024;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v43 = v79;
    LODWORD(v85) = v79;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_t v64 = v72;
    _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v77, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server moved messages %{public}s with destination UIDs %{public}s and UIDValidity 0x%x", (uint8_t *)v60, 0x4Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v73 + 8))(v34, v74);
    unint64_t v18 = v75;
    uint64_t v4 = v76;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10019C054((uint64_t)v9, type metadata accessor for MailboxTaskLogger);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v81, v10);
    int v43 = v79;
  }
  uint64_t v65 = *(void **)(v4 + 168);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v65 = sub_1000180D0(0, v65[2] + 1, 1, v65);
  }
  unint64_t v67 = v65[2];
  unint64_t v66 = v65[3];
  if (v67 >= v66 >> 1) {
    uint64_t v65 = sub_1000180D0((void *)(v66 > 1), v67 + 1, 1, v65);
  }
  v65[2] = v67 + 1;
  unint64_t v68 = &v65[3 * v67];
  *((_DWORD *)v68 + 8) = v43;
  uint64_t v69 = v82;
  v68[5] = v83;
  v68[6] = v69;
  sub_1000869F0(v18);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v4 + 168) = v65;
  return result;
}

unint64_t sub_10019A970(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)())
{
  uint64_t v114 = a5;
  uint64_t v10 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  char v116 = (void *)((char *)v104 - v15);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v115 = (void *)((char *)v104 - v17);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v118 = (uint64_t)v104 - v19;
  __chkstk_darwin(v18);
  uint64_t v117 = (void *)((char *)v104 - v20);
  uint64_t v21 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005E0ED0();
  unint64_t result = __chkstk_darwin(v24);
  int v29 = (char *)v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((a1 >> 59) & 0x1E | (a1 >> 2) & 1) != 0x11) {
    return result;
  }
  uint64_t v30 = a1 & 0xFFFFFFFFFFFFFFBLL;
  if ((*(unsigned int *)(v5 + 40) | ((unint64_t)*(unsigned int *)(v5 + 40) << 32)) != (*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
    return result;
  }
  uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
  LODWORD(v108) = *(unsigned __int8 *)(v30 + 40);
  uint64_t v32 = *(void *)(v5 + 32);
  uint64_t v111 = v26;
  uint64_t v33 = *(void *)(v30 + 16);
  uint64_t v110 = v27;
  unint64_t result = sub_1000255D4(v32, v33);
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v107 = v13;
  uint64_t v112 = v10;
  uint64_t v113 = v5;
  uint64_t v109 = v31;
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_100104D34(0, a4);
  uint64_t v35 = v34[2];
  if (!v35)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v113 + 120) = 1;
    return result;
  }
  uint64_t v36 = 0;
  while ((sub_1001652E0(*((_DWORD *)v34 + v36 + 8), a2, a3) & 1) == 0)
  {
    if (v35 == ++v36) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = v110;
  uint64_t v38 = v114;
  uint64_t v39 = v111;
  (*(void (**)(char *, uint64_t (*)(), uint64_t))(v110 + 16))(v29, v114, v111);
  sub_10019BFCC((uint64_t)v38, (uint64_t)v23, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v40 = v109;
  swift_bridgeObjectRetain_n();
  unint64_t v41 = sub_1005E0EB0();
  os_log_type_t v42 = sub_1005E25C0();
  int v43 = v42;
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v44 = swift_slowAlloc();
    LODWORD(v114) = v43;
    uint64_t v45 = v44;
    unint64_t v106 = swift_slowAlloc();
    unint64_t v121 = v106;
    *(_DWORD *)uint64_t v45 = 68159491;
    LODWORD(v119) = 2;
    os_log_t v105 = v41;
    sub_1005E2960();
    *(_WORD *)(v45 + 8) = 256;
    uint64_t v46 = &v23[*(int *)(v21 + 20)];
    LOBYTE(v119) = *v46;
    sub_1005E2960();
    *(_WORD *)(v45 + 11) = 2082;
    uint64_t v47 = *((void *)v46 + 1);
    unint64_t v48 = *((void *)v46 + 2);
    swift_bridgeObjectRetain();
    uint64_t v119 = sub_1000C6914(v47, v48, (uint64_t *)&v121);
    sub_1005E2960();
    uint64_t v40 = v109;
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 21) = 1040;
    LODWORD(v119) = 2;
    sub_1005E2960();
    *(_WORD *)(v45 + 27) = 512;
    LOWORD(v119) = *((_WORD *)v46 + 12);
    sub_1005E2960();
    *(_WORD *)(v45 + 31) = 2160;
    uint64_t v119 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v45 + 41) = 2085;
    int v49 = *((_DWORD *)v46 + 10);
    uint64_t v119 = *((void *)v46 + 4);
    int v120 = v49;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1005E1CC0();
    uint64_t v119 = sub_1000C6914(v50, v51, (uint64_t *)&v121);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10019C054((uint64_t)v23, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v45 + 51) = 2048;
    uint64_t v52 = *(void *)(v40 + 16);
    swift_bridgeObjectRelease();
    uint64_t v119 = v52;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    os_log_t v53 = v105;
    _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v114, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence returned %ld moves / copies.", (uint8_t *)v45, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v111);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10019C054((uint64_t)v23, type metadata accessor for MailboxTaskLogger);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v39);
  }
  uint64_t v54 = v113;
  if ((v108 & 1) == 0) {
    *(unsigned char *)(v113 + 120) = 1;
  }
  uint64_t v55 = *(void *)(v40 + 16);
  if (!v55) {
    return swift_bridgeObjectRelease();
  }
  os_log_t v105 = (os_log_t)&v126;
  uint64_t v110 = v54 + 128;
  v104[1] = &v129;
  uint64_t v108 = &v122;
  uint64_t v56 = (unint64_t *)(v40 + 64);
  while (1)
  {
    uint64_t v57 = *(void *)(v54 + 112);
    if (v57 > 256)
    {
      unint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)(v54 + 120) = 1;
      return result;
    }
    unsigned int v58 = *((_DWORD *)v56 - 7);
    uint64_t v59 = *(v56 - 3);
    LODWORD(v114) = *((_DWORD *)v56 - 4);
    uint64_t v60 = *(v56 - 1);
    unint64_t v61 = *v56;
    int v62 = *((unsigned __int8 *)v56 - 32);
    *(void *)(v54 + 112) = v57 + 1;
    if (v62 == 1) {
      break;
    }
    if (*(unsigned char *)(v54 + 105))
    {
      uint64_t v111 = v55;
      unsigned int v129 = v58;
      char v130 = 0;
      uint64_t v77 = v60;
      uint64_t v131 = v60;
      unint64_t v132 = v61;
      unint64_t v78 = v61;
      sub_10000566C(&qword_10070A7A8);
      int v79 = (void *)sub_1005E2FF0();
      unsigned int v80 = v129;
      char v81 = v130;
      uint64_t v82 = v131;
      unint64_t v83 = v132;
      unint64_t result = sub_100024260(v129);
      if (v84) {
        goto LABEL_36;
      }
      v79[(result >> 6) + 8] |= 1 << result;
      *(_DWORD *)(v79[6] + 4 * result) = v80;
      uint64_t v85 = v79[7] + 24 * result;
      *(unsigned char *)uint64_t v85 = v81;
      *(void *)(v85 + 8) = v82;
      *(void *)(v85 + 16) = v83;
      uint64_t v86 = v79[2];
      BOOL v71 = __OFADD__(v86, 1);
      uint64_t v87 = v86 + 1;
      if (v71) {
        goto LABEL_37;
      }
      v79[2] = v87;
      swift_bridgeObjectRetain();
      unint64_t v106 = v78;
      sub_100008D24(v77, v78);
      swift_bridgeObjectRetain();
      sub_100008D24(v77, v78);
      sub_100008D24(v82, v83);
      sub_10000566C(&qword_10070E6B0);
      swift_arrayDestroy();
      uint64_t v88 = (uint64_t)v116;
      *char v116 = v59;
      *(_DWORD *)(v88 + 8) = v114;
      *(void *)(v88 + 16) = v79;
      swift_storeEnumTagMultiPayload();
      uint64_t v114 = type metadata accessor for MoveAndCopyMessages.CommandID;
      uint64_t v89 = v118;
      sub_10019BFCC(v88, v118, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_10000566C(&qword_100709FC8);
      uint64_t v90 = swift_allocObject();
      sub_10019C0B4(v89, v90 + *(void *)(*(void *)v90 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_100019734(&v119, v90);
      swift_release();
      sub_10019C054(v88, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      LODWORD(v119) = v58;
      sub_100063E18();
      MessageIdentifierSet.init(_:)();
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = (uint64_t)v107;
      sub_10019BFCC(v89, (uint64_t)v107, (uint64_t (*)(void))v114);
      uint64_t v92 = swift_allocObject();
      sub_10019C0B4(v91, v92 + *(void *)(*(void *)v92 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
      sub_100019734(&v119, v92);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1000094D4(v77, v106);
      uint64_t v76 = v89;
LABEL_17:
      uint64_t v55 = v111;
      goto LABEL_18;
    }
    unsigned int v126 = v58;
    uint64_t v127 = v60;
    unint64_t v128 = v61;
    sub_10000566C(&qword_10070A7B0);
    uint64_t v93 = (void *)sub_1005E2FF0();
    unsigned int v94 = v126;
    uint64_t v95 = v127;
    unint64_t v96 = v128;
    unint64_t result = sub_100024260(v126);
    if (v97) {
      goto LABEL_38;
    }
    v93[(result >> 6) + 8] |= 1 << result;
    *(_DWORD *)(v93[6] + 4 * result) = v94;
    uint64_t v98 = (uint64_t *)(v93[7] + 16 * result);
    *uint64_t v98 = v95;
    v98[1] = v96;
    uint64_t v99 = v93[2];
    BOOL v71 = __OFADD__(v99, 1);
    uint64_t v100 = v99 + 1;
    if (v71) {
      goto LABEL_39;
    }
    v93[2] = v100;
    swift_bridgeObjectRetain();
    sub_100008D24(v60, v61);
    swift_bridgeObjectRetain();
    sub_100008D24(v60, v61);
    sub_100008D24(v95, v96);
    sub_10000566C(&qword_10070E6B8);
    swift_arrayDestroy();
    uint64_t v101 = (uint64_t)v115;
    *uint64_t v115 = v59;
    *(_DWORD *)(v101 + 8) = v114;
    *(void *)(v101 + 16) = v93;
    swift_storeEnumTagMultiPayload();
    uint64_t v102 = v118;
    sub_10019BFCC(v101, v118, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10000566C(&qword_100709FC8);
    uint64_t v103 = swift_allocObject();
    sub_10019C0B4(v102, v103 + *(void *)(*(void *)v103 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_100019734(&v119, v103);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000094D4(v60, v61);
    uint64_t v76 = v101;
LABEL_18:
    v56 += 5;
    sub_10019C054(v76, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    --v55;
    uint64_t v54 = v113;
    if (!v55) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v111 = v55;
  unsigned int v122 = v58;
  char v123 = 1;
  uint64_t v124 = v60;
  unint64_t v125 = v61;
  sub_10000566C(&qword_10070A7A8);
  unint64_t v63 = (void *)sub_1005E2FF0();
  unsigned int v64 = v122;
  char v65 = v123;
  uint64_t v66 = v124;
  unint64_t v67 = v125;
  unint64_t result = sub_100024260(v122);
  if ((v68 & 1) == 0)
  {
    v63[(result >> 6) + 8] |= 1 << result;
    *(_DWORD *)(v63[6] + 4 * result) = v64;
    uint64_t v69 = v63[7] + 24 * result;
    *(unsigned char *)uint64_t v69 = v65;
    *(void *)(v69 + 8) = v66;
    *(void *)(v69 + 16) = v67;
    uint64_t v70 = v63[2];
    BOOL v71 = __OFADD__(v70, 1);
    uint64_t v72 = v70 + 1;
    if (v71) {
      goto LABEL_35;
    }
    v63[2] = v72;
    swift_bridgeObjectRetain();
    sub_100008D24(v60, v61);
    swift_bridgeObjectRetain();
    sub_100008D24(v60, v61);
    sub_100008D24(v66, v67);
    sub_10000566C(&qword_10070E6B0);
    swift_arrayDestroy();
    uint64_t v73 = (uint64_t)v117;
    *uint64_t v117 = v59;
    *(_DWORD *)(v73 + 8) = v114;
    *(void *)(v73 + 16) = v63;
    swift_storeEnumTagMultiPayload();
    uint64_t v74 = v118;
    sub_10019BFCC(v73, v118, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10000566C(&qword_100709FC8);
    uint64_t v75 = swift_allocObject();
    sub_10019C0B4(v74, v75 + *(void *)(*(void *)v75 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_100019734(&v119, v75);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000094D4(v60, v61);
    uint64_t v76 = v73;
    goto LABEL_17;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10019B7B0()
{
  uint64_t v2 = type metadata accessor for MoveAndCopyMessages.CommandID();
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v51 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v52 = (char *)&v50 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v50 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v50 - v14;
  uint64_t v62 = v13;
  uint64_t v16 = sub_100198000((unint64_t *)&qword_10070B758);
  uint64_t v63 = v16;
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_10019660C(v18, KeyPath);
  int64_t v58 = v1;
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v20 = sub_10009ADE4((uint64_t)v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_100195194(v20, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1001957A4);
  uint64_t v54 = v0 + 128;
  uint64_t v55 = v21;
  uint64_t v60 = v2;
  uint64_t v61 = v16;
  uint64_t v53 = v16;
  uint64_t v22 = swift_getKeyPath();
  swift_retain();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_10019660C(v23, v22);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v25 = sub_10009ADE4((uint64_t)v24);
  swift_bridgeObjectRelease();
  int64_t v26 = 0;
  uint64_t v27 = *(void *)(v25 + 56);
  uint64_t v56 = v2;
  uint64_t v57 = v25 + 56;
  uint64_t v28 = 1 << *(unsigned char *)(v25 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  int64_t v58 = (unint64_t)(v28 + 63) >> 6;
  while (v30)
  {
    unint64_t v34 = __clz(__rbit64(v30));
    v30 &= v30 - 1;
    unint64_t v35 = v34 | (v26 << 6);
LABEL_19:
    sub_10019BFCC(*(void *)(v25 + 48) + *(void *)(v59 + 72) * v35, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10019C0B4((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10019BFCC((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_10019C054((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v31 = swift_bridgeObjectRelease();
        goto LABEL_5;
      case 3u:
        sub_10019C054((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        break;
      default:
        uint64_t v31 = sub_10019C054((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
LABEL_5:
        __chkstk_darwin(v31);
        *(&v50 - 2) = (uint64_t)v12;
        uint64_t v32 = v55;
        swift_retain();
        uint64_t v33 = sub_10019530C((uint64_t)sub_10019BEC0, (uint64_t)(&v50 - 4), v32);
        sub_1001933D0((uint64_t)v12, (uint64_t)v33);
        sub_10019C054((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
        swift_release();
        break;
    }
  }
  if (__OFADD__(v26++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v26 >= v58) {
    goto LABEL_27;
  }
  unint64_t v37 = *(void *)(v57 + 8 * v26);
  if (v37)
  {
LABEL_18:
    unint64_t v30 = (v37 - 1) & v37;
    unint64_t v35 = __clz(__rbit64(v37)) + (v26 << 6);
    goto LABEL_19;
  }
  int64_t v38 = v26 + 1;
  if (v26 + 1 >= v58) {
    goto LABEL_27;
  }
  unint64_t v37 = *(void *)(v57 + 8 * v38);
  if (v37) {
    goto LABEL_17;
  }
  int64_t v38 = v26 + 2;
  if (v26 + 2 >= v58) {
    goto LABEL_27;
  }
  unint64_t v37 = *(void *)(v57 + 8 * v38);
  if (v37)
  {
LABEL_17:
    int64_t v26 = v38;
    goto LABEL_18;
  }
  int64_t v38 = v26 + 3;
  if (v26 + 3 < v58)
  {
    unint64_t v37 = *(void *)(v57 + 8 * v38);
    if (!v37)
    {
      while (1)
      {
        int64_t v26 = v38 + 1;
        if (__OFADD__(v38, 1)) {
          break;
        }
        if (v26 >= v58) {
          goto LABEL_27;
        }
        unint64_t v37 = *(void *)(v57 + 8 * v26);
        ++v38;
        if (v37) {
          goto LABEL_18;
        }
      }
LABEL_31:
      __break(1u);
      JUMPOUT(0x10019BEB0);
    }
    goto LABEL_17;
  }
LABEL_27:
  uint64_t v39 = v53;
  swift_release();
  uint64_t v40 = swift_release();
  __chkstk_darwin(v40);
  *(&v50 - 2) = v56;
  *(&v50 - 1) = v39;
  uint64_t v41 = swift_getKeyPath();
  swift_retain();
  uint64_t v42 = swift_bridgeObjectRetain();
  int v43 = sub_10019660C(v42, v41);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v44 = sub_10009ADE4((uint64_t)v43);
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_100195194(v44, (uint64_t (*)(char *, unint64_t, uint64_t))sub_100195490);
  if (*(void *)(v45 + 16))
  {
    uint64_t v46 = (uint64_t)v52;
    swift_storeEnumTagMultiPayload();
    uint64_t v47 = v51;
    sub_10019BFCC(v46, v51, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_10000566C(&qword_100709FC8);
    uint64_t v48 = swift_allocObject();
    sub_10019C0B4(v47, v48 + *(void *)(*(void *)v48 + 96), (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    sub_100019734(&v64, v48);
    swift_release();
    sub_10019C054(v46, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
    swift_storeEnumTagMultiPayload();
    sub_1001933D0(v46, v45);
    sub_10019C054(v46, (uint64_t (*)(void))type metadata accessor for MoveAndCopyMessages.CommandID);
  }
  return swift_release();
}

BOOL sub_10019BEC0(uint64_t a1)
{
  return sub_100190C04(a1, *(void *)(v1 + 16));
}

uint64_t sub_10019BEE0()
{
  return sub_100190B38() & 1;
}

unint64_t sub_10019BF00()
{
  unint64_t result = qword_10070E6A8;
  if (!qword_10070E6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E6A8);
  }
  return result;
}

uint64_t sub_10019BF54()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10019BF8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10019BFCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10019C034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10018CA2C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10019C054(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10019C0B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.UIDPairs.CountMismatch()
{
  return &type metadata for MoveAndCopyMessages.UIDPairs.CountMismatch;
}

unsigned char *storeEnumTagSinglePayload for MoveAndCopyMessages.ActionID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10019C1F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.ActionID()
{
  return &type metadata for MoveAndCopyMessages.ActionID;
}

uint64_t destroy for MoveAndCopyMessages.Copy.MessageInfo(uint64_t a1)
{
  return sub_1000094D4(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s13IMAP2Behavior19MoveAndCopyMessagesV4CopyV11MessageInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_100008D24(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for MoveAndCopyMessages.Copy.MessageInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_100008D24(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_1000094D4(v5, v6);
  return a1;
}

uint64_t assignWithTake for MoveAndCopyMessages.Copy.MessageInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1000094D4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAndCopyMessages.Copy.MessageInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[24]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages.Copy.MessageInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.Copy.MessageInfo()
{
  return &type metadata for MoveAndCopyMessages.Copy.MessageInfo;
}

uint64_t initializeWithCopy for MoveAndCopyMessages.CompletedCommand.MessageInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_100008D24(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for MoveAndCopyMessages.CompletedCommand.MessageInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_100008D24(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1000094D4(v6, v7);
  uint64_t v8 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v8;
  return a1;
}

uint64_t assignWithTake for MoveAndCopyMessages.CompletedCommand.MessageInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1000094D4(v4, v5);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAndCopyMessages.CompletedCommand.MessageInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[33]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveAndCopyMessages.CompletedCommand.MessageInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAndCopyMessages.CompletedCommand.MessageInfo()
{
  return &type metadata for MoveAndCopyMessages.CompletedCommand.MessageInfo;
}

unint64_t sub_10019C568()
{
  unint64_t result = qword_10070E6D8;
  if (!qword_10070E6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E6D8);
  }
  return result;
}

unint64_t sub_10019C5C0()
{
  unint64_t result = qword_10070E6E0;
  if (!qword_10070E6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E6E0);
  }
  return result;
}

uint64_t sub_10019C614()
{
  return sub_10019BEE0() & 1;
}

uint64_t sub_10019C638(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v8 = a3[5];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = a1 + v12;
    uint64_t v15 = (uint64_t)a2 + v12;
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
    *(unsigned char *)(a1 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v16 = a3[9];
    *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)(a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10019C758(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019C7E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10019C8C0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (unsigned char *)(a1 + v10);
  uint64_t v12 = (unsigned char *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  v11[4] = v12[4];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10019C9D0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t sub_10019CAA0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (unsigned char *)(a1 + v10);
  uint64_t v13 = (unsigned char *)(a2 + v10);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  v12[4] = v13[4];
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10019CB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019CBAC);
}

uint64_t sub_10019CBAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100709E30);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10019CC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019CC74);
}

void *sub_10019CC74(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E30);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for NewServerMessages()
{
  uint64_t result = qword_10070E740;
  if (!qword_10070E740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10019CD6C()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10019CE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for NewServerMessages();
  if ((*(unsigned char *)(v1 + v6[7]) & 1) == 0)
  {
    if (*(unsigned char *)(v1 + v6[8]))
    {
      uint64_t v7 = &off_1006BA8B8;
      goto LABEL_9;
    }
    sub_10000566C(&qword_10070A178);
    uint64_t v7 = (_UNKNOWN **)swift_allocObject();
    *((_OWORD *)v7 + 1) = xmmword_1005F6720;
    v7[4] = (_UNKNOWN *)7;
    v7[5] = 0;
    v7[6] = 0;
    v7[7] = 0;
    *((unsigned char *)v7 + 68) = -64;
    *((_DWORD *)v7 + 16) = 0;
    v7[9] = (_UNKNOWN *)2;
    v7[10] = 0;
    v7[11] = 0;
    v7[12] = 0;
    *((unsigned char *)v7 + 108) = -64;
    *((_DWORD *)v7 + 26) = 0;
    v7[14] = (_UNKNOWN *)5;
    v7[15] = 0;
    v7[16] = 0;
    v7[17] = 0;
    *((unsigned char *)v7 + 148) = -64;
    *((_DWORD *)v7 + 36) = 0;
    v7[19] = (_UNKNOWN *)1;
    v7[20] = 0;
    v7[21] = 0;
    v7[22] = 0;
    *((unsigned char *)v7 + 188) = -64;
    *((_DWORD *)v7 + 46) = 0;
    uint64_t v12 = SectionSpecifier.header.unsafeMutableAddressor();
    uint64_t v13 = (void *)*v12;
    uint64_t v10 = v12[1];
    unsigned __int8 v11 = *((unsigned char *)v12 + 16);
    v7[24] = (_UNKNOWN *)1;
    v7[25] = v13;
    v7[26] = (_UNKNOWN *)v10;
    v7[27] = (_UNKNOWN *)v11;
    *((unsigned char *)v7 + 228) = 33;
    *((_DWORD *)v7 + 56) = 0;
    v7[29] = (_UNKNOWN *)11;
    v7[30] = 0;
    v7[31] = 0;
    v7[32] = 0;
    *((unsigned char *)v7 + 268) = -64;
    *((_DWORD *)v7 + 66) = 0;
LABEL_8:
    swift_bridgeObjectRetain();
    sub_10013B5CC(v10, v11);
    goto LABEL_9;
  }
  if ((*(unsigned char *)(v1 + v6[8]) & 1) == 0)
  {
    sub_10000566C(&qword_10070A178);
    uint64_t v7 = (_UNKNOWN **)swift_allocObject();
    *((_OWORD *)v7 + 1) = xmmword_1005F66A0;
    v7[4] = (_UNKNOWN *)7;
    v7[5] = 0;
    v7[6] = 0;
    v7[7] = 0;
    *((unsigned char *)v7 + 68) = -64;
    *((_DWORD *)v7 + 16) = 0;
    v7[9] = (_UNKNOWN *)2;
    v7[10] = 0;
    v7[11] = 0;
    v7[12] = 0;
    *((unsigned char *)v7 + 108) = -64;
    *((_DWORD *)v7 + 26) = 0;
    v7[14] = (_UNKNOWN *)5;
    v7[15] = 0;
    v7[16] = 0;
    v7[17] = 0;
    *((unsigned char *)v7 + 148) = -64;
    *((_DWORD *)v7 + 36) = 0;
    v7[19] = (_UNKNOWN *)1;
    v7[20] = 0;
    v7[21] = 0;
    v7[22] = 0;
    *((unsigned char *)v7 + 188) = -64;
    *((_DWORD *)v7 + 46) = 0;
    uint64_t v8 = SectionSpecifier.header.unsafeMutableAddressor();
    uint64_t v9 = (void *)*v8;
    uint64_t v10 = v8[1];
    unsigned __int8 v11 = *((unsigned char *)v8 + 16);
    v7[24] = (_UNKNOWN *)1;
    v7[25] = v9;
    v7[26] = (_UNKNOWN *)v10;
    v7[27] = (_UNKNOWN *)v11;
    *((unsigned char *)v7 + 228) = 33;
    *((_DWORD *)v7 + 56) = 0;
    goto LABEL_8;
  }
  uint64_t v7 = &off_1006BA9A0;
LABEL_9:
  sub_1000079E4(v1 + v6[5], (uint64_t)v5, &qword_100709E30);
  static ClientCommand.uidFetch(messages:items:)((uint64_t)v5, (uint64_t)v7, a1);
  swift_bridgeObjectRelease();
  return sub_100007A48((uint64_t)v5, &qword_100709E38);
}

uint64_t sub_10019D09C(uint64_t a1, int a2, uint64_t a3)
{
  LODWORD(v126) = a2;
  os_log_t v125 = (os_log_t)type metadata accessor for MailboxTaskLogger(0);
  uint64_t v5 = __chkstk_darwin(v125);
  uint64_t v127 = (uint64_t)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v123 = (uint64_t)&v115 - v8;
  __chkstk_darwin(v7);
  uint64_t v118 = (uint64_t)&v115 - v9;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v124 = (char *)&v115 - v16;
  __chkstk_darwin(v15);
  unint64_t v121 = (char *)&v115 - v17;
  uint64_t v18 = sub_10000566C(&qword_100709E30);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v119 = (uint64_t)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v120 = (uint64_t)&v115 - v22;
  __chkstk_darwin(v21);
  uint64_t v122 = (uint64_t)&v115 - v23;
  uint64_t v24 = sub_10000566C(&qword_10070E788);
  __chkstk_darwin(v24 - 8);
  int64_t v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for MessageMetadata(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v117 = (_DWORD *)((char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v116 = (uint64_t)&v115 - v32;
  __chkstk_darwin(v31);
  unint64_t v34 = (char *)&v115 - v33;
  sub_10001FDF0(a1 + 8, (uint64_t)v134, &qword_10070A8B8);
  sub_10001FDF0((uint64_t)v134, (uint64_t)&v135, &qword_10070A8B8);
  if (v136)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a3, v10);
    uint64_t v35 = a3;
    uint64_t v36 = v127;
    sub_10019ED30(v35, v127, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v37 = sub_1005E0EB0();
    os_log_type_t v38 = sub_1005E2590();
    int v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      LODWORD(v130) = v39;
      uint64_t v41 = v40;
      uint64_t v126 = swift_slowAlloc();
      uint64_t v133 = v126;
      *(_DWORD *)uint64_t v41 = 68159235;
      LODWORD(v131) = 2;
      sub_1005E2960();
      *(_WORD *)(v41 + 8) = 256;
      uint64_t isa_high = SHIDWORD(v125[2].isa);
      uint64_t v129 = v11;
      uint64_t v43 = v36 + isa_high;
      LOBYTE(v131) = *(unsigned char *)(v36 + isa_high);
      sub_1005E2960();
      *(_WORD *)(v41 + 11) = 2082;
      uint64_t v128 = v10;
      uint64_t v44 = *(void *)(v43 + 8);
      unint64_t v45 = *(void *)(v43 + 16);
      swift_bridgeObjectRetain();
      uint64_t v131 = sub_1000C6914(v44, v45, &v133);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 21) = 1040;
      LODWORD(v131) = 2;
      sub_1005E2960();
      *(_WORD *)(v41 + 27) = 512;
      LOWORD(v131) = *(_WORD *)(v43 + 24);
      sub_1005E2960();
      *(_WORD *)(v41 + 31) = 2160;
      uint64_t v131 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v41 + 41) = 2085;
      int v46 = *(_DWORD *)(v43 + 40);
      uint64_t v131 = *(void *)(v43 + 32);
      int v132 = v46;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1005E1CC0();
      uint64_t v131 = sub_1000C6914(v47, v48, &v133);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10019ED98(v36, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v130, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No Message UID found.", (uint8_t *)v41, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v14, v128);
    }
    else
    {
      sub_10019ED98(v36, type metadata accessor for MailboxTaskLogger);

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  else
  {
    uint64_t v127 = a3;
    uint64_t v128 = v10;
    uint64_t v115 = v34;
    uint64_t v129 = v11;
    char v50 = v135 < v126;
    uint64_t v126 = type metadata accessor for NewServerMessages();
    uint64_t v51 = (unsigned __int8 *)(v130 + *(int *)(v126 + 24));
    uint64_t v52 = *v51;
    int v53 = v51[1];
    int v54 = v51[2];
    int v55 = v51[3];
    int v56 = v51[4];
    sub_10019EA84(a1);
    uint64_t v57 = &_mh_execute_header;
    if (!v56) {
      uint64_t v57 = 0;
    }
    uint64_t v58 = 0x1000000;
    if (!v55) {
      uint64_t v58 = 0;
    }
    uint64_t v59 = 0x10000;
    if (!v54) {
      uint64_t v59 = 0;
    }
    uint64_t v60 = 256;
    if (!v53) {
      uint64_t v60 = 0;
    }
    sub_10019E0FC(a1, v50, v60 | v52 | v59 | v58 | (unint64_t)v57, (uint64_t)v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      sub_100007A48((uint64_t)v26, &qword_10070E788);
      uint64_t v62 = v128;
      uint64_t v61 = v129;
      uint64_t v63 = v124;
      uint64_t v64 = v127;
      (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v124, v127, v128);
      uint64_t v65 = v123;
      sub_10019ED30(v64, v123, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v66 = sub_1005E0EB0();
      os_log_type_t v67 = sub_1005E2590();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v133 = swift_slowAlloc();
        *(_DWORD *)uint64_t v68 = 68159235;
        LODWORD(v131) = 2;
        sub_1005E2960();
        *(_WORD *)(v68 + 8) = 256;
        uint64_t v69 = v65 + SHIDWORD(v125[2].isa);
        LOBYTE(v131) = *(unsigned char *)v69;
        sub_1005E2960();
        *(_WORD *)(v68 + 11) = 2082;
        uint64_t v70 = *(void *)(v69 + 8);
        unint64_t v71 = *(void *)(v69 + 16);
        swift_bridgeObjectRetain();
        uint64_t v131 = sub_1000C6914(v70, v71, &v133);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v68 + 21) = 1040;
        LODWORD(v131) = 2;
        sub_1005E2960();
        *(_WORD *)(v68 + 27) = 512;
        LOWORD(v131) = *(_WORD *)(v69 + 24);
        sub_1005E2960();
        *(_WORD *)(v68 + 31) = 2160;
        uint64_t v131 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v68 + 41) = 2085;
        int v72 = *(_DWORD *)(v69 + 40);
        uint64_t v131 = *(void *)(v69 + 32);
        int v132 = v72;
        swift_bridgeObjectRetain();
        uint64_t v73 = sub_1005E1CC0();
        uint64_t v131 = sub_1000C6914(v73, v74, &v133);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10019ED98(v123, type metadata accessor for MailboxTaskLogger);
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Ignoring message data.", (uint8_t *)v68, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v124, v128);
      }
      else
      {
        sub_10019ED98(v65, type metadata accessor for MailboxTaskLogger);

        return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v63, v62);
      }
    }
    else
    {
      uint64_t v75 = v28;
      uint64_t v76 = v115;
      sub_10019EDF8((uint64_t)v26, (uint64_t)v115, type metadata accessor for MessageMetadata);
      uint64_t v77 = v126;
      uint64_t v78 = v130;
      uint64_t v79 = v130 + *(int *)(v126 + 20);
      uint64_t v80 = v122;
      sub_1000079E4(v79, v122, &qword_100709E30);
      LODWORD(v131) = *v76;
      uint64_t v81 = sub_10000566C(&qword_100709E38);
      char v82 = MessageIdentifierSet.contains(_:)();
      sub_100007A48(v80, &qword_100709E38);
      uint64_t v83 = v128;
      uint64_t v84 = v129;
      if (v82)
      {
        uint64_t v85 = v116;
        sub_10019ED30((uint64_t)v76, v116, type metadata accessor for MessageMetadata);
        uint64_t v86 = *(int *)(v77 + 36);
        unint64_t v87 = *(void *)(v78 + v86);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v87 = sub_100018068(0, *(void *)(v87 + 16) + 1, 1, v87);
        }
        unint64_t v89 = *(void *)(v87 + 16);
        unint64_t v88 = *(void *)(v87 + 24);
        if (v89 >= v88 >> 1) {
          unint64_t v87 = sub_100018068(v88 > 1, v89 + 1, 1, v87);
        }
        *(void *)(v87 + 16) = v89 + 1;
        sub_10019EDF8(v85, v87+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v89, type metadata accessor for MessageMetadata);
        *(void *)(v78 + v86) = v87;
        uint64_t v90 = (uint64_t)v76;
      }
      else
      {
        uint64_t v130 = v81;
        uint64_t v91 = v120;
        sub_1000079E4(v79, v120, &qword_100709E30);
        uint64_t v92 = v121;
        uint64_t v93 = v127;
        (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v121, v127, v83);
        uint64_t v94 = v118;
        sub_10019ED30(v93, v118, type metadata accessor for MailboxTaskLogger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v95 = v117;
        sub_10019ED30((uint64_t)v76, (uint64_t)v117, type metadata accessor for MessageMetadata);
        uint64_t v96 = v119;
        sub_1000079E4(v91, v119, &qword_100709E30);
        char v97 = sub_1005E0EB0();
        os_log_type_t v98 = sub_1005E2590();
        int v99 = v98;
        if (os_log_type_enabled(v97, v98))
        {
          uint64_t v100 = swift_slowAlloc();
          uint64_t v127 = swift_slowAlloc();
          uint64_t v133 = v127;
          *(_DWORD *)uint64_t v100 = 68159747;
          LODWORD(v131) = 2;
          LODWORD(v126) = v99;
          sub_1005E2960();
          *(_WORD *)(v100 + 8) = 256;
          uint64_t v101 = v94;
          uint64_t v102 = v94 + SHIDWORD(v125[2].isa);
          LOBYTE(v131) = *(unsigned char *)v102;
          sub_1005E2960();
          *(_WORD *)(v100 + 11) = 2082;
          os_log_t v125 = v97;
          uint64_t v103 = *(void *)(v102 + 8);
          unint64_t v104 = *(void *)(v102 + 16);
          swift_bridgeObjectRetain();
          uint64_t v131 = sub_1000C6914(v103, v104, &v133);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v100 + 21) = 1040;
          LODWORD(v131) = 2;
          sub_1005E2960();
          *(_WORD *)(v100 + 27) = 512;
          LOWORD(v131) = *(_WORD *)(v102 + 24);
          sub_1005E2960();
          *(_WORD *)(v100 + 31) = 2160;
          uint64_t v131 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v100 + 41) = 2085;
          int v105 = *(_DWORD *)(v102 + 40);
          uint64_t v131 = *(void *)(v102 + 32);
          int v132 = v105;
          swift_bridgeObjectRetain();
          uint64_t v106 = sub_1005E1CC0();
          uint64_t v131 = sub_1000C6914(v106, v107, &v133);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_10019ED98(v101, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v100 + 51) = 1024;
          LODWORD(v102) = *v95;
          sub_10019ED98((uint64_t)v95, type metadata accessor for MessageMetadata);
          LODWORD(v131) = v102;
          sub_1005E2960();
          *(_WORD *)(v100 + 57) = 2082;
          uint64_t v108 = v119;
          uint64_t v109 = v122;
          sub_1000079E4(v119, v122, &qword_100709E30);
          uint64_t v110 = MessageIdentifierSet.debugDescription.getter(v130);
          unint64_t v112 = v111;
          sub_100007A48(v109, &qword_100709E38);
          uint64_t v131 = sub_1000C6914(v110, v112, &v133);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100007A48(v108, &qword_100709E30);
          os_log_t v113 = v125;
          _os_log_impl((void *)&_mh_execute_header, v125, (os_log_type_t)v126, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Ignoring UID %u outside of range-of-interest %{public}s.", (uint8_t *)v100, 0x43u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v129 + 8))(v121, v128);
          uint64_t v114 = v120;
        }
        else
        {
          sub_10019ED98((uint64_t)v95, type metadata accessor for MessageMetadata);

          sub_100007A48(v96, &qword_100709E30);
          sub_10019ED98(v94, type metadata accessor for MailboxTaskLogger);
          (*(void (**)(char *, uint64_t))(v84 + 8))(v92, v83);
          uint64_t v114 = v91;
        }
        sub_100007A48(v114, &qword_100709E30);
        uint64_t v90 = (uint64_t)v115;
      }
      return sub_10019ED98(v90, type metadata accessor for MessageMetadata);
    }
  }
}

uint64_t sub_10019E0FC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v6 = sub_1005E17E0();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v36[-v10];
  uint64_t v12 = sub_10000566C(&qword_10070D6F0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v36[-v16];
  uint64_t v18 = sub_10000566C(&qword_10070E790);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = &v36[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v23 = &v36[-v22];
  sub_10001FDF0(a1 + 8, (uint64_t)v46, &qword_10070A8B8);
  sub_10001FDF0((uint64_t)v46, (uint64_t)&v47, &qword_10070A8B8);
  if ((v48 & 1) != 0
    || (int v40 = v47,
        sub_10001FDF0(a1 + 528, (uint64_t)v45, &qword_10070A8E8),
        sub_10001FDF0((uint64_t)v45, (uint64_t)&v49, &qword_10070A8E8),
        (v50 & 1) != 0)
    || (uint64_t v39 = *(void *)(a1 + 512)) == 0
    || (uint64_t v38 = v49,
        sub_10001FDF0(a1 + 540, (uint64_t)v44, &qword_10070D710),
        sub_10001FDF0((uint64_t)v44, (uint64_t)&v51, &qword_10070D710),
        (v52 & 1) != 0))
  {
    sub_100061150(a1);
    uint64_t v24 = type metadata accessor for MessageMetadata(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v43, 1, 1, v24);
  }
  else
  {
    int v37 = a2 & 1;
    uint64_t v26 = v51;
    swift_bridgeObjectRetain();
    sub_10019E5BC((uint64_t)v17);
    sub_1000079E4((uint64_t)v17, (uint64_t)v15, &qword_10070D6F0);
    uint64_t v27 = v41;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v41 + 48))(v15, 1, v6) == 1)
    {
      uint64_t v28 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v23, 1, 1, v28);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 32))(v11, v15, v6);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v9, v11, v6);
      MessageMetadata.UnparsedHeader.init(_:)(v9);
      (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v11, v6);
      uint64_t v29 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v23, 0, 1, v29);
    }
    sub_100007A48((uint64_t)v17, &qword_10070D6F0);
    unint64_t v30 = FlagDecoder.decode(_:)(v39, v42 & 0x101010101);
    char v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(a1 + 520);
    sub_1000079E4((uint64_t)v23, (uint64_t)v21, &qword_10070E790);
    swift_bridgeObjectRetain();
    uint64_t v34 = v43;
    MessageMetadata.init(uid:internalDate:flags:gmailLabels:messageHeader:messageSize:indexingHint:)(v40, v38, v30 & 0xFFFFFFFF01010101, v32, v33, (uint64_t)v21, v26, v37, v43);
    sub_100061150(a1);
    sub_100007A48((uint64_t)v23, &qword_10070E790);
    uint64_t v35 = type metadata accessor for MessageMetadata(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
}

uint64_t sub_10019E5BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MessageData.BodySection();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = sub_10000566C(&qword_10070E798);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_10070D720);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v1 + 200);
  uint64_t v45 = v16;
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v38 = v12;
    uint64_t v39 = v4;
    uint64_t v40 = v3;
    uint64_t v41 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v19 = *(void *)(v4 + 72);
    uint64_t v42 = a1;
    uint64_t v43 = v19;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v44 = type metadata accessor for MessageData.BodySection;
      sub_10019ED30(v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      uint64_t v20 = (uint64_t)v7;
      uint64_t v21 = *(void **)v9;
      uint64_t v22 = *((void *)v9 + 1);
      char v23 = v9[16];
      uint64_t v24 = SectionSpecifier.header.unsafeMutableAddressor();
      uint64_t v26 = (void *)*v24;
      uint64_t v25 = v24[1];
      char v27 = *((unsigned char *)v24 + 16);
      swift_bridgeObjectRetain();
      sub_10013B5CC(v25, v27);
      uint64_t v28 = v21;
      uint64_t v7 = (char *)v20;
      BOOL v29 = static SectionSpecifier.__derived_struct_equals(_:_:)(v28, v22, v23, v26, v25, v27);
      swift_bridgeObjectRelease();
      sub_10013B5E0(v25, v27);
      sub_10019ED30((uint64_t)v9, v20, (uint64_t (*)(void))v44);
      if (v29 && *(unsigned char *)(v20 + 24) == 1)
      {
        sub_10019ED98(v20, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        uint64_t v12 = v38;
        sub_10019EDF8((uint64_t)v9, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
        uint64_t v30 = 0;
        uint64_t v15 = v41;
        a1 = v42;
        uint64_t v4 = v39;
        uint64_t v3 = v40;
        goto LABEL_9;
      }
      sub_10019ED98(v20, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      sub_10019ED98((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
      v18 += v43;
      --v17;
    }
    while (v17);
    uint64_t v30 = 1;
    uint64_t v15 = v41;
    a1 = v42;
    uint64_t v4 = v39;
    uint64_t v3 = v40;
    uint64_t v12 = v38;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = 1;
  }
LABEL_9:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, v30, 1, v3);
  sub_10001D550((uint64_t)&v45);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    char v31 = &qword_10070E798;
    uint64_t v32 = (uint64_t)v12;
LABEL_13:
    sub_100007A48(v32, v31);
    uint64_t v34 = sub_1005E17E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a1, 1, 1, v34);
  }
  sub_1000079E4((uint64_t)&v12[*(int *)(v3 + 24)], (uint64_t)v15, &qword_10070D720);
  sub_10019ED98((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MessageData.BodySection);
  uint64_t v33 = type metadata accessor for MessageData.BodyData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v15, 1, v33) == 1)
  {
    char v31 = &qword_10070D720;
    uint64_t v32 = (uint64_t)v15;
    goto LABEL_13;
  }
  uint64_t v36 = sub_1005E17E0();
  uint64_t v37 = *(void *)(v36 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(a1, v15, v36);
  sub_10019ED98((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MessageData.BodyData);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
}

uint64_t sub_10019EA84(uint64_t a1)
{
  uint64_t v25 = *(void *)(a1 + 208);
  uint64_t v24 = *(void *)(a1 + 216);
  uint64_t v23 = *(void *)(a1 + 224);
  uint64_t v22 = *(void *)(a1 + 232);
  uint64_t v21 = *(void *)(a1 + 240);
  uint64_t v20 = *(void *)(a1 + 248);
  uint64_t v19 = *(void *)(a1 + 256);
  uint64_t v18 = *(void *)(a1 + 264);
  long long v12 = *(_OWORD *)(a1 + 272);
  long long v11 = *(_OWORD *)(a1 + 288);
  long long v10 = *(_OWORD *)(a1 + 304);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 352);
  long long v8 = *(_OWORD *)(a1 + 336);
  uint64_t v2 = *(void *)(a1 + 368);
  uint64_t v3 = *(void *)(a1 + 376);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 384);
  uint64_t v16 = *(void *)(a1 + 400);
  uint64_t v17 = *(void *)(a1 + 392);
  uint64_t v14 = *(void *)(a1 + 416);
  uint64_t v15 = *(void *)(a1 + 408);
  uint64_t v5 = *(void *)(a1 + 432);
  uint64_t v13 = *(void *)(a1 + 424);
  sub_10013AAE4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(unsigned char *)(a1 + 192));
  swift_bridgeObjectRetain();
  sub_10013AAE4(v25, v24, v23, v22, v21, v20, v19, v18, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7,
    *((uint64_t *)&v7 + 1),
    v2,
    v3,
    v4);
  sub_10019EC70(v17, v16, v15, v14, v13, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10019EC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10019ED30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10019ED98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10019EDF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10019EE60@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v27 = a1;
  uint64_t v28 = a3;
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v7 - 8);
  long long v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_100709E30);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v27 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v27 - v18;
  sub_1000079E4(a2, (uint64_t)v6, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v20 < 1)
  {
    sub_100007A48((uint64_t)v6, &qword_100709E38);
    uint64_t v21 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v6, (uint64_t)v17, &qword_100709E38);
    sub_10001FDF0((uint64_t)v17, (uint64_t)v9, &qword_100709E30);
    uint64_t v21 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v21, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100007A48(a2, &qword_100709E38);
    uint64_t v22 = v27;
    long long v31 = *v27;
    sub_10001D550((uint64_t)&v31);
    uint64_t v29 = *((void *)v22 + 3);
    int v30 = *((_DWORD *)v22 + 8);
    sub_10001D550((uint64_t)&v29);
    sub_100007A48((uint64_t)v9, &qword_10070A000);
    uint64_t v23 = type metadata accessor for NotifyMessagesVanished();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v28, 1, 1, v23);
  }
  else
  {
    sub_10001FDF0((uint64_t)v9, (uint64_t)v19, &qword_100709E30);
    sub_1000079E4((uint64_t)v19, (uint64_t)v14, &qword_100709E30);
    uint64_t v25 = v28;
    sub_10019F1E8(v27, (uint64_t)v14, v28);
    sub_100007A48(a2, &qword_100709E38);
    sub_100007A48((uint64_t)v19, &qword_100709E30);
    uint64_t v26 = type metadata accessor for NotifyMessagesVanished();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
}

Swift::Int sub_10019F1C0()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA080);
  qword_1007617B0 = result;
  return result;
}

uint64_t sub_10019F1E8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for NotifyMessagesVanished();
  uint64_t v7 = (void *)(a3 + v6[7]);
  void *v7 = 0xD000000000000016;
  v7[1] = 0x80000001005F51C0;
  *(void *)(a3 + v6[9]) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a3 + v6[10]) = 1;
  long long v8 = a1[1];
  long long v13 = *a1;
  uint64_t v11 = *((void *)a1 + 3);
  int v12 = *((_DWORD *)a1 + 8);
  LODWORD(v7) = v12;
  *(_OWORD *)a3 = v13;
  *(_OWORD *)(a3 + 16) = v8;
  *(_DWORD *)(a3 + 32) = v7;
  sub_1000079E4(a2, a3 + v6[6], &qword_100709E30);
  *(void *)(a3 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_10002292C((uint64_t)&v11);
  sub_10002292C((uint64_t)&v13);
  sub_10003BC88();
  sub_1005E2BF0();
  sub_10000566C(&qword_10070B898);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005F6670;
  *(void *)(v9 + 32) = &type metadata for MoveAndCopyMessages;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  sub_10001D550((uint64_t)&v13);
  sub_10001D550((uint64_t)&v11);
  uint64_t result = sub_100007A48(a2, &qword_100709E30);
  *(void *)(a3 + v6[8]) = v9;
  return result;
}

uint64_t sub_10019F39C(uint64_t a1)
{
  uint64_t v84 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v3 = __chkstk_darwin(v84);
  uint64_t v88 = (uint64_t)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v87 = (uint64_t)&v83 - v5;
  uint64_t v91 = sub_1005E0ED0();
  uint64_t v93 = *(void *)(v91 - 8);
  uint64_t v6 = __chkstk_darwin(v91);
  uint64_t v86 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v90 = (char *)&v83 - v8;
  uint64_t v9 = sub_10000566C(&qword_10070A9C0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v83 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v83 - v12;
  uint64_t v14 = sub_10000566C(&qword_100709E30);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v89 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v83 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v83 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v83 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)&v83 - v26;
  uint64_t v28 = type metadata accessor for NotifyMessagesVanished();
  sub_1000079E4(v1 + *(int *)(v28 + 24), (uint64_t)v27, &qword_100709E30);
  uint64_t v85 = sub_10000566C(&qword_100709E38);
  uint64_t v92 = v27;
  MessageIdentifierSet.ranges.getter((uint64_t)v13);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v29 = sub_1005E35B0();
  uint64_t v30 = sub_1005E35E0();
  uint64_t v31 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v29 < v31 || result < v29)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v33 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v30 < v33 || result < v30) {
    goto LABEL_18;
  }
  if (__OFSUB__(v30, v29))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_100007A48((uint64_t)v13, &qword_10070A9C0);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
  if (v30 - v29 <= 9)
  {
    uint64_t v35 = v90;
    uint64_t v36 = v91;
    v34(v90, a1, v91);
    uint64_t v37 = v87;
    sub_100120DE8(a1, v87, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v38 = (uint64_t)v92;
    sub_1000079E4((uint64_t)v92, (uint64_t)v25, &qword_100709E30);
    uint64_t v39 = (uint64_t)v22;
    sub_1000079E4(v38, (uint64_t)v22, &qword_100709E30);
    uint64_t v40 = sub_1005E0EB0();
    os_log_type_t v41 = sub_1005E25C0();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v88 = v39;
      uint64_t v43 = v42;
      uint64_t v89 = swift_slowAlloc();
      uint64_t v96 = v89;
      *(_DWORD *)uint64_t v43 = 68159747;
      LODWORD(v94) = 2;
      sub_1005E2960();
      *(_WORD *)(v43 + 8) = 256;
      uint64_t v44 = v37 + *(int *)(v84 + 20);
      LOBYTE(v94) = *(unsigned char *)v44;
      sub_1005E2960();
      *(_WORD *)(v43 + 11) = 2082;
      uint64_t v45 = *(void *)(v44 + 8);
      unint64_t v46 = *(void *)(v44 + 16);
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_1000C6914(v45, v46, &v96);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 21) = 1040;
      LODWORD(v94) = 2;
      sub_1005E2960();
      *(_WORD *)(v43 + 27) = 512;
      LOWORD(v94) = *(_WORD *)(v44 + 24);
      sub_1005E2960();
      *(_WORD *)(v43 + 31) = 2160;
      uint64_t v94 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v43 + 41) = 2085;
      int v47 = *(_DWORD *)(v44 + 40);
      uint64_t v94 = *(void *)(v44 + 32);
      int v95 = v47;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1005E1CC0();
      uint64_t v94 = sub_1000C6914(v48, v49, &v96);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100120E50(v87, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v43 + 51) = 2048;
      uint64_t v50 = v85;
      MessageIdentifierSet.count.getter();
      uint64_t v52 = v51;
      sub_100007A48((uint64_t)v25, &qword_100709E30);
      uint64_t v94 = v52;
      sub_1005E2960();
      *(_WORD *)(v43 + 61) = 2082;
      uint64_t v53 = v88;
      uint64_t v54 = MessageIdentifierSet.debugDescription.getter(v50);
      uint64_t v94 = sub_1000C6914(v54, v55, &v96);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100007A48(v53, &qword_100709E30);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UID(s) vanished: %{public}s", (uint8_t *)v43, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v91);
      uint64_t v56 = (uint64_t)v92;
    }
    else
    {
      sub_100007A48((uint64_t)v25, &qword_100709E30);

      sub_100007A48(v39, &qword_100709E30);
      sub_100120E50(v37, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v35, v36);
      uint64_t v56 = v38;
    }
    return sub_100007A48(v56, &qword_100709E30);
  }
  uint64_t v57 = v86;
  uint64_t v58 = v91;
  v34(v86, a1, v91);
  uint64_t v59 = v88;
  sub_100120DE8(a1, v88, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v60 = (uint64_t)v92;
  sub_1000079E4((uint64_t)v92, (uint64_t)v19, &qword_100709E30);
  uint64_t v61 = v89;
  sub_1000079E4(v60, v89, &qword_100709E30);
  uint64_t v62 = sub_1005E0EB0();
  int v63 = sub_1005E25C0();
  if (!os_log_type_enabled(v62, (os_log_type_t)v63))
  {
    sub_100007A48((uint64_t)v19, &qword_100709E30);

    sub_100007A48(v61, &qword_100709E30);
    sub_100120E50(v59, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v57, v58);
    uint64_t v56 = v60;
    return sub_100007A48(v56, &qword_100709E30);
  }
  LODWORD(v90) = v63;
  uint64_t v64 = swift_slowAlloc();
  uint64_t v96 = swift_slowAlloc();
  *(_DWORD *)uint64_t v64 = 68159747;
  LODWORD(v94) = 2;
  sub_1005E2960();
  *(_WORD *)(v64 + 8) = 256;
  uint64_t v65 = v59 + *(int *)(v84 + 20);
  LOBYTE(v94) = *(unsigned char *)v65;
  sub_1005E2960();
  *(_WORD *)(v64 + 11) = 2082;
  uint64_t v66 = *(void *)(v65 + 8);
  unint64_t v67 = *(void *)(v65 + 16);
  swift_bridgeObjectRetain();
  uint64_t v94 = sub_1000C6914(v66, v67, &v96);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v64 + 21) = 1040;
  LODWORD(v94) = 2;
  sub_1005E2960();
  *(_WORD *)(v64 + 27) = 512;
  LOWORD(v94) = *(_WORD *)(v65 + 24);
  sub_1005E2960();
  *(_WORD *)(v64 + 31) = 2160;
  uint64_t v94 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v64 + 41) = 2085;
  int v68 = *(_DWORD *)(v65 + 40);
  uint64_t v94 = *(void *)(v65 + 32);
  int v95 = v68;
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_1005E1CC0();
  uint64_t v94 = sub_1000C6914(v69, v70, &v96);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100120E50(v88, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v64 + 51) = 2048;
  MessageIdentifierSet.count.getter();
  uint64_t v72 = v71;
  sub_100007A48((uint64_t)v19, &qword_100709E30);
  uint64_t v94 = v72;
  uint64_t v73 = v89;
  sub_1005E2960();
  *(_WORD *)(v64 + 61) = 2082;
  uint64_t result = sub_1000702CC();
  if ((result & 0x100000000) != 0) {
    goto LABEL_21;
  }
  unsigned int v74 = result;
  uint64_t v75 = v83;
  MessageIdentifierSet.ranges.getter(v83);
  uint64_t v76 = sub_100070018();
  char v78 = v77;
  uint64_t result = sub_100007A48(v75, &qword_10070A9C0);
  if ((v78 & 1) == 0)
  {
    uint64_t v79 = (uint64_t)v92;
    if (HIDWORD(v76) >= v74)
    {
      uint64_t v94 = __PAIR64__(HIDWORD(v76), v74);
      uint64_t v80 = sub_10000566C(&qword_10070A9B8);
      uint64_t v81 = MessageIdentifierRange.debugDescription.getter(v80);
      uint64_t v94 = sub_1000C6914(v81, v82, &v96);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100007A48(v73, &qword_100709E30);
      _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v90, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. %ld UID(s) vanished in range %{public}s.", (uint8_t *)v64, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v93 + 8))(v86, v91);
      uint64_t v56 = v79;
      return sub_100007A48(v56, &qword_100709E30);
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_10019FFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v116 = a3;
  uint64_t v120 = a1;
  uint64_t v108 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v4 = __chkstk_darwin(v108);
  uint64_t v114 = (uint64_t)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v113 = (uint64_t)&v107 - v6;
  uint64_t v117 = sub_1005E0ED0();
  uint64_t v119 = *(void *)(v117 - 8);
  uint64_t v7 = __chkstk_darwin(v117);
  uint64_t v109 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v115 = (char *)&v107 - v9;
  uint64_t v10 = sub_10000566C(&qword_10070A9C0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v107 = (uint64_t)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000566C(&qword_100709E30);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v112 = (uint64_t)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v110 = (uint64_t)&v107 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v111 = (uint64_t)&v107 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v121 = (char *)&v107 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v107 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v118 = (uint64_t)&v107 - v35;
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v107 - v36;
  uint64_t v38 = type metadata accessor for NotifyMessagesVanished();
  sub_1000079E4(a2 + *(int *)(v38 + 24), (uint64_t)v37, &qword_100709E30);
  uint64_t v39 = v120 + *(int *)(type metadata accessor for MailboxSyncState() + 48);
  uint64_t v40 = v39 + *(int *)(type metadata accessor for PendingServerResponses() + 24);
  sub_10000566C(&qword_100709E60);
  sub_1005E3660();
  uint64_t v41 = (uint64_t)v37;
  uint64_t v42 = v15;
  sub_100007A48(v41, &qword_100709E38);
  sub_1000079E4(v40, (uint64_t)v17, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v43 < 1)
  {
    sub_100007A48((uint64_t)v17, &qword_100709E38);
    uint64_t v44 = 1;
  }
  else
  {
    sub_10001FDF0((uint64_t)v17, (uint64_t)v33, &qword_100709E38);
    sub_10001FDF0((uint64_t)v33, (uint64_t)v20, &qword_100709E30);
    uint64_t v44 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, v44, 1, v21);
  int v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
  uint64_t v46 = (uint64_t)v121;
  if (v45 == 1)
  {
    int v47 = &qword_10070A000;
    uint64_t v48 = (uint64_t)v20;
    return sub_100007A48(v48, v47);
  }
  uint64_t v49 = v118;
  sub_10001FDF0((uint64_t)v20, v118, &qword_100709E30);
  MessageIdentifierSet.ranges.getter((uint64_t)v14);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v50 = sub_1005E35B0();
  uint64_t v51 = sub_1005E35E0();
  uint64_t v52 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v50 < v52 || result < v50)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v54 = sub_1005E35B0();
  uint64_t result = sub_1005E35E0();
  if (v51 < v54 || result < v51) {
    goto LABEL_25;
  }
  BOOL v55 = __OFSUB__(v51, v50);
  uint64_t v56 = v51 - v50;
  if (v55)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_100007A48((uint64_t)v14, &qword_10070A9C0);
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
  if (v56 <= 9)
  {
    uint64_t v59 = v115;
    uint64_t v58 = v116;
    uint64_t v60 = v117;
    v57(v115, v116, v117);
    uint64_t v61 = v113;
    sub_100120DE8(v58, v113, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1000079E4(v49, v46, &qword_100709E30);
    uint64_t v62 = v111;
    sub_1000079E4(v49, v111, &qword_100709E30);
    int v63 = sub_1005E0EB0();
    os_log_type_t v64 = sub_1005E25C0();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      uint64_t v124 = v120;
      *(_DWORD *)uint64_t v65 = 68159747;
      LODWORD(v122) = 2;
      sub_1005E2960();
      *(_WORD *)(v65 + 8) = 256;
      uint64_t v66 = *(int *)(v108 + 20);
      uint64_t v116 = v42;
      uint64_t v67 = v61 + v66;
      LOBYTE(v122) = *(unsigned char *)(v61 + v66);
      sub_1005E2960();
      *(_WORD *)(v65 + 11) = 2082;
      uint64_t v68 = *(void *)(v67 + 8);
      unint64_t v69 = *(void *)(v67 + 16);
      swift_bridgeObjectRetain();
      uint64_t v122 = sub_1000C6914(v68, v69, &v124);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 21) = 1040;
      LODWORD(v122) = 2;
      sub_1005E2960();
      *(_WORD *)(v65 + 27) = 512;
      LOWORD(v122) = *(_WORD *)(v67 + 24);
      sub_1005E2960();
      *(_WORD *)(v65 + 31) = 2160;
      uint64_t v122 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v65 + 41) = 2085;
      int v70 = *(_DWORD *)(v67 + 40);
      uint64_t v122 = *(void *)(v67 + 32);
      int v123 = v70;
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1005E1CC0();
      uint64_t v122 = sub_1000C6914(v71, v72, &v124);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100120E50(v113, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v65 + 51) = 2048;
      uint64_t v73 = v116;
      uint64_t v74 = (uint64_t)v121;
      MessageIdentifierSet.count.getter();
      uint64_t v76 = v75;
      sub_100007A48(v74, &qword_100709E30);
      uint64_t v122 = v76;
      sub_1005E2960();
      *(_WORD *)(v65 + 61) = 2082;
      uint64_t v77 = v111;
      uint64_t v78 = MessageIdentifierSet.debugDescription.getter(v73);
      uint64_t v122 = sub_1000C6914(v78, v79, &v124);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100007A48(v77, &qword_100709E30);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Done. Still %ld vanished UID(s) remaining: %{public}s", (uint8_t *)v65, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v119 + 8))(v115, v117);
      uint64_t v48 = v118;
    }
    else
    {
      sub_100007A48(v46, &qword_100709E30);

      sub_100007A48(v62, &qword_100709E30);
      sub_100120E50(v61, type metadata accessor for MailboxTaskLogger);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v59, v60);
      uint64_t v48 = v49;
    }
    int v47 = &qword_100709E30;
    return sub_100007A48(v48, v47);
  }
  uint64_t v80 = v109;
  uint64_t v81 = v116;
  uint64_t v82 = v117;
  v57(v109, v116, v117);
  uint64_t v83 = v114;
  sub_100120DE8(v81, v114, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v84 = v110;
  sub_1000079E4(v49, v110, &qword_100709E30);
  uint64_t v85 = v112;
  sub_1000079E4(v49, v112, &qword_100709E30);
  uint64_t v86 = sub_1005E0EB0();
  int v87 = sub_1005E25C0();
  if (!os_log_type_enabled(v86, (os_log_type_t)v87))
  {
    sub_100007A48(v84, &qword_100709E30);

    sub_100007A48(v85, &qword_100709E30);
    sub_100120E50(v83, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v80, v82);
    goto LABEL_22;
  }
  LODWORD(v121) = v87;
  uint64_t v88 = swift_slowAlloc();
  uint64_t v120 = swift_slowAlloc();
  uint64_t v124 = v120;
  *(_DWORD *)uint64_t v88 = 68159747;
  LODWORD(v122) = 2;
  sub_1005E2960();
  *(_WORD *)(v88 + 8) = 256;
  uint64_t v89 = v83 + *(int *)(v108 + 20);
  LOBYTE(v122) = *(unsigned char *)v89;
  sub_1005E2960();
  *(_WORD *)(v88 + 11) = 2082;
  uint64_t v90 = *(void *)(v89 + 8);
  unint64_t v91 = *(void *)(v89 + 16);
  swift_bridgeObjectRetain();
  uint64_t v122 = sub_1000C6914(v90, v91, &v124);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  *(_WORD *)(v88 + 21) = 1040;
  LODWORD(v122) = 2;
  sub_1005E2960();
  *(_WORD *)(v88 + 27) = 512;
  LOWORD(v122) = *(_WORD *)(v89 + 24);
  sub_1005E2960();
  *(_WORD *)(v88 + 31) = 2160;
  uint64_t v122 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v88 + 41) = 2085;
  int v92 = *(_DWORD *)(v89 + 40);
  uint64_t v93 = v112;
  uint64_t v122 = *(void *)(v89 + 32);
  int v123 = v92;
  swift_bridgeObjectRetain();
  uint64_t v94 = sub_1005E1CC0();
  uint64_t v122 = sub_1000C6914(v94, v95, &v124);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100120E50(v114, type metadata accessor for MailboxTaskLogger);
  *(_WORD *)(v88 + 51) = 2048;
  uint64_t v96 = v110;
  MessageIdentifierSet.count.getter();
  uint64_t v98 = v97;
  sub_100007A48(v96, &qword_100709E30);
  uint64_t v122 = v98;
  sub_1005E2960();
  *(_WORD *)(v88 + 61) = 2082;
  uint64_t result = sub_1000702CC();
  if ((result & 0x100000000) != 0) {
    goto LABEL_28;
  }
  unsigned int v99 = result;
  uint64_t v100 = v107;
  MessageIdentifierSet.ranges.getter(v107);
  uint64_t v101 = sub_100070018();
  char v103 = v102;
  uint64_t result = sub_100007A48(v100, &qword_10070A9C0);
  if ((v103 & 1) == 0)
  {
    uint64_t v49 = v118;
    if (HIDWORD(v101) >= v99)
    {
      uint64_t v122 = __PAIR64__(HIDWORD(v101), v99);
      uint64_t v104 = sub_10000566C(&qword_10070A9B8);
      uint64_t v105 = MessageIdentifierRange.debugDescription.getter(v104);
      uint64_t v122 = sub_1000C6914(v105, v106, &v124);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100007A48(v93, &qword_100709E30);
      _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v121, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Done. Still %ld vanished UID(s) remaining in range %{public}s.", (uint8_t *)v88, 0x47u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v119 + 8))(v109, v117);
LABEL_22:
      uint64_t v48 = v49;
      int v47 = &qword_100709E30;
      return sub_100007A48(v48, v47);
    }
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001A0DF0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A0DFC()
{
  if (qword_100709DC0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A0E58()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NotifyMessagesVanished()
{
  uint64_t result = qword_10070E7F8;
  if (!qword_10070E7F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001A0EB0(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

unint64_t sub_1001A0EC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_1001A1A2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001A0EF8(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 24);
  unsigned int v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(unsigned char *)(result + 184) == 1)
  {
    uint64_t v5 = result;
    uint64_t v7 = *(void *)(result + 168);
    uint64_t v6 = *(void *)(result + 176);
    uint64_t v11 = *(void *)(result + 160);
    uint64_t v8 = v11;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v11, v3, v4, 0, (void (*)(char *))sub_1001A1A24, v10);
    unint64_t result = sub_10000F0D4(v8, v7, v6, 1);
    uint64_t v9 = v11;
    *(void *)(v5 + 168) = 0;
    *(void *)(v5 + 176) = 0;
    *(void *)(v5 + 160) = v9;
    *(unsigned char *)(v5 + 184) = 1;
  }
  return result;
}

uint64_t sub_1001A0FB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1001A0FE8(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(void *)(a1 + 24) = a2[3];
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    *(void *)(a1 + 40) = a2[5];
    uint64_t v8 = a2 + 6;
    long long v9 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 72) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(a1 + 48, v8, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)(a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    *(void *)(a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v21 = a3[10];
    *(void *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(unsigned char *)(a1 + v21) = *((unsigned char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001A1190(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 48);
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A124C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a2 + 48;
  long long v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(a1 + 48, v7, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v20 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001A13A4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_100022498((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1001A14F8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_1001A15D0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 48);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1001A1700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A1714);
}

uint64_t sub_1001A1714(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100709E30);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001A17C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A17DC);
}

void *sub_1001A17DC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E30);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1001A1888()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1001A1950()
{
  unint64_t result = qword_10070E848;
  if (!qword_10070E848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E848);
  }
  return result;
}

unint64_t sub_1001A19A4(uint64_t a1)
{
  unint64_t result = sub_1001A19CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A19CC()
{
  unint64_t result = qword_10070E900;
  if (!qword_10070E900)
  {
    type metadata accessor for NotifyMessagesVanished();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E900);
  }
  return result;
}

uint64_t sub_1001A1A24(uint64_t a1)
{
  return sub_10019FFB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1001A1A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = sub_10010565C(a2);
  uint64_t v12 = v11[2];
  uint64_t v31 = v2;
  if (!v12)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_10000566C(&qword_10070CC48);
    uint64_t v23 = swift_allocBox();
    uint64_t v25 = (uint64_t)v24 + *(int *)(v22 + 48);
    uint64_t v26 = v31;
    uint64_t v27 = v31[1];
    *uint64_t v24 = *v31;
    v24[1] = v27;
    uint64_t v28 = type metadata accessor for NotifyMessagesVanished();
    sub_1000079E4((uint64_t)v26 + *(int *)(v28 + 24), v25, &qword_100709E30);
    uint64_t v21 = v23 | 0x2000000000000006;
    swift_bridgeObjectRetain();
    return v21;
  }
  uint64_t v13 = 0;
  uint64_t v30 = v11;
  uint64_t v33 = v11 + 4;
  uint64_t v34 = a1;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v32 = v12;
  while (!v14)
  {
LABEL_4:
    if (++v13 == v12) {
      goto LABEL_12;
    }
  }
  int v15 = *((_DWORD *)v33 + v13);
  uint64_t v16 = v35;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v19 = v14;
  while (1)
  {
    sub_100120DE8(v17, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_100120DE8((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100120E50((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_100120E50((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v17 += v18;
    if (!--v19)
    {
      a1 = v34;
      swift_bridgeObjectRelease_n();
      uint64_t v12 = v32;
      goto LABEL_4;
    }
  }
  int v20 = *((_DWORD *)v8 + 2);
  sub_10007C4A4(*(void *)v8);
  if (v20 != v15) {
    goto LABEL_8;
  }
  sub_100120E50((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

unsigned char *storeEnumTagSinglePayload for NotifyMessagesVanished.ActionID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001A1D78);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotifyMessagesVanished.ActionID()
{
  return &type metadata for NotifyMessagesVanished.ActionID;
}

double sub_1001A1DB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 192);
  v19[0] = *(_OWORD *)(a1 + 208);
  *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)(a1 + 220);
  long long v5 = *(_OWORD *)(a1 + 160);
  long long v17 = *(_OWORD *)(a1 + 176);
  long long v18 = v4;
  long long v16 = v5;
  uint64_t v6 = sub_1000408DC();
  Swift::Int v15 = *(void *)(a1 + 56);
  Swift::Int v7 = v15;
  swift_bridgeObjectRetain();
  sub_10002292C((uint64_t)&v15);
  Swift::Int v8 = sub_1001A2A9C(v7, v6);
  swift_bridgeObjectRelease();
  sub_1000D7B00(a1);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10009A8E4(v8);
  swift_bridgeObjectRelease();
  sub_1001A1EB4(v9, (uint64_t)v13);
  if (*(void *)&v13[0])
  {
    long long v10 = v13[3];
    *(_OWORD *)(a2 + 32) = v13[2];
    *(_OWORD *)(a2 + 48) = v10;
    *(void *)(a2 + 64) = v14;
    long long v11 = v13[1];
    *(_OWORD *)a2 = v13[0];
    *(_OWORD *)(a2 + 16) = v11;
  }
  else
  {
    sub_1001A2D24((uint64_t)v13);
    *(void *)(a2 + 64) = 0;
    *(void *)&long long v11 = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return *(double *)&v11;
}

double sub_1001A1EB4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v5[0] = &type metadata for NotifySyncRequestCompletion;
  sub_1005E2BF0();
  v5[6] = 0xD00000000000001BLL;
  v5[7] = 0x80000001005F52F0;
  if (*(void *)(a1 + 16))
  {
    v5[8] = a1;
    sub_10009B848((uint64_t)v5, a2);
    sub_10009B8A4((uint64_t)v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10003C9A8((uint64_t)v5);
    swift_bridgeObjectRelease();
    *(void *)(a2 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1001A1F7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_1001A3348(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10009B848(v2, (uint64_t)v29);
  sub_10009B848(v2, (uint64_t)v28);
  long long v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v13 = 68158722;
    LODWORD(v26) = 2;
    uint64_t v25 = v7;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    uint64_t v14 = &v6[*(int *)(v4 + 20)];
    uint64_t v15 = *((void *)v14 + 1);
    unint64_t v16 = *((void *)v14 + 2);
    LOBYTE(v26) = *(void *)v14;
    sub_1005E2960();
    *(_WORD *)(v13 + 11) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1000C6914(v15, v16, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100105288((uint64_t)v6, type metadata accessor for Task.Logger);
    *(_WORD *)(v13 + 21) = 2048;
    uint64_t v17 = *(void *)(v30 + 16);
    sub_10009B8A4((uint64_t)v29);
    uint64_t v26 = v17;
    sub_1005E2960();
    *(_WORD *)(v13 + 31) = 2082;
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_100092C58(v18);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1000C6914(v19, v21, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10009B8A4((uint64_t)v28);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%.*hhx-%{public}s] Created task to notify that %ld sync requests completed: %{public}s.", (uint8_t *)v13, 0x29u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  }
  else
  {
    sub_10009B8A4((uint64_t)v29);
    sub_100105288((uint64_t)v6, type metadata accessor for Task.Logger);
    sub_10009B8A4((uint64_t)v28);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1001A2354(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v52);
  uint64_t v64 = (uint64_t)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0ED0();
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v2 + 64);
  uint64_t v11 = *(void *)(v10 + 56);
  uint64_t v60 = v10 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v61 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v58 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v49 = (char *)&v67 + 4;
  uint64_t v48 = (char *)&v67 + 1;
  uint64_t v57 = v68;
  uint64_t v65 = v10;
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  *(void *)&long long v16 = 68158978;
  long long v47 = v16;
  v46[1] = (char *)&type metadata for Any + 8;
  uint64_t v53 = a2;
  uint64_t v50 = v6;
  uint64_t v51 = a1;
  int v63 = v9;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_21;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v61) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v60 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v61) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v60 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v61) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v60 + 8 * v15);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v61) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v60 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v15 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_43;
              }
              if (v15 >= v61) {
                return swift_release();
              }
              unint64_t v20 = *(void *)(v60 + 8 * v15);
              ++v21;
              if (v20) {
                goto LABEL_20;
              }
            }
          }
          int64_t v15 = v21;
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_21:
    unsigned int v22 = *(_DWORD *)(*(void *)(v65 + 48) + 4 * v18);
    uint64_t v23 = sub_100024260(v22);
    if (v24)
    {
      unint64_t v25 = v23;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = *(void *)(a1 + 56);
      v68[0] = v27;
      *(void *)(a1 + 56) = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100098098();
        uint64_t v27 = v68[0];
      }
      uint64_t v28 = (unsigned __int8 *)(*(void *)(v27 + 56) + 32 * v25);
      uint64_t v29 = *v28;
      uint64_t v66 = *((void *)v28 + 1);
      uint64_t v30 = *((void *)v28 + 3);
      sub_100096490(v25, v27);
      *(void *)(a1 + 56) = v27;
      swift_bridgeObjectRelease();
      int64_t v31 = static MonotonicTime.now()();
      uint64_t v32 = v31 - v30;
      if (v31 >= v30)
      {
        if (__OFSUB__(v31, v30)) {
          goto LABEL_42;
        }
      }
      else
      {
        if (__OFSUB__(v30, v31)) {
          goto LABEL_40;
        }
        uint64_t v32 = v31 - v30;
        if (__OFSUB__(0, v30 - v31)) {
          goto LABEL_41;
        }
      }
      double v33 = (double)v32 / 1000000000.0;
      if ((~*(void *)&v33 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        JUMPOUT(0x1001A2A54);
      }
      if (v33 <= -9.22337204e18) {
        goto LABEL_37;
      }
      if (v33 >= 9.22337204e18) {
        goto LABEL_38;
      }
      uint64_t v62 = v29;
      uint64_t v34 = v63;
      (*v59)(v63, a2, v6);
      sub_1001A3348(a2, v64, type metadata accessor for Task.Logger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1005E0EB0();
      uint64_t v36 = v6;
      int v37 = sub_1005E25C0();
      if (os_log_type_enabled(v35, (os_log_type_t)v37))
      {
        int v56 = v37;
        uint64_t v54 = (uint64_t)v33;
        uint64_t v38 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        v68[0] = v55;
        *(_DWORD *)uint64_t v38 = v47;
        LODWORD(v67) = 2;
        sub_1005E2960();
        *(_WORD *)(v38 + 8) = 256;
        uint64_t v39 = v64;
        uint64_t v40 = (void *)(v64 + *(int *)(v52 + 20));
        uint64_t v41 = v40[1];
        unint64_t v42 = v40[2];
        LOBYTE(v67) = *v40;
        sub_1005E2960();
        *(_WORD *)(v38 + 11) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v67 = sub_1000C6914(v41, v42, v68);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100105288(v39, type metadata accessor for Task.Logger);
        *(_WORD *)(v38 + 21) = 1024;
        LODWORD(v67) = v22;
        sub_1005E2960();
        *(_WORD *)(v38 + 27) = 2082;
        a1 = v51;
        uint64_t v43 = sub_1005E2CB0();
        uint64_t v67 = sub_1000C6914(v43, v44, v68);
        sub_1005E2960();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 37) = 2048;
        uint64_t v67 = v54;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v56, "[%.*hhx-%{public}s] Sync request #%u (%{public}s) completed after %ld seconds.", (uint8_t *)v38, 0x2Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v6 = v50;
        (*v58)(v63, v50);
        a2 = v53;
      }
      else
      {
        sub_100105288(v64, type metadata accessor for Task.Logger);

        swift_bridgeObjectRelease_n();
        (*v58)(v34, v36);
        uint64_t v6 = v36;
      }
    }
  }
}

unint64_t sub_1001A2A68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_1001A30C8(a1, a2);
  *a3 = result;
  return result;
}

Swift::Int sub_1001A2A9C(Swift::Int result, uint64_t a2)
{
  Swift::Int v3 = result;
  int64_t v4 = 0;
  Swift::Int v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  Swift::Int v22 = result + 64;
  Swift::Int v23 = result;
LABEL_5:
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_22:
    Swift::UInt32 v15 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v11);
    if (!*(void *)(a2 + 16)) {
      goto LABEL_29;
    }
    sub_1005E33F0();
    sub_1005E3440(v15);
    unint64_t result = sub_1005E3470();
    uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v17 = result & ~v16;
    if (((*(void *)(v9 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t v18 = *(void *)(a2 + 48);
    if (*(_DWORD *)(v18 + 4 * v17) != v15)
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        unint64_t v17 = (v17 + 1) & v19;
        if (((*(void *)(v9 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v18 + 4 * v17) == v15) {
          goto LABEL_5;
        }
      }
LABEL_29:
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        unint64_t result = sub_10001A774(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      unint64_t v20 = _swiftEmptyArrayStorage[3];
      if (v21 >= v20 >> 1) {
        unint64_t result = sub_10001A774(v20 > 1, v21 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v21 + 1;
      *((_DWORD *)&_swiftEmptyArrayStorage[4] + v21) = v15;
      Swift::Int v5 = v22;
      Swift::Int v3 = v23;
    }
  }
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v12 >= v24) {
    goto LABEL_34;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v24) {
    goto LABEL_34;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v24) {
    goto LABEL_34;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 3;
  if (v12 + 3 >= v24) {
    goto LABEL_34;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v24)
  {
LABEL_34:
    swift_release();
    return (Swift::Int)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  int64_t v4 = v14;
  if (v13)
  {
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v24) {
      goto LABEL_34;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1001A2D24(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070B6B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for NotifySyncRequestCompletion(uint64_t a1)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotifySyncRequestCompletion(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for NotifySyncRequestCompletion(void *a1, void *a2)
{
  *a1 = *a2;
  sub_100022498(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for NotifySyncRequestCompletion(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NotifySyncRequestCompletion(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NotifySyncRequestCompletion(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotifySyncRequestCompletion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotifySyncRequestCompletion()
{
  return &type metadata for NotifySyncRequestCompletion;
}

unint64_t sub_1001A2FF8()
{
  unint64_t result = qword_10070E908;
  if (!qword_10070E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E908);
  }
  return result;
}

unint64_t sub_1001A304C(uint64_t a1)
{
  unint64_t result = sub_1001A3074();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A3074()
{
  unint64_t result = qword_10070E988;
  if (!qword_10070E988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E988);
  }
  return result;
}

unint64_t sub_1001A30C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)v24 - v9;
  unint64_t v11 = sub_1001053A4(a2);
  uint64_t v12 = v11[2];
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = *(void *)(v2 + 64);
    uint64_t v21 = v22 | 2;
    swift_bridgeObjectRetain();
    return v21;
  }
  v24[0] = v2;
  v24[1] = v11;
  uint64_t v13 = 0;
  uint64_t v26 = v11 + 4;
  uint64_t v27 = a1;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v25 = v12;
  while (!v14)
  {
LABEL_4:
    if (++v13 == v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = v24[0];
      goto LABEL_13;
    }
  }
  int v15 = *((_DWORD *)v26 + v13);
  uint64_t v16 = v28;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v19 = v14;
  while (1)
  {
    sub_1001A3348(v17, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    sub_1001A3348((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100105288((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_100105288((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    v17 += v18;
    if (!--v19)
    {
      a1 = v27;
      swift_bridgeObjectRelease_n();
      uint64_t v12 = v25;
      goto LABEL_4;
    }
  }
  int v20 = *((_DWORD *)v8 + 2);
  sub_10007C4A4(*(void *)v8);
  if (v20 != v15) {
    goto LABEL_8;
  }
  sub_100105288((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return 0xF000000000000007;
}

uint64_t sub_1001A3348(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001A33B0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

unsigned char *storeEnumTagSinglePayload for NotifySyncRequestCompletion.ActionID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001A3484);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotifySyncRequestCompletion.ActionID()
{
  return &type metadata for NotifySyncRequestCompletion.ActionID;
}

uint64_t sub_1001A34BC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v11 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_100709E38);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  int v20 = (char *)&v38 - v19;
  uint64_t result = __chkstk_darwin(v18);
  Swift::Int v23 = (char *)&v38 - v22;
  BOOL v24 = (a3 & 1) == 0 || a2 == 1;
  int v25 = v24;
  int v40 = v25;
  if (v24)
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0;
    BOOL v28 = 1;
LABEL_20:
    *(void *)a6 = sub_10009A7D4((uint64_t)&off_1006BA628);
    *(unsigned char *)(a6 + 8) = 1;
    uint64_t v35 = *(void *)(a1 + 24);
    int v36 = *(_DWORD *)(a1 + 32);
    long long v37 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(a6 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(a6 + 32) = v37;
    *(_DWORD *)(a6 + 48) = v36;
    *(void *)(a6 + 56) = &type metadata for PurgeMessagesOutsideWindowOfInterest;
    uint64_t v41 = v35;
    int v42 = v36;
    sub_10003BC88();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2BF0();
    *(void *)(a6 + 104) = v27;
    *(unsigned char *)(a6 + 112) = v40;
    *(void *)(a6 + 116) = v26;
    *(unsigned char *)(a6 + 124) = v28;
    return result;
  }
  int v44 = 1;
  if (a2 >= 2)
  {
    unsigned int v43 = a2 - 1;
    sub_100063E18();
    static MessageIdentifier.... infix(_:_:)();
    unint64_t v38 = v41 | ((unint64_t)HIDWORD(v41) << 32);
    if (a5)
    {
      uint64_t v26 = 0;
    }
    else
    {
      Range<>.init<A>(_:)((uint64_t)&v41, (uint64_t)&type metadata for UID);
      uint64_t v41 = v29;
      sub_10001FC6C();
      sub_1005E36A0();
      uint64_t v41 = v39;
      Range<>.init<A>(_:)((uint64_t)&v41, (uint64_t)&type metadata for UID);
      uint64_t v41 = v30;
      sub_1005E36A0();
      MessageIdentifierSet.subtracting(_:)((uint64_t)v23, v14);
      sub_100007A48((uint64_t)v17, &qword_100709E38);
      MessageIdentifierSet.ranges.getter((uint64_t)v13);
      sub_100007A48((uint64_t)v20, &qword_100709E38);
      v31.underlying = sub_100070018();
      char v33 = v32;
      sub_100007A48((uint64_t)v13, &qword_10070A9C0);
      if ((v33 & 1) == 0)
      {
        uint64_t v34 = UInt32.init(_:)(v31);
        sub_100007A48((uint64_t)v23, &qword_100709E38);
        BOOL v28 = static FetchedWindow.__derived_struct_equals(_:_:)(v39, v34);
        if (v28) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = v34;
        }
        goto LABEL_19;
      }
      sub_100007A48((uint64_t)v23, &qword_100709E38);
      uint64_t v26 = 1;
    }
    BOOL v28 = 1;
LABEL_19:
    unint64_t v27 = v38;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

Swift::Int sub_1001A3824()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA0A8);
  qword_1007617B8 = result;
  return result;
}

uint64_t sub_1001A384C()
{
  sub_10000566C(&qword_10070B898);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005F6720;
  *(void *)(v0 + 32) = type metadata accessor for FindMissingMessages(0);
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 80) = type metadata accessor for FetchSearchResultMessages(0);
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 128) = &type metadata for DetectChangesToMessages;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 176) = &type metadata for DetectChangesToMessagesInRecent;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 224) = &type metadata for DetectRemovedMessages;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(void *)(v0 + 272) = &type metadata for DetectRemovedMessagesInRecent;
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  return v0;
}

uint64_t sub_1001A39FC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v46 - v7;
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v46 - v14;
  if (*(unsigned char *)(v1 + 112))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    sub_100177CC0(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v16 = sub_1005E0EB0();
    os_log_type_t v17 = sub_1005E25C0();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v53 = v49;
      *(_DWORD *)uint64_t v19 = 68159235;
      LODWORD(v51) = 2;
      int v48 = v18;
      sub_1005E2960();
      *(_WORD *)(v19 + 8) = 256;
      int v20 = &v6[*(int *)(v3 + 20)];
      LOBYTE(v51) = *v20;
      sub_1005E2960();
      *(_WORD *)(v19 + 11) = 2082;
      uint64_t v50 = v9;
      uint64_t v22 = *((void *)v20 + 1);
      unint64_t v21 = *((void *)v20 + 2);
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1000C6914(v22, v21, &v53);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 21) = 1040;
      LODWORD(v51) = 2;
      sub_1005E2960();
      *(_WORD *)(v19 + 27) = 512;
      LOWORD(v51) = *((_WORD *)v20 + 12);
      sub_1005E2960();
      *(_WORD *)(v19 + 31) = 2160;
      uint64_t v51 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v19 + 41) = 2085;
      int v23 = *((_DWORD *)v20 + 10);
      uint64_t v51 = *((void *)v20 + 4);
      int v52 = v23;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1005E1CC0();
      uint64_t v51 = sub_1000C6914(v24, v25, &v53);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100177D28((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v48, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Not purging any messages.", (uint8_t *)v19, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v50);
    }
    sub_100177D28((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    int v44 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    int v45 = v13;
  }
  else
  {
    uint64_t v27 = *(void *)(v1 + 104);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v46 - v14, a1, v9);
    sub_100177CC0(a1, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    BOOL v28 = sub_1005E0EB0();
    os_log_type_t v29 = sub_1005E25C0();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      int v48 = v30;
      uint64_t v32 = v31;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v53 = v49;
      *(_DWORD *)uint64_t v32 = 68159491;
      LODWORD(v51) = 2;
      uint64_t v46 = v27;
      os_log_t v47 = v28;
      sub_1005E2960();
      *(_WORD *)(v32 + 8) = 256;
      uint64_t v33 = *(int *)(v3 + 20);
      uint64_t v50 = v9;
      uint64_t v34 = &v8[v33];
      LOBYTE(v51) = v8[v33];
      sub_1005E2960();
      *(_WORD *)(v32 + 11) = 2082;
      uint64_t v36 = *((void *)v34 + 1);
      unint64_t v35 = *((void *)v34 + 2);
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1000C6914(v36, v35, &v53);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 21) = 1040;
      LODWORD(v51) = 2;
      sub_1005E2960();
      *(_WORD *)(v32 + 27) = 512;
      LOWORD(v51) = *((_WORD *)v34 + 12);
      sub_1005E2960();
      *(_WORD *)(v32 + 31) = 2160;
      uint64_t v51 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v32 + 41) = 2085;
      int v37 = *((_DWORD *)v34 + 10);
      uint64_t v51 = *((void *)v34 + 4);
      int v52 = v37;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1005E1CC0();
      uint64_t v51 = sub_1000C6914(v38, v39, &v53);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100177D28((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v32 + 51) = 2082;
      uint64_t v51 = v46;
      uint64_t v40 = sub_10000566C(&qword_10070A9B8);
      uint64_t v41 = MessageIdentifierRange.debugDescription.getter(v40);
      uint64_t v51 = sub_1000C6914(v41, v42, &v53);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      os_log_t v43 = v47;
      _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v48, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task purging UIDs %{public}s", (uint8_t *)v32, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v50);
    }
    sub_100177D28((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

    int v44 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    int v45 = v15;
  }
  return v44(v45, v9);
}

uint64_t sub_1001A4190()
{
  if (qword_100709DC8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A41F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1001A4680(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1001A4228()
{
  return 0x73654D6567727550;
}

uint64_t initializeWithCopy for PurgeMessagesOutsideWindowOfInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = a2 + 64;
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v7 = v6;
  unint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 64, v5, v7);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 116) = *(void *)(a2 + 116);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  return a1;
}

uint64_t assignWithCopy for PurgeMessagesOutsideWindowOfInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  uint64_t v4 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v4;
  uint64_t v5 = *(void *)(a2 + 116);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(void *)(a1 + 116) = v5;
  return a1;
}

__n128 initializeWithTake for PurgeMessagesOutsideWindowOfInterest(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 109) = *(long long *)((char *)a2 + 109);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for PurgeMessagesOutsideWindowOfInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 116) = *(void *)(a2 + 116);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurgeMessagesOutsideWindowOfInterest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 125)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PurgeMessagesOutsideWindowOfInterest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 124) = 0;
    *(_DWORD *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 125) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 125) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurgeMessagesOutsideWindowOfInterest()
{
  return &type metadata for PurgeMessagesOutsideWindowOfInterest;
}

unint64_t sub_1001A45B0()
{
  unint64_t result = qword_10070E990;
  if (!qword_10070E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070E990);
  }
  return result;
}

unint64_t sub_1001A4604(uint64_t a1)
{
  unint64_t result = sub_1001A462C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A462C()
{
  unint64_t result = qword_10070EA48;
  if (!qword_10070EA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EA48);
  }
  return result;
}

uint64_t sub_1001A4680(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v27 - v10;
  if ((*(unsigned char *)(v2 + 112) & 1) == 0)
  {
    int v13 = *(_DWORD *)(v2 + 104);
    int v28 = *(_DWORD *)(v2 + 108);
    int v29 = v13;
    uint64_t v14 = sub_100105A78(0, a2);
    uint64_t v15 = v14[2];
    if (v15)
    {
      uint64_t v16 = 0;
      v27[1] = v14;
      uint64_t v17 = *(void *)(a1 + 16);
      uint64_t v33 = v14 + 4;
      uint64_t v34 = v17;
      uint64_t v31 = v6;
      uint64_t v32 = v2;
      uint64_t v30 = v15;
      do
      {
        if (v34)
        {
          int v18 = *((_DWORD *)v33 + v16);
          uint64_t v19 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
          swift_bridgeObjectRetain_n();
          uint64_t v20 = *(void *)(v6 + 72);
          uint64_t v21 = v34;
          while (1)
          {
            sub_100177CC0(v19, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
            sub_100177CC0((uint64_t)v11, (uint64_t)v9, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              int v22 = *((_DWORD *)v9 + 2);
              sub_10007C4A4(*(void *)v9);
              if (v22 == v18)
              {
                sub_100177D28((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                uint64_t v12 = 2;
                swift_bridgeObjectRelease_n();
                return v12;
              }
            }
            else
            {
              sub_100177D28((uint64_t)v9, type metadata accessor for TaskHistory.Previous);
            }
            sub_100177D28((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
            v19 += v20;
            if (!--v21)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v6 = v31;
              uint64_t v2 = v32;
              uint64_t v15 = v30;
              break;
            }
          }
        }
        ++v16;
      }
      while (v16 != v15);
    }
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = *(void *)(v2 + 24);
    *(void *)(v23 + 16) = *(void *)(v2 + 16);
    *(void *)(v23 + 24) = v24;
    LODWORD(v24) = v28;
    *(_DWORD *)(v23 + 32) = v29;
    *(_DWORD *)(v23 + 36) = v24;
    char v25 = *(unsigned char *)(v2 + 124);
    *(void *)(v23 + 40) = *(void *)(v2 + 116);
    *(unsigned char *)(v23 + 48) = v25;
    swift_bridgeObjectRetain();
    return 0;
  }
  return 2;
}

uint64_t sub_1001A4944()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 49, 7);
}

unsigned char *storeEnumTagSinglePayload for PurgeMessagesOutsideWindowOfInterest.ActionID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A4A48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurgeMessagesOutsideWindowOfInterest.ActionID()
{
  return &type metadata for PurgeMessagesOutsideWindowOfInterest.ActionID;
}

double sub_1001A4A80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  Swift::Int v23 = sub_10001DF10((uint64_t)&off_1006BA1C0);
  char v24 = 0;
  if (a3)
  {
    uint64_t v19 = &v32;
    uint64_t v20 = &v33;
  }
  else
  {
    if ((a5 & 1) == 0)
    {
      int v16 = *(_DWORD *)(a1 + 32);
      long long v17 = *(_OWORD *)(a1 + 16);
      v21[0] = *(_OWORD *)a1;
      v21[1] = v17;
      int v22 = v16;
      char v25 = &type metadata for QuickFlagChangesResync;
      sub_10003BC88();
      swift_bridgeObjectRetain();
      sub_1005E2BF0();
      uint64_t v26 = a2;
      uint64_t v27 = a4;
      uint64_t v28 = a6;
      char v29 = a7 & 1;
      sub_10003C424((uint64_t)v21, a8);
      sub_10003C198((uint64_t)v21);
      return result;
    }
    uint64_t v19 = &v30;
    uint64_t v20 = &v31;
  }
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v20 = *(_OWORD *)a1;
  sub_10001D550((uint64_t)v20);
  *(void *)uint64_t v19 = *(void *)(a1 + 24);
  *((_DWORD *)v19 + 2) = *(_DWORD *)(a1 + 32);
  sub_10001D550((uint64_t)v19);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a8 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a8 + 96) = 0u;
  *(_OWORD *)(a8 + 112) = 0u;
  *(_OWORD *)(a8 + 64) = 0u;
  *(_OWORD *)(a8 + 80) = 0u;
  *(_OWORD *)(a8 + 32) = 0u;
  *(_OWORD *)(a8 + 48) = 0u;
  *(_OWORD *)a8 = 0u;
  *(_OWORD *)(a8 + 16) = 0u;
  return result;
}

Swift::Int sub_1001A4BE8()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA1E8);
  qword_1007617C0 = result;
  return result;
}

uint64_t sub_1001A4C10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_100120DE8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C424(v2, (uint64_t)v38);
  sub_10003C424(v2, (uint64_t)v37);
  sub_10003C424(v2, (uint64_t)v36);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v31 = v13;
    uint64_t v15 = v14;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v15 = 68160003;
    LODWORD(v33) = 2;
    uint64_t v32 = v7;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    os_log_t v28 = v11;
    long long v17 = &v6[v16];
    LOBYTE(v33) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v29 = v8;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1000C6914(v19, v18, &v35);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v33) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v33) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v33 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v33 = *((void *)v17 + 4);
    int v34 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v33 = sub_1000C6914(v21, v22, &v35);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1001A6094((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 2048;
    uint64_t v23 = v39;
    sub_10003C198((uint64_t)v38);
    uint64_t v33 = v23;
    sub_1005E2960();
    *(_WORD *)(v15 + 61) = 2048;
    uint64_t v24 = *(void *)(v37[15] + 16);
    sub_10003C198((uint64_t)v37);
    uint64_t v33 = v24;
    sub_1005E2960();
    *(_WORD *)(v15 + 71) = 2048;
    uint64_t v25 = v36[14];
    sub_10003C198((uint64_t)v36);
    uint64_t v33 = v25;
    sub_1005E2960();
    os_log_t v26 = v28;
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v31, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. highest-mod-seq local: %llu, changes without UID: %ld, server: %llu", (uint8_t *)v15, 0x51u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v10, v32);
  }
  else
  {
    sub_10003C198((uint64_t)v36);
    sub_10003C198((uint64_t)v37);
    sub_10003C198((uint64_t)v38);
    sub_1001A6094((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1001A50F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int v13 = (char *)&v30 - v12;
  if (*(void *)(v3 + 104) < *(void *)(v3 + 112) || *(void *)(*(void *)(v3 + 120) + 16))
  {
    uint64_t v14 = sub_1001A9E88(a2);
    uint64_t v15 = v14[2];
    if (v15)
    {
      uint64_t v30 = v3;
      uint64_t v31 = a3;
      uint64_t v16 = 0;
      uint64_t v34 = v8;
      uint64_t v35 = v14 + 4;
      uint64_t v17 = *(void *)(a1 + 16);
      uint64_t v36 = v14;
      uint64_t v37 = a1;
      uint64_t v32 = v17;
      uint64_t v33 = v15;
      do
      {
        if (v17)
        {
          int v18 = *((_DWORD *)v35 + v16);
          uint64_t v19 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
          swift_bridgeObjectRetain();
          uint64_t v20 = *(void *)(v8 + 72);
          while (1)
          {
            sub_100120DE8(v19, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
            sub_100120DE8((uint64_t)v13, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1001A6094((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              int v21 = *(_DWORD *)&v11[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
              sub_1001A6094((uint64_t)v11, type metadata accessor for ClientCommand);
              if (v21 == v18)
              {
                sub_1001A6094((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v22 = sub_10000566C(&qword_10070EB10);
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v31, 1, 1, v22);
              }
            }
            sub_1001A6094((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
            v19 += v20;
            if (!--v17)
            {
              a1 = v37;
              swift_bridgeObjectRelease();
              uint64_t v15 = v33;
              uint64_t v8 = v34;
              uint64_t v17 = v32;
              break;
            }
          }
        }
        ++v16;
      }
      while (v16 != v15);
      swift_bridgeObjectRelease();
      uint64_t v3 = v30;
      a3 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (*(unsigned char *)(v3 + 128)) {
      uint64_t v24 = &off_1006BAEB0;
    }
    else {
      uint64_t v24 = &off_1006BADF0;
    }
    uint64_t v25 = a3 + *(int *)(sub_10000566C(&qword_100709E68) + 48);
    sub_100063E18();
    static MessageIdentifierRange.all.getter();
    v38[0] = v38[1];
    Range<>.init<A>(_:)((uint64_t)v38, (uint64_t)&type metadata for UID);
    v38[0] = v26;
    sub_10001FC6C();
    sub_1005E36A0();
    v40.value = *(void *)(v3 + 104);
    v40.is_nil = 0;
    IMAP2Persistence::SearchRequest::RangesToExclude v41 = SearchRequest.RangesToExclude.init(ranges:skipForMessageCount:)((Swift::OpaquePointer)v24, v40);
    *(void *)uint64_t v25 = v41.ranges._rawValue;
    *(void *)(v25 + 8) = v41.skipForMessageCount.value;
    *(unsigned char *)(v25 + 16) = v41.skipForMessageCount.is_nil;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = sub_10000566C(&qword_10070EB10);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a3, 0, 1, v27);
  }
  else
  {
    uint64_t v28 = sub_10000566C(&qword_10070EB10);
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
    return v29(a3, 1, 1, v28);
  }
}

uint64_t sub_1001A5524(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  if ((v3 | v2) < 0)
  {
    __break(1u);
  }
  else if (v3 != v2)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void **)(v1 + 24);
    unsigned int v6 = *(_DWORD *)(v1 + 32);
    Swift::Int result = __chkstk_darwin(result);
    v12[2] = v1;
    v12[3] = v7;
    if (*(unsigned char *)(result + 184) == 1)
    {
      uint64_t v9 = *(void *)(v4 + 168);
      uint64_t v8 = *(void *)(v4 + 176);
      uint64_t v13 = *(void *)(v4 + 160);
      uint64_t v10 = v13;
      swift_bridgeObjectRetain();
      sub_10004A48C((uint64_t)&v13, v5, v6, 0, (void (*)(char *))sub_1001A608C, v12);
      Swift::Int result = sub_10000F0D4(v10, v9, v8, 1);
      uint64_t v11 = v13;
      *(void *)(v4 + 168) = 0;
      *(void *)(v4 + 176) = 0;
      *(void *)(v4 + 160) = v11;
      *(unsigned char *)(v4 + 184) = 1;
    }
  }
  return result;
}

uint64_t sub_1001A5624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 + 120);
  uint64_t v13 = (void *)(a1 + *(int *)(type metadata accessor for MailboxSyncState() + 48));
  uint64_t v14 = v13[3];
  uint64_t v15 = v13[4];
  sub_100057374((uint64_t)v13, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v14, v15);
  uint64_t v16 = v13[3];
  uint64_t v17 = v13[4];
  sub_10003BCDC(v13, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
  uint64_t v19 = *(void *)(v18 + 16);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v42 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  sub_100120DE8(a3, (uint64_t)v7, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v20 = sub_1005E0EB0();
  os_log_type_t v21 = sub_1005E25C0();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v40 = a3;
    uint64_t v24 = v23;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v24 = 68159491;
    LODWORD(v43) = 2;
    int v37 = v22;
    sub_1005E2960();
    *(_WORD *)(v24 + 8) = 256;
    uint64_t v25 = *(int *)(v41 + 20);
    uint64_t v39 = v8;
    uint64_t v26 = &v7[v25];
    LOBYTE(v43) = v7[v25];
    sub_1005E2960();
    *(_WORD *)(v24 + 11) = 2082;
    uint64_t v36 = v19;
    uint64_t v41 = a2;
    uint64_t v27 = *((void *)v26 + 1);
    unint64_t v28 = *((void *)v26 + 2);
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1000C6914(v27, v28, &v45);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 21) = 1040;
    LODWORD(v43) = 2;
    sub_1005E2960();
    *(_WORD *)(v24 + 27) = 512;
    LOWORD(v43) = *((_WORD *)v26 + 12);
    sub_1005E2960();
    *(_WORD *)(v24 + 31) = 2160;
    uint64_t v43 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v24 + 41) = 2085;
    int v29 = *((_DWORD *)v26 + 10);
    uint64_t v43 = *((void *)v26 + 4);
    int v44 = v29;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1005E1CC0();
    uint64_t v43 = sub_1000C6914(v30, v31, &v45);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1001A6094((uint64_t)v7, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v24 + 51) = 2048;
    uint64_t v43 = v36;
    a2 = v41;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v37, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Number of changes to-be-sent to the persistence: %ld.", (uint8_t *)v24, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v40;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v39);
  }
  else
  {
    sub_1001A6094((uint64_t)v7, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v8);
  }
  uint64_t v32 = *(void *)(a2 + 112);
  uint64_t v33 = v13[3];
  uint64_t v34 = v13[4];
  sub_100057374((uint64_t)v13, v33);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 64))(v32, a3, v33, v34);
}

uint64_t sub_1001A5B58()
{
  if (qword_100709DD0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void sub_1001A5BBC(void *a1@<X8>)
{
  *a1 = 0xF000000000000007;
}

unint64_t sub_1001A5BCC()
{
  return 0xD000000000000016;
}

uint64_t destroy for QuickFlagChangesResync(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for QuickFlagChangesResync(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = a2 + 64;
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 64, v5, v7);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for QuickFlagChangesResync(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

__n128 initializeWithTake for QuickFlagChangesResync(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for QuickFlagChangesResync(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuickFlagChangesResync(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuickFlagChangesResync(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuickFlagChangesResync()
{
  return &type metadata for QuickFlagChangesResync;
}

unint64_t sub_1001A5FBC()
{
  unint64_t result = qword_10070EA50;
  if (!qword_10070EA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EA50);
  }
  return result;
}

unint64_t sub_1001A6010(uint64_t a1)
{
  unint64_t result = sub_1001A6038();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A6038()
{
  unint64_t result = qword_10070EB08;
  if (!qword_10070EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EB08);
  }
  return result;
}

uint64_t sub_1001A608C(uint64_t a1)
{
  return sub_1001A5624(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001A6094(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for QuickFlagChangesResync.CommandID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001A6190);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for QuickFlagChangesResync.CommandID()
{
  return &type metadata for QuickFlagChangesResync.CommandID;
}

void sub_1001A61C8()
{
  qword_1007617C8 = (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_1001A61DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  long long v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_100120DE8(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C7EC(v2, (uint64_t)v38);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10003C7EC(v2, (uint64_t)v37);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v31 = v13;
    uint64_t v15 = v14;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v36 = v32;
    *(_DWORD *)uint64_t v15 = 68159747;
    LODWORD(v34) = 2;
    uint64_t v33 = v7;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    os_log_t v29 = v11;
    uint64_t v17 = &v6[v16];
    LOBYTE(v34) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v30 = v8;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1000C6914(v19, v18, &v36);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v34) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v34) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v34 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v34 = *((void *)v17 + 4);
    int v35 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v34 = sub_1000C6914(v21, v22, &v36);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100120E50((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 1024;
    if (v39) {
      int v23 = 0;
    }
    else {
      int v23 = v38[26];
    }
    sub_10003C848((uint64_t)v38);
    LODWORD(v34) = v23;
    sub_1005E2960();
    *(_WORD *)(v15 + 57) = 2082;
    uint64_t v24 = sub_10009F004(*(unsigned __int16 *)&v37[109]);
    uint64_t v34 = sub_1000C6914(v24, v25, &v36);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10003C848((uint64_t)v37);
    os_log_t v26 = v29;
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v31, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task. Local UID validity: 0x%x, reason: %{public}s", (uint8_t *)v15, 0x43u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v33);
  }
  else
  {
    sub_10003C848((uint64_t)v38);
    sub_100120E50((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
    sub_10003C848((uint64_t)v37);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1001A66B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v4);
  long long v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(unsigned char *)(v2 + 145) & 1) == 0)
  {
    char v12 = *(unsigned char *)(v2 + 144);
    uint64_t v13 = *(void *)(v2 + 136);
    char v14 = *(_DWORD *)(v2 + 128);
    uint64_t v16 = *(void *)(v2 + 112);
    uint64_t v15 = *(void *)(v2 + 120);
    int v41 = v16;
    char v42 = BYTE4(v16) & 1;
    uint64_t v43 = v15;
    char v44 = v14 & 1;
    uint64_t v45 = v13;
    char v46 = v12 & 1;
    uint64_t result = sub_10004ACFC(*(void *)(v2 + 24), *(_DWORD *)(v2 + 32), (uint64_t)&v41);
    if ((*(unsigned char *)(v2 + 108) & 1) == 0)
    {
      int v17 = *(_DWORD *)(v2 + 104);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
      sub_100120DE8(a2, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v18 = sub_1005E0EB0();
      os_log_type_t v19 = sub_1005E25A0();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v21 = swift_slowAlloc();
        int v37 = v20;
        uint64_t v22 = v21;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v40 = v36;
        *(_DWORD *)uint64_t v22 = 68159747;
        LODWORD(v38) = 2;
        int v33 = v17;
        sub_1005E2960();
        *(_WORD *)(v22 + 8) = 256;
        uint64_t v23 = *(int *)(v4 + 20);
        os_log_t v34 = v18;
        uint64_t v24 = &v6[v23];
        LOBYTE(v38) = v6[v23];
        sub_1005E2960();
        *(_WORD *)(v22 + 11) = 2082;
        uint64_t v35 = v8;
        uint64_t v26 = *((void *)v24 + 1);
        unint64_t v25 = *((void *)v24 + 2);
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1000C6914(v26, v25, &v40);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 21) = 1040;
        LODWORD(v38) = 2;
        sub_1005E2960();
        *(_WORD *)(v22 + 27) = 512;
        LOWORD(v38) = *((_WORD *)v24 + 12);
        sub_1005E2960();
        *(_WORD *)(v22 + 31) = 2160;
        uint64_t v38 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v22 + 41) = 2085;
        int v27 = *((_DWORD *)v24 + 10);
        uint64_t v38 = *((void *)v24 + 4);
        int v39 = v27;
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1005E1CC0();
        uint64_t v38 = sub_1000C6914(v28, v29, &v40);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100120E50((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v22 + 51) = 1024;
        LODWORD(v38) = v33;
        sub_1005E2960();
        *(_WORD *)(v22 + 57) = 1024;
        if ((v16 & (unint64_t)&_mh_execute_header) != 0) {
          int v30 = 0;
        }
        else {
          int v30 = v16;
        }
        LODWORD(v38) = v30;
        sub_1005E2960();
        os_log_t v31 = v34;
        _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v37, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did delete all existing local messages due to validity change: 0x%x → 0x%x", (uint8_t *)v22, 0x3Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(unsigned char *, uint64_t))(v35 + 8))(v11, v7);
      }
      else
      {
        sub_100120E50((uint64_t)v6, type metadata accessor for MailboxTaskLogger);

        return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
      }
    }
  }
  return result;
}

uint64_t sub_1001A6B94()
{
  if (qword_100709DD8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ReSyncMailbox(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
}

uint64_t initializeWithCopy for ReSyncMailbox(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = a2 + 64;
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 64, v5, v7);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_WORD *)(a1 + 109) = *(_WORD *)(a2 + 109);
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  return a1;
}

uint64_t assignWithCopy for ReSyncMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  int v4 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v4;
  *(_WORD *)(a1 + 109) = *(_WORD *)(a2 + 109);
  long long v5 = *(_OWORD *)(a2 + 112);
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v5;
  *(_OWORD *)(a1 + 128) = v6;
  return a1;
}

__n128 initializeWithTake for ReSyncMailbox(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ReSyncMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_WORD *)(a1 + 109) = *(_WORD *)(a2 + 109);
  long long v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReSyncMailbox(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 146)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReSyncMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 146) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 146) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReSyncMailbox()
{
  return &type metadata for ReSyncMailbox;
}

unint64_t sub_1001A6FCC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, unint64_t *a4@<X8>)
{
  unint64_t result = sub_1001A70F4(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1001A7008()
{
  return 0x636E79732D6552;
}

unint64_t sub_1001A7024()
{
  unint64_t result = qword_10070EB18;
  if (!qword_10070EB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EB18);
  }
  return result;
}

unint64_t sub_1001A7078(uint64_t a1)
{
  unint64_t result = sub_1001A70A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A70A0()
{
  unint64_t result = qword_10070EBD0;
  if (!qword_10070EBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EBD0);
  }
  return result;
}

unint64_t sub_1001A70F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = *(unsigned int *)(a3 + 16);
  unsigned __int8 v15 = *(unsigned char *)(a3 + 20);
  char v16 = *(unsigned char *)(v3 + 108);
  if (v15)
  {
    if (*(unsigned char *)(v3 + 108)) {
      return 0xF000000000000007;
    }
  }
  else
  {
    if (v14 != *(_DWORD *)(v3 + 104)) {
      char v16 = 1;
    }
    if ((v16 & 1) == 0) {
      return 0xF000000000000007;
    }
  }
  uint64_t v17 = *(void *)(a3 + 24);
  char v18 = *(unsigned char *)(a3 + 32);
  LOBYTE(v45) = *(unsigned char *)(a3 + 20);
  MailboxMetadata.init(validity:fetchedWindow:highestModificationSequenceValue:)(v14 | ((unint64_t)v15 << 32), 0, 1, v17, v18, (uint64_t)&v45);
  if (*(unsigned char *)(v3 + 145) == 1)
  {
    char v19 = v47;
    uint64_t v20 = *((void *)&v46 + 1);
    uint64_t v21 = v46;
    uint64_t v22 = *((void *)&v45 + 1);
    uint64_t v23 = &_mh_execute_header;
    if (!BYTE4(v45)) {
      uint64_t v23 = 0;
    }
    *(void *)(v3 + 112) = (unint64_t)v23 | v45;
    *(void *)(v3 + 120) = v22;
    *(void *)(v3 + 128) = v21;
    *(void *)(v3 + 136) = v20;
    *(unsigned char *)(v3 + 144) = v19;
    *(unsigned char *)(v3 + 145) = 0;
  }
  uint64_t v24 = sub_1001053FC(a2);
  uint64_t v25 = v24[2];
  if (v25)
  {
    uint64_t v39 = v3;
    uint64_t v40 = v24;
    uint64_t v26 = 0;
    uint64_t v43 = v24 + 4;
    uint64_t v44 = a1;
    uint64_t v27 = *(void *)(a1 + 16);
    uint64_t v41 = v25;
    uint64_t v42 = v8;
    do
    {
      if (v27)
      {
        int v28 = *((_DWORD *)v43 + v26);
        uint64_t v29 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v30 = *(void *)(v8 + 72);
        uint64_t v31 = v27;
        while (1)
        {
          sub_100120DE8(v29, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          sub_100120DE8((uint64_t)v13, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            int v32 = *((_DWORD *)v11 + 2);
            sub_10007C4A4(*(void *)v11);
            if (v32 == v28)
            {
              sub_100120E50((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 0xF000000000000007;
            }
          }
          else
          {
            sub_100120E50((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          }
          sub_100120E50((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
          v29 += v30;
          if (!--v31)
          {
            a1 = v44;
            swift_bridgeObjectRelease_n();
            uint64_t v25 = v41;
            uint64_t v8 = v42;
            break;
          }
        }
      }
      ++v26;
    }
    while (v26 != v25);
    swift_bridgeObjectRelease();
    uint64_t v3 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = *(void *)(v3 + 8);
  *(void *)(v34 + 16) = *(void *)v3;
  *(void *)(v34 + 24) = v35;
  long long v36 = v46;
  *(_OWORD *)(v34 + 32) = v45;
  *(_OWORD *)(v34 + 48) = v36;
  *(unsigned char *)(v34 + 64) = v47;
  uint64_t v33 = v34 | 0x1000000000000002;
  swift_bridgeObjectRetain();
  return v33;
}

uint64_t sub_1001A7420()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 65, 7);
}

unsigned char *storeEnumTagSinglePayload for ReSyncMailbox.ActionID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001A74F4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReSyncMailbox.ActionID()
{
  return &type metadata for ReSyncMailbox.ActionID;
}

uint64_t destroy for RenameMailboxes(uint64_t a1)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RenameMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RenameMailboxes(void *a1, void *a2)
{
  *a1 = *a2;
  sub_100022498(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RenameMailboxes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RenameMailboxes()
{
  return &type metadata for RenameMailboxes;
}

uint64_t sub_1001A7714(uint64_t result)
{
  if (*(unsigned char *)(v1 + 24) != 1) {
    return result;
  }
  uint64_t v2 = v1;
  uint64_t v3 = result;
  char v47 = (void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)v1;
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v54 = v5;
  uint64_t v49 = result + 64;
  uint64_t v7 = 1 << *(unsigned char *)(result + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(result + 64);
  swift_bridgeObjectRetain();
  sub_10005636C(v5, v6, v4, 1);
  uint64_t v10 = 0;
  int64_t v11 = 0;
  int64_t v12 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v51 = v2;
  uint64_t v48 = v3;
LABEL_6:
  uint64_t v13 = v5 + 32;
  while (1)
  {
LABEL_7:
    while (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      unint64_t v16 = *(void *)(v5 + 16);
      if (v16) {
        goto LABEL_26;
      }
    }
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if (v17 >= v12) {
      goto LABEL_56;
    }
    unint64_t v18 = *(void *)(v49 + 8 * v17);
    ++v11;
    if (v18) {
      goto LABEL_25;
    }
    int64_t v11 = v17 + 1;
    if (v17 + 1 >= v12) {
      goto LABEL_56;
    }
    unint64_t v18 = *(void *)(v49 + 8 * v11);
    if (v18) {
      goto LABEL_25;
    }
    int64_t v11 = v17 + 2;
    if (v17 + 2 >= v12) {
      goto LABEL_56;
    }
    unint64_t v18 = *(void *)(v49 + 8 * v11);
    if (v18) {
      goto LABEL_25;
    }
    int64_t v11 = v17 + 3;
    if (v17 + 3 >= v12) {
      goto LABEL_56;
    }
    unint64_t v18 = *(void *)(v49 + 8 * v11);
    if (v18) {
      goto LABEL_25;
    }
    int64_t v19 = v17 + 4;
    if (v19 >= v12)
    {
LABEL_56:
      swift_release();
      sub_10000F0D4(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
      unint64_t result = sub_10003E960((uint64_t)v10);
      *(void *)uint64_t v2 = v5;
      *char v47 = 0;
      v47[1] = 0;
      *(unsigned char *)(v2 + 24) = 1;
      return result;
    }
    unint64_t v18 = *(void *)(v49 + 8 * v19);
    if (!v18) {
      break;
    }
    int64_t v11 = v19;
LABEL_25:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v11 << 6);
    unint64_t v16 = *(void *)(v5 + 16);
    if (v16)
    {
LABEL_26:
      unint64_t v20 = 0;
      uint64_t v21 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v15);
      uint64_t v22 = *v21;
      Swift::UInt v23 = v21[1];
      uint64_t v24 = *v21 + 37;
      while (1)
      {
        uint64_t v25 = (uint64_t *)(v13 + 176 * v20);
        if (v25[1] == v23)
        {
          uint64_t v26 = *v25;
          uint64_t v27 = *(void *)(v26 + 16);
          if (v27 == *(void *)(v22 + 16))
          {
            if (v27) {
              BOOL v28 = v26 == v22;
            }
            else {
              BOOL v28 = 1;
            }
            if (v28) {
              goto LABEL_47;
            }
            if (*(unsigned __int8 *)(v26 + 32) == *(unsigned __int8 *)(v22 + 32))
            {
              if (v27 == 1) {
                goto LABEL_47;
              }
              if (*(unsigned __int8 *)(v26 + 33) == *(unsigned __int8 *)(v22 + 33))
              {
                if (v27 == 2) {
                  goto LABEL_47;
                }
                if (*(unsigned __int8 *)(v26 + 34) == *(unsigned __int8 *)(v22 + 34))
                {
                  if (v27 == 3) {
                    goto LABEL_47;
                  }
                  if (*(unsigned __int8 *)(v26 + 35) == *(unsigned __int8 *)(v22 + 35))
                  {
                    if (v27 == 4) {
                      goto LABEL_47;
                    }
                    if (*(unsigned __int8 *)(v26 + 36) == *(unsigned __int8 *)(v22 + 36)) {
                      break;
                    }
                  }
                }
              }
            }
          }
        }
LABEL_27:
        if (++v20 == v16) {
          goto LABEL_7;
        }
      }
      uint64_t v29 = (unsigned __int8 *)(v26 + 37);
      uint64_t v30 = v27 - 5;
      uint64_t v31 = (unsigned __int8 *)v24;
      while (v30)
      {
        int v33 = *v29++;
        int v32 = v33;
        int v34 = *v31++;
        --v30;
        if (v32 != v34) {
          goto LABEL_27;
        }
      }
LABEL_47:
      if (v20 >= v16) {
        goto LABEL_59;
      }
      int64_t v50 = v11;
      uint64_t v35 = *(void *)(v13 + 176 * v20 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10003E960((uint64_t)v10);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v53[0] = *(void *)(v2 + 32);
      uint64_t v37 = *(void *)&v53[0];
      *(void *)(v2 + 32) = 0x8000000000000000;
      unint64_t v39 = sub_1000242DC(v22, v23);
      uint64_t v40 = *(void *)(v37 + 16);
      BOOL v41 = (v38 & 1) == 0;
      uint64_t v42 = v40 + v41;
      if (__OFADD__(v40, v41)) {
        goto LABEL_60;
      }
      char v43 = v38;
      if (*(void *)(v37 + 24) >= v42)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000971A8();
          uint64_t v37 = *(void *)&v53[0];
        }
      }
      else
      {
        sub_10004F788(v42, isUniquelyReferenced_nonNull_native);
        uint64_t v37 = *(void *)&v53[0];
        unint64_t v44 = sub_1000242DC(v22, v23);
        if ((v43 & 1) != (v45 & 1)) {
          goto LABEL_62;
        }
        unint64_t v39 = v44;
      }
      *(void *)(v51 + 32) = v37;
      swift_bridgeObjectRelease();
      long long v46 = *(void **)(v51 + 32);
      swift_bridgeObjectRetain();
      if ((v43 & 1) == 0)
      {
        sub_100102FA8(v39, v22, v23, (uint64_t)&_swiftEmptySetSingleton, v46);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      sub_10008B6A8(v35);
      swift_bridgeObjectRelease();
      sub_1000EF468(v20, v52);
      v53[8] = v52[8];
      v53[9] = v52[9];
      v53[10] = v52[10];
      v53[4] = v52[4];
      v53[5] = v52[5];
      v53[6] = v52[6];
      v53[7] = v52[7];
      v53[0] = v52[0];
      v53[1] = v52[1];
      v53[2] = v52[2];
      v53[3] = v52[3];
      sub_100007820((uint64_t)v53);
      uint64_t v10 = sub_1001A7B9C;
      uint64_t v5 = v54;
      int64_t v11 = v50;
      uint64_t v2 = v51;
      int64_t v12 = (unint64_t)(v7 + 63) >> 6;
      uint64_t v3 = v48;
      goto LABEL_6;
    }
  }
  while (1)
  {
    int64_t v11 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v11 >= v12) {
      goto LABEL_56;
    }
    unint64_t v18 = *(void *)(v49 + 8 * v11);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_61:
  __break(1u);
LABEL_62:
  unint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

void sub_1001A7B9C(void *a1@<X8>)
{
  *a1 = &_swiftEmptySetSingleton;
}

uint64_t sub_1001A7BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070A640);
  return sub_100123940(a1 + *(int *)(v4 + 52), a2) & 1;
}

uint64_t sub_1001A7C00(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Task.Logger(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v36[-v7];
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  unint64_t v15 = &v36[-v14];
  uint64_t v16 = *(void *)(v1 + 48);
  if (*(void *)(v16 + 16) == 1
    && (sub_1001CB67C(v16, (uint64_t)v46), sub_1001AA0E0((uint64_t)v46, (uint64_t)v47), v47[0]))
  {
    uint64_t v17 = v47[2];
    LODWORD(v40) = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v15, a1, v9);
    sub_1001A3348(a1, (uint64_t)v8, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1005E0EB0();
    os_log_type_t v19 = sub_1005E25C0();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v42 = v39;
      *(_DWORD *)uint64_t v21 = 68158723;
      LODWORD(v43) = 2;
      sub_1005E2960();
      *(_WORD *)(v21 + 8) = 256;
      uint64_t v22 = &v8[*(int *)(v3 + 20)];
      int v37 = v20;
      uint64_t v23 = v22[1];
      unint64_t v24 = v22[2];
      LOBYTE(v43) = *v22;
      sub_1005E2960();
      *(_WORD *)(v21 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v38 = v10;
      uint64_t v43 = sub_1000C6914(v23, v24, &v42);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001AA148((uint64_t)v8, type metadata accessor for Task.Logger);
      *(_WORD *)(v21 + 21) = 2160;
      uint64_t v43 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v21 + 31) = 2085;
      uint64_t v43 = v17;
      int v44 = v40;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1005E1CC0();
      uint64_t v43 = sub_1000C6914(v25, v26, &v42);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v37, "[%.*hhx-%{public}s] Created task for '%{sensitive,mask.mailbox}s'", (uint8_t *)v21, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v38 + 8))(v15, v9);
    }
    else
    {
      sub_1001AA148((uint64_t)v8, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    sub_1001A3348(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10009B638(v1, (uint64_t)&v43);
    BOOL v28 = sub_1005E0EB0();
    os_log_type_t v29 = sub_1005E25C0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v42 = v39;
      *(_DWORD *)uint64_t v30 = 68158466;
      LODWORD(v41) = 2;
      uint64_t v40 = v9;
      sub_1005E2960();
      *(_WORD *)(v30 + 8) = 256;
      uint64_t v31 = &v6[*(int *)(v3 + 20)];
      uint64_t v32 = v31[1];
      uint64_t v33 = v10;
      unint64_t v34 = v31[2];
      LOBYTE(v41) = *v31;
      sub_1005E2960();
      *(_WORD *)(v30 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1000C6914(v32, v34, &v42);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001AA148((uint64_t)v6, type metadata accessor for Task.Logger);
      *(_WORD *)(v30 + 21) = 2048;
      uint64_t v35 = *(void *)(v45 + 16);
      sub_10009B694((uint64_t)&v43);
      uint64_t v41 = v35;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%.*hhx-%{public}s] Created task for %ld mailboxes.", (uint8_t *)v30, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v33 + 8))(v13, v40);
    }
    else
    {
      sub_10009B694((uint64_t)&v43);
      sub_1001AA148((uint64_t)v6, type metadata accessor for Task.Logger);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
}

unint64_t sub_1001A82F4(uint64_t a1, Swift::UInt a2, NSObject *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  LODWORD(v79) = a6;
  uint64_t v77 = (unsigned char *)a4;
  uint64_t v78 = a5;
  uint64_t v71 = type metadata accessor for Task.Logger(0);
  uint64_t v12 = __chkstk_darwin(v71);
  unint64_t v72 = &v67[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  unint64_t v69 = &v67[-v14];
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  os_log_type_t v19 = &v67[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t result = __chkstk_darwin(v17);
  uint64_t v22 = &v67[-v21];
  uint64_t v76 = v7;
  uint64_t v23 = *(void *)(v7 + 48);
  if (!*(void *)(v23 + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v74 = a1;
  Swift::UInt v75 = a2;
  unint64_t result = sub_1000242DC(a1, a2);
  if ((v24 & 1) == 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v25 = *(void *)(v23 + 56) + 32 * result;
  uint64_t v26 = *(void *)v25;
  LODWORD(v70) = *(_DWORD *)(v25 + 8);
  uint64_t v27 = *(void *)(v25 + 16);
  int v28 = *(_DWORD *)(v25 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v80;
  sub_1001DAC80(a7, a3, (uint64_t)v77, v78, v79);
  uint64_t v73 = v27;
  if (v29)
  {
    LODWORD(v80) = v28;
    uint64_t v30 = v15;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v19, a7, v15);
    uint64_t v31 = a7;
    uint64_t v32 = v72;
    sub_1001A3348(v31, (uint64_t)v72, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v33 = v26;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v34 = sub_1005E0EB0();
    os_log_type_t v35 = sub_1005E25A0();
    int v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v37 = swift_slowAlloc();
      int v68 = v36;
      uint64_t v38 = v37;
      unint64_t v69 = (unsigned char *)swift_slowAlloc();
      uint64_t v83 = v69;
      *(_DWORD *)uint64_t v38 = 68159235;
      LODWORD(v81) = 2;
      uint64_t v77 = v19;
      sub_1005E2960();
      *(_WORD *)(v38 + 8) = 256;
      uint64_t v39 = &v32[*(int *)(v71 + 20)];
      uint64_t v78 = v16;
      uint64_t v40 = v39[1];
      uint64_t v41 = (uint64_t)v32;
      unint64_t v42 = v39[2];
      LOBYTE(v81) = *v39;
      sub_1005E2960();
      *(_WORD *)(v38 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v79 = v29;
      uint64_t v81 = sub_1000C6914(v40, v42, (uint64_t *)&v83);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001AA148(v41, type metadata accessor for Task.Logger);
      *(_WORD *)(v38 + 21) = 2160;
      uint64_t v81 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v38 + 31) = 2085;
      uint64_t v81 = v33;
      int v82 = (int)v70;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1005E1CC0();
      uint64_t v81 = sub_1000C6914(v43, v44, (uint64_t *)&v83);
      sub_1005E2960();
      uint64_t v45 = v73;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 41) = 2160;
      uint64_t v81 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v38 + 51) = 2085;
      uint64_t v81 = v45;
      int v82 = v80;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1005E1CC0();
      uint64_t v81 = sub_1000C6914(v46, v47, (uint64_t *)&v83);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v68, "[%.*hhx-%{public}s] Failed to rename '%{sensitive,mask.mailbox}s' to '%{sensitive,mask.mailbox}s'.", (uint8_t *)v38, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v77, v30);
    }
    else
    {
      sub_1001AA148((uint64_t)v32, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v19, v30);
    }
    uint64_t v64 = v74;
    swift_bridgeObjectRetain();
    sub_1000189E4(&v81, v64, v75);
    swift_errorRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    int v48 = v22;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v22, a7, v15);
    uint64_t v49 = v69;
    sub_1001A3348(a7, (uint64_t)v69, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    int64_t v50 = sub_1005E0EB0();
    os_log_type_t v51 = sub_1005E25C0();
    int v52 = v51;
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v77 = (unsigned char *)v15;
      LODWORD(v80) = v28;
      uint64_t v54 = v53;
      unint64_t v72 = (unsigned char *)swift_slowAlloc();
      uint64_t v83 = v72;
      *(_DWORD *)uint64_t v54 = 68159235;
      LODWORD(v81) = 2;
      uint64_t v79 = 0;
      sub_1005E2960();
      *(_WORD *)(v54 + 8) = 256;
      uint64_t v55 = (uint64_t *)&v49[*(int *)(v71 + 20)];
      uint64_t v56 = *v55;
      uint64_t v57 = v55[1];
      uint64_t v78 = v16;
      unint64_t v58 = v55[2];
      LOBYTE(v81) = v56;
      sub_1005E2960();
      *(_WORD *)(v54 + 11) = 2082;
      swift_bridgeObjectRetain();
      LODWORD(v71) = v52;
      uint64_t v81 = sub_1000C6914(v57, v58, (uint64_t *)&v83);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001AA148((uint64_t)v49, type metadata accessor for Task.Logger);
      *(_WORD *)(v54 + 21) = 2160;
      uint64_t v81 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v54 + 31) = 2085;
      uint64_t v81 = v26;
      int v82 = (int)v70;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_1005E1CC0();
      int v70 = v48;
      uint64_t v81 = sub_1000C6914(v59, v60, (uint64_t *)&v83);
      sub_1005E2960();
      uint64_t v61 = v73;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 41) = 2160;
      uint64_t v81 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v54 + 51) = 2085;
      uint64_t v81 = v61;
      int v82 = v80;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1005E1CC0();
      uint64_t v81 = sub_1000C6914(v62, v63, (uint64_t *)&v83);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v71, "[%.*hhx-%{public}s] Did rename '%{sensitive,mask.mailbox}s' to '%{sensitive,mask.mailbox}s'.", (uint8_t *)v54, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, unsigned char *))(v78 + 8))(v70, v77);
    }
    else
    {
      sub_1001AA148((uint64_t)v49, type metadata accessor for Task.Logger);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v48, v15);
    }
    uint64_t v65 = v74;
    Swift::UInt v66 = v75;
    swift_bridgeObjectRetain();
    sub_1000189E4(&v81, v65, v66);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001A8CD4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1001A9658(v6, a1, a2, (uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001AA0E0((uint64_t)v17, (uint64_t)v18);
  uint64_t v7 = v18[0];
  if (v18[0])
  {
    uint64_t v8 = v18[1];
    uint64_t v9 = v18[2];
    int v10 = v19;
    uint64_t v11 = v20;
    int v12 = v21;
    uint64_t v13 = sub_10000566C(&qword_10070EC70);
    uint64_t v14 = (char *)a3 + *(int *)(v13 + 48);
    *(void *)uint64_t v14 = v9;
    *((_DWORD *)v14 + 2) = v10;
    *((void *)v14 + 2) = v11;
    *((_DWORD *)v14 + 6) = v12;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    *a3 = v7;
    a3[1] = v8;
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
  else
  {
    uint64_t v16 = sub_10000566C(&qword_10070EC70);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_1001A8E6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001A9FF8();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

unint64_t sub_1001A8E98(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return sub_1001A82F4(*(void *)a1, *(void *)(a1 + 8), a2, a3, a4, a5, a6);
}

uint64_t sub_1001A8ECC(uint64_t a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1001A7714(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 129) = 1;
  return result;
}

unint64_t sub_1001A8F18()
{
  return 0xD000000000000010;
}

unint64_t sub_1001A8F38()
{
  unint64_t result = qword_10070EBD8;
  if (!qword_10070EBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EBD8);
  }
  return result;
}

unint64_t sub_1001A8F90()
{
  unint64_t result = qword_10070EBE0;
  if (!qword_10070EBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EBE0);
  }
  return result;
}

unint64_t sub_1001A8FE4(uint64_t a1)
{
  unint64_t result = sub_1001A900C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A900C()
{
  unint64_t result = qword_10070EC60;
  if (!qword_10070EC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EC60);
  }
  return result;
}

uint64_t sub_1001A9064(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1001A90EC(unint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 0x8000000000000000) != 0 || (uint64_t v7 = *v3, 1 << *(unsigned char *)(*v3 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(void *)(v7 + 8 * (a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_1000CACF8();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 48) + 16 * a1);
  sub_100094EDC(a1);
  *uint64_t v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001A91D0(unint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 0x8000000000000000) != 0 || (uint64_t v7 = *v3, 1 << *(unsigned char *)(*v3 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(void *)(v7 + 8 * (a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_1000CAEA0();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 48) + 16 * a1);
  sub_100094D2C(a1);
  *uint64_t v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

BOOL sub_1001A92B0(uint64_t a1, uint64_t *a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = a2[1];
  if (v2 >> 60 == 11) {
    return v3 >> 60 == 11;
  }
  if (v2 >> 60 == 15) {
    return v3 >> 60 == 15;
  }
  if (((v3 >> 60) | 4) == 0xF) {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *a2;
  sub_10003E058(v5, v2);
  sub_10003E058(v6, v3);
  char v7 = sub_100077894(v5, v2, v6, v3);
  sub_10003E070(v6, v3);
  sub_10003E070(v5, v2);
  return v7 & 1;
}

BOOL sub_1001A9390(uint64_t a1, void *a2)
{
  return *(void *)(a1 + 8) == *a2;
}

BOOL sub_1001A93A4(uint64_t a1, uint64_t a2)
{
  return sub_1001AA468(*(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32), *(void *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32));
}

void *sub_1001A93FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a1;
  int v15 = a2;
  char v16 = BYTE4(a2) & 1;
  v12[2] = &v14;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10002CAA8((uint64_t)sub_1001AA1F8, (uint64_t)v12, a3);
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v5, 0);
    uint64_t v6 = v13;
    unint64_t v7 = v13[2];
    uint64_t v8 = 32;
    do
    {
      int v9 = *(_DWORD *)(v4 + v8);
      uint64_t v13 = v6;
      unint64_t v10 = v6[3];
      if (v7 >= v10 >> 1)
      {
        sub_10001AA54(v10 > 1, v7 + 1, 1);
        uint64_t v6 = v13;
      }
      v6[2] = v7 + 1;
      *((_DWORD *)v6 + v7 + 8) = v9;
      v8 += 24;
      ++v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

void *sub_1001A9530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[0] = a1;
  v14[1] = a2;
  v12[2] = v14;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10002CF54((uint64_t)sub_1001AA1A8, (uint64_t)v12, a3);
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v5, 0);
    uint64_t v6 = v13;
    unint64_t v7 = v13[2];
    uint64_t v8 = 32;
    do
    {
      int v9 = *(_DWORD *)(v4 + v8);
      uint64_t v13 = v6;
      unint64_t v10 = v6[3];
      if (v7 >= v10 >> 1)
      {
        sub_10001AA54(v10 > 1, v7 + 1, 1);
        uint64_t v6 = v13;
      }
      v6[2] = v7 + 1;
      *((_DWORD *)v6 + v7 + 8) = v9;
      v8 += 24;
      ++v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

uint64_t sub_1001A9658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v46 = a3;
  uint64_t v6 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v54 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v41 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v42 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v47 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  uint64_t v53 = a2;
  if (v12) {
    goto LABEL_4;
  }
LABEL_5:
  int64_t v18 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (v18 >= v42) {
    goto LABEL_36;
  }
  unint64_t v19 = *(void *)(v41 + 8 * v18);
  ++v14;
  if (!v19)
  {
    int64_t v14 = v18 + 1;
    if (v18 + 1 >= v42) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v41 + 8 * v14);
    if (!v19)
    {
      int64_t v14 = v18 + 2;
      if (v18 + 2 >= v42) {
        goto LABEL_36;
      }
      unint64_t v19 = *(void *)(v41 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 3;
        if (v18 + 3 >= v42) {
          goto LABEL_36;
        }
        unint64_t v19 = *(void *)(v41 + 8 * v14);
        if (!v19)
        {
          int64_t v20 = v18 + 4;
          if (v20 < v42)
          {
            unint64_t v19 = *(void *)(v41 + 8 * v20);
            int64_t v14 = v20;
            if (!v19)
            {
              while (1)
              {
                int64_t v14 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_38;
                }
                if (v14 >= v42) {
                  goto LABEL_36;
                }
                unint64_t v19 = *(void *)(v41 + 8 * v14);
                ++v20;
                if (v19) {
                  goto LABEL_19;
                }
              }
            }
            goto LABEL_19;
          }
LABEL_36:
          uint64_t result = swift_release();
          uint64_t v22 = 0;
          uint64_t v23 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t v38 = 0;
          int v39 = 0;
          uint64_t v37 = v40;
          goto LABEL_35;
        }
      }
    }
  }
LABEL_19:
  uint64_t v16 = (v19 - 1) & v19;
  for (unint64_t i = __clz(__rbit64(v19)) + (v14 << 6); ; unint64_t i = v15 | (v14 << 6))
  {
    int v21 = (uint64_t *)(*(void *)(v47 + 48) + 16 * i);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = *(void *)(v47 + 56) + 32 * i;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *(unsigned int *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    int v45 = *(_DWORD *)(v24 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v52 = v27;
    swift_bridgeObjectRetain();
    int v28 = sub_1001A9530(v22, v23, v46);
    uint64_t v57 = v28[2];
    if (!v57) {
      break;
    }
    uint64_t v43 = v26;
    uint64_t v44 = v23;
    unint64_t v48 = v16;
    int64_t v49 = v14;
    uint64_t v50 = v25;
    uint64_t v51 = v22;
    uint64_t v29 = 0;
    uint64_t v55 = v28;
    uint64_t v56 = v28 + 4;
    uint64_t v30 = *(void *)(a2 + 16);
    while (!v30)
    {
LABEL_23:
      if (++v29 == v57)
      {
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v25 = v50;
        uint64_t v22 = v51;
        uint64_t v26 = v43;
        uint64_t v23 = v44;
        goto LABEL_34;
      }
    }
    int v31 = *((_DWORD *)v56 + v29);
    uint64_t v32 = v54;
    uint64_t v33 = a2 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v34 = *(void *)(v32 + 72);
    uint64_t v35 = v30;
    while (1)
    {
      sub_1001A3348(v33, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      sub_1001AA148((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
LABEL_27:
      v33 += v34;
      if (!--v35)
      {
        a2 = v53;
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
    int v36 = *(_DWORD *)&v8[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
    sub_1001AA148((uint64_t)v8, type metadata accessor for ClientCommand);
    if (v36 != v31) {
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v53;
    uint64_t result = swift_bridgeObjectRelease_n();
    unint64_t v12 = v48;
    int64_t v14 = v49;
    if (!v48) {
      goto LABEL_5;
    }
LABEL_4:
    unint64_t v15 = __clz(__rbit64(v12));
    uint64_t v16 = (v12 - 1) & v12;
  }
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_34:
  uint64_t v37 = v40;
  uint64_t v38 = v52;
  int v39 = v45;
LABEL_35:
  *(void *)uint64_t v37 = v22;
  *(void *)(v37 + 8) = v23;
  *(void *)(v37 + 16) = v25;
  *(void *)(v37 + 24) = v26;
  *(void *)(v37 + 32) = v38;
  *(_DWORD *)(v37 + 40) = v39;
  return result;
}

void *sub_1001A9A88(char a1, uint64_t a2)
{
  char v13 = a1 & 1;
  v11[2] = &v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10002B5B8((uint64_t)sub_100105EA0, (uint64_t)v11, a2);
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v12 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v4, 0);
    int64_t v5 = v12;
    unint64_t v6 = v12[2];
    uint64_t v7 = 32;
    do
    {
      int v8 = *(_DWORD *)(v3 + v7);
      unint64_t v12 = v5;
      unint64_t v9 = v5[3];
      if (v6 >= v9 >> 1)
      {
        sub_10001AA54(v9 > 1, v6 + 1, 1);
        int64_t v5 = v12;
      }
      v5[2] = v6 + 1;
      *((_DWORD *)v5 + v6 + 8) = v8;
      v7 += 8;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v5;
}

void *sub_1001A9BB4(uint64_t a1)
{
  return sub_1001A9EE0(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002B824);
}

void *sub_1001A9BE0(uint64_t a1)
{
  return sub_1001A9EE0(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002B850);
}

void *sub_1001A9C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[0] = a1;
  v14[1] = a2;
  v12[2] = v14;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10002B8D0((uint64_t)sub_1001AA4D4, (uint64_t)v12, a3);
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    char v13 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v5, 0);
    unint64_t v6 = v13;
    unint64_t v7 = v13[2];
    uint64_t v8 = 32;
    do
    {
      int v9 = *(_DWORD *)(v4 + v8);
      char v13 = v6;
      unint64_t v10 = v6[3];
      if (v7 >= v10 >> 1)
      {
        sub_10001AA54(v10 > 1, v7 + 1, 1);
        unint64_t v6 = v13;
      }
      v6[2] = v7 + 1;
      *((_DWORD *)v6 + v7 + 8) = v9;
      v8 += 24;
      ++v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

void *sub_1001A9D34(char a1, uint64_t a2)
{
  char v13 = a1;
  v11[2] = &v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10002BAE4((uint64_t)sub_100105D48, (uint64_t)v11, a2);
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v12 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v4, 0);
    int64_t v5 = v12;
    unint64_t v6 = v12[2];
    uint64_t v7 = 32;
    do
    {
      int v8 = *(_DWORD *)(v3 + v7);
      unint64_t v12 = v5;
      unint64_t v9 = v5[3];
      if (v6 >= v9 >> 1)
      {
        sub_10001AA54(v9 > 1, v6 + 1, 1);
        int64_t v5 = v12;
      }
      v5[2] = v6 + 1;
      *((_DWORD *)v5 + v6 + 8) = v8;
      v7 += 8;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v5;
}

void *sub_1001A9E5C(uint64_t a1)
{
  return sub_1001A9EE0(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002BB10);
}

void *sub_1001A9E88(uint64_t a1)
{
  return sub_1001A9EE0(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002BCD0);
}

void *sub_1001A9EB4(uint64_t a1)
{
  return sub_1001A9EE0(a1, (uint64_t)CredentialsRequestID.init(), (uint64_t (*)(uint64_t, uint64_t *, uint64_t))sub_10002BE64);
}

void *sub_1001A9EE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t *, uint64_t))
{
  swift_bridgeObjectRetain();
  uint64_t v6 = a3(a2, &v14, a1);
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v15 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v7, 0);
    uint64_t v8 = 0;
    unint64_t v9 = v15;
    unint64_t v10 = v15[2];
    do
    {
      int v11 = *(_DWORD *)(v6 + 4 * v8 + 32);
      unint64_t v15 = v9;
      unint64_t v12 = v9[3];
      if (v10 >= v12 >> 1)
      {
        sub_10001AA54(v12 > 1, v10 + 1, 1);
        unint64_t v9 = v15;
      }
      ++v8;
      v9[2] = v10 + 1;
      *((_DWORD *)v9 + v10++ + 8) = v11;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v9;
}

uint64_t sub_1001A9FF8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  uint64_t v2 = sub_1000D38D0(v1);
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = sub_1001A91D0(v2, v3);
  uint64_t v9 = v8;
  sub_100060FF0(v2, v4, v6);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t sub_1001AA0A8()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001AA0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070EC68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AA148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_1001AA1A8(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  return *(void *)(a1 + 16) == v2[1] && sub_1000255D4(*(void *)(a1 + 8), *v2);
}

BOOL sub_1001AA1F8(uint64_t a1)
{
  return sub_1001A93A4(a1, *(void *)(v1 + 16));
}

void *sub_1001AA218(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = a1;
  v11[2] = &v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10002BB68((uint64_t)sub_1001AA4BC, (uint64_t)v11, a2);
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v12 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v4, 0);
    char v5 = v12;
    unint64_t v6 = v12[2];
    uint64_t v7 = 32;
    do
    {
      int v8 = *(_DWORD *)(v3 + v7);
      unint64_t v12 = v5;
      unint64_t v9 = v5[3];
      if (v6 >= v9 >> 1)
      {
        sub_10001AA54(v9 > 1, v6 + 1, 1);
        char v5 = v12;
      }
      v5[2] = v6 + 1;
      *((_DWORD *)v5 + v6 + 8) = v8;
      v7 += 16;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v5;
}

void *sub_1001AA340(char a1, uint64_t a2)
{
  char v13 = a1;
  v11[2] = &v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10002BCFC((uint64_t)sub_100106108, (uint64_t)v11, a2);
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v12 = _swiftEmptyArrayStorage;
    sub_10001AA54(0, v4, 0);
    char v5 = v12;
    unint64_t v6 = v12[2];
    uint64_t v7 = 32;
    do
    {
      int v8 = *(_DWORD *)(v3 + v7);
      unint64_t v12 = v5;
      unint64_t v9 = v5[3];
      if (v6 >= v9 >> 1)
      {
        sub_10001AA54(v9 > 1, v6 + 1, 1);
        char v5 = v12;
      }
      v5[2] = v6 + 1;
      *((_DWORD *)v5 + v6 + 8) = v8;
      v7 += 8;
      ++v6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v5;
}

BOOL sub_1001AA468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 0x100000000) != 0)
  {
    if ((a4 & 0x100000000) == 0) {
      return 0;
    }
  }
  else if ((a4 & 0x100000000) != 0)
  {
    return 0;
  }
  return a2 == a4 && sub_1000255D4(a1, a3);
}

BOOL sub_1001AA4BC(uint64_t a1)
{
  return *(void *)(a1 + 8) == **(void **)(v1 + 16);
}

BOOL sub_1001AA4D4(uint64_t a1)
{
  return sub_1001A92B0(a1, *(uint64_t **)(v1 + 16));
}

ValueMetadata *type metadata accessor for RenameMailboxes.ActionID()
{
  return &type metadata for RenameMailboxes.ActionID;
}

Swift::Int sub_1001AA504()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA058);
  qword_1007617D0 = result;
  return result;
}

uint64_t sub_1001AA52C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v3);
  char v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(_DWORD *)(v1 + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_100120DE8(a1, (uint64_t)v5, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  int v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v25 = v10;
    uint64_t v15 = v14;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v15 = 68159491;
    LODWORD(v28) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v3 + 20);
    uint64_t v27 = v6;
    uint64_t v17 = &v5[v16];
    LOBYTE(v28) = v5[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    int v24 = v13;
    uint64_t v19 = *((void *)v17 + 1);
    unint64_t v18 = *((void *)v17 + 2);
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1000C6914(v19, v18, &v30);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1040;
    LODWORD(v28) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 27) = 512;
    LOWORD(v28) = *((_WORD *)v17 + 12);
    sub_1005E2960();
    *(_WORD *)(v15 + 31) = 2160;
    uint64_t v28 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v15 + 41) = 2085;
    int v20 = *((_DWORD *)v17 + 10);
    uint64_t v28 = *((void *)v17 + 4);
    int v29 = v20;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1005E1CC0();
    uint64_t v28 = sub_1000C6914(v21, v22, &v30);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1001A6094((uint64_t)v5, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v15 + 51) = 1024;
    LODWORD(v28) = v25;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v24, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task for search #%u.", (uint8_t *)v15, 0x39u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v27);
  }
  else
  {
    sub_1001A6094((uint64_t)v5, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1001AA960@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  int v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v30 - v11;
  int v13 = sub_1001A9BE0(a2);
  uint64_t v14 = v13[2];
  if (v14)
  {
    int v31 = v3;
    uint64_t v32 = v13;
    uint64_t v15 = 0;
    int v36 = v13 + 4;
    uint64_t v37 = a1;
    uint64_t v16 = *(void *)(a1 + 16);
    uint64_t v35 = v14;
    uint64_t v33 = a3;
    uint64_t v34 = v16;
    do
    {
      if (v16)
      {
        int v17 = *((_DWORD *)v36 + v15);
        uint64_t v18 = v38;
        uint64_t v19 = a1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
        swift_bridgeObjectRetain();
        uint64_t v20 = *(void *)(v18 + 72);
        while (1)
        {
          sub_100120DE8(v19, (uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          sub_100120DE8((uint64_t)v12, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1001A6094((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            int v21 = *(_DWORD *)&v10[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
            sub_1001A6094((uint64_t)v10, type metadata accessor for ClientCommand);
            if (v21 == v17)
            {
              sub_1001A6094((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a3 = v33;
              goto LABEL_14;
            }
          }
          sub_1001A6094((uint64_t)v12, type metadata accessor for TaskHistory.Previous);
          v19 += v20;
          if (!--v16)
          {
            a1 = v37;
            swift_bridgeObjectRelease();
            uint64_t v16 = v34;
            uint64_t v14 = v35;
            break;
          }
        }
      }
      ++v15;
    }
    while (v15 != v14);
    swift_bridgeObjectRelease();
    a3 = v33;
    uint64_t v3 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1001AACE0();
  if ((~result & 0xF000000000000007) == 0)
  {
LABEL_14:
    uint64_t v23 = sub_10000566C(&qword_10070EDF0);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a3, 1, 1, v23);
  }
  uint64_t v24 = *v3 - 1;
  if (__OFSUB__(*v3, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v24 > 0xFFFFFFFFLL)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if ((unint64_t)v24 > 0x7FFFFFFFFFFFFFFELL)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v25 = *v3;
  if (HIDWORD(*v3))
  {
LABEL_28:
    __break(1u);
    return result;
  }
  unint64_t v26 = result;
  __int16 v27 = *((unsigned __int8 *)v3 + 145);
  if (*((unsigned char *)v3 + 146)) {
    __int16 v28 = 256;
  }
  else {
    __int16 v28 = 0;
  }
  char v39 = 0;
  sub_1001DE48C(v28 | v27, result, v25, a3);
  sub_1001ADA9C(v26);
  uint64_t v29 = sub_10000566C(&qword_10070EDF0);
  return (*(uint64_t (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a3, 0, 1, v29);
}

unint64_t sub_1001AACE0()
{
  uint64_t v1 = sub_10000566C(&qword_100709E38);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v35 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v10 - 8);
  os_log_type_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000566C(&qword_100709E30);
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  if (*(void *)(*(void *)(v0 + 128) + 16))
  {
    uint64_t v35 = (uint64_t)&v35 - v17;
    uint64_t v36 = v0;
    sub_100063E18();
    static MessageIdentifierRange.all.getter();
    v39[0] = v39[1];
    Range<>.init<A>(_:)((uint64_t)v39, (uint64_t)&type metadata for UID);
    v39[0] = v18;
    sub_10001FC6C();
    sub_1005E36A0();
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_1000630DC(v19);
    MessageIdentifierSet.subtracting(_:)((uint64_t)v4, v1);
    sub_100007A48((uint64_t)v4, &qword_100709E38);
    sub_100007A48((uint64_t)v7, &qword_100709E38);
    MessageIdentifierSet.count.getter();
    if (v20 < 1)
    {
      sub_100007A48((uint64_t)v9, &qword_100709E38);
      uint64_t v21 = v37;
      unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
      uint64_t v23 = v12;
      uint64_t v24 = 1;
    }
    else
    {
      sub_10001FDF0((uint64_t)v9, (uint64_t)v16, &qword_100709E38);
      sub_10001FDF0((uint64_t)v16, (uint64_t)v12, &qword_100709E30);
      uint64_t v21 = v37;
      unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
      uint64_t v23 = v12;
      uint64_t v24 = 0;
    }
    uint64_t v26 = v38;
    v22(v23, v24, 1, v38);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v26) == 1)
    {
      sub_100007A48((uint64_t)v12, &qword_10070A000);
      return 0xF000000000000007;
    }
    else
    {
      uint64_t v27 = v35;
      sub_10001FDF0((uint64_t)v12, v35, &qword_100709E30);
      uint64_t v28 = swift_allocObject();
      sub_10000566C(&qword_10070A048);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1005F6690;
      sub_10000566C(&qword_10070CA08);
      uint64_t v30 = swift_allocBox();
      uint64_t v32 = v31;
      sub_1000079E4(v27, v31, &qword_100709E30);
      v22((char *)v32, 0, 1, v26);
      unint64_t v33 = *(void *)(v36 + 120);
      *(void *)(v29 + 32) = v30 | 0xA000000000000000;
      *(void *)(v29 + 40) = v33;
      sub_100008D7C(v33);
      sub_100007A48(v27, &qword_100709E30);
      *(void *)(v28 + 16) = v29;
      return v28 | 0xC000000000000000;
    }
  }
  else
  {
    unint64_t v25 = *(void *)(v0 + 120);
    sub_100008D7C(v25);
  }
  return v25;
}

uint64_t sub_1001AB0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  os_log_type_t v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_100120DE8(a2, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v13 = sub_1005E0EB0();
  os_log_type_t v14 = sub_1005E25A0();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v34 = a1;
    uint64_t v17 = v16;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v38 = v33;
    *(_DWORD *)uint64_t v17 = 68159235;
    LODWORD(v36) = 2;
    int v31 = v15;
    sub_1005E2960();
    *(_WORD *)(v17 + 8) = 256;
    uint64_t v18 = *(int *)(v6 + 20);
    uint64_t v35 = v3;
    uint64_t v19 = &v8[v18];
    LOBYTE(v36) = v8[v18];
    sub_1005E2960();
    *(_WORD *)(v17 + 11) = 2082;
    uint64_t v32 = v9;
    uint64_t v21 = *((void *)v19 + 1);
    unint64_t v20 = *((void *)v19 + 2);
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1000C6914(v21, v20, &v38);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 21) = 1040;
    LODWORD(v36) = 2;
    sub_1005E2960();
    *(_WORD *)(v17 + 27) = 512;
    LOWORD(v36) = *((_WORD *)v19 + 12);
    sub_1005E2960();
    *(_WORD *)(v17 + 31) = 2160;
    uint64_t v36 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v17 + 41) = 2085;
    int v22 = *((_DWORD *)v19 + 10);
    uint64_t v36 = *((void *)v19 + 4);
    int v37 = v22;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1005E1CC0();
    uint64_t v36 = sub_1000C6914(v23, v24, &v38);
    uint64_t v3 = v35;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1001A6094((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v31, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] User search did fail.", (uint8_t *)v17, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v32);
  }
  else
  {
    sub_1001A6094((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v25 = *(unsigned int *)(v3 + 8);
  uint64_t v26 = *(void *)(v3 + 16);
  uint64_t v27 = *(void *)(v3 + 24);
  uint64_t v28 = type metadata accessor for SearchMailbox();
  return sub_100044900(v25, v26, v27, v3 + *(int *)(v28 + 52));
}

uint64_t sub_1001AB538()
{
  if (qword_100709DE0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001AB59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001AC888(a1, a2, a3, a4, a6, a7);
}

uint64_t sub_1001AB5A8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  return sub_1001AD0F8(a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1001AB5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100044900(*(unsigned int *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), v3 + *(int *)(a3 + 52));
}

uint64_t sub_1001AB618()
{
  return 0x614D686372616553;
}

Swift::Int sub_1001AB63C()
{
  Swift::UInt32 v1 = *v0;
  uint64_t v2 = v0[4];
  sub_1005E33F0();
  sub_1005E3440(v1);
  sub_1005E3410(v2 | (v2 << 32));
  return sub_1005E3470();
}

void sub_1001AB69C()
{
  uint64_t v1 = v0[4];
  sub_1005E3440(*v0);
  sub_1005E3410(v1 | (v1 << 32));
}

Swift::Int sub_1001AB6DC()
{
  Swift::UInt32 v1 = *v0;
  uint64_t v2 = v0[4];
  sub_1005E33F0();
  sub_1005E3440(v1);
  sub_1005E3410(v2 | (v2 << 32));
  return sub_1005E3470();
}

BOOL sub_1001AB738(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && (*(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned int *)(a1 + 16) << 32)) == (*(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned int *)(a2 + 16) << 32))
      && sub_1000255D4(*(void *)(a1 + 8), *(void *)(a2 + 8));
}

uint64_t sub_1001AB798(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchMailbox.SearchID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SearchMailbox.SearchID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for SearchMailbox.SearchID()
{
  return &type metadata for SearchMailbox.SearchID;
}

uint64_t sub_1001AB888(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    *(void *)(a1 + 40) = a2[5];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(void *)(a1 + 56) = a2[7];
    long long v8 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 88) = v8;
    uint64_t v9 = v8;
    uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v4 + 64, (uint64_t)(a2 + 8), v9);
    *(void *)(v4 + 104) = a2[13];
    *(unsigned char *)(v4 + 112) = *((unsigned char *)a2 + 112);
    unint64_t v11 = a2[15];
    swift_bridgeObjectRetain();
    sub_100008D7C(v11);
    uint64_t v12 = a2[16];
    uint64_t v13 = a2[17];
    *(void *)(v4 + 120) = v11;
    *(void *)(v4 + 128) = v12;
    *(void *)(v4 + 136) = v13;
    *(unsigned char *)(v4 + 144) = *((unsigned char *)a2 + 144);
    *(_WORD *)(v4 + 145) = *(_WORD *)((char *)a2 + 145);
    uint64_t v14 = *(int *)(a3 + 52);
    int v15 = (void *)(v4 + v14);
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_10000566C(&qword_100709E30);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_10000566C(&qword_10070A000);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v16, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_1001ABAEC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  swift_bridgeObjectRelease();
  sub_10000952C(*(void *)(a1 + 120));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_10000566C(&qword_100709E30);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v4, v7);
  }
  return result;
}

uint64_t sub_1001ABBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v7 = a2 + 64;
  long long v8 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(a1 + 64, v7, v9);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  unint64_t v11 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  sub_100008D7C(v11);
  uint64_t v12 = *(void *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 120) = v11;
  *(void *)(a1 + 128) = v12;
  *(void *)(a1 + 136) = v13;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  uint64_t v14 = *(int *)(a3 + 52);
  int v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_10000566C(&qword_100709E30);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10000566C(&qword_10070A000);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_1001ABDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  unint64_t v6 = *(void *)(a2 + 120);
  sub_100008D7C(v6);
  unint64_t v7 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = v6;
  sub_10000952C(v7);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v8;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  uint64_t v9 = *(int *)(a3 + 52);
  uint64_t v10 = (void *)(a1 + v9);
  unint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v20 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 24))(v10, v11, v20);
      return a1;
    }
    sub_100007A48((uint64_t)v10, &qword_100709E30);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_10070A000);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  uint64_t v17 = sub_10000566C(&qword_100709E60);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1001AC088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v5 = *(int *)(a3 + 52);
  unint64_t v6 = (const void *)(a2 + v5);
  unint64_t v7 = (void *)(a1 + v5);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = sub_10000566C(&qword_10070A000);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_10000566C(&qword_100709E60);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v6, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1001AC220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  unint64_t v8 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  sub_10000952C(v8);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  uint64_t v9 = *(int *)(a3 + 52);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_10000566C(&qword_100709E30);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v20 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 40))(v10, v11, v20);
      return a1;
    }
    sub_100007A48((uint64_t)v10, &qword_100709E30);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_10070A000);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  uint64_t v17 = sub_10000566C(&qword_100709E60);
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v10, v11, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1001AC490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AC4A4);
}

uint64_t sub_1001AC4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_10070A000);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001AC558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AC56C);
}

uint64_t sub_1001AC56C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_10070A000);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SearchMailbox()
{
  uint64_t result = qword_10070ECD0;
  if (!qword_10070ECD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001AC664()
{
  sub_100064BA4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1001AC75C()
{
  unint64_t result = qword_10070ED28;
  if (!qword_10070ED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070ED28);
  }
  return result;
}

unint64_t sub_1001AC7B0(uint64_t a1)
{
  unint64_t result = sub_1001AC7D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AC7D8()
{
  unint64_t result = qword_10070EDE0;
  if (!qword_10070EDE0)
  {
    type metadata accessor for SearchMailbox();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EDE0);
  }
  return result;
}

unint64_t sub_1001AC834()
{
  unint64_t result = qword_10070EDE8;
  if (!qword_10070EDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EDE8);
  }
  return result;
}

uint64_t sub_1001AC888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v74 = a1;
  uint64_t v68 = a6;
  uint64_t v9 = sub_10000566C(&qword_100709E30);
  uint64_t v67 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v64 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v11 - 8);
  Swift::UInt v66 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v13);
  uint64_t v69 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1005E0ED0();
  uint64_t v71 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  int v70 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000566C(&qword_10070A2D0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10000566C(&qword_100709E38);
  uint64_t v19 = *(void *)(v76 - 8);
  uint64_t v20 = __chkstk_darwin(v76);
  uint64_t v65 = (uint64_t)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v60 - v23;
  __chkstk_darwin(v22);
  uint64_t v72 = (uint64_t)&v60 - v25;
  uint64_t v26 = sub_1001A9BE0(a4);
  uint64_t v27 = v26[2];
  if (v27)
  {
    uint64_t v63 = v9;
    uint64_t v28 = 0;
    while ((sub_100149D30(*((_DWORD *)v26 + v28 + 8), a2, a3) & 1) == 0)
    {
      if (v27 == ++v28) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v75;
    if (*(unsigned char *)(v75 + 146)) {
      __int16 v31 = 256;
    }
    else {
      __int16 v31 = 0;
    }
    sub_1001DE688(v31 | *(unsigned __int8 *)(v75 + 145), (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v76) == 1)
    {
      return sub_100007A48((uint64_t)v18, &qword_10070A2D0);
    }
    else
    {
      uint64_t v32 = v72;
      sub_10001FDF0((uint64_t)v18, v72, &qword_100709E38);
      LODWORD(v74) = *(_DWORD *)(v30 + 8);
      uint64_t v34 = v70;
      uint64_t v33 = v71;
      uint64_t v35 = v68;
      uint64_t v36 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v68, v73);
      uint64_t v37 = v35;
      uint64_t v38 = v69;
      sub_100120DE8(v37, v69, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v39 = (uint64_t)v24;
      sub_1000079E4(v32, (uint64_t)v24, &qword_100709E38);
      uint64_t v40 = sub_1005E0EB0();
      os_log_type_t v41 = sub_1005E25C0();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        v79[0] = v68;
        *(_DWORD *)uint64_t v42 = 68159747;
        LODWORD(v77) = 2;
        uint64_t v61 = v39;
        os_log_t v62 = v40;
        sub_1005E2960();
        *(_WORD *)(v42 + 8) = 256;
        uint64_t v43 = v38 + *(int *)(v13 + 20);
        LOBYTE(v77) = *(unsigned char *)v43;
        sub_1005E2960();
        *(_WORD *)(v42 + 11) = 2082;
        uint64_t v44 = *(void *)(v43 + 8);
        unint64_t v45 = *(void *)(v43 + 16);
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_1000C6914(v44, v45, v79);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 21) = 1040;
        LODWORD(v77) = 2;
        sub_1005E2960();
        *(_WORD *)(v42 + 27) = 512;
        LOWORD(v77) = *(_WORD *)(v43 + 24);
        sub_1005E2960();
        *(_WORD *)(v42 + 31) = 2160;
        uint64_t v77 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v42 + 41) = 2085;
        int v46 = *(_DWORD *)(v43 + 40);
        uint64_t v77 = *(void *)(v43 + 32);
        int v78 = v46;
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_1005E1CC0();
        uint64_t v77 = sub_1000C6914(v47, v48, v79);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001A6094(v38, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v42 + 51) = 2048;
        uint64_t v49 = v61;
        MessageIdentifierSet.count.getter();
        uint64_t v51 = v50;
        sub_100007A48(v49, &qword_100709E38);
        uint64_t v77 = v51;
        uint64_t v30 = v75;
        sub_1005E2960();
        *(_WORD *)(v42 + 61) = 1024;
        LODWORD(v77) = v74;
        sub_1005E2960();
        os_log_t v52 = v62;
        _os_log_impl((void *)&_mh_execute_header, v62, v41, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Search returned %ld UIDs for search #%u.", (uint8_t *)v42, 0x43u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v32 = v72;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v73);
      }
      else
      {
        sub_100007A48(v39, &qword_100709E38);
        sub_1001A6094(v38, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v36);
      }
      uint64_t v54 = (uint64_t)v66;
      uint64_t v53 = v67;
      uint64_t v55 = v65;
      sub_10006654C(*(void *)v30, v65);
      MessageIdentifierSet.count.getter();
      if (v56 < 1)
      {
        sub_100007A48(v55, &qword_100709E38);
        uint64_t v58 = 1;
      }
      else
      {
        uint64_t v57 = v64;
        sub_10001FDF0(v55, v64, &qword_100709E38);
        sub_10001FDF0(v57, v54, &qword_100709E30);
        uint64_t v58 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v54, v58, 1, v63);
      sub_100007A48(v32, &qword_100709E38);
      uint64_t v59 = type metadata accessor for SearchMailbox();
      return sub_10006909C(v54, v30 + *(int *)(v59 + 52));
    }
  }
  else
  {
LABEL_5:
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001AD0F8(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v68 = a2;
  uint64_t v9 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v62 - v13;
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v16);
  uint64_t v23 = (char *)&v62 - v20;
  if (a4)
  {
    if (a4 == 1)
    {
      uint64_t v24 = v21;
      uint64_t v25 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)&v62 - v20, a6, v21);
      sub_100120DE8(a6, (uint64_t)v14, type metadata accessor for MailboxTaskLogger);
      sub_100086918(a1);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100086918(a1);
      swift_bridgeObjectRetain();
      sub_100086918(a1);
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1005E0EB0();
      os_log_type_t v27 = sub_1005E25A0();
      int v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v67 = v24;
        uint64_t v30 = v29;
        uint64_t v65 = swift_slowAlloc();
        uint64_t v71 = v65;
        *(_DWORD *)uint64_t v30 = 68159491;
        LODWORD(v69) = 2;
        os_log_t v62 = (char *)&v69 + 4;
        sub_1005E2960();
        *(_WORD *)(v30 + 8) = 256;
        uint64_t v31 = *(int *)(v9 + 20);
        os_log_t v64 = v26;
        uint64_t v32 = &v14[v31];
        LOBYTE(v69) = v14[v31];
        sub_1005E2960();
        *(_WORD *)(v30 + 11) = 2082;
        uint64_t v66 = v25;
        uint64_t v33 = *((void *)v32 + 1);
        unint64_t v34 = *((void *)v32 + 2);
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_1000C6914(v33, v34, &v71);
        LODWORD(v63) = v28;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 21) = 1040;
        LODWORD(v69) = 2;
        sub_1005E2960();
        *(_WORD *)(v30 + 27) = 512;
        LOWORD(v69) = *((_WORD *)v32 + 12);
        sub_1005E2960();
        *(_WORD *)(v30 + 31) = 2160;
        uint64_t v69 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v30 + 41) = 2085;
        int v35 = *((_DWORD *)v32 + 10);
        uint64_t v69 = *((void *)v32 + 4);
        int v70 = v35;
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_1005E1CC0();
        uint64_t v69 = sub_1000C6914(v36, v37, &v71);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001A6094((uint64_t)v14, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v30 + 51) = 2082;
        sub_100086918(a1);
        swift_bridgeObjectRetain();
        ResponseText.debugDescription.getter(a1);
        uint64_t v39 = v38;
        unint64_t v41 = v40;
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        uint64_t v69 = sub_1000C6914(v39, v41, &v71);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        os_log_t v42 = v64;
        _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v63, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] User search failed with NO %{public}s.", (uint8_t *)v30, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v23, v67);
      }
      else
      {
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        sub_1001A6094((uint64_t)v14, type metadata accessor for MailboxTaskLogger);
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        sub_1000869F0(a1);

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      }
    }
    else
    {
      uint64_t v43 = v21;
      uint64_t v44 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v18, a6, v21);
      sub_100120DE8(a6, (uint64_t)v12, type metadata accessor for MailboxTaskLogger);
      sub_100086918(a1);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100086918(a1);
      swift_bridgeObjectRetain();
      sub_100086918(a1);
      swift_bridgeObjectRetain();
      unint64_t v45 = sub_1005E0EB0();
      os_log_type_t v46 = sub_1005E25A0();
      int v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v48 = swift_slowAlloc();
        LODWORD(v64) = v47;
        uint64_t v49 = v48;
        uint64_t v65 = swift_slowAlloc();
        uint64_t v71 = v65;
        *(_DWORD *)uint64_t v49 = 68159491;
        LODWORD(v69) = 2;
        os_log_t v62 = (char *)&v69 + 4;
        sub_1005E2960();
        *(_WORD *)(v49 + 8) = 256;
        uint64_t v50 = *(int *)(v9 + 20);
        os_log_t v63 = v45;
        uint64_t v51 = &v12[v50];
        LOBYTE(v69) = v12[v50];
        sub_1005E2960();
        *(_WORD *)(v49 + 11) = 2082;
        uint64_t v66 = v44;
        uint64_t v52 = *((void *)v51 + 1);
        unint64_t v53 = *((void *)v51 + 2);
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_1000C6914(v52, v53, &v71);
        uint64_t v67 = v43;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 21) = 1040;
        LODWORD(v69) = 2;
        sub_1005E2960();
        *(_WORD *)(v49 + 27) = 512;
        LOWORD(v69) = *((_WORD *)v51 + 12);
        sub_1005E2960();
        *(_WORD *)(v49 + 31) = 2160;
        uint64_t v69 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v49 + 41) = 2085;
        int v54 = *((_DWORD *)v51 + 10);
        uint64_t v69 = *((void *)v51 + 4);
        int v70 = v54;
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_1005E1CC0();
        uint64_t v69 = sub_1000C6914(v55, v56, &v71);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001A6094((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v49 + 51) = 2082;
        sub_100086918(a1);
        swift_bridgeObjectRetain();
        ResponseText.debugDescription.getter(a1);
        uint64_t v58 = v57;
        unint64_t v60 = v59;
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        uint64_t v69 = sub_1000C6914(v58, v60, &v71);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        os_log_t v61 = v63;
        _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v64, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] User search failed with BAD %{public}s.", (uint8_t *)v49, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v18, v67);
      }
      else
      {
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        sub_1001A6094((uint64_t)v12, type metadata accessor for MailboxTaskLogger);
        sub_1000869F0(a1);
        swift_bridgeObjectRelease();
        sub_1000869F0(a1);

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v18, v43);
      }
    }
  }
  return result;
}

unint64_t sub_1001ADA9C(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10000952C(result);
  }
  return result;
}

uint64_t sub_1001ADAB0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

unsigned char *storeEnumTagSinglePayload for SearchMailbox.CommandID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001ADB84);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchMailbox.CommandID()
{
  return &type metadata for SearchMailbox.CommandID;
}

uint64_t sub_1001ADBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = *(void *)(a3 + 16);
  if (v23)
  {
    uint64_t v22 = *(void *)(a2 + 16);
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a3 + 48);
    uint64_t v8 = _swiftEmptyArrayStorage;
    while (v22 != v6)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 4 * v6 + 32);
      uint64_t v10 = *v7;
      uint64_t v11 = *(v7 - 2);
      uint64_t v12 = *((unsigned __int8 *)v7 - 8);
      swift_bridgeObjectRetain_n();
      unint64_t v13 = MessageFlagUpdate.init(message:flags:gmailLabels:)(v9, v11, v12, v10);
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      sub_1001B0638(v13, v14, v16);
      swift_bridgeObjectRelease();
      if (v17 == 1)
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        sub_1000A9E8C(v13, v15, v17);
        swift_bridgeObjectRelease();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100017DD0(0, v8[2] + 1, 1, v8);
          uint64_t v8 = (void *)result;
        }
        unint64_t v19 = v8[2];
        unint64_t v18 = v8[3];
        if (v19 >= v18 >> 1)
        {
          uint64_t result = (uint64_t)sub_100017DD0((void *)(v18 > 1), v19 + 1, 1, v8);
          uint64_t v8 = (void *)result;
        }
        *((void *)&v20 + 1) = v15;
        *(void *)&long long v20 = v13;
        v8[2] = v19 + 1;
        uint64_t v21 = &v8[3 * v19];
        *((_DWORD *)v21 + 8) = v13;
        *(void *)((char *)v21 + 36) = v20 >> 32;
        *((unsigned char *)v21 + 44) = BYTE4(v15);
        v21[6] = v17;
      }
      ++v6;
      v7 += 3;
      if (v23 == v6)
      {
        swift_release();
        swift_release();
        swift_release();
        return (uint64_t)v8;
      }
    }
    __break(1u);
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

Swift::Int sub_1001ADD90()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA148);
  qword_1007617D8 = result;
  return result;
}

uint64_t sub_1001ADDB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v2);
  unsigned int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_100120DE8(a1, (uint64_t)v4, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  unsigned int v9 = sub_1005E0EB0();
  os_log_type_t v10 = sub_1005E25C0();
  int v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = swift_slowAlloc();
    int v23 = v11;
    uint64_t v13 = v12;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v13 = 68159235;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    uint64_t v14 = *(int *)(v2 + 20);
    uint64_t v24 = v5;
    uint64_t v15 = &v4[v14];
    LOBYTE(v25) = v4[v14];
    sub_1005E2960();
    *(_WORD *)(v13 + 11) = 2082;
    uint64_t v17 = *((void *)v15 + 1);
    unint64_t v16 = *((void *)v15 + 2);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000C6914(v17, v16, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 21) = 1040;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 27) = 512;
    LOWORD(v25) = *((_WORD *)v15 + 12);
    sub_1005E2960();
    *(_WORD *)(v13 + 31) = 2160;
    uint64_t v25 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v13 + 41) = 2085;
    int v18 = *((_DWORD *)v15 + 10);
    uint64_t v25 = *((void *)v15 + 4);
    int v26 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1005E1CC0();
    uint64_t v25 = sub_1000C6914(v19, v20, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100120E50((uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v23, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task.", (uint8_t *)v13, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  }
  else
  {
    sub_100120E50((uint64_t)v4, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

int64_t sub_1001AE1BC(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a5 + 112);
  if (!*(void *)(v10 + 16) || (int64_t result = sub_100024260(a1), (v12 & 1) == 0))
  {
    uint64_t v15 = a3;
    swift_bridgeObjectRetain();
    sub_1000A9E8C(0, 0, 1);
    sub_1000A9E8C(a2, a3, a4);
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v10 + 56) + 24 * result;
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = a3;
  if (*(void *)v13 == 2)
  {
    if (a2 != 2) {
      goto LABEL_7;
    }
  }
  else
  {
    if (a2 == 2) {
      goto LABEL_7;
    }
    int64_t result = static FlagsUpdate.__derived_struct_equals(_:_:)(*(void *)v13 & 0xFFFFFFFF01010101, *(unsigned char *)(v13 + 8), a2 & 0xFFFFFFFF01010101, a3);
    if ((result & 1) == 0) {
      goto LABEL_7;
    }
  }
  if (!v14)
  {
    if (!a4) {
      return result;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *(void *)(a5 + 112);
    *(void *)(a5 + 112) = 0x8000000000000000;
    sub_100103A68(a2, a3, a4, a1, isUniquelyReferenced_nonNull_native);
    *(void *)(a5 + 112) = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    return sub_10009DF4C(a2, v15, a4, a1);
  }
  if (!a4) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v17 = sub_100013754(v14, a4);
  swift_bridgeObjectRelease();
  int64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1001AE378(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v111 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v6 = __chkstk_darwin(v111);
  uint64_t v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v108 = (uint64_t)&v99 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v104 = (uint64_t)&v99 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v99 - v13;
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v110 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v109 = (char *)&v99 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v105 = (char *)&v99 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v99 - v23;
  uint64_t v119 = 0;
  char v120 = 1;
  BOOL v25 = *(unsigned char *)(a1 + 184) == 1;
  uint64_t v112 = v16;
  if (v25)
  {
    uint64_t v107 = a2;
    uint64_t v26 = *(void *)(a1 + 168);
    uint64_t v106 = *(void *)(a1 + 176);
    uint64_t v27 = (char *)&v99 - v23;
    uint64_t v28 = v15;
    uint64_t v30 = v14;
    uint64_t v31 = v8;
    unsigned int v32 = *(_DWORD *)(v2 + 48);
    uint64_t v33 = *(void *)(v2 + 40);
    uint64_t v116 = *(void *)(a1 + 160);
    uint64_t v29 = v116;
    swift_bridgeObjectRetain();
    unsigned int v34 = v32;
    uint64_t v8 = v31;
    uint64_t v14 = v30;
    sub_100049C80(&v116, v33, v34, 0, (uint64_t)&v119);
    uint64_t v35 = v29;
    uint64_t v15 = v28;
    uint64_t v24 = v27;
    uint64_t v16 = v112;
    a2 = v107;
    sub_10000F0D4(v35, v26, v106, 1);
    uint64_t v36 = v116;
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 160) = v36;
    *(unsigned char *)(a1 + 184) = 1;
  }
  uint64_t v37 = a1 + 160;
  if (*(void *)(*(void *)(v3 + 112) + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v24, a2, v15);
    sub_100120DE8(a2, (uint64_t)v14, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10003C6D4(v3, (uint64_t)&v116);
    uint64_t v38 = sub_1005E0EB0();
    os_log_type_t v39 = sub_1005E25C0();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v106 = v37;
      uint64_t v42 = v41;
      uint64_t v101 = swift_slowAlloc();
      uint64_t v115 = v101;
      *(_DWORD *)uint64_t v42 = 68159491;
      LODWORD(v113) = 2;
      int v100 = v40;
      sub_1005E2960();
      *(_WORD *)(v42 + 8) = 256;
      uint64_t v43 = *(int *)(v111 + 20);
      char v102 = v24;
      char v103 = v8;
      uint64_t v44 = &v14[v43];
      LOBYTE(v113) = v14[v43];
      sub_1005E2960();
      *(_WORD *)(v42 + 11) = 2082;
      uint64_t v107 = v3;
      unsigned int v99 = v14;
      uint64_t v45 = *((void *)v44 + 1);
      unint64_t v46 = *((void *)v44 + 2);
      swift_bridgeObjectRetain();
      uint64_t v113 = sub_1000C6914(v45, v46, &v115);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 21) = 1040;
      LODWORD(v113) = 2;
      sub_1005E2960();
      *(_WORD *)(v42 + 27) = 512;
      LOWORD(v113) = *((_WORD *)v44 + 12);
      sub_1005E2960();
      *(_WORD *)(v42 + 31) = 2160;
      uint64_t v113 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v42 + 41) = 2085;
      uint64_t v47 = *((void *)v44 + 4);
      int v48 = *((_DWORD *)v44 + 10);
      uint64_t v8 = v103;
      uint64_t v113 = v47;
      int v114 = v48;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1005E1CC0();
      uint64_t v113 = sub_1000C6914(v49, v50, &v115);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100120E50((uint64_t)v99, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v42 + 51) = 2048;
      uint64_t v51 = *(void *)(v118 + 16);
      sub_10003C730((uint64_t)&v116);
      uint64_t v113 = v51;
      uint64_t v16 = v112;
      uint64_t v3 = v107;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v100, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Sent %ld changes to the persistence.", (uint8_t *)v42, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v37 = v106;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v16 + 8))(v102, v15);
    }
    else
    {
      sub_10003C730((uint64_t)&v116);
      sub_100120E50((uint64_t)v14, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
    }
  }
  uint64_t v52 = v119;
  if (v120 != 1)
  {
    uint64_t v68 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v110, a2, v15);
    sub_100120DE8(a2, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v69 = sub_1005E0EB0();
    os_log_type_t v70 = sub_1005E25C0();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v106 = v37;
      uint64_t v72 = v71;
      uint64_t v109 = (char *)swift_slowAlloc();
      uint64_t v113 = (uint64_t)v109;
      *(_DWORD *)uint64_t v72 = 68159491;
      LODWORD(v116) = 2;
      sub_1005E2960();
      *(_WORD *)(v72 + 8) = 256;
      uint64_t v73 = *(int *)(v111 + 20);
      char v103 = v8;
      uint64_t v74 = &v8[v73];
      LOBYTE(v116) = *v74;
      sub_1005E2960();
      *(_WORD *)(v72 + 11) = 2082;
      uint64_t v107 = v3;
      uint64_t v111 = v15;
      uint64_t v75 = *((void *)v74 + 1);
      unint64_t v76 = *((void *)v74 + 2);
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_1000C6914(v75, v76, &v113);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 21) = 1040;
      LODWORD(v116) = 2;
      sub_1005E2960();
      *(_WORD *)(v72 + 27) = 512;
      LOWORD(v116) = *((_WORD *)v74 + 12);
      sub_1005E2960();
      *(_WORD *)(v72 + 31) = 2160;
      uint64_t v116 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v72 + 41) = 2085;
      int v77 = *((_DWORD *)v74 + 10);
      uint64_t v116 = *((void *)v74 + 4);
      int v117 = v77;
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_1005E1CC0();
      uint64_t v116 = sub_1000C6914(v78, v79, &v113);
      uint64_t v3 = v107;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100120E50((uint64_t)v103, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v72 + 51) = 2048;
      uint64_t v116 = v52;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Updating local HIGHESTMODSEQ to %llu.", (uint8_t *)v72, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v112 + 8))(v110, v111);
    }
    else
    {
      sub_100120E50((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v68, v15);
    }
    uint64_t v80 = *(void *)(v3 + 40);
    unsigned int v81 = *(_DWORD *)(v3 + 48);
    uint64_t v82 = v52;
    char v83 = 0;
    return sub_10004AB2C(v82, v83, v80, v81);
  }
  unint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  if (v119)
  {
    int v54 = v109;
    v53(v109, a2, v15);
    uint64_t v55 = v108;
    sub_100120DE8(a2, v108, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v56 = sub_1005E0EB0();
    os_log_type_t v57 = sub_1005E25C0();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v106 = v37;
      uint64_t v59 = v58;
      uint64_t v110 = (char *)swift_slowAlloc();
      uint64_t v113 = (uint64_t)v110;
      *(_DWORD *)uint64_t v59 = 68159235;
      LODWORD(v116) = 2;
      sub_1005E2960();
      *(_WORD *)(v59 + 8) = 256;
      uint64_t v60 = *(int *)(v111 + 20);
      uint64_t v111 = v15;
      uint64_t v61 = v55 + v60;
      LOBYTE(v116) = *(unsigned char *)(v55 + v60);
      sub_1005E2960();
      *(_WORD *)(v59 + 11) = 2082;
      uint64_t v107 = v3;
      uint64_t v62 = v16;
      uint64_t v63 = *(void *)(v61 + 8);
      unint64_t v64 = *(void *)(v61 + 16);
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_1000C6914(v63, v64, &v113);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v59 + 21) = 1040;
      LODWORD(v116) = 2;
      sub_1005E2960();
      *(_WORD *)(v59 + 27) = 512;
      LOWORD(v116) = *(_WORD *)(v61 + 24);
      sub_1005E2960();
      *(_WORD *)(v59 + 31) = 2160;
      uint64_t v116 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v59 + 41) = 2085;
      int v65 = *(_DWORD *)(v61 + 40);
      uint64_t v116 = *(void *)(v61 + 32);
      int v117 = v65;
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1005E1CC0();
      uint64_t v116 = sub_1000C6914(v66, v67, &v113);
      uint64_t v3 = v107;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100120E50(v108, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Clearing local HIGHESTMODSEQ.", (uint8_t *)v59, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v62 + 8))(v109, v111);
    }
    else
    {
      sub_100120E50(v55, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v54, v15);
    }
    uint64_t v80 = *(void *)(v3 + 40);
    unsigned int v81 = *(_DWORD *)(v3 + 48);
    uint64_t v82 = 0;
    char v83 = 1;
    return sub_10004AB2C(v82, v83, v80, v81);
  }
  uint64_t v84 = v105;
  v53(v105, a2, v15);
  uint64_t v85 = a2;
  uint64_t v86 = v104;
  sub_100120DE8(v85, v104, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  int v87 = sub_1005E0EB0();
  os_log_type_t v88 = sub_1005E25C0();
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = swift_slowAlloc();
    uint64_t v110 = (char *)swift_slowAlloc();
    uint64_t v113 = (uint64_t)v110;
    *(_DWORD *)uint64_t v89 = 68159235;
    LODWORD(v116) = 2;
    sub_1005E2960();
    *(_WORD *)(v89 + 8) = 256;
    uint64_t v90 = *(int *)(v111 + 20);
    uint64_t v111 = v15;
    uint64_t v91 = v86 + v90;
    LOBYTE(v116) = *(unsigned char *)(v86 + v90);
    sub_1005E2960();
    *(_WORD *)(v89 + 11) = 2082;
    uint64_t v92 = v16;
    uint64_t v93 = *(void *)(v91 + 8);
    unint64_t v94 = *(void *)(v91 + 16);
    swift_bridgeObjectRetain();
    uint64_t v116 = sub_1000C6914(v93, v94, &v113);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v89 + 21) = 1040;
    LODWORD(v116) = 2;
    sub_1005E2960();
    *(_WORD *)(v89 + 27) = 512;
    LOWORD(v116) = *(_WORD *)(v91 + 24);
    sub_1005E2960();
    *(_WORD *)(v89 + 31) = 2160;
    uint64_t v116 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v89 + 41) = 2085;
    int v95 = *(_DWORD *)(v91 + 40);
    uint64_t v116 = *(void *)(v91 + 32);
    int v117 = v95;
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_1005E1CC0();
    uint64_t v116 = sub_1000C6914(v96, v97, &v113);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100120E50(v104, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No change to local HIGHESTMODSEQ.", (uint8_t *)v89, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v105, v111);
  }
  else
  {
    sub_100120E50(v86, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v84, v15);
  }
}

uint64_t sub_1001AF428()
{
  if (qword_100709DE8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001AF484(uint64_t a1)
{
  return sub_1001ADDB8(a1);
}

uint64_t sub_1001AF49C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1001AFA70(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  a5[2] = v8;
  return result;
}

unint64_t sub_1001AF4DC()
{
  return 0xD000000000000010;
}

uint64_t sub_1001AF4F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v7 = *(void *)(a2 + 16);
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    uint64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(a3 + 48);
    while (v7 != v9)
    {
      uint64_t v11 = *(unsigned int *)(a2 + 4 * v9++ + 32);
      uint64_t v12 = *v10;
      uint64_t v13 = *(v10 - 2);
      uint64_t v14 = *((unsigned __int8 *)v10 - 8);
      swift_bridgeObjectRetain();
      a4(v11, v13, v14, v12);
      uint64_t result = swift_bridgeObjectRelease();
      v10 += 3;
      if (v4 == v9)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t destroy for UpdateLocalFlags(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UpdateLocalFlags(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = a2 + 64;
  long long v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 64, v5, v7);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UpdateLocalFlags(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

__n128 initializeWithTake for UpdateLocalFlags(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for UpdateLocalFlags(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateLocalFlags(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateLocalFlags(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateLocalFlags()
{
  return &type metadata for UpdateLocalFlags;
}

unint64_t sub_1001AF9A0()
{
  unint64_t result = qword_10070EDF8;
  if (!qword_10070EDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EDF8);
  }
  return result;
}

unint64_t sub_1001AF9F4(uint64_t a1)
{
  unint64_t result = sub_1001AFA1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001AFA1C()
{
  unint64_t result = qword_10070EEB0;
  if (!qword_10070EEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EEB0);
  }
  return result;
}

uint64_t sub_1001AFA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v90 = a4;
  uint64_t v93 = (void *)a2;
  uint64_t v102 = a1;
  uint64_t v88 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v88);
  uint64_t v92 = &v84[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005E0ED0();
  int v95 = *(void **)(v6 - 8);
  uint64_t v96 = (void *)v6;
  __chkstk_darwin(v6);
  unint64_t v94 = &v84[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v91 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v99 = *(void *)(v91 - 8);
  uint64_t v8 = __chkstk_darwin(v91);
  uint64_t v10 = &v84[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = &v84[-v12];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v84[-v15];
  __chkstk_darwin(v14);
  uint64_t v18 = &v84[-v17];
  uint64_t v106 = 0;
  uint64_t v107 = _swiftEmptyArrayStorage;
  uint64_t v108 = _swiftEmptyArrayStorage;
  uint64_t v19 = (void *)(a3 + *(int *)(type metadata accessor for MailboxSyncState() + 48));
  uint64_t v20 = v19[3];
  uint64_t v21 = v19[4];
  sub_10003BCDC(v19, v20);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
  uint64_t v23 = v101;
  uint64_t v103 = v101;
  uint64_t v104 = &v106;
  sub_1001AF4F8(v22, v24, v25, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001B05B8);
  uint64_t v89 = 0;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v27 = v106;
  uint64_t v26 = v107;
  uint64_t v28 = (uint64_t)v108;
  uint64_t v29 = v108[2];
  uint64_t v97 = v106;
  uint64_t v98 = v107;
  int v100 = v108;
  if (!v29)
  {
    unint64_t v46 = sub_100105428(*(void *)(v23 + 120), 0, (uint64_t)v93);
    uint64_t v47 = v46[2];
    if (v47)
    {
      uint64_t v48 = 0;
      unint64_t v94 = v46;
      int v95 = v46 + 4;
      uint64_t v96 = *(void **)(v102 + 16);
      uint64_t v93 = v19;
      do
      {
        if (v96)
        {
          int v49 = *((_DWORD *)v95 + v48);
          uint64_t v50 = v99;
          uint64_t v51 = v102 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
          swift_bridgeObjectRetain_n();
          uint64_t v52 = *(void *)(v50 + 72);
          unint64_t v53 = v96;
          do
          {
            sub_100120DE8(v51, (uint64_t)v18, type metadata accessor for TaskHistory.Previous);
            sub_100120DE8((uint64_t)v18, (uint64_t)v16, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              int v54 = *((_DWORD *)v16 + 2);
              sub_10007C4A4(*(void *)v16);
              if (v54 == v49)
              {
                sub_100120E50((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_release();
                return 0;
              }
            }
            else
            {
              sub_100120E50((uint64_t)v16, type metadata accessor for TaskHistory.Previous);
            }
            sub_100120E50((uint64_t)v18, type metadata accessor for TaskHistory.Previous);
            v51 += v52;
            unint64_t v53 = (void *)((char *)v53 - 1);
          }
          while (v53);
          swift_bridgeObjectRelease_n();
        }
        ++v48;
      }
      while (v48 != v47);
      swift_bridgeObjectRelease();
      uint64_t v74 = v93;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v74 = v19;
    }
    uint64_t v75 = v74[3];
    uint64_t v76 = v74[4];
    sub_10003BCDC(v74, v75);
    uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 72))(v75, v76);
    LOBYTE(v75) = v78;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v79 = v101;
    if (v75)
    {
      if (!v77) {
        return 0;
      }
      uint64_t v55 = *(void *)(v101 + 120);
      uint64_t v82 = swift_allocObject();
      int v83 = *(_DWORD *)(v79 + 48);
      *(void *)(v82 + 16) = *(void *)(v79 + 40);
      *(_DWORD *)(v82 + 24) = v83;
      *(void *)(v82 + 32) = 0;
      *(unsigned char *)(v82 + 40) = 1;
    }
    else
    {
      uint64_t v55 = *(void *)(v101 + 120);
      uint64_t v80 = swift_allocObject();
      int v81 = *(_DWORD *)(v79 + 48);
      *(void *)(v80 + 16) = *(void *)(v79 + 40);
      *(_DWORD *)(v80 + 24) = v81;
      *(void *)(v80 + 32) = v77;
      *(unsigned char *)(v80 + 40) = 0;
    }
    swift_bridgeObjectRetain();
    return v55;
  }
  uint64_t v87 = v29;
  uint64_t v30 = v90;
  ((void (*)(unsigned char *, uint64_t, void *))v95[2])(v94, v90, v96);
  uint64_t v31 = v92;
  sub_100120DE8(v30, (uint64_t)v92, type metadata accessor for MailboxTaskLogger);
  swift_retain();
  swift_retain();
  swift_retain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  unsigned int v32 = sub_1005E0EB0();
  os_log_type_t v33 = sub_1005E25C0();
  int v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v35 = swift_slowAlloc();
    os_log_t v86 = v32;
    uint64_t v36 = v35;
    uint64_t v90 = swift_slowAlloc();
    v105[0] = v90;
    *(_DWORD *)uint64_t v36 = 68159491;
    LODWORD(v106) = 2;
    int v85 = v34;
    sub_1005E2960();
    *(_WORD *)(v36 + 8) = 256;
    uint64_t v37 = &v31[*(int *)(v88 + 20)];
    LOBYTE(v106) = *v37;
    sub_1005E2960();
    *(_WORD *)(v36 + 11) = 2082;
    uint64_t v38 = *((void *)v37 + 1);
    unint64_t v39 = *((void *)v37 + 2);
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_1000C6914(v38, v39, v105);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 21) = 1040;
    LODWORD(v106) = 2;
    sub_1005E2960();
    *(_WORD *)(v36 + 27) = 512;
    LOWORD(v106) = *((_WORD *)v37 + 12);
    sub_1005E2960();
    *(_WORD *)(v36 + 31) = 2160;
    uint64_t v106 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v36 + 41) = 2085;
    uint64_t v40 = *((void *)v37 + 4);
    int v41 = *((_DWORD *)v37 + 10);
    uint64_t v28 = (uint64_t)v100;
    uint64_t v106 = v40;
    LODWORD(v107) = v41;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1005E1CC0();
    uint64_t v106 = sub_1000C6914(v42, v43, v105);
    sub_1005E2960();
    uint64_t v27 = v97;
    swift_bridgeObjectRelease();
    sub_100120E50((uint64_t)v92, type metadata accessor for MailboxTaskLogger);
    *(_WORD *)(v36 + 51) = 2048;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v106 = v87;
    uint64_t v44 = (uint64_t)v98;
    sub_1005E2960();
    swift_release();
    swift_release();
    swift_release();
    os_log_t v45 = v86;
    _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v85, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Got %ld flag/label changes.", (uint8_t *)v36, 0x3Du);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v44 = (uint64_t)v26;
    swift_release();
    swift_release();
    swift_release();
    sub_100120E50((uint64_t)v31, type metadata accessor for MailboxTaskLogger);

    swift_release();
    swift_release();
    swift_release();
  }
  ((void (*)(unsigned char *, void *))v95[1])(v94, v96);
  uint64_t v56 = v101;
  os_log_type_t v57 = sub_100105428(*(void *)(v101 + 120), 0, (uint64_t)v93);
  uint64_t v58 = (void *)v57[2];
  if (!v58)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  uint64_t v59 = 0;
  unint64_t v94 = v57;
  int v95 = v58;
  uint64_t v96 = v57 + 4;
  uint64_t v60 = *(void *)(v102 + 16);
  while (!v60)
  {
LABEL_20:
    if ((void *)++v59 == v58)
    {
      swift_bridgeObjectRelease();
      uint64_t v56 = v101;
      uint64_t v27 = v97;
      uint64_t v44 = (uint64_t)v98;
LABEL_30:
      uint64_t v71 = sub_1001ADBBC(v27, v44, v28);
      swift_release_n();
      swift_release_n();
      swift_release_n();
      uint64_t v72 = (void *)swift_allocObject();
      uint64_t v73 = *(void *)(v56 + 24);
      v72[2] = *(void *)(v56 + 16);
      v72[3] = v73;
      v72[4] = v71;
      swift_bridgeObjectRetain();
      return 0;
    }
  }
  int v61 = *((_DWORD *)v96 + v59);
  uint64_t v62 = v99;
  uint64_t v63 = v102 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
  swift_bridgeObjectRetain_n();
  uint64_t v64 = *(void *)(v62 + 72);
  uint64_t v65 = v60;
  while (1)
  {
    sub_100120DE8(v63, (uint64_t)v13, type metadata accessor for TaskHistory.Previous);
    sub_100120DE8((uint64_t)v13, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_100120E50((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
LABEL_24:
    sub_100120E50((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
    v63 += v64;
    if (!--v65)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v28 = (uint64_t)v100;
      uint64_t v58 = v95;
      goto LABEL_20;
    }
  }
  int v66 = *((_DWORD *)v10 + 2);
  sub_10007C4A4(*(void *)v10);
  if (v66 != v61) {
    goto LABEL_24;
  }
  sub_100120E50((uint64_t)v13, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v56 = v101;
  uint64_t v68 = *(void *)(v101 + 120);
  BOOL v69 = __OFADD__(v68, 1);
  uint64_t v70 = v68 + 1;
  if (!v69)
  {
    *(void *)(v101 + 120) = v70;
    uint64_t v27 = v97;
    uint64_t v44 = (uint64_t)v98;
    uint64_t v28 = (uint64_t)v100;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

int64_t sub_1001B05B8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  return sub_1001AE1BC(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1001B05C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B0600()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1001B0638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateLocalFlags.ActionID()
{
  return &type metadata for UpdateLocalFlags.ActionID;
}

double sub_1001B065C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v6[0] = &type metadata for UpdateServerUnreadCount;
  sub_1005E2BF0();
  v6[6] = 0xD000000000000017;
  v6[7] = 0x80000001005F5960;
  if (*(void *)(a1 + 16))
  {
    uint64_t v5 = a1;
    sub_10009B740((uint64_t)&v5, a2);
    sub_10009B79C((uint64_t)&v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10003C9A8((uint64_t)v6);
    swift_bridgeObjectRelease();
    *(void *)(a2 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateServerUnreadCount.Update()
{
  return &type metadata for UpdateServerUnreadCount.Update;
}

uint64_t destroy for UpdateServerUnreadCount(uint64_t a1)
{
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 16);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UpdateServerUnreadCount(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(v4, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UpdateServerUnreadCount(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_100022498(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UpdateServerUnreadCount(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UpdateServerUnreadCount()
{
  return &type metadata for UpdateServerUnreadCount;
}

uint64_t sub_1001B091C(uint64_t *a1, uint64_t *a2)
{
  if (a1[1] != a2[1]) {
    return 0;
  }
  uint64_t v2 = a2[2];
  uint64_t v3 = a1[2];
  return sub_1000255D4(*a1, *a2) & (v3 == v2);
}

uint64_t sub_1001B0970(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Task.Logger(0);
  __chkstk_darwin(v4);
  long long v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_1001A3348(a1, (uint64_t)v6, type metadata accessor for Task.Logger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10009B740(v2, (uint64_t)v22);
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E25C0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v21 = v19;
    *(_DWORD *)uint64_t v13 = 68158466;
    LODWORD(v20) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    uint64_t v14 = &v6[*(int *)(v4 + 20)];
    uint64_t v15 = *((void *)v14 + 1);
    unint64_t v16 = *((void *)v14 + 2);
    LOBYTE(v20) = *(void *)v14;
    sub_1005E2960();
    *(_WORD *)(v13 + 11) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1000C6914(v15, v16, &v21);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100105288((uint64_t)v6, type metadata accessor for Task.Logger);
    *(_WORD *)(v13 + 21) = 2048;
    uint64_t v17 = *(void *)(v22[0] + 16);
    sub_10009B79C((uint64_t)v22);
    uint64_t v20 = v17;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%.*hhx-%{public}s] Updating local server unread count for %ld mailboxes.", (uint8_t *)v13, 0x1Fu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10009B79C((uint64_t)v22);
    sub_100105288((uint64_t)v6, type metadata accessor for Task.Logger);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1001B0CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v111 = a2;
  uint64_t v105 = type metadata accessor for Task.Logger(0);
  uint64_t v3 = __chkstk_darwin(v105);
  uint64_t v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v98 - v6;
  uint64_t v117 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v117 - 8);
  uint64_t v9 = __chkstk_darwin(v117);
  uint64_t v99 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v118 = (char *)&v98 - v11;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = a1 + 168;
  uint64_t v15 = *(void *)(a1 + 168);
  BOOL v56 = *(unsigned char *)(a1 + 184) == 1;
  uint64_t v108 = a1;
  int v114 = v7;
  uint64_t v102 = (void *)(a1 + 168);
  uint64_t v100 = v8;
  if (v56)
  {
    uint64_t v16 = a1;
    uint64_t v17 = *(void *)(a1 + 160);
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v116 = v15;
      uint64_t v19 = *(void *)(v14 + 8);
      swift_bridgeObjectRetain();
      long long v20 = *(_OWORD *)(v17 + 160);
      long long v128 = *(_OWORD *)(v17 + 144);
      long long v129 = v20;
      long long v21 = *(_OWORD *)(v17 + 192);
      long long v130 = *(_OWORD *)(v17 + 176);
      long long v131 = v21;
      long long v22 = *(_OWORD *)(v17 + 96);
      long long v124 = *(_OWORD *)(v17 + 80);
      long long v125 = v22;
      long long v23 = *(_OWORD *)(v17 + 128);
      long long v126 = *(_OWORD *)(v17 + 112);
      long long v127 = v23;
      long long v24 = *(_OWORD *)(v17 + 48);
      long long v121 = *(_OWORD *)(v17 + 32);
      long long v25 = *(_OWORD *)(v17 + 64);
      long long v122 = v24;
      long long v123 = v25;
      uint64_t v13 = *((void *)&v121 + 1);
      uint64_t v12 = v121;
      uint64_t v26 = DWORD2(v24);
      sub_100007780((uint64_t)&v121);
      uint64_t v27 = swift_bridgeObjectRetain();
      LOBYTE(v26) = MailboxName.isInbox.getter(v27, v26);
      swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_8:
        sub_10000F0D4(v17, v116, v19, 1);
        swift_bridgeObjectRetain();
        sub_100007820((uint64_t)&v121);
      }
      else
      {
        uint64_t v28 = (long long *)(v17 + 208);
        while (1)
        {
          sub_100007820((uint64_t)&v121);
          if (!--v18) {
            break;
          }
          long long v29 = *v28;
          long long v30 = v28[2];
          long long v122 = v28[1];
          long long v123 = v30;
          long long v121 = v29;
          long long v31 = v28[3];
          long long v32 = v28[4];
          long long v33 = v28[6];
          long long v126 = v28[5];
          long long v127 = v33;
          long long v124 = v31;
          long long v125 = v32;
          long long v34 = v28[7];
          long long v35 = v28[8];
          long long v36 = v28[10];
          long long v130 = v28[9];
          long long v131 = v36;
          long long v128 = v34;
          long long v129 = v35;
          uint64_t v13 = *((void *)&v121 + 1);
          uint64_t v12 = v121;
          uint64_t v37 = DWORD2(v122);
          sub_100007780((uint64_t)&v121);
          uint64_t v38 = swift_bridgeObjectRetain();
          LOBYTE(v37) = MailboxName.isInbox.getter(v38, v37);
          swift_bridgeObjectRelease();
          v28 += 11;
          uint64_t v16 = v108;
          if (v37) {
            goto LABEL_8;
          }
        }
        sub_10000F0D4(v17, v116, v19, 1);
        uint64_t v12 = 0;
        uint64_t v13 = 0;
      }
      uint64_t v8 = v100;
      uint64_t v7 = v114;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
    }
    a1 = v16;
  }
  uint64_t v39 = *v101;
  uint64_t v116 = *(void *)(*v101 + 16);
  if (v116)
  {
    uint64_t v106 = v13;
    uint64_t v98 = v5;
    uint64_t v115 = v39 + 32;
    uint64_t v110 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v109 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v41 = 0;
    *(void *)&long long v42 = 68158722;
    long long v104 = v42;
    uint64_t v103 = (char *)&type metadata for Any + 8;
    unint64_t v43 = v118;
    uint64_t v44 = 0;
    uint64_t v112 = v12;
    uint64_t v113 = v39;
    while (v41 < *(void *)(v39 + 16))
    {
      os_log_t v45 = (uint64_t *)(v115 + 24 * v41);
      uint64_t v47 = *v45;
      uint64_t v46 = v45[1];
      uint64_t v118 = (char *)v45[2];
      if (*(unsigned char *)(a1 + 184) == 1 && (uint64_t v48 = *(void **)(a1 + 160), (v49 = v48[2]) != 0))
      {
        unint64_t v50 = 0;
        uint64_t v51 = *(void *)(a1 + 168);
        uint64_t v52 = *(void *)(a1 + 176);
        while (1)
        {
          unint64_t v53 = &v48[22 * v50 + 4];
          if (v53[1] == v46)
          {
            uint64_t v54 = *v53;
            uint64_t v55 = *(void *)(v54 + 16);
            if (v55 == *(void *)(v47 + 16))
            {
              if (v55) {
                BOOL v56 = v54 == v47;
              }
              else {
                BOOL v56 = 1;
              }
              if (v56) {
                goto LABEL_52;
              }
              if (*(unsigned __int8 *)(v54 + 32) == *(unsigned __int8 *)(v47 + 32))
              {
                if (v55 == 1) {
                  goto LABEL_52;
                }
                if (*(unsigned __int8 *)(v54 + 33) == *(unsigned __int8 *)(v47 + 33))
                {
                  if (v55 == 2) {
                    goto LABEL_52;
                  }
                  if (*(unsigned __int8 *)(v54 + 34) == *(unsigned __int8 *)(v47 + 34))
                  {
                    if (v55 == 3) {
                      goto LABEL_52;
                    }
                    if (*(unsigned __int8 *)(v54 + 35) == *(unsigned __int8 *)(v47 + 35)) {
                      break;
                    }
                  }
                }
              }
            }
          }
LABEL_21:
          if (++v50 == v49)
          {
            swift_bridgeObjectRetain();
            uint64_t v7 = v114;
            uint64_t v39 = v113;
            goto LABEL_40;
          }
        }
        os_log_type_t v57 = (unsigned __int8 *)(v54 + 36);
        uint64_t v58 = v55 - 4;
        uint64_t v59 = (unsigned __int8 *)(v47 + 36);
        while (v58)
        {
          int v61 = *v57++;
          int v60 = v61;
          int v62 = *v59++;
          --v58;
          if (v60 != v62) {
            goto LABEL_21;
          }
        }
LABEL_52:
        uint64_t v80 = *(void *)(a1 + 160);
        uint64_t v81 = *(void *)(a1 + 168);
        uint64_t v107 = v52;
        sub_10005636C(v80, v51, v52, 1);
        swift_bridgeObjectRetain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v82 = v48;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100093440(v48);
          uint64_t v82 = (void *)result;
        }
        uint64_t v39 = v113;
        if (v50 >= v82[2]) {
          goto LABEL_69;
        }
        int v83 = &v82[22 * v50];
        if (!*((unsigned char *)v83 + 200))
        {
          int v85 = (char *)v83[24];
          uint64_t v84 = (char **)(v83 + 24);
          if (v118 == v85)
          {
            *uint64_t v84 = v118;
            *((unsigned char *)v84 + 8) = 1;
          }
        }
        sub_10000F0D4((uint64_t)v48, v81, v107, 1);
        a1 = v108;
        *(void *)(v108 + 160) = v82;
        os_log_t v86 = v102;
        *uint64_t v102 = 0;
        v86[1] = 0;
        *(unsigned char *)(a1 + 184) = 1;
        uint64_t v7 = v114;
        uint64_t v12 = v112;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
LABEL_40:
      if (v44 < 5 || v12 && v46 == v106 && sub_1000255D4(v47, v12))
      {
        uint64_t v63 = a1;
        uint64_t v64 = v111;
        (*v110)(v43, v111, v117);
        sub_1001A3348(v64, (uint64_t)v7, type metadata accessor for Task.Logger);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_bridgeObjectRetain_n();
        uint64_t v65 = sub_1005E0EB0();
        os_log_type_t v66 = sub_1005E25C0();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = swift_slowAlloc();
          *(void *)&long long v121 = swift_slowAlloc();
          *(_DWORD *)uint64_t v67 = v104;
          *(_DWORD *)(v67 + 4) = 2;
          *(_WORD *)(v67 + 8) = 256;
          uint64_t v68 = &v7[*(int *)(v105 + 20)];
          uint64_t v107 = v44;
          uint64_t v69 = *((void *)v68 + 1);
          unint64_t v70 = *((void *)v68 + 2);
          *(unsigned char *)(v67 + 10) = *(void *)v68;
          *(_WORD *)(v67 + 11) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v71 = v69;
          uint64_t v72 = v117;
          *(void *)(v67 + 13) = sub_1000C6914(v71, v70, (uint64_t *)&v121);
          swift_bridgeObjectRelease();
          sub_100105288((uint64_t)v114, type metadata accessor for Task.Logger);
          *(_WORD *)(v67 + 21) = 2048;
          swift_bridgeObjectRelease();
          *(void *)(v67 + 23) = v118;
          swift_bridgeObjectRelease();
          *(_WORD *)(v67 + 31) = 2080;
          uint64_t v73 = swift_bridgeObjectRetain();
          uint64_t v74 = OpaqueMailboxID.description.getter(v73);
          unint64_t v76 = v75;
          swift_bridgeObjectRelease();
          uint64_t v77 = v74;
          uint64_t v7 = v114;
          *(void *)(v67 + 33) = sub_1000C6914(v77, v76, (uint64_t *)&v121);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v65, v66, "[%.*hhx-%{public}s] Did store server unread count %ld (aka. UNSEEN) for %s.", (uint8_t *)v67, 0x29u);
          swift_arrayDestroy();
          a1 = v108;
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v78 = v72;
          uint64_t v44 = v107;
          uint64_t result = (*v109)(v43, v78);
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_100105288((uint64_t)v7, type metadata accessor for Task.Logger);

          swift_bridgeObjectRelease_n();
          uint64_t result = (*v109)(v43, v117);
          a1 = v63;
        }
        BOOL v79 = __OFADD__(v44++, 1);
        uint64_t v12 = v112;
        uint64_t v39 = v113;
        if (v79) {
          goto LABEL_68;
        }
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      if (++v41 == v116)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = *v101;
        uint64_t v5 = v98;
        goto LABEL_61;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = 0;
LABEL_61:
  uint64_t v87 = v100;
  uint64_t result = (uint64_t)v99;
  if (v44 < *(void *)(v39 + 16))
  {
    uint64_t v88 = v111;
    uint64_t v89 = v99;
    (*(void (**)(void))(v100 + 16))();
    sub_1001A3348(v88, (uint64_t)v5, type metadata accessor for Task.Logger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10009B740((uint64_t)v101, (uint64_t)&v121);
    uint64_t v90 = sub_1005E0EB0();
    os_log_type_t v91 = sub_1005E25C0();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      *(_DWORD *)uint64_t v92 = 68158466;
      LODWORD(v119) = 2;
      sub_1005E2960();
      *(_WORD *)(v92 + 8) = 256;
      uint64_t v93 = &v5[*(int *)(v105 + 20)];
      uint64_t v94 = *((void *)v93 + 1);
      unint64_t v95 = *((void *)v93 + 2);
      LOBYTE(v119) = *(void *)v93;
      sub_1005E2960();
      *(_WORD *)(v92 + 11) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v119 = sub_1000C6914(v94, v95, &v120);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      uint64_t result = sub_100105288((uint64_t)v5, type metadata accessor for Task.Logger);
      *(_WORD *)(v92 + 21) = 2048;
      uint64_t v96 = *(void *)(v121 + 16);
      uint64_t v97 = v96 - v44;
      if (!__OFSUB__(v96, v44))
      {
        sub_10009B79C((uint64_t)&v121);
        uint64_t v119 = v97;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "[%.*hhx-%{public}s] Did store server unread counts for %ld more mailboxes.", (uint8_t *)v92, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v99, v117);
      }
      goto LABEL_70;
    }
    sub_10009B79C((uint64_t)&v121);
    sub_100105288((uint64_t)v5, type metadata accessor for Task.Logger);

    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v89, v117);
  }
  return result;
}

uint64_t sub_1001B18E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10003C94C(v1 + 8, a1);
}

uint64_t sub_1001B18F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1001B1CA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t WatchOSHeaderInfo.messageIDHeader.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1001B1958()
{
  unint64_t result = qword_10070EEB8;
  if (!qword_10070EEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EEB8);
  }
  return result;
}

unint64_t sub_1001B19AC(uint64_t a1)
{
  unint64_t result = sub_1001B19D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001B19D4()
{
  unint64_t result = qword_10070EF38;
  if (!qword_10070EF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070EF38);
  }
  return result;
}

uint64_t sub_1001B1A28(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = (void *)swift_bridgeObjectRetain();
    uint64_t v7 = v6[4];
    Swift::UInt v8 = v6[5];
    uint64_t v46 = v6;
    uint64_t v9 = v6[6];
    uint64_t v10 = (void *)*a3;
    unint64_t v11 = sub_1000242DC(v7, v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v12 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    unint64_t v16 = v11;
    char v17 = v12;
    uint64_t v18 = v10[3];
    swift_bridgeObjectRetain();
    if (v18 < v15)
    {
      sub_100052710(v15, a2 & 1);
      unint64_t v19 = sub_1000242DC(v7, v8);
      if ((v17 & 1) != (v20 & 1))
      {
LABEL_28:
        unint64_t result = sub_1005E3380();
        __break(1u);
        return result;
      }
      unint64_t v16 = v19;
      long long v21 = (void *)*a3;
      if ((v17 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      *(void *)(v21[7] + 8 * v16) = v9;
      uint64_t v22 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (unint64_t i = v46 + 9; ; i += 3)
      {
        uint64_t v28 = *(i - 2);
        Swift::UInt v29 = *(i - 1);
        uint64_t v30 = *i;
        long long v31 = (void *)*a3;
        unint64_t v32 = sub_1000242DC(v28, v29);
        uint64_t v34 = v31[2];
        BOOL v35 = (v33 & 1) == 0;
        uint64_t v36 = v34 + v35;
        if (__OFADD__(v34, v35)) {
          break;
        }
        unint64_t v37 = v32;
        char v38 = v33;
        uint64_t v39 = v31[3];
        swift_bridgeObjectRetain();
        if (v39 < v36)
        {
          sub_100052710(v36, 1);
          unint64_t v40 = sub_1000242DC(v28, v29);
          if ((v38 & 1) != (v41 & 1)) {
            goto LABEL_28;
          }
          unint64_t v37 = v40;
        }
        long long v42 = (void *)*a3;
        if (v38)
        {
          swift_bridgeObjectRelease();
          *(void *)(v42[7] + 8 * v37) = v30;
        }
        else
        {
          v42[(v37 >> 6) + 8] |= 1 << v37;
          unint64_t v43 = (uint64_t *)(v42[6] + 16 * v37);
          *unint64_t v43 = v28;
          v43[1] = v29;
          *(void *)(v42[7] + 8 * v37) = v30;
          uint64_t v44 = v42[2];
          BOOL v25 = __OFADD__(v44, 1);
          uint64_t v45 = v44 + 1;
          if (v25) {
            goto LABEL_27;
          }
          v42[2] = v45;
        }
        if (!--v22) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_26;
    }
    if (a2)
    {
      long long v21 = (void *)*a3;
      if (v17) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_100098A24();
      long long v21 = (void *)*a3;
      if (v17) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v21[(v16 >> 6) + 8] |= 1 << v16;
    long long v23 = (uint64_t *)(v21[6] + 16 * v16);
    *long long v23 = v7;
    v23[1] = v8;
    *(void *)(v21[7] + 8 * v16) = v9;
    uint64_t v24 = v21[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    _OWORD v21[2] = v26;
    uint64_t v22 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1001B1CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TaskHistory.Previous(0);
  *(void *)&long long v39 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  Swift::UInt v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - v9;
  unint64_t v11 = sub_100105378(a2);
  uint64_t v12 = v11[2];
  if (v12)
  {
    uint64_t v34 = v2;
    BOOL v35 = v11;
    uint64_t v13 = 0;
    unint64_t v37 = v11 + 4;
    uint64_t v38 = a1;
    uint64_t v14 = *(void *)(a1 + 16);
    uint64_t v36 = v12;
    do
    {
      if (v14)
      {
        int v15 = *((_DWORD *)v37 + v13);
        uint64_t v16 = v39;
        uint64_t v17 = a1 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v18 = *(void *)(v16 + 72);
        uint64_t v19 = v14;
        while (1)
        {
          sub_1001A3348(v17, (uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          sub_1001A3348((uint64_t)v10, (uint64_t)v8, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            int v20 = *((_DWORD *)v8 + 2);
            sub_10007C4A4(*(void *)v8);
            if (v20 == v15)
            {
              sub_100105288((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 0xF000000000000007;
            }
          }
          else
          {
            sub_100105288((uint64_t)v8, type metadata accessor for TaskHistory.Previous);
          }
          sub_100105288((uint64_t)v10, type metadata accessor for TaskHistory.Previous);
          v17 += v18;
          if (!--v19)
          {
            a1 = v38;
            swift_bridgeObjectRelease_n();
            uint64_t v12 = v36;
            break;
          }
        }
      }
      ++v13;
    }
    while (v13 != v12);
    swift_bridgeObjectRelease();
    uint64_t v2 = v34;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = *v2;
  int64_t v23 = *(void *)(*v2 + 16);
  uint64_t v24 = _swiftEmptyArrayStorage;
  if (v23)
  {
    unint64_t v40 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_10001AAF4(0, v23, 0);
    uint64_t v24 = v40;
    BOOL v25 = (_OWORD *)(v22 + 40);
    do
    {
      uint64_t v26 = *((void *)v25 - 1);
      long long v39 = *v25;
      unint64_t v40 = v24;
      unint64_t v28 = v24[2];
      unint64_t v27 = v24[3];
      swift_bridgeObjectRetain();
      if (v28 >= v27 >> 1)
      {
        sub_10001AAF4(v27 > 1, v28 + 1, 1);
        uint64_t v24 = v40;
      }
      void v24[2] = v28 + 1;
      Swift::UInt v29 = &v24[3 * v28];
      v29[4] = v26;
      *(_OWORD *)(v29 + 5) = v39;
      BOOL v25 = (_OWORD *)((char *)v25 + 24);
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  if (v24[2])
  {
    sub_10000566C(&qword_10070A748);
    uint64_t v30 = (void *)sub_1005E2FF0();
  }
  else
  {
    uint64_t v30 = _swiftEmptyDictionarySingleton;
  }
  unint64_t v40 = v30;
  sub_1001B1A28((uint64_t)v24, 1, &v40);
  swift_bridgeObjectRelease();
  long long v31 = v40;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  return v32 | 0x3000000000000006;
}

uint64_t sub_1001B2038()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

unsigned char *storeEnumTagSinglePayload for UpdateServerUnreadCount.ActionID(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001B210CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateServerUnreadCount.ActionID()
{
  return &type metadata for UpdateServerUnreadCount.ActionID;
}

uint64_t sub_1001B2144(uint64_t a1)
{
  uint64_t v54 = sub_10000566C(&qword_10070F2C0);
  uint64_t v3 = __chkstk_darwin(v54);
  unint64_t v53 = (void *)((char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v52 = (_OWORD *)((char *)v42 - v6);
  __chkstk_darwin(v5);
  uint64_t v51 = (char *)v42 - v7;
  uint64_t v8 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  if (!v11) {
    return (uint64_t)v12;
  }
  v42[1] = v1;
  uint64_t v58 = _swiftEmptyArrayStorage;
  sub_10001AC34(0, v11, 0);
  uint64_t result = sub_100103FDC(a1);
  uint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v43 = a1 + 80;
  int64_t v44 = v11;
  uint64_t v47 = v10;
  uint64_t v48 = a1;
  uint64_t v45 = v14;
  uint64_t v46 = a1 + 64;
  uint64_t v18 = v54;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = (unint64_t)v15 >> 6;
    if ((*(void *)(v17 + 8 * ((unint64_t)v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v55 = v16;
    uint64_t v56 = 1 << v15;
    long long v21 = v51;
    uint64_t v22 = (uint64_t)&v51[*(int *)(v18 + 48)];
    uint64_t v23 = *(void *)(a1 + 48);
    uint64_t v24 = *(void *)(a1 + 56);
    uint64_t v25 = v24 + *(void *)(*(void *)(sub_10000566C(&qword_100709E38) - 8) + 72) * v15;
    long long v57 = *(_OWORD *)(v23 + 16 * v15);
    sub_1000079E4(v25, v22, &qword_100709E38);
    long long v26 = v57;
    *long long v21 = v57;
    unint64_t v27 = v52;
    *uint64_t v52 = v26;
    sub_1000079E4(v22, (uint64_t)v27 + *(int *)(v18 + 48), &qword_100709E38);
    uint64_t v28 = (uint64_t)v27;
    Swift::UInt v29 = v53;
    sub_10001FDF0(v28, (uint64_t)v53, &qword_10070F2C0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v30 = (uint64_t)v21;
    uint64_t v31 = (uint64_t)v47;
    sub_100007A48(v30, &qword_10070F2C0);
    uint64_t v32 = *v29;
    uint64_t v33 = v29[1];
    sub_1000079E4((uint64_t)v29 + *(int *)(v18 + 48), v31, &qword_100709E38);
    uint64_t v34 = (void *)(v31 + *(int *)(v50 + 20));
    void *v34 = v32;
    v34[1] = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100007A48((uint64_t)v29, &qword_10070F2C0);
    uint64_t v12 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10001AC34(0, v12[2] + 1, 1);
      uint64_t v12 = v58;
    }
    unint64_t v36 = v12[2];
    unint64_t v35 = v12[3];
    if (v36 >= v35 >> 1)
    {
      sub_10001AC34(v35 > 1, v36 + 1, 1);
      uint64_t v12 = v58;
    }
    v12[2] = v36 + 1;
    uint64_t result = sub_1001C0268(v31, (uint64_t)v12+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v36, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
    a1 = v48;
    int64_t v19 = 1 << *(unsigned char *)(v48 + 32);
    if (v15 >= v19) {
      goto LABEL_27;
    }
    uint64_t v17 = v46;
    uint64_t v37 = *(void *)(v46 + 8 * v20);
    if ((v37 & v56) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v45;
    if (*(_DWORD *)(v48 + 36) != v45) {
      goto LABEL_29;
    }
    unint64_t v38 = v37 & (-2 << (v15 & 0x3F));
    if (v38)
    {
      int64_t v19 = __clz(__rbit64(v38)) | v15 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v39 = v20 + 1;
      unint64_t v40 = (unint64_t)(v19 + 63) >> 6;
      if (v20 + 1 < v40)
      {
        unint64_t v41 = *(void *)(v46 + 8 * v39);
        if (v41)
        {
LABEL_22:
          int64_t v19 = __clz(__rbit64(v41)) + (v39 << 6);
        }
        else
        {
          while (v40 - 2 != v20)
          {
            unint64_t v41 = *(void *)(v43 + 8 * v20++);
            if (v41)
            {
              unint64_t v39 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v55 + 1;
    uint64_t v15 = v19;
    if (v55 + 1 == v44) {
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

Swift::Int sub_1001B25B4(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1000A4CC8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1001BA4E0(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1001B265C()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA3D0);
  qword_1007617E0 = result;
  return result;
}

uint64_t sub_1001B2684@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v16 = a1;
  swift_bridgeObjectRetain();
  sub_1001B25B4(&v16);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(v4 + 24);
  uint64_t v10 = v16;
  *(void *)&v6[*(int *)(v4 + 20)] = v16;
  int64_t v11 = &v6[v9];
  uint64_t v12 = (char *)v10 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v13 = (2 * v10[2]) | 1;
  *(void *)int64_t v11 = v10;
  *((void *)v11 + 1) = v12;
  *((void *)v11 + 2) = 0;
  *((void *)v11 + 3) = v13;
  sub_1001C0268((uint64_t)v6, a2, type metadata accessor for UploadFlagChanges.EncodedFlags);
  return swift_retain();
}

uint64_t sub_1001B27F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_1001C0048(a1, (uint64_t)v4, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v9 = sub_1005E0EB0();
  os_log_type_t v10 = sub_1005E25C0();
  int v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = swift_slowAlloc();
    int v23 = v11;
    uint64_t v13 = v12;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v13 = 68159235;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    uint64_t v14 = *(int *)(v2 + 20);
    uint64_t v24 = v5;
    uint64_t v15 = &v4[v14];
    LOBYTE(v25) = v4[v14];
    sub_1005E2960();
    *(_WORD *)(v13 + 11) = 2082;
    uint64_t v17 = *((void *)v15 + 1);
    unint64_t v16 = *((void *)v15 + 2);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000C6914(v17, v16, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 21) = 1040;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 27) = 512;
    LOWORD(v25) = *((_WORD *)v15 + 12);
    sub_1005E2960();
    *(_WORD *)(v13 + 31) = 2160;
    uint64_t v25 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v13 + 41) = 2085;
    int v18 = *((_DWORD *)v15 + 10);
    uint64_t v25 = *((void *)v15 + 4);
    int v26 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1005E1CC0();
    uint64_t v25 = sub_1000C6914(v19, v20, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1001BD160((uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v23, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task.", (uint8_t *)v13, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  }
  else
  {
    sub_1001BD160((uint64_t)v4, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1001B2BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, unsigned char *a6@<X8>)
{
  uint64_t v82 = (void *)a5;
  uint64_t v80 = a3;
  uint64_t v86 = a2;
  uint64_t v76 = a1;
  uint64_t v81 = a6;
  uint64_t v8 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v83 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  int v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v74 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v74 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v74 - v18;
  uint64_t v84 = sub_10000566C(&qword_100709E60);
  BOOL v79 = *(void **)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v78 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000566C(&qword_10070F2A8);
  __chkstk_darwin(v21 - 8);
  int v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000566C(&qword_100709E38);
  __chkstk_darwin(v24 - 8);
  uint64_t v77 = (uint64_t)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v26 = *(_OWORD *)(a4 + 88);
  long long v27 = *(_OWORD *)(a4 + 120);
  v87[4] = *(_OWORD *)(a4 + 104);
  v87[5] = v27;
  uint64_t v88 = *(void *)(a4 + 136);
  long long v28 = *(_OWORD *)(a4 + 56);
  v87[0] = *(_OWORD *)(a4 + 40);
  v87[1] = v28;
  uint64_t v87[2] = *(_OWORD *)(a4 + 72);
  v87[3] = v26;
  uint64_t v29 = type metadata accessor for UploadFlagChanges(0);
  uint64_t v85 = v6;
  swift_bridgeObjectRetain();
  sub_1001B3548((uint64_t)v87, (uint64_t)v82, (uint64_t)v23);
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_10000566C(&qword_10070F2B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v23, 1, v30) != 1)
  {
    unint64_t v35 = &v23[*(int *)(v30 + 48)];
    char v36 = *v35;
    char v37 = v35[1];
    uint64_t v38 = *((void *)v35 + 1);
    uint64_t v39 = v77;
    sub_10001FDF0((uint64_t)v23, v77, &qword_100709E38);
    ((void (*)(char *, uint64_t, uint64_t))v79[2])(v78, v39, v84);
    sub_1005E3670();
    uint64_t v40 = sub_10000566C(&qword_10070F2B8);
    unint64_t v41 = v81;
    uint64_t v42 = (uint64_t)&v81[*(int *)(v40 + 48)];
    *uint64_t v81 = 0;
    uint64_t v43 = v42 + *(int *)(sub_10000566C(&qword_100709E70) + 48);
    sub_10001FDF0(v39, v42, &qword_100709E38);
    *(unsigned char *)uint64_t v43 = v36;
    *(unsigned char *)(v43 + 1) = v37;
    *(void *)(v43 + 8) = v38;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v41, 0, 1, v40);
  }
  sub_100007A48((uint64_t)v23, &qword_10070F2A8);
  uint64_t v77 = v29;
  if (sub_1005E3630()) {
    goto LABEL_15;
  }
  uint64_t v31 = sub_1001A9D34(2, v80);
  uint64_t v32 = (char *)v31[2];
  if (!v32)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v72 = sub_10000566C(&qword_10070F2B8);
    uint64_t v73 = v81;
    *uint64_t v81 = 2;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v73, 0, 1, v72);
  }
  uint64_t v33 = 0;
  uint64_t v74 = v31;
  BOOL v79 = v31 + 4;
  uint64_t v34 = *(void **)(v86 + 16);
  uint64_t v78 = v32;
  unint64_t v75 = v34;
  while (!v34)
  {
LABEL_7:
    if ((char *)++v33 == v32) {
      goto LABEL_36;
    }
  }
  uint64_t v82 = (void *)v33;
  int v45 = *((_DWORD *)v79 + v33);
  uint64_t v46 = v83;
  uint64_t v47 = v86 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
  swift_bridgeObjectRetain();
  uint64_t v48 = *(void *)(v46 + 72);
  uint64_t v49 = v34;
  while (1)
  {
    sub_1001C0048(v47, (uint64_t)v19, type metadata accessor for TaskHistory.Previous);
    sub_1001C0048((uint64_t)v19, (uint64_t)v17, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_1001BD160((uint64_t)v17, type metadata accessor for TaskHistory.Previous);
LABEL_11:
    sub_1001BD160((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
    v47 += v48;
    uint64_t v49 = (void *)((char *)v49 - 1);
    if (!v49)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v78;
      uint64_t v33 = (uint64_t)v82;
      uint64_t v34 = v75;
      goto LABEL_7;
    }
  }
  int v50 = *(_DWORD *)&v17[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
  sub_1001BD160((uint64_t)v17, type metadata accessor for ClientCommand);
  if (v50 != v45) {
    goto LABEL_11;
  }
  sub_1001BD160((uint64_t)v19, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v51 = sub_1001A9D34(1, v80);
  uint64_t v52 = (void *)v51[2];
  if (v52)
  {
    unint64_t v53 = 0;
    unint64_t v75 = v51;
    uint64_t v82 = v51 + 4;
    uint64_t v54 = *(char **)(v86 + 16);
    BOOL v79 = v52;
    uint64_t v78 = v54;
    do
    {
      if (v54)
      {
        uint64_t v55 = v83;
        int v56 = *((_DWORD *)v82 + (void)v53);
        uint64_t v57 = v86 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
        swift_bridgeObjectRetain();
        uint64_t v58 = *(void *)(v55 + 72);
        while (1)
        {
          sub_1001C0048(v57, (uint64_t)v14, type metadata accessor for TaskHistory.Previous);
          sub_1001C0048((uint64_t)v14, (uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1001BD160((uint64_t)v11, type metadata accessor for TaskHistory.Previous);
          }
          else
          {
            int v59 = *(_DWORD *)&v11[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
            sub_1001BD160((uint64_t)v11, type metadata accessor for ClientCommand);
            if (v59 == v56)
            {
              sub_1001BD160((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int v60 = v81;
              goto LABEL_27;
            }
          }
          sub_1001BD160((uint64_t)v14, type metadata accessor for TaskHistory.Previous);
          v57 += v58;
          if (!--v54)
          {
            swift_bridgeObjectRelease();
            uint64_t v52 = v79;
            uint64_t v54 = v78;
            break;
          }
        }
      }
      unint64_t v53 = (void *)((char *)v53 + 1);
    }
    while (v53 != v52);
  }
  swift_bridgeObjectRelease();
  int v60 = v81;
  uint64_t v61 = v76;
  uint64_t v62 = v85;
  uint64_t v63 = v77;
  uint64_t v64 = v85 + *(int *)(v77 + 40);
  if (sub_1005E3630())
  {
LABEL_27:
    uint64_t v65 = sub_10000566C(&qword_10070F2B8);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v60, 1, 1, v65);
  }
  else
  {
    if (*(unsigned char *)(v62 + *(int *)(v63 + 36)))
    {
      os_log_type_t v66 = &off_1006BAD80;
    }
    else
    {
      uint64_t v67 = sub_1001A9D34(0, v80);
      uint64_t v68 = v67[2];
      if (v68)
      {
        uint64_t v69 = 0;
        while ((sub_100149D30(*((_DWORD *)v67 + v69 + 8), v61, v86) & 1) == 0)
        {
          if (v68 == ++v69) {
            goto LABEL_34;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
LABEL_34:
      swift_bridgeObjectRelease();
      os_log_type_t v66 = &off_1006BACE8;
    }
    uint64_t v70 = sub_10000566C(&qword_10070F2B8);
    uint64_t v71 = (uint64_t)&v60[*(int *)(v70 + 48)];
    *int v60 = 1;
    static ClientCommand.uidFetch(messages:items:)(v64, (uint64_t)v66, v71);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v60, 0, 1, v70);
  }
}

uint64_t sub_1001B3548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v71 = a2;
  uint64_t v73 = a3;
  uint64_t v6 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v68 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (objc_class **)((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v69 = (uint64_t)&v61 - v19;
  os_log_t v72 = v4;
  sub_1001C0048((uint64_t)v4, (uint64_t)v14, type metadata accessor for UploadFlagChanges.FlagsToUpload);
  uint64_t v70 = v12;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v40 = sub_10000566C(&qword_10070F2B0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v73, 1, 1, v40);
    }
    os_log_t v21 = v72;
    sub_1001BD160((uint64_t)v72, type metadata accessor for UploadFlagChanges.FlagsToUpload);
    uint64_t v22 = *(objc_class **)((char *)v14 + *(int *)(sub_10000566C(&qword_10070EF48) + 48));
    uint64_t v23 = v69;
    sub_1001C0268((uint64_t)v14, v69, type metadata accessor for UploadFlagChanges.EncodedFlags);
    uint64_t v24 = v71;
    uint64_t v25 = v73;
  }
  else
  {
    uint64_t v64 = v18;
    uint64_t v65 = v11;
    uint64_t v66 = v9;
    uint64_t v67 = v15;
    sub_1001BD160((uint64_t)v72, type metadata accessor for UploadFlagChanges.FlagsToUpload);
    uint64_t v22 = *v14;
    swift_bridgeObjectRetain();
    sub_1001C0128(a1);
    v74[0] = sub_1000C0898((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v26 = *((void *)v22 + 2);
    if (v26)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = 0;
      uint64_t v28 = (uint64_t)v8;
      uint64_t v23 = v69;
      do
      {
        uint64_t v29 = *(void *)((char *)v22 + v27 + 56);
        char v30 = *((unsigned char *)v22 + v27 + 53);
        uint64_t v31 = *(void *)((char *)v22 + v27 + 45);
        char v32 = *((unsigned char *)v22 + v27 + 44);
        __int16 v33 = *(_WORD *)((char *)v22 + v27 + 42);
        char v34 = *((unsigned char *)v22 + v27 + 41);
        char v35 = *((unsigned char *)v22 + v27 + 40);
        char v36 = *((unsigned char *)v22 + v27 + 39);
        char v37 = *((unsigned char *)v22 + v27 + 38);
        char v38 = *((unsigned char *)v22 + v27 + 37);
        char v39 = *((unsigned char *)v22 + v27 + 36);
        LODWORD(v76) = *(_DWORD *)((char *)v22 + v27 + 32);
        BYTE4(v76) = v39;
        BYTE5(v76) = v38;
        BYTE6(v76) = v37;
        HIBYTE(v76) = v36;
        LOBYTE(v77) = v35;
        BYTE1(v77) = v34;
        HIWORD(v77) = v33;
        char v78 = v32;
        uint64_t v79 = v31;
        char v80 = v30;
        uint64_t v81 = v29;
        swift_bridgeObjectRetain();
        sub_1001B9E68((int *)&v76, a1, v74);
        swift_bridgeObjectRelease();
        v27 += 32;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
      sub_1001C01C8(a1);
      uint64_t v24 = v71;
      os_log_t v21 = v72;
    }
    else
    {
      sub_1001C01C8(a1);
      uint64_t v28 = (uint64_t)v8;
      uint64_t v24 = v71;
      os_log_t v21 = v72;
      uint64_t v23 = v69;
    }
    uint64_t v42 = swift_bridgeObjectRetain();
    uint64_t v43 = (void *)sub_1001B2144(v42);
    swift_bridgeObjectRelease();
    uint64_t v44 = (uint64_t)v64;
    sub_1001B2684(v43, (uint64_t)v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001C0268(v44, v23, type metadata accessor for UploadFlagChanges.EncodedFlags);
    if (*(void *)(*(void *)(v23 + *(int *)(v67 + 20)) + 16) || sub_1001B93A4())
    {
      uint64_t v64 = (char *)v6;
      uint64_t v45 = v68;
      uint64_t v46 = v65;
      uint64_t v47 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v65, v24, v66);
      sub_1001C0048(v24, v28, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v48 = v28;
      uint64_t v49 = sub_1005E0EB0();
      os_log_type_t v50 = sub_1005E25C0();
      os_log_t v72 = v49;
      LODWORD(v69) = v50;
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        uint64_t v75 = v63;
        *(_DWORD *)uint64_t v51 = 68159747;
        LODWORD(v76) = 2;
        sub_1005E2960();
        *(_WORD *)(v51 + 8) = 256;
        uint64_t v52 = *((int *)v64 + 5);
        uint64_t v62 = v48;
        uint64_t v53 = v48 + v52;
        LOBYTE(v76) = *(unsigned char *)(v48 + v52);
        sub_1005E2960();
        *(_WORD *)(v51 + 11) = 2082;
        uint64_t v54 = *(void *)(v53 + 8);
        unint64_t v55 = *(void *)(v53 + 16);
        swift_bridgeObjectRetain();
        uint64_t v76 = sub_1000C6914(v54, v55, &v75);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 21) = 1040;
        LODWORD(v76) = 2;
        sub_1005E2960();
        *(_WORD *)(v51 + 27) = 512;
        LOWORD(v76) = *(_WORD *)(v53 + 24);
        sub_1005E2960();
        *(_WORD *)(v51 + 31) = 2160;
        uint64_t v76 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v51 + 41) = 2085;
        int v56 = *(_DWORD *)(v53 + 40);
        uint64_t v76 = *(void *)(v53 + 32);
        int v77 = v56;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1005E1CC0();
        uint64_t v76 = sub_1000C6914(v57, v58, &v75);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001BD160(v62, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v51 + 51) = 2048;
        swift_beginAccess();
        uint64_t v76 = *(void *)(*(void *)(v23 + *(int *)(v67 + 20)) + 16);
        sub_1005E2960();
        *(_WORD *)(v51 + 61) = 2048;
        uint64_t v76 = sub_1001B93A4();
        uint64_t v24 = v71;
        sub_1005E2960();
        os_log_t v59 = v72;
        _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v69, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Grouped the local flag changes into %ld message sets. Expecting %ld commands.", (uint8_t *)v51, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v66);
      }
      else
      {
        sub_1001BD160(v48, type metadata accessor for MailboxTaskLogger);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
      }
    }
    uint64_t v25 = v73;
  }
  swift_beginAccess();
  sub_1001B9528(v24, v25);
  swift_endAccess();
  uint64_t v60 = *(int *)(sub_10000566C(&qword_10070EF48) + 48);
  sub_1001C0048(v23, (uint64_t)v21, type metadata accessor for UploadFlagChanges.EncodedFlags);
  *(Class *)((char *)&v21->isa + v60) = v22;
  swift_storeEnumTagMultiPayload();
  return sub_1001BD160(v23, type metadata accessor for UploadFlagChanges.EncodedFlags);
}

uint64_t sub_1001B3DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v436 = a6;
  uint64_t v452 = a3;
  uint64_t v453 = a1;
  uint64_t v419 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
  __chkstk_darwin(v419);
  uint64_t v420 = (uint64_t)&v405 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v424 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v10 = __chkstk_darwin(v424);
  uint64_t v12 = (char *)&v405 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v412 = (uint64_t)&v405 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v418 = (char *)&v405 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v414 = (uint64_t)&v405 - v18;
  __chkstk_darwin(v17);
  uint64_t v427 = (uint64_t)&v405 - v19;
  uint64_t v439 = sub_1005E0ED0();
  uint64_t v438 = *(void *)(v439 - 8);
  uint64_t v20 = __chkstk_darwin(v439);
  uint64_t v22 = (char *)&v405 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  v413 = (char *)&v405 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v422 = (char *)&v405 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v415 = (char *)&v405 - v28;
  __chkstk_darwin(v27);
  v416 = (char *)&v405 - v29;
  uint64_t v30 = sub_10000566C(&qword_10070A9C0);
  __chkstk_darwin(v30 - 8);
  uint64_t v433 = (uint64_t)&v405 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10000566C(&qword_10070A000);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v432 = (uint64_t)&v405 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v435 = (char *)&v405 - v35;
  uint64_t v441 = sub_10000566C(&qword_100709E30);
  uint64_t v440 = *(void *)(v441 - 8);
  uint64_t v36 = __chkstk_darwin(v441);
  v417 = (char *)&v405 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  v421 = (char *)&v405 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v411 = (uint64_t)&v405 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v423 = (uint64_t)&v405 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v429 = (uint64_t)&v405 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v409 = (uint64_t)&v405 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v426 = (char *)&v405 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v425 = (char *)&v405 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v428 = (uint64_t)&v405 - v53;
  __chkstk_darwin(v52);
  uint64_t v430 = (uint64_t)&v405 - v54;
  uint64_t v472 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v448 = *(void *)(v472 - 8);
  uint64_t v55 = __chkstk_darwin(v472);
  uint64_t v466 = (uint64_t)&v405 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v457 = (uint64_t)&v405 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v458 = (uint64_t)&v405 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  uint64_t v463 = (uint64_t)&v405 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  v471 = (char *)&v405 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v459 = (uint64_t)&v405 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v461 = (uint64_t)&v405 - v68;
  __chkstk_darwin(v67);
  v455 = (char **)((char *)&v405 - v69);
  uint64_t v447 = sub_10000566C(&qword_100709E38);
  uint64_t v70 = __chkstk_darwin(v447);
  uint64_t v431 = (uint64_t)&v405 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v434 = (uint64_t)&v405 - v73;
  __chkstk_darwin(v72);
  uint64_t v449 = (uint64_t)&v405 - v74;
  uint64_t v478 = type metadata accessor for TaskHistory.Previous(0);
  v450 = *(void **)(v478 - 8);
  uint64_t v75 = __chkstk_darwin(v478);
  uint64_t v454 = (uint64_t)&v405 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v462 = (uint64_t)&v405 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  uint64_t v475 = (uint64_t)&v405 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  unint64_t v474 = (unint64_t)&v405 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  uint64_t v465 = (uint64_t)&v405 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  unint64_t v470 = (unint64_t)&v405 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  uint64_t v467 = (uint64_t)&v405 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  v473 = (char **)((char *)&v405 - v90);
  uint64_t v91 = __chkstk_darwin(v89);
  uint64_t v460 = (uint64_t)&v405 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  uint64_t v468 = (uint64_t)&v405 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  uint64_t v97 = (char *)&v405 - v96;
  uint64_t v98 = __chkstk_darwin(v95);
  v442 = (char *)&v405 - v99;
  uint64_t v100 = __chkstk_darwin(v98);
  v464 = (char **)((char *)&v405 - v101);
  uint64_t v102 = __chkstk_darwin(v100);
  uint64_t v469 = (uint64_t)&v405 - v103;
  uint64_t v104 = __chkstk_darwin(v102);
  uint64_t v106 = (char *)&v405 - v105;
  uint64_t v107 = __chkstk_darwin(v104);
  uint64_t v109 = (char *)&v405 - v108;
  uint64_t v110 = __chkstk_darwin(v107);
  uint64_t v112 = (char *)&v405 - v111;
  __chkstk_darwin(v110);
  int v114 = (char *)&v405 - v113;
  v446 = (int *)type metadata accessor for UploadFlagChanges(0);
  uint64_t v115 = v446[13];
  if (!*((unsigned char *)v6 + v115))
  {
    *((unsigned char *)v6 + v115) = 1;
    uint64_t v139 = (void *)swift_allocObject();
    uint64_t v140 = v6[1];
    v139[2] = *v6;
    v139[3] = v140;
    v139[4] = 1;
    swift_bridgeObjectRetain();
    return 0;
  }
  uint64_t v116 = sub_100105454(1, a4);
  uint64_t v117 = v116[2];
  if (!v117)
  {
    swift_bridgeObjectRelease();
LABEL_31:
    uint64_t v142 = (void *)swift_allocObject();
    uint64_t v143 = v6[1];
    v142[2] = *v6;
    v142[3] = v143;
    v142[4] = 733;
    swift_bridgeObjectRetain();
    return 1;
  }
  v443 = v6;
  uint64_t v118 = 0;
  v410 = v116;
  v444 = v116 + 4;
  unint64_t v476 = *(void *)(a2 + 16);
  v406 = v22;
  v405 = v12;
  uint64_t v456 = a2;
  uint64_t v445 = a4;
  uint64_t v437 = v117;
  while (!v476)
  {
LABEL_5:
    if (++v118 == v117)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v443;
      goto LABEL_31;
    }
  }
  uint64_t v119 = a2;
  int v120 = *((_DWORD *)v444 + v118);
  long long v121 = v450;
  unint64_t v451 = (*((unsigned __int8 *)v121 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v121 + 80);
  uint64_t v122 = v119 + v451;
  swift_bridgeObjectRetain_n();
  uint64_t v477 = v121[9];
  unint64_t v123 = v476;
  while (1)
  {
    sub_1001C0048(v122, (uint64_t)v114, type metadata accessor for TaskHistory.Previous);
    sub_1001C0048((uint64_t)v114, (uint64_t)v112, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_1001BD160((uint64_t)v112, type metadata accessor for TaskHistory.Previous);
LABEL_9:
    sub_1001BD160((uint64_t)v114, type metadata accessor for TaskHistory.Previous);
    v122 += v477;
    if (!--v123)
    {
      a2 = v456;
      swift_bridgeObjectRelease_n();
      uint64_t v117 = v437;
      goto LABEL_5;
    }
  }
  int v124 = *((_DWORD *)v112 + 2);
  sub_10007C4A4(*(void *)v112);
  if (v124 != v120) {
    goto LABEL_9;
  }
  sub_1001BD160((uint64_t)v114, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v125 = v456;
  swift_bridgeObjectRelease_n();
  uint64_t v408 = (uint64_t)v443 + v446[10];
  MessageIdentifierSet.subtracting(_:)(v408, v447);
  long long v126 = sub_1001A9D34(1, v452);
  v410 = (void *)v126[2];
  if (!v410) {
    goto LABEL_43;
  }
  long long v127 = 0;
  v407 = v126;
  v444 = v126 + 4;
  uint64_t v437 = v125 + v451;
  while (2)
  {
    int v128 = *((_DWORD *)v444 + (void)v127);
    v450 = (void *)((char *)v127 + 1);
    swift_bridgeObjectRetain();
    uint64_t v129 = v437;
    unint64_t v130 = v476;
    while (2)
    {
      sub_1001C0048(v129, (uint64_t)v109, type metadata accessor for TaskHistory.Previous);
      sub_1001C0048((uint64_t)v109, (uint64_t)v106, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001BD160((uint64_t)v106, type metadata accessor for TaskHistory.Previous);
        goto LABEL_16;
      }
      unint64_t v123 = *(unsigned int *)&v106[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
      sub_1001BD160((uint64_t)v106, type metadata accessor for ClientCommand);
      if (v123 != v128)
      {
LABEL_16:
        sub_1001BD160((uint64_t)v109, type metadata accessor for TaskHistory.Previous);
        v129 += v477;
        if (!--v130) {
          goto LABEL_27;
        }
        continue;
      }
      break;
    }
    sub_1001BD160((uint64_t)v109, type metadata accessor for TaskHistory.Previous);
    swift_bridgeObjectRelease();
    uint64_t v131 = *(void *)(v453 + 16);
    if (!v131)
    {
      uint64_t v144 = v453;
      goto LABEL_33;
    }
    uint64_t v132 = v448;
    uint64_t v133 = v453 + ((*(unsigned __int8 *)(v448 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v448 + 80));
    swift_bridgeObjectRetain();
    uint64_t v134 = *(void *)(v132 + 72);
    unint64_t v123 = (unint64_t)v455;
    while (2)
    {
      sub_1001C0048(v133, v123, type metadata accessor for TaskHistory.Running);
      uint64_t v135 = v461;
      sub_1001C0048(v123, v461, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001BD160(v135, type metadata accessor for TaskHistory.Running);
        goto LABEL_22;
      }
      int v136 = *(_DWORD *)(v135 + 8);
      uint64_t v137 = sub_10000566C(&qword_10070B6A0);
      sub_1001BD160(v135 + *(int *)(v137 + 64), type metadata accessor for ClientCommand);
      BOOL v138 = v136 == v128;
      unint64_t v123 = (unint64_t)v455;
      if (!v138)
      {
LABEL_22:
        sub_1001BD160(v123, type metadata accessor for TaskHistory.Running);
        v133 += v134;
        if (!--v131)
        {
          swift_bridgeObjectRelease();
          uint64_t v144 = v453;
          uint64_t v125 = v456;
LABEL_33:
          swift_bridgeObjectRelease();
          uint64_t v145 = v445;
          uint64_t v146 = sub_100105454(3, v445);
          uint64_t v461 = v146[2];
          if (v461)
          {
            uint64_t v147 = 0;
            v450 = 0;
            uint64_t v148 = (uint64_t)(v146 + 4);
            uint64_t v149 = v125 + v451;
            v455 = v146 + 4;
            uint64_t v150 = v469;
            do
            {
              int v151 = *(_DWORD *)(v148 + 4 * v147++);
              swift_bridgeObjectRetain_n();
              uint64_t v152 = 0;
              uint64_t v153 = v149;
              do
              {
                unint64_t v123 = v152 + 1;
                if (__OFADD__(v152, 1))
                {
                  __break(1u);
LABEL_227:
                  __break(1u);
                  goto LABEL_228;
                }
                sub_1001C0048(v149, v150, type metadata accessor for TaskHistory.Previous);
                uint64_t v154 = (uint64_t)v464;
                sub_1001C0048(v150, (uint64_t)v464, type metadata accessor for TaskHistory.Previous);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  unint64_t v155 = *(void *)v154;
                  int v156 = *(_DWORD *)(v154 + 8);
                  sub_10007C4A4(v155);
                  if (v156 == v151)
                  {
                    sub_1001BD160(v469, type metadata accessor for TaskHistory.Previous);
                    swift_bridgeObjectRelease();
                    uint64_t v125 = v456;
                    swift_bridgeObjectRelease_n();
                    goto LABEL_44;
                  }
                }
                else
                {
                  sub_1001BD160(v154, type metadata accessor for TaskHistory.Previous);
                }
                sub_1001BD160(v469, type metadata accessor for TaskHistory.Previous);
                ++v152;
                v149 += v477;
              }
              while (v123 != v476);
              uint64_t v125 = v456;
              swift_bridgeObjectRelease_n();
              uint64_t v148 = (uint64_t)v455;
              uint64_t v149 = v153;
            }
            while (v147 != v461);
            swift_bridgeObjectRelease();
            uint64_t v145 = v445;
            uint64_t v144 = v453;
          }
          else
          {
            swift_bridgeObjectRelease();
            v450 = 0;
          }
          uint64_t v187 = v434;
          sub_1000079E4(v449, v434, &qword_100709E38);
          MessageIdentifierSet.count.getter();
          uint64_t v188 = (uint64_t)v435;
          if (v189 < 1)
          {
            sub_100007A48(v187, &qword_100709E38);
            uint64_t v191 = 1;
          }
          else
          {
            uint64_t v190 = v428;
            sub_10001FDF0(v187, v428, &qword_100709E38);
            sub_10001FDF0(v190, v188, &qword_100709E30);
            uint64_t v191 = 0;
          }
          uint64_t v198 = v440;
          uint64_t v199 = v441;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v440 + 56))(v188, v191, 1, v441);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v188, 1, v199) == 1)
          {
            sub_100007A48(v188, &qword_10070A000);
            goto LABEL_45;
          }
          uint64_t v200 = v430;
          sub_10001FDF0(v188, v430, &qword_100709E30);
          uint64_t v201 = v433;
          MessageIdentifierSet.ranges.getter(v433);
          sub_10000566C(&qword_10070A8F8);
          uint64_t v202 = sub_1005E35B0();
          uint64_t v203 = sub_1005E35E0();
          uint64_t v204 = sub_1005E35B0();
          uint64_t v205 = sub_1005E35E0();
          if (v202 < v204 || v205 < v202) {
            goto LABEL_230;
          }
          uint64_t v206 = sub_1005E35B0();
          uint64_t v207 = sub_1005E35E0();
          uint64_t v208 = v427;
          uint64_t v209 = (uint64_t)v426;
          uint64_t v210 = (uint64_t)v425;
          if (v203 < v206 || v207 < v203)
          {
LABEL_231:
            __break(1u);
          }
          else
          {
            BOOL v211 = __OFSUB__(v203, v202);
            uint64_t v212 = v203 - v202;
            uint64_t v213 = v439;
            if (!v211)
            {
              sub_100007A48(v201, &qword_10070A9C0);
              uint64_t v214 = v438;
              uint64_t v215 = *(void (**)(char *, uint64_t, uint64_t))(v438 + 16);
              if (v212 > 19)
              {
                uint64_t v216 = v415;
                uint64_t v351 = v436;
                v215(v415, v436, v213);
                uint64_t v208 = v414;
                sub_1001C0048(v351, v414, type metadata accessor for MailboxTaskLogger);
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                uint64_t v352 = v409;
                sub_1000079E4(v200, v409, &qword_100709E30);
                v353 = sub_1005E0EB0();
                os_log_type_t v354 = sub_1005E25C0();
                if (os_log_type_enabled(v353, v354))
                {
                  uint64_t v355 = swift_slowAlloc();
                  uint64_t v478 = swift_slowAlloc();
                  uint64_t v479 = v478;
                  *(_DWORD *)uint64_t v355 = 68159491;
                  LODWORD(v481) = 2;
                  sub_1005E2960();
                  *(_WORD *)(v355 + 8) = 256;
                  uint64_t v356 = v352;
                  uint64_t v357 = v208 + *(int *)(v424 + 20);
                  LOBYTE(v481) = *(unsigned char *)v357;
                  sub_1005E2960();
                  *(_WORD *)(v355 + 11) = 2082;
                  uint64_t v358 = *(void *)(v357 + 8);
                  unint64_t v359 = *(void *)(v357 + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v481 = sub_1000C6914(v358, v359, &v479);
                  sub_1005E2960();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v355 + 21) = 1040;
                  LODWORD(v481) = 2;
                  sub_1005E2960();
                  *(_WORD *)(v355 + 27) = 512;
                  LOWORD(v481) = *(_WORD *)(v357 + 24);
                  sub_1005E2960();
                  *(_WORD *)(v355 + 31) = 2160;
                  uint64_t v481 = 0x786F626C69616DLL;
                  sub_1005E2960();
                  *(_WORD *)(v355 + 41) = 2085;
                  int v360 = *(_DWORD *)(v357 + 40);
                  uint64_t v481 = *(void *)(v357 + 32);
                  int v482 = v360;
                  swift_bridgeObjectRetain();
                  uint64_t v361 = sub_1005E1CC0();
                  uint64_t v481 = sub_1000C6914(v361, v362, &v479);
                  sub_1005E2960();
                  swift_bridgeObjectRelease();
                  sub_1001BD160(v414, type metadata accessor for MailboxTaskLogger);
                  *(_WORD *)(v355 + 51) = 2048;
                  MessageIdentifierSet.count.getter();
                  uint64_t v364 = v363;
                  sub_100007A48(v356, &qword_100709E30);
                  uint64_t v481 = v364;
                  uint64_t v200 = v430;
                  sub_1005E2960();
                  _os_log_impl((void *)&_mh_execute_header, v353, v354, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Failed to delete %ld messages after uploading flag changes", (uint8_t *)v355, 0x3Du);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  (*(void (**)(char *, uint64_t))(v438 + 8))(v415, v439);
                  goto LABEL_203;
                }
                sub_100007A48(v352, &qword_100709E30);
              }
              else
              {
                uint64_t v216 = v416;
                uint64_t v217 = v436;
                v215(v416, v436, v213);
                sub_1001C0048(v217, v208, type metadata accessor for MailboxTaskLogger);
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                sub_1000079E4(v200, v210, &qword_100709E30);
                sub_1000079E4(v200, v209, &qword_100709E30);
                uint64_t v218 = sub_1005E0EB0();
                os_log_type_t v219 = sub_1005E25C0();
                if (os_log_type_enabled(v218, v219))
                {
                  uint64_t v220 = swift_slowAlloc();
                  uint64_t v478 = swift_slowAlloc();
                  uint64_t v479 = v478;
                  *(_DWORD *)uint64_t v220 = 68159747;
                  LODWORD(v481) = 2;
                  sub_1005E2960();
                  *(_WORD *)(v220 + 8) = 256;
                  uint64_t v221 = v208 + *(int *)(v424 + 20);
                  LOBYTE(v481) = *(unsigned char *)v221;
                  sub_1005E2960();
                  *(_WORD *)(v220 + 11) = 2082;
                  uint64_t v222 = *(void *)(v221 + 8);
                  unint64_t v223 = *(void *)(v221 + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v481 = sub_1000C6914(v222, v223, &v479);
                  sub_1005E2960();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v220 + 21) = 1040;
                  LODWORD(v481) = 2;
                  sub_1005E2960();
                  *(_WORD *)(v220 + 27) = 512;
                  LOWORD(v481) = *(_WORD *)(v221 + 24);
                  sub_1005E2960();
                  *(_WORD *)(v220 + 31) = 2160;
                  uint64_t v481 = 0x786F626C69616DLL;
                  sub_1005E2960();
                  *(_WORD *)(v220 + 41) = 2085;
                  int v224 = *(_DWORD *)(v221 + 40);
                  uint64_t v481 = *(void *)(v221 + 32);
                  int v482 = v224;
                  swift_bridgeObjectRetain();
                  uint64_t v225 = sub_1005E1CC0();
                  uint64_t v481 = sub_1000C6914(v225, v226, &v479);
                  sub_1005E2960();
                  swift_bridgeObjectRelease();
                  sub_1001BD160(v427, type metadata accessor for MailboxTaskLogger);
                  *(_WORD *)(v220 + 51) = 2048;
                  uint64_t v227 = v447;
                  uint64_t v228 = (uint64_t)v425;
                  MessageIdentifierSet.count.getter();
                  uint64_t v230 = v229;
                  sub_100007A48(v228, &qword_100709E30);
                  uint64_t v481 = v230;
                  sub_1005E2960();
                  *(_WORD *)(v220 + 61) = 2082;
                  uint64_t v231 = v227;
                  uint64_t v232 = (uint64_t)v426;
                  uint64_t v233 = MessageIdentifierSet.debugDescription.getter(v231);
                  uint64_t v481 = sub_1000C6914(v233, v234, &v479);
                  uint64_t v200 = v430;
                  sub_1005E2960();
                  swift_bridgeObjectRelease();
                  sub_100007A48(v232, &qword_100709E30);
                  _os_log_impl((void *)&_mh_execute_header, v218, v219, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Failed to delete %ld messages with UIDs %{public}s after uploading flag changes", (uint8_t *)v220, 0x47u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  (*(void (**)(char *, uint64_t))(v438 + 8))(v416, v439);
LABEL_203:
                  sub_100007A48(v449, &qword_100709E38);
                  v378 = v443;
                  uint64_t v379 = sub_10000566C(&qword_10070CC48);
                  swift_allocBox();
                  uint64_t v381 = (uint64_t)v380 + *(int *)(v379 + 48);
                  uint64_t v382 = v378[1];
                  void *v380 = *v378;
                  v380[1] = v382;
                  sub_10001FDF0(v200, v381, &qword_100709E30);
                  swift_bridgeObjectRetain();
                  return 3;
                }
                sub_100007A48(v210, &qword_100709E30);

                sub_100007A48(v209, &qword_100709E30);
              }
              sub_1001BD160(v208, type metadata accessor for MailboxTaskLogger);
              (*(void (**)(char *, uint64_t))(v214 + 8))(v216, v213);
              goto LABEL_203;
            }
          }
          __break(1u);
          goto LABEL_233;
        }
        continue;
      }
      break;
    }
    sub_1001BD160((uint64_t)v455, type metadata accessor for TaskHistory.Running);
    uint64_t v125 = v456;
LABEL_27:
    swift_bridgeObjectRelease();
    long long v127 = v450;
    if (v450 != v410) {
      continue;
    }
    break;
  }
LABEL_43:
  swift_bridgeObjectRelease();
  v450 = 0;
LABEL_44:
  uint64_t v145 = v445;
  uint64_t v144 = v453;
LABEL_45:
  uint64_t v157 = sub_1001A9D34(1, v452);
  v455 = (void *)v157[2];
  if (!v455)
  {
    swift_bridgeObjectRelease();
    goto LABEL_98;
  }
  uint64_t v158 = 0;
  v444 = v157;
  v464 = v157 + 4;
  uint64_t v461 = v125 + v451;
  uint64_t v159 = (uint64_t)v442;
  while (2)
  {
    int v160 = *((_DWORD *)v464 + v158);
    uint64_t v469 = v158 + 1;
    uint64_t v161 = swift_bridgeObjectRetain();
    uint64_t v162 = 0;
    uint64_t v163 = v461;
LABEL_50:
    uint64_t v164 = v162 + 1;
    if (__OFADD__(v162, 1))
    {
      __break(1u);
      goto LABEL_211;
    }
    sub_1001C0048(v163, v159, type metadata accessor for TaskHistory.Previous);
    sub_1001C0048(v159, (uint64_t)v97, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1001BD160((uint64_t)v97, type metadata accessor for TaskHistory.Previous);
      goto LABEL_49;
    }
    int v165 = *(_DWORD *)&v97[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
    sub_1001BD160((uint64_t)v97, type metadata accessor for ClientCommand);
    BOOL v138 = v165 == v160;
    unint64_t v123 = (unint64_t)v471;
    if (!v138)
    {
LABEL_49:
      uint64_t v161 = sub_1001BD160(v159, type metadata accessor for TaskHistory.Previous);
      ++v162;
      v163 += v477;
      if (v164 == v476)
      {
LABEL_62:
        swift_bridgeObjectRelease();
        uint64_t v158 = v469;
        if ((void *)v469 == v455)
        {
          swift_bridgeObjectRelease();
          goto LABEL_75;
        }
        continue;
      }
      goto LABEL_50;
    }
    break;
  }
  sub_1001BD160(v159, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease();
  uint64_t v161 = v453;
  uint64_t v166 = *(void *)(v453 + 16);
  if (!v166)
  {
LABEL_211:
    uint64_t v144 = v161;
    goto LABEL_65;
  }
  uint64_t v167 = v448;
  uint64_t v168 = v453 + ((*(unsigned __int8 *)(v448 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v448 + 80));
  swift_bridgeObjectRetain();
  uint64_t v169 = *(void *)(v167 + 72);
  uint64_t v170 = v459;
  do
  {
    sub_1001C0048(v168, v170, type metadata accessor for TaskHistory.Running);
    sub_1001C0048(v170, v123, type metadata accessor for TaskHistory.Running);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1001BD160(v123, type metadata accessor for TaskHistory.Running);
    }
    else
    {
      int v171 = *((_DWORD *)v471 + 2);
      uint64_t v172 = sub_10000566C(&qword_10070B6A0);
      sub_1001BD160((uint64_t)&v471[*(int *)(v172 + 64)], type metadata accessor for ClientCommand);
      BOOL v138 = v171 == v160;
      unint64_t v123 = (unint64_t)v471;
      if (v138)
      {
        sub_1001BD160(v459, type metadata accessor for TaskHistory.Running);
        uint64_t v159 = (uint64_t)v442;
        goto LABEL_62;
      }
    }
    uint64_t v170 = v459;
    sub_1001BD160(v459, type metadata accessor for TaskHistory.Running);
    v168 += v169;
    --v166;
  }
  while (v166);
  swift_bridgeObjectRelease();
  uint64_t v144 = v453;
LABEL_65:
  swift_bridgeObjectRelease();
  uint64_t v145 = v445;
  uint64_t v173 = sub_100105454(4, v445);
  v471 = (char *)v173[2];
  if (v471)
  {
    uint64_t v174 = 0;
    uint64_t v175 = v173 + 4;
    uint64_t v176 = v125 + v451;
    uint64_t v177 = v468;
    do
    {
      int64_t v179 = v175;
      int v180 = *((_DWORD *)v175 + (void)v174++);
      swift_bridgeObjectRetain_n();
      uint64_t v181 = 0;
      uint64_t v182 = v176;
      uint64_t v183 = v176;
      do
      {
        unint64_t v123 = v181 + 1;
        if (__OFADD__(v181, 1)) {
          goto LABEL_227;
        }
        sub_1001C0048(v183, v177, type metadata accessor for TaskHistory.Previous);
        uint64_t v184 = v460;
        sub_1001C0048(v177, v460, type metadata accessor for TaskHistory.Previous);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          unint64_t v185 = *(void *)v184;
          int v186 = *(_DWORD *)(v184 + 8);
          sub_10007C4A4(v185);
          if (v186 == v180)
          {
            sub_1001BD160(v468, type metadata accessor for TaskHistory.Previous);
            swift_bridgeObjectRelease();
            uint64_t v125 = v456;
            swift_bridgeObjectRelease_n();
LABEL_75:
            uint64_t v145 = v445;
            uint64_t v144 = v453;
LABEL_98:
            uint64_t v238 = sub_1001A9D34(0, v452);
            unint64_t v239 = v238;
            v471 = (char *)v238[2];
            if (!v471)
            {
              swift_bridgeObjectRelease();
              goto LABEL_126;
            }
            int64_t v240 = 0;
            uint64_t v241 = (uint64_t)(v238 + 4);
            uint64_t v242 = v125 + v451;
            uint64_t v469 = (uint64_t)(v238 + 4);
            while (1)
            {
              int v243 = *(_DWORD *)(v241 + 4 * (void)v240++);
              swift_bridgeObjectRetain();
              uint64_t v244 = 0;
              uint64_t v245 = v242;
              do
              {
                uint64_t v246 = v244 + 1;
                if (__OFADD__(v244, 1))
                {
                  __break(1u);
LABEL_224:
                  __break(1u);
LABEL_225:
                  swift_bridgeObjectRelease();
                  uint64_t v125 = v456;
                  uint64_t v145 = v445;
                  uint64_t v144 = (uint64_t)v239;
                  goto LABEL_126;
                }
                unint64_t v123 = (unint64_t)v473;
                sub_1001C0048(v242, (uint64_t)v473, type metadata accessor for TaskHistory.Previous);
                uint64_t v247 = v467;
                sub_1001C0048(v123, v467, type metadata accessor for TaskHistory.Previous);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  sub_1001BD160(v247, type metadata accessor for TaskHistory.Previous);
                }
                else
                {
                  uint64_t v248 = sub_10000566C(&qword_10070B308);
                  uint64_t v249 = v247;
                  uint64_t v250 = v248;
                  unint64_t v123 = *(unsigned int *)(v249 + *(int *)(v248 + 48));
                  sub_1001BD160(v249, type metadata accessor for ClientCommand);
                  if (v123 == v243)
                  {
                    sub_1001BD160((uint64_t)v473, type metadata accessor for TaskHistory.Previous);
                    swift_bridgeObjectRelease();
                    uint64_t v125 = v456;
                    swift_bridgeObjectRelease();
                    uint64_t v251 = sub_1001A9D34(0, v452);
                    uint64_t v252 = v251[2];
                    if (!v252)
                    {
                      swift_bridgeObjectRelease();
                      int v266 = 0;
LABEL_128:
                      uint64_t v145 = v445;
                      uint64_t v144 = v453;
                      goto LABEL_129;
                    }
                    uint64_t v253 = v125;
                    uint64_t v254 = 0;
                    uint64_t v469 = (uint64_t)v251;
                    v473 = v251 + 4;
                    v471 = (char *)(v253 + v451);
LABEL_109:
                    int v255 = *((_DWORD *)v473 + v254++);
                    swift_bridgeObjectRetain();
                    unint64_t v239 = 0;
                    uint64_t v256 = (uint64_t)v471;
                    while (1)
                    {
                      unint64_t v257 = (char *)v239 + 1;
                      if (__OFADD__(v239, 1)) {
                        goto LABEL_224;
                      }
                      unint64_t v123 = v470;
                      sub_1001C0048(v256, v470, type metadata accessor for TaskHistory.Previous);
                      uint64_t v258 = v465;
                      sub_1001C0048(v123, v465, type metadata accessor for TaskHistory.Previous);
                      if (swift_getEnumCaseMultiPayload() == 1)
                      {
                        sub_1001BD160(v258, type metadata accessor for TaskHistory.Previous);
                      }
                      else
                      {
                        unint64_t v123 = *(unsigned int *)(v258 + *(int *)(v250 + 48));
                        sub_1001BD160(v258, type metadata accessor for ClientCommand);
                        uint64_t v259 = v463;
                        if (v123 == v255)
                        {
                          sub_1001BD160(v470, type metadata accessor for TaskHistory.Previous);
                          swift_bridgeObjectRelease();
                          unint64_t v239 = (void *)v453;
                          uint64_t v260 = *(void *)(v453 + 16);
                          if (!v260) {
                            goto LABEL_225;
                          }
                          uint64_t v261 = v448;
                          uint64_t v262 = v453
                               + ((*(unsigned __int8 *)(v448 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v448 + 80));
                          swift_bridgeObjectRetain();
                          uint64_t v263 = *(void *)(v261 + 72);
                          while (2)
                          {
                            unint64_t v123 = v259;
                            sub_1001C0048(v262, v259, type metadata accessor for TaskHistory.Running);
                            uint64_t v264 = v458;
                            sub_1001C0048(v123, v458, type metadata accessor for TaskHistory.Running);
                            if (swift_getEnumCaseMultiPayload() == 1)
                            {
                              sub_1001BD160(v264, type metadata accessor for TaskHistory.Running);
LABEL_118:
                              uint64_t v259 = v463;
                              sub_1001BD160(v463, type metadata accessor for TaskHistory.Running);
                              v262 += v263;
                              if (--v260) {
                                continue;
                              }
                              swift_bridgeObjectRelease();
                              uint64_t v144 = v453;
                              swift_bridgeObjectRelease();
                              uint64_t v125 = v456;
                              uint64_t v145 = v445;
LABEL_126:
                              int v266 = sub_1001B7A70();
LABEL_129:
                              unsigned int v267 = sub_1001A9D34(1, v452);
                              unint64_t v470 = v267[2];
                              if (v470)
                              {
                                LODWORD(v469) = v266;
                                uint64_t v268 = 0;
                                v473 = v267 + 4;
                                v471 = (char *)(v125 + v451);
LABEL_131:
                                int v269 = *((_DWORD *)v473 + v268++);
                                swift_bridgeObjectRetain();
                                uint64_t v270 = 0;
                                uint64_t v271 = (uint64_t)v471;
                                while (1)
                                {
                                  uint64_t v272 = v270 + 1;
                                  if (__OFADD__(v270, 1))
                                  {
                                    __break(1u);
                                    goto LABEL_214;
                                  }
                                  unint64_t v123 = v474;
                                  sub_1001C0048(v271, v474, type metadata accessor for TaskHistory.Previous);
                                  uint64_t v273 = v475;
                                  sub_1001C0048(v123, v475, type metadata accessor for TaskHistory.Previous);
                                  if (swift_getEnumCaseMultiPayload() == 1)
                                  {
                                    sub_1001BD160(v273, type metadata accessor for TaskHistory.Previous);
                                  }
                                  else
                                  {
                                    unint64_t v123 = *(unsigned int *)(v273 + *(int *)(sub_10000566C(&qword_10070B308) + 48));
                                    sub_1001BD160(v273, type metadata accessor for ClientCommand);
                                    if (v123 == v269)
                                    {
                                      sub_1001BD160(v474, type metadata accessor for TaskHistory.Previous);
                                      uint64_t v125 = v456;
                                      swift_bridgeObjectRelease();
                                      uint64_t v274 = *(void *)(v453 + 16);
                                      if (v274)
                                      {
                                        uint64_t v275 = v448;
                                        uint64_t v276 = v453
                                             + ((*(unsigned __int8 *)(v448 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v448 + 80));
                                        swift_bridgeObjectRetain();
                                        uint64_t v277 = *(void *)(v275 + 72);
                                        uint64_t v278 = v457;
                                        do
                                        {
                                          sub_1001C0048(v276, v278, type metadata accessor for TaskHistory.Running);
                                          uint64_t v279 = v466;
                                          sub_1001C0048(v278, v466, type metadata accessor for TaskHistory.Running);
                                          if (swift_getEnumCaseMultiPayload() == 1)
                                          {
                                            sub_1001BD160(v279, type metadata accessor for TaskHistory.Running);
                                          }
                                          else
                                          {
                                            unint64_t v123 = *(unsigned int *)(v279 + 8);
                                            uint64_t v280 = sub_10000566C(&qword_10070B6A0);
                                            sub_1001BD160(v279 + *(int *)(v280 + 64), type metadata accessor for ClientCommand);
                                            if (v123 == v269)
                                            {
                                              sub_1001BD160(v457, type metadata accessor for TaskHistory.Running);
                                              uint64_t v125 = v456;
                                              goto LABEL_145;
                                            }
                                          }
                                          uint64_t v278 = v457;
                                          sub_1001BD160(v457, type metadata accessor for TaskHistory.Running);
                                          v276 += v277;
                                          --v274;
                                        }
                                        while (v274);
                                        swift_bridgeObjectRelease();
                                        uint64_t v144 = v453;
                                        uint64_t v125 = v456;
                                      }
                                      else
                                      {
                                        uint64_t v144 = v453;
                                      }
                                      swift_bridgeObjectRelease();
                                      uint64_t v145 = v445;
                                      if ((v469 & 1) == 0) {
                                        goto LABEL_169;
                                      }
LABEL_152:
                                      os_log_t v281 = sub_1001A9D34(1, v452);
                                      uint64_t v282 = v281[2];
                                      if (v282)
                                      {
                                        uint64_t v283 = 0;
                                        uint64_t v284 = v450;
                                        while ((sub_100149D30(*((_DWORD *)v281 + v283 + 8), v144, v125) & 1) == 0)
                                        {
                                          if (v282 == ++v283) {
                                            goto LABEL_158;
                                          }
                                        }
                                        swift_bridgeObjectRelease();
                                        goto LABEL_169;
                                      }
                                      uint64_t v284 = v450;
LABEL_158:
                                      v450 = v284;
                                      swift_bridgeObjectRelease();
                                      v285 = sub_100105454(2, v145);
                                      uint64_t v475 = v285[2];
                                      if (v475)
                                      {
                                        uint64_t v286 = 0;
                                        uint64_t v287 = v285 + 4;
                                        uint64_t v288 = v125 + v451;
                                        uint64_t v289 = v462;
LABEL_161:
                                        v290 = v287;
                                        int v291 = *((_DWORD *)v287 + v286++);
                                        swift_bridgeObjectRetain_n();
                                        uint64_t v292 = 0;
                                        uint64_t v293 = v288;
                                        uint64_t v294 = v288;
                                        while (1)
                                        {
                                          uint64_t v295 = v292 + 1;
                                          if (__OFADD__(v292, 1)) {
                                            break;
                                          }
                                          sub_1001C0048(v294, v289, type metadata accessor for TaskHistory.Previous);
                                          uint64_t v296 = v454;
                                          sub_1001C0048(v289, v454, type metadata accessor for TaskHistory.Previous);
                                          if (swift_getEnumCaseMultiPayload() == 1)
                                          {
                                            unint64_t v297 = *(void *)v296;
                                            int v298 = *(_DWORD *)(v296 + 8);
                                            sub_10007C4A4(v297);
                                            if (v298 == v291)
                                            {
                                              sub_1001BD160(v462, type metadata accessor for TaskHistory.Previous);
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRelease_n();
                                              goto LABEL_169;
                                            }
                                          }
                                          else
                                          {
                                            sub_1001BD160(v296, type metadata accessor for TaskHistory.Previous);
                                          }
                                          sub_1001BD160(v462, type metadata accessor for TaskHistory.Previous);
                                          ++v292;
                                          v294 += v477;
                                          if (v295 == v476)
                                          {
                                            swift_bridgeObjectRelease_n();
                                            uint64_t v287 = v290;
                                            uint64_t v288 = v293;
                                            if (v286 == v475) {
                                              goto LABEL_171;
                                            }
                                            goto LABEL_161;
                                          }
                                        }
LABEL_228:
                                        __break(1u);
LABEL_229:
                                        __break(1u);
LABEL_230:
                                        __break(1u);
                                        goto LABEL_231;
                                      }
LABEL_171:
                                      swift_bridgeObjectRelease();
                                      uint64_t v299 = v420;
                                      sub_1001C0048((uint64_t)v443 + v446[8], v420, type metadata accessor for UploadFlagChanges.FlagsToUpload);
                                      if (swift_getEnumCaseMultiPayload() == 1)
                                      {
                                        uint64_t v300 = *(void *)(v299 + *(int *)(sub_10000566C(&qword_10070EF48) + 48));
                                        sub_1001BD160(v299, type metadata accessor for UploadFlagChanges.EncodedFlags);
                                        unint64_t v123 = sub_1000D5234((uint64_t)_swiftEmptyArrayStorage);
                                        unint64_t v483 = v123;
                                        uint64_t v301 = *(void *)(v300 + 16);
                                        if (v301)
                                        {
                                          os_log_t v302 = 0;
                                          os_log_t v303 = (uint64_t *)(v300 + 56);
                                          while (1)
                                          {
                                            uint64_t v304 = *((unsigned int *)v303 - 6);
                                            uint64_t v305 = *v303;
                                            LODWORD(v481) = *((_DWORD *)v303 - 6);
                                            swift_bridgeObjectRetain();
                                            if ((MessageIdentifierSet.contains(_:)() & 1) != 0
                                              || (LODWORD(v481) = v304, (MessageIdentifierSet.contains(_:)() & 1) != 0))
                                            {
                                              swift_bridgeObjectRelease();
                                            }
                                            else
                                            {
                                              sub_10003E960((uint64_t)v302);
                                              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                                              unint64_t v123 = v483;
                                              uint64_t v481 = v483;
                                              unint64_t v308 = sub_100024260(v304);
                                              uint64_t v309 = *(void *)(v123 + 16);
                                              BOOL v310 = (v307 & 1) == 0;
                                              uint64_t v311 = v309 + v310;
                                              if (__OFADD__(v309, v310)) {
                                                goto LABEL_229;
                                              }
                                              char v312 = v307;
                                              if (*(void *)(v123 + 24) >= v311)
                                              {
                                                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                                                {
                                                  sub_100098FFC();
                                                  unint64_t v123 = v481;
                                                }
                                              }
                                              else
                                              {
                                                sub_100053534(v311, isUniquelyReferenced_nonNull_native);
                                                unint64_t v123 = v481;
                                                uint64_t v313 = sub_100024260(v304);
                                                if ((v312 & 1) != (v314 & 1)) {
                                                  goto LABEL_236;
                                                }
                                                unint64_t v308 = v313;
                                              }
                                              unint64_t v483 = v123;
                                              swift_bridgeObjectRelease();
                                              swift_bridgeObjectRetain();
                                              if ((v312 & 1) == 0) {
                                                sub_10010322C(v308, v304, (uint64_t)&_swiftEmptySetSingleton, (void *)v123);
                                              }
                                              swift_bridgeObjectRelease();
                                              sub_10008BDA4(v305);
                                              os_log_t v302 = sub_1001A7B9C;
                                            }
                                            v303 += 4;
                                            if (!--v301) {
                                              goto LABEL_215;
                                            }
                                          }
                                        }
LABEL_214:
                                        os_log_t v302 = 0;
LABEL_215:
                                        swift_bridgeObjectRelease();
                                        if (*(void *)(v123 + 16))
                                        {
                                          uint64_t v388 = v438;
                                          v389 = v406;
                                          uint64_t v390 = v436;
                                          uint64_t v391 = v439;
                                          (*(void (**)(char *, uint64_t, uint64_t))(v438 + 16))(v406, v436, v439);
                                          uint64_t v392 = (uint64_t)v405;
                                          sub_1001C0048(v390, (uint64_t)v405, type metadata accessor for MailboxTaskLogger);
                                          variable initialization expression of Engine.isProcessingUpdates();
                                          variable initialization expression of Engine.isProcessingUpdates();
                                          variable initialization expression of Engine.isProcessingUpdates();
                                          variable initialization expression of Engine.isProcessingUpdates();
                                          variable initialization expression of Engine.isProcessingUpdates();
                                          variable initialization expression of Engine.isProcessingUpdates();
                                          v393 = sub_1005E0EB0();
                                          os_log_type_t v394 = sub_1005E25C0();
                                          if (os_log_type_enabled(v393, v394))
                                          {
                                            uint64_t v395 = swift_slowAlloc();
                                            uint64_t v478 = swift_slowAlloc();
                                            uint64_t v480 = v478;
                                            *(_DWORD *)uint64_t v395 = 68159491;
                                            LODWORD(v481) = 2;
                                            sub_1005E2960();
                                            *(_WORD *)(v395 + 8) = 256;
                                            uint64_t v396 = v392 + *(int *)(v424 + 20);
                                            LOBYTE(v481) = *(unsigned char *)v396;
                                            sub_1005E2960();
                                            *(_WORD *)(v395 + 11) = 2082;
                                            uint64_t v397 = *(void *)(v396 + 8);
                                            unint64_t v398 = *(void *)(v396 + 16);
                                            swift_bridgeObjectRetain();
                                            uint64_t v481 = sub_1000C6914(v397, v398, &v480);
                                            sub_1005E2960();
                                            swift_bridgeObjectRelease();
                                            *(_WORD *)(v395 + 21) = 1040;
                                            LODWORD(v481) = 2;
                                            sub_1005E2960();
                                            *(_WORD *)(v395 + 27) = 512;
                                            LOWORD(v481) = *(_WORD *)(v396 + 24);
                                            sub_1005E2960();
                                            *(_WORD *)(v395 + 31) = 2160;
                                            uint64_t v481 = 0x786F626C69616DLL;
                                            sub_1005E2960();
                                            *(_WORD *)(v395 + 41) = 2085;
                                            int v399 = *(_DWORD *)(v396 + 40);
                                            uint64_t v481 = *(void *)(v396 + 32);
                                            int v482 = v399;
                                            swift_bridgeObjectRetain();
                                            uint64_t v400 = sub_1005E1CC0();
                                            uint64_t v481 = sub_1000C6914(v400, v401, &v480);
                                            sub_1005E2960();
                                            swift_bridgeObjectRelease();
                                            sub_1001BD160((uint64_t)v405, type metadata accessor for MailboxTaskLogger);
                                            *(_WORD *)(v395 + 51) = 2048;
                                            swift_beginAccess();
                                            uint64_t v481 = *(void *)(v483 + 16);
                                            sub_1005E2960();
                                            _os_log_impl((void *)&_mh_execute_header, v393, v394, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Did upload flags for %ld messages", (uint8_t *)v395, 0x3Du);
                                            swift_arrayDestroy();
                                            swift_slowDealloc();
                                            swift_slowDealloc();

                                            (*(void (**)(char *, uint64_t))(v438 + 8))(v406, v439);
                                          }
                                          else
                                          {

                                            sub_1001BD160(v392, type metadata accessor for MailboxTaskLogger);
                                            (*(void (**)(char *, uint64_t))(v388 + 8))(v389, v391);
                                          }
                                          sub_100007A48(v449, &qword_100709E38);
                                          v402 = v443;
                                          v403 = (void *)swift_allocObject();
                                          uint64_t v404 = v402[1];
                                          v403[2] = *v402;
                                          v403[3] = v404;
                                          swift_beginAccess();
                                          v403[4] = v483;
                                          swift_bridgeObjectRetain();
                                          sub_10003E960((uint64_t)v302);
                                          return 2;
                                        }
                                        sub_100007A48(v449, &qword_100709E38);
                                        swift_bridgeObjectRelease();
                                        sub_10003E960((uint64_t)v302);
                                      }
                                      else
                                      {
                                        sub_100007A48(v449, &qword_100709E38);
                                        sub_1001BD160(v299, type metadata accessor for UploadFlagChanges.FlagsToUpload);
                                      }
                                      return 5;
                                    }
                                  }
                                  sub_1001BD160(v474, type metadata accessor for TaskHistory.Previous);
                                  ++v270;
                                  v271 += v477;
                                  if (v272 == v476)
                                  {
                                    uint64_t v125 = v456;
LABEL_145:
                                    swift_bridgeObjectRelease();
                                    if (v268 == v470)
                                    {
                                      swift_bridgeObjectRelease();
                                      uint64_t v145 = v445;
                                      uint64_t v144 = v453;
                                      int v266 = v469;
                                      goto LABEL_151;
                                    }
                                    goto LABEL_131;
                                  }
                                }
                              }
                              swift_bridgeObjectRelease();
LABEL_151:
                              sub_10000566C(&qword_100709E60);
                              if (v266 & sub_1005E3630()) {
                                goto LABEL_152;
                              }
LABEL_169:
                              sub_100007A48(v449, &qword_100709E38);
                              return 5;
                            }
                            break;
                          }
                          unint64_t v123 = *(unsigned int *)(v264 + 8);
                          uint64_t v265 = sub_10000566C(&qword_10070B6A0);
                          sub_1001BD160(v264 + *(int *)(v265 + 64), type metadata accessor for ClientCommand);
                          if (v123 != v255) {
                            goto LABEL_118;
                          }
                          sub_1001BD160(v463, type metadata accessor for TaskHistory.Running);
LABEL_122:
                          swift_bridgeObjectRelease();
                          if (v254 == v252)
                          {
                            swift_bridgeObjectRelease();
                            int v266 = 0;
                            uint64_t v125 = v456;
                            goto LABEL_128;
                          }
                          goto LABEL_109;
                        }
                      }
                      sub_1001BD160(v470, type metadata accessor for TaskHistory.Previous);
                      unint64_t v239 = (void *)((char *)v239 + 1);
                      v256 += v477;
                      if (v257 == (char *)v476) {
                        goto LABEL_122;
                      }
                    }
                  }
                }
                sub_1001BD160((uint64_t)v473, type metadata accessor for TaskHistory.Previous);
                ++v244;
                v242 += v477;
              }
              while (v246 != v476);
              uint64_t v125 = v456;
              swift_bridgeObjectRelease();
              uint64_t v241 = v469;
              uint64_t v242 = v245;
              if (v240 == v471)
              {
                swift_bridgeObjectRelease();
                uint64_t v145 = v445;
                uint64_t v144 = v453;
                goto LABEL_126;
              }
            }
          }
        }
        else
        {
          sub_1001BD160(v184, type metadata accessor for TaskHistory.Previous);
        }
        sub_1001BD160(v468, type metadata accessor for TaskHistory.Previous);
        ++v181;
        v183 += v477;
      }
      while (v123 != v476);
      uint64_t v178 = v456;
      swift_bridgeObjectRelease_n();
      uint64_t v175 = v179;
      uint64_t v176 = v182;
    }
    while (v174 != v471);
    swift_bridgeObjectRelease();
    uint64_t v125 = v178;
    uint64_t v145 = v445;
    uint64_t v144 = v453;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v192 = v431;
  sub_1000079E4(v408, v431, &qword_100709E38);
  MessageIdentifierSet.count.getter();
  if (v193 < 1)
  {
    sub_100007A48(v192, &qword_100709E38);
    uint64_t v197 = 1;
    uint64_t v196 = v432;
  }
  else
  {
    uint64_t v194 = v423;
    sub_10001FDF0(v192, v423, &qword_100709E38);
    uint64_t v195 = v194;
    uint64_t v196 = v432;
    sub_10001FDF0(v195, v432, &qword_100709E30);
    uint64_t v197 = 0;
  }
  uint64_t v235 = v440;
  uint64_t v236 = v441;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v440 + 56))(v196, v197, 1, v441);
  uint64_t v237 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48);
  unint64_t v123 = v235 + 48;
  if (v237(v196, 1, v236) == 1)
  {
    sub_100007A48(v196, &qword_10070A000);
    goto LABEL_98;
  }
  uint64_t v315 = v429;
  sub_10001FDF0(v196, v429, &qword_100709E30);
  uint64_t v316 = v433;
  MessageIdentifierSet.ranges.getter(v433);
  sub_10000566C(&qword_10070A8F8);
  uint64_t v317 = sub_1005E35B0();
  uint64_t v318 = sub_1005E35E0();
  uint64_t v319 = sub_1005E35B0();
  uint64_t v320 = sub_1005E35E0();
  if (v317 < v319 || v320 < v317)
  {
LABEL_233:
    __break(1u);
LABEL_234:
    __break(1u);
    goto LABEL_235;
  }
  uint64_t v321 = sub_1005E35B0();
  uint64_t v322 = sub_1005E35E0();
  v323 = v422;
  uint64_t v324 = (uint64_t)v418;
  uint64_t v325 = (uint64_t)v417;
  if (v318 < v321 || v322 < v318) {
    goto LABEL_234;
  }
  BOOL v211 = __OFSUB__(v318, v317);
  uint64_t v326 = v318 - v317;
  uint64_t v327 = v439;
  uint64_t v328 = (uint64_t)v421;
  if (!v211)
  {
    sub_100007A48(v316, &qword_10070A9C0);
    uint64_t v329 = v438;
    v330 = *(void (**)(char *, uint64_t, uint64_t))(v438 + 16);
    if (v326 > 19)
    {
      v323 = v413;
      uint64_t v365 = v436;
      v330(v413, v436, v327);
      uint64_t v324 = v412;
      sub_1001C0048(v365, v412, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_1000079E4(v315, v325, &qword_100709E30);
      v366 = sub_1005E0EB0();
      os_log_type_t v367 = sub_1005E25C0();
      if (os_log_type_enabled(v366, v367))
      {
        uint64_t v368 = swift_slowAlloc();
        uint64_t v478 = swift_slowAlloc();
        uint64_t v479 = v478;
        *(_DWORD *)uint64_t v368 = 68159491;
        LODWORD(v481) = 2;
        sub_1005E2960();
        *(_WORD *)(v368 + 8) = 256;
        uint64_t v369 = v325;
        uint64_t v370 = v324 + *(int *)(v424 + 20);
        LOBYTE(v481) = *(unsigned char *)v370;
        sub_1005E2960();
        *(_WORD *)(v368 + 11) = 2082;
        uint64_t v371 = *(void *)(v370 + 8);
        unint64_t v372 = *(void *)(v370 + 16);
        swift_bridgeObjectRetain();
        uint64_t v481 = sub_1000C6914(v371, v372, &v479);
        sub_1005E2960();
        uint64_t v315 = v429;
        swift_bridgeObjectRelease();
        *(_WORD *)(v368 + 21) = 1040;
        LODWORD(v481) = 2;
        sub_1005E2960();
        *(_WORD *)(v368 + 27) = 512;
        LOWORD(v481) = *(_WORD *)(v370 + 24);
        sub_1005E2960();
        *(_WORD *)(v368 + 31) = 2160;
        uint64_t v481 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v368 + 41) = 2085;
        int v373 = *(_DWORD *)(v370 + 40);
        uint64_t v481 = *(void *)(v370 + 32);
        int v482 = v373;
        swift_bridgeObjectRetain();
        uint64_t v374 = sub_1005E1CC0();
        uint64_t v481 = sub_1000C6914(v374, v375, &v479);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001BD160(v412, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v368 + 51) = 2048;
        MessageIdentifierSet.count.getter();
        uint64_t v377 = v376;
        sub_100007A48(v369, &qword_100709E30);
        uint64_t v481 = v377;
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v366, v367, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removing %ld deleted messages after uploading flag changes", (uint8_t *)v368, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v438 + 8))(v413, v439);
        goto LABEL_209;
      }
      sub_100007A48(v325, &qword_100709E30);
    }
    else
    {
      uint64_t v331 = v436;
      v330(v323, v436, v327);
      sub_1001C0048(v331, v324, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v332 = v411;
      sub_1000079E4(v315, v411, &qword_100709E30);
      sub_1000079E4(v315, v328, &qword_100709E30);
      v333 = sub_1005E0EB0();
      os_log_type_t v334 = sub_1005E25C0();
      int v335 = v334;
      if (os_log_type_enabled(v333, v334))
      {
        uint64_t v336 = swift_slowAlloc();
        uint64_t v478 = swift_slowAlloc();
        uint64_t v479 = v478;
        *(_DWORD *)uint64_t v336 = 68159747;
        LODWORD(v481) = 2;
        LODWORD(v477) = v335;
        sub_1005E2960();
        *(_WORD *)(v336 + 8) = 256;
        uint64_t v337 = v324;
        uint64_t v338 = v324 + *(int *)(v424 + 20);
        LOBYTE(v481) = *(unsigned char *)v338;
        sub_1005E2960();
        *(_WORD *)(v336 + 11) = 2082;
        uint64_t v339 = *(void *)(v338 + 8);
        unint64_t v340 = *(void *)(v338 + 16);
        swift_bridgeObjectRetain();
        uint64_t v481 = sub_1000C6914(v339, v340, &v479);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v336 + 21) = 1040;
        LODWORD(v481) = 2;
        sub_1005E2960();
        *(_WORD *)(v336 + 27) = 512;
        LOWORD(v481) = *(_WORD *)(v338 + 24);
        sub_1005E2960();
        *(_WORD *)(v336 + 31) = 2160;
        uint64_t v481 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v336 + 41) = 2085;
        int v341 = *(_DWORD *)(v338 + 40);
        uint64_t v481 = *(void *)(v338 + 32);
        int v482 = v341;
        swift_bridgeObjectRetain();
        uint64_t v342 = sub_1005E1CC0();
        uint64_t v481 = sub_1000C6914(v342, v343, &v479);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001BD160(v337, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v336 + 51) = 2048;
        uint64_t v344 = v447;
        uint64_t v345 = v411;
        MessageIdentifierSet.count.getter();
        uint64_t v347 = v346;
        sub_100007A48(v345, &qword_100709E30);
        uint64_t v481 = v347;
        sub_1005E2960();
        *(_WORD *)(v336 + 61) = 2082;
        uint64_t v348 = (uint64_t)v421;
        uint64_t v349 = MessageIdentifierSet.debugDescription.getter(v344);
        uint64_t v481 = sub_1000C6914(v349, v350, &v479);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        uint64_t v315 = v429;
        sub_100007A48(v348, &qword_100709E30);
        _os_log_impl((void *)&_mh_execute_header, v333, (os_log_type_t)v477, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removing %ld deleted messages with UIDs %{public}s after uploading flag changes", (uint8_t *)v336, 0x47u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v438 + 8))(v422, v439);
LABEL_209:
        sub_100007A48(v449, &qword_100709E38);
        v383 = v443;
        uint64_t v384 = sub_10000566C(&qword_10070CC48);
        swift_allocBox();
        uint64_t v386 = (uint64_t)v385 + *(int *)(v384 + 48);
        uint64_t v387 = v383[1];
        void *v385 = *v383;
        v385[1] = v387;
        sub_10001FDF0(v315, v386, &qword_100709E30);
        swift_bridgeObjectRetain();
        return 4;
      }
      sub_100007A48(v332, &qword_100709E30);

      sub_100007A48(v328, &qword_100709E30);
    }
    sub_1001BD160(v324, type metadata accessor for MailboxTaskLogger);
    (*(void (**)(char *, uint64_t))(v329 + 8))(v323, v327);
    goto LABEL_209;
  }
LABEL_235:
  __break(1u);
LABEL_236:
  uint64_t result = sub_1005E3380();
  __break(1u);
  return result;
}

BOOL sub_1001B7A70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_10070EF40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C0048(v1, (uint64_t)v13, type metadata accessor for UploadFlagChanges.FlagsToUpload);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (EnumCaseMultiPayload != 1) {
    return 0;
  }
  sub_10000566C(&qword_10070EF48);
  swift_bridgeObjectRelease();
  sub_1001C0268((uint64_t)v13, (uint64_t)v10, type metadata accessor for UploadFlagChanges.EncodedFlags);
  sub_1000079E4((uint64_t)v10, (uint64_t)v4, &qword_10070EF40);
  uint64_t v15 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v4, 1, v15);
  sub_100007A48((uint64_t)v4, &qword_10070EF40);
  sub_1001C0048((uint64_t)v10, (uint64_t)v8, type metadata accessor for UploadFlagChanges.EncodedFlags);
  BOOL v17 = v16 == 1 && *(void *)&v8[*(int *)(v5 + 24) + 16] == *(void *)&v8[*(int *)(v5 + 24) + 24] >> 1;
  sub_1001BD160((uint64_t)v8, type metadata accessor for UploadFlagChanges.EncodedFlags);
  sub_1001BD160((uint64_t)v10, type metadata accessor for UploadFlagChanges.EncodedFlags);
  return v17;
}

uint64_t sub_1001B7D04(uint64_t a1, uint64_t a2)
{
  uint64_t v87 = a2;
  uint64_t v81 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v81);
  uint64_t v86 = (uint64_t)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1005E0ED0();
  uint64_t v99 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v84 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = sub_10000566C(&qword_100709E38);
  uint64_t v9 = __chkstk_darwin(v90);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v71 - v13;
  __chkstk_darwin(v12);
  int v16 = (char *)&v71 - v15;
  uint64_t v17 = type metadata accessor for UploadFlagChanges(0);
  uint64_t v80 = v2 + *(int *)(v17 + 44);
  sub_1000079E4(v80, (uint64_t)v16, &qword_100709E38);
  uint64_t v18 = (void *)(v2 + *(int *)(v17 + 32));
  sub_1001C0048((uint64_t)v18, (uint64_t)v8, type metadata accessor for UploadFlagChanges.FlagsToUpload);
  uint64_t v73 = v6;
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1001BD160((uint64_t)v8, type metadata accessor for UploadFlagChanges.FlagsToUpload);
    uint64_t v91 = _swiftEmptyArrayStorage;
    uint64_t v19 = *(void *)(a1 + 16);
    if (!v19) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v66 = (void *)*v8;
    sub_1000079E4((uint64_t)v16, (uint64_t)v11, &qword_100709E38);
    uint64_t v67 = v66[2];
    uint64_t v91 = v66;
    if (v67)
    {
      uint64_t v68 = (int *)(v66 + 4);
      swift_bridgeObjectRetain();
      do
      {
        int v69 = *v68;
        v68 += 8;
        LODWORD(v101) = v69;
        MessageIdentifierSet.insert(_:)();
        --v67;
      }
      while (v67);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_10001FDF0((uint64_t)v11, (uint64_t)v14, &qword_100709E38);
    sub_100007A48((uint64_t)v16, &qword_100709E38);
    swift_bridgeObjectRelease();
    sub_10001FDF0((uint64_t)v14, (uint64_t)v16, &qword_100709E38);
    uint64_t v19 = *(void *)(a1 + 16);
    if (!v19) {
      goto LABEL_37;
    }
  }
  uint64_t v72 = v18;
  uint64_t v89 = v16;
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v99 + 16);
  uint64_t v83 = (void (**)(char *, uint64_t))(v99 + 8);
  uint64_t v79 = &v100[4];
  uint64_t v78 = &v100[1];
  uint64_t v77 = &v100[8];
  uint64_t v76 = &v100[2];
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  *(void *)&long long v21 = 68159491;
  long long v75 = v21;
  uint64_t v74 = (char *)&type metadata for Any + 8;
  uint64_t v88 = a1;
  do
  {
    uint64_t v97 = v20;
    uint64_t v98 = v19;
    uint64_t v30 = a1 + v20;
    int v31 = *(_DWORD *)(a1 + v20 + 32);
    uint64_t v93 = *(unsigned __int8 *)(a1 + v20 + 36);
    int v32 = *(unsigned __int8 *)(a1 + v20 + 37);
    int v33 = *(unsigned __int8 *)(a1 + v20 + 38);
    int v34 = *(unsigned __int8 *)(a1 + v20 + 39);
    int v35 = *(unsigned __int8 *)(a1 + v20 + 40);
    int v94 = *(unsigned __int8 *)(a1 + v20 + 41);
    LODWORD(v95) = v32;
    uint64_t v36 = *(unsigned __int8 *)(a1 + v20 + 42);
    uint64_t v96 = *(unsigned __int8 *)(a1 + v20 + 43);
    char v37 = *(unsigned char *)(a1 + v20 + 44);
    uint64_t v38 = *(void *)(a1 + v20 + 45);
    char v39 = *(unsigned char *)(v30 + 53);
    uint64_t v99 = *(void *)(v30 + 56);
    swift_bridgeObjectRetain();
    uint64_t v40 = v89;
    MessageIdentifierSet.count.getter();
    if (v41 > 732)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v16 = v40;
      goto LABEL_34;
    }
    *(_DWORD *)uint64_t v100 = v31;
    char v42 = MessageIdentifierSet.contains(_:)();
    int v92 = v31;
    if (v42)
    {
      uint64_t v44 = v84;
      uint64_t v43 = v85;
      uint64_t v45 = v87;
      (*v82)(v84, v87, v85);
      uint64_t v46 = v86;
      sub_1001C0048(v45, v86, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1005E0EB0();
      os_log_type_t v48 = sub_1005E25A0();
      int v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v22 = swift_slowAlloc();
        LODWORD(v96) = v49;
        uint64_t v23 = v22;
        uint64_t v95 = swift_slowAlloc();
        uint64_t v101 = v95;
        *(_DWORD *)uint64_t v23 = v75;
        *(_DWORD *)uint64_t v100 = 2;
        sub_1005E2960();
        *(_WORD *)(v23 + 8) = 256;
        uint64_t v24 = v46 + *(int *)(v81 + 20);
        v100[0] = *(unsigned char *)v24;
        sub_1005E2960();
        *(_WORD *)(v23 + 11) = 2082;
        uint64_t v26 = *(void *)(v24 + 8);
        unint64_t v25 = *(void *)(v24 + 16);
        swift_bridgeObjectRetain();
        *(void *)uint64_t v100 = sub_1000C6914(v26, v25, &v101);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 21) = 1040;
        *(_DWORD *)uint64_t v100 = 2;
        sub_1005E2960();
        *(_WORD *)(v23 + 27) = 512;
        *(_WORD *)uint64_t v100 = *(_WORD *)(v24 + 24);
        sub_1005E2960();
        *(_WORD *)(v23 + 31) = 2160;
        strcpy(v100, "mailbox");
        sub_1005E2960();
        *(_WORD *)(v23 + 41) = 2085;
        int v27 = *(_DWORD *)(v24 + 40);
        *(void *)uint64_t v100 = *(void *)(v24 + 32);
        *(_DWORD *)&v100[8] = v27;
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1005E1CC0();
        *(void *)uint64_t v100 = sub_1000C6914(v28, v29, &v101);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001BD160(v46, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v23 + 51) = 1024;
        swift_bridgeObjectRelease();
        *(_DWORD *)uint64_t v100 = v92;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v96, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Ignoring duplicate updates for UID %u.", (uint8_t *)v23, 0x39u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1001BD160(v46, type metadata accessor for MailboxTaskLogger);

        swift_bridgeObjectRelease();
      }
      (*v83)(v44, v43);
    }
    else
    {
      LODWORD(v101) = v31;
      MessageIdentifierSet.insert(_:)();
      uint64_t v50 = 256;
      if (!v95) {
        uint64_t v50 = 0;
      }
      uint64_t v51 = v50 | v93;
      uint64_t v52 = 0x10000;
      if (!v33) {
        uint64_t v52 = 0;
      }
      uint64_t v53 = 0x1000000;
      if (!v34) {
        uint64_t v53 = 0;
      }
      uint64_t v54 = v51 | v52 | v53;
      uint64_t v55 = &_mh_execute_header;
      if (!v35) {
        uint64_t v55 = 0;
      }
      uint64_t v56 = 0x10000000000;
      if (!v94) {
        uint64_t v56 = 0;
      }
      v100[0] = v37;
      *(void *)&v100[1] = v38;
      v100[9] = v39;
      uint64_t v57 = FlagsWithModifications.locallyModified.getter(v54 | (unint64_t)v55 | v56 | (v36 << 48) | (v96 << 56), *(uint64_t *)v100, *(__int16 *)&v100[8]);
      char v58 = sub_100010000(1, v57);
      swift_bridgeObjectRelease();
      if (v58)
      {
        LODWORD(v101) = v92;
        MessageIdentifierSet.insert(_:)();
      }
      uint64_t v59 = v91;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v59 = sub_10001833C(0, v59[2] + 1, 1, v59);
      }
      unint64_t v61 = v59[2];
      unint64_t v60 = v59[3];
      uint64_t v91 = v59;
      int v62 = v92;
      if (v61 >= v60 >> 1)
      {
        uint64_t v65 = sub_10001833C((void *)(v60 > 1), v61 + 1, 1, v91);
        int v62 = v92;
        uint64_t v91 = v65;
      }
      uint64_t v63 = v91;
      v91[2] = v61 + 1;
      uint64_t v64 = &v63[4 * v61];
      *((_DWORD *)v64 + 8) = v62;
      *((unsigned char *)v64 + 36) = v93;
      *((unsigned char *)v64 + 37) = v95;
      *((unsigned char *)v64 + 38) = v33;
      *((unsigned char *)v64 + 39) = v34;
      *((unsigned char *)v64 + 40) = v35;
      *((unsigned char *)v64 + 41) = v94;
      *((unsigned char *)v64 + 42) = v36;
      *((unsigned char *)v64 + 43) = v96;
      *((unsigned char *)v64 + 44) = v37;
      *(void *)((char *)v64 + 45) = v38;
      *((unsigned char *)v64 + 53) = v39;
      v64[7] = v99;
    }
    a1 = v88;
    uint64_t v20 = v97 + 32;
    uint64_t v19 = v98 - 1;
  }
  while (v98 != 1);
  swift_bridgeObjectRelease();
  int v16 = v89;
LABEL_34:
  uint64_t v18 = v72;
LABEL_37:
  sub_100007A48((uint64_t)v16, &qword_100709E38);
  sub_1001BD160((uint64_t)v18, type metadata accessor for UploadFlagChanges.FlagsToUpload);
  void *v18 = v91;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001B86E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v76 = a1;
  uint64_t v5 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = &v63[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = &v63[-v10];
  __chkstk_darwin(v9);
  uint64_t v13 = &v63[-v12];
  uint64_t v14 = sub_1005E0ED0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v73 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v63[-v19];
  __chkstk_darwin(v18);
  uint64_t v22 = &v63[-v21];
  uint64_t v71 = type metadata accessor for UploadFlagChanges(0);
  uint64_t v72 = a2;
  char v23 = *(unsigned char *)(a2 + *(int *)(v71 + 48));
  uint64_t v74 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v75 = v15;
  uint64_t v69 = v5;
  if (v23)
  {
    v74(v20, a3, v14);
    os_log_t v67 = (os_log_t)a3;
    sub_1001C0048(a3, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v24 = sub_1005E0EB0();
    os_log_type_t v25 = sub_1005E25C0();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      os_log_t v65 = (os_log_t)swift_slowAlloc();
      os_log_t v79 = v65;
      *(_DWORD *)uint64_t v27 = 68159235;
      LODWORD(v77) = 2;
      uint64_t v70 = v14;
      sub_1005E2960();
      *(_WORD *)(v27 + 8) = 256;
      uint64_t v28 = *(int *)(v5 + 20);
      uint64_t v68 = v8;
      unint64_t v29 = &v11[v28];
      LOBYTE(v77) = v11[v28];
      sub_1005E2960();
      *(_WORD *)(v27 + 11) = 2082;
      int v64 = v26;
      uint64_t v66 = v15 + 16;
      uint64_t v31 = *((void *)v29 + 1);
      unint64_t v30 = *((void *)v29 + 2);
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_1000C6914(v31, v30, (uint64_t *)&v79);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 21) = 1040;
      LODWORD(v77) = 2;
      uint64_t v14 = v70;
      sub_1005E2960();
      *(_WORD *)(v27 + 27) = 512;
      LOWORD(v77) = *((_WORD *)v29 + 12);
      sub_1005E2960();
      *(_WORD *)(v27 + 31) = 2160;
      uint64_t v77 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v27 + 41) = 2085;
      int v32 = *((_DWORD *)v29 + 10);
      uint64_t v77 = *((void *)v29 + 4);
      int v78 = v32;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1005E1CC0();
      uint64_t v77 = sub_1000C6914(v33, v34, (uint64_t *)&v79);
      uint64_t v8 = v68;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001BD160((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v64, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence has more flag changes to upload. Will mark as needing to re-run.", (uint8_t *)v27, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001BD160((uint64_t)v11, type metadata accessor for MailboxTaskLogger);
    }

    uint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v75 + 8);
    v50(v20, v14);
    sub_1000935B0(7u);
    uint64_t result = sub_100019080(&v77, 7);
    a3 = (uint64_t)v67;
  }
  else
  {
    v74(v22, a3, v14);
    sub_1001C0048(a3, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    int v35 = sub_1005E0EB0();
    os_log_type_t v36 = sub_1005E25C0();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      os_log_t v65 = v35;
      uint64_t v39 = v38;
      os_log_t v67 = (os_log_t)swift_slowAlloc();
      os_log_t v79 = v67;
      *(_DWORD *)uint64_t v39 = 68159235;
      LODWORD(v77) = 2;
      uint64_t v70 = v14;
      sub_1005E2960();
      *(_WORD *)(v39 + 8) = 256;
      uint64_t v40 = *(int *)(v5 + 20);
      uint64_t v68 = v8;
      uint64_t v41 = &v13[v40];
      LOBYTE(v77) = v13[v40];
      sub_1005E2960();
      *(_WORD *)(v39 + 11) = 2082;
      int v64 = v37;
      uint64_t v66 = v15 + 16;
      uint64_t v43 = *((void *)v41 + 1);
      unint64_t v42 = *((void *)v41 + 2);
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_1000C6914(v43, v42, (uint64_t *)&v79);
      uint64_t v44 = v75;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 21) = 1040;
      LODWORD(v77) = 2;
      uint64_t v14 = v70;
      sub_1005E2960();
      *(_WORD *)(v39 + 27) = 512;
      LOWORD(v77) = *((_WORD *)v41 + 12);
      sub_1005E2960();
      *(_WORD *)(v39 + 31) = 2160;
      uint64_t v77 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v39 + 41) = 2085;
      int v45 = *((_DWORD *)v41 + 10);
      uint64_t v77 = *((void *)v41 + 4);
      int v78 = v45;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1005E1CC0();
      uint64_t v77 = sub_1000C6914(v46, v47, (uint64_t *)&v79);
      uint64_t v8 = v68;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001BD160((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
      os_log_t v48 = v65;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v64, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking no more flag changes pending upload.", (uint8_t *)v39, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v49 = v44;
    }
    else
    {
      sub_1001BD160((uint64_t)v13, type metadata accessor for MailboxTaskLogger);

      uint64_t v49 = v75;
    }
    uint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v49 + 8);
    v50(v22, v14);
    uint64_t result = type metadata accessor for MailboxSyncState();
    *(unsigned char *)(v76 + *(int *)(result + 52) + 1) = 0;
  }
  if (*(unsigned char *)(v72 + *(int *)(v71 + 52)) == 3)
  {
    v74(v73, a3, v14);
    sub_1001C0048(a3, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v52 = sub_1005E0EB0();
    os_log_type_t v53 = sub_1005E25C0();
    int v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v55 = swift_slowAlloc();
      LODWORD(v74) = v54;
      uint64_t v56 = v55;
      os_log_t v79 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 68159235;
      LODWORD(v77) = 2;
      sub_1005E2960();
      *(_WORD *)(v56 + 8) = 256;
      uint64_t v57 = &v8[*(int *)(v69 + 20)];
      LOBYTE(v77) = *v57;
      sub_1005E2960();
      *(_WORD *)(v56 + 11) = 2082;
      uint64_t v70 = v14;
      uint64_t v58 = *((void *)v57 + 1);
      unint64_t v59 = *((void *)v57 + 2);
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_1000C6914(v58, v59, (uint64_t *)&v79);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 21) = 1040;
      LODWORD(v77) = 2;
      sub_1005E2960();
      *(_WORD *)(v56 + 27) = 512;
      LOWORD(v77) = *((_WORD *)v57 + 12);
      sub_1005E2960();
      *(_WORD *)(v56 + 31) = 2160;
      uint64_t v77 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v56 + 41) = 2085;
      int v60 = *((_DWORD *)v57 + 10);
      uint64_t v77 = *((void *)v57 + 4);
      int v78 = v60;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1005E1CC0();
      uint64_t v77 = sub_1000C6914(v61, v62, (uint64_t *)&v79);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001BD160((uint64_t)v8, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v74, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Marking flag changes upload as “has dependencies”.", (uint8_t *)v56, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v73, v70);
    }
    else
    {
      sub_1001BD160((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

      v50(v73, v14);
    }
    return sub_100019080(&v77, 7);
  }
  return result;
}

uint64_t sub_1001B9218()
{
  if (qword_100709DF0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001B9274(uint64_t a1)
{
  return sub_1001B27F0(a1);
}

uint64_t sub_1001B9290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t result = sub_1001B3DE0(a1, a2, a3, a4, a5, a6);
  *a7 = result;
  a7[1] = v9;
  return result;
}

uint64_t sub_1001B92B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BF3DC(a1, a2, a3, a4);
}

uint64_t sub_1001B92C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1001BF60C(a1, a2, a3, a5, a6);
}

uint64_t sub_1001B92D0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 24);
  unsigned int v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(unsigned char *)(result + 184) == 1)
  {
    uint64_t v5 = result;
    uint64_t v7 = *(void *)(result + 168);
    uint64_t v6 = *(void *)(result + 176);
    uint64_t v11 = *(void *)(result + 160);
    uint64_t v8 = v11;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v11, v3, v4, 0, (void (*)(char *))sub_1001BF3D4, v10);
    uint64_t result = sub_10000F0D4(v8, v7, v6, 1);
    uint64_t v9 = v11;
    *(void *)(v5 + 168) = 0;
    *(void *)(v5 + 176) = 0;
    *(void *)(v5 + 160) = v9;
    *(unsigned char *)(v5 + 184) = 1;
  }
  return result;
}

unint64_t sub_1001B9388()
{
  return 0xD000000000000011;
}

uint64_t sub_1001B93A4()
{
  uint64_t v1 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for UploadFlagChanges.EncodedFlags(0) + 20));
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v8 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t result = sub_1001C0048(v7, (uint64_t)v4, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      uint64_t v11 = &v4[*(int *)(v1 + 20)];
      BOOL v12 = *(void *)(*(void *)v11 + 16) != 0;
      BOOL v13 = __OFADD__(v9, v12);
      uint64_t v14 = v9 + v12;
      if (v13) {
        break;
      }
      BOOL v15 = *(void *)(*((void *)v11 + 1) + 16) != 0;
      uint64_t v9 = v14 + v15;
      if (__OFADD__(v14, v15)) {
        goto LABEL_10;
      }
      sub_1001BD160((uint64_t)v4, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      v7 += v8;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1001B9528@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v62 = a2;
  uint64_t v72 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v72);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v76 = *(void (***)(char *, uint64_t))(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10070EF40);
  __chkstk_darwin(v10 - 8);
  BOOL v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v81 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v60 - v17;
  sub_1001BA1F8((uint64_t)v12);
  uint64_t v61 = v14;
  os_log_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v80 = v14 + 48;
  if (v79(v12, 1, v13) == 1)
  {
LABEL_2:
    sub_100007A48((uint64_t)v12, &qword_10070EF40);
    uint64_t v20 = sub_10000566C(&qword_10070F2B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v62, 1, 1, v20);
  }
  else
  {
    uint64_t v22 = v76++;
    uint64_t v77 = (void (**)(char *, uint64_t, uint64_t))(v22 + 2);
    os_log_t v67 = (char *)&v82 + 1;
    uint64_t v68 = (char *)&v82 + 4;
    os_log_t v65 = (char *)&v82 + 2;
    uint64_t v66 = &v83;
    *(void *)&long long v19 = 68159491;
    long long v64 = v19;
    uint64_t v63 = (char *)&type metadata for Any + 8;
    uint64_t v70 = v7;
    uint64_t v71 = v2;
    uint64_t v69 = v9;
    int v78 = v12;
    while (1)
    {
      sub_1001C0268((uint64_t)v12, (uint64_t)v18, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      char v23 = &v18[*(int *)(v13 + 20)];
      uint64_t v24 = *(void *)(*((void *)v23 + 1) + 16);
      if (*(void *)(*(void *)v23 + 16)) {
        break;
      }
      if (v24)
      {
        uint64_t v52 = sub_10000566C(&qword_10070F2B0);
        uint64_t v53 = v62;
        uint64_t v54 = v62 + *(int *)(v52 + 48);
        sub_1000079E4((uint64_t)v18, v62, &qword_100709E38);
        uint64_t v55 = swift_bridgeObjectRetain();
        uint64_t v56 = sub_100039080(v55);
        swift_bridgeObjectRelease();
        sub_1001BD160((uint64_t)v18, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        *(_WORD *)uint64_t v54 = 257;
        *(void *)(v54 + 8) = v56;
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v53, 0, 1, v52);
      }
      (*v77)(v9, a1, v7);
      sub_1001C0048(a1, (uint64_t)v6, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v25 = v81;
      sub_1001C0048((uint64_t)v18, v81, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      int v26 = sub_1005E0EB0();
      os_log_type_t v27 = sub_1005E25C0();
      int v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        v84[0] = v75;
        *(_DWORD *)uint64_t v29 = v64;
        LODWORD(v82) = 2;
        int v74 = v28;
        sub_1005E2960();
        *(_WORD *)(v29 + 8) = 256;
        unint64_t v30 = &v6[*(int *)(v72 + 20)];
        LOBYTE(v82) = *v30;
        sub_1005E2960();
        *(_WORD *)(v29 + 11) = 2082;
        os_log_t v73 = v26;
        uint64_t v31 = v13;
        int v32 = v6;
        uint64_t v33 = v18;
        uint64_t v34 = a1;
        uint64_t v36 = *((void *)v30 + 1);
        unint64_t v35 = *((void *)v30 + 2);
        swift_bridgeObjectRetain();
        uint64_t v37 = v36;
        a1 = v34;
        uint64_t v18 = v33;
        uint64_t v6 = v32;
        uint64_t v13 = v31;
        uint64_t v82 = sub_1000C6914(v37, v35, v84);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 21) = 1040;
        LODWORD(v82) = 2;
        sub_1005E2960();
        *(_WORD *)(v29 + 27) = 512;
        LOWORD(v82) = *((_WORD *)v30 + 12);
        sub_1005E2960();
        *(_WORD *)(v29 + 31) = 2160;
        uint64_t v82 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v29 + 41) = 2085;
        uint64_t v38 = *((void *)v30 + 4);
        int v39 = *((_DWORD *)v30 + 10);
        uint64_t v9 = v69;
        uint64_t v82 = v38;
        int v83 = v39;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1005E1CC0();
        uint64_t v82 = sub_1000C6914(v40, v41, v84);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001BD160((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v29 + 51) = 2080;
        uint64_t v42 = sub_10000566C(&qword_100709E38);
        uint64_t v43 = v81;
        uint64_t v44 = MessageIdentifierSet.debugDescription.getter(v42);
        uint64_t v82 = sub_1000C6914(v44, v45, v84);
        uint64_t v3 = v71;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001BD160(v43, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        os_log_t v46 = v73;
        _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v74, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] No flag changes for messages %s", (uint8_t *)v29, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v7 = v70;
        swift_slowDealloc();
      }
      else
      {

        sub_1001BD160(v25, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        sub_1001BD160((uint64_t)v6, type metadata accessor for MailboxTaskLogger);
      }
      (*v76)(v9, v7);
      sub_1001BD160((uint64_t)v18, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      BOOL v12 = v78;
      sub_1001BA1F8((uint64_t)v78);
      if (v79(v12, 1, v13) == 1) {
        goto LABEL_2;
      }
    }
    if (v24)
    {
      sub_100007A48(v3, &qword_10070EF40);
      sub_1001C0048((uint64_t)v18, v3, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v3, 0, 1, v13);
      uint64_t v47 = sub_10000566C(&qword_10070F2B0);
      uint64_t v48 = v62;
      uint64_t v49 = v62 + *(int *)(v47 + 48);
      sub_1000079E4((uint64_t)v18, v62, &qword_100709E38);
      uint64_t v50 = swift_bridgeObjectRetain();
      uint64_t v51 = sub_100039080(v50);
      swift_bridgeObjectRelease();
      sub_1001BD160((uint64_t)v18, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      *(_WORD *)uint64_t v49 = 257;
      *(void *)(v49 + 8) = v51;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v48, 0, 1, v47);
    }
    uint64_t v52 = sub_10000566C(&qword_10070F2B0);
    uint64_t v53 = v62;
    uint64_t v57 = v62 + *(int *)(v52 + 48);
    sub_1000079E4((uint64_t)v18, v62, &qword_100709E38);
    uint64_t v58 = swift_bridgeObjectRetain();
    unint64_t v59 = sub_100039080(v58);
    swift_bridgeObjectRelease();
    sub_1001BD160((uint64_t)v18, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
    *(_WORD *)uint64_t v57 = 256;
    *(void *)(v57 + 8) = v59;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v53, 0, 1, v52);
  }
}

uint64_t sub_1001B9E68(int *a1, uint64_t a2, void *a3)
{
  uint64_t v42 = sub_10000566C(&qword_100709E38);
  uint64_t v5 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *a1;
  uint64_t v9 = *(void *)((char *)a1 + 13);
  char v10 = *((unsigned char *)a1 + 21);
  uint64_t v11 = 256;
  if (!*((unsigned char *)a1 + 5)) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | *((unsigned __int8 *)a1 + 4);
  uint64_t v13 = 0x10000;
  if (!*((unsigned char *)a1 + 6)) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 0x1000000;
  if (!*((unsigned char *)a1 + 7)) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v12 | v13 | v14;
  uint64_t v16 = &_mh_execute_header;
  if (!*((unsigned char *)a1 + 8)) {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 0x10000000000;
  if (!*((unsigned char *)a1 + 9)) {
    uint64_t v17 = 0;
  }
  unint64_t v18 = v15 | (unint64_t)v16 | v17 | ((unint64_t)*((unsigned __int8 *)a1 + 10) << 48) | ((unint64_t)*((unsigned __int8 *)a1 + 11) << 56);
  v43[0] = *((unsigned char *)a1 + 12);
  *(void *)&v43[1] = v9;
  v43[9] = v10;
  uint64_t v19 = (uint64_t)FlagEncoder.encode(_:)(v18, *(uint64_t *)v43, *(unsigned __int16 *)&v43[8]);
  uint64_t v21 = v20;
  uint64_t v22 = (uint64_t *)Flag.deleted.unsafeMutableAddressor();
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  swift_bridgeObjectRetain();
  char v25 = sub_100010270(v23, v24, v19);
  swift_bridgeObjectRelease();
  v41[1] = v5;
  if (v25)
  {
    sub_10000566C(&qword_100709F50);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6670;
    uint64_t v27 = v22[1];
    *(void *)(inited + 32) = *v22;
    LOBYTE(v22) = inited + 32;
    *(void *)(inited + 40) = v27;
    swift_bridgeObjectRetain();
    Swift::Int v28 = sub_10001C2FC(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    uint64_t v29 = &_swiftEmptySetSingleton;
    uint64_t v19 = v28;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = v21;
  }
  swift_bridgeObjectRelease();
  int v44 = v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v43 = *a3;
  uint64_t v31 = *(void *)v43;
  *a3 = 0x8000000000000000;
  unint64_t v33 = sub_1000246E0(v19, (uint64_t)v29);
  uint64_t v34 = *(void *)(v31 + 16);
  BOOL v35 = (v32 & 1) == 0;
  uint64_t v36 = v34 + v35;
  if (__OFADD__(v34, v35))
  {
    __break(1u);
    goto LABEL_23;
  }
  LOBYTE(v22) = v32;
  if (*(void *)(v31 + 24) >= v36)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_19;
    }
LABEL_23:
    sub_100099AA0();
    goto LABEL_19;
  }
  sub_1000547A8(v36, isUniquelyReferenced_nonNull_native);
  unint64_t v37 = sub_1000246E0(v19, (uint64_t)v29);
  if ((v22 & 1) != (v38 & 1))
  {
    uint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
  unint64_t v33 = v37;
LABEL_19:
  *a3 = *(void *)v43;
  swift_bridgeObjectRelease();
  int v39 = (void *)*a3;
  if ((v22 & 1) == 0)
  {
    sub_10001FC6C();
    swift_bridgeObjectRetain();
    sub_1005E3680();
    sub_100103270(v33, v19, (uint64_t)v29, (uint64_t)v7, v39);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MessageIdentifierSet.insert(_:)();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BA1F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_10070EF40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_1000079E4(v2, (uint64_t)v6, &qword_10070EF40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100007A48((uint64_t)v6, &qword_10070EF40);
    uint64_t result = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
    uint64_t v15 = (uint64_t *)(v2 + *(int *)(result + 24));
    uint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 == v16 >> 1)
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
    }
    else if (v17 < (uint64_t)(v16 >> 1))
    {
      uint64_t v21 = *v15;
      uint64_t v20 = v15[1];
      sub_1001C0048(v20 + *(void *)(v8 + 72) * v17, (uint64_t)v11, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      *uint64_t v15 = v21;
      v15[1] = v20;
      v15[2] = v17 + 1;
      v15[3] = v16;
      sub_1001C0268((uint64_t)v11, a1, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1001C0268((uint64_t)v6, (uint64_t)v13, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
    sub_100007A48(v2, &qword_10070EF40);
    unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v18(v2, 1, 1, v7);
    sub_1001C0048((uint64_t)v13, a1, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
    uint64_t v19 = a1 + *(int *)(v7 + 20);
    swift_bridgeObjectRelease();
    *(void *)(v19 + 8) = &_swiftEmptySetSingleton;
    sub_1001BD160((uint64_t)v13, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v18)(a1, 0, 1, v7);
  }
  return result;
}

Swift::Int sub_1001BA4E0(uint64_t *a1)
{
  uint64_t v178 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v176 = *(void *)(v178 - 8);
  uint64_t v3 = __chkstk_darwin(v178);
  uint64_t v171 = (uint64_t)&v165 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v184 = (uint64_t)&v165 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v165 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v165 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v173 = (char *)&v165 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v172 = (uint64_t)&v165 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v165 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v165 - v20;
  Swift::Int v22 = a1[1];
  Swift::Int result = sub_1005E3210(v22);
  if (result >= v22)
  {
    if (v22 < 0) {
      goto LABEL_199;
    }
    if (v22) {
      return sub_1001BB2A8(0, v22, 1, a1);
    }
    return result;
  }
  if (v22 >= 0) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v22 + 1;
  }
  if (v22 < -1) {
    goto LABEL_207;
  }
  uint64_t v168 = v21;
  uint64_t v169 = v19;
  Swift::Int v166 = result;
  uint64_t v177 = v1;
  if (v22 < 2)
  {
    Swift::Int v28 = (char *)_swiftEmptyArrayStorage;
    unint64_t v175 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
    int v165 = _swiftEmptyArrayStorage;
    if (v22 != 1)
    {
      unint64_t v31 = _swiftEmptyArrayStorage[2];
LABEL_165:
      if (v31 >= 2)
      {
        uint64_t v156 = *a1;
        do
        {
          unint64_t v157 = v31 - 2;
          if (v31 < 2) {
            goto LABEL_194;
          }
          if (!v156) {
            goto LABEL_206;
          }
          uint64_t v158 = v28;
          uint64_t v159 = v28 + 32;
          uint64_t v160 = *(void *)&v28[16 * v157 + 32];
          uint64_t v161 = *(void *)&v28[16 * v31 + 24];
          uint64_t v162 = v177;
          sub_1001BB668(v156 + *(void *)(v176 + 72) * v160, v156 + *(void *)(v176 + 72) * *(void *)&v159[16 * v31 - 16], v156 + *(void *)(v176 + 72) * v161, v175);
          uint64_t v177 = v162;
          if (v162) {
            break;
          }
          if (v161 < v160) {
            goto LABEL_195;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v158 = sub_1000A6DE0((uint64_t)v158);
          }
          if (v157 >= *((void *)v158 + 2)) {
            goto LABEL_196;
          }
          uint64_t v163 = &v158[16 * v157 + 32];
          *(void *)uint64_t v163 = v160;
          *((void *)v163 + 1) = v161;
          unint64_t v164 = *((void *)v158 + 2);
          if (v31 > v164) {
            goto LABEL_197;
          }
          Swift::Int v28 = v158;
          memmove(&v158[16 * v31 + 16], &v158[16 * v31 + 32], 16 * (v164 - v31));
          *((void *)v158 + 2) = v164 - 1;
          unint64_t v31 = v164 - 1;
        }
        while (v164 > 2);
      }
LABEL_176:
      swift_bridgeObjectRelease();
      v165[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v25 = v24 >> 1;
    uint64_t v26 = sub_1005E2150();
    *(void *)(v26 + 16) = v25;
    uint64_t v27 = *(unsigned __int8 *)(v176 + 80);
    int v165 = (void *)v26;
    unint64_t v175 = v26 + ((v27 + 32) & ~v27);
  }
  Swift::Int v29 = v22;
  Swift::Int v30 = 0;
  Swift::Int v28 = (char *)_swiftEmptyArrayStorage;
  uint64_t v187 = v9;
  uint64_t v182 = v12;
  int64_t v179 = a1;
LABEL_15:
  Swift::Int v32 = v30;
  Swift::Int v33 = v30 + 1;
  Swift::Int v174 = v30;
  if (v30 + 1 >= v29)
  {
    Swift::Int v43 = v30 + 1;
    Swift::Int v44 = v30;
    goto LABEL_85;
  }
  uint64_t v167 = v28;
  uint64_t v34 = *a1;
  uint64_t v35 = *(void *)(v176 + 72);
  sub_1001C0048(*a1 + v35 * v33, (uint64_t)v168, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
  uint64_t v170 = v34;
  uint64_t v186 = v35;
  sub_1001C0048(v34 + v35 * v32, (uint64_t)v169, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
  uint64_t v36 = sub_10000566C(&qword_100709E38);
  uint64_t v37 = MessageIdentifierSet.startIndex.getter(v36);
  uint64_t v39 = v38;
  BOOL v41 = v37 == MessageIdentifierSet.endIndex.getter(v36) && v39 == v40;
  char v42 = v41;
  if (v41)
  {
    unsigned int v45 = 0;
  }
  else
  {
    MessageIdentifierSet.subscript.getter();
    unsigned int v45 = v188;
  }
  uint64_t v46 = MessageIdentifierSet.startIndex.getter(v36);
  uint64_t v48 = v47;
  BOOL v50 = v46 == MessageIdentifierSet.endIndex.getter(v36) && v48 == v49;
  int v51 = !v50;
  LODWORD(v185) = v51;
  if (!v50)
  {
    MessageIdentifierSet.subscript.getter();
    unsigned int v52 = v188;
    uint64_t v9 = v187;
    if (v42) {
      goto LABEL_39;
    }
LABEL_36:
    BOOL v53 = v45 >= v52;
    int v54 = v185;
    if (v53) {
      int v54 = 0;
    }
    LODWORD(v185) = v54;
    goto LABEL_39;
  }
  unsigned int v52 = 0;
  uint64_t v9 = v187;
  if ((v42 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_39:
  sub_1001BD160((uint64_t)v169, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
  sub_1001BD160((uint64_t)v168, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
  Swift::Int v183 = v174 + 2;
  if (v174 + 2 >= v29)
  {
LABEL_68:
    uint64_t v12 = v182;
  }
  else
  {
    uint64_t v55 = v170;
    uint64_t v180 = v186 * (v174 + 2);
    uint64_t v181 = v186 * v33;
    uint64_t v57 = v172;
    uint64_t v56 = (uint64_t)v173;
    while (1)
    {
      Swift::Int v58 = v29;
      sub_1001C0048(v55 + v180, v57, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      sub_1001C0048(v55 + v181, v56, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      uint64_t v59 = MessageIdentifierSet.startIndex.getter(v36);
      uint64_t v61 = v60;
      BOOL v63 = v59 == MessageIdentifierSet.endIndex.getter(v36) && v61 == v62;
      BOOL v64 = v63;
      if (v63)
      {
        unsigned int v65 = 0;
      }
      else
      {
        MessageIdentifierSet.subscript.getter();
        unsigned int v65 = v188;
      }
      uint64_t v56 = (uint64_t)v173;
      uint64_t v66 = MessageIdentifierSet.startIndex.getter(v36);
      uint64_t v68 = v67;
      BOOL v70 = v66 == MessageIdentifierSet.endIndex.getter(v36) && v68 == v69;
      BOOL v71 = !v70;
      if (v70)
      {
        unsigned int v72 = 0;
      }
      else
      {
        MessageIdentifierSet.subscript.getter();
        unsigned int v72 = v188;
      }
      uint64_t v9 = v187;
      BOOL v73 = v65 < v72 && v71;
      int v74 = v64 ? v71 : v73;
      sub_1001BD160(v56, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      uint64_t v57 = v172;
      sub_1001BD160(v172, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      if (v185 != v74) {
        break;
      }
      v55 += v186;
      ++v183;
      Swift::Int v29 = v58;
      if (v58 == v183)
      {
        Swift::Int v183 = v58;
        a1 = v179;
        goto LABEL_68;
      }
    }
    a1 = v179;
    uint64_t v12 = v182;
    Swift::Int v29 = v58;
  }
  Swift::Int v28 = v167;
  Swift::Int v44 = v174;
  if (v185)
  {
    Swift::Int v43 = v183;
    if (v183 < v174) {
      goto LABEL_200;
    }
    if (v174 < v183)
    {
      uint64_t v181 = v29;
      uint64_t v75 = 0;
      uint64_t v76 = v186 * (v183 - 1);
      Swift::Int v77 = v183 * v186;
      Swift::Int v78 = v174;
      uint64_t v79 = v174 * v186;
      do
      {
        if (v78 != v43 + v75 - 1)
        {
          uint64_t v81 = v170;
          if (!v170) {
            goto LABEL_205;
          }
          unint64_t v82 = v170 + v79;
          uint64_t v185 = v170 + v76;
          sub_1001C0268(v170 + v79, v171, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          if (v79 < v76 || v82 >= v81 + v77)
          {
            uint64_t v80 = v185;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v80 = v185;
            if (v79 != v76) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          sub_1001C0268(v171, v80, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          Swift::Int v43 = v183;
        }
        ++v78;
        --v75;
        v76 -= v186;
        v77 -= v186;
        v79 += v186;
      }
      while (v78 < v43 + v75);
      Swift::Int v28 = v167;
      Swift::Int v29 = v181;
      uint64_t v12 = v182;
      Swift::Int v44 = v174;
    }
  }
  else
  {
    Swift::Int v43 = v183;
  }
LABEL_85:
  Swift::Int v183 = v43;
  if (v43 >= v29) {
    goto LABEL_117;
  }
  if (__OFSUB__(v43, v44)) {
    goto LABEL_198;
  }
  if (v43 - v44 >= v166) {
    goto LABEL_117;
  }
  if (__OFADD__(v44, v166)) {
    goto LABEL_201;
  }
  if (v44 + v166 >= v29) {
    Swift::Int v83 = v29;
  }
  else {
    Swift::Int v83 = v44 + v166;
  }
  if (v83 >= v44)
  {
    if (v183 == v83) {
      goto LABEL_117;
    }
    uint64_t v167 = v28;
    uint64_t v84 = *(void *)(v176 + 72);
    uint64_t v85 = v84 * (v183 - 1);
    uint64_t v180 = v84;
    uint64_t v186 = v183 * v84;
    uint64_t v170 = v83;
LABEL_97:
    uint64_t v86 = 0;
    Swift::Int v87 = v44;
    uint64_t v181 = v85;
    while (1)
    {
      uint64_t v88 = *a1;
      uint64_t v185 = v186 + v86;
      sub_1001C0048(v186 + v86 + v88, (uint64_t)v12, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      sub_1001C0048(v85 + v86 + v88, (uint64_t)v9, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      uint64_t v89 = sub_10000566C(&qword_100709E38);
      uint64_t v90 = MessageIdentifierSet.startIndex.getter(v89);
      uint64_t v92 = v91;
      BOOL v94 = v90 == MessageIdentifierSet.endIndex.getter(v89) && v92 == v93;
      char v95 = v94;
      if (v94)
      {
        unsigned int v96 = 0;
      }
      else
      {
        MessageIdentifierSet.subscript.getter();
        unsigned int v96 = v188;
      }
      uint64_t v97 = MessageIdentifierSet.startIndex.getter(v89);
      uint64_t v99 = v98;
      if (v97 == MessageIdentifierSet.endIndex.getter(v89) && v99 == v100)
      {
        uint64_t v9 = v187;
        sub_1001BD160((uint64_t)v187, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v12 = v182;
        sub_1001BD160((uint64_t)v182, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        a1 = v179;
        uint64_t v85 = v181;
        goto LABEL_96;
      }
      uint64_t v9 = v187;
      MessageIdentifierSet.subscript.getter();
      if (v95)
      {
        sub_1001BD160((uint64_t)v9, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v12 = v182;
        sub_1001BD160((uint64_t)v182, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v85 = v181;
      }
      else
      {
        unsigned int v101 = v188;
        sub_1001BD160((uint64_t)v9, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v12 = v182;
        sub_1001BD160((uint64_t)v182, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v85 = v181;
        if (v96 >= v101)
        {
          a1 = v179;
LABEL_96:
          v85 += v180;
          v186 += v180;
          ++v183;
          Swift::Int v44 = v174;
          if (v183 != v170) {
            goto LABEL_97;
          }
          Swift::Int v183 = v170;
          Swift::Int v28 = v167;
LABEL_117:
          if (v183 < v44) {
            goto LABEL_193;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::Int v28 = sub_1000A66A4(0, *((void *)v28 + 2) + 1, 1, v28);
          }
          unint64_t v105 = *((void *)v28 + 2);
          unint64_t v104 = *((void *)v28 + 3);
          unint64_t v31 = v105 + 1;
          if (v105 >= v104 >> 1) {
            Swift::Int v28 = sub_1000A66A4((char *)(v104 > 1), v105 + 1, 1, v28);
          }
          *((void *)v28 + 2) = v31;
          uint64_t v106 = v28 + 32;
          uint64_t v107 = &v28[16 * v105 + 32];
          Swift::Int v108 = v183;
          *(void *)uint64_t v107 = v44;
          *((void *)v107 + 1) = v108;
          if (v105)
          {
LABEL_123:
            unint64_t v109 = v31 - 1;
            if (v31 >= 4)
            {
              int v114 = &v106[16 * v31];
              uint64_t v115 = *((void *)v114 - 8);
              uint64_t v116 = *((void *)v114 - 7);
              BOOL v120 = __OFSUB__(v116, v115);
              uint64_t v117 = v116 - v115;
              if (v120) {
                goto LABEL_182;
              }
              uint64_t v119 = *((void *)v114 - 6);
              uint64_t v118 = *((void *)v114 - 5);
              BOOL v120 = __OFSUB__(v118, v119);
              uint64_t v112 = v118 - v119;
              char v113 = v120;
              if (v120) {
                goto LABEL_183;
              }
              unint64_t v121 = v31 - 2;
              uint64_t v122 = &v106[16 * v31 - 32];
              uint64_t v124 = *(void *)v122;
              uint64_t v123 = *((void *)v122 + 1);
              BOOL v120 = __OFSUB__(v123, v124);
              uint64_t v125 = v123 - v124;
              if (v120) {
                goto LABEL_185;
              }
              BOOL v120 = __OFADD__(v112, v125);
              uint64_t v126 = v112 + v125;
              if (v120) {
                goto LABEL_188;
              }
              if (v126 >= v117)
              {
                uint64_t v144 = &v106[16 * v109];
                uint64_t v146 = *(void *)v144;
                uint64_t v145 = *((void *)v144 + 1);
                BOOL v120 = __OFSUB__(v145, v146);
                uint64_t v147 = v145 - v146;
                if (v120) {
                  goto LABEL_192;
                }
                BOOL v137 = v112 < v147;
              }
              else
              {
LABEL_136:
                if (v113) {
                  goto LABEL_184;
                }
                unint64_t v121 = v31 - 2;
                long long v127 = &v106[16 * v31 - 32];
                uint64_t v129 = *(void *)v127;
                uint64_t v128 = *((void *)v127 + 1);
                BOOL v130 = __OFSUB__(v128, v129);
                uint64_t v131 = v128 - v129;
                char v132 = v130;
                if (v130) {
                  goto LABEL_187;
                }
                uint64_t v133 = &v106[16 * v109];
                uint64_t v135 = *(void *)v133;
                uint64_t v134 = *((void *)v133 + 1);
                BOOL v120 = __OFSUB__(v134, v135);
                uint64_t v136 = v134 - v135;
                if (v120) {
                  goto LABEL_190;
                }
                if (__OFADD__(v131, v136)) {
                  goto LABEL_191;
                }
                if (v131 + v136 < v112) {
                  goto LABEL_148;
                }
                BOOL v137 = v112 < v136;
              }
              if (v137) {
                unint64_t v109 = v121;
              }
            }
            else
            {
              if (v31 == 3)
              {
                uint64_t v111 = *((void *)v28 + 4);
                uint64_t v110 = *((void *)v28 + 5);
                BOOL v120 = __OFSUB__(v110, v111);
                uint64_t v112 = v110 - v111;
                char v113 = v120;
                goto LABEL_136;
              }
              uint64_t v138 = *((void *)v28 + 4);
              uint64_t v139 = *((void *)v28 + 5);
              BOOL v120 = __OFSUB__(v139, v138);
              uint64_t v131 = v139 - v138;
              char v132 = v120;
LABEL_148:
              if (v132) {
                goto LABEL_186;
              }
              uint64_t v140 = &v106[16 * v109];
              uint64_t v142 = *(void *)v140;
              uint64_t v141 = *((void *)v140 + 1);
              BOOL v120 = __OFSUB__(v141, v142);
              uint64_t v143 = v141 - v142;
              if (v120) {
                goto LABEL_189;
              }
              if (v143 < v131) {
                goto LABEL_14;
              }
            }
            unint64_t v148 = v109 - 1;
            if (v109 - 1 >= v31)
            {
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
LABEL_194:
              __break(1u);
LABEL_195:
              __break(1u);
LABEL_196:
              __break(1u);
LABEL_197:
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
              break;
            }
            if (!*a1) {
              goto LABEL_204;
            }
            uint64_t v149 = v28;
            uint64_t v150 = &v106[16 * v148];
            uint64_t v151 = *(void *)v150;
            uint64_t v152 = &v106[16 * v109];
            uint64_t v153 = *((void *)v152 + 1);
            uint64_t v154 = v177;
            sub_1001BB668(*a1 + *(void *)(v176 + 72) * *(void *)v150, *a1 + *(void *)(v176 + 72) * *(void *)v152, *a1 + *(void *)(v176 + 72) * v153, v175);
            uint64_t v177 = v154;
            if (v154) {
              goto LABEL_176;
            }
            if (v153 < v151) {
              goto LABEL_179;
            }
            if (v109 > *((void *)v149 + 2)) {
              goto LABEL_180;
            }
            *(void *)uint64_t v150 = v151;
            *(void *)&v106[16 * v148 + 8] = v153;
            unint64_t v155 = *((void *)v149 + 2);
            if (v109 >= v155) {
              goto LABEL_181;
            }
            Swift::Int v28 = v149;
            unint64_t v31 = v155 - 1;
            memmove(&v106[16 * v109], v152 + 16, 16 * (v155 - 1 - v109));
            *((void *)v149 + 2) = v155 - 1;
            uint64_t v9 = v187;
            uint64_t v12 = v182;
            if (v155 <= 2) {
              goto LABEL_14;
            }
            goto LABEL_123;
          }
          unint64_t v31 = 1;
LABEL_14:
          Swift::Int v29 = a1[1];
          Swift::Int v30 = v183;
          if (v183 >= v29) {
            goto LABEL_165;
          }
          goto LABEL_15;
        }
      }
      a1 = v179;
      uint64_t v102 = *v179;
      if (!*v179) {
        goto LABEL_203;
      }
      uint64_t v103 = v102 + v85 + v86;
      sub_1001C0268(v102 + v186 + v86, v184, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      swift_arrayInitWithTakeFrontToBack();
      sub_1001C0268(v184, v103, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      v86 -= v180;
      if (v183 == ++v87) {
        goto LABEL_96;
      }
    }
  }
  __break(1u);
LABEL_203:
  __break(1u);
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1001BB2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int v51 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v6 = __chkstk_darwin(v42);
  uint64_t v48 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v47 = a3;
  uint64_t v40 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v16 = v15 * (v47 - 1);
    Swift::Int v43 = (char *)&v39 - v13;
    uint64_t v44 = v15;
    uint64_t v17 = v15 * v47;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v41;
    uint64_t v45 = v17;
    uint64_t v46 = v16;
    while (1)
    {
      uint64_t v20 = *v51;
      uint64_t v50 = v17 + v18;
      sub_1001C0048(v17 + v18 + v20, (uint64_t)v14, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      uint64_t v49 = v16 + v18;
      uint64_t v21 = (uint64_t)v10;
      sub_1001C0048(v16 + v18 + v20, (uint64_t)v10, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      uint64_t v22 = sub_10000566C(&qword_100709E38);
      uint64_t v23 = MessageIdentifierSet.startIndex.getter(v22);
      uint64_t v25 = v24;
      BOOL v27 = v23 == MessageIdentifierSet.endIndex.getter(v22) && v25 == v26;
      char v28 = v27;
      if (v27)
      {
        unsigned int v29 = 0;
      }
      else
      {
        MessageIdentifierSet.subscript.getter();
        unsigned int v29 = v53;
      }
      uint64_t v30 = MessageIdentifierSet.startIndex.getter(v22);
      uint64_t v32 = v31;
      if (v30 == MessageIdentifierSet.endIndex.getter(v22) && v32 == v33)
      {
        uint64_t v10 = (char *)v21;
        sub_1001BD160(v21, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v14 = v43;
        uint64_t result = sub_1001BD160((uint64_t)v43, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v17 = v45;
        uint64_t v16 = v46;
LABEL_5:
        v16 += v44;
        v17 += v44;
        if (++v47 == v40) {
          return result;
        }
        goto LABEL_6;
      }
      uint64_t v10 = (char *)v21;
      MessageIdentifierSet.subscript.getter();
      if (v28)
      {
        sub_1001BD160(v21, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v14 = v43;
        uint64_t result = sub_1001BD160((uint64_t)v43, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v17 = v45;
        uint64_t v16 = v46;
      }
      else
      {
        unsigned int v34 = v52;
        sub_1001BD160(v21, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v35 = (uint64_t)v43;
        uint64_t result = sub_1001BD160((uint64_t)v43, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        BOOL v36 = v29 >= v34;
        uint64_t v14 = (char *)v35;
        uint64_t v17 = v45;
        uint64_t v16 = v46;
        if (v36) {
          goto LABEL_5;
        }
      }
      uint64_t v37 = *v51;
      if (!*v51) {
        break;
      }
      uint64_t v38 = v37 + v16 + v18;
      sub_1001C0268(v37 + v17 + v18, v48, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1001C0268(v48, v38, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      v18 -= v44;
      if (v47 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BB668(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v75 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v8 = __chkstk_darwin(v75);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v71 - v13;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v71 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_100;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_101;
  }
  uint64_t v21 = (uint64_t)(a2 - a1) / v19;
  unint64_t v81 = a1;
  unint64_t v80 = a4;
  uint64_t v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      unint64_t v77 = v15;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v44 = a4 + v24;
      unint64_t v79 = a4 + v24;
      unint64_t v81 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        unint64_t v73 = a1;
        unint64_t v74 = a4;
        uint64_t v46 = -v19;
        uint64_t v72 = -v19;
        do
        {
          sub_1001C0048(v44 + v46, v77, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          unint64_t v76 = a2;
          unint64_t v47 = a2 + v46;
          sub_1001C0048(a2 + v46, (uint64_t)v10, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          uint64_t v48 = sub_10000566C(&qword_100709E38);
          uint64_t v49 = MessageIdentifierSet.startIndex.getter(v48);
          uint64_t v51 = v50;
          BOOL v53 = v49 == MessageIdentifierSet.endIndex.getter(v48) && v51 == v52;
          char v54 = v53;
          unint64_t v55 = a3;
          if (v53)
          {
            unsigned int v56 = 0;
          }
          else
          {
            MessageIdentifierSet.subscript.getter();
            unsigned int v56 = v78;
          }
          uint64_t v57 = (uint64_t)v10;
          uint64_t v58 = MessageIdentifierSet.startIndex.getter(v48);
          uint64_t v60 = v59;
          BOOL v62 = v58 == MessageIdentifierSet.endIndex.getter(v48) && v60 == v61;
          char v63 = !v62;
          if (v62)
          {
            unsigned int v64 = 0;
          }
          else
          {
            MessageIdentifierSet.subscript.getter();
            unsigned int v64 = v78;
          }
          if (v56 < v64) {
            char v65 = v63;
          }
          else {
            char v65 = 0;
          }
          if (v54) {
            char v66 = v63;
          }
          else {
            char v66 = v65;
          }
          uint64_t v46 = v72;
          a3 = v55 + v72;
          sub_1001BD160(v57, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          sub_1001BD160(v77, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          uint64_t v10 = (char *)v57;
          if (v66)
          {
            unint64_t v68 = v73;
            unint64_t v67 = v74;
            if (v55 < v76 || a3 >= v76)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v55 != v76)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v81 += v46;
          }
          else
          {
            unint64_t v69 = v79;
            v79 += v46;
            unint64_t v68 = v73;
            unint64_t v67 = v74;
            if (v55 < v69 || a3 >= v69)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v55 != v69)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v47 = v76;
          }
          unint64_t v44 = v79;
          if (v79 <= v67) {
            break;
          }
          a2 = v47;
        }
        while (v47 > v68);
      }
LABEL_98:
      sub_1000A6B5C(&v81, &v80, (uint64_t *)&v79);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v77 = a4 + v23;
    unint64_t v79 = a4 + v23;
    BOOL v25 = v23 < 1 || a2 >= a3;
    if (!v25)
    {
      unint64_t v76 = a3;
      unint64_t v74 = v19;
      while (1)
      {
        sub_1001C0048(a2, (uint64_t)v17, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        sub_1001C0048(a4, (uint64_t)v14, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
        uint64_t v26 = sub_10000566C(&qword_100709E38);
        uint64_t v27 = MessageIdentifierSet.startIndex.getter(v26);
        uint64_t v29 = v28;
        BOOL v31 = v27 == MessageIdentifierSet.endIndex.getter(v26) && v29 == v30;
        BOOL v32 = v31;
        if (v31)
        {
          unsigned int v33 = 0;
        }
        else
        {
          MessageIdentifierSet.subscript.getter();
          unsigned int v33 = v78;
        }
        uint64_t v34 = MessageIdentifierSet.startIndex.getter(v26);
        uint64_t v36 = v35;
        if (v34 == MessageIdentifierSet.endIndex.getter(v26) && v36 == v37) {
          break;
        }
        MessageIdentifierSet.subscript.getter();
        if (v32)
        {
          sub_1001BD160((uint64_t)v14, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          sub_1001BD160((uint64_t)v17, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          unint64_t v38 = v76;
          unint64_t v39 = v74;
        }
        else
        {
          unsigned int v43 = v78;
          sub_1001BD160((uint64_t)v14, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          sub_1001BD160((uint64_t)v17, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
          BOOL v25 = v33 >= v43;
          unint64_t v38 = v76;
          unint64_t v39 = v74;
          if (v25) {
            goto LABEL_35;
          }
        }
        unint64_t v40 = v81;
        unint64_t v42 = a2 + v39;
        if (v81 < a2 || v81 >= v42)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v81 == a2)
        {
          unint64_t v40 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_50:
        unint64_t v81 = v40 + v39;
        a4 = v80;
        if (v80 < v77)
        {
          a2 = v42;
          if (v42 < v38) {
            continue;
          }
        }
        goto LABEL_98;
      }
      sub_1001BD160((uint64_t)v14, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      sub_1001BD160((uint64_t)v17, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
      unint64_t v38 = v76;
      unint64_t v39 = v74;
LABEL_35:
      unint64_t v40 = v81;
      unint64_t v41 = v80 + v39;
      if (v81 < v80 || v81 >= v41)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v81 != v80)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v80 = v41;
      unint64_t v42 = a2;
      goto LABEL_50;
    }
    goto LABEL_98;
  }
LABEL_102:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t *sub_1001BBD70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = sub_10000566C(&qword_10070EF40);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = sub_10000566C(&qword_100709E60);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = *(int *)(v9 + 20);
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        unint64_t v15 = (uint64_t *)((char *)a2 + v13);
        uint64_t v16 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v16;
        uint64_t v17 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17(a1, 0, 1, v9);
      }
      uint64_t v18 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
      *(uint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 20));
      uint64_t v19 = *(int *)(v18 + 24);
      int64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *(void *)int64_t v20 = *(void *)v21;
      *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
      *((void *)v20 + 3) = *((void *)v21 + 3);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v22 = sub_10000566C(&qword_10070EF48);
      *(uint64_t *)((char *)a1 + *(int *)(v22 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v22 + 48));
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for UploadFlagChanges.EncodedFlags.Element(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070F0F0);
}

uint64_t type metadata accessor for UploadFlagChanges.EncodedFlags(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_10070F050);
}

uint64_t sub_1001BC024(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result != 1) {
      return result;
    }
    uint64_t v3 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3))
    {
      uint64_t v4 = sub_10000566C(&qword_100709E60);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    type metadata accessor for UploadFlagChanges.EncodedFlags(0);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_10000566C(&qword_10070EF48);
  }
  return swift_bridgeObjectRelease();
}

void *sub_1001BC144(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000566C(&qword_10070EF40);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(v7 + 20);
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      uint64_t v14 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v14;
      unint64_t v15 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(a1, 0, 1, v7);
    }
    uint64_t v16 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
    *(void *)((char *)a1 + *(int *)(v16 + 20)) = *(void *)((char *)a2 + *(int *)(v16 + 20));
    uint64_t v17 = *(int *)(v16 + 24);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
    *((void *)v18 + 3) = *((void *)v19 + 3);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v20 = sub_10000566C(&qword_10070EF48);
    *(void *)((char *)a1 + *(int *)(v20 + 48)) = *(void *)((char *)a2 + *(int *)(v20 + 48));
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1001BC374(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001BD160((uint64_t)a1, type metadata accessor for UploadFlagChanges.FlagsToUpload);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_10000566C(&qword_10070EF40);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v10 = sub_10000566C(&qword_100709E60);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = *(int *)(v7 + 20);
        uint64_t v12 = (void *)((char *)a1 + v11);
        uint64_t v13 = (void *)((char *)a2 + v11);
        *uint64_t v12 = *v13;
        v12[1] = v13[1];
        uint64_t v14 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14(a1, 0, 1, v7);
      }
      uint64_t v15 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
      *(void *)((char *)a1 + *(int *)(v15 + 20)) = *(void *)((char *)a2 + *(int *)(v15 + 20));
      uint64_t v16 = *(int *)(v15 + 24);
      uint64_t v17 = (void *)((char *)a1 + v16);
      uint64_t v18 = (void *)((char *)a2 + v16);
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      void v17[2] = v18[2];
      v17[3] = v18[3];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_10000566C(&qword_10070EF48);
      *(void *)((char *)a1 + *(int *)(v19 + 48)) = *(void *)((char *)a2 + *(int *)(v19 + 48));
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for UploadFlagChanges.FlagsToUpload(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070EFC0);
}

char *sub_1001BC5F8(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_10000566C(&qword_10070EF40);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v9 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      *(_OWORD *)&a1[*(int *)(v6 + 20)] = *(_OWORD *)&a2[*(int *)(v6 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v10 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
    *(void *)&a1[*(int *)(v10 + 20)] = *(void *)&a2[*(int *)(v10 + 20)];
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
    uint64_t v15 = sub_10000566C(&qword_10070EF48);
    *(void *)&a1[*(int *)(v15 + 48)] = *(void *)&a2[*(int *)(v15 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1001BC7C8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001BD160((uint64_t)a1, type metadata accessor for UploadFlagChanges.FlagsToUpload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_10000566C(&qword_10070EF40);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v9 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        *(_OWORD *)&a1[*(int *)(v6 + 20)] = *(_OWORD *)&a2[*(int *)(v6 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v10 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
      *(void *)&a1[*(int *)(v10 + 20)] = *(void *)&a2[*(int *)(v10 + 20)];
      uint64_t v11 = *(int *)(v10 + 24);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      long long v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
      uint64_t v15 = sub_10000566C(&qword_10070EF48);
      *(void *)&a1[*(int *)(v15 + 48)] = *(void *)&a2[*(int *)(v15 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001BC9BC()
{
  v2[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UploadFlagChanges.EncodedFlags(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1001BCA6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000566C(&qword_10070EF40);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_10000566C(&qword_100709E60);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      long long v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      void *v13 = *v14;
      v13[1] = v15;
      uint64_t v16 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(a1, 0, 1, v7);
    }
    uint64_t v17 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
    *((void *)v18 + 3) = *((void *)v19 + 3);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1001BCC58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    uint64_t v3 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

char *sub_1001BCD40(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000566C(&qword_10070EF40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    long long v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
  *((void *)v16 + 3) = *((void *)v17 + 3);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

char *sub_1001BCEDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(a1, a2, v21);
      uint64_t v22 = *(int *)(v6 + 20);
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      *(void *)&a1[v22] = *(void *)&a2[v22];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v23 + 1) = *((void *)v24 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1001BD160((uint64_t)a1, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v16 = sub_10000566C(&qword_10070EF40);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = &a1[v12];
  long long v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  *((void *)v18 + 2) = *((void *)v19 + 2);
  *((void *)v18 + 3) = *((void *)v19 + 3);
  return a1;
}

uint64_t sub_1001BD160(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1001BD1C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000566C(&qword_10070EF40);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_10000566C(&qword_100709E60);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(_OWORD *)&a1[*(int *)(v6 + 20)] = *(_OWORD *)&a2[*(int *)(v6 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  return a1;
}

char *sub_1001BD324(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(a1, a2, v17);
      uint64_t v18 = *(int *)(v6 + 20);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      *(void *)&a1[v18] = *(void *)&a2[v18];
      swift_bridgeObjectRelease();
      *((void *)v19 + 1) = *((void *)v20 + 1);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1001BD160((uint64_t)a1, type metadata accessor for UploadFlagChanges.EncodedFlags.Element);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v12 = sub_10000566C(&qword_10070EF40);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_10000566C(&qword_100709E60);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  *(_OWORD *)&a1[*(int *)(v6 + 20)] = *(_OWORD *)&a2[*(int *)(v6 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 24);
  long long v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)&a1[v13] = *(void *)v15;
  swift_unknownObjectRelease();
  *((void *)v14 + 1) = *((void *)v15 + 1);
  *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
  return a1;
}

uint64_t sub_1001BD564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BD578);
}

uint64_t sub_1001BD578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BDA8C(a1, a2, a3, &qword_10070EF40);
}

uint64_t sub_1001BD584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BD598);
}

uint64_t sub_1001BD598(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001BDB6C(a1, a2, a3, a4, &qword_10070EF40);
}

void sub_1001BD5A4()
{
  sub_1001BD648();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001BD648()
{
  if (!qword_10070F060)
  {
    type metadata accessor for UploadFlagChanges.EncodedFlags.Element(255);
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10070F060);
    }
  }
}

uint64_t *sub_1001BD6A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    int v9 = (uint64_t *)((char *)a1 + v8);
    int v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *int v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001BD784(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BD808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  int v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001BD89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  int v9 = (void *)(a2 + v7);
  *(void *)(a1 + v7) = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 8) = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001BD94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001BD9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  int v9 = (void *)(a2 + v7);
  *(void *)(a1 + v7) = *v9;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 8) = v9[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001BDA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BDA80);
}

uint64_t sub_1001BDA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BDA8C(a1, a2, a3, &qword_100709E38);
}

uint64_t sub_1001BDA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_10000566C(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1001BDB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BDB60);
}

uint64_t sub_1001BDB60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001BDB6C(a1, a2, a3, a4, &qword_100709E38);
}

uint64_t sub_1001BDB6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = sub_10000566C(a5);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1001BDC28()
{
  sub_100069220();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1001BDCBC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) == 0)
  {
    *(void *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(void *)(a1 + 24) = a2[3];
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = a2[7];
    uint64_t v8 = a2 + 8;
    long long v9 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 88) = v9;
    uint64_t v10 = v9;
    unint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(a1 + 64, v8, v10);
    uint64_t v12 = a3[8];
    uint64_t v13 = (void *)(a1 + v12);
    long long v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
      {
        uint64_t v19 = sub_10000566C(&qword_10070EF40);
        memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = sub_10000566C(&qword_100709E60);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v13, v14, v20);
        uint64_t v21 = *(int *)(v17 + 20);
        uint64_t v22 = (void *)((char *)v13 + v21);
        uint64_t v23 = (void *)((char *)v14 + v21);
        uint64_t v24 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v24;
        BOOL v25 = *(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25(v13, 0, 1, v17);
      }
      uint64_t v26 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
      *(void *)((char *)v13 + *(int *)(v26 + 20)) = *(void *)((char *)v14 + *(int *)(v26 + 20));
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = (char *)v13 + v27;
      uint64_t v29 = (char *)v14 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      *(_OWORD *)(v28 + 8) = *(_OWORD *)(v29 + 8);
      *((void *)v28 + 3) = *((void *)v29 + 3);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v30 = sub_10000566C(&qword_10070EF48);
      *(void *)((char *)v13 + *(int *)(v30 + 48)) = *(void *)((char *)v14 + *(int *)(v30 + 48));
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_12:
        uint64_t v31 = a3[10];
        *(unsigned char *)(a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
        uint64_t v32 = a1 + v31;
        uint64_t v33 = (uint64_t)a2 + v31;
        uint64_t v34 = sub_10000566C(&qword_100709E60);
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
        v35(v32, v33, v34);
        v35(a1 + a3[11], (uint64_t)a2 + a3[11], v34);
        uint64_t v36 = a3[13];
        *(unsigned char *)(a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
        *(unsigned char *)(a1 + v36) = *((unsigned char *)a2 + v36);
        return a1;
      }
      void *v13 = *v14;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return a1;
}

uint64_t sub_1001BE078(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  uint64_t v4 = a1 + a2[8];
  type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      goto LABEL_7;
    }
    uint64_t v6 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6))
    {
      uint64_t v7 = sub_10000566C(&qword_100709E60);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    type metadata accessor for UploadFlagChanges.EncodedFlags(0);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_10000566C(&qword_10070EF48);
  }
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = sub_10000566C(&qword_100709E60);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v12)((void *)(v9 - 8), v8, v9);
  uint64_t v10 = a1 + a2[11];
  return v12(v10, v9);
}

uint64_t sub_1001BE244(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v7 = a2 + 64;
  long long v8 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(a1 + 64, v7, v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v16 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
    {
      uint64_t v18 = sub_10000566C(&qword_10070EF40);
      memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_10000566C(&qword_100709E60);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
      uint64_t v20 = *(int *)(v16 + 20);
      uint64_t v21 = (void *)((char *)v12 + v20);
      uint64_t v22 = (void *)((char *)v13 + v20);
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      uint64_t v24 = *(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v12, 0, 1, v16);
    }
    uint64_t v25 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
    *(void *)((char *)v12 + *(int *)(v25 + 20)) = *(void *)((char *)v13 + *(int *)(v25 + 20));
    uint64_t v26 = *(int *)(v25 + 24);
    uint64_t v27 = (char *)v12 + v26;
    uint64_t v28 = (char *)v13 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    *(_OWORD *)(v27 + 8) = *(_OWORD *)(v28 + 8);
    *((void *)v27 + 3) = *((void *)v28 + 3);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v29 = sub_10000566C(&qword_10070EF48);
    *(void *)((char *)v12 + *(int *)(v29 + 48)) = *(void *)((char *)v13 + *(int *)(v29 + 48));
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v12 = *v13;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    goto LABEL_10;
  }
  memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_10:
  uint64_t v30 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_10000566C(&qword_100709E60);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  v34(v31, v32, v33);
  v34(a1 + a3[11], a2 + a3[11], v33);
  uint64_t v35 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  return a1;
}

uint64_t sub_1001BE5B0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  if (a1 != a2)
  {
    uint64_t v6 = a3[8];
    uint64_t v7 = (void *)(a1 + v6);
    long long v8 = (void *)(a2 + v6);
    sub_1001BD160(a1 + v6, type metadata accessor for UploadFlagChanges.FlagsToUpload);
    uint64_t v9 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = sub_10000566C(&qword_10070EF40);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v14 = sub_10000566C(&qword_100709E60);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
        uint64_t v15 = *(int *)(v11 + 20);
        uint64_t v16 = (void *)((char *)v7 + v15);
        uint64_t v17 = (void *)((char *)v8 + v15);
        *uint64_t v16 = *v17;
        v16[1] = v17[1];
        uint64_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18(v7, 0, 1, v11);
      }
      uint64_t v19 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
      *(void *)((char *)v7 + *(int *)(v19 + 20)) = *(void *)((char *)v8 + *(int *)(v19 + 20));
      uint64_t v20 = *(int *)(v19 + 24);
      uint64_t v21 = (void *)((char *)v7 + v20);
      uint64_t v22 = (void *)((char *)v8 + v20);
      *uint64_t v21 = *v22;
      v21[1] = v22[1];
      _OWORD v21[2] = v22[2];
      v21[3] = v22[3];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v23 = sub_10000566C(&qword_10070EF48);
      *(void *)((char *)v7 + *(int *)(v23 + 48)) = *(void *)((char *)v8 + *(int *)(v23 + 48));
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      void *v7 = *v8;
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
LABEL_11:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_10000566C(&qword_100709E60);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24);
  v28(v25, v26, v27);
  v28(a1 + a3[11], a2 + a3[11], v27);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1001BE940(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = a3[8];
  long long v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      uint64_t v13 = sub_10000566C(&qword_10070EF40);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_10000566C(&qword_100709E60);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
      *(_OWORD *)&v8[*(int *)(v11 + 20)] = *(_OWORD *)&v9[*(int *)(v11 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    uint64_t v15 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
    *(void *)&v8[*(int *)(v15 + 20)] = *(void *)&v9[*(int *)(v15 + 20)];
    uint64_t v16 = *(int *)(v15 + 24);
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    long long v19 = *((_OWORD *)v18 + 1);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    uint64_t v20 = sub_10000566C(&qword_10070EF48);
    *(void *)&v8[*(int *)(v20 + 48)] = *(void *)&v9[*(int *)(v20 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v21 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_10000566C(&qword_100709E60);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v25(a1 + a3[11], a2 + a3[11], v24);
  uint64_t v26 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  return a1;
}

uint64_t sub_1001BEBF0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  if (a1 != a2)
  {
    uint64_t v7 = a3[8];
    long long v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_1001BD160(a1 + v7, type metadata accessor for UploadFlagChanges.FlagsToUpload);
    uint64_t v10 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UploadFlagChanges.EncodedFlags.Element(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        uint64_t v13 = sub_10000566C(&qword_10070EF40);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v14 = sub_10000566C(&qword_100709E60);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
        *(_OWORD *)&v8[*(int *)(v11 + 20)] = *(_OWORD *)&v9[*(int *)(v11 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      uint64_t v15 = type metadata accessor for UploadFlagChanges.EncodedFlags(0);
      *(void *)&v8[*(int *)(v15 + 20)] = *(void *)&v9[*(int *)(v15 + 20)];
      uint64_t v16 = *(int *)(v15 + 24);
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      long long v19 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v19;
      uint64_t v20 = sub_10000566C(&qword_10070EF48);
      *(void *)&v8[*(int *)(v20 + 48)] = *(void *)&v9[*(int *)(v20 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v21 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_10000566C(&qword_100709E60);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40);
  v25(v22, v23, v24);
  v25(a1 + a3[11], a2 + a3[11], v24);
  uint64_t v26 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  return a1;
}

uint64_t sub_1001BEEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BEF10);
}

uint64_t sub_1001BEF10(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E38);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1001BF040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BF054);
}

void *sub_1001BF054(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UploadFlagChanges.FlagsToUpload(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100709E38);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 40);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for UploadFlagChanges(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070F180);
}

void sub_1001BF1A4()
{
  type metadata accessor for UploadFlagChanges.FlagsToUpload(319);
  if (v0 <= 0x3F)
  {
    sub_100069220();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1001BF2A8()
{
  unint64_t result = qword_10070F1D8;
  if (!qword_10070F1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F1D8);
  }
  return result;
}

unint64_t sub_1001BF300()
{
  unint64_t result = qword_10070F1E0;
  if (!qword_10070F1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F1E0);
  }
  return result;
}

unint64_t sub_1001BF354(uint64_t a1)
{
  unint64_t result = sub_1001BF37C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001BF37C()
{
  unint64_t result = qword_10070F298;
  if (!qword_10070F298)
  {
    type metadata accessor for UploadFlagChanges(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F298);
  }
  return result;
}

uint64_t sub_1001BF3D4(uint64_t a1)
{
  return sub_1001B86E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001BF3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001A9D34(0, a4);
  uint64_t v12 = v11[2];
  uint64_t v21 = a1;
  if (v12)
  {
    uint64_t v13 = 0;
    while ((sub_100149D30(*((_DWORD *)v11 + v13 + 8), a2, a3) & 1) == 0)
    {
      if (v12 == ++v13) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1001A9D34(1, a4);
    uint64_t v15 = v14[2];
    if (!v15)
    {
LABEL_9:
      return swift_bridgeObjectRelease();
    }
    uint64_t v16 = 0;
    while ((sub_100149D30(*((_DWORD *)v14 + v16 + 8), a2, a3) & 1) == 0)
    {
      if (v15 == ++v16) {
        goto LABEL_9;
      }
    }
  }
  uint64_t v18 = v21;
  swift_bridgeObjectRelease();
  sub_1001C0048(v18, (uint64_t)v10, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload() != 19) {
    return sub_1001BD160((uint64_t)v10, type metadata accessor for UntaggedResponse);
  }
  memcpy(v23, v10, 0x248uLL);
  if (v23[64] && BYTE4(v23[1]) != 1)
  {
    v22[0] = v23[1];
    type metadata accessor for UploadFlagChanges(0);
    uint64_t v19 = sub_10000566C(&qword_100709E38);
    MessageIdentifierSet.remove(_:)((uint64_t)v22, v19);
  }
  return sub_100061150((uint64_t)v23);
}

uint64_t sub_1001BF60C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v77 = a5;
  unint64_t v76 = (char *)type metadata accessor for MailboxTaskLogger(0);
  uint64_t v9 = __chkstk_darwin(v76);
  uint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v73 - v12;
  uint64_t v14 = sub_1005E0ED0();
  uint64_t v78 = *(void *)(v14 - 8);
  uint64_t v79 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = ((char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v73 - v18;
  uint64_t v20 = sub_10000566C(&qword_100709E38);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v73 - v25;
  int v27 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  if (v27 == 15)
  {
    uint64_t v49 = a1 & 0xFFFFFFFFFFFFFFBLL;
    if (v80[1] == *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18))
    {
      uint64_t v50 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v51 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t result = sub_1000255D4(*v80, *(void *)(v49 + 16));
      if (result)
      {
        uint64_t v75 = v50;
        uint64_t v52 = sub_100105454(1, a4);
        uint64_t v53 = v52[2];
        if (v53)
        {
          uint64_t v54 = 0;
          while ((sub_1001652E0(*((_DWORD *)v52 + v54 + 8), a2, a3) & 1) == 0)
          {
            if (v53 == ++v54) {
              goto LABEL_11;
            }
          }
          swift_bridgeObjectRelease();
          if ((v51 & 1) == 0) {
            *((unsigned char *)v80 + *(int *)(type metadata accessor for UploadFlagChanges(0) + 48)) = 1;
          }
          uint64_t v57 = v77;
          uint64_t v58 = v78;
          uint64_t v59 = v17;
          uint64_t v60 = v79;
          (*(void (**)(NSObject *, uint64_t, uint64_t))(v78 + 16))(v17, v77, v79);
          sub_1001C0048(v57, (uint64_t)v11, type metadata accessor for MailboxTaskLogger);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v61 = v75;
          swift_bridgeObjectRetain_n();
          BOOL v62 = sub_1005E0EB0();
          os_log_type_t v63 = sub_1005E25C0();
          if (os_log_type_enabled(v62, v63))
          {
            uint64_t v64 = swift_slowAlloc();
            os_log_t v74 = v59;
            uint64_t v65 = v64;
            uint64_t v73 = swift_slowAlloc();
            v83[0] = v73;
            *(_DWORD *)uint64_t v65 = 68159491;
            LODWORD(v81) = 2;
            sub_1005E2960();
            *(_WORD *)(v65 + 8) = 256;
            char v66 = &v11[*((int *)v76 + 5)];
            LOBYTE(v81) = *v66;
            sub_1005E2960();
            *(_WORD *)(v65 + 11) = 2082;
            unint64_t v76 = v11;
            uint64_t v67 = *((void *)v66 + 1);
            unint64_t v68 = *((void *)v66 + 2);
            swift_bridgeObjectRetain();
            uint64_t v81 = sub_1000C6914(v67, v68, v83);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v65 + 21) = 1040;
            LODWORD(v81) = 2;
            sub_1005E2960();
            *(_WORD *)(v65 + 27) = 512;
            LOWORD(v81) = *((_WORD *)v66 + 12);
            uint64_t v61 = v75;
            sub_1005E2960();
            *(_WORD *)(v65 + 31) = 2160;
            uint64_t v81 = 0x786F626C69616DLL;
            sub_1005E2960();
            *(_WORD *)(v65 + 41) = 2085;
            int v69 = *((_DWORD *)v66 + 10);
            uint64_t v81 = *((void *)v66 + 4);
            int v82 = v69;
            swift_bridgeObjectRetain();
            uint64_t v70 = sub_1005E1CC0();
            uint64_t v81 = sub_1000C6914(v70, v71, v83);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1001BD160((uint64_t)v76, type metadata accessor for MailboxTaskLogger);
            *(_WORD *)(v65 + 51) = 2048;
            uint64_t v72 = *(void *)(v61 + 16);
            swift_bridgeObjectRelease();
            uint64_t v81 = v72;
            sub_1005E2960();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v62, v63, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received local flag changes for %ld messages.", (uint8_t *)v65, 0x3Du);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(os_log_t, uint64_t))(v78 + 8))(v74, v79);
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_1001BD160((uint64_t)v11, type metadata accessor for MailboxTaskLogger);

            swift_bridgeObjectRelease();
            (*(void (**)(NSObject *, uint64_t))(v58 + 8))(v59, v60);
          }
          return sub_1001B7D04(v61, v77);
        }
        else
        {
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t result = type metadata accessor for UploadFlagChanges(0);
          *((unsigned char *)v80 + *(int *)(result + 48)) = 1;
        }
      }
    }
  }
  else if (v27 == 16)
  {
    uint64_t v75 = result;
    uint64_t v28 = sub_10000566C(&qword_10070F2A0);
    uint64_t v29 = swift_projectBox();
    sub_1000079E4(v29 + *(int *)(v28 + 48), (uint64_t)v26, &qword_100709E38);
    uint64_t v30 = v78;
    uint64_t v31 = v79;
    uint64_t v32 = v19;
    uint64_t v33 = v19;
    uint64_t v34 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v33, v77, v79);
    sub_1001C0048(v34, (uint64_t)v13, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1000079E4((uint64_t)v26, (uint64_t)v23, &qword_100709E38);
    uint64_t v35 = sub_1005E0EB0();
    os_log_type_t v36 = sub_1005E25C0();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      v83[0] = v77;
      *(_DWORD *)uint64_t v38 = 68159491;
      LODWORD(v81) = 2;
      uint64_t v73 = (uint64_t)v32;
      sub_1005E2960();
      *(_WORD *)(v38 + 8) = 256;
      uint64_t v39 = *((int *)v76 + 5);
      os_log_t v74 = v35;
      LODWORD(v76) = v37;
      unint64_t v40 = &v13[v39];
      LOBYTE(v81) = v13[v39];
      sub_1005E2960();
      *(_WORD *)(v38 + 11) = 2082;
      uint64_t v41 = *((void *)v40 + 1);
      unint64_t v42 = *((void *)v40 + 2);
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_1000C6914(v41, v42, v83);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 21) = 1040;
      LODWORD(v81) = 2;
      sub_1005E2960();
      *(_WORD *)(v38 + 27) = 512;
      LOWORD(v81) = *((_WORD *)v40 + 12);
      sub_1005E2960();
      *(_WORD *)(v38 + 31) = 2160;
      uint64_t v81 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v38 + 41) = 2085;
      int v43 = *((_DWORD *)v40 + 10);
      uint64_t v81 = *((void *)v40 + 4);
      int v82 = v43;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1005E1CC0();
      uint64_t v81 = sub_1000C6914(v44, v45, v83);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001BD160((uint64_t)v13, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v38 + 51) = 2048;
      MessageIdentifierSet.count.getter();
      uint64_t v47 = v46;
      sub_100007A48((uint64_t)v23, &qword_100709E38);
      uint64_t v81 = v47;
      sub_1005E2960();
      os_log_t v48 = v74;
      _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v76, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] %ld messages have flag changes after copy", (uint8_t *)v38, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v73, v79);
    }
    else
    {
      sub_100007A48((uint64_t)v23, &qword_100709E38);
      sub_1001BD160((uint64_t)v13, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
    }
    sub_10000566C(&qword_100709E60);
    char v55 = sub_1005E3630();
    sub_100007A48((uint64_t)v26, &qword_100709E38);
    if (v55) {
      char v56 = 2;
    }
    else {
      char v56 = 3;
    }
    uint64_t result = type metadata accessor for UploadFlagChanges(0);
    *((unsigned char *)v80 + *(int *)(result + 52)) = v56;
  }
  return result;
}

uint64_t sub_1001C0048(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001C00B0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001C00E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001C0128(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001C01C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001C0268(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for UploadFlagChanges.CommandID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C039CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.CommandID()
{
  return &type metadata for UploadFlagChanges.CommandID;
}

uint64_t getEnumTagSinglePayload for DownloadRequest.QoS(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UploadFlagChanges.ActionID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C0530);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.ActionID()
{
  return &type metadata for UploadFlagChanges.ActionID;
}

unsigned char *storeEnumTagSinglePayload for UploadFlagChanges.DependencyStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C0634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadFlagChanges.DependencyStatus()
{
  return &type metadata for UploadFlagChanges.DependencyStatus;
}

unint64_t sub_1001C0670()
{
  unint64_t result = qword_10070F2C8;
  if (!qword_10070F2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F2C8);
  }
  return result;
}

unint64_t sub_1001C06C8()
{
  unint64_t result = qword_10070F2D0;
  if (!qword_10070F2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F2D0);
  }
  return result;
}

uint64_t sub_1001C071C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3] >> 1;
  if (v2 == v3)
  {
    *(_OWORD *)a1 = xmmword_1005F66D0;
  }
  else if (v2 < v3)
  {
    unsigned int v4 = (uint64_t *)(v1[1] + 16 * v2);
    uint64_t v5 = *v4;
    unint64_t v6 = v4[1];
    v1[2] = v2 + 1;
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    return sub_100008D24(v5, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1001C0760(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = a2[1];
  if (v2 >> 60 == 11) {
    return v3 >> 60 == 11;
  }
  if (v2 >> 60 == 15) {
    return v3 >> 60 == 15;
  }
  if (((v3 >> 60) | 4) == 0xF) {
    return 0;
  }
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  sub_10003E058(*a1, v2);
  sub_10003E058(v6, v3);
  char v7 = sub_100077894(v5, v2, v6, v3);
  sub_10003E070(v6, v3);
  sub_10003E070(v5, v2);
  return v7 & 1;
}

uint64_t sub_1001C0838(uint64_t a1, uint64_t a2)
{
  return sub_1001C5DD0(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

Swift::Int sub_1001C084C()
{
  Swift::Int result = sub_10001DF10((uint64_t)&off_1006BA448);
  qword_1007617E8 = result;
  return result;
}

uint64_t sub_1001C0874(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned char *)a2 + 8)) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = v2 == v3;
  }
  unsigned int v6 = v5;
  BOOL v8 = v4 == 1 && v2 == v3;
  BOOL v10 = v4 == 2 && v3 == 0;
  BOOL v12 = v4 == 2 && v3 == 1;
  if (v2) {
    BOOL v13 = v12;
  }
  else {
    BOOL v13 = v10;
  }
  if (*((unsigned char *)a1 + 8) == 1) {
    BOOL v13 = v8;
  }
  if (*((unsigned char *)a1 + 8)) {
    return v13;
  }
  else {
    return v6;
  }
}

uint64_t sub_1001C08D0(uint64_t a1, uint64_t a2)
{
  return sub_1001C5C48(*(void *)a1, *(unsigned __int8 *)(a1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 9) << 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 9) << 8));
}

uint64_t sub_1001C0900(uint64_t a1, uint64_t a2)
{
  return sub_1001C5CCC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 25) << 8), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 25) << 8));
}

double sub_1001C093C@<D0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  char v11 = a2 & 1;
  *(void *)(a6 + 40) = sub_10009A7D4((uint64_t)&off_1006BA470);
  *(unsigned char *)(a6 + 48) = 0;
  BOOL v12 = (int *)type metadata accessor for UploadMessages(0);
  uint64_t v13 = a6 + v12[13];
  uint64_t v14 = type metadata accessor for UploadMessages.PendingUpload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_OWORD *)(a6 + v12[14]) = xmmword_1005F66D0;
  *(unsigned char *)(a6 + v12[18]) = 0;
  int v15 = *(_DWORD *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a6 = *(_OWORD *)a1;
  *(_OWORD *)(a6 + 16) = v16;
  *(_DWORD *)(a6 + 32) = v15;
  *(void *)(a6 + 56) = v12;
  sub_10003BC88();
  swift_bridgeObjectRetain();
  sub_1005E2BF0();
  *(unsigned char *)(a6 + 104) = v11;
  *(unsigned char *)(a6 + 105) = (a3 & 1) == 0;
  *(void *)(a6 + 112) = a4;
  *(unsigned char *)(a6 + 120) = a5;
  *(void *)(a6 + 128) = _swiftEmptyArrayStorage;
  *(void *)(a6 + 136) = _swiftEmptyArrayStorage;
  *(void *)(a6 + 144) = &_swiftEmptyArrayStorage[4];
  double result = 0.0;
  *(_OWORD *)(a6 + 152) = xmmword_1005F6750;
  *(void *)(a6 + v12[15]) = &_swiftEmptySetSingleton;
  *(void *)(a6 + v12[16]) = _swiftEmptyArrayStorage;
  *(void *)(a6 + v12[17]) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1001C0ABC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v2);
  int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  BOOL v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_1001C8C0C(a1, (uint64_t)v4, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v9 = sub_1005E0EB0();
  os_log_type_t v10 = sub_1005E25C0();
  int v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = swift_slowAlloc();
    int v23 = v11;
    uint64_t v13 = v12;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v13 = 68159235;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    uint64_t v14 = *(int *)(v2 + 20);
    uint64_t v24 = v5;
    int v15 = &v4[v14];
    LOBYTE(v25) = v4[v14];
    sub_1005E2960();
    *(_WORD *)(v13 + 11) = 2082;
    uint64_t v17 = *((void *)v15 + 1);
    unint64_t v16 = *((void *)v15 + 2);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000C6914(v17, v16, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 21) = 1040;
    LODWORD(v25) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 27) = 512;
    LOWORD(v25) = *((_WORD *)v15 + 12);
    sub_1005E2960();
    *(_WORD *)(v13 + 31) = 2160;
    uint64_t v25 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v13 + 41) = 2085;
    int v18 = *((_DWORD *)v15 + 10);
    uint64_t v25 = *((void *)v15 + 4);
    int v26 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1005E1CC0();
    uint64_t v25 = sub_1000C6914(v19, v20, &v27);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1001C8BAC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v23, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Created task.", (uint8_t *)v13, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  }
  else
  {
    sub_1001C8BAC((uint64_t)v4, type metadata accessor for MailboxTaskLogger);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1001C0EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v162 = a5;
  uint64_t v160 = a4;
  uint64_t v171 = a1;
  uint64_t v11 = sub_10000566C(&qword_10070A000);
  __chkstk_darwin(v11 - 8);
  uint64_t v154 = (uint64_t)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_10000566C(&qword_100709E30);
  uint64_t v156 = *(void *)(v157 - 8);
  uint64_t v13 = __chkstk_darwin(v157);
  uint64_t v153 = (uint64_t)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v152 = (uint64_t)&v147 - v15;
  uint64_t v165 = sub_10000566C(&qword_100709E38);
  uint64_t v16 = __chkstk_darwin(v165);
  uint64_t v155 = (uint64_t)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v166 = (uint64_t)&v147 - v19;
  __chkstk_darwin(v18);
  uint64_t v158 = (uint64_t)&v147 - v20;
  uint64_t v21 = sub_10000566C(&qword_10070F3C0);
  __chkstk_darwin(v21 - 8);
  uint64_t v167 = (uint64_t)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for UploadMessages.PendingUpload(0);
  uint64_t v168 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v161 = (uint64_t)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v163 = *(void *)(v180 - 8);
  uint64_t v24 = __chkstk_darwin(v180);
  int v26 = (char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v175 = (void **)((char *)&v147 - v27);
  uint64_t v181 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v170 = *(void *)(v181 - 8);
  uint64_t v28 = __chkstk_darwin(v181);
  uint64_t v176 = (uint64_t)&v147 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v178 = (uint64_t)&v147 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v147 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  int v37 = (char *)&v147 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  unint64_t v40 = (char *)&v147 - v39;
  __chkstk_darwin(v38);
  unint64_t v42 = (char *)&v147 - v41;
  if (*(unsigned char *)(v7 + 120) == 2 && !*(void *)(v7 + 112))
  {
    int v43 = sub_1001A9C0C(0, 0xF000000000000000, a3);
    uint64_t v44 = (void *)v43[2];
    if (v44)
    {
      unint64_t v45 = 0;
      unint64_t v148 = v43;
      unint64_t v164 = v43 + 4;
      uint64_t v174 = *(void *)(a2 + 16);
      uint64_t v173 = a6;
      uint64_t v159 = v7;
      uint64_t v172 = a2;
      uint64_t v149 = a3;
      int64_t v179 = v26;
      uint64_t v150 = v44;
      do
      {
        if (v174)
        {
          uint64_t v177 = (uint64_t)v45;
          int v46 = *((_DWORD *)v164 + (void)v45);
          uint64_t v47 = v170;
          unint64_t v151 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
          uint64_t v48 = a2 + v151;
          swift_bridgeObjectRetain();
          uint64_t v49 = *(void *)(v47 + 72);
          uint64_t v50 = v174;
          while (1)
          {
            sub_1001C8C0C(v48, (uint64_t)v42, type metadata accessor for TaskHistory.Previous);
            sub_1001C8C0C((uint64_t)v42, (uint64_t)v40, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1001C8BAC((uint64_t)v40, type metadata accessor for TaskHistory.Previous);
            }
            else
            {
              uint64_t v51 = sub_10000566C(&qword_10070B308);
              int v52 = *(_DWORD *)&v40[*(int *)(v51 + 48)];
              sub_1001C8BAC((uint64_t)v40, type metadata accessor for ClientCommand);
              if (v52 == v46)
              {
                sub_1001C8BAC((uint64_t)v42, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                uint64_t v53 = v172;
                swift_bridgeObjectRelease();
                a3 = v149;
                uint64_t v54 = sub_1001A9C0C(0, 0xF000000000000000, v149);
                unint64_t v148 = (void *)v54[2];
                if (v148)
                {
                  char v55 = 0;
                  uint64_t v147 = v54;
                  uint64_t v150 = v54 + 4;
                  v151 += v53;
                  uint64_t v56 = v171;
                  while (2)
                  {
                    int v57 = *((_DWORD *)v150 + (void)v55);
                    unint64_t v164 = (void *)((char *)v55 + 1);
                    swift_bridgeObjectRetain();
                    uint64_t v58 = v151;
                    uint64_t v59 = v174;
                    do
                    {
                      sub_1001C8C0C(v58, (uint64_t)v37, type metadata accessor for TaskHistory.Previous);
                      sub_1001C8C0C((uint64_t)v37, (uint64_t)v34, type metadata accessor for TaskHistory.Previous);
                      if (swift_getEnumCaseMultiPayload() == 1)
                      {
                        sub_1001C8BAC((uint64_t)v34, type metadata accessor for TaskHistory.Previous);
                      }
                      else
                      {
                        int v60 = *(_DWORD *)&v34[*(int *)(v51 + 48)];
                        sub_1001C8BAC((uint64_t)v34, type metadata accessor for ClientCommand);
                        if (v60 == v57)
                        {
                          sub_1001C8BAC((uint64_t)v37, type metadata accessor for TaskHistory.Previous);
                          a2 = v172;
                          swift_bridgeObjectRelease();
                          uint64_t v61 = v56;
                          uint64_t v62 = *(void *)(v56 + 16);
                          if (v62)
                          {
                            uint64_t v63 = v163;
                            uint64_t v64 = v61
                                + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
                            swift_bridgeObjectRetain();
                            uint64_t v177 = *(void *)(v63 + 72);
                            uint64_t v65 = (uint64_t)v175;
                            do
                            {
                              sub_1001C8C0C(v64, v65, type metadata accessor for TaskHistory.Running);
                              uint64_t v66 = (uint64_t)v179;
                              sub_1001C8C0C(v65, (uint64_t)v179, type metadata accessor for TaskHistory.Running);
                              if (swift_getEnumCaseMultiPayload() == 1)
                              {
                                sub_1001C8BAC(v66, type metadata accessor for TaskHistory.Running);
                              }
                              else
                              {
                                uint64_t v67 = a2;
                                int v68 = *(_DWORD *)(v66 + 8);
                                uint64_t v69 = sub_10000566C(&qword_10070B6A0);
                                sub_1001C8BAC(v66 + *(int *)(v69 + 64), type metadata accessor for ClientCommand);
                                BOOL v70 = v68 == v57;
                                a2 = v67;
                                uint64_t v65 = (uint64_t)v175;
                                if (v70)
                                {
                                  sub_1001C8BAC((uint64_t)v175, type metadata accessor for TaskHistory.Running);
                                  uint64_t v56 = v171;
                                  a3 = v149;
                                  goto LABEL_28;
                                }
                              }
                              sub_1001C8BAC(v65, type metadata accessor for TaskHistory.Running);
                              v64 += v177;
                              --v62;
                            }
                            while (v62);
                            swift_bridgeObjectRelease();
                            a3 = v149;
                          }
                          swift_bridgeObjectRelease();
                          a6 = v173;
                          uint64_t v7 = v159;
                          goto LABEL_32;
                        }
                      }
                      sub_1001C8BAC((uint64_t)v37, type metadata accessor for TaskHistory.Previous);
                      v58 += v49;
                      --v59;
                    }
                    while (v59);
LABEL_28:
                    swift_bridgeObjectRelease();
                    char v55 = v164;
                    if (v164 != v148) {
                      continue;
                    }
                    break;
                  }
                }
                swift_bridgeObjectRelease();
                uint64_t v71 = sub_10000566C(&qword_10070F568);
                uint64_t v72 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
                uint64_t v73 = v173;
                return v72(v73, 1, 1, v71);
              }
            }
            sub_1001C8BAC((uint64_t)v42, type metadata accessor for TaskHistory.Previous);
            v48 += v49;
            if (!--v50)
            {
              a2 = v172;
              swift_bridgeObjectRelease();
              a6 = v173;
              uint64_t v7 = v159;
              uint64_t v44 = v150;
              unint64_t v45 = (void *)v177;
              break;
            }
          }
        }
        unint64_t v45 = (void *)((char *)v45 + 1);
      }
      while (v45 != v44);
    }
    swift_bridgeObjectRelease();
    uint64_t v129 = sub_10000566C(&qword_10070F568);
    BOOL v130 = (char *)a6 + *(int *)(v129 + 48);
    *(_OWORD *)a6 = xmmword_1005F66D0;
    int v131 = *(_DWORD *)(v7 + 32);
    *(void *)BOOL v130 = *(void *)(v7 + 24);
    *((_DWORD *)v130 + 2) = v131;
    *((void *)v130 + 2) = &off_1006BACC0;
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(a6, 0, 1, v129);
    return swift_bridgeObjectRetain();
  }
LABEL_32:
  os_log_t v74 = sub_100164D84(1, a3);
  uint64_t v75 = v74[2];
  if (v75)
  {
    uint64_t v76 = 0;
    uint64_t v77 = v169;
    uint64_t v78 = v171;
    while ((sub_100164DC4(*((_DWORD *)v74 + v76 + 8), v78, a2) & 1) == 0)
    {
      if (v75 == ++v76) {
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_10000566C(&qword_10070F568);
    uint64_t v72 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
    uint64_t v73 = a6;
    return v72(v73, 1, 1, v71);
  }
  uint64_t v77 = v169;
  uint64_t v78 = v171;
LABEL_38:
  uint64_t v173 = a6;
  swift_bridgeObjectRelease();
  uint64_t v79 = type metadata accessor for UploadMessages(0);
  uint64_t v80 = v7 + *(int *)(v79 + 52);
  uint64_t v81 = v167;
  sub_1000079E4(v80, v167, &qword_10070F3C0);
  uint64_t v82 = v168;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48))(v81, 1, v77) == 1)
  {
    uint64_t v180 = v79;
    sub_100007A48(v81, &qword_10070F3C0);
    char v83 = sub_1001C21F0(v78, a2, a3, v160);
    uint64_t v84 = v173;
    if ((v83 & 1) == 0) {
      goto LABEL_77;
    }
    uint64_t v85 = sub_1001A9C0C(0, 0xB000000000000000, a3);
    uint64_t v86 = v85[2];
    if (v86)
    {
      uint64_t v87 = 0;
      unint64_t v175 = v85;
      int64_t v179 = v85 + 4;
      uint64_t v88 = *(void *)(a2 + 16);
      uint64_t v89 = v180;
      uint64_t v159 = v7;
      uint64_t v172 = a2;
      uint64_t v177 = v86;
      do
      {
        if (v88)
        {
          int v116 = *((_DWORD *)v179 + v87);
          uint64_t v117 = v170;
          uint64_t v118 = a2 + ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80));
          swift_bridgeObjectRetain();
          uint64_t v119 = *(void *)(v117 + 72);
          uint64_t v120 = v88;
          uint64_t v121 = v178;
          while (1)
          {
            sub_1001C8C0C(v118, v121, type metadata accessor for TaskHistory.Previous);
            uint64_t v122 = v176;
            sub_1001C8C0C(v121, v176, type metadata accessor for TaskHistory.Previous);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1001C8BAC(v122, type metadata accessor for TaskHistory.Previous);
              uint64_t v121 = v178;
            }
            else
            {
              uint64_t v123 = *(int *)(sub_10000566C(&qword_10070B308) + 48);
              uint64_t v124 = v122;
              int v125 = *(_DWORD *)(v122 + v123);
              sub_1001C8BAC(v124, type metadata accessor for ClientCommand);
              uint64_t v121 = v178;
              if (v125 == v116)
              {
                sub_1001C8BAC(v178, type metadata accessor for TaskHistory.Previous);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v84 = v173;
                goto LABEL_77;
              }
            }
            sub_1001C8BAC(v121, type metadata accessor for TaskHistory.Previous);
            v118 += v119;
            if (!--v120)
            {
              a2 = v172;
              swift_bridgeObjectRelease();
              uint64_t v7 = v159;
              uint64_t v89 = v180;
              uint64_t v86 = v177;
              break;
            }
          }
        }
        ++v87;
      }
      while (v87 != v86);
      swift_bridgeObjectRelease();
      uint64_t v84 = v173;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v89 = v180;
    }
    uint64_t v126 = *(void *)(v7 + *(int *)(v89 + 68));
    sub_10001FC6C();
    swift_bridgeObjectRetain();
    sub_1005E3680();
    uint64_t v127 = *(void *)(v126 + 16);
    if (v127)
    {
      swift_bridgeObjectRetain();
      uint64_t v128 = (unsigned char *)(v126 + 57);
      do
      {
        if ((*v128 & 1) == 0 && (*(v128 - 1) & 1) == 0)
        {
          *(_DWORD *)uint64_t v182 = HIDWORD(*(void *)(v128 - 9));
          MessageIdentifierSet.insert(_:)();
        }
        v128 += 32;
        --v127;
      }
      while (v127);
      swift_bridgeObjectRelease();
    }
    uint64_t v132 = v158;
    sub_10001FDF0(v166, v158, &qword_100709E38);
    swift_bridgeObjectRelease();
    uint64_t v133 = v155;
    sub_1000079E4(v132, v155, &qword_100709E38);
    MessageIdentifierSet.count.getter();
    if (v134 <= 0)
    {
      sub_100007A48(v133, &qword_100709E38);
      uint64_t v138 = 1;
      uint64_t v137 = v154;
    }
    else
    {
      uint64_t v135 = v133;
      uint64_t v136 = v153;
      sub_10001FDF0(v135, v153, &qword_100709E38);
      uint64_t v137 = v154;
      sub_10001FDF0(v136, v154, &qword_100709E30);
      uint64_t v138 = 0;
    }
    uint64_t v139 = v156;
    uint64_t v140 = v157;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v156 + 56))(v137, v138, 1, v157);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v137, 1, v140) == 1)
    {
      sub_100007A48(v158, &qword_100709E38);
      sub_100007A48(v137, &qword_10070A000);
LABEL_77:
      uint64_t v71 = sub_10000566C(&qword_10070F568);
      uint64_t v72 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
      uint64_t v73 = v84;
      return v72(v73, 1, 1, v71);
    }
    uint64_t v141 = v152;
    sub_10001FDF0(v137, v152, &qword_100709E30);
    uint64_t v142 = &off_1006BAA60;
    uint64_t v143 = &off_1006BAB68;
    if (*(unsigned char *)(v7 + 105))
    {
      uint64_t v142 = &off_1006BAAD0;
      uint64_t v143 = &off_1006BAC00;
    }
    if (*(unsigned char *)(v7 + 104)) {
      uint64_t v144 = (uint64_t)v142;
    }
    else {
      uint64_t v144 = (uint64_t)v143;
    }
    swift_bridgeObjectRetain();
    sub_100007A48(v158, &qword_100709E38);
    uint64_t v145 = sub_10000566C(&qword_10070F568);
    uint64_t v146 = (uint64_t)v84 + *(int *)(v145 + 48);
    *(_OWORD *)uint64_t v84 = xmmword_1005F6760;
    static ClientCommand.uidFetch(messages:items:)(v141, v144, v146);
    swift_bridgeObjectRelease();
    sub_100007A48(v141, &qword_100709E30);
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v84, 0, 1, v145);
  }
  else
  {
    uint64_t v90 = v161;
    sub_1001CB060(v81, v161);
    sub_100007A48(v80, &qword_10070F3C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v80, 1, 1, v77);
    long long v91 = *(_OWORD *)(v162 + 88);
    long long v92 = *(_OWORD *)(v162 + 120);
    long long v188 = *(_OWORD *)(v162 + 104);
    long long v189 = v92;
    uint64_t v190 = *(void *)(v162 + 136);
    long long v93 = *(_OWORD *)(v162 + 56);
    long long v184 = *(_OWORD *)(v162 + 40);
    long long v185 = v93;
    long long v186 = *(_OWORD *)(v162 + 72);
    long long v187 = v91;
    uint64_t v94 = 256;
    if (!*(unsigned char *)(v90 + 17)) {
      uint64_t v94 = 0;
    }
    uint64_t v95 = v94 | *(unsigned __int8 *)(v90 + 16);
    uint64_t v96 = 0x10000;
    if (!*(unsigned char *)(v90 + 18)) {
      uint64_t v96 = 0;
    }
    uint64_t v97 = 0x1000000;
    if (!*(unsigned char *)(v90 + 19)) {
      uint64_t v97 = 0;
    }
    uint64_t v98 = v95 | v96 | v97;
    uint64_t v99 = &_mh_execute_header;
    if (!*(unsigned char *)(v90 + 20)) {
      uint64_t v99 = 0;
    }
    uint64_t v100 = 0x10000000000;
    if (!*(unsigned char *)(v90 + 21)) {
      uint64_t v100 = 0;
    }
    unint64_t v101 = v98 | (unint64_t)v99 | v100 | ((unint64_t)*(unsigned __int8 *)(v90 + 22) << 48) | ((unint64_t)*(unsigned __int8 *)(v90 + 23) << 56);
    v182[0] = *(unsigned char *)(v90 + 24);
    *(void *)&v182[1] = 2;
    char v183 = 0;
    uint64_t v102 = FlagEncoder.encode(_:)(v101, *(uint64_t *)v182, 0);
    swift_bridgeObjectRelease();
    uint64_t v103 = *(void *)v90;
    unint64_t v104 = *(void *)(v90 + 8);
    unint64_t v105 = (uint64_t *)(v7 + *(int *)(v79 + 56));
    uint64_t v106 = *v105;
    unint64_t v107 = v105[1];
    sub_100008D24(*(void *)v90, v104);
    sub_100057EFC(v106, v107);
    *unint64_t v105 = v103;
    v105[1] = v104;
    uint64_t v108 = sub_10000566C(&qword_10070F568);
    unint64_t v109 = v173;
    uint64_t v110 = (char *)v173 + *(int *)(v108 + 48);
    *uint64_t v173 = v103;
    v109[1] = v104;
    uint64_t v111 = sub_10000566C(&qword_100709E50);
    uint64_t v112 = (uint64_t)&v110[*(int *)(v111 + 64)];
    uint64_t v113 = *(int *)(v111 + 80);
    int v114 = *(_DWORD *)(v7 + 32);
    *(void *)uint64_t v110 = *(void *)(v7 + 24);
    *((_DWORD *)v110 + 2) = v114;
    *((void *)v110 + 2) = v102;
    sub_10001FDF0(v90 + *(int *)(v77 + 24), v112, &qword_100709E58);
    *(_OWORD *)&v110[v113] = *(_OWORD *)(v90 + *(int *)(v77 + 28));
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v109, 0, 1, v108);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1001C21F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v145 = a3;
  uint64_t v154 = a1;
  uint64_t v163 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v150 = *(void *)(v163 - 8);
  uint64_t v6 = __chkstk_darwin(v163);
  uint64_t v159 = (uint64_t)v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v160 = (uint64_t)v135 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v135 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v161 = (void *)((char *)v135 - v14);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v135 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v135 - v18;
  uint64_t v164 = type metadata accessor for TaskHistory.Previous(0);
  unint64_t v151 = *(char **)(v164 - 8);
  uint64_t v20 = __chkstk_darwin(v164);
  uint64_t v142 = (char *)v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)v135 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)v135 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)v135 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)v135 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)v135 - v34;
  uint64_t v136 = type metadata accessor for UploadMessages(0);
  uint64_t v36 = __chkstk_darwin(v136);
  uint64_t v141 = (uint64_t)v135 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v143 = (uint64_t)v135 - v38;
  uint64_t v138 = a4;
  uint64_t v39 = sub_100104D08(0, 0x2000000000000000, a4);
  unint64_t v40 = v39[2];
  if (!v40) {
    goto LABEL_85;
  }
  unint64_t v41 = 0;
  uint64_t v147 = v39;
  uint64_t v149 = v39 + 4;
  uint64_t v153 = *(void *)(a2 + 16);
  uint64_t v156 = a2;
  uint64_t v137 = v24;
  uint64_t v162 = v12;
  uint64_t v157 = v17;
  uint64_t v158 = v19;
  unint64_t v148 = v40;
LABEL_5:
  if (!v153) {
    goto LABEL_4;
  }
  unint64_t v152 = v41;
  int v42 = *((_DWORD *)v149 + v41);
  int v43 = v151;
  unint64_t v146 = (v43[80] + 32) & ~(unint64_t)v43[80];
  uint64_t v44 = a2 + v146;
  swift_bridgeObjectRetain_n();
  uint64_t v45 = *((void *)v43 + 9);
  uint64_t v46 = v153;
  while (1)
  {
    sub_1001C8C0C(v44, (uint64_t)v35, type metadata accessor for TaskHistory.Previous);
    sub_1001C8C0C((uint64_t)v35, (uint64_t)v33, type metadata accessor for TaskHistory.Previous);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    sub_1001C8BAC((uint64_t)v33, type metadata accessor for TaskHistory.Previous);
LABEL_8:
    sub_1001C8BAC((uint64_t)v35, type metadata accessor for TaskHistory.Previous);
    v44 += v45;
    if (!--v46) {
      goto LABEL_3;
    }
  }
  int v47 = *((_DWORD *)v33 + 2);
  sub_10007C4A4(*(void *)v33);
  if (v47 != v42) {
    goto LABEL_8;
  }
  sub_1001C8BAC((uint64_t)v35, type metadata accessor for TaskHistory.Previous);
  swift_bridgeObjectRelease_n();
  uint64_t v48 = *(void *)(v154 + 16);
  if (v48)
  {
    LODWORD(v155) = v42;
    uint64_t v49 = v150;
    uint64_t v50 = v154 + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
    swift_bridgeObjectRetain_n();
    uint64_t v51 = *(void *)(v49 + 72);
    uint64_t v52 = (uint64_t)v158;
    do
    {
      sub_1001C8C0C(v50, v52, type metadata accessor for TaskHistory.Running);
      uint64_t v53 = (uint64_t)v157;
      sub_1001C8C0C(v52, (uint64_t)v157, type metadata accessor for TaskHistory.Running);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v54 = v53;
        int v55 = *(_DWORD *)(v53 + 4);
        sub_10007C4A4(*(void *)(v54 + 8));
        if (v55 == v155)
        {
          sub_1001C8BAC((uint64_t)v158, type metadata accessor for TaskHistory.Running);
          a2 = v156;
LABEL_3:
          unint64_t v40 = v148;
          swift_bridgeObjectRelease_n();
          unint64_t v41 = v152;
LABEL_4:
          if (++v41 != v40) {
            goto LABEL_5;
          }
LABEL_85:
          swift_bridgeObjectRelease();
          uint64_t v130 = v144;
          uint64_t v131 = v143;
          sub_1001C8C0C(v144, v143, type metadata accessor for UploadMessages);
          sub_1001C8BAC(v131, type metadata accessor for UploadMessages);
          uint64_t v132 = v130;
          uint64_t v133 = v141;
          sub_1001C8C0C(v132, v141, type metadata accessor for UploadMessages);
          uint64_t v93 = v133;
LABEL_86:
          uint64_t v127 = 0;
          goto LABEL_87;
        }
      }
      else
      {
        sub_1001C8BAC(v53, type metadata accessor for TaskHistory.Running);
      }
      uint64_t v52 = (uint64_t)v158;
      sub_1001C8BAC((uint64_t)v158, type metadata accessor for TaskHistory.Running);
      v50 += v51;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = v156;
  }
  else
  {
    uint64_t v56 = v156;
  }
  swift_bridgeObjectRelease();
  uint64_t v57 = v143;
  sub_1001C8C0C(v144, v143, type metadata accessor for UploadMessages);
  uint64_t v58 = *(void *)(v57 + 128);
  uint64_t v139 = *(void *)(v58 + 16);
  if (!v139)
  {
    uint64_t v61 = 0;
    goto LABEL_53;
  }
  uint64_t v140 = v58 + 32;
  v135[1] = v58;
  uint64_t v59 = swift_bridgeObjectRetain();
  unint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v153 = v56 + v146;
  while (2)
  {
    unint64_t v152 = v60;
    uint64_t v62 = (uint64_t *)(v140 + 16 * v60);
    unint64_t v63 = v62[1];
    uint64_t v166 = *v62;
    uint64_t v64 = v166;
    unint64_t v167 = v63;
    __chkstk_darwin(v59);
    v135[-2] = &v166;
    sub_100008D24(v64, v63);
    uint64_t v147 = (void *)v64;
    unint64_t v148 = v63;
    sub_100008D24(v64, v63);
    uint64_t v65 = v145;
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_10002B8D0((uint64_t)sub_1001AA4D4, (uint64_t)&v135[-4], v65);
    uint64_t v149 = v61;
    int64_t v67 = *(void *)(v66 + 16);
    if (v67)
    {
      uint64_t v165 = _swiftEmptyArrayStorage;
      sub_10001AA54(0, v67, 0);
      int v68 = v165;
      unint64_t v69 = v165[2];
      uint64_t v70 = 32;
      do
      {
        int v71 = *(_DWORD *)(v66 + v70);
        uint64_t v165 = v68;
        unint64_t v72 = v68[3];
        if (v69 >= v72 >> 1)
        {
          sub_10001AA54(v72 > 1, v69 + 1, 1);
          int v68 = v165;
        }
        uint64_t v68[2] = v69 + 1;
        *((_DWORD *)v68 + v69 + 8) = v71;
        v70 += 24;
        ++v69;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease();
      uint64_t v56 = v156;
    }
    else
    {
      swift_bridgeObjectRelease();
      int v68 = _swiftEmptyArrayStorage;
    }
    uint64_t v73 = (uint64_t)v161;
    uint64_t v157 = (char *)v68[2];
    if (!v157)
    {
      swift_bridgeObjectRelease();
LABEL_51:
      unint64_t v90 = v148;
      uint64_t v91 = (uint64_t)v147;
      sub_1000094D4((uint64_t)v147, v148);
      sub_1000094D4(v91, v90);
      swift_bridgeObjectRelease();
      sub_1001C8BAC(v143, type metadata accessor for UploadMessages);
      uint64_t v92 = v141;
      sub_1001C8C0C(v144, v141, type metadata accessor for UploadMessages);
      uint64_t v93 = v92;
      goto LABEL_86;
    }
    ++v152;
    uint64_t v155 = v68 + 4;
    os_log_t v74 = *(char **)(v56 + 16);
    swift_bridgeObjectRetain();
    uint64_t v75 = 0;
    unint64_t v151 = v74;
    while (!v74)
    {
LABEL_31:
      if ((char *)++v75 == v157)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_51;
      }
    }
    uint64_t v158 = (char *)v75;
    int v76 = *((_DWORD *)v155 + v75);
    swift_bridgeObjectRetain();
    uint64_t v77 = v153;
    while (2)
    {
      sub_1001C8C0C(v77, (uint64_t)v30, type metadata accessor for TaskHistory.Previous);
      sub_1001C8C0C((uint64_t)v30, (uint64_t)v27, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001C8BAC((uint64_t)v27, type metadata accessor for TaskHistory.Previous);
        goto LABEL_35;
      }
      int v78 = *(_DWORD *)&v27[*(int *)(sub_10000566C(&qword_10070B308) + 48)];
      sub_1001C8BAC((uint64_t)v27, type metadata accessor for ClientCommand);
      if (v78 != v76)
      {
LABEL_35:
        sub_1001C8BAC((uint64_t)v30, type metadata accessor for TaskHistory.Previous);
        v77 += v45;
        if (!--v74)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          os_log_t v74 = v151;
          uint64_t v75 = (uint64_t)v158;
          goto LABEL_31;
        }
        continue;
      }
      break;
    }
    sub_1001C8BAC((uint64_t)v30, type metadata accessor for TaskHistory.Previous);
    swift_bridgeObjectRelease();
    uint64_t v79 = *(void *)(v154 + 16);
    if (v79)
    {
      uint64_t v80 = v150;
      uint64_t v81 = v154 + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
      swift_bridgeObjectRetain();
      uint64_t v82 = *(void *)(v80 + 72);
      do
      {
        sub_1001C8C0C(v81, v73, type metadata accessor for TaskHistory.Running);
        uint64_t v83 = (uint64_t)v162;
        sub_1001C8C0C(v73, (uint64_t)v162, type metadata accessor for TaskHistory.Running);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1001C8BAC(v83, type metadata accessor for TaskHistory.Running);
        }
        else
        {
          uint64_t v84 = v45;
          int v85 = *(_DWORD *)(v83 + 8);
          uint64_t v86 = sub_10000566C(&qword_10070B6A0);
          sub_1001C8BAC(v83 + *(int *)(v86 + 64), type metadata accessor for ClientCommand);
          BOOL v87 = v85 == v76;
          uint64_t v45 = v84;
          uint64_t v73 = (uint64_t)v161;
          if (v87)
          {
            sub_1001C8BAC((uint64_t)v161, type metadata accessor for TaskHistory.Running);
            goto LABEL_30;
          }
        }
        sub_1001C8BAC(v73, type metadata accessor for TaskHistory.Running);
        v81 += v82;
        --v79;
      }
      while (v79);
      swift_bridgeObjectRelease();
    }
    uint64_t v56 = v156;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v88 = (uint64_t)v147;
    unint64_t v89 = v148;
    sub_1000094D4((uint64_t)v147, v148);
    uint64_t v59 = sub_1000094D4(v88, v89);
    unint64_t v60 = v152;
    uint64_t v61 = v149;
    if (v152 != v139) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_53:
  sub_1001C8BAC(v143, type metadata accessor for UploadMessages);
  uint64_t v94 = v141;
  sub_1001C8C0C(v144, v141, type metadata accessor for UploadMessages);
  unint64_t v95 = *(void *)(v94 + *(int *)(v136 + 68));
  uint64_t v96 = (uint64_t)v142;
  unint64_t v151 = *(char **)(v95 + 16);
  if (!v151)
  {
    uint64_t v93 = v94;
    uint64_t v127 = 1;
    goto LABEL_87;
  }
  unint64_t v152 = v95 + 32;
  unint64_t v148 = v95;
  uint64_t v97 = swift_bridgeObjectRetain();
  uint64_t v98 = 0;
  uint64_t v158 = (char *)(v56 + v146);
LABEL_55:
  uint64_t v157 = (char *)v98;
  uint64_t v99 = (uint64_t *)(v152 + 32 * v98);
  unint64_t v100 = v99[1];
  uint64_t v166 = *v99;
  uint64_t v101 = v166;
  unint64_t v167 = v100;
  __chkstk_darwin(v97);
  v135[-2] = &v166;
  sub_100008D24(v101, v100);
  uint64_t v153 = v101;
  uint64_t v155 = (void *)v100;
  sub_100008D24(v101, v100);
  uint64_t v102 = v138;
  swift_bridgeObjectRetain();
  uint64_t v103 = sub_10002B87C((uint64_t)sub_1001CB3A4, (uint64_t)&v135[-4], v102);
  uint64_t v149 = v61;
  int64_t v104 = *(void *)(v103 + 16);
  if (v104)
  {
    uint64_t v165 = _swiftEmptyArrayStorage;
    sub_10001AA94(0, v104, 0);
    unint64_t v105 = v165;
    unint64_t v106 = v165[2];
    uint64_t v107 = 32;
    do
    {
      int v108 = *(_DWORD *)(v103 + v107);
      uint64_t v165 = v105;
      unint64_t v109 = v105[3];
      if (v106 >= v109 >> 1)
      {
        sub_10001AA94(v109 > 1, v106 + 1, 1);
        unint64_t v105 = v165;
      }
      uint64_t v105[2] = v106 + 1;
      *((_DWORD *)v105 + v106 + 8) = v108;
      v107 += 24;
      ++v106;
      --v104;
    }
    while (v104);
    swift_bridgeObjectRelease();
    uint64_t v96 = (uint64_t)v142;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v105 = _swiftEmptyArrayStorage;
  }
  uint64_t v110 = (uint64_t)v137;
  uint64_t v162 = (char *)v105[2];
  if (v162)
  {
    ++v157;
    uint64_t v161 = v105 + 4;
    uint64_t v111 = *(void *)(v56 + 16);
    swift_bridgeObjectRetain();
    uint64_t v112 = 0;
    while (!v111)
    {
LABEL_65:
      if ((char *)++v112 == v162)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_83;
      }
    }
    int v113 = *((_DWORD *)v161 + v112);
    swift_bridgeObjectRetain_n();
    uint64_t v114 = (uint64_t)v158;
    uint64_t v115 = v111;
    while (1)
    {
      sub_1001C8C0C(v114, v110, type metadata accessor for TaskHistory.Previous);
      sub_1001C8C0C(v110, v96, type metadata accessor for TaskHistory.Previous);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v116 = *(_DWORD *)(v96 + 8);
        sub_10007C4A4(*(void *)v96);
        if (v116 == v113)
        {
          sub_1001C8BAC(v110, type metadata accessor for TaskHistory.Previous);
          swift_bridgeObjectRelease_n();
          uint64_t v117 = *(void *)(v154 + 16);
          if (v117)
          {
            uint64_t v118 = v150;
            uint64_t v119 = v154
                 + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
            swift_bridgeObjectRetain_n();
            uint64_t v120 = *(void *)(v118 + 72);
            uint64_t v121 = v160;
            do
            {
              sub_1001C8C0C(v119, v121, type metadata accessor for TaskHistory.Running);
              uint64_t v122 = v159;
              sub_1001C8C0C(v121, v159, type metadata accessor for TaskHistory.Running);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v123 = v122;
                int v124 = *(_DWORD *)(v122 + 4);
                sub_10007C4A4(*(void *)(v123 + 8));
                if (v124 == v113)
                {
                  sub_1001C8BAC(v160, type metadata accessor for TaskHistory.Running);
                  uint64_t v96 = (uint64_t)v142;
                  uint64_t v110 = (uint64_t)v137;
                  goto LABEL_64;
                }
              }
              else
              {
                sub_1001C8BAC(v122, type metadata accessor for TaskHistory.Running);
              }
              uint64_t v121 = v160;
              sub_1001C8BAC(v160, type metadata accessor for TaskHistory.Running);
              v119 += v120;
              --v117;
            }
            while (v117);
            swift_bridgeObjectRelease_n();
          }
          unint64_t v125 = (unint64_t)v155;
          uint64_t v56 = v156;
          uint64_t v96 = (uint64_t)v142;
          uint64_t v61 = v149;
          uint64_t v126 = v153;
          swift_bridgeObjectRelease_n();
          sub_1000094D4(v126, v125);
          uint64_t v97 = sub_1000094D4(v126, v125);
          uint64_t v98 = (uint64_t)v157;
          if (v157 == v151)
          {
            swift_bridgeObjectRelease();
            uint64_t v127 = 1;
            goto LABEL_84;
          }
          goto LABEL_55;
        }
      }
      else
      {
        sub_1001C8BAC(v96, type metadata accessor for TaskHistory.Previous);
      }
      sub_1001C8BAC(v110, type metadata accessor for TaskHistory.Previous);
      v114 += v45;
      if (!--v115)
      {
LABEL_64:
        swift_bridgeObjectRelease_n();
        goto LABEL_65;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_83:
  uint64_t v128 = v153;
  unint64_t v129 = (unint64_t)v155;
  sub_1000094D4(v153, (unint64_t)v155);
  sub_1000094D4(v128, v129);
  swift_bridgeObjectRelease();
  uint64_t v127 = 0;
LABEL_84:
  uint64_t v93 = v141;
LABEL_87:
  sub_1001C8BAC(v93, type metadata accessor for UploadMessages);
  return v127;
}

uint64_t sub_1001C32E0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  unint64_t v218 = a3;
  uint64_t v216 = a5;
  uint64_t v217 = a8;
  uint64_t v212 = a4;
  uint64_t v11 = sub_10000566C(&qword_100709E30);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ResponseCodeAppend();
  __chkstk_darwin(v14);
  BOOL v211 = (int *)((char *)&v201 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v215 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v16 = __chkstk_darwin(v215);
  uint64_t v213 = (uint64_t)&v201 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v214 = (uint64_t)&v201 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v209 = (uint64_t)&v201 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v201 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v210 = (uint64_t)&v201 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v201 - v27;
  uint64_t v29 = sub_1005E0ED0();
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v201 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t result = __chkstk_darwin(v36);
  uint64_t v45 = (char *)&v201 - v41;
  unint64_t v46 = a2 >> 60;
  if (a2 >> 60 == 11) {
    return result;
  }
  uint64_t v47 = v8;
  if (v46 == 15)
  {
    if (*(unsigned char *)(v8 + 120) == 2 && !*(void *)(v8 + 112))
    {
      uint64_t v206 = v8;
      uint64_t v48 = v217;
      uint64_t v49 = v43;
      uint64_t v50 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))((char *)&v201 - v41, v217, v43);
      sub_1001C8C0C(v48, (uint64_t)v28, type metadata accessor for MailboxTaskLogger);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v51 = sub_1005E0EB0();
      os_log_type_t v52 = sub_1005E25A0();
      int v53 = v52;
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v54 = swift_slowAlloc();
        uint64_t v207 = v50;
        uint64_t v55 = v54;
        unint64_t v218 = swift_slowAlloc();
        uint64_t v221 = v218;
        *(_DWORD *)uint64_t v55 = 68159235;
        LODWORD(v219) = 2;
        sub_1005E2960();
        *(_WORD *)(v55 + 8) = 256;
        uint64_t v56 = *(int *)(v215 + 20);
        uint64_t v208 = v49;
        uint64_t v57 = &v28[v56];
        LOBYTE(v219) = v28[v56];
        sub_1005E2960();
        *(_WORD *)(v55 + 11) = 2082;
        uint64_t v58 = *((void *)v57 + 1);
        unint64_t v59 = *((void *)v57 + 2);
        swift_bridgeObjectRetain();
        uint64_t v219 = sub_1000C6914(v58, v59, &v221);
        LODWORD(v217) = v53;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v55 + 21) = 1040;
        LODWORD(v219) = 2;
        sub_1005E2960();
        *(_WORD *)(v55 + 27) = 512;
        LOWORD(v219) = *((_WORD *)v57 + 12);
        sub_1005E2960();
        *(_WORD *)(v55 + 31) = 2160;
        uint64_t v219 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v55 + 41) = 2085;
        int v60 = *((_DWORD *)v57 + 10);
        uint64_t v219 = *((void *)v57 + 4);
        int v220 = v60;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_1005E1CC0();
        uint64_t v219 = sub_1000C6914(v61, v62, &v221);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001C8BAC((uint64_t)v28, type metadata accessor for MailboxTaskLogger);
        _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v217, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Server supports mailbox specific APPENDLIMIT, but did not return its value.", (uint8_t *)v55, 0x33u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v207 + 8))(v45, v208);
      }
      else
      {
        sub_1001C8BAC((uint64_t)v28, type metadata accessor for MailboxTaskLogger);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v45, v49);
      }
      uint64_t v90 = v206;
      *(void *)(v206 + 112) = 1;
      *(unsigned char *)(v90 + 120) = 2;
    }
    return result;
  }
  uint64_t v207 = v42;
  uint64_t v208 = v43;
  uint64_t v63 = v44;
  uint64_t v204 = v38;
  unint64_t v64 = v39;
  uint64_t v65 = v40;
  uint64_t result = type metadata accessor for UploadMessages(0);
  uint64_t v67 = v207;
  uint64_t v66 = v208;
  int v68 = (uint64_t *)(v47 + *(int *)(result + 56));
  unint64_t v69 = v68[1];
  if (v69 >> 60 == 15) {
    return result;
  }
  uint64_t v203 = *v68;
  *(_OWORD *)int v68 = xmmword_1005F66D0;
  unint64_t v205 = v69;
  uint64_t v206 = v47;
  uint64_t v202 = result;
  if (a6)
  {
    unint64_t v70 = v64;
    unint64_t v71 = v218;
    if (a6 == 1)
    {
      if ((~v218 & 0xF000000000000007) != 0 && v218 == 0x8000000000000028)
      {
        uint64_t v155 = v217;
        uint64_t v156 = v66;
        unint64_t v157 = v70;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v67 + 16))(v70, v217, v66);
        uint64_t v158 = v209;
        sub_1001C8C0C(v155, v209, type metadata accessor for MailboxTaskLogger);
        sub_100086918(0x8000000000000028);
        sub_100086918(0x8000000000000028);
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v159 = sub_1005E0EB0();
        os_log_type_t v160 = sub_1005E25C0();
        int v161 = v160;
        if (os_log_type_enabled(v159, v160))
        {
          uint64_t v162 = swift_slowAlloc();
          uint64_t v217 = swift_slowAlloc();
          uint64_t v221 = v217;
          *(_DWORD *)uint64_t v162 = 68159235;
          LODWORD(v219) = 2;
          unint64_t v218 = v157;
          sub_1005E2960();
          *(_WORD *)(v162 + 8) = 256;
          uint64_t v163 = v158 + *(int *)(v215 + 20);
          LOBYTE(v219) = *(unsigned char *)v163;
          sub_1005E2960();
          *(_WORD *)(v162 + 11) = 2082;
          LODWORD(v215) = v161;
          uint64_t v164 = *(void *)(v163 + 8);
          unint64_t v165 = *(void *)(v163 + 16);
          swift_bridgeObjectRetain();
          uint64_t v219 = sub_1000C6914(v164, v165, &v221);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v162 + 21) = 1040;
          LODWORD(v219) = 2;
          sub_1005E2960();
          *(_WORD *)(v162 + 27) = 512;
          LOWORD(v219) = *(_WORD *)(v163 + 24);
          sub_1005E2960();
          *(_WORD *)(v162 + 31) = 2160;
          uint64_t v219 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v162 + 41) = 2085;
          int v166 = *(_DWORD *)(v163 + 40);
          uint64_t v219 = *(void *)(v163 + 32);
          int v220 = v166;
          swift_bridgeObjectRetain();
          uint64_t v167 = sub_1005E1CC0();
          uint64_t v219 = sub_1000C6914(v167, v168, &v221);
          uint64_t v47 = v206;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1001C8BAC(v209, type metadata accessor for MailboxTaskLogger);
          _os_log_impl((void *)&_mh_execute_header, v159, (os_log_type_t)v215, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND failed with “No, try create”.", (uint8_t *)v162, 0x33u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v218, v208);
        }
        else
        {
          sub_1001C8BAC(v158, type metadata accessor for MailboxTaskLogger);

          (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v157, v156);
        }
        uint64_t v186 = v203;
        uint64_t v187 = *(int *)(v202 + 64);
        uint64_t v188 = v47;
        long long v189 = *(void **)(v47 + v187);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v189 = sub_100016D78(0, v189[2] + 1, 1, v189);
        }
        unint64_t v191 = v189[2];
        unint64_t v190 = v189[3];
        if (v191 >= v190 >> 1) {
          long long v189 = sub_100016D78((void *)(v190 > 1), v191 + 1, 1, v189);
        }
        v189[2] = v191 + 1;
        uint64_t v192 = &v189[2 * v191];
        unint64_t v193 = v205;
        v192[4] = v186;
        v192[5] = v193;
        sub_1000869F0(0x8000000000000028);
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)(v188 + v187) = v189;
        return result;
      }
      uint64_t v72 = v217;
      uint64_t v73 = v66;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v63, v217, v66);
      os_log_t v74 = (os_log_t)v214;
      sub_1001C8C0C(v72, v214, type metadata accessor for MailboxTaskLogger);
      sub_100086918(v71);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100086918(v71);
      swift_bridgeObjectRetain();
      sub_100086918(v71);
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_1005E0EB0();
      os_log_type_t v76 = sub_1005E25C0();
      int v77 = v76;
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v78 = swift_slowAlloc();
        LODWORD(v211) = v77;
        uint64_t v79 = v78;
        uint64_t v213 = swift_slowAlloc();
        uint64_t v221 = v213;
        *(_DWORD *)uint64_t v79 = 68159491;
        LODWORD(v219) = 2;
        uint64_t v217 = v63;
        sub_1005E2960();
        *(_WORD *)(v79 + 8) = 256;
        uint64_t v80 = (char *)v74 + *(int *)(v215 + 20);
        LOBYTE(v219) = *v80;
        sub_1005E2960();
        *(_WORD *)(v79 + 11) = 2082;
        uint64_t v81 = *((void *)v80 + 1);
        unint64_t v82 = *((void *)v80 + 2);
        swift_bridgeObjectRetain();
        uint64_t v219 = sub_1000C6914(v81, v82, &v221);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v79 + 21) = 1040;
        LODWORD(v219) = 2;
        sub_1005E2960();
        *(_WORD *)(v79 + 27) = 512;
        LOWORD(v219) = *((_WORD *)v80 + 12);
        sub_1005E2960();
        *(_WORD *)(v79 + 31) = 2160;
        uint64_t v219 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v79 + 41) = 2085;
        int v83 = *((_DWORD *)v80 + 10);
        uint64_t v219 = *((void *)v80 + 4);
        int v220 = v83;
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_1005E1CC0();
        uint64_t v219 = sub_1000C6914(v84, v85, &v221);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001C8BAC(v214, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v79 + 51) = 2082;
        sub_100086918(v218);
        swift_bridgeObjectRetain();
        ResponseText.debugDescription.getter(v218);
        uint64_t v87 = v86;
        unint64_t v89 = v88;
        sub_1000869F0(v218);
        swift_bridgeObjectRelease();
        uint64_t v219 = sub_1000C6914(v87, v89, &v221);
        unint64_t v71 = v218;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000869F0(v71);
        swift_bridgeObjectRelease();
        sub_1000869F0(v71);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v211, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND failed: %{public}s", (uint8_t *)v79, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v217, v208);
      }
      else
      {
        sub_1001C8BAC((uint64_t)v74, type metadata accessor for MailboxTaskLogger);
        sub_1000869F0(v71);
        swift_bridgeObjectRelease();
        sub_1000869F0(v71);

        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v63, v73);
      }
      uint64_t v176 = v203;
      uint64_t v170 = *(int *)(v202 + 68);
      uint64_t v171 = *(void **)(v206 + v170);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v171 = sub_10001822C(0, v171[2] + 1, 1, v171);
      }
      unint64_t v178 = v171[2];
      unint64_t v177 = v171[3];
      if (v178 >= v177 >> 1) {
        uint64_t v171 = sub_10001822C((void *)(v177 > 1), v178 + 1, 1, v171);
      }
      v171[2] = v178 + 1;
      int64_t v179 = &v171[4 * v178];
      unint64_t v180 = v205;
      v179[4] = v176;
      v179[5] = v180;
      v179[6] = 0;
      *((_WORD *)v179 + 28) = 256;
    }
    else
    {
      uint64_t v120 = v217;
      uint64_t v121 = v66;
      uint64_t v122 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v32, v217, v66);
      uint64_t v123 = v213;
      sub_1001C8C0C(v120, v213, type metadata accessor for MailboxTaskLogger);
      sub_100086918(v71);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100086918(v71);
      swift_bridgeObjectRetain();
      sub_100086918(v71);
      swift_bridgeObjectRetain();
      int v124 = sub_1005E0EB0();
      os_log_type_t v125 = sub_1005E25C0();
      int v126 = v125;
      if (os_log_type_enabled(v124, v125))
      {
        uint64_t v127 = swift_slowAlloc();
        uint64_t v214 = (uint64_t)v124;
        uint64_t v128 = v127;
        uint64_t v217 = swift_slowAlloc();
        uint64_t v221 = v217;
        *(_DWORD *)uint64_t v128 = 68159491;
        LODWORD(v219) = 2;
        sub_1005E2960();
        *(_WORD *)(v128 + 8) = 256;
        uint64_t v129 = v123;
        uint64_t v130 = v123 + *(int *)(v215 + 20);
        LOBYTE(v219) = *(unsigned char *)v130;
        sub_1005E2960();
        *(_WORD *)(v128 + 11) = 2082;
        uint64_t v215 = (uint64_t)v32;
        LODWORD(v211) = v126;
        uint64_t v131 = *(void *)(v130 + 8);
        unint64_t v132 = *(void *)(v130 + 16);
        swift_bridgeObjectRetain();
        uint64_t v219 = sub_1000C6914(v131, v132, &v221);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v128 + 21) = 1040;
        LODWORD(v219) = 2;
        sub_1005E2960();
        *(_WORD *)(v128 + 27) = 512;
        LOWORD(v219) = *(_WORD *)(v130 + 24);
        sub_1005E2960();
        *(_WORD *)(v128 + 31) = 2160;
        uint64_t v219 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v128 + 41) = 2085;
        int v133 = *(_DWORD *)(v130 + 40);
        uint64_t v219 = *(void *)(v130 + 32);
        int v220 = v133;
        swift_bridgeObjectRetain();
        uint64_t v134 = sub_1005E1CC0();
        uint64_t v219 = sub_1000C6914(v134, v135, &v221);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001C8BAC(v129, type metadata accessor for MailboxTaskLogger);
        *(_WORD *)(v128 + 51) = 2082;
        sub_100086918(v218);
        swift_bridgeObjectRetain();
        ResponseText.debugDescription.getter(v218);
        uint64_t v137 = v136;
        unint64_t v139 = v138;
        sub_1000869F0(v218);
        swift_bridgeObjectRelease();
        uint64_t v219 = sub_1000C6914(v137, v139, &v221);
        sub_1005E2960();
        unint64_t v71 = v218;
        swift_bridgeObjectRelease();
        sub_1000869F0(v71);
        swift_bridgeObjectRelease();
        sub_1000869F0(v71);
        swift_bridgeObjectRelease();
        os_log_t v140 = (os_log_t)v214;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v214, (os_log_type_t)v211, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND failed: %{public}s", (uint8_t *)v128, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v215, v208);
      }
      else
      {
        sub_1001C8BAC(v123, type metadata accessor for MailboxTaskLogger);
        sub_1000869F0(v71);
        swift_bridgeObjectRelease();
        sub_1000869F0(v71);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v122 + 8))(v32, v121);
      }
      uint64_t v169 = v203;
      uint64_t v170 = *(int *)(v202 + 68);
      uint64_t v171 = *(void **)(v206 + v170);
      sub_100008D24(v203, v205);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v171 = sub_10001822C(0, v171[2] + 1, 1, v171);
      }
      unint64_t v173 = v171[2];
      unint64_t v172 = v171[3];
      if (v173 >= v172 >> 1) {
        uint64_t v171 = sub_10001822C((void *)(v172 > 1), v173 + 1, 1, v171);
      }
      v171[2] = v173 + 1;
      uint64_t v174 = &v171[4 * v173];
      unint64_t v175 = v205;
      v174[4] = v169;
      v174[5] = v175;
      v174[6] = 0;
      *((_WORD *)v174 + 28) = 256;
      sub_100057EFC(v169, v175);
    }
    sub_1000869F0(v71);
LABEL_47:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v206 + v170) = v171;
    return result;
  }
  uint64_t v91 = v65;
  unint64_t v92 = v218;
  if ((~v218 & 0xF000000000000007) == 0 || ((v218 >> 59) & 0x1E | (v218 >> 2) & 1) != 7)
  {
    uint64_t v141 = v217;
    uint64_t v142 = v66;
    uint64_t v143 = v91;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v91, v217, v66);
    sub_1001C8C0C(v141, (uint64_t)v24, type metadata accessor for MailboxTaskLogger);
    sub_100086918(v92);
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v144 = sub_1005E0EB0();
    os_log_type_t v145 = sub_1005E25C0();
    int v146 = v145;
    if (os_log_type_enabled(v144, v145))
    {
      uint64_t v147 = swift_slowAlloc();
      uint64_t v214 = swift_slowAlloc();
      uint64_t v221 = v214;
      *(_DWORD *)uint64_t v147 = 68159235;
      LODWORD(v219) = 2;
      uint64_t v217 = v143;
      LODWORD(v213) = v146;
      sub_1005E2960();
      *(_WORD *)(v147 + 8) = 256;
      uint64_t v148 = v67;
      uint64_t v149 = &v24[*(int *)(v215 + 20)];
      LOBYTE(v219) = *v149;
      sub_1005E2960();
      *(_WORD *)(v147 + 11) = 2082;
      uint64_t v150 = *((void *)v149 + 1);
      unint64_t v151 = *((void *)v149 + 2);
      swift_bridgeObjectRetain();
      uint64_t v219 = sub_1000C6914(v150, v151, &v221);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v147 + 21) = 1040;
      LODWORD(v219) = 2;
      sub_1005E2960();
      *(_WORD *)(v147 + 27) = 512;
      LOWORD(v219) = *((_WORD *)v149 + 12);
      sub_1005E2960();
      *(_WORD *)(v147 + 31) = 2160;
      uint64_t v219 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v147 + 41) = 2085;
      int v152 = *((_DWORD *)v149 + 10);
      uint64_t v219 = *((void *)v149 + 4);
      int v220 = v152;
      swift_bridgeObjectRetain();
      uint64_t v153 = sub_1005E1CC0();
      uint64_t v219 = sub_1000C6914(v153, v154, &v221);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001C8BAC((uint64_t)v24, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v144, (os_log_type_t)v213, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND succeeded without UIDValidity.", (uint8_t *)v147, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v217, v208);
    }
    else
    {
      sub_1001C8BAC((uint64_t)v24, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v143, v142);
    }
    uint64_t v181 = v203;
    uint64_t v170 = *(int *)(v202 + 68);
    uint64_t v171 = *(void **)(v206 + v170);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v171 = sub_10001822C(0, v171[2] + 1, 1, v171);
    }
    unint64_t v183 = v171[2];
    unint64_t v182 = v171[3];
    if (v183 >= v182 >> 1) {
      uint64_t v171 = sub_10001822C((void *)(v182 > 1), v183 + 1, 1, v171);
    }
    v171[2] = v183 + 1;
    long long v184 = &v171[4 * v183];
    unint64_t v185 = v205;
    v184[4] = v181;
    v184[5] = v185;
    v184[6] = 0;
    *((_WORD *)v184 + 28) = 1;
    sub_1000869F0(v218);
    goto LABEL_47;
  }
  uint64_t v93 = swift_projectBox();
  uint64_t v94 = v211;
  sub_1001C8C0C(v93, (uint64_t)v211, (uint64_t (*)(void))type metadata accessor for ResponseCodeAppend);
  int v95 = *v94;
  sub_1000079E4((uint64_t)v94 + *(int *)(v14 + 20), (uint64_t)v13, &qword_100709E30);
  sub_100086918(v92);
  swift_bridgeObjectRetain();
  uint64_t v96 = sub_10000566C(&qword_100709E38);
  uint64_t v97 = MessageIdentifierSet.startIndex.getter(v96);
  uint64_t v99 = v98;
  if (v97 == MessageIdentifierSet.endIndex.getter(v96) && v99 == v100)
  {
    uint64_t result = sub_100007A48((uint64_t)v13, &qword_100709E38);
    __break(1u);
  }
  else
  {
    MessageIdentifierSet.subscript.getter();
    int v101 = v219;
    sub_100007A48((uint64_t)v13, &qword_100709E38);
    LODWORD(v221) = v101;
    UIDValidityWith.init(uidValidity:value:)(v95, (uint64_t)&v221, (uint64_t)&type metadata for UID, &v219);
    uint64_t v102 = HIDWORD(v219);
    uint64_t v214 = v219;
    uint64_t v103 = v207;
    uint64_t v104 = v208;
    uint64_t v105 = v204;
    uint64_t v106 = v217;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v204, v217, v208);
    uint64_t v107 = v210;
    sub_1001C8C0C(v106, v210, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    int v108 = sub_1005E0EB0();
    os_log_type_t v109 = sub_1005E25C0();
    int v110 = v109;
    if (os_log_type_enabled(v108, v109))
    {
      uint64_t v111 = swift_slowAlloc();
      LODWORD(v217) = v110;
      uint64_t v112 = v111;
      uint64_t v213 = swift_slowAlloc();
      uint64_t v221 = v213;
      *(_DWORD *)uint64_t v112 = 68159491;
      LODWORD(v219) = 2;
      sub_1005E2960();
      *(_WORD *)(v112 + 8) = 256;
      uint64_t v113 = *(int *)(v215 + 20);
      uint64_t v215 = v102;
      uint64_t v114 = v107 + v113;
      LOBYTE(v219) = *(unsigned char *)(v107 + v113);
      sub_1005E2960();
      *(_WORD *)(v112 + 11) = 2082;
      uint64_t v115 = *(void *)(v114 + 8);
      unint64_t v116 = *(void *)(v114 + 16);
      swift_bridgeObjectRetain();
      uint64_t v219 = sub_1000C6914(v115, v116, &v221);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v112 + 21) = 1040;
      LODWORD(v219) = 2;
      sub_1005E2960();
      *(_WORD *)(v112 + 27) = 512;
      LOWORD(v219) = *(_WORD *)(v114 + 24);
      sub_1005E2960();
      *(_WORD *)(v112 + 31) = 2160;
      uint64_t v219 = 0x786F626C69616DLL;
      uint64_t v94 = v211;
      sub_1005E2960();
      *(_WORD *)(v112 + 41) = 2085;
      int v117 = *(_DWORD *)(v114 + 40);
      uint64_t v219 = *(void *)(v114 + 32);
      int v220 = v117;
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_1005E1CC0();
      uint64_t v219 = sub_1000C6914(v118, v119, &v221);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001C8BAC(v210, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v112 + 51) = 1024;
      uint64_t v102 = v215;
      LODWORD(v219) = v215;
      unint64_t v92 = v218;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v217, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] APPEND succeeded with UID %u.", (uint8_t *)v112, 0x39u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v105, v208);
    }
    else
    {
      sub_1001C8BAC(v107, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v105, v104);
    }
    uint64_t v194 = v203;
    uint64_t v195 = *(int *)(v202 + 68);
    uint64_t v196 = *(void **)(v206 + v195);
    sub_100008D24(v203, v205);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v196 = sub_10001822C(0, v196[2] + 1, 1, v196);
    }
    unint64_t v198 = v196[2];
    unint64_t v197 = v196[3];
    if (v198 >= v197 >> 1) {
      uint64_t v196 = sub_10001822C((void *)(v197 > 1), v198 + 1, 1, v196);
    }
    v196[2] = v198 + 1;
    uint64_t v199 = &v196[4 * v198];
    unint64_t v200 = v205;
    v199[4] = v194;
    v199[5] = v200;
    v199[6] = v214 | (v102 << 32);
    *((_WORD *)v199 + 28) = 0;
    sub_1000869F0(v92);
    swift_bridgeObjectRelease();
    sub_100057EFC(v194, v200);
    *(void *)(v206 + v195) = v196;
    return sub_1001C8BAC((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for ResponseCodeAppend);
  }
  return result;
}

uint64_t sub_1001C4FFC(uint64_t result, unint64_t a2)
{
  if ((a2 & 0x3000000000000000) == 0x1000000000000000)
  {
    uint64_t v4 = result;
    unint64_t v5 = a2 & 0xCFFFFFFFFFFFFFFFLL;
    uint64_t v6 = type metadata accessor for UploadMessages(0);
    uint64_t v7 = *(void *)(v2 + *(int *)(v6 + 60));
    sub_100008D24(v4, v5);
    if (sub_100010454(v4, v5, v7))
    {
      uint64_t v8 = *(int *)(v6 + 68);
      uint64_t v9 = *(void **)(v2 + v8);
      sub_100008D24(v4, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_10001822C(0, v9[2] + 1, 1, v9);
      }
      unint64_t v10 = v9[2];
      unint64_t v11 = v9[3];
      unint64_t v12 = v10 + 1;
      if (v10 >= v11 >> 1)
      {
        unint64_t v17 = v10 + 1;
        uint64_t v14 = v9;
        unint64_t v15 = v9[2];
        uint64_t v16 = sub_10001822C((void *)(v11 > 1), v10 + 1, 1, v14);
        unint64_t v10 = v15;
        unint64_t v12 = v17;
        uint64_t v9 = v16;
      }
      v9[2] = v12;
      uint64_t v13 = &v9[4 * v10];
      _OWORD v13[4] = v4;
      v13[5] = v5;
      v13[6] = 0;
      *((_WORD *)v13 + 28) = 256;
      uint64_t result = sub_10003E03C(v4, a2);
      *(void *)(v2 + v8) = v9;
    }
    else
    {
      return sub_10003E03C(v4, a2);
    }
  }
  return result;
}

uint64_t sub_1001C5140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v6 = __chkstk_darwin(v60);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v61 = (uint64_t)&v54 - v9;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v62 = (char *)&v54 - v14;
  uint64_t v15 = type metadata accessor for UploadMessages(0);
  uint64_t v16 = *(void *)(a2 + *(int *)(v15 + 64));
  uint64_t v17 = *(void *)(v16 + 16);
  unint64_t v64 = v8;
  uint64_t v65 = v11;
  if (v17)
  {
    uint64_t v63 = a3;
    uint64_t v18 = v10;
    uint64_t v19 = a2;
    uint64_t v20 = a1;
    swift_bridgeObjectRetain();
    uint64_t v21 = (unint64_t *)(v16 + 40);
    do
    {
      uint64_t v23 = *(v21 - 1);
      unint64_t v22 = *v21;
      sub_100008D24(v23, *v21);
      sub_1000191A0(&v68, v23, v22);
      sub_1000094D4(v68, v69);
      v21 += 2;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a1 = v20;
    a2 = v19;
    uint64_t v10 = v18;
    uint64_t v8 = v64;
    uint64_t v11 = v65;
    a3 = v63;
  }
  uint64_t v24 = *(int *)(v15 + 72);
  if ((*(unsigned char *)(a2 + v24) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v25 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v62, a3, v10);
  uint64_t v26 = v61;
  sub_1001C8C0C(a3, v61, type metadata accessor for MailboxTaskLogger);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v27 = sub_1005E0EB0();
  os_log_type_t v28 = sub_1005E25C0();
  int v58 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v63 = a3;
    uint64_t v30 = v29;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v67 = v56;
    *(_DWORD *)uint64_t v30 = 68159235;
    LODWORD(v68) = 2;
    uint64_t v57 = v24;
    sub_1005E2960();
    *(_WORD *)(v30 + 8) = 256;
    uint64_t v31 = *(int *)(v60 + 20);
    os_log_t v55 = v27;
    uint64_t v32 = v26 + v31;
    LOBYTE(v68) = *(unsigned char *)(v26 + v31);
    sub_1005E2960();
    *(_WORD *)(v30 + 11) = 2082;
    uint64_t v59 = a1;
    uint64_t v33 = *(void *)(v32 + 8);
    unint64_t v34 = *(void *)(v32 + 16);
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1000C6914(v33, v34, &v67);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 21) = 1040;
    LODWORD(v68) = 2;
    uint64_t v24 = v57;
    sub_1005E2960();
    *(_WORD *)(v30 + 27) = 512;
    LOWORD(v68) = *(_WORD *)(v32 + 24);
    sub_1005E2960();
    *(_WORD *)(v30 + 31) = 2160;
    uint64_t v68 = 0x786F626C69616DLL;
    sub_1005E2960();
    *(_WORD *)(v30 + 41) = 2085;
    int v35 = *(_DWORD *)(v32 + 40);
    uint64_t v68 = *(void *)(v32 + 32);
    LODWORD(v69) = v35;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1005E1CC0();
    uint64_t v68 = sub_1000C6914(v36, v37, &v67);
    sub_1005E2960();
    a1 = v59;
    swift_bridgeObjectRelease();
    sub_1001C8BAC(v61, type metadata accessor for MailboxTaskLogger);
    os_log_t v38 = v55;
    _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v58, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Persistence has more messages to upload. Will mark as needing to re-run.", (uint8_t *)v30, 0x33u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v63;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v62, v10);
  }
  else
  {
    sub_1001C8BAC(v26, type metadata accessor for MailboxTaskLogger);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v25, v10);
  }
  sub_1000935B0(6u);
  uint64_t result = sub_100019080(&v68, 6);
  if ((*(unsigned char *)(a2 + v24) & 1) == 0)
  {
LABEL_10:
    uint64_t v40 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v66, a3, v10);
    sub_1001C8C0C(a3, (uint64_t)v8, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v41 = sub_1005E0EB0();
    os_log_type_t v42 = sub_1005E25C0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v63 = a2;
      uint64_t v67 = v44;
      *(_DWORD *)uint64_t v43 = 68159235;
      LODWORD(v68) = 2;
      unint64_t v62 = (char *)v10;
      sub_1005E2960();
      *(_WORD *)(v43 + 8) = 256;
      uint64_t v45 = &v8[*(int *)(v60 + 20)];
      LOBYTE(v68) = *v45;
      sub_1005E2960();
      *(_WORD *)(v43 + 11) = 2082;
      uint64_t v59 = a1;
      uint64_t v46 = *((void *)v45 + 1);
      unint64_t v47 = *((void *)v45 + 2);
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1000C6914(v46, v47, &v67);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 21) = 1040;
      LODWORD(v68) = 2;
      sub_1005E2960();
      *(_WORD *)(v43 + 27) = 512;
      LOWORD(v68) = *((_WORD *)v45 + 12);
      sub_1005E2960();
      *(_WORD *)(v43 + 31) = 2160;
      uint64_t v68 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v43 + 41) = 2085;
      int v48 = *((_DWORD *)v45 + 10);
      uint64_t v68 = *((void *)v45 + 4);
      LODWORD(v69) = v48;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1005E1CC0();
      uint64_t v68 = sub_1000C6914(v49, v50, &v67);
      a1 = v59;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001C8BAC((uint64_t)v64, type metadata accessor for MailboxTaskLogger);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Removing all messages pending upload.", (uint8_t *)v43, 0x33u);
      swift_arrayDestroy();
      a2 = v63;
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, char *))(v65 + 8))(v66, v62);
    }
    else
    {
      sub_1001C8BAC((uint64_t)v8, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v40, v10);
    }
    uint64_t result = type metadata accessor for MailboxSyncState();
    *(unsigned char *)(a1 + *(int *)(result + 52)) = 0;
  }
  if (*(unsigned char *)(a2 + 120))
  {
    uint64_t v51 = *(void *)(a2 + 112);
    if (*(unsigned char *)(a2 + 120) == 1)
    {
      uint64_t result = type metadata accessor for MailboxSyncState();
      char v52 = 0;
      uint64_t v53 = a1 + *(int *)(result + 72);
      *(void *)uint64_t v53 = v51;
    }
    else
    {
      if (!v51) {
        return result;
      }
      uint64_t result = type metadata accessor for MailboxSyncState();
      uint64_t v53 = a1 + *(int *)(result + 72);
      *(void *)uint64_t v53 = 0;
      char v52 = 1;
    }
    *(unsigned char *)(v53 + 8) = v52;
    *(unsigned char *)(v53 + 9) = 0;
  }
  return result;
}

uint64_t sub_1001C59FC()
{
  if (qword_100709DF8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001C5A58(uint64_t a1)
{
  return sub_1001C0ABC(a1);
}

uint64_t sub_1001C5A74@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1001C8C74(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  a5[2] = v8;
  return result;
}

uint64_t sub_1001C5AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1001C99E0(a1, a2, a3, a4, a6, a7);
}

uint64_t sub_1001C5AB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1001C9FD8(a1, a2, a3, a5, a6);
}

uint64_t sub_1001C5AC4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  return sub_1001C32E0(a1, *(void *)(a1 + 8), a2, a3, a4, a5, a7, a7);
}

uint64_t sub_1001C5AF4(uint64_t a1)
{
  return sub_1001C4FFC(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_1001C5B14(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 24);
  unsigned int v4 = *(_DWORD *)(v2 + 32);
  v10[3] = a2;
  if (*(unsigned char *)(result + 184) == 1)
  {
    uint64_t v5 = result;
    uint64_t v7 = *(void *)(result + 168);
    uint64_t v6 = *(void *)(result + 176);
    uint64_t v11 = *(void *)(result + 160);
    uint64_t v8 = v11;
    swift_bridgeObjectRetain();
    sub_10004A48C((uint64_t)&v11, v3, v4, 0, (void (*)(char *))sub_1001C8BA4, v10);
    uint64_t result = sub_10000F0D4(v8, v7, v6, 1);
    uint64_t v9 = v11;
    *(void *)(v5 + 168) = 0;
    *(void *)(v5 + 176) = 0;
    *(void *)(v5 + 160) = v9;
    *(unsigned char *)(v5 + 184) = 1;
  }
  return result;
}

uint64_t sub_1001C5BCC()
{
  return 0x654D64616F6C7055;
}

unint64_t sub_1001C5BF4()
{
  unint64_t result = qword_10070F2F8;
  if (!qword_10070F2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F2F8);
  }
  return result;
}

uint64_t sub_1001C5C48(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  if (a2 & 0x100 | a4 & 0x100) {
    return (unsigned __int16)(a2 & 0x100 & a4 & 0x100) >> 8;
  }
  if (a2)
  {
    if ((a4 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v6 = a1;
    char v7 = 0;
    if (a4) {
      return 0;
    }
    uint64_t v5 = a3;
    sub_1001CB29C();
    if ((static UIDValidityWith<A>.__derived_struct_equals(_:_:)(&v6, &v5) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1001C5CCC(uint64_t a1, unint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, unint64_t a6, uint64_t a7, __int16 a8)
{
  sub_100008D24(a1, a2);
  sub_100008D24(a5, a6);
  char v16 = sub_100077894(a1, a2, a5, a6);
  sub_1000094D4(a5, a6);
  sub_1000094D4(a1, a2);
  if ((v16 & 1) == 0) {
    return 0;
  }
  if ((a4 & 0x100) != 0) {
    return (a8 & 0x100) != 0;
  }
  if ((a8 & 0x100) != 0) {
    return 0;
  }
  if (a4) {
    return (a8 & 1) != 0;
  }
  uint64_t v19 = a3;
  char v20 = 0;
  if ((a8 & 1) == 0)
  {
    uint64_t v18 = a7;
    sub_1001CB29C();
    if (static UIDValidityWith<A>.__derived_struct_equals(_:_:)(&v19, &v18)) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1001C5DD0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = (a2 >> 60) & 3;
  if (v8)
  {
    if (v8 == 1)
    {
      if ((a4 & 0x3000000000000000) == 0x1000000000000000)
      {
        sub_10003E020(a1, a2);
        sub_10003E020(a3, a4);
        uint64_t v9 = a1;
        unint64_t v10 = a2 & 0xCFFFFFFFFFFFFFFFLL;
        uint64_t v11 = a3;
        unint64_t v12 = a4 & 0xCFFFFFFFFFFFFFFFLL;
LABEL_7:
        char v13 = sub_100077894(v9, v10, v11, v12);
        sub_10003E03C(a3, a4);
        sub_10003E03C(a1, a2);
        return v13 & 1;
      }
    }
    else if ((a4 & 0x3000000000000000) == 0x2000000000000000 && !a3 && a4 == 0x2000000000000000)
    {
      return 1;
    }
  }
  else if ((a4 & 0x3000000000000000) == 0)
  {
    sub_10003E020(a1, a2);
    sub_10003E020(a3, a4);
    uint64_t v9 = a1;
    unint64_t v10 = a2;
    uint64_t v11 = a3;
    unint64_t v12 = a4;
    goto LABEL_7;
  }
  return 0;
}

uint64_t type metadata accessor for UploadMessages(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_10070F420);
}

uint64_t type metadata accessor for UploadMessages.PendingUpload(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_10070F378);
}

unint64_t sub_1001C5F24(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_100008D24(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    uint64_t v12 = sub_1005E0970();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10000566C(&qword_100709E58);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v16 = *(int *)(a3 + 28);
    uint64_t v17 = (uint64_t *)(a1 + v16);
    uint64_t v18 = (uint64_t *)(a2 + v16);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    sub_100008D24(*v18, v20);
    *uint64_t v17 = v19;
    v17[1] = v20;
  }
  return a1;
}

uint64_t sub_1001C60D4(uint64_t a1, uint64_t a2)
{
  sub_1000094D4(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1005E0970();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  return sub_1000094D4(v8, v9);
}

uint64_t sub_1001C61AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 24);
  unint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1005E0970();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_10000566C(&qword_100709E58);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (uint64_t *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  sub_100008D24(*v16, v18);
  *uint64_t v15 = v17;
  v15[1] = v18;
  return a1;
}

uint64_t sub_1001C630C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  sub_1000094D4(v8, v9);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(unsigned char *)(a1 + 23) = *(unsigned char *)(a2 + 23);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1005E0970();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_10000566C(&qword_100709E58);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 28);
  unint64_t v20 = (uint64_t *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  sub_100008D24(*v21, v23);
  uint64_t v24 = *v20;
  unint64_t v25 = v20[1];
  *unint64_t v20 = v22;
  v20[1] = v23;
  sub_1000094D4(v24, v25);
  return a1;
}

uint64_t sub_1001C6518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  unint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1005E0970();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000566C(&qword_100709E58);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1001C6658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1000094D4(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(_WORD *)(a1 + 22) = *(_WORD *)(a2 + 22);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1005E0970();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10000566C(&qword_100709E58);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = *(void *)(a1 + v17);
  unint64_t v19 = *(void *)(a1 + v17 + 8);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  sub_1000094D4(v18, v19);
  return a1;
}

uint64_t sub_1001C6844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C6858);
}

uint64_t sub_1001C6858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_10000566C(&qword_100709E58);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1001C690C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C6920);
}

uint64_t sub_1001C6920(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100709E58);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1001C69C8()
{
  sub_1001C8758(319, (unint64_t *)&unk_10070F388, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *destroy for UploadMessages.CommandID(uint64_t *result)
{
  unint64_t v1 = result[1];
  if ((v1 & 0x3000000000000000) == 0) {
    return (uint64_t *)sub_1000094D4(*result, v1);
  }
  return result;
}

uint64_t _s13IMAP2Behavior14UploadMessagesV9CommandIDOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a2[1];
  if ((v3 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_100008D24(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for UploadMessages.CommandID(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  unint64_t v5 = a2[1];
  uint64_t v6 = v5 & 0x3000000000000000;
  if ((v4 & 0x3000000000000000) == 0)
  {
    if (!v6)
    {
      uint64_t v9 = *a2;
      sub_100008D24(v9, v5);
      uint64_t v10 = *a1;
      unint64_t v11 = a1[1];
      *a1 = v9;
      a1[1] = v5;
      sub_1000094D4(v10, v11);
      return a1;
    }
    sub_1000094D4(*a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v7 = *a2;
  sub_100008D24(v7, v5);
  *a1 = v7;
  a1[1] = v5;
  return a1;
}

uint64_t *assignWithTake for UploadMessages.CommandID(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if ((v4 & 0x3000000000000000) == 0)
  {
    uint64_t v5 = a2[1];
    if ((v5 & 0x3000000000000000) == 0)
    {
      uint64_t v7 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1000094D4(v7, v4);
      return a1;
    }
    sub_1000094D4(*a1, v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadMessages.CommandID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xB && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 11);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    unsigned int v4 = 16 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 3) {
    return v4 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for UploadMessages.CommandID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xA)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 11;
    if (a3 >= 0xB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (14 - a2)) | ((14 - a2) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_1001C6CA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 60;
  if (((4 * v1) & 0xC) != 0) {
    return 16 - ((4 * v1) & 0xC | (v1 >> 2));
  }
  else {
    return 0;
  }
}

void *sub_1001C6CC8(void *result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *unint64_t result = a2 - 13;
    result[1] = 0;
  }
  else if (a2)
  {
    *unint64_t result = 0;
    result[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.CommandID()
{
  return &type metadata for UploadMessages.CommandID;
}

ValueMetadata *type metadata accessor for UploadMessages.CommandID.Kind()
{
  return &type metadata for UploadMessages.CommandID.Kind;
}

uint64_t sub_1001C6D1C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(void *)(a1 + 24) = a2[3];
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = a2[7];
    uint64_t v8 = a2 + 8;
    long long v9 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 88) = v9;
    uint64_t v10 = v9;
    unint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(a1 + 64, v8, v10);
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    *(unsigned char *)(a1 + 105) = *((unsigned char *)a2 + 105);
    *(void *)(a1 + 112) = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    uint64_t v12 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v12;
    long long v13 = *((_OWORD *)a2 + 9);
    *(void *)(a1 + 160) = a2[20];
    uint64_t v46 = a3;
    uint64_t v14 = a3[13];
    int v15 = (void *)(a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    *(_OWORD *)(a1 + 144) = v13;
    uint64_t v17 = type metadata accessor for UploadMessages.PendingUpload(0);
    uint64_t v18 = *(void *)(v17 - 8);
    unint64_t v19 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = sub_10000566C(&qword_10070F3C0);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      uint64_t v21 = v46;
    }
    else
    {
      uint64_t v44 = v18;
      uint64_t v22 = *v16;
      unint64_t v23 = v16[1];
      sub_100008D24(*v16, v23);
      *int v15 = v22;
      v15[1] = v23;
      v15[2] = v16[2];
      *((unsigned char *)v15 + 24) = *((unsigned char *)v16 + 24);
      uint64_t v24 = *(int *)(v17 + 24);
      unint64_t v25 = (char *)v15 + v24;
      uint64_t v45 = v16;
      uint64_t v26 = (char *)v16 + v24;
      uint64_t v27 = sub_1005E0970();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v30 = sub_10000566C(&qword_100709E58);
        memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v21 = v46;
      uint64_t v31 = *(int *)(v17 + 28);
      uint64_t v32 = (void *)((char *)v15 + v31);
      uint64_t v33 = (uint64_t *)((char *)v45 + v31);
      uint64_t v34 = *v33;
      unint64_t v35 = v33[1];
      sub_100008D24(*v33, v35);
      *uint64_t v32 = v34;
      v32[1] = v35;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v15, 0, 1, v29);
    }
    uint64_t v36 = v21[14];
    uint64_t v37 = a1 + v36;
    os_log_t v38 = (uint64_t *)((char *)a2 + v36);
    unint64_t v39 = v38[1];
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    }
    else
    {
      uint64_t v40 = *v38;
      sub_100008D24(*v38, v38[1]);
      *(void *)uint64_t v37 = v40;
      *(void *)(v37 + 8) = v39;
    }
    uint64_t v41 = v21[16];
    *(void *)(a1 + v21[15]) = *(uint64_t *)((char *)a2 + v21[15]);
    *(void *)(a1 + v41) = *(uint64_t *)((char *)a2 + v41);
    uint64_t v42 = v21[18];
    *(void *)(a1 + v21[17]) = *(uint64_t *)((char *)a2 + v21[17]);
    *(unsigned char *)(a1 + v42) = *((unsigned char *)a2 + v42);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001C7104(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = type metadata accessor for UploadMessages.PendingUpload(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_1000094D4(*(void *)v4, *(void *)(v4 + 8));
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_1005E0970();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    sub_1000094D4(*(void *)(v4 + *(int *)(v5 + 28)), *(void *)(v4 + *(int *)(v5 + 28) + 8));
  }
  long long v9 = (uint64_t *)(a1 + *(int *)(a2 + 56));
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_1000094D4(*v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001C72A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v7 = a2 + 64;
  long long v8 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v8;
  uint64_t v9 = v8;
  unint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(a1 + 64, v7, v9);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  long long v12 = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v41 = a3;
  uint64_t v13 = a3[13];
  uint64_t v14 = (void *)(a1 + v13);
  int v15 = (uint64_t *)(a2 + v13);
  *(_OWORD *)(a1 + 144) = v12;
  uint64_t v16 = type metadata accessor for UploadMessages.PendingUpload(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = sub_10000566C(&qword_10070F3C0);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = *v15;
    unint64_t v21 = v15[1];
    sub_100008D24(*v15, v21);
    *uint64_t v14 = v20;
    v14[1] = v21;
    void v14[2] = v15[2];
    *((unsigned char *)v14 + 24) = *((unsigned char *)v15 + 24);
    uint64_t v22 = *(int *)(v16 + 24);
    unint64_t v23 = (char *)v14 + v22;
    uint64_t v24 = (char *)v15 + v22;
    uint64_t v25 = sub_1005E0970();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_10000566C(&qword_100709E58);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v28 = *(int *)(v16 + 28);
    uint64_t v29 = (void *)((char *)v14 + v28);
    uint64_t v30 = (uint64_t *)((char *)v15 + v28);
    uint64_t v31 = *v30;
    unint64_t v32 = v30[1];
    sub_100008D24(*v30, v32);
    *uint64_t v29 = v31;
    v29[1] = v32;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v33 = v41[14];
  uint64_t v34 = a1 + v33;
  unint64_t v35 = (uint64_t *)(a2 + v33);
  unint64_t v36 = v35[1];
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    uint64_t v37 = *v35;
    sub_100008D24(*v35, v35[1]);
    *(void *)uint64_t v34 = v37;
    *(void *)(v34 + 8) = v36;
  }
  uint64_t v38 = v41[16];
  *(void *)(a1 + v41[15]) = *(void *)(a2 + v41[15]);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  uint64_t v39 = v41[18];
  *(void *)(a1 + v41[17]) = *(void *)(a2 + v41[17]);
  *(unsigned char *)(a1 + v39) = *(unsigned char *)(a2 + v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001C7624(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_100022498((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  uint64_t v6 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v7 = a3[13];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UploadMessages.PendingUpload(0);
  uint64_t v11 = *(void *)(v10 - 8);
  long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1001C8BAC(v8, type metadata accessor for UploadMessages.PendingUpload);
      goto LABEL_7;
    }
    uint64_t v24 = *(void *)v9;
    unint64_t v25 = *(void *)(v9 + 8);
    sub_100008D24(*(void *)v9, v25);
    uint64_t v26 = *(void *)v8;
    unint64_t v27 = *(void *)(v8 + 8);
    *(void *)uint64_t v8 = v24;
    *(void *)(v8 + 8) = v25;
    sub_1000094D4(v26, v27);
    *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
    *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
    *(unsigned char *)(v8 + 18) = *(unsigned char *)(v9 + 18);
    *(unsigned char *)(v8 + 19) = *(unsigned char *)(v9 + 19);
    *(unsigned char *)(v8 + 20) = *(unsigned char *)(v9 + 20);
    *(unsigned char *)(v8 + 21) = *(unsigned char *)(v9 + 21);
    *(unsigned char *)(v8 + 22) = *(unsigned char *)(v9 + 22);
    *(unsigned char *)(v8 + 23) = *(unsigned char *)(v9 + 23);
    *(unsigned char *)(v8 + 24) = *(unsigned char *)(v9 + 24);
    uint64_t v28 = *(int *)(v10 + 24);
    uint64_t v29 = (void *)(v8 + v28);
    __dsta = (void *)(v9 + v28);
    uint64_t v30 = sub_1005E0970();
    uint64_t v56 = *(void *)(v30 - 8);
    uint64_t v57 = v29;
    uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v56 + 48);
    LODWORD(v29) = v31(v29, 1, v30);
    int v32 = v31(__dsta, 1, v30);
    if (v29)
    {
      if (!v32)
      {
        (*(void (**)(void *, void *, uint64_t))(v56 + 16))(v57, __dsta, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v57, 0, 1, v30);
        goto LABEL_18;
      }
      size_t v33 = *(void *)(*(void *)(sub_10000566C(&qword_100709E58) - 8) + 64);
      uint64_t v34 = v57;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, void *, uint64_t))(v56 + 24))(v57, __dsta, v30);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v56 + 8))(v57, v30);
      size_t v33 = *(void *)(*(void *)(sub_10000566C(&qword_100709E58) - 8) + 64);
      uint64_t v34 = v57;
    }
    memcpy(v34, __dsta, v33);
LABEL_18:
    uint64_t v40 = *(int *)(v10 + 28);
    uint64_t v41 = (uint64_t *)(v8 + v40);
    uint64_t v42 = (uint64_t *)(v9 + v40);
    uint64_t v43 = *v42;
    unint64_t v44 = v42[1];
    sub_100008D24(*v42, v44);
    uint64_t v45 = *v41;
    unint64_t v46 = v41[1];
    *uint64_t v41 = v43;
    v41[1] = v44;
    sub_1000094D4(v45, v46);
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v23 = sub_10000566C(&qword_10070F3C0);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v15 = *(void *)v9;
  unint64_t v16 = *(void *)(v9 + 8);
  sub_100008D24(*(void *)v9, v16);
  *(void *)uint64_t v8 = v15;
  *(void *)(v8 + 8) = v16;
  uint64_t v17 = *(void *)(v9 + 16);
  *(unsigned char *)(v8 + 24) = *(unsigned char *)(v9 + 24);
  *(void *)(v8 + 16) = v17;
  uint64_t v18 = *(int *)(v10 + 24);
  __dst = (void *)(v8 + v18);
  uint64_t v19 = (const void *)(v9 + v18);
  uint64_t v20 = sub_1005E0970();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_10000566C(&qword_100709E58);
    memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(__dst, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  uint64_t v35 = *(int *)(v10 + 28);
  unint64_t v36 = (uint64_t *)(v8 + v35);
  uint64_t v37 = (uint64_t *)(v9 + v35);
  uint64_t v38 = *v37;
  unint64_t v39 = v37[1];
  sub_100008D24(*v37, v39);
  *unint64_t v36 = v38;
  v36[1] = v39;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_19:
  uint64_t v47 = a3[14];
  int v48 = (uint64_t *)(a1 + v47);
  uint64_t v49 = (uint64_t *)(a2 + v47);
  unint64_t v50 = *(void *)(a2 + v47 + 8);
  if (*(void *)(a1 + v47 + 8) >> 60 != 15)
  {
    if (v50 >> 60 != 15)
    {
      uint64_t v52 = *v49;
      sub_100008D24(v52, v50);
      uint64_t v53 = *v48;
      unint64_t v54 = v48[1];
      *int v48 = v52;
      v48[1] = v50;
      sub_1000094D4(v53, v54);
      goto LABEL_26;
    }
    sub_1001C7C4C((uint64_t)v48);
    goto LABEL_24;
  }
  if (v50 >> 60 == 15)
  {
LABEL_24:
    *(_OWORD *)int v48 = *(_OWORD *)v49;
    goto LABEL_26;
  }
  uint64_t v51 = *v49;
  sub_100008D24(v51, v50);
  *int v48 = v51;
  v48[1] = v50;
LABEL_26:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_1001C7C4C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001C7CA0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v7 = a3[13];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v10 = type metadata accessor for UploadMessages.PendingUpload(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000566C(&qword_10070F3C0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((unsigned char *)v8 + 24) = *((unsigned char *)v9 + 24);
    uint64_t v13 = *(int *)(v10 + 24);
    __dst = (char *)v8 + v13;
    int v14 = (char *)v9 + v13;
    uint64_t v15 = sub_1005E0970();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10000566C(&qword_100709E58);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_OWORD *)((char *)v8 + *(int *)(v10 + 28)) = *(_OWORD *)((char *)v9 + *(int *)(v10 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v18 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_1001C7F50(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s13IMAP2Behavior4TaskOwxx_0(a1 + 64);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_unknownObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v7 = a3[13];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UploadMessages.PendingUpload(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1001C8BAC(v8, type metadata accessor for UploadMessages.PendingUpload);
      goto LABEL_7;
    }
    uint64_t v21 = *(void *)v8;
    unint64_t v22 = *(void *)(v8 + 8);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    sub_1000094D4(v21, v22);
    *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
    *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
    *(unsigned char *)(v8 + 18) = *(unsigned char *)(v9 + 18);
    *(unsigned char *)(v8 + 19) = *(unsigned char *)(v9 + 19);
    *(unsigned char *)(v8 + 20) = *(unsigned char *)(v9 + 20);
    *(unsigned char *)(v8 + 21) = *(unsigned char *)(v9 + 21);
    *(_WORD *)(v8 + 22) = *(_WORD *)(v9 + 22);
    *(unsigned char *)(v8 + 24) = *(unsigned char *)(v9 + 24);
    uint64_t v23 = *(int *)(v10 + 24);
    uint64_t v24 = (void *)(v8 + v23);
    __dsta = (void *)(v9 + v23);
    uint64_t v25 = sub_1005E0970();
    uint64_t v40 = *(void *)(v25 - 8);
    uint64_t v41 = v24;
    uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
    LODWORD(v24) = v26(v24, 1, v25);
    int v27 = v26(__dsta, 1, v25);
    if (v24)
    {
      if (!v27)
      {
        (*(void (**)(void *, void *, uint64_t))(v40 + 32))(v41, __dsta, v25);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v25);
        goto LABEL_18;
      }
      size_t v28 = *(void *)(*(void *)(sub_10000566C(&qword_100709E58) - 8) + 64);
      uint64_t v29 = v41;
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(void *, void *, uint64_t))(v40 + 40))(v41, __dsta, v25);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v40 + 8))(v41, v25);
      size_t v28 = *(void *)(*(void *)(sub_10000566C(&qword_100709E58) - 8) + 64);
      uint64_t v29 = v41;
    }
    memcpy(v29, __dsta, v28);
LABEL_18:
    uint64_t v30 = *(int *)(v10 + 28);
    uint64_t v31 = *(void *)(v8 + v30);
    unint64_t v32 = *(void *)(v8 + v30 + 8);
    *(_OWORD *)(v8 + v30) = *(_OWORD *)(v9 + v30);
    sub_1000094D4(v31, v32);
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v20 = sub_10000566C(&qword_10070F3C0);
    memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(unsigned char *)(v8 + 24) = *(unsigned char *)(v9 + 24);
  uint64_t v15 = *(int *)(v10 + 24);
  __dst = (void *)(v8 + v15);
  uint64_t v16 = (const void *)(v9 + v15);
  uint64_t v17 = sub_1005E0970();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10000566C(&qword_100709E58);
    memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(__dst, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  *(_OWORD *)(v8 + *(int *)(v10 + 28)) = *(_OWORD *)(v9 + *(int *)(v10 + 28));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_19:
  uint64_t v33 = a3[14];
  uint64_t v34 = (uint64_t *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  unint64_t v36 = *(void *)(a1 + v33 + 8);
  if (v36 >> 60 != 15)
  {
    unint64_t v37 = v35[1];
    if (v37 >> 60 != 15)
    {
      uint64_t v38 = *v34;
      uint64_t *v34 = *v35;
      v34[1] = v37;
      sub_1000094D4(v38, v36);
      goto LABEL_24;
    }
    sub_1001C7C4C((uint64_t)v34);
  }
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
LABEL_24:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_1001C84C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C84DC);
}

uint64_t sub_1001C84DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_10070F3C0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001C8590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C85A4);
}

void *sub_1001C85A4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_10070F3C0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 52);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1001C8650()
{
  sub_1001C8758(319, (unint64_t *)&unk_10070F430, (void (*)(uint64_t))type metadata accessor for UploadMessages.PendingUpload);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001C8758(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1005E28C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for UploadMessages.ActionID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10003E020(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for UploadMessages.ActionID(uint64_t a1)
{
  return sub_10003E03C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for UploadMessages.ActionID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10003E020(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_10003E03C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for UploadMessages.ActionID(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10003E03C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadMessages.ActionID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if ((~*(void *)(a1 + 8) & 0x3000000000000000) != 0) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadMessages.ActionID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(_OWORD *)unint64_t result = xmmword_1005F6770;
    }
  }
  return result;
}

uint64_t sub_1001C8908(uint64_t a1)
{
  if (((*(void *)(a1 + 8) >> 60) & 2) != 0) {
    return (*(_DWORD *)a1 + 2);
  }
  else {
    return (*(void *)(a1 + 8) >> 60) & 3;
  }
}

uint64_t sub_1001C8928(uint64_t result)
{
  *(void *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

void *sub_1001C8938(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    result[1] = result[1] & 0xCFFFFFFFFFFFFFFFLL | (a2 << 60);
  }
  else
  {
    *unint64_t result = (a2 - 2);
    result[1] = 0x2000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.ActionID()
{
  return &type metadata for UploadMessages.ActionID;
}

unsigned char *_s13IMAP2Behavior14UploadMessagesV9CommandIDO4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C8A3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.ActionID.Kind()
{
  return &type metadata for UploadMessages.ActionID.Kind;
}

unint64_t sub_1001C8A78()
{
  unint64_t result = qword_10070F498;
  if (!qword_10070F498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F498);
  }
  return result;
}

unint64_t sub_1001C8AD0()
{
  unint64_t result = qword_10070F4A0;
  if (!qword_10070F4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F4A0);
  }
  return result;
}

unint64_t sub_1001C8B24(uint64_t a1)
{
  unint64_t result = sub_1001C8B4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001C8B4C()
{
  unint64_t result = qword_10070F558;
  if (!qword_10070F558)
  {
    type metadata accessor for UploadMessages(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F558);
  }
  return result;
}

uint64_t sub_1001C8BA4(uint64_t a1)
{
  return sub_1001C5140(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001C8BAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001C8C0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001C8C74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v135 = a3;
  uint64_t v127 = a1;
  uint64_t v7 = 0;
  uint64_t v8 = sub_10000566C(&qword_10070F3C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v119 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskHistory.Running(0);
  uint64_t v121 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v134 = (uint64_t)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int v14 = (char *)&v118 - v13;
  uint64_t v15 = type metadata accessor for TaskHistory.Previous(0);
  uint64_t v140 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  os_log_type_t v125 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  int v124 = (char *)&v118 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  os_log_type_t v145 = (uint64_t *)((char *)&v118 - v21);
  uint64_t v22 = __chkstk_darwin(v20);
  int v146 = (uint64_t *)((char *)&v118 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v118 - v25;
  __chkstk_darwin(v24);
  size_t v28 = (char *)&v118 - v27;
  uint64_t v123 = (int *)type metadata accessor for UploadMessages(0);
  uint64_t v29 = v123[17];
  uint64_t v128 = v4;
  uint64_t v30 = *(void *)(v4 + v29);
  uint64_t v31 = *(void **)(v30 + 16);
  uint64_t v144 = a2;
  uint64_t v129 = v31;
  uint64_t v122 = v10;
  uint64_t v136 = v14;
  uint64_t v120 = a4;
  if (v31)
  {
    uint64_t v133 = v30 + 32;
    uint64_t v126 = v30;
    uint64_t v32 = swift_bridgeObjectRetain_n();
    uint64_t v33 = 0;
    while (1)
    {
      uint64_t v142 = v33;
      uint64_t v34 = v133 + 32 * (void)v33;
      uint64_t v35 = *(void *)v34;
      unint64_t v36 = *(void *)(v34 + 8);
      uint64_t v132 = *(void *)(v34 + 16);
      int v37 = *(unsigned __int8 *)(v34 + 24);
      int v130 = *(unsigned __int8 *)(v34 + 25);
      int v131 = v37;
      uint64_t v149 = v35;
      unint64_t v150 = v36;
      __chkstk_darwin(v32);
      *(&v118 - 2) = (uint64_t)&v149;
      sub_100008D24(v35, v36);
      unint64_t v138 = v36;
      uint64_t v139 = v35;
      sub_100008D24(v35, v36);
      uint64_t v38 = v135;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_10002B87C((uint64_t)sub_1001CAFAC, (uint64_t)(&v118 - 4), v38);
      uint64_t v137 = v7;
      int64_t v40 = *(void *)(v39 + 16);
      if (v40)
      {
        uint64_t v148 = _swiftEmptyArrayStorage;
        sub_10001AA94(0, v40, 0);
        uint64_t v41 = v148;
        unint64_t v42 = v148[2];
        uint64_t v43 = 32;
        do
        {
          int v44 = *(_DWORD *)(v39 + v43);
          uint64_t v148 = v41;
          unint64_t v45 = v41[3];
          if (v42 >= v45 >> 1)
          {
            sub_10001AA94(v45 > 1, v42 + 1, 1);
            uint64_t v41 = v148;
          }
          void v41[2] = v42 + 1;
          *((_DWORD *)v41 + v42 + 8) = v44;
          v43 += 24;
          ++v42;
          --v40;
        }
        while (v40);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = _swiftEmptyArrayStorage;
      }
      uint64_t v46 = v144;
      uint64_t v143 = (void *)v41[2];
      if (!v143)
      {
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
      uint64_t v141 = v41 + 4;
      uint64_t v142 = (void *)((char *)v142 + 1);
      uint64_t v147 = *(void *)(v144 + 16);
      swift_bridgeObjectRetain();
      uint64_t v47 = 0;
LABEL_14:
      if (!v147) {
        goto LABEL_13;
      }
      uint64_t v48 = v140;
      int v49 = *((_DWORD *)v141 + v47);
      uint64_t v50 = v46 + ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80));
      swift_bridgeObjectRetain_n();
      uint64_t v51 = *(void *)(v48 + 72);
      uint64_t v52 = v147;
      while (1)
      {
        sub_1001C8C0C(v50, (uint64_t)v28, type metadata accessor for TaskHistory.Previous);
        sub_1001C8C0C((uint64_t)v28, (uint64_t)v26, type metadata accessor for TaskHistory.Previous);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_1001C8BAC((uint64_t)v26, type metadata accessor for TaskHistory.Previous);
          goto LABEL_17;
        }
        int v53 = *((_DWORD *)v26 + 2);
        sub_10007C4A4(*(void *)v26);
        if (v53 == v49) {
          break;
        }
LABEL_17:
        sub_1001C8BAC((uint64_t)v28, type metadata accessor for TaskHistory.Previous);
        v50 += v51;
        if (!--v52)
        {
          uint64_t v46 = v144;
          swift_bridgeObjectRelease_n();
LABEL_13:
          if ((void *)++v47 == v143)
          {
            swift_bridgeObjectRelease_n();
LABEL_62:
            unint64_t v110 = v138;
            uint64_t v96 = v139;
            sub_1000094D4(v139, v138);
            swift_bridgeObjectRelease_n();
            char v111 = v131;
            uint64_t v112 = v128;
            uint64_t v113 = v132;
            if (v130)
            {
              uint64_t v114 = swift_allocObject();
              int v115 = *(_DWORD *)(v112 + 32);
              *(void *)(v114 + 16) = *(void *)(v112 + 24);
              *(_DWORD *)(v114 + 24) = v115;
              *(void *)(v114 + 32) = v96;
              *(void *)(v114 + 40) = v110;
            }
            else
            {
              uint64_t v116 = swift_allocObject();
              int v117 = *(_DWORD *)(v112 + 32);
              *(void *)(v116 + 16) = *(void *)(v112 + 24);
              *(_DWORD *)(v116 + 24) = v117;
              *(void *)(v116 + 32) = v96;
              *(void *)(v116 + 40) = v110;
              *(void *)(v116 + 48) = v113;
              *(unsigned char *)(v116 + 56) = v111 & 1;
            }
            swift_bridgeObjectRetain();
            uint64_t v97 = v96;
            unint64_t v98 = v110;
            goto LABEL_68;
          }
          goto LABEL_14;
        }
      }
      sub_1001C8BAC((uint64_t)v28, type metadata accessor for TaskHistory.Previous);
      swift_bridgeObjectRelease_n();
      a2 = v144;
      swift_bridgeObjectRelease_n();
      unint64_t v55 = v138;
      uint64_t v54 = v139;
      sub_1000094D4(v139, v138);
      uint64_t v32 = sub_1000094D4(v54, v55);
      uint64_t v33 = v142;
      uint64_t v7 = v137;
      if (v142 == v129)
      {
        swift_bridgeObjectRelease_n();
        a4 = v120;
        break;
      }
    }
  }
  uint64_t v56 = sub_100104D08(0, 0x2000000000000000, v135);
  uint64_t v57 = v56[2];
  if (v57)
  {
    uint64_t v137 = v7;
    uint64_t v58 = 0;
    uint64_t v142 = v56;
    uint64_t v143 = v56 + 4;
    uint64_t v59 = *(void *)(a2 + 16);
    uint64_t v147 = v59;
    do
    {
      if (v59)
      {
        uint64_t v60 = a2;
        int v61 = *((_DWORD *)v143 + v58);
        uint64_t v62 = v140;
        unint64_t v63 = (*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
        uint64_t v64 = v60 + v63;
        swift_bridgeObjectRetain_n();
        uint64_t v65 = *(void *)(v62 + 72);
        uint64_t v66 = v59;
        uint64_t v67 = v146;
        do
        {
          sub_1001C8C0C(v64, (uint64_t)v67, type metadata accessor for TaskHistory.Previous);
          uint64_t v68 = (uint64_t)v145;
          sub_1001C8C0C((uint64_t)v67, (uint64_t)v145, type metadata accessor for TaskHistory.Previous);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            unint64_t v69 = *(void *)v68;
            int v70 = *(_DWORD *)(v68 + 8);
            sub_10007C4A4(v69);
            if (v70 == v61)
            {
              sub_1001C8BAC((uint64_t)v146, type metadata accessor for TaskHistory.Previous);
              swift_bridgeObjectRelease();
              uint64_t v71 = v144;
              swift_bridgeObjectRelease_n();
              int v146 = sub_100104D08(0, 0x2000000000000000, v135);
              uint64_t v142 = (void *)v146[2];
              if (!v142)
              {
LABEL_66:
                swift_bridgeObjectRelease();
                goto LABEL_67;
              }
              uint64_t v72 = 0;
              os_log_type_t v145 = v146 + 4;
              uint64_t v143 = (void *)(v71 + v63);
              uint64_t v73 = (uint64_t)v125;
              uint64_t v74 = (uint64_t)v124;
LABEL_34:
              int v75 = *((_DWORD *)v145 + (void)v72);
              uint64_t v72 = (void *)((char *)v72 + 1);
              swift_bridgeObjectRetain_n();
              uint64_t v76 = (uint64_t)v143;
              uint64_t v77 = v147;
              while (1)
              {
                sub_1001C8C0C(v76, v74, type metadata accessor for TaskHistory.Previous);
                sub_1001C8C0C(v74, v73, type metadata accessor for TaskHistory.Previous);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  int v78 = *(_DWORD *)(v73 + 8);
                  sub_10007C4A4(*(void *)v73);
                  if (v78 == v75)
                  {
                    sub_1001C8BAC(v74, type metadata accessor for TaskHistory.Previous);
                    swift_bridgeObjectRelease_n();
                    uint64_t v79 = v127[2];
                    if (v79)
                    {
                      uint64_t v80 = v121;
                      uint64_t v81 = (uint64_t)v127
                          + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80));
                      swift_bridgeObjectRetain_n();
                      uint64_t v82 = *(void *)(v80 + 72);
                      uint64_t v83 = (uint64_t)v136;
                      do
                      {
                        sub_1001C8C0C(v81, v83, type metadata accessor for TaskHistory.Running);
                        uint64_t v84 = v134;
                        sub_1001C8C0C(v83, v134, type metadata accessor for TaskHistory.Running);
                        if (swift_getEnumCaseMultiPayload() == 1)
                        {
                          uint64_t v85 = v84;
                          int v86 = *(_DWORD *)(v84 + 4);
                          sub_10007C4A4(*(void *)(v85 + 8));
                          if (v86 == v75)
                          {
                            sub_1001C8BAC((uint64_t)v136, type metadata accessor for TaskHistory.Running);
                            uint64_t v71 = v144;
                            uint64_t v73 = (uint64_t)v125;
                            uint64_t v74 = (uint64_t)v124;
                            goto LABEL_46;
                          }
                        }
                        else
                        {
                          sub_1001C8BAC(v84, type metadata accessor for TaskHistory.Running);
                        }
                        uint64_t v83 = (uint64_t)v136;
                        sub_1001C8BAC((uint64_t)v136, type metadata accessor for TaskHistory.Running);
                        v81 += v82;
                        --v79;
                      }
                      while (v79);
                      swift_bridgeObjectRelease();
                      uint64_t v99 = v127;
                      swift_bridgeObjectRelease();
                      int v146 = v99;
                      uint64_t v71 = v144;
                    }
                    else
                    {
                      uint64_t v99 = v127;
                    }
                    swift_bridgeObjectRelease();
                    uint64_t v100 = sub_100165170(2, v135);
                    uint64_t v101 = v100[2];
                    uint64_t v102 = v128;
                    if (v101)
                    {
                      uint64_t v103 = 0;
                      while ((sub_1001652E0(*((_DWORD *)v100 + v103 + 8), (uint64_t)v99, v71) & 1) == 0)
                      {
                        ++v103;
                        uint64_t v71 = v144;
                        if (v101 == v103) {
                          goto LABEL_58;
                        }
                      }
                      goto LABEL_66;
                    }
LABEL_58:
                    swift_bridgeObjectRelease();
                    uint64_t v104 = v119;
                    sub_1000079E4(v102 + v123[13], v119, &qword_10070F3C0);
                    uint64_t v105 = type metadata accessor for UploadMessages.PendingUpload(0);
                    int v106 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 48))(v104, 1, v105);
                    sub_100007A48(v104, &qword_10070F3C0);
                    if (v106 == 1)
                    {
                      sub_1001C071C((uint64_t)&v149);
                      unint64_t v107 = v150;
                      if (v150 >> 60 != 15)
                      {
                        uint64_t v96 = v149;
                        sub_100008D24(v149, v150);
                        sub_1000191A0(&v149, v96, v107);
                        sub_1000094D4(v149, v150);
                        uint64_t v108 = swift_allocObject();
                        int v109 = *(_DWORD *)(v102 + 32);
                        *(void *)(v108 + 16) = *(void *)(v102 + 24);
                        *(_DWORD *)(v108 + 24) = v109;
                        *(void *)(v108 + 32) = v96;
                        *(void *)(v108 + 40) = v107;
                        sub_100057EE8(v96, v107);
                        swift_bridgeObjectRetain();
                        uint64_t v97 = 0;
                        unint64_t v98 = 0xF000000000000000;
                        goto LABEL_68;
                      }
                    }
LABEL_67:
                    uint64_t v96 = 0;
                    uint64_t v97 = 0;
                    unint64_t v98 = 0xF000000000000000;
LABEL_68:
                    sub_100057EE8(v97, v98);
                    return v96;
                  }
                }
                else
                {
                  sub_1001C8BAC(v73, type metadata accessor for TaskHistory.Previous);
                }
                sub_1001C8BAC(v74, type metadata accessor for TaskHistory.Previous);
                v76 += v65;
                if (!--v77)
                {
LABEL_46:
                  swift_bridgeObjectRelease_n();
                  if (v72 != v142) {
                    goto LABEL_34;
                  }
                  goto LABEL_66;
                }
              }
            }
          }
          else
          {
            sub_1001C8BAC(v68, type metadata accessor for TaskHistory.Previous);
          }
          uint64_t v67 = v146;
          sub_1001C8BAC((uint64_t)v146, type metadata accessor for TaskHistory.Previous);
          v64 += v65;
          --v66;
        }
        while (v66);
        a2 = v144;
        swift_bridgeObjectRelease_n();
        uint64_t v59 = v147;
      }
      ++v58;
    }
    while (v58 != v57);
    uint64_t result = swift_bridgeObjectRelease();
    a4 = v120;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v88 = *(void *)(*(void *)(a4 + 176) + 16);
  uint64_t v89 = v88 + 7;
  uint64_t v90 = v128;
  if (!__OFADD__(v88, 7))
  {
    if (v89 > 99) {
      goto LABEL_67;
    }
    uint64_t v91 = swift_bridgeObjectRetain();
    unint64_t v92 = sub_1000390A0(v91);
    swift_bridgeObjectRelease();
    uint64_t v93 = v123[16];
    swift_bridgeObjectRelease();
    *(void *)(v90 + v93) = v92;
    uint64_t v94 = swift_allocObject();
    int v95 = *(_DWORD *)(v90 + 32);
    *(void *)(v94 + 16) = *(void *)(v90 + 24);
    *(_DWORD *)(v94 + 24) = v95;
    *(void *)(v94 + 32) = v89;
    swift_bridgeObjectRetain();
    uint64_t v96 = 0;
    uint64_t v97 = 0;
    unint64_t v98 = 0xF000000000000000;
    goto LABEL_68;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C99E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a6;
  uint64_t v50 = type metadata accessor for MailboxTaskLogger(0);
  __chkstk_darwin(v50);
  uint64_t v52 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for UntaggedResponse(0);
  uint64_t result = __chkstk_darwin(v16);
  uint64_t v19 = &v44[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v6 + 120) != 2 || *(void *)(v6 + 112)) {
    return result;
  }
  uint64_t v47 = v15;
  uint64_t v48 = v13;
  uint64_t v49 = v12;
  uint64_t v20 = sub_1001A9C0C(0, 0xF000000000000000, a4);
  uint64_t v21 = v20[2];
  if (!v21)
  {
LABEL_7:
    return swift_bridgeObjectRelease();
  }
  uint64_t v22 = 0;
  while ((sub_100149D30(*((_DWORD *)v20 + v22 + 8), a2, a3) & 1) == 0)
  {
    if (v21 == ++v22) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  sub_1001C8C0C(a1, (uint64_t)v19, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload() != 9) {
    return sub_1001C8BAC((uint64_t)v19, type metadata accessor for UntaggedResponse);
  }
  if ((*(unsigned int *)(v6 + 32) | ((unint64_t)*(unsigned int *)(v6 + 32) << 32)) != (*((unsigned int *)v19 + 2) | ((unint64_t)*((unsigned int *)v19 + 2) << 32))) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v23 = v6;
  uint64_t v24 = *((void *)v19 + 14);
  char v25 = v19[120];
  BOOL v26 = sub_1000255D4(*(void *)(v6 + 24), *(void *)v19);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = v48;
  uint64_t v27 = v49;
  uint64_t v29 = v47;
  if (v26 && (v25 & 1) == 0)
  {
    uint64_t v30 = v51;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v48 + 16))(v47, v51, v49);
    uint64_t v31 = v30;
    uint64_t v32 = v52;
    sub_1001C8C0C(v31, (uint64_t)v52, type metadata accessor for MailboxTaskLogger);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v33 = sub_1005E0EB0();
    os_log_type_t v34 = sub_1005E25C0();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      int v45 = v35;
      uint64_t v37 = v36;
      uint64_t v46 = swift_slowAlloc();
      v55[0] = v46;
      *(_DWORD *)uint64_t v37 = 68159491;
      LODWORD(v53) = 2;
      uint64_t v51 = v24;
      sub_1005E2960();
      *(_WORD *)(v37 + 8) = 256;
      uint64_t v38 = &v32[*(int *)(v50 + 20)];
      LOBYTE(v53) = *v38;
      sub_1005E2960();
      *(_WORD *)(v37 + 11) = 2082;
      uint64_t v39 = *((void *)v38 + 1);
      unint64_t v40 = *((void *)v38 + 2);
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1000C6914(v39, v40, v55);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 21) = 1040;
      LODWORD(v53) = 2;
      sub_1005E2960();
      *(_WORD *)(v37 + 27) = 512;
      LOWORD(v53) = *((_WORD *)v38 + 12);
      sub_1005E2960();
      *(_WORD *)(v37 + 31) = 2160;
      uint64_t v53 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v37 + 41) = 2085;
      int v41 = *((_DWORD *)v38 + 10);
      uint64_t v53 = *((void *)v38 + 4);
      int v54 = v41;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1005E1CC0();
      uint64_t v53 = sub_1000C6914(v42, v43, v55);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      uint64_t v24 = v51;
      sub_1001C8BAC((uint64_t)v32, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v37 + 51) = 2048;
      uint64_t v53 = v24;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v45, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received a mailbox specific APPENDLIMIT of %ld.", (uint8_t *)v37, 0x3Du);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v48 + 8))(v47, v49);
    }
    else
    {
      sub_1001C8BAC((uint64_t)v32, type metadata accessor for MailboxTaskLogger);

      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v28 + 8))(v29, v27);
    }
    *(void *)(v23 + 112) = v24;
    *(unsigned char *)(v23 + 120) = 1;
  }
  return result;
}

uint64_t sub_1001C9FD8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v137 = a5;
  uint64_t v9 = sub_10000566C(&qword_100709E58);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v12 = __chkstk_darwin(v136);
  uint64_t v14 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v122 - v15;
  uint64_t v17 = sub_1005E0ED0();
  uint64_t v138 = *(void *)(v17 - 8);
  uint64_t v139 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t result = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v122 - v21;
  int v23 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  if (v23 == 14)
  {
    uint64_t v133 = v20;
    uint64_t v134 = v14;
    uint64_t v135 = v11;
    uint64_t v29 = sub_10000566C(&qword_10070F560);
    uint64_t result = swift_projectBox();
    if ((*(unsigned int *)(v140 + 32) | ((unint64_t)*(unsigned int *)(v140 + 32) << 32)) == (*(unsigned int *)(result + 8) | ((unint64_t)*(unsigned int *)(result + 8) << 32)))
    {
      uint64_t v30 = result;
      uint64_t v31 = *(void *)(result + 16);
      unint64_t v32 = *(void *)(result + 24);
      LODWORD(v131) = *(unsigned __int8 *)(result + 32);
      LODWORD(v130) = *(unsigned __int8 *)(result + 33);
      LODWORD(v129) = *(unsigned __int8 *)(result + 34);
      int v33 = *(unsigned __int8 *)(result + 35);
      int v127 = *(unsigned __int8 *)(result + 36);
      LODWORD(v128) = v33;
      int v34 = *(unsigned __int8 *)(result + 37);
      int v125 = *(unsigned __int8 *)(result + 38);
      int v126 = v34;
      int v35 = *(unsigned __int8 *)(result + 39);
      int v123 = *(unsigned __int8 *)(result + 40);
      int v124 = v35;
      uint64_t v36 = (uint64_t *)(result + *(int *)(v29 + 96));
      uint64_t v37 = *v36;
      unint64_t v38 = v36[1];
      uint64_t result = sub_1000255D4(*(void *)(v140 + 24), *(void *)result);
      if (result)
      {
        sub_1000079E4(v30 + *(int *)(v29 + 80), (uint64_t)v135, &qword_100709E58);
        sub_100008D24(v31, v32);
        unint64_t v122 = v32;
        sub_100008D24(v31, v32);
        unint64_t v132 = v38;
        sub_100008D24(v37, v38);
        uint64_t v39 = v31;
        unint64_t v40 = sub_100104D08(v31, v32 | 0x1000000000000000, a4);
        uint64_t v41 = v40[2];
        uint64_t v42 = v37;
        if (v41)
        {
          uint64_t v43 = 0;
          unint64_t v44 = v132 >> 62;
          while ((sub_1001652E0(*((_DWORD *)v40 + v43 + 8), a2, a3) & 1) == 0)
          {
            if (v41 == ++v43) {
              goto LABEL_16;
            }
          }
          unsigned int v61 = v44;
          swift_bridgeObjectRelease();
          uint64_t v62 = v39;
          unint64_t v63 = v122;
          sub_1000094D4(v39, v122);
          uint64_t v64 = type metadata accessor for UploadMessages(0);
          uint64_t v65 = v140;
          sub_10009413C(v39, v63, v142);
          sub_100057EFC(*(uint64_t *)&v142[0], *((unint64_t *)&v142[0] + 1));
          if (*(unsigned __int8 *)(v65 + 120) > 1u)
          {
LABEL_50:
            uint64_t v106 = v65 + *(int *)(v64 + 52);
            sub_100007A48(v106, &qword_10070F3C0);
            uint64_t v107 = type metadata accessor for UploadMessages.PendingUpload(0);
            sub_10001FDF0((uint64_t)v135, v106 + *(int *)(v107 + 24), &qword_100709E58);
            *(void *)uint64_t v106 = v39;
            *(void *)(v106 + 8) = v63;
            *(unsigned char *)(v106 + 16) = v131;
            *(unsigned char *)(v106 + 17) = (_BYTE)v130;
            *(unsigned char *)(v106 + 18) = v129;
            *(unsigned char *)(v106 + 19) = v128;
            *(unsigned char *)(v106 + 20) = v127;
            *(unsigned char *)(v106 + 21) = v126;
            *(unsigned char *)(v106 + 22) = v125;
            *(unsigned char *)(v106 + 23) = v124;
            *(unsigned char *)(v106 + 24) = v123;
            uint64_t v108 = (uint64_t *)(v106 + *(int *)(v107 + 28));
            unint64_t v109 = v132;
            *uint64_t v108 = v42;
            v108[1] = v109;
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v106, 0, 1, v107);
          }
          else
          {
            uint64_t v66 = *(void *)(v65 + 112);
            switch(v61)
            {
              case 1u:
                LODWORD(v67) = HIDWORD(v42) - v42;
                if (__OFSUB__(HIDWORD(v42), v42))
                {
                  __break(1u);
LABEL_68:
                  __break(1u);
LABEL_69:
                  __break(1u);
                  JUMPOUT(0x1001CAF8CLL);
                }
                uint64_t v67 = (int)v67;
LABEL_45:
                uint64_t v65 = v140;
                if (v66 >= v67) {
                  goto LABEL_50;
                }
LABEL_46:
                uint64_t v131 = v61;
                uint64_t v92 = v137;
                uint64_t v91 = v138;
                uint64_t v93 = v133;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 16))(v133, v137, v139);
                sub_1001C8C0C(v92, (uint64_t)v134, type metadata accessor for MailboxTaskLogger);
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                variable initialization expression of Engine.isProcessingUpdates();
                unint64_t v94 = v132;
                sub_100008D24(v42, v132);
                sub_100008D24(v42, v94);
                int v95 = sub_1005E0EB0();
                LODWORD(v137) = sub_1005E25A0();
                if (os_log_type_enabled(v95, (os_log_type_t)v137))
                {
                  uint64_t v129 = v66;
                  int v130 = v95;
                  uint64_t v96 = swift_slowAlloc();
                  uint64_t v128 = swift_slowAlloc();
                  uint64_t v141 = (char *)v128;
                  *(_DWORD *)uint64_t v96 = 68159747;
                  LODWORD(v142[0]) = 2;
                  sub_1005E2960();
                  *(_WORD *)(v96 + 8) = 256;
                  uint64_t v97 = &v134[*(int *)(v136 + 20)];
                  LOBYTE(v142[0]) = *v97;
                  sub_1005E2960();
                  *(_WORD *)(v96 + 11) = 2082;
                  uint64_t v99 = *((void *)v97 + 1);
                  unint64_t v98 = *((void *)v97 + 2);
                  swift_bridgeObjectRetain();
                  *(void *)&v142[0] = sub_1000C6914(v99, v98, (uint64_t *)&v141);
                  sub_1005E2960();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v96 + 21) = 1040;
                  LODWORD(v142[0]) = 2;
                  sub_1005E2960();
                  *(_WORD *)(v96 + 27) = 512;
                  LOWORD(v142[0]) = *((_WORD *)v97 + 12);
                  sub_1005E2960();
                  *(_WORD *)(v96 + 31) = 2160;
                  *(void *)&v142[0] = 0x786F626C69616DLL;
                  sub_1005E2960();
                  *(_WORD *)(v96 + 41) = 2085;
                  int v100 = *((_DWORD *)v97 + 10);
                  *(void *)&v142[0] = *((void *)v97 + 4);
                  DWORD2(v142[0]) = v100;
                  swift_bridgeObjectRetain();
                  uint64_t v101 = sub_1005E1CC0();
                  *(void *)&v142[0] = sub_1000C6914(v101, v102, (uint64_t *)&v141);
                  sub_1005E2960();
                  swift_bridgeObjectRelease();
                  sub_1001C8BAC((uint64_t)v134, type metadata accessor for MailboxTaskLogger);
                  *(_WORD *)(v96 + 51) = 2048;
                  unint64_t v103 = v132;
                  uint64_t v104 = v138;
                  uint64_t v62 = v39;
                  switch(v131)
                  {
                    case 1:
                      sub_1000094D4(v42, v132);
                      LODWORD(v105) = HIDWORD(v42) - v42;
                      char v111 = v130;
                      if (__OFSUB__(HIDWORD(v42), v42)) {
                        goto LABEL_69;
                      }
                      unint64_t v110 = v103;
                      uint64_t v105 = (int)v105;
                      break;
                    case 2:
                      uint64_t v113 = *(void *)(v42 + 16);
                      uint64_t v112 = *(void *)(v42 + 24);
                      sub_1000094D4(v42, v132);
                      BOOL v90 = __OFSUB__(v112, v113);
                      uint64_t v105 = v112 - v113;
                      char v111 = v130;
                      if (!v90) {
                        goto LABEL_59;
                      }
                      __break(1u);
LABEL_57:
                      sub_1000094D4(v42, v103);
                      uint64_t v105 = 0;
LABEL_58:
                      char v111 = v130;
LABEL_59:
                      unint64_t v110 = v103;
                      break;
                    case 3:
                      goto LABEL_57;
                    default:
                      sub_1000094D4(v42, v132);
                      uint64_t v105 = BYTE6(v103);
                      goto LABEL_58;
                  }
                  *(void *)&v142[0] = v105;
                  sub_1005E2960();
                  sub_1000094D4(v42, v110);
                  *(_WORD *)(v96 + 61) = 2048;
                  *(void *)&v142[0] = v129;
                  sub_1005E2960();
                  _os_log_impl((void *)&_mh_execute_header, v111, (os_log_type_t)v137, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Message byte count (%{iec-bytes}ld) is above server’s APPENDLIMIT (%{iec-bytes}ld).", (uint8_t *)v96, 0x47u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v133, v139);
                }
                else
                {
                  sub_1000094D4(v42, v94);
                  sub_1001C8BAC((uint64_t)v134, type metadata accessor for MailboxTaskLogger);
                  sub_1000094D4(v42, v94);

                  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v93, v139);
                  unint64_t v110 = v94;
                }
                uint64_t v114 = *(int *)(v64 + 68);
                uint64_t v115 = v140;
                uint64_t v116 = *(void **)(v140 + v114);
                sub_100008D24(v62, v63);
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v118 = (uint64_t)v135;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  uint64_t v116 = sub_10001822C(0, v116[2] + 1, 1, v116);
                }
                unint64_t v120 = v116[2];
                unint64_t v119 = v116[3];
                if (v120 >= v119 >> 1) {
                  uint64_t v116 = sub_10001822C((void *)(v119 > 1), v120 + 1, 1, v116);
                }
                v116[2] = v120 + 1;
                uint64_t v121 = &v116[4 * v120];
                v121[4] = v62;
                v121[5] = v63;
                v121[6] = 0;
                *((_WORD *)v121 + 28) = 256;
                sub_1000094D4(v42, v110);
                sub_1000094D4(v62, v63);
                *(void *)(v115 + v114) = v116;
                uint64_t result = sub_100007A48(v118, &qword_100709E58);
                break;
              case 2u:
                uint64_t v89 = *(void *)(v42 + 16);
                uint64_t v88 = *(void *)(v42 + 24);
                BOOL v90 = __OFSUB__(v88, v89);
                uint64_t v67 = v88 - v89;
                if (!v90) {
                  goto LABEL_45;
                }
                goto LABEL_68;
              case 3u:
                uint64_t v65 = v140;
                if ((v66 & 0x8000000000000000) == 0) {
                  goto LABEL_50;
                }
                goto LABEL_46;
              default:
                uint64_t v67 = BYTE6(v132);
                goto LABEL_45;
            }
          }
        }
        else
        {
LABEL_16:
          swift_bridgeObjectRelease();
          unint64_t v45 = v122;
          sub_1000094D4(v39, v122);
          sub_100007A48((uint64_t)v135, &qword_100709E58);
          sub_1000094D4(v39, v45);
          return sub_1000094D4(v37, v132);
        }
      }
    }
  }
  else if (v23 == 13 {
         && (*(unsigned int *)(v140 + 32) | ((unint64_t)*(unsigned int *)(v140 + 32) << 32)) == (*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)))
  }
  {
    uint64_t v24 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    char v25 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
    uint64_t result = sub_1000255D4(*(void *)(v140 + 24), *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10));
    if (result)
    {
      BOOL v26 = sub_100104D08(0, 0x2000000000000000, a4);
      uint64_t v27 = v26[2];
      if (v27)
      {
        uint64_t v28 = 0;
        while ((sub_1001652E0(*((_DWORD *)v26 + v28 + 8), a2, a3) & 1) == 0)
        {
          if (v27 == ++v28) {
            goto LABEL_9;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v46 = (void *)v140;
        if ((v25 & 1) == 0) {
          *((unsigned char *)v46 + *(int *)(type metadata accessor for UploadMessages(0) + 72)) = 1;
        }
        if (*(void *)(v46[16] + 16))
        {
          uint64_t v47 = v137;
          uint64_t v48 = v138;
          uint64_t v49 = v139;
          (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v22, v137, v139);
          sub_1001C8C0C(v47, (uint64_t)v16, type metadata accessor for MailboxTaskLogger);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v50 = sub_1005E0EB0();
          os_log_type_t v51 = sub_1005E25A0();
          int v52 = v51;
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v53 = swift_slowAlloc();
            LODWORD(v137) = v52;
            uint64_t v54 = v53;
            uint64_t v135 = (char *)swift_slowAlloc();
            uint64_t v141 = v135;
            *(_DWORD *)uint64_t v54 = 68159235;
            LODWORD(v142[0]) = 2;
            sub_1005E2960();
            *(_WORD *)(v54 + 8) = 256;
            unint64_t v55 = &v16[*(int *)(v136 + 20)];
            LOBYTE(v142[0]) = *v55;
            sub_1005E2960();
            *(_WORD *)(v54 + 11) = 2082;
            uint64_t v57 = *((void *)v55 + 1);
            unint64_t v56 = *((void *)v55 + 2);
            swift_bridgeObjectRetain();
            *(void *)&v142[0] = sub_1000C6914(v57, v56, (uint64_t *)&v141);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v54 + 21) = 1040;
            LODWORD(v142[0]) = 2;
            sub_1005E2960();
            *(_WORD *)(v54 + 27) = 512;
            LOWORD(v142[0]) = *((_WORD *)v55 + 12);
            sub_1005E2960();
            *(_WORD *)(v54 + 31) = 2160;
            *(void *)&v142[0] = 0x786F626C69616DLL;
            uint64_t v46 = (void *)v140;
            sub_1005E2960();
            *(_WORD *)(v54 + 41) = 2085;
            int v58 = *((_DWORD *)v55 + 10);
            *(void *)&v142[0] = *((void *)v55 + 4);
            DWORD2(v142[0]) = v58;
            swift_bridgeObjectRetain();
            uint64_t v59 = sub_1005E1CC0();
            *(void *)&v142[0] = sub_1000C6914(v59, v60, (uint64_t *)&v141);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1001C8BAC((uint64_t)v16, type metadata accessor for MailboxTaskLogger);
            _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v137, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Unexpectedly received multiple .uploadMessages", (uint8_t *)v54, 0x33u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v138 + 8))(v22, v139);
          }
          else
          {
            sub_1001C8BAC((uint64_t)v16, type metadata accessor for MailboxTaskLogger);

            (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v49);
          }
        }
        uint64_t v68 = (void *)v46[16];
        uint64_t v69 = swift_bridgeObjectRetain();
        uint64_t v70 = sub_10009A848(v69);
        swift_bridgeObjectRelease();
        uint64_t v141 = (char *)v70;
        uint64_t v71 = *(void *)((char *)v46 + *(int *)(type metadata accessor for UploadMessages(0) + 64));
        uint64_t v72 = *(void *)(v71 + 16);
        if (v72)
        {
          uint64_t v73 = v24;
          swift_bridgeObjectRetain();
          uint64_t v74 = (unint64_t *)(v71 + 40);
          do
          {
            uint64_t v75 = *(v74 - 1);
            unint64_t v76 = *v74;
            sub_100008D24(v75, *v74);
            sub_1000191A0((uint64_t *)v142, v75, v76);
            sub_1000094D4(*(uint64_t *)&v142[0], *((unint64_t *)&v142[0] + 1));
            v74 += 2;
            --v72;
          }
          while (v72);
          swift_bridgeObjectRelease();
          uint64_t v24 = v73;
        }
        uint64_t v77 = *(void *)(v24 + 16);
        if (v77)
        {
          swift_bridgeObjectRetain();
          int v78 = (unint64_t *)(v24 + 40);
          do
          {
            uint64_t v80 = *(v78 - 1);
            unint64_t v81 = *v78;
            uint64_t v82 = (uint64_t)v141;
            swift_bridgeObjectRetain();
            char v83 = sub_100010454(v80, v81, v82);
            swift_bridgeObjectRelease();
            if ((v83 & 1) == 0)
            {
              unint64_t v84 = v68[2];
              if (v84 < 7)
              {
                sub_100008D24(v80, v81);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v68 = sub_100016D78(0, v84 + 1, 1, v68);
                }
                unint64_t v86 = v68[2];
                unint64_t v85 = v68[3];
                if (v86 >= v85 >> 1) {
                  uint64_t v68 = sub_100016D78((void *)(v85 > 1), v86 + 1, 1, v68);
                }
                uint64_t v68[2] = v86 + 1;
                uint64_t v79 = &v68[2 * v86];
                v79[4] = v80;
                v79[5] = v81;
                v46[16] = v68;
                sub_100008D24(v80, v81);
                sub_1000191A0((uint64_t *)v142, v80, v81);
                sub_1000094D4(*(uint64_t *)&v142[0], *((unint64_t *)&v142[0] + 1));
              }
            }
            v78 += 2;
            --v77;
          }
          while (v77);
          swift_bridgeObjectRelease();
        }
        uint64_t v87 = (2 * v68[2]) | 1;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        v46[17] = v68;
        v46[18] = v68 + 4;
        v46[19] = 0;
        v46[20] = v87;
        return swift_bridgeObjectRelease();
      }
      else
      {
LABEL_9:
        swift_bridgeObjectRelease();
        uint64_t result = type metadata accessor for UploadMessages(0);
        *(unsigned char *)(v140 + *(int *)(result + 72)) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_1001CAFAC(unsigned int *a1)
{
  return sub_1001043D8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001CAFCC()
{
  return sub_1001CAFDC(48);
}

uint64_t sub_1001CAFD4()
{
  return sub_1001CAFDC(57);
}

uint64_t sub_1001CAFDC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1000094D4(*(void *)(v1 + 32), *(void *)(v1 + 40));
  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1001CB028()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001CB060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UploadMessages.PendingUpload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for UploadMessages.CompletedUpload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for UploadMessages.CompletedUpload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_100008D24(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1000094D4(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 16) = v8;
  return a1;
}

__n128 initializeWithTake for UploadMessages.CompletedUpload(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UploadMessages.CompletedUpload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1000094D4(v4, v5);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadMessages.CompletedUpload(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for UploadMessages.CompletedUpload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.CompletedUpload()
{
  return &type metadata for UploadMessages.CompletedUpload;
}

ValueMetadata *type metadata accessor for UploadMessages.AppendLimit()
{
  return &type metadata for UploadMessages.AppendLimit;
}

unint64_t sub_1001CB29C()
{
  unint64_t result = qword_10070F570;
  if (!qword_10070F570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F570);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for UploadMessages.CompletedUpload.Status(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for UploadMessages.CompletedUpload.Status(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for UploadMessages.CompletedUpload.Status(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 10) = v3;
  return result;
}

uint64_t sub_1001CB350(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001CB36C(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    *(_DWORD *)(result + 4) = 0;
    *(unsigned char *)(result + 9) = 1;
  }
  else
  {
    *(unsigned char *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadMessages.CompletedUpload.Status()
{
  return &type metadata for UploadMessages.CompletedUpload.Status;
}

uint64_t sub_1001CB3A4(unsigned int *a1)
{
  return sub_1001CAFAC(a1) & 1;
}

uint64_t sub_1001CB3C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1001CB45C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 32);
    char v3 = *(unsigned char *)(a1 + 36);
    char v4 = *(unsigned char *)(a1 + 37);
    char v5 = *(unsigned char *)(a1 + 38);
    char v6 = *(unsigned char *)(a1 + 39);
    char v7 = *(unsigned char *)(a1 + 40);
    char v8 = *(unsigned char *)(a1 + 41);
    __int16 v9 = *(_WORD *)(a1 + 42);
    char v10 = *(unsigned char *)(a1 + 44);
    uint64_t v11 = *(void *)(a1 + 45);
    char v12 = *(unsigned char *)(a1 + 53);
    uint64_t v13 = *(void *)(a1 + 56);
    *(_DWORD *)a2 = v2;
    *(unsigned char *)(a2 + 4) = v3;
    *(unsigned char *)(a2 + 5) = v4;
    *(unsigned char *)(a2 + 6) = v5;
    *(unsigned char *)(a2 + 7) = v6;
    *(unsigned char *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 9) = v8;
    *(_WORD *)(a2 + 10) = v9;
    *(unsigned char *)(a2 + 12) = v10;
    *(void *)(a2 + 13) = v11;
    *(unsigned char *)(a2 + 21) = v12;
    *(void *)(a2 + 24) = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1001CB4D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 36);
    uint64_t v3 = *(void *)(a1 + 40);
    int v4 = *(_DWORD *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 56);
    unint64_t v6 = *(void *)(a1 + 64);
    *(unsigned char *)a2 = *(unsigned char *)(a1 + 32);
    *(_DWORD *)(a2 + 4) = v2;
    *(void *)(a2 + 8) = v3;
    *(_DWORD *)(a2 + 16) = v4;
    *(void *)(a2 + 24) = v5;
    *(void *)(a2 + 32) = v6;
    swift_bridgeObjectRetain();
    sub_100008D24(v5, v6);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1001CB558(uint64_t a1)
{
  uint64_t result = sub_100103FD8(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  else {
    return sub_10010418C((uint64_t)&v5, result, v3, 0, a1);
  }
}

unsigned char *sub_1001CB5EC(uint64_t a1)
{
  uint64_t result = (unsigned char *)sub_100103FD8(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (unsigned char *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_100104230(&v5, (uint64_t)result, v3, 0, a1);
  }
}

uint64_t sub_1001CB67C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100103FD8(a1);
  if (v6) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t result = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    int v11 = 0;
  }
  else
  {
    uint64_t result = sub_1001042B4((uint64_t)&v12, result, v5, 0, a1);
    uint64_t v8 = v12;
    uint64_t v9 = v13;
    uint64_t v10 = v14;
    int v11 = v15;
  }
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v10;
  *(_DWORD *)(a2 + 40) = v11;
  return result;
}

unint64_t sub_1001CB734(unint64_t result, uint64_t a2)
{
  if ((result & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) == 0) {
      goto LABEL_10;
    }
LABEL_7:
    LODWORD(result) = 0;
    unsigned __int8 v2 = 1;
    return result | ((unint64_t)v2 << 32);
  }
  if ((a2 & 0x100000000) != 0)
  {
LABEL_5:
    unsigned __int8 v2 = 0;
    return result | ((unint64_t)v2 << 32);
  }
  if (a2 == result) {
    goto LABEL_7;
  }
  if (result < a2) {
    goto LABEL_5;
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void DisplayPart.PlainTextLineKind.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

BOOL static Header.Priority.__derived_struct_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

Swift::Int DisplayPart.PlainTextLineKind.hashValue.getter(unsigned __int8 a1)
{
  return sub_1005E3470();
}

uint64_t Update.kind.getter(unint64_t a1)
{
  return 0x201u >> ((a1 >> 59) & 0x18);
}

unint64_t sub_1001CB81C()
{
  unint64_t result = qword_10070F578;
  if (!qword_10070F578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F578);
  }
  return result;
}

void *_s10SinglepartV4KindOwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t _s10SinglepartV4KindOwxx()
{
  return swift_release();
}

void *_s10SinglepartV4KindOwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *_s10SinglepartV4KindOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Update(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s10SinglepartV4KindOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1001CB9D8(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_1001CB9F4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1001CBA04(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for Update()
{
  return &type metadata for Update;
}

unsigned char *storeEnumTagSinglePayload for Update.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001CBB0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Update.Kind()
{
  return &type metadata for Update.Kind;
}

uint64_t sub_1001CBB44(int a1, unint64_t a2, int a3)
{
  void (**v159)(uint64_t *__return_ptr);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint8_t *v163;
  uint64_t v164;
  uint8_t *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  void *v170;
  char *v171;
  NSObject *v172;
  char *v173;
  os_signpost_id_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint8_t *v187;
  unint64_t v188;
  uint64_t v189;
  NSObject *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint8_t *v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  os_signpost_id_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  char v213;
  char v214;
  uint64_t *v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint8_t *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint8_t *v244;
  uint64_t v245;
  uint64_t v246;
  uint8_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint8_t *v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  void *v254;
  char *v255;
  uint64_t v256;
  NSObject *v257;
  char *v258;
  os_signpost_id_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  char *v264;
  uint64_t v265;
  NSObject *v266;
  os_signpost_type_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint8_t *v275;
  uint64_t v276;
  char *v277;
  os_signpost_id_t v278;
  uint64_t v279;
  uint64_t *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint8_t *v290;
  unint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint8_t *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint8_t *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void (**v309)(uint64_t *__return_ptr);
  void (**v310)(uint64_t *__return_ptr);
  uint8_t *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  void *v317;
  uint64_t v318;
  char *v319;
  os_signpost_id_t v320;
  uint8_t *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  int v325;
  char v326;
  int v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  NSObject *v356;
  uint8_t *v357;
  void *v358;
  uint8_t *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint8_t *v363;
  uint8_t *v364;
  uint8_t *v365;
  char *v366;
  uint64_t v367;
  char *v368;
  void *v369;
  uint64_t v370;
  char *v371;
  uint64_t v372;
  NSObject *v373;
  uint64_t v374;
  char *v375;
  char *v376;
  os_signpost_id_t v377;
  uint64_t v378;
  int v379;
  char v380;
  uint64_t v381;
  char v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint8_t *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint8_t *v401;
  NSObject *v402;
  uint64_t v403;
  char *v404;
  uint8_t *v405;
  void *v406;
  uint64_t v407;
  char *v408;
  char *v409;
  os_signpost_id_t v410;
  int v411;
  uint64_t v412;
  uint64_t v413;
  void *v414;
  char *v415;
  uint64_t v416;
  NSObject *v417;
  os_signpost_type_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint8_t *v424;
  uint64_t v425;
  char *v426;
  os_signpost_id_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  int v432;
  uint64_t v433;
  uint64_t v434;
  void *v435;
  NSObject *v436;
  os_signpost_type_t v437;
  uint8_t *v438;
  char *v439;
  os_signpost_id_t v440;
  void *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  NSObject *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint8_t *v460;
  void *v461;
  uint64_t v462;
  char *v463;
  char *v464;
  os_signpost_id_t v465;
  uint64_t v466;
  int v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  unint64_t v471;
  uint64_t v472;
  uint64_t v473;
  unsigned char *v474;
  unint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  char *v479;
  uint64_t v480;
  uint64_t v481;
  NSObject *v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint8_t *v492;
  void *v493;
  char *v494;
  os_signpost_id_t v495;
  uint64_t v496;
  uint64_t v497;
  void *v498;
  NSObject *v499;
  os_signpost_type_t v500;
  uint8_t *v501;
  os_signpost_id_t v502;
  os_signpost_type_t v503;
  const char *v504;
  uint64_t v505;
  uint64_t v506;
  int v507;
  uint64_t v508;
  char v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint8_t *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  NSObject *v531;
  uint8_t *v532;
  char *v533;
  char *v534;
  uint64_t v535;
  uint8_t *v536;
  char *v537;
  char *v538;
  uint64_t v539;
  void (**v540)(uint64_t *__return_ptr);
  uint8_t *v541;
  uint64_t v542;
  uint8_t *v543;
  uint8_t *v544;
  void *v545;
  NSObject *v546;
  char *v547;
  uint64_t v548;
  void *v549;
  char *v550;
  os_signpost_id_t v551;
  uint64_t v552;
  uint64_t v553;
  int v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint8_t *v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint8_t *v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint8_t *v576;
  char *v577;
  uint64_t v578;
  void *v579;
  char *v580;
  char *v581;
  os_signpost_id_t v582;
  uint8_t *v583;
  uint64_t v584;
  os_signpost_type_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t *v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint8_t *v597;
  unint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint8_t *v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint8_t *v609;
  uint8_t *v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint8_t *v616;
  uint64_t v617;
  uint64_t v618;
  void *v619;
  uint8_t *v620;
  os_log_t v621;
  os_signpost_id_t v622;
  os_signpost_type_t v623;
  const char *v624;
  const char *v625;
  uint64_t v626;
  uint64_t *v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint8_t *v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint8_t *v636;
  unint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint8_t *v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint8_t *v648;
  uint8_t *v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint8_t *v655;
  uint64_t v656;
  uint8_t *v657;
  uint64_t v658;
  uint64_t v659;
  void *v660;
  uint64_t v661;
  char *v662;
  uint64_t v663;
  NSObject *v664;
  os_signpost_type_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  char *v671;
  uint64_t v672;
  uint8_t *v673;
  uint64_t v674;
  char *v675;
  os_signpost_id_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  os_signpost_type_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint8_t *v686;
  os_signpost_id_t v687;
  void (*v688)(void (**)(uint64_t *__return_ptr), void *);
  uint64_t *v689;
  uint64_t *v690;
  void (**v691)(uint64_t *__return_ptr);
  uint64_t v692;
  int v693;
  BOOL v694;
  BOOL v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  NSObject *v706;
  uint64_t v707;
  char *v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  char *v713;
  uint64_t v714;
  char *v715;
  uint64_t v716;
  uint64_t v717;
  char *v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint8_t *v726;
  char *v727;
  uint64_t v728;
  uint8_t *v729;
  char *v730;
  char *v731;
  uint64_t v732;
  void *v733;
  uint64_t v734;
  char *v735;
  uint64_t v736;
  uint8_t *v737;
  uint8_t *v738;
  os_signpost_id_t v739;
  uint8_t *v740;
  uint64_t v741;
  unint64_t v742;
  BOOL v743;
  BOOL v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  char *v772;
  char *v773;
  char *v774;
  os_log_t v775;
  uint64_t v776;
  char *v777;
  uint8_t *v778;
  uint64_t v779;
  char *v780;
  uint8_t *v781;
  void *v782;
  char *v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint8_t *v787;
  uint64_t v788;
  void (**v789)(uint64_t *__return_ptr);
  void *v790;
  os_signpost_id_t v791;
  os_log_t v792;
  char *v793;
  char *v794;
  char *v795;
  char *v796;
  char *v797;
  char *v798;
  char *v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  char *v803;
  char *v804;
  char *v805;
  char *v806;
  char *v807;
  char *v808;
  char *v809;
  char *v810;
  char *v811;
  char *v812;
  char *v813;
  char *v814;
  char *v815;
  char *v816;
  char *v817;
  char *v818;
  char *v819;
  char *v820;
  char *v821;
  char *v822;
  uint64_t v823;
  char *v824;
  char *v825;
  os_log_t v826;
  char *v827;
  uint64_t v828;
  uint8_t *v829;
  uint64_t v830;
  uint64_t v831;
  uint8_t *v832;
  char *v833;
  uint8_t *v834;
  void (**v835)(uint64_t *__return_ptr);
  uint64_t v836;
  uint8_t *v837;
  NSObject *v838;
  uint64_t v839;
  void *v840;
  uint64_t v841;
  char *v842;
  uint64_t v843;
  void (**v844)(uint64_t *__return_ptr);
  uint64_t v845;
  unint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  unint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;

  LODWORD(v840) = a3;
  LODWORD(v839) = a1;
  uint64_t v4 = sub_10000566C(&qword_100709E58);
  __chkstk_darwin(v4 - 8);
  v800 = (uint64_t)&v793 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  v801 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v801 + 64);
  uint64_t v8 = __chkstk_darwin(v6 - 8);
  v802 = (uint64_t)&v793 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v831 = (uint64_t)&v793 - v9;
  uint64_t v10 = sub_10000566C(&qword_100709E38);
  v836 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v836 + 64);
  uint64_t v12 = __chkstk_darwin(v10 - 8);
  v823 = (uint64_t)&v793 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v12);
  v829 = (uint8_t *)&v793 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v830 = (uint64_t)&v793 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v837 = (uint8_t *)&v793 - v18;
  __chkstk_darwin(v17);
  v828 = (uint64_t)&v793 - v19;
  uint64_t v20 = sub_1005E0D80();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  v835 = (void (**)(uint64_t *__return_ptr))((char *)&v793 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __chkstk_darwin(v22);
  v819 = (char *)&v793 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v834 = (uint8_t *)&v793 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v832 = (uint8_t *)&v793 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v833 = (char *)&v793 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v824 = (char *)&v793 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v826 = (os_log_t)((char *)&v793 - v35);
  uint64_t v36 = __chkstk_darwin(v34);
  v838 = ((char *)&v793 - v37);
  uint64_t v38 = __chkstk_darwin(v36);
  v825 = (char *)&v793 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v820 = (char *)&v793 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v822 = (char *)&v793 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v817 = (char *)&v793 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v816 = (char *)&v793 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v795 = (char *)&v793 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v818 = (char *)&v793 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v799 = (char *)&v793 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v821 = (char *)&v793 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v815 = (char *)&v793 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  unint64_t v60 = (char *)&v793 - v59;
  uint64_t v61 = __chkstk_darwin(v58);
  unint64_t v63 = (char *)&v793 - v62;
  uint64_t v64 = __chkstk_darwin(v61);
  v827 = (char *)&v793 - v65;
  __chkstk_darwin(v64);
  uint64_t v67 = (char *)&v793 - v66;
  v841 = sub_1005E0D40();
  v843 = *(void *)(v841 - 8);
  uint64_t v68 = __chkstk_darwin(v841);
  v814 = (char *)&v793 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __chkstk_darwin(v68);
  v805 = (char *)&v793 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  v793 = (char *)&v793 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  v812 = (char *)&v793 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  v813 = (char *)&v793 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  v807 = (char *)&v793 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  v809 = (char *)&v793 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  v810 = (char *)&v793 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  v808 = (char *)&v793 - v85;
  uint64_t v86 = __chkstk_darwin(v84);
  v803 = (char *)&v793 - v87;
  uint64_t v88 = __chkstk_darwin(v86);
  v806 = (char *)&v793 - v89;
  uint64_t v90 = __chkstk_darwin(v88);
  v797 = (char *)&v793 - v91;
  uint64_t v92 = __chkstk_darwin(v90);
  v796 = (char *)&v793 - v93;
  uint64_t v94 = __chkstk_darwin(v92);
  v798 = (char *)&v793 - v95;
  uint64_t v96 = __chkstk_darwin(v94);
  v794 = (char *)&v793 - v97;
  uint64_t v98 = __chkstk_darwin(v96);
  v804 = (char *)&v793 - v99;
  uint64_t v100 = __chkstk_darwin(v98);
  unint64_t v102 = (char *)&v793 - v101;
  uint64_t v103 = __chkstk_darwin(v100);
  v811 = (char *)&v793 - v104;
  uint64_t v105 = __chkstk_darwin(v103);
  uint64_t v107 = (char *)&v793 - v106;
  __chkstk_darwin(v105);
  v842 = (char *)&v793 - v108;
  OSSignpostID.init(engine:kind:idA:idB:)(v839, 0, 0, 0);
  if (v840)
  {
    v839 = v21;
    v840 = (void *)v20;
    int v123 = v838;
    switch((a2 >> 59) & 0x1E | (a2 >> 2) & 1)
    {
      case 1uLL:
        uint64_t v433 = tracingSignposter.unsafeMutableAddressor();
        uint64_t v434 = v839;
        v435 = v840;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v63, v433, v840);
        uint64_t v436 = sub_1005E0D70();
        uint64_t v437 = sub_1005E26F0();
        if (sub_1005E28A0())
        {
          uint64_t v438 = (uint8_t *)sub_1000C6564();
          v844 = 0;
          v845 = 0;
          *(_WORD *)uint64_t v438 = 0;
          v846 = (unint64_t)(v438 + 2);
          sub_1001CB3C0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v846, (uint64_t)&v845, (uint64_t)&v844);
          swift_bridgeObjectRelease();
          uint64_t v439 = v842;
          uint64_t v440 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v436, v437, v440, "PersistenceEvent.update.credentials", "", v438, 2u);
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v434 + 8))(v63, v435);
          goto LABEL_45;
        }

        (*(void (**)(char *, void *))(v434 + 8))(v63, v435);
        goto LABEL_71;
      case 2uLL:
        v378 = a2 & 0xFFFFFFFFFFFFFFBLL;
        uint64_t v379 = *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v380 = *(unsigned char *)(v378 + 24);
        uint64_t v381 = *(void *)(v378 + 32);
        uint64_t v382 = *(unsigned char *)(v378 + 40);
        swift_bridgeObjectRetain();
        v383 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v821, v383, v840);
        uint64_t v384 = swift_allocObject();
        *(_DWORD *)(v384 + 16) = v379;
        v385 = swift_allocObject();
        *(unsigned char *)(v385 + 16) = v380;
        *(void *)(v385 + 24) = v381;
        *(unsigned char *)(v385 + 32) = v382;
        uint64_t v386 = swift_allocObject();
        *(unsigned char *)(v386 + 16) = v380;
        *(void *)(v386 + 24) = v381;
        *(unsigned char *)(v386 + 32) = v382;
        swift_bridgeObjectRetain();
        v837 = (uint8_t *)sub_1005E0D70();
        LODWORD(v835) = sub_1005E26F0();
        uint64_t v387 = (uint8_t *)swift_allocObject();
        v387[16] = 0;
        v836 = swift_allocObject();
        *(unsigned char *)(v836 + 16) = 4;
        uint64_t v388 = swift_allocObject();
        *(void *)(v388 + 16) = sub_1001D7D8C;
        *(void *)(v388 + 24) = v384;
        v389 = swift_allocObject();
        *(void *)(v389 + 16) = sub_1001D7D7C;
        *(void *)(v389 + 24) = v388;
        uint64_t v390 = swift_allocObject();
        *(unsigned char *)(v390 + 16) = 0;
        uint64_t v391 = swift_allocObject();
        *(unsigned char *)(v391 + 16) = 1;
        uint64_t v392 = swift_allocObject();
        *(void *)(v392 + 16) = sub_1001D7B6C;
        *(void *)(v392 + 24) = v385;
        v393 = swift_allocObject();
        *(void *)(v393 + 16) = sub_10018A12C;
        *(void *)(v393 + 24) = v392;
        os_log_type_t v394 = swift_allocObject();
        *(unsigned char *)(v394 + 16) = 0;
        uint64_t v395 = swift_allocObject();
        *(unsigned char *)(v395 + 16) = 8;
        uint64_t v396 = swift_allocObject();
        *(void *)(v396 + 16) = sub_1001D7B84;
        *(void *)(v396 + 24) = v386;
        uint64_t v397 = swift_allocObject();
        *(void *)(v397 + 16) = sub_10018A134;
        *(void *)(v397 + 24) = v396;
        sub_10000566C(&qword_10070E4D8);
        unint64_t v398 = swift_allocObject();
        *(_OWORD *)(v398 + 16) = xmmword_1005F6780;
        *(void *)(v398 + 32) = sub_100189ED8;
        *(void *)(v398 + 40) = v387;
        int v399 = v836;
        *(void *)(v398 + 48) = sub_100189ED8;
        *(void *)(v398 + 56) = v399;
        *(void *)(v398 + 64) = sub_1001D7D84;
        *(void *)(v398 + 72) = v389;
        *(void *)(v398 + 80) = sub_100189ED8;
        *(void *)(v398 + 88) = v390;
        *(void *)(v398 + 96) = sub_100189ED8;
        *(void *)(v398 + 104) = v391;
        *(void *)(v398 + 112) = sub_100189EC8;
        *(void *)(v398 + 120) = v393;
        *(void *)(v398 + 128) = sub_100189ED8;
        *(void *)(v398 + 136) = v394;
        *(void *)(v398 + 144) = sub_100189ED8;
        *(void *)(v398 + 152) = v395;
        *(void *)(v398 + 160) = sub_100189ED0;
        *(void *)(v398 + 168) = v397;
        v838 = v387;
        uint64_t v400 = v399;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        unint64_t v401 = v837;
        if (sub_1005E28A0())
        {
          v834 = (uint8_t *)v397;
          v402 = v401;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v804, v842, v841);
          v403 = sub_1000C6564();
          v844 = 0;
          v845 = 0;
          *(_WORD *)v403 = 768;
          v846 = v403 + 2;
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, (char)v838[2].isa);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v400 + 16));
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *(void *)(v389 + 16), *(void *)(v389 + 24));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v390 + 16));
          uint64_t v251 = v841;
          uint64_t v404 = v842;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v391 + 16));
          v405 = (uint8_t *)v403;
          swift_release();
          sub_1000C66C0((uint64_t *)&v846, (uint64_t)&v845, (uint64_t)&v844, *(void (**)(uint64_t *__return_ptr))(v393 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v394 + 16));
          v406 = v840;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v395 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *((void *)v834 + 2), *((void *)v834 + 3));
          v407 = v843;
          uint64_t v408 = v821;
          swift_release();
          uint64_t v409 = v804;
          v410 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v402, (os_signpost_type_t)v835, v410, "PersistenceEvent.update.sync", "%u %hhu %ld", v405, 0x15u);
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v839 + 8))(v408, v406);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v407 + 8);
          v122(v409, v251);
          unint64_t v175 = v404;
          break;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(char *, void *))(v839 + 8))(v821, v840);
        goto LABEL_102;
      case 3uLL:
        uint64_t v411 = *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v412 = tracingSignposter.unsafeMutableAddressor();
        v413 = v839;
        uint64_t v414 = v840;
        v415 = v799;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v799, v412, v840);
        v416 = swift_allocObject();
        *(_DWORD *)(v416 + 16) = v411;
        v417 = sub_1005E0D70();
        v418 = sub_1005E26F0();
        uint64_t v419 = swift_allocObject();
        *(unsigned char *)(v419 + 16) = 0;
        uint64_t v420 = swift_allocObject();
        *(unsigned char *)(v420 + 16) = 4;
        v421 = swift_allocObject();
        *(void *)(v421 + 16) = sub_1001D7D8C;
        *(void *)(v421 + 24) = v416;
        v422 = swift_allocObject();
        *(void *)(v422 + 16) = sub_1001D7D7C;
        *(void *)(v422 + 24) = v421;
        sub_10000566C(&qword_10070E4D8);
        uint64_t v423 = swift_allocObject();
        *(_OWORD *)(v423 + 16) = xmmword_1005F66F0;
        *(void *)(v423 + 32) = sub_100189ED8;
        *(void *)(v423 + 40) = v419;
        *(void *)(v423 + 48) = sub_100189ED8;
        *(void *)(v423 + 56) = v420;
        *(void *)(v423 + 64) = sub_1001D7D84;
        *(void *)(v423 + 72) = v422;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v794, v842, v841);
          uint64_t v424 = (uint8_t *)sub_1000C6564();
          v844 = 0;
          v845 = 0;
          *(_WORD *)uint64_t v424 = 256;
          v846 = (unint64_t)(v424 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v419 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v420 + 16));
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *(void *)(v422 + 16), *(void *)(v422 + 24));
          v425 = v843;
          swift_release();
          v426 = v794;
          uint64_t v427 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v417, v418, v427, "PersistenceEvent.update.sync", "%u", v424, 8u);
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v839 + 8))(v415, v414);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v425 + 8);
          uint64_t v207 = v426;
          goto LABEL_24;
        }
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(char *, void *))(v413 + 8))(v415, v414);
        goto LABEL_76;
      case 4uLL:
        uint64_t v260 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v261 = tracingSignposter.unsafeMutableAddressor();
        uint64_t v262 = v839;
        uint64_t v263 = v840;
        uint64_t v264 = v815;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v815, v261, v840);
        uint64_t v265 = swift_allocObject();
        *(void *)(v265 + 16) = v260;
        int v266 = sub_1005E0D70();
        unsigned int v267 = sub_1005E26F0();
        uint64_t v268 = swift_allocObject();
        *(unsigned char *)(v268 + 16) = 0;
        int v269 = swift_allocObject();
        *(unsigned char *)(v269 + 16) = 8;
        uint64_t v270 = swift_allocObject();
        *(void *)(v270 + 16) = sub_1001D7D70;
        *(void *)(v270 + 24) = v265;
        uint64_t v271 = swift_allocObject();
        *(void *)(v271 + 16) = sub_10018A134;
        *(void *)(v271 + 24) = v270;
        sub_10000566C(&qword_10070E4D8);
        uint64_t v272 = swift_allocObject();
        *(_OWORD *)(v272 + 16) = xmmword_1005F66F0;
        *(void *)(v272 + 32) = sub_100189ED8;
        *(void *)(v272 + 40) = v268;
        *(void *)(v272 + 48) = sub_100189ED8;
        *(void *)(v272 + 56) = v269;
        *(void *)(v272 + 64) = sub_100189ED0;
        *(void *)(v272 + 72) = v271;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          uint64_t v273 = v842;
          uint64_t v274 = v841;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v102, v842, v841);
          uint64_t v275 = (uint8_t *)sub_1000C6564();
          v844 = 0;
          v845 = 0;
          *(_WORD *)uint64_t v275 = 256;
          v846 = (unint64_t)(v275 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v268 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v269 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v271 + 16), *(void *)(v271 + 24));
          uint64_t v276 = v843;
          uint64_t v277 = v815;
          swift_release();
          uint64_t v278 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v266, v267, v278, "PersistenceEvent.update.setLocalMailboxes", "count %ld", v275, 0xCu);
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v839 + 8))(v277, v840);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v276 + 8);
          v122(v102, v274);
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, void *))(v262 + 8))(v264, v263);
          uint64_t v273 = v842;
          unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
          uint64_t v274 = v841;
        }
        unint64_t v175 = v273;
        uint64_t v176 = v274;
        return ((uint64_t (*)(char *, uint64_t))v122)(v175, v176);
      case 5uLL:
        unint64_t v476 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v477 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v478 = tracingSignposter.unsafeMutableAddressor();
        uint64_t v479 = v818;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v818, v478, v840);
        uint64_t v480 = swift_allocObject();
        *(void *)(v480 + 16) = v476;
        *(void *)(v480 + 24) = v477;
        uint64_t v481 = swift_allocObject();
        *(void *)(v481 + 16) = v476;
        *(void *)(v481 + 24) = v477;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v482 = sub_1005E0D70();
        LODWORD(v838) = sub_1005E26F0();
        unint64_t v483 = swift_allocObject();
        *(unsigned char *)(v483 + 16) = 0;
        v484 = swift_allocObject();
        *(unsigned char *)(v484 + 16) = 8;
        v485 = swift_allocObject();
        *(void *)(v485 + 16) = sub_1001D7A58;
        *(void *)(v485 + 24) = v480;
        v486 = swift_allocObject();
        *(void *)(v486 + 16) = sub_10018A134;
        *(void *)(v486 + 24) = v485;
        v487 = swift_allocObject();
        *(unsigned char *)(v487 + 16) = 0;
        v488 = swift_allocObject();
        *(unsigned char *)(v488 + 16) = 8;
        v489 = swift_allocObject();
        *(void *)(v489 + 16) = sub_1001D7AA8;
        *(void *)(v489 + 24) = v481;
        v490 = swift_allocObject();
        *(void *)(v490 + 16) = sub_10018A134;
        *(void *)(v490 + 24) = v489;
        sub_10000566C(&qword_10070E4D8);
        v491 = swift_allocObject();
        *(_OWORD *)(v491 + 16) = xmmword_1005F6720;
        *(void *)(v491 + 32) = sub_100189ED8;
        *(void *)(v491 + 40) = v483;
        *(void *)(v491 + 48) = sub_100189ED8;
        *(void *)(v491 + 56) = v484;
        *(void *)(v491 + 64) = sub_100189ED0;
        *(void *)(v491 + 72) = v486;
        *(void *)(v491 + 80) = sub_100189ED8;
        *(void *)(v491 + 88) = v487;
        *(void *)(v491 + 96) = sub_100189ED8;
        *(void *)(v491 + 104) = v488;
        *(void *)(v491 + 112) = sub_100189ED0;
        *(void *)(v491 + 120) = v490;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v798, v842, v841);
          v492 = (uint8_t *)sub_1000C6564();
          v844 = 0;
          v845 = 0;
          *(_WORD *)v492 = 512;
          v846 = (unint64_t)(v492 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v483 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v484 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v486 + 16), *(void *)(v486 + 24));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v487 + 16));
          v493 = v840;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v488 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v490 + 16), *(void *)(v490 + 24));
          uint64_t v462 = v843;
          v494 = v818;
          swift_release();
          v464 = v798;
          v495 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v482, (os_signpost_type_t)v838, v495, "PersistenceEvent.update.setUserVisibleMailboxes", "%ld %ld", v492, 0x16u);
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v839 + 8))(v494, v493);
          goto LABEL_35;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(char *, void *))(v839 + 8))(v479, v840);
        goto LABEL_76;
      case 6uLL:
        v496 = tracingSignposter.unsafeMutableAddressor();
        v497 = v839;
        v498 = v840;
        unint64_t v60 = v795;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v795, v496, v840);
        v499 = sub_1005E0D70();
        v500 = sub_1005E26F0();
        if ((sub_1005E28A0() & 1) == 0) {
          goto LABEL_46;
        }
        v501 = (uint8_t *)sub_1000C6564();
        v844 = 0;
        v845 = 0;
        *(_WORD *)v501 = 0;
        v846 = (unint64_t)(v501 + 2);
        sub_1001CB3C0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v846, (uint64_t)&v845, (uint64_t)&v844);
        swift_bridgeObjectRelease();
        uint64_t v439 = v842;
        v502 = sub_1005E0D30();
        v503 = v500;
        v504 = "PersistenceEvent.update.temporarilyGrowWindowOfInterest";
        goto LABEL_44;
      case 7uLL:
        uint64_t v441 = (void *)(a2 & 0xFFFFFFFFFFFFFFBLL);
        v442 = v441[2];
        v443 = v441[3];
        swift_bridgeObjectRetain();
        v444 = v441[4];
        uint64_t v445 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v820, v445, v840);
        v446 = swift_allocObject();
        *(void *)(v446 + 16) = v442;
        *(void *)(v446 + 24) = v443;
        uint64_t v447 = swift_allocObject();
        *(void *)(v447 + 16) = sub_1001D7874;
        *(void *)(v447 + 24) = v446;
        uint64_t v448 = swift_allocObject();
        *(void *)(v448 + 16) = v444;
        uint64_t v449 = swift_allocObject();
        *(void *)(v449 + 16) = CommandConnection.RecentErrors.Statistics.networkErrorCount.getter;
        *(void *)(v449 + 24) = v448;
        v450 = sub_1005E0D70();
        LODWORD(v838) = sub_1005E26F0();
        unint64_t v451 = swift_allocObject();
        *(unsigned char *)(v451 + 16) = 32;
        uint64_t v452 = swift_allocObject();
        *(unsigned char *)(v452 + 16) = 8;
        uint64_t v453 = swift_allocObject();
        *(void *)(v453 + 16) = sub_1001D719C;
        *(void *)(v453 + 24) = v447;
        uint64_t v454 = swift_allocObject();
        *(void *)(v454 + 16) = sub_100189E9C;
        *(void *)(v454 + 24) = v453;
        v455 = swift_allocObject();
        *(unsigned char *)(v455 + 16) = 34;
        uint64_t v456 = swift_allocObject();
        *(unsigned char *)(v456 + 16) = 8;
        uint64_t v457 = swift_allocObject();
        *(void *)(v457 + 16) = sub_1001D78F0;
        *(void *)(v457 + 24) = v449;
        uint64_t v458 = swift_allocObject();
        *(void *)(v458 + 16) = sub_100189E9C;
        *(void *)(v458 + 24) = v457;
        sub_10000566C(&qword_10070E4D8);
        uint64_t v459 = swift_allocObject();
        *(_OWORD *)(v459 + 16) = xmmword_1005F6720;
        *(void *)(v459 + 32) = sub_100189ED8;
        *(void *)(v459 + 40) = v451;
        *(void *)(v459 + 48) = sub_100189ED8;
        *(void *)(v459 + 56) = v452;
        *(void *)(v459 + 64) = sub_100189EC4;
        *(void *)(v459 + 72) = v454;
        *(void *)(v459 + 80) = sub_100189ED8;
        *(void *)(v459 + 88) = v455;
        *(void *)(v459 + 96) = sub_100189ED8;
        *(void *)(v459 + 104) = v456;
        *(void *)(v459 + 112) = sub_100189EC4;
        *(void *)(v459 + 120) = v458;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if ((sub_1005E28A0() & 1) == 0)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, void *))(v839 + 8))(v820, v840);
          goto LABEL_76;
        }
        (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v803, v842, v841);
        uint64_t v460 = (uint8_t *)sub_1000C6564();
        v844 = (void (**)(uint64_t *__return_ptr))swift_slowAlloc();
        v845 = 0;
        *(_WORD *)uint64_t v460 = 514;
        v846 = (unint64_t)(v460 + 2);
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v451 + 16));
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v452 + 16));
        swift_release();
        sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v454 + 16));
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v455 + 16));
        uint64_t v461 = v840;
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v456 + 16));
        swift_release();
        sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v458 + 16));
        uint64_t v462 = v843;
        uint64_t v463 = v820;
        swift_release();
        v464 = v803;
        uint64_t v465 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v450, (os_signpost_type_t)v838, v465, "PersistenceEvent.update.didFindWindowOfInterest", "mailbox %s, UID range %{public}s", v460, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1000C65A8();

        (*(void (**)(char *, void *))(v839 + 8))(v463, v461);
LABEL_35:
        unint64_t v122 = *(void (**)(char *, uint64_t))(v462 + 8);
        uint64_t v251 = v841;
        v122(v464, v841);
        goto LABEL_77;
      case 8uLL:
        v587 = sub_10000566C(&qword_10070D0E0);
        v588 = (uint64_t *)swift_projectBox();
        v589 = *v588;
        v590 = v588[1];
        v591 = *(uint64_t *)((char *)v588 + *(int *)(v587 + 64));
        v592 = v828;
        sub_1000079E4((uint64_t)v588 + *(int *)(v587 + 48), v828, &qword_100709E38);
        swift_bridgeObjectRetain();
        v593 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v825, v593, v840);
        v594 = swift_allocObject();
        *(void *)(v594 + 16) = v589;
        *(void *)(v594 + 24) = v590;
        v595 = swift_allocObject();
        *(void *)(v595 + 16) = sub_1001D7FE0;
        *(void *)(v595 + 24) = v594;
        v596 = v592;
        v597 = v837;
        sub_1000079E4(v596, (uint64_t)v837, &qword_100709E38);
        v598 = (*(unsigned __int8 *)(v836 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v836 + 80);
        v599 = swift_allocObject();
        sub_10001FDF0((uint64_t)v597, v599 + v598, &qword_100709E38);
        v600 = swift_allocObject();
        *(void *)(v600 + 16) = v591;
        v838 = sub_1005E0D70();
        LODWORD(v835) = sub_1005E26F0();
        v601 = (uint8_t *)swift_allocObject();
        v601[16] = 32;
        v836 = swift_allocObject();
        *(unsigned char *)(v836 + 16) = 8;
        v602 = swift_allocObject();
        *(void *)(v602 + 16) = sub_1001D719C;
        *(void *)(v602 + 24) = v595;
        v603 = swift_allocObject();
        *(void *)(v603 + 16) = sub_100189E9C;
        *(void *)(v603 + 24) = v602;
        v604 = swift_allocObject();
        *(unsigned char *)(v604 + 16) = 0;
        v605 = swift_allocObject();
        *(unsigned char *)(v605 + 16) = 8;
        v606 = swift_allocObject();
        *(void *)(v606 + 16) = sub_100188E08;
        *(void *)(v606 + 24) = v599;
        v607 = swift_allocObject();
        *(void *)(v607 + 16) = sub_10018A134;
        *(void *)(v607 + 24) = v606;
        v608 = swift_allocObject();
        *(unsigned char *)(v608 + 16) = 0;
        v609 = (uint8_t *)swift_allocObject();
        v609[16] = 8;
        v610 = (uint8_t *)v838;
        v611 = swift_allocObject();
        *(void *)(v611 + 16) = j___s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV17networkErrorCountSivg;
        *(void *)(v611 + 24) = v600;
        v612 = swift_allocObject();
        *(void *)(v612 + 16) = sub_10018A134;
        *(void *)(v612 + 24) = v611;
        sub_10000566C(&qword_10070E4D8);
        v613 = swift_allocObject();
        *(_OWORD *)(v613 + 16) = xmmword_1005F6780;
        *(void *)(v613 + 32) = sub_100189ED8;
        *(void *)(v613 + 40) = v601;
        v614 = v836;
        *(void *)(v613 + 48) = sub_100189ED8;
        *(void *)(v613 + 56) = v614;
        *(void *)(v613 + 64) = sub_100189EC4;
        *(void *)(v613 + 72) = v603;
        *(void *)(v613 + 80) = sub_100189ED8;
        *(void *)(v613 + 88) = v604;
        *(void *)(v613 + 96) = sub_100189ED8;
        *(void *)(v613 + 104) = v605;
        *(void *)(v613 + 112) = sub_100189ED0;
        *(void *)(v613 + 120) = v607;
        *(void *)(v613 + 128) = sub_100189ED8;
        *(void *)(v613 + 136) = v608;
        *(void *)(v613 + 144) = sub_100189ED8;
        *(void *)(v613 + 152) = v609;
        *(void *)(v613 + 160) = sub_100189ED0;
        *(void *)(v613 + 168) = v612;
        v837 = v601;
        v615 = v614;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          v833 = (char *)v604;
          v834 = v609;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v808, v842, v841);
          v616 = (uint8_t *)sub_1000C6564();
          v617 = swift_slowAlloc();
          v844 = (void (**)(uint64_t *__return_ptr))v617;
          v845 = 0;
          *(_WORD *)v616 = 770;
          v846 = (unint64_t)(v616 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v837[16]);
          v831 = v617;
          v832 = v616;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v615 + 16));
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v603 + 16));
          uint64_t v313 = v841;
          v618 = v839;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v833[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v605 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v607 + 16), *(void *)(v607 + 24));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v608 + 16));
          uint64_t v315 = v843;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v834[16]);
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v612 + 16), *(void *)(v612 + 24));
          v619 = v840;
          v620 = (uint8_t *)v828;
          v621 = (os_log_t)v825;
          swift_release();
          uint64_t v319 = v808;
          v622 = sub_1005E0D30();
          v623 = v835;
          v624 = "PersistenceEvent.update.didFindMessageBatches";
          v625 = "mailbox %s, UID range count %ld, message count: %ld";
          goto LABEL_51;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, void *))(v839 + 8))(v825, v840);
        v690 = &v853;
        goto LABEL_83;
      case 9uLL:
        uint64_t v279 = sub_10000566C(&qword_10070CC20);
        uint64_t v280 = (uint64_t *)swift_projectBox();
        os_log_t v281 = *v280;
        uint64_t v282 = v280[1];
        uint64_t v283 = (uint64_t)v280 + *(int *)(v279 + 64);
        uint64_t v284 = v830;
        sub_1000079E4((uint64_t)v280 + *(int *)(v279 + 48), v830, &qword_100709E38);
        v285 = v831;
        sub_1000079E4(v283, v831, &qword_100709E30);
        swift_bridgeObjectRetain();
        uint64_t v286 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(NSObject *, uint64_t, void *))(v839 + 16))(v123, v286, v840);
        uint64_t v287 = swift_allocObject();
        *(void *)(v287 + 16) = v281;
        *(void *)(v287 + 24) = v282;
        uint64_t v288 = swift_allocObject();
        *(void *)(v288 + 16) = sub_1001D7FE0;
        *(void *)(v288 + 24) = v287;
        uint64_t v289 = v284;
        v290 = v837;
        sub_1000079E4(v289, (uint64_t)v837, &qword_100709E38);
        int v291 = (*(unsigned __int8 *)(v836 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v836 + 80);
        uint64_t v292 = swift_allocObject();
        sub_10001FDF0((uint64_t)v290, v292 + v291, &qword_100709E38);
        uint64_t v293 = v802;
        sub_1000079E4(v285, v802, &qword_100709E30);
        uint64_t v294 = (*(unsigned __int8 *)(v801 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v801 + 80);
        uint64_t v295 = swift_allocObject();
        sub_10001FDF0(v293, v295 + v294, &qword_100709E30);
        v837 = (uint8_t *)sub_1005E0D70();
        LODWORD(v834) = sub_1005E26F0();
        uint64_t v296 = swift_allocObject();
        *(unsigned char *)(v296 + 16) = 32;
        v835 = (void (**)(uint64_t *__return_ptr))swift_allocObject();
        *((unsigned char *)v835 + 16) = 8;
        unint64_t v297 = swift_allocObject();
        *(void *)(v297 + 16) = sub_1001D719C;
        *(void *)(v297 + 24) = v288;
        int v298 = swift_allocObject();
        *(void *)(v298 + 16) = sub_100189E9C;
        *(void *)(v298 + 24) = v297;
        uint64_t v299 = (uint8_t *)swift_allocObject();
        v299[16] = 0;
        uint64_t v300 = swift_allocObject();
        *(unsigned char *)(v300 + 16) = 8;
        uint64_t v301 = swift_allocObject();
        *(void *)(v301 + 16) = sub_100188E08;
        *(void *)(v301 + 24) = v292;
        os_log_t v302 = swift_allocObject();
        *(void *)(v302 + 16) = sub_10018A134;
        *(void *)(v302 + 24) = v301;
        os_log_t v303 = swift_allocObject();
        *(unsigned char *)(v303 + 16) = 0;
        uint64_t v304 = swift_allocObject();
        *(unsigned char *)(v304 + 16) = 8;
        uint64_t v305 = v837;
        uint64_t v306 = swift_allocObject();
        *(void *)(v306 + 16) = sub_1001D7654;
        *(void *)(v306 + 24) = v295;
        char v307 = swift_allocObject();
        *(void *)(v307 + 16) = sub_10018A134;
        *(void *)(v307 + 24) = v306;
        sub_10000566C(&qword_10070E4D8);
        unint64_t v308 = swift_allocObject();
        *(_OWORD *)(v308 + 16) = xmmword_1005F6780;
        *(void *)(v308 + 32) = sub_100189ED8;
        *(void *)(v308 + 40) = v296;
        uint64_t v309 = v835;
        *(void *)(v308 + 48) = sub_100189ED8;
        *(void *)(v308 + 56) = v309;
        *(void *)(v308 + 64) = sub_100189EC4;
        *(void *)(v308 + 72) = v298;
        *(void *)(v308 + 80) = sub_100189ED8;
        *(void *)(v308 + 88) = v299;
        *(void *)(v308 + 96) = sub_100189ED8;
        *(void *)(v308 + 104) = v300;
        *(void *)(v308 + 112) = sub_100189ED0;
        *(void *)(v308 + 120) = v302;
        *(void *)(v308 + 128) = sub_100189ED8;
        *(void *)(v308 + 136) = v303;
        *(void *)(v308 + 144) = sub_100189ED8;
        *(void *)(v308 + 152) = v304;
        *(void *)(v308 + 160) = sub_100189ED0;
        *(void *)(v308 + 168) = v307;
        v836 = v296;
        BOOL v310 = v309;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          v832 = v299;
          v833 = (char *)v304;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v810, v842, v841);
          uint64_t v311 = (uint8_t *)sub_1000C6564();
          char v312 = swift_slowAlloc();
          v844 = (void (**)(uint64_t *__return_ptr))v312;
          v845 = 0;
          *(_WORD *)uint64_t v311 = 770;
          v846 = (unint64_t)(v311 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v836 + 16));
          v828 = v312;
          v829 = v311;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *((unsigned char *)v310 + 16));
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v298 + 16));
          uint64_t v313 = v841;
          char v314 = v839;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v832[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v300 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v302 + 16), *(void *)(v302 + 24));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v303 + 16));
          uint64_t v315 = v843;
          uint64_t v316 = v831;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v833[16]);
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v307 + 16), *(void *)(v307 + 24));
          uint64_t v317 = v840;
          uint64_t v318 = v830;
          swift_release();
          uint64_t v319 = v810;
          uint64_t v320 = sub_1005E0D30();
          uint64_t v321 = v837;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v837, (os_signpost_type_t)v834, v320, "PersistenceEvent.update.didFindMessageUIDs", "mailbox %s, UID count %ld range UID count %ld)", v829, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1000C65A8();

          (*(void (**)(NSObject *, void *))(v314 + 8))(v838, v317);
          sub_100007A48(v316, &qword_100709E30);
          uint64_t v322 = v318;
          goto LABEL_52;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(NSObject *, void *))(v839 + 8))(v838, v840);
        sub_100007A48(v831, &qword_100709E30);
        v690 = &v855;
        goto LABEL_83;
      case 0xAuLL:
        v626 = sub_10000566C(&qword_10070D290);
        v627 = (uint64_t *)swift_projectBox();
        v628 = *v627;
        v629 = v627[1];
        v630 = *(uint64_t *)((char *)v627 + *(int *)(v626 + 64));
        v631 = v829;
        sub_1000079E4((uint64_t)v627 + *(int *)(v626 + 48), (uint64_t)v829, &qword_100709E38);
        swift_bridgeObjectRetain();
        v632 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(os_log_t, uint64_t, void *))(v839 + 16))(v826, v632, v840);
        v633 = swift_allocObject();
        *(void *)(v633 + 16) = v628;
        *(void *)(v633 + 24) = v629;
        v634 = swift_allocObject();
        *(void *)(v634 + 16) = sub_1001D7FE0;
        *(void *)(v634 + 24) = v633;
        v635 = (uint64_t)v631;
        v636 = v837;
        sub_1000079E4(v635, (uint64_t)v837, &qword_100709E38);
        v637 = (*(unsigned __int8 *)(v836 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v836 + 80);
        v638 = swift_allocObject();
        sub_10001FDF0((uint64_t)v636, v638 + v637, &qword_100709E38);
        v639 = swift_allocObject();
        *(void *)(v639 + 16) = v630;
        v838 = sub_1005E0D70();
        LODWORD(v835) = sub_1005E26F0();
        v640 = (uint8_t *)swift_allocObject();
        v640[16] = 32;
        v836 = swift_allocObject();
        *(unsigned char *)(v836 + 16) = 8;
        v641 = swift_allocObject();
        *(void *)(v641 + 16) = sub_1001D719C;
        *(void *)(v641 + 24) = v634;
        v642 = swift_allocObject();
        *(void *)(v642 + 16) = sub_100189E9C;
        *(void *)(v642 + 24) = v641;
        v643 = swift_allocObject();
        *(unsigned char *)(v643 + 16) = 0;
        v644 = swift_allocObject();
        *(unsigned char *)(v644 + 16) = 8;
        v645 = swift_allocObject();
        *(void *)(v645 + 16) = sub_100188E08;
        *(void *)(v645 + 24) = v638;
        v646 = swift_allocObject();
        *(void *)(v646 + 16) = sub_10018A134;
        *(void *)(v646 + 24) = v645;
        v647 = swift_allocObject();
        *(unsigned char *)(v647 + 16) = 0;
        v648 = (uint8_t *)swift_allocObject();
        v648[16] = 8;
        v649 = (uint8_t *)v838;
        v650 = swift_allocObject();
        *(void *)(v650 + 16) = j___s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV17networkErrorCountSivg;
        *(void *)(v650 + 24) = v639;
        v651 = swift_allocObject();
        *(void *)(v651 + 16) = sub_10018A134;
        *(void *)(v651 + 24) = v650;
        sub_10000566C(&qword_10070E4D8);
        v652 = swift_allocObject();
        *(_OWORD *)(v652 + 16) = xmmword_1005F6780;
        *(void *)(v652 + 32) = sub_100189ED8;
        *(void *)(v652 + 40) = v640;
        v653 = v836;
        *(void *)(v652 + 48) = sub_100189ED8;
        *(void *)(v652 + 56) = v653;
        *(void *)(v652 + 64) = sub_100189EC4;
        *(void *)(v652 + 72) = v642;
        *(void *)(v652 + 80) = sub_100189ED8;
        *(void *)(v652 + 88) = v643;
        *(void *)(v652 + 96) = sub_100189ED8;
        *(void *)(v652 + 104) = v644;
        *(void *)(v652 + 112) = sub_100189ED0;
        *(void *)(v652 + 120) = v646;
        *(void *)(v652 + 128) = sub_100189ED8;
        *(void *)(v652 + 136) = v647;
        *(void *)(v652 + 144) = sub_100189ED8;
        *(void *)(v652 + 152) = v648;
        *(void *)(v652 + 160) = sub_100189ED0;
        *(void *)(v652 + 168) = v651;
        v837 = v640;
        v654 = v653;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          v833 = (char *)v643;
          v834 = v648;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v809, v842, v841);
          v655 = (uint8_t *)sub_1000C6564();
          v656 = swift_slowAlloc();
          v844 = (void (**)(uint64_t *__return_ptr))v656;
          v845 = 0;
          *(_WORD *)v655 = 770;
          v846 = (unint64_t)(v655 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v837[16]);
          v831 = v656;
          v832 = v655;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v654 + 16));
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v642 + 16));
          uint64_t v313 = v841;
          v618 = v839;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v833[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v644 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v646 + 16), *(void *)(v646 + 24));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v647 + 16));
          uint64_t v315 = v843;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v834[16]);
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v651 + 16), *(void *)(v651 + 24));
          v619 = v840;
          v620 = v829;
          v621 = v826;
          swift_release();
          uint64_t v319 = v809;
          v622 = sub_1005E0D30();
          v623 = v835;
          v624 = "PersistenceEvent.update.didFindNewestMessageUIDs";
          v625 = "mailbox %s, UID count %ld, limit %ld";
LABEL_51:
          v657 = (uint8_t *)v838;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v838, v623, v622, v624, v625, v832, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1000C65A8();

          (*(void (**)(os_log_t, void *))(v618 + 8))(v621, v619);
          uint64_t v322 = (uint64_t)v620;
LABEL_52:
          sub_100007A48(v322, &qword_100709E38);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v315 + 8);
          v122(v319, v313);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(os_log_t, void *))(v839 + 8))(v826, v840);
          v690 = &v854;
LABEL_83:
          sub_100007A48(*(v690 - 32), &qword_100709E38);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
          uint64_t v313 = v841;
        }
        unint64_t v175 = v842;
        uint64_t v176 = v313;
        return ((uint64_t (*)(char *, uint64_t))v122)(v175, v176);
      case 0xBuLL:
        unint64_t v223 = a2 & 0xFFFFFFFFFFFFFFBLL;
        int v224 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v225 = *(void *)(v223 + 24);
        unint64_t v226 = *(unsigned char *)(v223 + 32);
        uint64_t v227 = *(void *)(v223 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v228 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v824, v228, v840);
        uint64_t v229 = swift_allocObject();
        *(void *)(v229 + 16) = v224;
        *(void *)(v229 + 24) = v225;
        uint64_t v230 = swift_allocObject();
        *(void *)(v230 + 16) = sub_1001D7FE0;
        *(void *)(v230 + 24) = v229;
        uint64_t v231 = swift_allocObject();
        *(unsigned char *)(v231 + 16) = v226;
        v837 = (uint8_t *)swift_allocObject();
        *((void *)v837 + 2) = v227;
        v838 = sub_1005E0D70();
        LODWORD(v836) = sub_1005E26F0();
        uint64_t v232 = (uint8_t *)swift_allocObject();
        v232[16] = 32;
        uint64_t v233 = swift_allocObject();
        *(unsigned char *)(v233 + 16) = 8;
        unint64_t v234 = swift_allocObject();
        *(void *)(v234 + 16) = sub_1001D719C;
        *(void *)(v234 + 24) = v230;
        uint64_t v235 = swift_allocObject();
        *(void *)(v235 + 16) = sub_100189E9C;
        *(void *)(v235 + 24) = v234;
        uint64_t v236 = swift_allocObject();
        *(unsigned char *)(v236 + 16) = 0;
        uint64_t v237 = swift_allocObject();
        *(unsigned char *)(v237 + 16) = 1;
        uint64_t v238 = swift_allocObject();
        *(void *)(v238 + 16) = sub_1001D754C;
        *(void *)(v238 + 24) = v231;
        unint64_t v239 = v233;
        int64_t v240 = swift_allocObject();
        *(void *)(v240 + 16) = sub_10018A12C;
        *(void *)(v240 + 24) = v238;
        uint64_t v241 = swift_allocObject();
        *(unsigned char *)(v241 + 16) = 0;
        uint64_t v242 = swift_allocObject();
        *(unsigned char *)(v242 + 16) = 8;
        int v243 = swift_allocObject();
        uint64_t v244 = v837;
        *(void *)(v243 + 16) = sub_1001D7D70;
        *(void *)(v243 + 24) = v244;
        uint64_t v245 = swift_allocObject();
        *(void *)(v245 + 16) = sub_10018A134;
        *(void *)(v245 + 24) = v243;
        sub_10000566C(&qword_10070E4D8);
        uint64_t v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = xmmword_1005F6780;
        *(void *)(v246 + 32) = sub_100189ED8;
        *(void *)(v246 + 40) = v232;
        *(void *)(v246 + 48) = sub_100189ED8;
        *(void *)(v246 + 56) = v239;
        *(void *)(v246 + 64) = sub_100189EC4;
        *(void *)(v246 + 72) = v235;
        *(void *)(v246 + 80) = sub_100189ED8;
        *(void *)(v246 + 88) = v236;
        *(void *)(v246 + 96) = sub_100189ED8;
        *(void *)(v246 + 104) = v237;
        *(void *)(v246 + 112) = sub_100189EC8;
        *(void *)(v246 + 120) = v240;
        *(void *)(v246 + 128) = sub_100189ED8;
        *(void *)(v246 + 136) = v241;
        *(void *)(v246 + 144) = sub_100189ED8;
        *(void *)(v246 + 152) = v242;
        *(void *)(v246 + 160) = sub_100189ED0;
        *(void *)(v246 + 168) = v245;
        v837 = v232;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v247 = (uint8_t *)v838;
        if (sub_1005E28A0())
        {
          uint64_t v248 = v245;
          uint64_t v249 = v239;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v807, v842, v841);
          uint64_t v250 = (uint8_t *)sub_1000C6564();
          v844 = (void (**)(uint64_t *__return_ptr))swift_slowAlloc();
          v845 = 0;
          v835 = v844;
          *(_WORD *)uint64_t v250 = 770;
          v846 = (unint64_t)(v250 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v837[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v249 + 16));
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v235 + 16));
          v837 = v250;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v236 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v237 + 16));
          uint64_t v251 = v841;
          uint64_t v252 = v842;
          uint64_t v253 = v839;
          swift_release();
          sub_1000C66C0((uint64_t *)&v846, (uint64_t)&v845, (uint64_t)&v844, *(void (**)(uint64_t *__return_ptr))(v240 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v241 + 16));
          uint64_t v254 = v840;
          int v255 = v824;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v242 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v248 + 16), *(void *)(v248 + 24));
          uint64_t v256 = v843;
          unint64_t v257 = v838;
          swift_release();
          uint64_t v258 = v807;
          uint64_t v259 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v257, (os_signpost_type_t)v836, v259, "PersistenceEvent.update.downloadSectionsInMessages", "mailbox %s, downloadPass %hhu, messageCount %ld", v837, 0x19u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v253 + 8))(v255, v254);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v256 + 8);
          v122(v258, v251);
          unint64_t v175 = v252;
          break;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        v688 = *(void (**)(void (**)(uint64_t *__return_ptr), void *))(v839 + 8);
        v689 = &v852;
        goto LABEL_80;
      case 0xCuLL:
        v323 = a2 & 0xFFFFFFFFFFFFFFBLL;
        uint64_t v324 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v325 = *(_DWORD *)(v323 + 24);
        uint64_t v326 = *(unsigned char *)(v323 + 28);
        uint64_t v327 = *(_DWORD *)(v323 + 32);
        uint64_t v328 = *(void *)(v323 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v329 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v833, v329, v840);
        v330 = swift_allocObject();
        *(void *)(v330 + 16) = v324;
        *(_DWORD *)(v330 + 24) = v325;
        uint64_t v331 = swift_allocObject();
        *(void *)(v331 + 16) = j___s16IMAP2Persistence17MailboxOfInterestV4name12NIOIMAPCore20C4NameVvg;
        *(void *)(v331 + 24) = v330;
        uint64_t v332 = swift_allocObject();
        *(unsigned char *)(v332 + 16) = v326;
        v333 = swift_allocObject();
        *(_DWORD *)(v333 + 16) = v327;
        os_log_type_t v334 = swift_allocObject();
        *(void *)(v334 + 16) = sub_1001D7454;
        *(void *)(v334 + 24) = v333;
        int v335 = swift_allocObject();
        *(void *)(v335 + 16) = v328;
        uint64_t v336 = v335;
        v828 = sub_1005E0D70();
        LODWORD(v827) = sub_1005E26F0();
        v832 = (uint8_t *)swift_allocObject();
        v832[16] = 112;
        v837 = (uint8_t *)swift_allocObject();
        v837[16] = 8;
        uint64_t v337 = swift_allocObject();
        *(void *)(v337 + 16) = 0x786F626C69616DLL;
        uint64_t v338 = swift_allocObject();
        *(void *)(v338 + 16) = sub_1001D7FD8;
        *(void *)(v338 + 24) = v337;
        uint64_t v339 = v338;
        unint64_t v340 = swift_allocObject();
        *(unsigned char *)(v340 + 16) = 37;
        int v341 = swift_allocObject();
        *(unsigned char *)(v341 + 16) = 8;
        uint64_t v342 = (char *)v341;
        unint64_t v343 = swift_allocObject();
        *(void *)(v343 + 16) = sub_100189EBC;
        *(void *)(v343 + 24) = v331;
        uint64_t v344 = swift_allocObject();
        *(void *)(v344 + 16) = sub_100189E9C;
        *(void *)(v344 + 24) = v343;
        uint64_t v345 = v344;
        v834 = (uint8_t *)v344;
        uint64_t v346 = swift_allocObject();
        *(unsigned char *)(v346 + 16) = 0;
        uint64_t v347 = v346;
        v831 = swift_allocObject();
        *(unsigned char *)(v831 + 16) = 1;
        uint64_t v348 = swift_allocObject();
        *(void *)(v348 + 16) = sub_1001D7FE8;
        *(void *)(v348 + 24) = v332;
        uint64_t v349 = swift_allocObject();
        v835 = (void (**)(uint64_t *__return_ptr))v349;
        *(void *)(v349 + 16) = sub_100188ECC;
        *(void *)(v349 + 24) = v348;
        v830 = swift_allocObject();
        *(unsigned char *)(v830 + 16) = 0;
        v829 = (uint8_t *)swift_allocObject();
        v829[16] = 4;
        unint64_t v350 = swift_allocObject();
        *(void *)(v350 + 16) = sub_1001D745C;
        *(void *)(v350 + 24) = v334;
        uint64_t v351 = swift_allocObject();
        *(void *)(v351 + 16) = sub_1001D7D7C;
        *(void *)(v351 + 24) = v350;
        v838 = swift_allocObject();
        LOBYTE(v838[2].isa) = 32;
        v836 = swift_allocObject();
        *(unsigned char *)(v836 + 16) = 8;
        uint64_t v352 = swift_allocObject();
        *(void *)(v352 + 16) = sub_1001D7484;
        *(void *)(v352 + 24) = v336;
        v353 = swift_allocObject();
        *(void *)(v353 + 16) = sub_100189E9C;
        *(void *)(v353 + 24) = v352;
        sub_10000566C(&qword_10070E4D8);
        os_log_type_t v354 = swift_allocObject();
        *(_OWORD *)(v354 + 16) = xmmword_1005F67A0;
        *(void *)(v354 + 32) = sub_100189ED8;
        *(void *)(v354 + 40) = v832;
        *(void *)(v354 + 48) = sub_100189ED8;
        *(void *)(v354 + 56) = v837;
        *(void *)(v354 + 64) = sub_100189ED0;
        *(void *)(v354 + 72) = v339;
        *(void *)(v354 + 80) = sub_100189ED8;
        *(void *)(v354 + 88) = v340;
        *(void *)(v354 + 96) = sub_100189ED8;
        *(void *)(v354 + 104) = v342;
        *(void *)(v354 + 112) = sub_100189EC4;
        *(void *)(v354 + 120) = v345;
        *(void *)(v354 + 128) = sub_100189ED8;
        uint64_t v355 = v347;
        *(void *)(v354 + 136) = v347;
        *(void *)(v354 + 144) = sub_100189ED8;
        *(void *)(v354 + 152) = v831;
        *(void *)(v354 + 160) = sub_100188ED4;
        *(void *)(v354 + 168) = v835;
        *(void *)(v354 + 176) = sub_100189ED8;
        *(void *)(v354 + 184) = v830;
        *(void *)(v354 + 192) = sub_100189ED8;
        *(void *)(v354 + 200) = v829;
        *(void *)(v354 + 208) = sub_1001D7D84;
        *(void *)(v354 + 216) = v351;
        *(void *)(v354 + 224) = sub_100189ED8;
        *(void *)(v354 + 232) = v838;
        *(void *)(v354 + 240) = sub_100189ED8;
        *(void *)(v354 + 248) = v836;
        *(void *)(v354 + 256) = sub_100189EC4;
        *(void *)(v354 + 264) = v353;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v356 = v353;
        swift_retain();
        swift_retain();
        uint64_t v357 = v829;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v358 = (void *)v828;
        if (sub_1005E28A0())
        {
          unint64_t v359 = v837;
          v823 = v339;
          v824 = (char *)v340;
          v822 = v342;
          int v360 = v355;
          v825 = (char *)v351;
          v826 = v356;
          uint64_t v361 = v831;
          unint64_t v362 = v830;
          uint64_t v363 = v357;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v813, v842, v841);
          uint64_t v364 = (uint8_t *)sub_1000C6564();
          uint64_t v365 = (uint8_t *)swift_slowAlloc();
          v844 = (void (**)(uint64_t *__return_ptr))v365;
          v845 = 0;
          *(_WORD *)uint64_t v364 = 1283;
          v846 = (unint64_t)(v364 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v832[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v359[16]);
          v366 = v822;
          os_log_type_t v367 = v823;
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v367 + 16), *(void *)(v367 + 24));
          uint64_t v368 = v824;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v368[16]);
          v832 = v365;
          v837 = v364;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v366[16]);
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *((uint64_t (**)(void))v834 + 2));
          uint64_t v369 = v840;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v360 + 16));
          uint64_t v370 = v843;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v361 + 16));
          swift_release();
          sub_1000C66C0((uint64_t *)&v846, (uint64_t)&v845, (uint64_t)&v844, v835[2]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v362 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v363[16]);
          uint64_t v251 = v841;
          uint64_t v371 = v842;
          unint64_t v372 = v839;
          int v373 = v828;
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *((void *)v825 + 2), *((void *)v825 + 3));
          uint64_t v374 = v836;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, (char)v838[2].isa);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v374 + 16));
          unint64_t v375 = v833;
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, (uint64_t (*)(void))v826[2].isa);
          swift_release();
          uint64_t v376 = v813;
          uint64_t v377 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v373, (os_signpost_type_t)v827, v377, "PersistenceEvent.update.downloadSectionData", "mailbox %{sensitive,mask.mailbox}s, downloadPass %hhu, UID %u, sections, %s", v837, 0x29u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v372 + 8))(v375, v369);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v370 + 8);
          v122(v376, v251);
          unint64_t v175 = v371;
          break;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(char *, void *))(v839 + 8))(v833, v840);
        goto LABEL_102;
      case 0xDuLL:
        v505 = a2 & 0xFFFFFFFFFFFFFFBLL;
        v506 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v507 = *(_DWORD *)(v505 + 24);
        v508 = *(void *)(v505 + 32);
        v509 = *(unsigned char *)(v505 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v510 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(uint8_t *, uint64_t, void *))(v839 + 16))(v832, v510, v840);
        v511 = swift_allocObject();
        *(void *)(v511 + 16) = v506;
        *(_DWORD *)(v511 + 24) = v507;
        v512 = swift_allocObject();
        *(void *)(v512 + 16) = j___s16IMAP2Persistence17MailboxOfInterestV4name12NIOIMAPCore20C4NameVvg;
        *(void *)(v512 + 24) = v511;
        v513 = swift_allocObject();
        *(void *)(v513 + 16) = v508;
        v514 = swift_allocObject();
        *(unsigned char *)(v514 + 16) = v509;
        v833 = (char *)sub_1005E0D70();
        LODWORD(v826) = sub_1005E26F0();
        v837 = (uint8_t *)swift_allocObject();
        v837[16] = 112;
        v835 = (void (**)(uint64_t *__return_ptr))swift_allocObject();
        *((unsigned char *)v835 + 16) = 8;
        v515 = swift_allocObject();
        *(void *)(v515 + 16) = 0x786F626C69616DLL;
        v516 = swift_allocObject();
        *(void *)(v516 + 16) = sub_1001D7FD8;
        *(void *)(v516 + 24) = v515;
        v517 = v516;
        v834 = (uint8_t *)swift_allocObject();
        v834[16] = 37;
        v838 = swift_allocObject();
        LOBYTE(v838[2].isa) = 8;
        v518 = swift_allocObject();
        *(void *)(v518 + 16) = sub_100189EBC;
        *(void *)(v518 + 24) = v512;
        v519 = swift_allocObject();
        *(void *)(v519 + 16) = sub_100189E9C;
        *(void *)(v519 + 24) = v518;
        v520 = v519;
        v831 = v519;
        v521 = (uint8_t *)swift_allocObject();
        v521[16] = 0;
        v522 = swift_allocObject();
        *(unsigned char *)(v522 + 16) = 8;
        v523 = swift_allocObject();
        *(void *)(v523 + 16) = sub_1001D7D70;
        *(void *)(v523 + 24) = v513;
        v524 = swift_allocObject();
        *(void *)(v524 + 16) = sub_10018A134;
        *(void *)(v524 + 24) = v523;
        v525 = v524;
        v836 = swift_allocObject();
        *(unsigned char *)(v836 + 16) = 0;
        v827 = (char *)swift_allocObject();
        v827[16] = 4;
        v526 = swift_allocObject();
        *(void *)(v526 + 16) = RemoteMailbox.specialUse.getter;
        *(void *)(v526 + 24) = v514;
        v527 = swift_allocObject();
        *(void *)(v527 + 16) = sub_1001D7FEC;
        *(void *)(v527 + 24) = v526;
        v528 = swift_allocObject();
        *(void *)(v528 + 16) = sub_1001D7D78;
        *(void *)(v528 + 24) = v527;
        v529 = swift_allocObject();
        *(void *)(v529 + 16) = sub_1001D7D80;
        *(void *)(v529 + 24) = v528;
        sub_10000566C(&qword_10070E4D8);
        v530 = swift_allocObject();
        *(_OWORD *)(v530 + 16) = xmmword_1005F67B0;
        *(void *)(v530 + 32) = sub_100189ED8;
        v531 = v838;
        *(void *)(v530 + 40) = v837;
        *(void *)(v530 + 48) = sub_100189ED8;
        v532 = v834;
        *(void *)(v530 + 56) = v835;
        *(void *)(v530 + 64) = sub_100189ED0;
        *(void *)(v530 + 72) = v517;
        *(void *)(v530 + 80) = sub_100189ED8;
        *(void *)(v530 + 88) = v532;
        *(void *)(v530 + 96) = sub_100189ED8;
        *(void *)(v530 + 104) = v531;
        *(void *)(v530 + 112) = sub_100189EC4;
        *(void *)(v530 + 120) = v520;
        *(void *)(v530 + 128) = sub_100189ED8;
        *(void *)(v530 + 136) = v521;
        *(void *)(v530 + 144) = sub_100189ED8;
        *(void *)(v530 + 152) = v522;
        *(void *)(v530 + 160) = sub_100189ED0;
        v533 = (char *)v525;
        *(void *)(v530 + 168) = v525;
        *(void *)(v530 + 176) = sub_100189ED8;
        *(void *)(v530 + 184) = v836;
        *(void *)(v530 + 192) = sub_100189ED8;
        v534 = v827;
        *(void *)(v530 + 200) = v827;
        *(void *)(v530 + 208) = sub_1001D7D84;
        *(void *)(v530 + 216) = v529;
        swift_retain();
        swift_retain();
        v535 = v517;
        swift_retain();
        v536 = v834;
        swift_retain();
        swift_retain();
        swift_retain();
        v829 = v521;
        swift_retain();
        v828 = v522;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v830 = v529;
        swift_retain();
        v537 = v833;
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          v825 = v533;
          v538 = v534;
          v540 = v835;
          v539 = v836;
          v541 = v536;
          v542 = v828;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v812, v842, v841);
          v543 = (uint8_t *)sub_1000C6564();
          v544 = (uint8_t *)swift_slowAlloc();
          v844 = (void (**)(uint64_t *__return_ptr))v544;
          v845 = 0;
          *(_WORD *)v543 = 1027;
          v846 = (unint64_t)(v543 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v837[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *((unsigned char *)v540 + 16));
          v837 = v544;
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v535 + 16), *(void *)(v535 + 24));
          v545 = v840;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v541[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, (char)v838[2].isa);
          v546 = v833;
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v831 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v829[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v542 + 16));
          uint64_t v251 = v841;
          v547 = v842;
          v548 = v839;
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *((void *)v825 + 2), *((void *)v825 + 3));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v539 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v538[16]);
          v549 = v545;
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *(void *)(v830 + 16), *(void *)(v830 + 24));
          swift_release();
          v550 = v812;
          v551 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v546, (os_signpost_type_t)v826, v551, "PersistenceEvent.update.uploadMessages", "mailbox %{sensitive,mask.mailbox}s, count %ld, isLast: %{BOOL}d", v543, 0x26u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1000C65A8();

          (*(void (**)(uint8_t *, void *))(v548 + 8))(v832, v549);
          goto LABEL_98;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint8_t *, void *))(v839 + 8))(v832, v840);
        goto LABEL_102;
      case 0xEuLL:
        uint64_t v208 = sub_10000566C(&qword_10070F560);
        uint64_t v209 = swift_projectBox();
        v839 = *(void *)v209;
        LODWORD(v838) = *(_DWORD *)(v209 + 8);
        uint64_t v210 = *(void *)(v209 + 16);
        BOOL v211 = *(void *)(v209 + 24);
        uint64_t v212 = *(unsigned char *)(v209 + 32);
        uint64_t v213 = *(unsigned char *)(v209 + 33);
        LODWORD(v837) = *(unsigned __int8 *)(v209 + 34);
        LODWORD(v836) = *(unsigned __int8 *)(v209 + 35);
        uint64_t v214 = *(unsigned char *)(v209 + 36);
        LODWORD(v835) = *(unsigned __int8 *)(v209 + 37);
        LODWORD(v834) = *(unsigned __int16 *)(v209 + 38);
        LODWORD(v833) = *(unsigned __int8 *)(v209 + 40);
        uint64_t v215 = (uint64_t *)(v209 + *(int *)(v208 + 96));
        uint64_t v216 = *v215;
        uint64_t v217 = v215[1];
        unint64_t v218 = v800;
        uint64_t v219 = sub_1000079E4(v209 + *(int *)(v208 + 80), v800, &qword_100709E58);
        v840 = &v793;
        __chkstk_darwin(v219);
        int v220 = v842;
        uint64_t v221 = (char *)v839;
        *(&v793 - 8) = v842;
        *(&v793 - 7) = v221;
        *((_DWORD *)&v793 - 12) = v838;
        *((unsigned char *)&v793 - 44) = v212;
        *((unsigned char *)&v793 - 43) = v213;
        *((unsigned char *)&v793 - 42) = (_BYTE)v837;
        *((unsigned char *)&v793 - 41) = v836;
        *((unsigned char *)&v793 - 40) = v214;
        *((unsigned char *)&v793 - 39) = (_BYTE)v835;
        *((_WORD *)&v793 - 19) = (_WORD)v834;
        *((unsigned char *)&v793 - 36) = (_BYTE)v833;
        *(&v793 - 4) = (char *)v218;
        *(&v793 - 3) = (char *)v216;
        *(&v793 - 2) = (char *)v217;
        sub_100008D24(v210, v211);
        sub_100008D24(v216, v217);
        sub_1001D574C((uint64_t (*)(uint64_t, uint64_t))sub_1001D72DC, (uint64_t)(&v793 - 10), v210, v211);
        sub_1000094D4(v216, v217);
        sub_1000094D4(v210, v211);
        sub_100007A48(v218, &qword_100709E58);
        return (*(uint64_t (**)(char *, uint64_t))(v843 + 8))(v220, v841);
      case 0xFuLL:
        uint64_t v429 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v428 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        uint64_t v430 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
        LODWORD(v838) = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
        sub_1001CB45C(v430, (uint64_t)&v846);
        uint64_t v431 = v849;
        if (v849)
        {
          uint64_t v432 = v846;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v432 = 0;
        }
        sub_100070024(v430, (uint64_t)&v846);
        v692 = v849;
        if (v849)
        {
          v693 = v846;
          swift_bridgeObjectRelease();
        }
        else
        {
          v693 = 0;
        }
        v694 = v692 == 0;
        v695 = v431 == 0;
        v696 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(uint8_t *, uint64_t, void *))(v839 + 16))(v834, v696, v840);
        v697 = swift_allocObject();
        *(void *)(v697 + 16) = v429;
        *(void *)(v697 + 24) = v428;
        v698 = swift_allocObject();
        *(void *)(v698 + 16) = sub_1001D7FE0;
        *(void *)(v698 + 24) = v697;
        v699 = swift_allocObject();
        *(void *)(v699 + 16) = v430;
        v700 = swift_allocObject();
        *(_DWORD *)(v700 + 16) = v432;
        *(unsigned char *)(v700 + 20) = v695;
        v701 = swift_allocObject();
        *(void *)(v701 + 16) = sub_1001D6F2C;
        *(void *)(v701 + 24) = v700;
        v702 = swift_allocObject();
        *(_DWORD *)(v702 + 16) = v693;
        *(unsigned char *)(v702 + 20) = v694;
        v703 = swift_allocObject();
        *(void *)(v703 + 16) = sub_1001D6F2C;
        *(void *)(v703 + 24) = v702;
        v704 = swift_allocObject();
        *(unsigned char *)(v704 + 16) = (_BYTE)v838;
        v829 = (uint8_t *)sub_1005E0D70();
        LODWORD(v823) = sub_1005E26F0();
        v705 = swift_allocObject();
        *(unsigned char *)(v705 + 16) = 32;
        v706 = v705;
        v707 = swift_allocObject();
        *(unsigned char *)(v707 + 16) = 8;
        v708 = (char *)v707;
        v709 = swift_allocObject();
        *(void *)(v709 + 16) = sub_1001D719C;
        *(void *)(v709 + 24) = v698;
        v710 = swift_allocObject();
        v836 = v710;
        *(void *)(v710 + 16) = sub_100189E9C;
        *(void *)(v710 + 24) = v709;
        v828 = swift_allocObject();
        *(unsigned char *)(v828 + 16) = 0;
        v831 = swift_allocObject();
        *(unsigned char *)(v831 + 16) = 8;
        v711 = swift_allocObject();
        *(void *)(v711 + 16) = sub_1001D7D70;
        *(void *)(v711 + 24) = v699;
        v712 = swift_allocObject();
        *(void *)(v712 + 16) = sub_10018A134;
        *(void *)(v712 + 24) = v711;
        v713 = (char *)v712;
        v714 = swift_allocObject();
        *(unsigned char *)(v714 + 16) = 0;
        v715 = (char *)v714;
        v832 = (uint8_t *)swift_allocObject();
        v832[16] = 4;
        v716 = swift_allocObject();
        *(void *)(v716 + 16) = sub_1001D7D74;
        *(void *)(v716 + 24) = v701;
        v717 = swift_allocObject();
        *(void *)(v717 + 16) = sub_1001D7D7C;
        *(void *)(v717 + 24) = v716;
        v718 = (char *)v717;
        v830 = swift_allocObject();
        *(unsigned char *)(v830 + 16) = 0;
        v835 = (void (**)(uint64_t *__return_ptr))swift_allocObject();
        *((unsigned char *)v835 + 16) = 4;
        v719 = swift_allocObject();
        *(void *)(v719 + 16) = sub_1001D7D74;
        *(void *)(v719 + 24) = v703;
        v720 = swift_allocObject();
        v833 = (char *)v720;
        *(void *)(v720 + 16) = sub_1001D7D7C;
        *(void *)(v720 + 24) = v719;
        v837 = (uint8_t *)swift_allocObject();
        v837[16] = 0;
        v838 = swift_allocObject();
        LOBYTE(v838[2].isa) = 4;
        v721 = swift_allocObject();
        *(void *)(v721 + 16) = j___s16IMAP2Persistence13RemoteMailboxV10specialUseAC07SpecialF0OSgvg;
        *(void *)(v721 + 24) = v704;
        v722 = swift_allocObject();
        *(void *)(v722 + 16) = sub_1001D7FEC;
        *(void *)(v722 + 24) = v721;
        v723 = swift_allocObject();
        *(void *)(v723 + 16) = sub_1001D7D78;
        *(void *)(v723 + 24) = v722;
        v724 = swift_allocObject();
        *(void *)(v724 + 16) = sub_1001D7D80;
        *(void *)(v724 + 24) = v723;
        sub_10000566C(&qword_10070E4D8);
        v725 = swift_allocObject();
        *(_OWORD *)(v725 + 16) = xmmword_1005F67A0;
        *(void *)(v725 + 32) = sub_100189ED8;
        *(void *)(v725 + 40) = v706;
        *(void *)(v725 + 48) = sub_100189ED8;
        *(void *)(v725 + 56) = v708;
        *(void *)(v725 + 64) = sub_100189EC4;
        *(void *)(v725 + 72) = v836;
        *(void *)(v725 + 80) = sub_100189ED8;
        *(void *)(v725 + 88) = v828;
        *(void *)(v725 + 96) = sub_100189ED8;
        *(void *)(v725 + 104) = v831;
        *(void *)(v725 + 112) = sub_100189ED0;
        *(void *)(v725 + 120) = v713;
        *(void *)(v725 + 128) = sub_100189ED8;
        *(void *)(v725 + 136) = v715;
        *(void *)(v725 + 144) = sub_100189ED8;
        *(void *)(v725 + 152) = v832;
        *(void *)(v725 + 160) = sub_1001D7D84;
        *(void *)(v725 + 168) = v718;
        *(void *)(v725 + 176) = sub_100189ED8;
        *(void *)(v725 + 184) = v830;
        *(void *)(v725 + 192) = sub_100189ED8;
        *(void *)(v725 + 200) = v835;
        *(void *)(v725 + 208) = sub_1001D7D84;
        *(void *)(v725 + 216) = v833;
        *(void *)(v725 + 224) = sub_100189ED8;
        *(void *)(v725 + 232) = v837;
        *(void *)(v725 + 240) = sub_100189ED8;
        *(void *)(v725 + 248) = v838;
        *(void *)(v725 + 256) = sub_1001D7D84;
        *(void *)(v725 + 264) = v724;
        v826 = v706;
        swift_retain();
        v824 = v708;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v827 = v713;
        swift_retain();
        swift_retain();
        swift_retain();
        v825 = v718;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        v726 = v829;
        if (sub_1005E28A0())
        {
          v821 = (char *)v724;
          v727 = v824;
          v728 = v831;
          v822 = v715;
          v729 = v832;
          v730 = v825;
          v731 = v793;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v793, v842, v841);
          v732 = sub_1000C6564();
          v844 = (void (**)(uint64_t *__return_ptr))swift_slowAlloc();
          v845 = 0;
          v820 = (char *)v844;
          *(_WORD *)v732 = 1282;
          v846 = v732 + 2;
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, (char)v826[2].isa);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v727[16]);
          v733 = v840;
          v734 = v828;
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v836 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v734 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v728 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *((void *)v827 + 2), *((void *)v827 + 3));
          v735 = v822;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v735[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v729[16]);
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *((void *)v730 + 2), *((void *)v730 + 3));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v830 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *((unsigned char *)v835 + 16));
          uint64_t v251 = v841;
          v547 = v842;
          v736 = v839;
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *((void *)v833 + 2), *((void *)v833 + 3));
          v737 = (uint8_t *)v732;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v837[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, (char)v838[2].isa);
          v738 = v834;
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *((void *)v821 + 2), *((void *)v821 + 3));
          swift_release();
          v739 = sub_1005E0D30();
          v740 = v829;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, (os_log_t)v829, (os_signpost_type_t)v823, v739, "PersistenceEvent.update.uploadChangedFlags", "mailbox %s, message count %ld, {%u %u}, isLast: %{BOOL}d", v737, 0x28u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1000C65A8();

          (*(void (**)(uint8_t *, void *))(v736 + 8))(v738, v733);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
          v122(v731, v251);
          goto LABEL_99;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint8_t *, void *))(v839 + 8))(v834, v840);
        goto LABEL_102;
      case 0x10uLL:
        unint64_t v177 = sub_10000566C(&qword_10070F2A0);
        unint64_t v178 = (uint64_t *)swift_projectBox();
        int64_t v179 = *v178;
        unint64_t v180 = v178[1];
        uint64_t v181 = v823;
        sub_1000079E4((uint64_t)v178 + *(int *)(v177 + 48), v823, &qword_100709E38);
        swift_bridgeObjectRetain();
        unint64_t v182 = tracingSignposter.unsafeMutableAddressor();
        unint64_t v183 = v819;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v819, v182, v840);
        long long v184 = swift_allocObject();
        *(void *)(v184 + 16) = v179;
        *(void *)(v184 + 24) = v180;
        unint64_t v185 = swift_allocObject();
        *(void *)(v185 + 16) = sub_1001D7FE0;
        *(void *)(v185 + 24) = v184;
        uint64_t v186 = v181;
        uint64_t v187 = v837;
        sub_1000079E4(v186, (uint64_t)v837, &qword_100709E38);
        uint64_t v188 = (*(unsigned __int8 *)(v836 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v836 + 80);
        long long v189 = swift_allocObject();
        sub_10001FDF0((uint64_t)v187, v189 + v188, &qword_100709E38);
        unint64_t v190 = sub_1005E0D70();
        LODWORD(v838) = sub_1005E26F0();
        unint64_t v191 = swift_allocObject();
        *(unsigned char *)(v191 + 16) = 32;
        uint64_t v192 = swift_allocObject();
        *(unsigned char *)(v192 + 16) = 8;
        unint64_t v193 = swift_allocObject();
        *(void *)(v193 + 16) = sub_1001D719C;
        *(void *)(v193 + 24) = v185;
        uint64_t v194 = swift_allocObject();
        *(void *)(v194 + 16) = sub_100189E9C;
        *(void *)(v194 + 24) = v193;
        uint64_t v195 = swift_allocObject();
        *(unsigned char *)(v195 + 16) = 0;
        uint64_t v196 = swift_allocObject();
        *(unsigned char *)(v196 + 16) = 8;
        unint64_t v197 = swift_allocObject();
        *(void *)(v197 + 16) = sub_100188E08;
        *(void *)(v197 + 24) = v189;
        unint64_t v198 = swift_allocObject();
        *(void *)(v198 + 16) = sub_10018A134;
        *(void *)(v198 + 24) = v197;
        sub_10000566C(&qword_10070E4D8);
        uint64_t v199 = swift_allocObject();
        *(_OWORD *)(v199 + 16) = xmmword_1005F6720;
        *(void *)(v199 + 32) = sub_100189ED8;
        *(void *)(v199 + 40) = v191;
        *(void *)(v199 + 48) = sub_100189ED8;
        *(void *)(v199 + 56) = v192;
        *(void *)(v199 + 64) = sub_100189EC4;
        *(void *)(v199 + 72) = v194;
        *(void *)(v199 + 80) = sub_100189ED8;
        *(void *)(v199 + 88) = v195;
        *(void *)(v199 + 96) = sub_100189ED8;
        *(void *)(v199 + 104) = v196;
        *(void *)(v199 + 112) = sub_100189ED0;
        *(void *)(v199 + 120) = v198;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v805, v842, v841);
          unint64_t v200 = (uint8_t *)sub_1000C6564();
          v844 = (void (**)(uint64_t *__return_ptr))swift_slowAlloc();
          v845 = 0;
          *(_WORD *)unint64_t v200 = 514;
          v846 = (unint64_t)(v200 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v191 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v192 + 16));
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v194 + 16));
          uint64_t v201 = v840;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v195 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v196 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v198 + 16), *(void *)(v198 + 24));
          uint64_t v202 = v843;
          uint64_t v203 = v823;
          uint64_t v204 = v819;
          swift_release();
          unint64_t v205 = v805;
          uint64_t v206 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v190, (os_signpost_type_t)v838, v206, "PersistenceEvent.update.uploadMessagesWithChangedFlagAfterCopy", "mailbox %s, message count %ld", v200, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v839 + 8))(v204, v201);
          sub_100007A48(v203, &qword_100709E38);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v202 + 8);
          uint64_t v207 = v205;
LABEL_24:
          uint64_t v251 = v841;
          v122(v207, v841);
        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, void *))(v839 + 8))(v183, v840);
          sub_100007A48(v823, &qword_100709E38);
LABEL_76:
          unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
          uint64_t v251 = v841;
        }
LABEL_77:
        unint64_t v175 = v842;
        break;
      case 0x11uLL:
        uint64_t v466 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        uint64_t v467 = *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        uint64_t v468 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
        uint64_t v469 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
        sub_1001CB4D4(v468, (uint64_t)&v846);
        unint64_t v470 = v847;
        if (v847)
        {
          uint64_t v472 = v849;
          v471 = v850;
          v473 = v848;
          unint64_t v474 = (unsigned char *)v846;
          uint64_t v475 = HIDWORD(v846);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1001D7118((uint64_t)v474, v470, v473, v472, v471);
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LODWORD(v475) = 0;
        }
        sub_1000700A0(v468, (uint64_t)&v846);
        v741 = v847;
        LODWORD(v838) = v469;
        if (v847)
        {
          v742 = HIDWORD(v846);
          sub_1001D7118(v846, v847, v848, v849, v850);
        }
        else
        {
          LODWORD(v742) = 0;
        }
        v743 = v741 == 0;
        v744 = v470 == 0;
        v745 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(void (**)(uint64_t *__return_ptr), uint64_t, void *))(v839 + 16))(v835, v745, v840);
        v746 = swift_allocObject();
        *(void *)(v746 + 16) = v466;
        *(_DWORD *)(v746 + 24) = v467;
        v747 = swift_allocObject();
        *(void *)(v747 + 16) = j___s16IMAP2Persistence17MailboxOfInterestV4name12NIOIMAPCore20C4NameVvg;
        *(void *)(v747 + 24) = v746;
        v748 = swift_allocObject();
        *(void *)(v748 + 16) = v468;
        v749 = swift_allocObject();
        *(_DWORD *)(v749 + 16) = v475;
        *(unsigned char *)(v749 + 20) = v744;
        v750 = swift_allocObject();
        *(void *)(v750 + 16) = sub_1001D6F2C;
        *(void *)(v750 + 24) = v749;
        v751 = swift_allocObject();
        *(_DWORD *)(v751 + 16) = v742;
        *(unsigned char *)(v751 + 20) = v743;
        v752 = swift_allocObject();
        *(void *)(v752 + 16) = sub_1001D6F2C;
        *(void *)(v752 + 24) = v751;
        v753 = swift_allocObject();
        *(unsigned char *)(v753 + 16) = (_BYTE)v838;
        v826 = (os_log_t)sub_1005E0D70();
        LODWORD(v820) = sub_1005E26F0();
        v754 = swift_allocObject();
        *(unsigned char *)(v754 + 16) = 112;
        v755 = v754;
        v828 = swift_allocObject();
        *(unsigned char *)(v828 + 16) = 8;
        v756 = swift_allocObject();
        *(void *)(v756 + 16) = 0x786F626C69616DLL;
        v757 = swift_allocObject();
        *(void *)(v757 + 16) = sub_1001D6FB0;
        *(void *)(v757 + 24) = v756;
        v758 = v757;
        v822 = (char *)swift_allocObject();
        v822[16] = 37;
        v833 = (char *)swift_allocObject();
        v833[16] = 8;
        v759 = swift_allocObject();
        *(void *)(v759 + 16) = sub_100188DFC;
        *(void *)(v759 + 24) = v747;
        v760 = swift_allocObject();
        v837 = (uint8_t *)v760;
        *(void *)(v760 + 16) = sub_100188EFC;
        *(void *)(v760 + 24) = v759;
        v824 = (char *)swift_allocObject();
        v824[16] = 0;
        v829 = (uint8_t *)swift_allocObject();
        v829[16] = 8;
        v761 = swift_allocObject();
        *(void *)(v761 + 16) = sub_1001D7D70;
        *(void *)(v761 + 24) = v748;
        v762 = swift_allocObject();
        v830 = v762;
        *(void *)(v762 + 16) = sub_100188FDC;
        *(void *)(v762 + 24) = v761;
        v823 = swift_allocObject();
        *(unsigned char *)(v823 + 16) = 0;
        v836 = swift_allocObject();
        *(unsigned char *)(v836 + 16) = 4;
        v763 = swift_allocObject();
        *(void *)(v763 + 16) = sub_1001D6F30;
        *(void *)(v763 + 24) = v750;
        v764 = swift_allocObject();
        v834 = (uint8_t *)v764;
        *(void *)(v764 + 16) = sub_1001D701C;
        *(void *)(v764 + 24) = v763;
        v827 = (char *)swift_allocObject();
        v827[16] = 0;
        v832 = (uint8_t *)swift_allocObject();
        v832[16] = 4;
        v765 = swift_allocObject();
        *(void *)(v765 + 16) = sub_1001D7D74;
        *(void *)(v765 + 24) = v752;
        v766 = swift_allocObject();
        *(void *)(v766 + 16) = sub_1001D7D7C;
        *(void *)(v766 + 24) = v765;
        v825 = (char *)swift_allocObject();
        v825[16] = 0;
        v838 = swift_allocObject();
        LOBYTE(v838[2].isa) = 4;
        v767 = swift_allocObject();
        *(void *)(v767 + 16) = j___s16IMAP2Persistence13RemoteMailboxV10specialUseAC07SpecialF0OSgvg;
        *(void *)(v767 + 24) = v753;
        v768 = swift_allocObject();
        *(void *)(v768 + 16) = sub_1001D7094;
        *(void *)(v768 + 24) = v767;
        v769 = swift_allocObject();
        *(void *)(v769 + 16) = sub_1001D70C0;
        *(void *)(v769 + 24) = v768;
        v770 = swift_allocObject();
        v831 = v770;
        *(void *)(v770 + 16) = sub_1001D70E8;
        *(void *)(v770 + 24) = v769;
        sub_10000566C(&qword_10070E4D8);
        v771 = swift_allocObject();
        *(_OWORD *)(v771 + 16) = xmmword_1005F6790;
        *(void *)(v771 + 32) = sub_100188E94;
        v772 = (char *)v755;
        *(void *)(v771 + 40) = v755;
        *(void *)(v771 + 48) = sub_100189ED8;
        *(void *)(v771 + 56) = v828;
        *(void *)(v771 + 64) = sub_100188F94;
        v773 = (char *)v758;
        *(void *)(v771 + 72) = v758;
        *(void *)(v771 + 80) = sub_100189ED8;
        *(void *)(v771 + 88) = v822;
        *(void *)(v771 + 96) = sub_100189ED8;
        *(void *)(v771 + 104) = v833;
        *(void *)(v771 + 112) = sub_100188F04;
        *(void *)(v771 + 120) = v837;
        *(void *)(v771 + 128) = sub_100189ED8;
        *(void *)(v771 + 136) = v824;
        *(void *)(v771 + 144) = sub_100189ED8;
        *(void *)(v771 + 152) = v829;
        *(void *)(v771 + 160) = sub_100188F94;
        *(void *)(v771 + 168) = v830;
        *(void *)(v771 + 176) = sub_100189ED8;
        *(void *)(v771 + 184) = v823;
        *(void *)(v771 + 192) = sub_100189ED8;
        *(void *)(v771 + 200) = v836;
        *(void *)(v771 + 208) = sub_1001D704C;
        *(void *)(v771 + 216) = v834;
        *(void *)(v771 + 224) = sub_100189ED8;
        *(void *)(v771 + 232) = v827;
        *(void *)(v771 + 240) = sub_100189ED8;
        *(void *)(v771 + 248) = v832;
        *(void *)(v771 + 256) = sub_1001D7D84;
        *(void *)(v771 + 264) = v766;
        *(void *)(v771 + 272) = sub_100189ED8;
        *(void *)(v771 + 280) = v825;
        *(void *)(v771 + 288) = sub_100189ED8;
        *(void *)(v771 + 296) = v838;
        *(void *)(v771 + 304) = sub_1001D704C;
        *(void *)(v771 + 312) = v831;
        v821 = v772;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v774 = v827;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        v775 = v826;
        if ((sub_1005E28A0() & 1) == 0)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          v688 = *(void (**)(void (**)(uint64_t *__return_ptr), void *))(v839 + 8);
          v691 = v835;
          goto LABEL_101;
        }
        v818 = (char *)v766;
        v776 = v828;
        v819 = v773;
        v777 = v833;
        v778 = v834;
        v779 = v836;
        v780 = v774;
        (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v814, v842, v841);
        v781 = (uint8_t *)sub_1000C6564();
        v844 = (void (**)(uint64_t *__return_ptr))swift_slowAlloc();
        v845 = 0;
        v817 = (char *)v844;
        *(_WORD *)v781 = 1539;
        v846 = (unint64_t)(v781 + 2);
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v821[16]);
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v776 + 16));
        v782 = v840;
        swift_release();
        sub_1000C6780(&v846, &v845, &v844, *((void *)v819 + 2), *((void *)v819 + 3));
        v783 = v822;
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v783[16]);
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v777[16]);
        v784 = v779;
        swift_release();
        sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *((uint64_t (**)(void))v837 + 2));
        v785 = v823;
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v824[16]);
        v786 = v830;
        v787 = v829;
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v787[16]);
        swift_release();
        sub_1000C6780(&v846, &v845, &v844, *(void *)(v786 + 16), *(void *)(v786 + 24));
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v785 + 16));
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v784 + 16));
        swift_release();
        sub_1000C66BC(&v846, &v845, &v844, *((void *)v778 + 2), *((void *)v778 + 3));
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v780[16]);
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v832[16]);
        uint64_t v251 = v841;
        v547 = v842;
        v788 = v839;
        swift_release();
        sub_1000C66BC(&v846, &v845, &v844, *((void *)v818 + 2), *((void *)v818 + 3));
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v825[16]);
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, (char)v838[2].isa);
        v789 = v835;
        v790 = v782;
        swift_release();
        sub_1000C66BC(&v846, &v845, &v844, *(void *)(v831 + 16), *(void *)(v831 + 24));
        swift_release();
        v550 = v814;
        v791 = sub_1005E0D30();
        v792 = v826;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v826, (os_signpost_type_t)v820, v791, "PersistenceEvent.update.moveOrCopyMessages", "mailbox %{sensitive,mask.mailbox}s, moves count %ld, {%u %u}, isLast: %{BOOL}d", v781, 0x32u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1000C65A8();

        (*(void (**)(void (**)(uint64_t *__return_ptr), void *))(v788 + 8))(v789, v790);
LABEL_98:
        unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
        v122(v550, v251);
LABEL_99:
        unint64_t v175 = v547;
        break;
      case 0x12uLL:
        v658 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_bridgeObjectRetain();
        v659 = tracingSignposter.unsafeMutableAddressor();
        v661 = v839;
        v660 = v840;
        v662 = v816;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v816, v659, v840);
        v663 = swift_allocObject();
        *(void *)(v663 + 16) = v658;
        v664 = sub_1005E0D70();
        v665 = sub_1005E26F0();
        v666 = swift_allocObject();
        *(unsigned char *)(v666 + 16) = 0;
        v667 = swift_allocObject();
        *(unsigned char *)(v667 + 16) = 8;
        v668 = swift_allocObject();
        *(void *)(v668 + 16) = sub_1001D7D70;
        *(void *)(v668 + 24) = v663;
        v669 = swift_allocObject();
        *(void *)(v669 + 16) = sub_10018A134;
        *(void *)(v669 + 24) = v668;
        sub_10000566C(&qword_10070E4D8);
        v670 = swift_allocObject();
        *(_OWORD *)(v670 + 16) = xmmword_1005F66F0;
        *(void *)(v670 + 32) = sub_100189ED8;
        *(void *)(v670 + 40) = v666;
        *(void *)(v670 + 48) = sub_100189ED8;
        *(void *)(v670 + 56) = v667;
        *(void *)(v670 + 64) = sub_100189ED0;
        *(void *)(v670 + 72) = v669;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if ((sub_1005E28A0() & 1) == 0) {
          goto LABEL_58;
        }
        v671 = v842;
        v672 = v841;
        (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v796, v842, v841);
        v673 = (uint8_t *)sub_1000C6564();
        v844 = 0;
        v845 = 0;
        *(_WORD *)v673 = 256;
        v846 = (unint64_t)(v673 + 2);
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v666 + 16));
        swift_release();
        sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v667 + 16));
        swift_release();
        sub_1000C6780(&v846, &v845, &v844, *(void *)(v669 + 16), *(void *)(v669 + 24));
        v674 = v843;
        swift_release();
        v675 = v796;
        v676 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v664, v665, v676, "PersistenceEvent.update.setSearchRequests", "count %ld", v673, 0xCu);
        sub_1000C65A8();

        (*(void (**)(char *, void *))(v661 + 8))(v816, v840);
        goto LABEL_57;
      case 0x13uLL:
        v677 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_bridgeObjectRetain();
        v678 = tracingSignposter.unsafeMutableAddressor();
        v661 = v839;
        v660 = v840;
        v662 = v817;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v817, v678, v840);
        v679 = swift_allocObject();
        *(void *)(v679 + 16) = v677;
        v664 = sub_1005E0D70();
        v680 = sub_1005E26F0();
        v681 = swift_allocObject();
        *(unsigned char *)(v681 + 16) = 0;
        v682 = swift_allocObject();
        *(unsigned char *)(v682 + 16) = 8;
        v683 = swift_allocObject();
        *(void *)(v683 + 16) = sub_1001D7D70;
        *(void *)(v683 + 24) = v679;
        v684 = swift_allocObject();
        *(void *)(v684 + 16) = sub_10018A134;
        *(void *)(v684 + 24) = v683;
        sub_10000566C(&qword_10070E4D8);
        v685 = swift_allocObject();
        *(_OWORD *)(v685 + 16) = xmmword_1005F66F0;
        *(void *)(v685 + 32) = sub_100189ED8;
        *(void *)(v685 + 40) = v681;
        *(void *)(v685 + 48) = sub_100189ED8;
        *(void *)(v685 + 56) = v682;
        *(void *)(v685 + 64) = sub_100189ED0;
        *(void *)(v685 + 72) = v684;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          v671 = v842;
          v672 = v841;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v797, v842, v841);
          v686 = (uint8_t *)sub_1000C6564();
          v844 = 0;
          v845 = 0;
          *(_WORD *)v686 = 256;
          v846 = (unint64_t)(v686 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v681 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v682 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v684 + 16), *(void *)(v684 + 24));
          v674 = v843;
          swift_release();
          v675 = v797;
          v687 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v664, v680, v687, "PersistenceEvent.update.setDownloadRequests", "count %ld", v686, 0xCu);
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v661 + 8))(v817, v840);
LABEL_57:
          unint64_t v122 = *(void (**)(char *, uint64_t))(v674 + 8);
          v122(v675, v672);
        }
        else
        {
LABEL_58:
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, void *))(v661 + 8))(v662, v660);
          v671 = v842;
          unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
          v672 = v841;
        }
        unint64_t v175 = v671;
        uint64_t v176 = v672;
        return ((uint64_t (*)(void, void))v122)(v175, v176);
      case 0x14uLL:
        v552 = a2 & 0xFFFFFFFFFFFFFFBLL;
        v553 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        v554 = *(_DWORD *)(v552 + 24);
        v555 = *(void *)(v552 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v556 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v822, v556, v840);
        v557 = swift_allocObject();
        *(void *)(v557 + 16) = v553;
        *(_DWORD *)(v557 + 24) = v554;
        v558 = swift_allocObject();
        *(void *)(v558 + 16) = MailboxOfInterest.name.getter;
        *(void *)(v558 + 24) = v557;
        v559 = swift_allocObject();
        *(void *)(v559 + 16) = v555;
        v838 = sub_1005E0D70();
        LODWORD(v835) = sub_1005E26F0();
        v560 = (uint8_t *)swift_allocObject();
        v560[16] = 112;
        v836 = swift_allocObject();
        *(unsigned char *)(v836 + 16) = 8;
        v561 = swift_allocObject();
        *(void *)(v561 + 16) = 0x786F626C69616DLL;
        v562 = swift_allocObject();
        *(void *)(v562 + 16) = sub_1001D7FD8;
        *(void *)(v562 + 24) = v561;
        v563 = swift_allocObject();
        *(unsigned char *)(v563 + 16) = 37;
        v564 = swift_allocObject();
        *(unsigned char *)(v564 + 16) = 8;
        v565 = swift_allocObject();
        *(void *)(v565 + 16) = sub_100189EBC;
        *(void *)(v565 + 24) = v558;
        v566 = swift_allocObject();
        *(void *)(v566 + 16) = sub_100189E9C;
        *(void *)(v566 + 24) = v565;
        v567 = swift_allocObject();
        *(unsigned char *)(v567 + 16) = 0;
        v568 = swift_allocObject();
        *(unsigned char *)(v568 + 16) = 8;
        v569 = (uint8_t *)v838;
        v570 = swift_allocObject();
        *(void *)(v570 + 16) = sub_1001D7D70;
        *(void *)(v570 + 24) = v559;
        v571 = swift_allocObject();
        *(void *)(v571 + 16) = sub_10018A134;
        *(void *)(v571 + 24) = v570;
        sub_10000566C(&qword_10070E4D8);
        v572 = swift_allocObject();
        *(_OWORD *)(v572 + 16) = xmmword_1005F6780;
        *(void *)(v572 + 32) = sub_100189ED8;
        *(void *)(v572 + 40) = v560;
        v573 = v836;
        *(void *)(v572 + 48) = sub_100189ED8;
        *(void *)(v572 + 56) = v573;
        *(void *)(v572 + 64) = sub_100189ED0;
        *(void *)(v572 + 72) = v562;
        *(void *)(v572 + 80) = sub_100189ED8;
        *(void *)(v572 + 88) = v563;
        *(void *)(v572 + 96) = sub_100189ED8;
        *(void *)(v572 + 104) = v564;
        *(void *)(v572 + 112) = sub_100189EC4;
        *(void *)(v572 + 120) = v566;
        *(void *)(v572 + 128) = sub_100189ED8;
        *(void *)(v572 + 136) = v567;
        *(void *)(v572 + 144) = sub_100189ED8;
        *(void *)(v572 + 152) = v568;
        *(void *)(v572 + 160) = sub_100189ED0;
        *(void *)(v572 + 168) = v571;
        v837 = v560;
        v574 = v573;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_1005E28A0())
        {
          v575 = v843;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v806, v842, v841);
          v576 = (uint8_t *)sub_1000C6564();
          v844 = (void (**)(uint64_t *__return_ptr))swift_slowAlloc();
          v845 = 0;
          v833 = (char *)v844;
          v834 = v576;
          *(_WORD *)v576 = 771;
          v846 = (unint64_t)(v576 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v837[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v574 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v562 + 16), *(void *)(v562 + 24));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v563 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v564 + 16));
          uint64_t v251 = v841;
          v577 = v842;
          v578 = v839;
          swift_release();
          sub_1000C689C((uint64_t *)&v846, (uint64_t)&v845, (uint64_t *)&v844, *(uint64_t (**)(void))(v566 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v567 + 16));
          v579 = v840;
          v580 = v822;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v568 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v571 + 16), *(void *)(v571 + 24));
          swift_release();
          v581 = v806;
          v582 = sub_1005E0D30();
          v583 = (uint8_t *)v838;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v838, (os_signpost_type_t)v835, v582, "PersistenceEvent.update.setUIDsForDownloadRequests", "mailbox %{sensitive,mask.mailbox}s, UID count %ld", v834, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v578 + 8))(v580, v579);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v575 + 8);
          v122(v581, v251);
          unint64_t v175 = v577;
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          v688 = *(void (**)(void (**)(uint64_t *__return_ptr), void *))(v839 + 8);
          v689 = &v851;
LABEL_80:
          v691 = (void (**)(uint64_t *__return_ptr))*(v689 - 32);
LABEL_101:
          v688(v691, v840);
LABEL_102:
          unint64_t v175 = v842;
          unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
          uint64_t v251 = v841;
        }
        break;
      case 0x15uLL:
        v584 = tracingSignposter.unsafeMutableAddressor();
        v497 = v839;
        v498 = v840;
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v60, v584, v840);
        v499 = sub_1005E0D70();
        v585 = sub_1005E26F0();
        if (sub_1005E28A0())
        {
          v501 = (uint8_t *)sub_1000C6564();
          v844 = 0;
          v845 = 0;
          *(_WORD *)v501 = 0;
          v846 = (unint64_t)(v501 + 2);
          sub_1001CB3C0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v846, (uint64_t)&v845, (uint64_t)&v844);
          swift_bridgeObjectRelease();
          uint64_t v439 = v842;
          v502 = sub_1005E0D30();
          v503 = v585;
          v504 = "PersistenceEvent.update.credentialsDidChange";
LABEL_44:
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v499, v503, v502, v504, "", v501, 2u);
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v497 + 8))(v60, v498);
LABEL_45:
          v586 = v841;
        }
        else
        {
LABEL_46:

          (*(void (**)(char *, void *))(v497 + 8))(v60, v498);
LABEL_71:
          v586 = v841;
          uint64_t v439 = v842;
        }
        return (*(uint64_t (**)(char *, uint64_t))(v843 + 8))(v439, v586);
      default:
        char v124 = *(unsigned char *)(a2 + 16);
        char v125 = *(unsigned char *)(a2 + 17);
        char v126 = *(unsigned char *)(a2 + 18);
        uint64_t v127 = *(void *)(a2 + 24);
        char v128 = *(unsigned char *)(a2 + 32);
        uint64_t v129 = *(void *)(a2 + 40);
        uint64_t v130 = tracingSignposter.unsafeMutableAddressor();
        (*(void (**)(char *, uint64_t, void *))(v839 + 16))(v827, v130, v840);
        uint64_t v131 = swift_allocObject();
        *(unsigned char *)(v131 + 16) = v124;
        *(unsigned char *)(v131 + 17) = v125;
        *(unsigned char *)(v131 + 18) = v126;
        *(void *)(v131 + 24) = v127;
        *(unsigned char *)(v131 + 32) = v128;
        *(void *)(v131 + 40) = v129;
        uint64_t v132 = swift_allocObject();
        *(unsigned char *)(v132 + 16) = v124;
        *(unsigned char *)(v132 + 17) = v125;
        *(unsigned char *)(v132 + 18) = v126;
        *(void *)(v132 + 24) = v127;
        *(unsigned char *)(v132 + 32) = v128;
        *(void *)(v132 + 40) = v129;
        uint64_t v133 = swift_allocObject();
        *(unsigned char *)(v133 + 16) = v124;
        *(unsigned char *)(v133 + 17) = v125;
        *(unsigned char *)(v133 + 18) = v126;
        *(void *)(v133 + 24) = v127;
        *(unsigned char *)(v133 + 32) = v128;
        *(void *)(v133 + 40) = v129;
        uint64_t v134 = swift_allocObject();
        v832 = (uint8_t *)v134;
        *(unsigned char *)(v134 + 16) = v124;
        *(unsigned char *)(v134 + 17) = v125;
        *(unsigned char *)(v134 + 18) = v126;
        *(void *)(v134 + 24) = v127;
        *(unsigned char *)(v134 + 32) = v128;
        *(void *)(v134 + 40) = v129;
        v835 = (void (**)(uint64_t *__return_ptr))sub_1005E0D70();
        LODWORD(v829) = sub_1005E26F0();
        v838 = swift_allocObject();
        LOBYTE(v838[2].isa) = 0;
        uint64_t v135 = swift_allocObject();
        *(unsigned char *)(v135 + 16) = 1;
        uint64_t v136 = v135;
        uint64_t v137 = swift_allocObject();
        *(void *)(v137 + 16) = sub_1001D7C2C;
        *(void *)(v137 + 24) = v131;
        uint64_t v138 = swift_allocObject();
        *(void *)(v138 + 16) = sub_10018A12C;
        *(void *)(v138 + 24) = v137;
        uint64_t v139 = swift_allocObject();
        *(unsigned char *)(v139 + 16) = 0;
        v837 = (uint8_t *)swift_allocObject();
        v837[16] = 4;
        uint64_t v140 = swift_allocObject();
        *(void *)(v140 + 16) = sub_1001D7C48;
        *(void *)(v140 + 24) = v132;
        uint64_t v141 = swift_allocObject();
        *(void *)(v141 + 16) = sub_1001D7FEC;
        *(void *)(v141 + 24) = v140;
        uint64_t v142 = swift_allocObject();
        *(void *)(v142 + 16) = sub_1001D7D78;
        *(void *)(v142 + 24) = v141;
        uint64_t v143 = swift_allocObject();
        *(void *)(v143 + 16) = sub_1001D7D80;
        *(void *)(v143 + 24) = v142;
        uint64_t v144 = v143;
        v830 = v143;
        os_log_type_t v145 = (uint8_t *)swift_allocObject();
        v145[16] = 0;
        v836 = swift_allocObject();
        *(unsigned char *)(v836 + 16) = 4;
        uint64_t v146 = swift_allocObject();
        *(void *)(v146 + 16) = sub_1001D7C68;
        *(void *)(v146 + 24) = v133;
        uint64_t v147 = swift_allocObject();
        *(void *)(v147 + 16) = sub_1001D7FEC;
        *(void *)(v147 + 24) = v146;
        uint64_t v148 = swift_allocObject();
        *(void *)(v148 + 16) = sub_1001D7D78;
        *(void *)(v148 + 24) = v147;
        uint64_t v149 = swift_allocObject();
        *(void *)(v149 + 16) = sub_1001D7D80;
        *(void *)(v149 + 24) = v148;
        uint64_t v150 = v149;
        v833 = (char *)v149;
        v834 = (uint8_t *)swift_allocObject();
        v834[16] = 0;
        v831 = swift_allocObject();
        *(unsigned char *)(v831 + 16) = 8;
        uint64_t v151 = swift_allocObject();
        int v152 = v832;
        *(void *)(v151 + 16) = DataTransferReport.receivedTransportByteCount.getter;
        *(void *)(v151 + 24) = v152;
        uint64_t v153 = swift_allocObject();
        *(void *)(v153 + 16) = sub_10018A134;
        *(void *)(v153 + 24) = v151;
        sub_10000566C(&qword_10070E4D8);
        uint64_t v154 = swift_allocObject();
        *(_OWORD *)(v154 + 16) = xmmword_1005F67B0;
        *(void *)(v154 + 32) = sub_100189ED8;
        *(void *)(v154 + 40) = v838;
        *(void *)(v154 + 48) = sub_100189ED8;
        uint64_t v155 = v136;
        *(void *)(v154 + 56) = v136;
        *(void *)(v154 + 64) = sub_100189EC8;
        uint64_t v156 = v138;
        *(void *)(v154 + 72) = v138;
        *(void *)(v154 + 80) = sub_100189ED8;
        *(void *)(v154 + 88) = v139;
        *(void *)(v154 + 96) = sub_100189ED8;
        *(void *)(v154 + 104) = v837;
        *(void *)(v154 + 112) = sub_1001D7D84;
        *(void *)(v154 + 120) = v144;
        *(void *)(v154 + 128) = sub_100189ED8;
        *(void *)(v154 + 136) = v145;
        *(void *)(v154 + 144) = sub_100189ED8;
        *(void *)(v154 + 152) = v836;
        *(void *)(v154 + 160) = sub_1001D7D84;
        *(void *)(v154 + 168) = v150;
        *(void *)(v154 + 176) = sub_100189ED8;
        *(void *)(v154 + 184) = v834;
        *(void *)(v154 + 192) = sub_100189ED8;
        uint64_t v157 = v831;
        *(void *)(v154 + 200) = v831;
        *(void *)(v154 + 208) = sub_100189ED0;
        *(void *)(v154 + 216) = v153;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v158 = v830;
        swift_retain();
        v832 = v145;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v159 = v835;
        if (sub_1005E28A0())
        {
          v826 = v156;
          os_log_type_t v160 = v158;
          int v161 = v155;
          v828 = v139;
          uint64_t v162 = v836;
          uint64_t v163 = v837;
          uint64_t v164 = v157;
          (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v811, v842, v841);
          unint64_t v165 = (uint8_t *)sub_1000C6564();
          v844 = 0;
          v845 = 0;
          *(_WORD *)unint64_t v165 = 1024;
          v846 = (unint64_t)(v165 + 2);
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, (char)v838[2].isa);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v161 + 16));
          swift_release();
          sub_1000C66C0((uint64_t *)&v846, (uint64_t)&v845, (uint64_t)&v844, (void (*)(uint64_t *__return_ptr))v826[2].isa);
          v838 = v165;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v828 + 16));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v163[16]);
          int v166 = v843;
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *(void *)(v160 + 16), *(void *)(v160 + 24));
          uint64_t v167 = v841;
          unint64_t v168 = v842;
          uint64_t v169 = v839;
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v832[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v162 + 16));
          swift_release();
          sub_1000C66BC(&v846, &v845, &v844, *((void *)v833 + 2), *((void *)v833 + 3));
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, v834[16]);
          swift_release();
          sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v164 + 16));
          swift_release();
          sub_1000C6780(&v846, &v845, &v844, *(void *)(v153 + 16), *(void *)(v153 + 24));
          uint64_t v170 = v840;
          uint64_t v171 = v827;
          unint64_t v172 = v835;
          swift_release();
          unint64_t v173 = v811;
          uint64_t v174 = sub_1005E0D30();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v172, (os_signpost_type_t)v829, v174, "PersistenceEvent.update.environmentDidChange", "power %hhu, app visible %{BOOL}d, locked %{BOOL}d, thermals %ld", (uint8_t *)v838, 0x1Bu);
          sub_1000C65A8();

          (*(void (**)(char *, void *))(v169 + 8))(v171, v170);
          unint64_t v122 = *(void (**)(char *, uint64_t))(v166 + 8);
          v122(v173, v167);
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, void *))(v839 + 8))(v827, v840);
          unint64_t v168 = v842;
          unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
          uint64_t v167 = v841;
        }
        unint64_t v175 = v168;
        uint64_t v176 = v167;
        return ((uint64_t (*)(void, void))v122)(v175, v176);
    }
    uint64_t v176 = v251;
  }
  else
  {
    uint64_t v109 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v67, v109, v20);
    uint64_t v110 = swift_allocObject();
    *(_DWORD *)(v110 + 16) = a2;
    char v111 = sub_1005E0D70();
    int v112 = sub_1005E26F0();
    uint64_t v113 = swift_allocObject();
    *(unsigned char *)(v113 + 16) = 0;
    uint64_t v114 = swift_allocObject();
    *(unsigned char *)(v114 + 16) = 4;
    uint64_t v115 = swift_allocObject();
    *(void *)(v115 + 16) = sub_1001D7D8C;
    *(void *)(v115 + 24) = v110;
    uint64_t v116 = swift_allocObject();
    *(void *)(v116 + 16) = sub_1001D7D7C;
    *(void *)(v116 + 24) = v115;
    sub_10000566C(&qword_10070E4D8);
    uint64_t v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = xmmword_1005F66F0;
    *(void *)(v117 + 32) = sub_100189ED8;
    *(void *)(v117 + 40) = v113;
    *(void *)(v117 + 48) = sub_100189ED8;
    *(void *)(v117 + 56) = v114;
    *(void *)(v117 + 64) = sub_1001D7D84;
    *(void *)(v117 + 72) = v116;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (sub_1005E28A0())
    {
      LODWORD(v839) = v112;
      v840 = (void *)v20;
      uint64_t v118 = v21;
      uint64_t v119 = v841;
      (*(void (**)(char *, char *, uint64_t))(v843 + 16))(v107, v842, v841);
      unint64_t v120 = (uint8_t *)sub_1000C6564();
      v844 = 0;
      v845 = 0;
      *(_WORD *)unint64_t v120 = 256;
      v846 = (unint64_t)(v120 + 2);
      sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v113 + 16));
      swift_release();
      sub_1000C66AC((unsigned char **)&v846, (uint64_t)&v845, (uint64_t)&v844, *(unsigned char *)(v114 + 16));
      swift_release();
      sub_1000C66BC(&v846, &v845, &v844, *(void *)(v116 + 16), *(void *)(v116 + 24));
      swift_release();
      os_signpost_id_t v121 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v111, (os_signpost_type_t)v839, v121, "PersistenceEvent.actionDidComplete", "ID %u", v120, 8u);
      sub_1000C65A8();

      (*(void (**)(char *, void *))(v118 + 8))(v67, v840);
      unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
      v122(v107, v119);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v21 + 8))(v67, v20);
      unint64_t v122 = *(void (**)(char *, uint64_t))(v843 + 8);
      uint64_t v119 = v841;
    }
    unint64_t v175 = v842;
    uint64_t v176 = v119;
  }
  return ((uint64_t (*)(void, void))v122)(v175, v176);
}

uint64_t sub_1001D470C()
{
  uint64_t v1 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v1);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100086AE0(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 12;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 2;
      break;
    case 2:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 3;
      break;
    case 3:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 4;
      break;
    case 4:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 5;
      break;
    case 5:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 6;
      break;
    case 6:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 20;
      break;
    case 7:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 7;
      break;
    case 8:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 8;
      break;
    case 9:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 9;
      break;
    case 10:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 19;
      break;
    case 11:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 10;
      break;
    case 12:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 18;
      break;
    case 13:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 11;
      break;
    case 14:
      return result;
    case 15:
      uint64_t result = 13;
      break;
    case 16:
      uint64_t result = 14;
      break;
    case 17:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 21;
      break;
    case 18:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 22;
      break;
    case 19:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 15;
      break;
    case 20:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 16;
      break;
    case 21:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 17;
      break;
    default:
      sub_1001D6E50((uint64_t)v3);
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_1001D4958(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10001A574(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1005E1CA0();
      uint64_t v6 = v5;
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_10001A574(v7 > 1, v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v4;
      v9[5] = v6;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  sub_10000566C(&qword_100709F58);
  sub_10001C548();
  uint64_t v10 = sub_1005E1A80();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001D4A90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v72 = a8;
  int v64 = a7;
  uint64_t v63 = a6;
  int v67 = a5;
  uint64_t v66 = a3;
  uint64_t v68 = a2;
  uint64_t v69 = a1;
  uint64_t v11 = sub_1005E0D40();
  uint64_t v71 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_100709E58);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v57 - v17;
  uint64_t v19 = sub_1005E0D80();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v23, v19);
  sub_1000079E4(v72, (uint64_t)v18, &qword_100709E58);
  swift_bridgeObjectRetain();
  sub_100008D24(a9, a10);
  uint64_t v72 = a4;
  swift_bridgeObjectRetain();
  sub_100008D24(a9, a10);
  uint64_t v24 = sub_1005E0D70();
  int v62 = sub_1005E26F0();
  if ((sub_1005E28A0() & 1) == 0)
  {
    sub_1000094D4(a9, a10);
    swift_bridgeObjectRelease_n();
    sub_100007A48((uint64_t)v18, &qword_100709E58);
    sub_1000094D4(a9, a10);

    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  unint64_t v60 = v13;
  uint64_t v61 = v18;
  uint64_t v57 = v22;
  os_log_t v58 = v24;
  unint64_t v70 = a9;
  uint64_t v59 = v20;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
  uint64_t v26 = v66;
  uint64_t v66 = v11;
  v25(v13, v26, v11);
  uint64_t v27 = swift_slowAlloc();
  uint64_t v28 = (void *)swift_slowAlloc();
  uint64_t v29 = swift_slowAlloc();
  uint64_t v75 = v29;
  *(_DWORD *)uint64_t v27 = 141559555;
  uint64_t v73 = 0x786F626C69616DLL;
  sub_1005E2960();
  *(_WORD *)(v27 + 12) = 2085;
  uint64_t v73 = v72;
  int v74 = v67;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1005E1CC0();
  uint64_t v73 = sub_1000C6914(v30, v31, &v75);
  sub_1005E2960();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 22) = 1040;
  uint64_t v32 = (uint64_t)v69;
  uint64_t v33 = v68 - (void)v69;
  if (!v69) {
    uint64_t v33 = 0;
  }
  if (v33 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v33 > 0x7FFFFFFF)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  LODWORD(v73) = v33;
  sub_1005E2960();
  *(_WORD *)(v27 + 28) = 2096;
  if (!v32)
  {
    uint64_t v56 = v70;
    sub_1000094D4(v70, a10);
    sub_1000094D4(v56, a10);
    sub_100007A48((uint64_t)v61, &qword_100709E58);
    sub_1005E2F10();
    __break(1u);
    JUMPOUT(0x1001D526CLL);
  }
  uint64_t v72 = v29;
  uint64_t v73 = v32;
  sub_1005E2960();
  *(_WORD *)(v27 + 38) = 2112;
  NSString v34 = sub_1001D527C(v63 & 0xFFFF010101010101);
  uint64_t v73 = (uint64_t)v34;
  sub_1005E2960();
  uint64_t v69 = v28;
  *uint64_t v28 = v34;
  *(_WORD *)(v27 + 48) = 2048;
  uint64_t v35 = v65;
  sub_1000079E4((uint64_t)v61, v65, &qword_100709E58);
  uint64_t v36 = sub_1005E0970();
  uint64_t v37 = *(void *)(v36 - 8);
  int v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36);
  uint64_t v68 = v19;
  if (v38 == 1)
  {
    sub_100007A48(v35, &qword_100709E58);
    uint64_t v39 = 0;
  }
  else
  {
    sub_1005E08F0();
    uint64_t v39 = v41;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
  }
  uint64_t v42 = v71;
  uint64_t v43 = v66;
  uint64_t v44 = v59;
  uint64_t v45 = v60;
  uint64_t v46 = v70;
  uint64_t v73 = v39;
  sub_1005E2960();
  sub_100007A48((uint64_t)v61, &qword_100709E58);
  *(_WORD *)(v27 + 58) = 2048;
  switch(a10 >> 62)
  {
    case 1uLL:
      unint64_t v52 = HIDWORD(v70);
      sub_1000094D4(v70, a10);
      BOOL v53 = __OFSUB__(v52, v70);
      LODWORD(v47) = v52 - v70;
      uint64_t v46 = v70;
      if (v53) {
        goto LABEL_23;
      }
      uint64_t v47 = (int)v47;
LABEL_18:
      uint64_t v51 = v57;
      break;
    case 2uLL:
      uint64_t v48 = v46;
      uint64_t v49 = *(void *)(v46 + 24);
      uint64_t v50 = *(void *)(v48 + 16);
      sub_1000094D4(v48, a10);
      uint64_t v47 = v49 - v50;
      if (__OFSUB__(v49, v50)) {
        goto LABEL_22;
      }
      uint64_t v51 = v57;
      uint64_t v46 = v70;
      break;
    case 3uLL:
      sub_1000094D4(v46, a10);
      uint64_t v47 = 0;
      goto LABEL_18;
    default:
      sub_1000094D4(v46, a10);
      uint64_t v47 = BYTE6(a10);
      goto LABEL_18;
  }
  uint64_t v73 = v47;
  sub_1005E2960();
  sub_1000094D4(v46, a10);
  os_signpost_id_t v54 = sub_1005E0D30();
  os_log_t v55 = v58;
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v58, (os_signpost_type_t)v62, v54, "PersistenceEvent.update.messageDataForUpload", "mailbox %{sensitive,mask.mailbox}s, id %.*P, flags: %@, date %f, data %ld", (uint8_t *)v27, 0x44u);
  sub_10000566C(&qword_10070D728);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))(v44 + 8))(v51, v68);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v45, v43);
}

NSString sub_1001D527C(unint64_t a1)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
    if ((a1 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v2 = sub_100015F0C(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100015F0C((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t v5 = &v2[2 * v4];
  v5[4] = 0x646165726E75;
  v5[5] = 0xE600000000000000;
  if ((a1 & 0x100) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_100015F0C((void *)(v6 > 1), v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    unint64_t v8 = &v2[2 * v7];
    v8[4] = 0x646574656C6564;
    v8[5] = 0xE700000000000000;
  }
LABEL_12:
  if ((a1 & 0x10000) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
    }
    unint64_t v10 = v2[2];
    unint64_t v9 = v2[3];
    if (v10 >= v9 >> 1) {
      uint64_t v2 = sub_100015F0C((void *)(v9 > 1), v10 + 1, 1, v2);
    }
    v2[2] = v10 + 1;
    uint64_t v11 = &v2[2 * v10];
    v11[4] = 0x6465726577736E61;
    v11[5] = 0xE800000000000000;
    if ((a1 & 0x1000000) == 0)
    {
LABEL_14:
      if ((a1 & 0x100000000) == 0) {
        goto LABEL_15;
      }
      goto LABEL_29;
    }
  }
  else if ((a1 & 0x1000000) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v13 = v2[2];
  unint64_t v12 = v2[3];
  if (v13 >= v12 >> 1) {
    uint64_t v2 = sub_100015F0C((void *)(v12 > 1), v13 + 1, 1, v2);
  }
  v2[2] = v13 + 1;
  uint64_t v14 = &v2[2 * v13];
  v14[4] = 0x7466617264;
  v14[5] = 0xE500000000000000;
  if ((a1 & 0x100000000) == 0)
  {
LABEL_15:
    if ((a1 & 0x10000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_29:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v16 = v2[2];
  unint64_t v15 = v2[3];
  if (v16 >= v15 >> 1) {
    uint64_t v2 = sub_100015F0C((void *)(v15 > 1), v16 + 1, 1, v2);
  }
  v2[2] = v16 + 1;
  uint64_t v17 = &v2[2 * v16];
  v17[4] = 0x6564726177726F66;
  v17[5] = 0xE900000000000064;
  if ((a1 & 0x10000000000) == 0)
  {
LABEL_16:
    if ((a1 & 0xFF000000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_34:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v19 = v2[2];
  unint64_t v18 = v2[3];
  if (v19 >= v18 >> 1) {
    uint64_t v2 = sub_100015F0C((void *)(v18 > 1), v19 + 1, 1, v2);
  }
  v2[2] = v19 + 1;
  uint64_t v20 = &v2[2 * v19];
  v20[4] = 0x7463657269646572;
  v20[5] = 0xEA00000000006465;
  if ((a1 & 0xFF000000000000) == 0)
  {
LABEL_17:
    if (!HIBYTE(a1)) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
LABEL_39:
  uint64_t v21 = sub_1005E1CA0();
  uint64_t v23 = v22;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v25 = v2[2];
  unint64_t v24 = v2[3];
  if (v25 >= v24 >> 1) {
    uint64_t v2 = sub_100015F0C((void *)(v24 > 1), v25 + 1, 1, v2);
  }
  v2[2] = v25 + 1;
  uint64_t v26 = &v2[2 * v25];
  v26[4] = v21;
  v26[5] = v23;
  if (HIBYTE(a1))
  {
LABEL_44:
    uint64_t v27 = sub_1005E1CA0();
    uint64_t v29 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_100015F0C(0, v2[2] + 1, 1, v2);
    }
    unint64_t v31 = v2[2];
    unint64_t v30 = v2[3];
    if (v31 >= v30 >> 1) {
      uint64_t v2 = sub_100015F0C((void *)(v30 > 1), v31 + 1, 1, v2);
    }
    v2[2] = v31 + 1;
    uint64_t v32 = &v2[2 * v31];
    uint64_t v32[4] = v27;
    v32[5] = v29;
  }
LABEL_49:
  sub_10000566C(&qword_100709F58);
  sub_10001C548();
  sub_1005E1A80();
  swift_bridgeObjectRelease();
  NSString v33 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_1001D574C(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a4 >> 62)
  {
    case 1uLL:
      if (a3 >> 32 < (int)a3) {
        __break(1u);
      }
      swift_retain();
      sub_1001D5950((int)a3, a3 >> 32, a1);
      uint64_t result = sub_1000094D4(a3, a4);
      break;
    case 2uLL:
      uint64_t v9 = *(void *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain();
      sub_1001D5950(v9, v10, a1);
      swift_release();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      memset(v11, 0, 14);
      unint64_t v7 = (char *)v11;
      goto LABEL_7;
    default:
      v11[0] = a3;
      LOWORD(v11[1]) = a4;
      BYTE2(v11[1]) = BYTE2(a4);
      BYTE3(v11[1]) = BYTE3(a4);
      BYTE4(v11[1]) = BYTE4(a4);
      BYTE5(v11[1]) = BYTE5(a4);
      unint64_t v7 = (char *)v11 + BYTE6(a4);
LABEL_7:
      uint64_t result = a1((uint64_t)v11, (uint64_t)v7);
      break;
  }
  return result;
}

uint64_t sub_1001D5938(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1001D5948@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1001D5950(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = sub_1005E0550();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_1005E0570();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return a3(v7, v13);
}

uint64_t sub_1001D59F8(uint64_t a1, unsigned int a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for UntaggedResponse(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v176 = (uint64_t)&v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v179 = (uint64_t)&v173 - v9;
  uint64_t v185 = sub_1005E0D80();
  uint64_t v183 = *(void *)(v185 - 8);
  uint64_t v10 = __chkstk_darwin(v185);
  unint64_t v178 = (char *)&v173 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v173 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v173 = (char *)&v173 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v175 = (char *)&v173 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v174 = (char *)&v173 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v180 = (char *)&v173 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v25 = (char *)&v173 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v181 = (char *)&v173 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v30 = (char *)&v173 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  NSString v33 = (char *)&v173 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v173 - v34;
  uint64_t v186 = sub_1005E0D40();
  uint64_t v184 = *(void *)(v186 - 8);
  uint64_t v36 = __chkstk_darwin(v186);
  int v38 = (char *)&v173 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v36);
  unint64_t v177 = (char *)&v173 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v173 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  unint64_t v182 = (char *)&v173 - v45;
  __chkstk_darwin(v44);
  uint64_t v187 = (char *)&v173 - v46;
  OSSignpostID.init(engine:kind:connectionID:)(a1, 0, a2);
  switch(a3 >> 60)
  {
    case 1uLL:
      uint64_t v58 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v59 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v60 = v183;
      uint64_t v61 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v33, v59, v185);
      swift_bridgeObjectRetain();
      int v62 = sub_1005E0D70();
      int v63 = sub_1005E26F0();
      if ((sub_1005E28A0() & 1) == 0)
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v61);
        return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
      }
      uint64_t v64 = v184;
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v184 + 16);
      uint64_t v66 = v186;
      LODWORD(v182) = v63;
      uint64_t v67 = v60;
      v65(v43, v187, v186);
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v68 = 16777472;
      BOOL v69 = CommandConnection.RecentErrors.isEmpty.getter(v58);
      swift_bridgeObjectRelease();
      LOBYTE(v191[0]) = !v69;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      os_signpost_id_t v70 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v62, (os_signpost_type_t)v182, v70, "ConnectionEvent.connectionDidFail", "error: %hhu", v68, 5u);
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v185);
      uint64_t v71 = *(void (**)(char *, uint64_t))(v64 + 8);
      v71(v187, v66);
      return ((uint64_t (*)(char *, uint64_t))v71)(v43, v66);
    case 2uLL:
      long long v73 = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      v191[1] = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v191[2] = v73;
      v192[0] = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      *(_OWORD *)((char *)v192 + 11) = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x4B);
      v191[0] = *(_OWORD *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1001D6E04((uint64_t)v191);
      uint64_t v74 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v75 = v183;
      uint64_t v76 = v180;
      uint64_t v77 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v180, v74, v185);
      sub_1001D6E04((uint64_t)v191);
      uint64_t v78 = sub_1005E0D70();
      int v79 = sub_1005E26F0();
      if ((sub_1005E28A0() & 1) == 0)
      {

        sub_100060FFC((uint64_t)v191);
        sub_100060FFC((uint64_t)v191);
        (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
        return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
      }
      uint64_t v80 = v184;
      uint64_t v81 = v186;
      (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v187, v186);
      uint64_t v82 = swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      LODWORD(v181) = v79;
      uint64_t v190 = v83;
      *(_DWORD *)uint64_t v82 = 141558275;
      uint64_t v188 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v82 + 12) = 2085;
      uint64_t v188 = MessageSectionData.mailbox.getter();
      int v189 = v84;
      uint64_t v85 = sub_1005E1CC0();
      uint64_t v188 = sub_1000C6914(v85, v86, &v190);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100060FFC((uint64_t)v191);
      sub_100060FFC((uint64_t)v191);
      uint64_t v87 = v182;
      os_signpost_id_t v88 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v78, (os_signpost_type_t)v181, v88, "ConnectionEvent.mailboxSelected", "mailbox %{sensitive,mask.mailbox}s", (uint8_t *)v82, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v75 + 8))(v180, v77);
      uint64_t v89 = *(void (**)(char *, uint64_t))(v80 + 8);
      v89(v187, v81);
      return ((uint64_t (*)(char *, uint64_t))v89)(v87, v81);
    case 3uLL:
      uint64_t v90 = swift_projectBox();
      uint64_t v91 = v179;
      sub_100086AE0(v90, v179);
      uint64_t v92 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v93 = v183;
      uint64_t v94 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v30, v92, v185);
      uint64_t v95 = v176;
      sub_100086AE0(v91, v176);
      uint64_t v96 = sub_1005E0D70();
      int v97 = sub_1005E26F0();
      if ((sub_1005E28A0() & 1) == 0)
      {
        sub_1001D6E50(v95);

        (*(void (**)(char *, uint64_t))(v93 + 8))(v30, v94);
        sub_1001D6E50(v91);
        return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
      }
      uint64_t v98 = v184;
      (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v187, v186);
      LODWORD(v181) = v97;
      uint64_t v99 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v99 = 16777472;
      char v100 = sub_1001D470C();
      sub_1001D6E50(v95);
      LOBYTE(v191[0]) = v100;
      sub_1005E2960();
      uint64_t v101 = v182;
      os_signpost_id_t v102 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v96, (os_signpost_type_t)v181, v102, "ConnectionEvent.untagged", "response: %hhu", v99, 5u);
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v93 + 8))(v30, v94);
      sub_1001D6E50(v179);
      uint64_t v103 = *(void (**)(char *, uint64_t))(v98 + 8);
      uint64_t v104 = v186;
      v103(v187, v186);
      return ((uint64_t (*)(char *, uint64_t))v103)(v101, v104);
    case 4uLL:
      uint64_t v106 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v105 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v107 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v108 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      unsigned __int8 v109 = *(unsigned char *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      sub_1000E84F4(v105, v107, v108, v109);
      uint64_t v110 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v111 = v183;
      int v112 = v181;
      uint64_t v113 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v181, v110, v185);
      sub_1000E84F4(v105, v107, v108, v109);
      sub_1000E84F4(v105, v107, v108, v109);
      uint64_t v114 = sub_1005E0D70();
      LODWORD(v182) = sub_1005E26F0();
      if ((sub_1005E28A0() & 1) == 0)
      {
        sub_1000E853C(v105, v107, v108, v109);

        sub_1000E853C(v105, v107, v108, v109);
        sub_1000E853C(v105, v107, v108, v109);
        (*(void (**)(char *, uint64_t))(v111 + 8))(v112, v113);
        return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
      }
      (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v177, v187, v186);
      uint64_t v115 = swift_slowAlloc();
      *(void *)&v191[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v115 = 136446466;
      unint64_t v116 = CommandID.tag.getter(v106);
      uint64_t v117 = Tag.debugDescription.getter(v116 & 0xFFFFFFFF000000FFLL);
      uint64_t v188 = sub_1000C6914(v117, v118, (uint64_t *)v191);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v115 + 12) = 256;
      sub_1000E853C(v105, v107, v108, v109);
      LOBYTE(v188) = v109 + 1;
      sub_1005E2960();
      sub_1000E853C(v105, v107, v108, v109);
      uint64_t v119 = v177;
      os_signpost_id_t v120 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v114, (os_signpost_type_t)v182, v120, "ConnectionEvent.commandDidComplete", "tag: %{public}s response: %hhu", (uint8_t *)v115, 0xFu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1000E853C(v105, v107, v108, v109);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v181, v185);
      os_signpost_id_t v121 = *(void (**)(char *, uint64_t))(v184 + 8);
      uint64_t v122 = v186;
      v121(v187, v186);
      return ((uint64_t (*)(char *, uint64_t))v121)(v119, v122);
    case 5uLL:
      uint64_t v123 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v124 = v183;
      uint64_t v125 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v25, v123, v185);
      char v126 = sub_1005E0D70();
      os_signpost_type_t v127 = sub_1005E26F0();
      if (sub_1005E28A0())
      {
        uint64_t v128 = v184;
        uint64_t v129 = v182;
        uint64_t v130 = v186;
        uint64_t v131 = v187;
        (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v187, v186);
        uint64_t v132 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v132 = 0;
        os_signpost_id_t v133 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v126, v127, v133, "ConnectionEvent.mailboxSelectFailed", "", v132, 2u);
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v124 + 8))(v25, v125);
        uint64_t v134 = *(void (**)(char *, uint64_t))(v128 + 8);
        v134(v131, v130);
        return ((uint64_t (*)(char *, uint64_t))v134)(v129, v130);
      }

      (*(void (**)(char *, uint64_t))(v124 + 8))(v25, v125);
      return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
    case 6uLL:
      uint64_t v135 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v136 = v183;
      uint64_t v137 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v14, v135, v185);
      uint64_t v138 = sub_1005E0D70();
      os_signpost_type_t v139 = sub_1005E26F0();
      if (sub_1005E28A0())
      {
        uint64_t v52 = v184;
        BOOL v53 = v182;
        uint64_t v54 = v186;
        os_log_t v55 = v187;
        (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v187, v186);
        uint64_t v140 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v140 = 0;
        os_signpost_id_t v141 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v138, v139, v141, "ConnectionEvent.pathAttributesDidChange", "", v140, 2u);
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v136 + 8))(v14, v137);
        goto LABEL_16;
      }

      (*(void (**)(char *, uint64_t))(v136 + 8))(v14, v137);
      return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
    case 7uLL:
      char v145 = *(unsigned char *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v146 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v147 = v183;
      uint64_t v148 = v178;
      uint64_t v149 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v178, v146, v185);
      uint64_t v150 = sub_1005E0D70();
      os_signpost_type_t v151 = sub_1005E26F0();
      if (sub_1005E28A0())
      {
        uint64_t v152 = v184;
        uint64_t v153 = v186;
        (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v38, v187, v186);
        uint64_t v154 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v154 = 16777472;
        LOBYTE(v191[0]) = v145;
        sub_1005E2960();
        os_signpost_id_t v155 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v150, v151, v155, "ConnectionEvent.betterPathDidChange", "%hhu", v154, 5u);
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v147 + 8))(v178, v149);
        uint64_t v142 = *(void (**)(char *, uint64_t))(v152 + 8);
        v142(v187, v153);
        uint64_t v143 = v38;
        uint64_t v144 = v153;
        return ((uint64_t (*)(char *, uint64_t))v142)(v143, v144);
      }

      (*(void (**)(char *, uint64_t))(v147 + 8))(v148, v149);
      return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
    case 8uLL:
      if (a3 == 0x8000000000000000)
      {
        uint64_t v168 = tracingSignposter.unsafeMutableAddressor();
        uint64_t v156 = v183;
        uint64_t v159 = v174;
        uint64_t v157 = v185;
        (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v174, v168, v185);
        os_log_type_t v160 = sub_1005E0D70();
        os_signpost_type_t v169 = sub_1005E26F0();
        if (sub_1005E28A0())
        {
          uint64_t v162 = v184;
          uint64_t v129 = v182;
          uint64_t v130 = v186;
          uint64_t v163 = v187;
          (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v187, v186);
          uint64_t v164 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v164 = 0;
          os_signpost_id_t v165 = sub_1005E0D30();
          os_signpost_type_t v166 = v169;
          uint64_t v167 = "ConnectionEvent.mailboxSelected";
          uint64_t v170 = "no mailbox";
          goto LABEL_38;
        }
        goto LABEL_40;
      }
      uint64_t v156 = v183;
      uint64_t v157 = v185;
      if (a3 != 0x8000000000000008)
      {
        uint64_t v171 = tracingSignposter.unsafeMutableAddressor();
        uint64_t v159 = v173;
        (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v173, v171, v157);
        os_log_type_t v160 = sub_1005E0D70();
        os_signpost_type_t v172 = sub_1005E26F0();
        if (sub_1005E28A0())
        {
          uint64_t v162 = v184;
          uint64_t v129 = v182;
          uint64_t v130 = v186;
          uint64_t v163 = v187;
          (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v187, v186);
          uint64_t v164 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v164 = 0;
          os_signpost_id_t v165 = sub_1005E0D30();
          os_signpost_type_t v166 = v172;
          uint64_t v167 = "ConnectionEvent.stateDidChange";
          goto LABEL_37;
        }
LABEL_40:

        (*(void (**)(char *, uint64_t))(v156 + 8))(v159, v157);
        return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
      }
      uint64_t v158 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v159 = v175;
      (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v175, v158, v157);
      os_log_type_t v160 = sub_1005E0D70();
      os_signpost_type_t v161 = sub_1005E26F0();
      if ((sub_1005E28A0() & 1) == 0) {
        goto LABEL_40;
      }
      uint64_t v162 = v184;
      uint64_t v129 = v182;
      uint64_t v130 = v186;
      uint64_t v163 = v187;
      (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v187, v186);
      uint64_t v164 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v164 = 0;
      os_signpost_id_t v165 = sub_1005E0D30();
      os_signpost_type_t v166 = v161;
      uint64_t v167 = "ConnectionEvent.empty";
LABEL_37:
      uint64_t v170 = "";
LABEL_38:
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v160, v166, v165, v167, v170, v164, 2u);
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v156 + 8))(v159, v157);
      uint64_t v134 = *(void (**)(char *, uint64_t))(v162 + 8);
      v134(v163, v130);
      return ((uint64_t (*)(char *, uint64_t))v134)(v129, v130);
    default:
      uint64_t v47 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v48 = v183;
      uint64_t v49 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v35, v47, v185);
      uint64_t v50 = sub_1005E0D70();
      os_signpost_type_t v51 = sub_1005E26F0();
      if (sub_1005E28A0())
      {
        uint64_t v52 = v184;
        BOOL v53 = v182;
        uint64_t v54 = v186;
        os_log_t v55 = v187;
        (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v182, v187, v186);
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        os_signpost_id_t v57 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v50, v51, v57, "ConnectionEvent.connectionDidAuthenticate", "", v56, 2u);
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
LABEL_16:
        uint64_t v142 = *(void (**)(char *, uint64_t))(v52 + 8);
        v142(v55, v54);
        uint64_t v143 = v53;
        uint64_t v144 = v54;
        return ((uint64_t (*)(char *, uint64_t))v142)(v143, v144);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
        return (*(uint64_t (**)(char *, uint64_t))(v184 + 8))(v187, v186);
      }
  }
}

uint64_t sub_1001D6E04(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001D6E50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UntaggedResponse(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001D6EAC()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 28, 7);
}

uint64_t sub_1001D6EE4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D6F1C()
{
  return _swift_deallocObject(v0, 21, 7);
}

uint64_t sub_1001D6F30()
{
  uint64_t result = (*(uint64_t (**)(void))(v0 + 16))();
  if ((result & (unint64_t)&_mh_execute_header) != 0) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_1001D6F60()
{
  return _swift_deallocObject(v0, 21, 7);
}

uint64_t sub_1001D6F70()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D6F80()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D6F90()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D6FA0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001D6FB0(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

uint64_t sub_1001D6FBC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D6FCC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D6FDC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D6FEC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D6FFC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D700C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D701C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1001D704C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C66BC(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1001D7054()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7064()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7074()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7084()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7094()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1001D70C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001D70E8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void sub_1001D7118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1000094D4(a4, a5);
  }
}

uint64_t sub_1001D7164()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D71A0()
{
  return sub_1001D772C(&qword_100709E38);
}

uint64_t sub_1001D71AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D71BC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D71CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D71DC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D71EC()
{
  return _swift_deallocObject(v0, 21, 7);
}

uint64_t sub_1001D71FC()
{
  return _swift_deallocObject(v0, 21, 7);
}

unint64_t sub_1001D720C()
{
  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

uint64_t sub_1001D722C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D723C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D724C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D725C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D726C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D727C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D728C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D729C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D72AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D72BC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D72CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D72DC(void *a1, uint64_t a2)
{
  uint64_t v3 = 256;
  if (!*(unsigned char *)(v2 + 37)) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 | *(unsigned __int8 *)(v2 + 36);
  uint64_t v5 = 0x10000;
  if (!*(unsigned char *)(v2 + 38)) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = 0x1000000;
  if (!*(unsigned char *)(v2 + 39)) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v4 | v5 | v6;
  uint64_t v8 = &_mh_execute_header;
  if (!*(unsigned char *)(v2 + 40)) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = 0x10000000000;
  if (!*(unsigned char *)(v2 + 41)) {
    uint64_t v9 = 0;
  }
  return sub_1001D4A90(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(_DWORD *)(v2 + 32), v7 | (unint64_t)v8 | v9 | ((unint64_t)*(unsigned __int8 *)(v2 + 42) << 48) | ((unint64_t)*(unsigned __int8 *)(v2 + 43) << 56), *(unsigned __int8 *)(v2 + 44), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_1001D738C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t RemoteMailbox.specialUse.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1001D73A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D73B4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D73C4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D73D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D73E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D73F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7404()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7414()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7424()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7434()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7444()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_1001D7454()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t sub_1001D745C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001D7484()
{
  return sub_1001D4958(*(void *)(v0 + 16));
}

uint64_t sub_1001D748C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D749C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D74AC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D74BC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D74CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D74DC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D74EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D74FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D750C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D751C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D752C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D753C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D754C()
{
  if (*(unsigned char *)(v0 + 16)) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_1001D7560()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7570()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7580()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7590()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D75A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D75B0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D75C0()
{
  return sub_1001D772C(&qword_100709E38);
}

uint64_t sub_1001D75CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D75DC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D75EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D75FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D760C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D761C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D762C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D763C()
{
  return sub_1001D772C(&qword_100709E38);
}

uint64_t sub_1001D7648()
{
  return sub_1001D772C(&qword_100709E30);
}

void sub_1001D7654()
{
}

uint64_t sub_1001D76C0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D76D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D76E0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D76F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7700()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7710()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7720()
{
  return sub_1001D772C(&qword_100709E38);
}

uint64_t sub_1001D772C(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_10000566C(a1) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v1 + v4;
  uint64_t v8 = sub_10000566C(&qword_100709E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return _swift_deallocObject(v1, v5, v6);
}

uint64_t sub_1001D7804()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D7814()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7824()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7834()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7844()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7854()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7864()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7874@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001D7880()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  uint64_t v1 = OpaqueMailboxID.description.getter(v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1001D78E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D78F0()
{
  (*(void (**)(void))(v0 + 16))();
  uint64_t v1 = sub_10000566C(&qword_10070A9B8);
  return MessageIdentifierRange.debugDescription.getter(v1);
}

uint64_t sub_1001D7938()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7948()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7958()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7968()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t MailboxOfInterest.name.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001D79A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D79B4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D79C4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D79D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D79E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D79F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7A04()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7A14()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7A24()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7A34()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7A44()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7A58()
{
  return *(void *)(*(void *)(v0 + 16) + 16);
}

uint64_t sub_1001D7A68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D7AA8()
{
  return *(void *)(*(void *)(v0 + 24) + 16);
}

uint64_t sub_1001D7AB4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7AC4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7AD4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7AE4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7AF4()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_1001D7B04()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7B14()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7B24()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_1001D7B34()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1001D7B6C()
{
  return 0x5040301u >> (8 * *(unsigned char *)(v0 + 16));
}

uint64_t sub_1001D7B84()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1) {
    return *(void *)(v1 + 16);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001D7B9C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7BAC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7BBC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7BCC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7BDC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7BEC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7BFC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7C0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7C1C()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001D7C2C()
{
  return *(unsigned __int8 *)(v0 + 16) + 1;
}

uint64_t sub_1001D7C38()
{
  return _swift_deallocObject(v0, 48, 7);
}

BOOL sub_1001D7C48()
{
  return (*(unsigned char *)(v0 + 17) & 1) == 0;
}

uint64_t sub_1001D7C58()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001D7C68()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_1001D7C70()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t DataTransferReport.receivedTransportByteCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1001D7C88()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7C98()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7CA8()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D7CE0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7CF0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7D00()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7D10()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7D20()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7D30()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7D40()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_1001D7D50()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D7D60()
{
  return _swift_deallocObject(v0, 17, 7);
}

BOOL sub_1001D7FF0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  char v8 = *(unsigned char *)(a2 + 32);
  return sub_1001D803C((uint64_t)v5, (uint64_t)v7);
}

BOOL sub_1001D803C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  sub_100008D24(v4, v5);
  sub_100008D24(v6, v7);
  char v8 = sub_100077894(v4, v5, v6, v7);
  sub_1000094D4(v6, v7);
  sub_1000094D4(v4, v5);
  if ((v8 & 1) == 0) {
    return 0;
  }
  return (static DownloadRequest.Kind.__derived_enum_equals(_:_:)(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) != 0
      && *(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32);
}

uint64_t _s21UserInitiatedDownloadVwxx(uint64_t a1)
{
  sub_1000094D4(*(void *)(a1 + 8), *(void *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s21UserInitiatedDownloadVwcp(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_100008D24(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s21UserInitiatedDownloadVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_100008D24(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1000094D4(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t _s21UserInitiatedDownloadVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1000094D4(v4, v5);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t _s21UserInitiatedDownloadVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s21UserInitiatedDownloadVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *_s21UserInitiatedDownloadVMa()
{
  return &_s21UserInitiatedDownloadVN;
}

uint64_t sub_1001D8338(uint64_t a1)
{
  uint64_t v3 = _s19UserInitiatedSearchV5StateOMa(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v8 = (unint64_t *)((char *)&v14 - v7);
  uint64_t v9 = v1 + *(int *)(_s19UserInitiatedSearchVMa(0) + 20);
  sub_1001D8CF0(v9, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1001D8DB8((uint64_t)v8, _s19UserInitiatedSearchV5StateOMa);
  }
  sub_10000952C(*v8);
  swift_bridgeObjectRelease();
  sub_1000079E4(a1, (uint64_t)v6, &qword_100709E30);
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  sub_10001FC6C();
  sub_1005E3680();
  uint64_t v12 = &v6[*(int *)(MessagesVMa + 24)];
  uint64_t v13 = sub_10000566C(&qword_100709E38);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_storeEnumTagMultiPayload();
  return sub_10002B118((uint64_t)v6, v9);
}

uint64_t sub_1001D84E4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(int32x2_t **)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  uint64_t v5 = *(int32x2_t **)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  static SearchKey.__derived_enum_equals(_:_:)(*(void *)a1, *(void *)a2);
  if ((v8 & 1) == 0) {
    return 0;
  }
  return static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)(v2, v3, v4, v5, v6, v7);
}

BOOL sub_1001D857C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  return *a1 == *a2 && sub_1001D897C((uint64_t)a1 + *(int *)(a3 + 20), (uint64_t)a2 + *(int *)(a3 + 20));
}

BOOL sub_1001D85A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100709E38);
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000566C(&qword_10070B2A8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_10070A2D0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v29 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v29 - v17;
  sub_10001FC6C();
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  unint64_t v30 = v13;
  uint64_t v31 = v9;
  uint64_t v29 = v6;
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  if ((sub_1005E35A0() & 1) == 0) {
    return 0;
  }
  sub_1000079E4(a1 + *(int *)(MessagesVMa + 24), (uint64_t)v18, &qword_10070A2D0);
  sub_1000079E4(a2 + *(int *)(MessagesVMa + 24), (uint64_t)v16, &qword_10070A2D0);
  uint64_t v20 = *(int *)(v7 + 48);
  uint64_t v21 = (uint64_t)v31;
  uint64_t v22 = (uint64_t)&v31[v20];
  sub_1000079E4((uint64_t)v18, (uint64_t)v31, &qword_10070A2D0);
  sub_1000079E4((uint64_t)v16, v22, &qword_10070A2D0);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v23(v21, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v16, &qword_10070A2D0);
    sub_100007A48((uint64_t)v18, &qword_10070A2D0);
    if (v23(v22, 1, v4) == 1)
    {
      sub_100007A48(v21, &qword_10070A2D0);
      return 1;
    }
    goto LABEL_8;
  }
  uint64_t v24 = (uint64_t)v30;
  sub_1000079E4(v21, (uint64_t)v30, &qword_10070A2D0);
  if (v23(v22, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v16, &qword_10070A2D0);
    sub_100007A48((uint64_t)v18, &qword_10070A2D0);
    sub_100007A48(v24, &qword_100709E38);
LABEL_8:
    sub_100007A48(v21, &qword_10070B2A8);
    return 0;
  }
  uint64_t v25 = v22;
  uint64_t v26 = (uint64_t)v29;
  sub_10006B1BC(v25, (uint64_t)v29);
  char v27 = sub_1005E35A0();
  sub_100007A48(v26, &qword_100709E38);
  sub_100007A48((uint64_t)v16, &qword_10070A2D0);
  sub_100007A48((uint64_t)v18, &qword_10070A2D0);
  sub_100007A48(v24, &qword_100709E38);
  sub_100007A48(v21, &qword_10070A2D0);
  return (v27 & 1) != 0;
}

BOOL sub_1001D897C(uint64_t a1, uint64_t a2)
{
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  __chkstk_darwin(MessagesVMa - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s19UserInitiatedSearchV5StateOMa(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = sub_10000566C(&qword_10070B2B0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_1001D8CF0(a1, (uint64_t)v16);
  sub_1001D8CF0(a2, v17);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1001D8CF0((uint64_t)v16, (uint64_t)v12);
    unint64_t v20 = *(void *)v12;
    uint64_t v19 = (int32x2_t *)*((void *)v12 + 1);
    uint64_t v21 = *((void *)v12 + 2);
    char v22 = v12[24];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      unint64_t v24 = *(void *)v17;
      uint64_t v23 = *(int32x2_t **)(v17 + 8);
      uint64_t v25 = *(void *)(v17 + 16);
      char v26 = *(unsigned char *)(v17 + 24);
      static SearchKey.__derived_enum_equals(_:_:)(v20, v24);
      if (v27)
      {
        char v28 = static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)(v19, v21, v22, v23, v25, v26);
        sub_10000952C(v24);
        swift_bridgeObjectRelease();
        sub_10000952C(v20);
        swift_bridgeObjectRelease();
        if (v28)
        {
          sub_1001D8DB8((uint64_t)v16, _s19UserInitiatedSearchV5StateOMa);
          return 1;
        }
      }
      else
      {
        sub_10000952C(v24);
        swift_bridgeObjectRelease();
        sub_10000952C(v20);
        swift_bridgeObjectRelease();
      }
      sub_1001D8DB8((uint64_t)v16, _s19UserInitiatedSearchV5StateOMa);
      return 0;
    }
    sub_10000952C(v20);
    swift_bridgeObjectRelease();
LABEL_7:
    sub_100007A48((uint64_t)v16, &qword_10070B2B0);
    return 0;
  }
  sub_1001D8CF0((uint64_t)v16, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1001D8DB8((uint64_t)v10, _s19UserInitiatedSearchV13FetchMessagesVMa);
    goto LABEL_7;
  }
  sub_1001D8D54(v17, (uint64_t)v6);
  BOOL v18 = sub_1001D85A4((uint64_t)v10, (uint64_t)v6);
  sub_1001D8DB8((uint64_t)v6, _s19UserInitiatedSearchV13FetchMessagesVMa);
  sub_1001D8DB8((uint64_t)v10, _s19UserInitiatedSearchV13FetchMessagesVMa);
  sub_1001D8DB8((uint64_t)v16, _s19UserInitiatedSearchV5StateOMa);
  return v18;
}

uint64_t _s19UserInitiatedSearchV13FetchMessagesVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070F680);
}

uint64_t _s19UserInitiatedSearchV5StateOMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070F5F0);
}

uint64_t sub_1001D8CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19UserInitiatedSearchV5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D8D54(uint64_t a1, uint64_t a2)
{
  uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(MessagesVMa - 8) + 32))(a2, a1, MessagesVMa);
  return a2;
}

uint64_t sub_1001D8DB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001D8E18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10000566C(&qword_100709E60);
      uint64_t v7 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
      v7(a1 + *(int *)(MessagesVMa + 20), a2 + *(int *)(MessagesVMa + 20), v6);
      uint64_t v9 = *(int *)(MessagesVMa + 24);
      uint64_t v10 = (void *)(a1 + v9);
      uint64_t v11 = (const void *)(a2 + v9);
      uint64_t v12 = sub_10000566C(&qword_100709E38);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_10000566C(&qword_10070A2D0);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v7((unint64_t)v10, (uint64_t)v11, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      unint64_t v16 = *(void *)a2;
      sub_100008D7C(*(void *)a2);
      uint64_t v17 = *(void *)(a2 + 8);
      uint64_t v18 = *(void *)(a2 + 16);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v18;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1001D904C(unint64_t *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_10000566C(&qword_100709E60);
    uint64_t v7 = *(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8);
    ((void (*)(void *__return_ptr, unint64_t *, uint64_t))v7)((void *)(v2 - 8), a1, v2);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v7((char *)a1 + *(int *)(MessagesVMa + 20), v2);
    uint64_t v4 = (char *)a1 + *(int *)(MessagesVMa + 24);
    uint64_t v5 = sub_10000566C(&qword_100709E38);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
    if (!result)
    {
      return ((uint64_t (*)(char *, uint64_t))v7)(v4, v2);
    }
  }
  else
  {
    sub_10000952C(*a1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *sub_1001D91AC(unint64_t *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10000566C(&qword_100709E60);
    uint64_t v5 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16);
    v5(a1, a2, v4);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v5((char *)a1 + *(int *)(MessagesVMa + 20), (char *)a2 + *(int *)(MessagesVMa + 20), v4);
    uint64_t v7 = *(int *)(MessagesVMa + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10000566C(&qword_100709E38);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10000566C(&qword_10070A2D0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v5(v8, v9, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    unint64_t v13 = *a2;
    sub_100008D7C(*a2);
    unint64_t v14 = a2[1];
    unint64_t v15 = a2[2];
    *a1 = v13;
    a1[1] = v14;
    a1[2] = v15;
    *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1001D9390(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1001D8DB8(a1, _s19UserInitiatedSearchV5StateOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_10000566C(&qword_100709E60);
      uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
      v5(a1 + *(int *)(MessagesVMa + 20), a2 + *(int *)(MessagesVMa + 20), v4);
      uint64_t v7 = *(int *)(MessagesVMa + 24);
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (const void *)(a2 + v7);
      uint64_t v10 = sub_10000566C(&qword_100709E38);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10000566C(&qword_10070A2D0);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        v5((uint64_t)v8, (uint64_t)v9, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      unint64_t v13 = *(void *)a2;
      sub_100008D7C(*(void *)a2);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v14 = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 16) = v14;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1001D95A0(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10000566C(&qword_100709E60);
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v7(&a1[*(int *)(MessagesVMa + 20)], &a2[*(int *)(MessagesVMa + 20)], v6);
    uint64_t v9 = *(int *)(MessagesVMa + 24);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_10000566C(&qword_100709E38);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10000566C(&qword_10070A2D0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v7(v10, v11, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1001D9774(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001D8DB8((uint64_t)a1, _s19UserInitiatedSearchV5StateOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10000566C(&qword_100709E60);
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
      v7(&a1[*(int *)(MessagesVMa + 20)], &a2[*(int *)(MessagesVMa + 20)], v6);
      uint64_t v9 = *(int *)(MessagesVMa + 24);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_10000566C(&qword_100709E38);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_10000566C(&qword_10070A2D0);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v7(v10, v11, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001D996C()
{
  uint64_t result = _s19UserInitiatedSearchV13FetchMessagesVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1001D9A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D9A14);
}

uint64_t sub_1001D9A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000566C(&qword_100709E30);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10000566C(&qword_100709E38);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_10000566C(&qword_10070A2D0);
  unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);
  return v15(v17, a2, v16);
}

uint64_t sub_1001D9B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D9B80);
}

uint64_t sub_1001D9B80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10000566C(&qword_100709E30);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_10000566C(&qword_100709E38);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_10000566C(&qword_10070A2D0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);
  return v17(v19, a2, a2, v18);
}

uint64_t *sub_1001D9CE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    _s19UserInitiatedSearchV5StateOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      v9(v6, v7, v8);
      uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
      v9(&v6[*(int *)(MessagesVMa + 20)], &v7[*(int *)(MessagesVMa + 20)], v8);
      uint64_t v11 = *(int *)(MessagesVMa + 24);
      uint64_t v12 = &v6[v11];
      uint64_t v13 = &v7[v11];
      uint64_t v14 = sub_10000566C(&qword_100709E38);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_10000566C(&qword_10070A2D0);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      unint64_t v18 = *(void *)v7;
      sub_100008D7C(*(void *)v7);
      uint64_t v19 = *((void *)v7 + 1);
      uint64_t v20 = *((void *)v7 + 2);
      *(void *)uint64_t v6 = v18;
      *((void *)v6 + 1) = v19;
      *((void *)v6 + 2) = v20;
      v6[24] = v7[24];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_1001D9F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (unint64_t *)(a1 + *(int *)(a2 + 20));
  _s19UserInitiatedSearchV5StateOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = sub_10000566C(&qword_100709E60);
    uint64_t v8 = *(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);
    ((void (*)(void *__return_ptr, unint64_t *, uint64_t))v8)((void *)(v3 - 8), v2, v3);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v8((char *)v2 + *(int *)(MessagesVMa + 20), v3);
    uint64_t v5 = (char *)v2 + *(int *)(MessagesVMa + 24);
    uint64_t v6 = sub_10000566C(&qword_100709E38);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
    if (!result)
    {
      return ((uint64_t (*)(char *, uint64_t))v8)(v5, v3);
    }
  }
  else
  {
    sub_10000952C(*v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_DWORD *sub_1001DA0A4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  _s19UserInitiatedSearchV5StateOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10000566C(&qword_100709E60);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(v5, v6, v7);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v8(&v5[*(int *)(MessagesVMa + 20)], &v6[*(int *)(MessagesVMa + 20)], v7);
    uint64_t v10 = *(int *)(MessagesVMa + 24);
    uint64_t v11 = &v5[v10];
    uint64_t v12 = &v6[v10];
    uint64_t v13 = sub_10000566C(&qword_100709E38);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10000566C(&qword_10070A2D0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    unint64_t v16 = *(void *)v6;
    sub_100008D7C(*(void *)v6);
    uint64_t v17 = *((void *)v6 + 1);
    uint64_t v18 = *((void *)v6 + 2);
    *(void *)uint64_t v5 = v16;
    *((void *)v5 + 1) = v17;
    *((void *)v5 + 2) = v18;
    v5[24] = v6[24];
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_DWORD *sub_1001DA2A0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    sub_1001D8DB8((uint64_t)a1 + v4, _s19UserInitiatedSearchV5StateOMa);
    _s19UserInitiatedSearchV5StateOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10000566C(&qword_100709E60);
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(v5, v6, v7);
      uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
      v8(&v5[*(int *)(MessagesVMa + 20)], &v6[*(int *)(MessagesVMa + 20)], v7);
      uint64_t v10 = *(int *)(MessagesVMa + 24);
      uint64_t v11 = &v5[v10];
      uint64_t v12 = &v6[v10];
      uint64_t v13 = sub_10000566C(&qword_100709E38);
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_10000566C(&qword_10070A2D0);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      unint64_t v16 = *(void *)v6;
      sub_100008D7C(*(void *)v6);
      *(void *)uint64_t v5 = v16;
      *((void *)v5 + 1) = *((void *)v6 + 1);
      uint64_t v17 = *((void *)v6 + 2);
      v5[24] = v6[24];
      *((void *)v5 + 2) = v17;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_1001DA4C8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = _s19UserInitiatedSearchV5StateOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10000566C(&qword_100709E60);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(v5, v6, v8);
    uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
    v9(&v5[*(int *)(MessagesVMa + 20)], &v6[*(int *)(MessagesVMa + 20)], v8);
    uint64_t v11 = *(int *)(MessagesVMa + 24);
    uint64_t v12 = &v5[v11];
    uint64_t v13 = &v6[v11];
    uint64_t v14 = sub_10000566C(&qword_100709E38);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10000566C(&qword_10070A2D0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v9(v12, v13, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

_DWORD *sub_1001DA6B4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    sub_1001D8DB8((uint64_t)a1 + v4, _s19UserInitiatedSearchV5StateOMa);
    uint64_t v7 = _s19UserInitiatedSearchV5StateOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_10000566C(&qword_100709E60);
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
      v9(v5, v6, v8);
      uint64_t MessagesVMa = _s19UserInitiatedSearchV13FetchMessagesVMa(0);
      v9(&v5[*(int *)(MessagesVMa + 20)], &v6[*(int *)(MessagesVMa + 20)], v8);
      uint64_t v11 = *(int *)(MessagesVMa + 24);
      uint64_t v12 = &v5[v11];
      uint64_t v13 = &v6[v11];
      uint64_t v14 = sub_10000566C(&qword_100709E38);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_10000566C(&qword_10070A2D0);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001DA8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001DA8D8);
}

uint64_t sub_1001DA8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = _s19UserInitiatedSearchV5StateOMa(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1001DA948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001DA95C);
}

uint64_t sub_1001DA95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = _s19UserInitiatedSearchV5StateOMa(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t _s19UserInitiatedSearchVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070F718);
}

uint64_t sub_1001DA9F0()
{
  uint64_t result = _s19UserInitiatedSearchV5StateOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s19UserInitiatedSearchV5QueryVwxx(unint64_t *a1)
{
  sub_10000952C(*a1);
  return swift_bridgeObjectRelease();
}

uint64_t _s19UserInitiatedSearchV5QueryVwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_100008D7C(*(void *)a2);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19UserInitiatedSearchV5QueryVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_100008D7C(*(void *)a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_10000952C(v5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  return a1;
}

uint64_t _s19UserInitiatedSearchV5QueryVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_10000952C(v4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s19UserInitiatedSearchV5QueryVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19UserInitiatedSearchV5QueryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s19UserInitiatedSearchV5QueryVMa()
{
  return &_s19UserInitiatedSearchV5QueryVN;
}

NSObject *sub_1001DAC80(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v120 = a3;
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v107 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v107 - v19;
  if ((_BYTE)a5)
  {
    int v119 = a5;
    uint64_t v118 = v17;
    if (a5 == 1)
    {
      uint64_t v21 = v18;
      uint64_t v22 = v17;
      uint64_t v23 = a1 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
      uint64_t v24 = *(void *)(v23 + 8);
      unint64_t v25 = *(void *)(v23 + 16);
      uint64_t v114 = *(void *)v23;
      uint64_t v115 = v24;
      char v26 = *(NSObject **)(v23 + 24);
      uint64_t v116 = *(void *)(v23 + 32);
      int v27 = *(_DWORD *)(v23 + 40);
      os_log_t v113 = v26;
      if (((unint64_t)v26 & 0x8000000000000000) != 0)
      {
        uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
        uint64_t v67 = v9;
        v66(v21, a1, v9);
        sub_1000E8260(v114, v115, v25, (uint64_t)v113);
        sub_100086918((unint64_t)a2);
        uint64_t v38 = a4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_100086918((unint64_t)a2);
        swift_bridgeObjectRetain();
        sub_100086918((unint64_t)a2);
        swift_bridgeObjectRetain();
        uint64_t v68 = sub_1005E0EB0();
        os_log_type_t v69 = sub_1005E25A0();
        int v70 = v69;
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v71 = swift_slowAlloc();
          os_log_t v111 = v68;
          LODWORD(v112) = v70;
          uint64_t v72 = v71;
          uint64_t v110 = swift_slowAlloc();
          uint64_t v123 = v110;
          *(_DWORD *)uint64_t v72 = 68159491;
          LODWORD(v121) = 2;
          uint64_t v117 = v67;
          sub_1005E2960();
          *(_WORD *)(v72 + 8) = 256;
          LOBYTE(v121) = v114;
          sub_1005E2960();
          *(_WORD *)(v72 + 11) = 2082;
          uint64_t v114 = v21;
          swift_bridgeObjectRetain();
          uint64_t v121 = sub_1000C6914(v115, v25, &v123);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v72 + 21) = 1040;
          LODWORD(v121) = 2;
          sub_1005E2960();
          *(_WORD *)(v72 + 27) = 512;
          LOWORD(v121) = (_WORD)v113;
          sub_1005E2960();
          *(_WORD *)(v72 + 31) = 2160;
          uint64_t v121 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v72 + 41) = 2085;
          uint64_t v121 = v116;
          int v122 = v27;
          swift_bridgeObjectRetain();
          uint64_t v73 = sub_1005E1CC0();
          uint64_t v121 = sub_1000C6914(v73, v74, &v123);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v72 + 51) = 2082;
          sub_100086918((unint64_t)a2);
          swift_bridgeObjectRetain();
          uint64_t v39 = v120;
          ResponseText.debugDescription.getter((unint64_t)a2);
          uint64_t v76 = v75;
          unint64_t v78 = v77;
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          uint64_t v121 = sub_1000C6914(v76, v78, &v123);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          os_log_t v79 = v111;
          _os_log_impl((void *)&_mh_execute_header, v111, (os_log_type_t)v112, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received 'NO %{public}s'", (uint8_t *)v72, 0x3Du);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v114, v117);
          goto LABEL_13;
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_1000869F0((unint64_t)a2);
        swift_bridgeObjectRelease();
        sub_1000869F0((unint64_t)a2);

        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v21, v67);
      }
      else
      {
        char v28 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
        uint64_t v117 = v9;
        v28(v20, a1, v9);
        uint64_t v29 = v114;
        uint64_t v30 = v115;
        os_log_t v31 = v113;
        sub_1000E8260(v114, v115, v25, (uint64_t)v113);
        sub_1000E8260(v29, v30, v25, (uint64_t)v31);
        sub_100086918((unint64_t)a2);
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_100086918((unint64_t)a2);
        swift_bridgeObjectRetain();
        sub_100086918((unint64_t)a2);
        uint64_t v112 = a4;
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_1005E0EB0();
        os_log_type_t v33 = sub_1005E25A0();
        int v34 = v33;
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v35 = swift_slowAlloc();
          os_log_t v111 = (os_log_t)swift_slowAlloc();
          uint64_t v121 = (uint64_t)v111;
          *(_DWORD *)uint64_t v35 = 68158466;
          LODWORD(v123) = 2;
          sub_1005E2960();
          *(_WORD *)(v35 + 8) = 256;
          LODWORD(v110) = v34;
          uint64_t v36 = v114;
          LOBYTE(v123) = v114;
          sub_1005E2960();
          *(_WORD *)(v35 + 11) = 2082;
          os_log_t v109 = v32;
          swift_bridgeObjectRetain();
          uint64_t v37 = v115;
          uint64_t v123 = sub_1000C6914(v115, v25, &v121);
          uint64_t v108 = &v124;
          sub_1005E2960();
          sub_1000E82B0(v36, v37, v25, (uint64_t)v31);
          sub_1000E82B0(v36, v37, v25, (uint64_t)v31);
          swift_bridgeObjectRelease();
          *(_WORD *)(v35 + 21) = 2082;
          sub_100086918((unint64_t)a2);
          uint64_t v38 = v112;
          swift_bridgeObjectRetain();
          uint64_t v39 = v120;
          ResponseText.debugDescription.getter((unint64_t)a2);
          uint64_t v41 = v40;
          unint64_t v43 = v42;
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          uint64_t v123 = sub_1000C6914(v41, v43, &v121);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          os_log_t v44 = v109;
          _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v110, "[%.*hhx-%{public}s] Received 'NO %{public}s'", (uint8_t *)v35, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v118 + 8))(v20, v117);
LABEL_13:
          char v96 = v119;
LABEL_19:
          sub_1001DBD68();
          swift_allocError();
          *(void *)uint64_t v105 = a2;
          *(void *)(v105 + 8) = v39;
          *(void *)(v105 + 16) = v38;
          *(unsigned char *)(v105 + 24) = v96;
          sub_100086918((unint64_t)a2);
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          return a2;
        }
        uint64_t v97 = v114;
        uint64_t v98 = v25;
        uint64_t v99 = v115;
        sub_1000E82B0(v114, v115, v98, (uint64_t)v31);
        sub_1000E82B0(v97, v99, v98, (uint64_t)v31);
        sub_1000869F0((unint64_t)a2);
        uint64_t v38 = v112;
        swift_bridgeObjectRelease();
        sub_1000869F0((unint64_t)a2);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v118 + 8))(v20, v117);
      }
    }
    else
    {
      uint64_t v45 = v17;
      uint64_t v46 = a1 + *(int *)(type metadata accessor for Task.Logger(0) + 20);
      uint64_t v47 = *(void *)v46;
      os_log_t v113 = *(os_log_t *)(v46 + 8);
      uint64_t v48 = *(void *)(v46 + 16);
      uint64_t v49 = *(void *)(v46 + 24);
      uint64_t v115 = *(void *)(v46 + 32);
      uint64_t v116 = v48;
      LODWORD(v114) = *(_DWORD *)(v46 + 40);
      if (v49 < 0)
      {
        uint64_t v80 = a1;
        uint64_t v81 = v9;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v12, v80, v9);
        sub_1000E8260(v47, (uint64_t)v113, v116, v49);
        sub_100086918((unint64_t)a2);
        uint64_t v38 = a4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_100086918((unint64_t)a2);
        swift_bridgeObjectRetain();
        sub_100086918((unint64_t)a2);
        swift_bridgeObjectRetain();
        uint64_t v82 = sub_1005E0EB0();
        os_log_type_t v83 = sub_1005E25A0();
        int v84 = v83;
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v85 = swift_slowAlloc();
          LODWORD(v111) = v84;
          uint64_t v86 = v85;
          uint64_t v112 = swift_slowAlloc();
          uint64_t v123 = v112;
          *(_DWORD *)uint64_t v86 = 68159491;
          LODWORD(v121) = 2;
          uint64_t v117 = v81;
          sub_1005E2960();
          *(_WORD *)(v86 + 8) = 256;
          LOBYTE(v121) = v47;
          sub_1005E2960();
          *(_WORD *)(v86 + 11) = 2082;
          unint64_t v87 = v116;
          swift_bridgeObjectRetain();
          uint64_t v121 = sub_1000C6914((uint64_t)v113, v87, &v123);
          os_log_t v113 = v82;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v86 + 21) = 1040;
          LODWORD(v121) = 2;
          sub_1005E2960();
          *(_WORD *)(v86 + 27) = 512;
          LOWORD(v121) = v49;
          sub_1005E2960();
          *(_WORD *)(v86 + 31) = 2160;
          uint64_t v121 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v86 + 41) = 2085;
          uint64_t v121 = v115;
          int v122 = v114;
          swift_bridgeObjectRetain();
          uint64_t v88 = sub_1005E1CC0();
          uint64_t v121 = sub_1000C6914(v88, v89, &v123);
          sub_1005E2960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v86 + 51) = 2082;
          sub_100086918((unint64_t)a2);
          swift_bridgeObjectRetain();
          uint64_t v90 = v120;
          ResponseText.debugDescription.getter((unint64_t)a2);
          uint64_t v92 = v91;
          unint64_t v94 = v93;
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          uint64_t v121 = sub_1000C6914(v92, v94, &v123);
          sub_1005E2960();
          uint64_t v39 = v90;
          swift_bridgeObjectRelease();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          os_log_t v95 = v113;
          _os_log_impl((void *)&_mh_execute_header, v113, (os_log_type_t)v111, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received 'BAD %{public}s'", (uint8_t *)v86, 0x3Du);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v118 + 8))(v12, v117);
          goto LABEL_13;
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_1000869F0((unint64_t)a2);
        swift_bridgeObjectRelease();
        sub_1000869F0((unint64_t)a2);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v118 + 8))(v12, v81);
      }
      else
      {
        uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
        uint64_t v117 = v9;
        v50(v15, a1, v9);
        os_log_t v51 = v113;
        uint64_t v52 = v116;
        sub_1000E8260(v47, (uint64_t)v113, v116, v49);
        uint64_t v112 = v49;
        sub_1000E8260(v47, (uint64_t)v51, v52, v49);
        sub_100086918((unint64_t)a2);
        uint64_t v38 = a4;
        swift_bridgeObjectRetain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_100086918((unint64_t)a2);
        swift_bridgeObjectRetain();
        os_log_t v111 = a2;
        sub_100086918((unint64_t)a2);
        swift_bridgeObjectRetain();
        BOOL v53 = sub_1005E0EB0();
        os_log_type_t v54 = sub_1005E25A0();
        int v55 = v54;
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v56 = swift_slowAlloc();
          uint64_t v110 = swift_slowAlloc();
          uint64_t v121 = v110;
          *(_DWORD *)uint64_t v56 = 68158466;
          LODWORD(v123) = 2;
          os_log_t v109 = v53;
          sub_1005E2960();
          *(_WORD *)(v56 + 8) = 256;
          LOBYTE(v123) = v47;
          sub_1005E2960();
          *(_WORD *)(v56 + 11) = 2082;
          uint64_t v57 = v116;
          swift_bridgeObjectRetain();
          uint64_t v58 = v47;
          os_log_t v59 = v113;
          uint64_t v123 = sub_1000C6914((uint64_t)v113, v57, &v121);
          uint64_t v107 = &v124;
          sub_1005E2960();
          LODWORD(v108) = v55;
          uint64_t v60 = v112;
          sub_1000E82B0(v58, (uint64_t)v59, v57, v112);
          sub_1000E82B0(v58, (uint64_t)v59, v57, v60);
          swift_bridgeObjectRelease();
          *(_WORD *)(v56 + 21) = 2082;
          a2 = v111;
          sub_100086918((unint64_t)v111);
          swift_bridgeObjectRetain();
          uint64_t v39 = v120;
          ResponseText.debugDescription.getter((unint64_t)a2);
          uint64_t v62 = v61;
          unint64_t v64 = v63;
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          uint64_t v123 = sub_1000C6914(v62, v64, &v121);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          sub_1000869F0((unint64_t)a2);
          swift_bridgeObjectRelease();
          os_log_t v65 = v109;
          _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v108, "[%.*hhx-%{public}s] Received 'BAD %{public}s'", (uint8_t *)v56, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v118 + 8))(v15, v117);
          goto LABEL_13;
        }
        uint64_t v100 = v47;
        uint64_t v101 = v47;
        uint64_t v102 = v112;
        os_log_t v103 = v113;
        uint64_t v104 = v116;
        sub_1000E82B0(v100, (uint64_t)v113, v116, v112);
        sub_1000E82B0(v101, (uint64_t)v103, v104, v102);
        a2 = v111;
        sub_1000869F0((unint64_t)v111);
        swift_bridgeObjectRelease();
        sub_1000869F0((unint64_t)a2);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v118 + 8))(v15, v117);
      }
    }
    char v96 = v119;
    uint64_t v39 = v120;
    goto LABEL_19;
  }
  return a2;
}

unint64_t sub_1001DBD68()
{
  unint64_t result = qword_10070F750;
  if (!qword_10070F750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070F750);
  }
  return result;
}

unint64_t sub_1001DBDBC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v72 = a3;
  uint64_t v9 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v65 - v13;
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v16 = __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  uint64_t v21 = (char *)v65 - v17;
  int v73 = a5;
  if ((_BYTE)a5)
  {
    if (a5 == 1)
    {
      uint64_t v22 = v18;
      uint64_t v23 = v19;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)v65 - v17, a1, v18);
      sub_1001DC724(a1, (uint64_t)v14);
      sub_100086918(a2);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100086918(a2);
      swift_bridgeObjectRetain();
      sub_100086918(a2);
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1005E0EB0();
      os_log_type_t v25 = sub_1005E25A0();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v71 = v22;
        uint64_t v28 = v27;
        uint64_t v69 = swift_slowAlloc();
        uint64_t v76 = v69;
        *(_DWORD *)uint64_t v28 = 68159491;
        LODWORD(v74) = 2;
        uint64_t v66 = (char *)&v74 + 4;
        sub_1005E2960();
        *(_WORD *)(v28 + 8) = 256;
        uint64_t v29 = *(int *)(v9 + 20);
        LODWORD(v68) = v26;
        uint64_t v30 = &v14[v29];
        LOBYTE(v74) = v14[v29];
        sub_1005E2960();
        *(_WORD *)(v28 + 11) = 2082;
        uint64_t v70 = v23;
        uint64_t v31 = *((void *)v30 + 1);
        unint64_t v32 = *((void *)v30 + 2);
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_1000C6914(v31, v32, &v76);
        os_log_t v67 = v24;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 21) = 1040;
        LODWORD(v74) = 2;
        sub_1005E2960();
        *(_WORD *)(v28 + 27) = 512;
        LOWORD(v74) = *((_WORD *)v30 + 12);
        sub_1005E2960();
        *(_WORD *)(v28 + 31) = 2160;
        uint64_t v74 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v28 + 41) = 2085;
        int v33 = *((_DWORD *)v30 + 10);
        uint64_t v74 = *((void *)v30 + 4);
        int v75 = v33;
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_1005E1CC0();
        uint64_t v74 = sub_1000C6914(v34, v35, &v76);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001DC788((uint64_t)v14);
        *(_WORD *)(v28 + 51) = 2082;
        sub_100086918(a2);
        swift_bridgeObjectRetain();
        uint64_t v36 = v72;
        ResponseText.debugDescription.getter(a2);
        uint64_t v38 = v37;
        unint64_t v40 = v39;
        sub_1000869F0(a2);
        swift_bridgeObjectRelease();
        uint64_t v74 = sub_1000C6914(v38, v40, &v76);
        uint64_t v41 = v36;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000869F0(a2);
        swift_bridgeObjectRelease();
        sub_1000869F0(a2);
        swift_bridgeObjectRelease();
        os_log_t v42 = v67;
        _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v68, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received 'NO %{public}s'", (uint8_t *)v28, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v70 + 8))(v21, v71);
LABEL_11:
        sub_1001DC7E4();
        swift_allocError();
        *(void *)uint64_t v63 = a2;
        *(void *)(v63 + 8) = v41;
        *(void *)(v63 + 16) = a4;
        *(unsigned char *)(v63 + 24) = v73;
        sub_100086918(a2);
        swift_bridgeObjectRetain();
        swift_willThrow();
        sub_1000869F0(a2);
        swift_bridgeObjectRelease();
        return a2;
      }
      sub_1001DC788((uint64_t)v14);
      sub_1000869F0(a2);
      swift_bridgeObjectRelease();
      sub_1000869F0(a2);

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    }
    else
    {
      uint64_t v43 = v20;
      uint64_t v44 = v18;
      uint64_t v45 = v19;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v20, a1, v18);
      sub_1001DC724(a1, (uint64_t)v12);
      sub_100086918(a2);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100086918(a2);
      swift_bridgeObjectRetain();
      sub_100086918(a2);
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1005E0EB0();
      os_log_type_t v47 = sub_1005E25A0();
      int v48 = v47;
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v71 = v44;
        uint64_t v50 = v49;
        uint64_t v69 = swift_slowAlloc();
        uint64_t v76 = v69;
        *(_DWORD *)uint64_t v50 = 68159491;
        LODWORD(v74) = 2;
        v65[1] = (char *)&v74 + 4;
        sub_1005E2960();
        *(_WORD *)(v50 + 8) = 256;
        uint64_t v51 = *(int *)(v9 + 20);
        os_log_t v67 = v46;
        uint64_t v52 = &v12[v51];
        LOBYTE(v74) = v12[v51];
        sub_1005E2960();
        *(_WORD *)(v50 + 11) = 2082;
        uint64_t v70 = v45;
        uint64_t v53 = *((void *)v52 + 1);
        unint64_t v54 = *((void *)v52 + 2);
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_1000C6914(v53, v54, &v76);
        uint64_t v68 = v43;
        LODWORD(v66) = v48;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 21) = 1040;
        LODWORD(v74) = 2;
        sub_1005E2960();
        *(_WORD *)(v50 + 27) = 512;
        LOWORD(v74) = *((_WORD *)v52 + 12);
        sub_1005E2960();
        *(_WORD *)(v50 + 31) = 2160;
        uint64_t v74 = 0x786F626C69616DLL;
        sub_1005E2960();
        *(_WORD *)(v50 + 41) = 2085;
        int v55 = *((_DWORD *)v52 + 10);
        uint64_t v74 = *((void *)v52 + 4);
        int v75 = v55;
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_1005E1CC0();
        uint64_t v74 = sub_1000C6914(v56, v57, &v76);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1001DC788((uint64_t)v12);
        *(_WORD *)(v50 + 51) = 2082;
        sub_100086918(a2);
        swift_bridgeObjectRetain();
        uint64_t v41 = v72;
        ResponseText.debugDescription.getter(a2);
        uint64_t v59 = v58;
        unint64_t v61 = v60;
        sub_1000869F0(a2);
        swift_bridgeObjectRelease();
        uint64_t v74 = sub_1000C6914(v59, v61, &v76);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1000869F0(a2);
        swift_bridgeObjectRelease();
        sub_1000869F0(a2);
        swift_bridgeObjectRelease();
        os_log_t v62 = v67;
        _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v66, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received 'BAD %{public}s'", (uint8_t *)v50, 0x3Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v71);
        goto LABEL_11;
      }
      sub_1001DC788((uint64_t)v12);
      sub_1000869F0(a2);
      swift_bridgeObjectRelease();
      sub_1000869F0(a2);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
    }
    uint64_t v41 = v72;
    goto LABEL_11;
  }
  return a2;
}

uint64_t sub_1001DC724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MailboxTaskLogger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DC788(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MailboxTaskLogger(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001DC7E4()
{
  unint64_t result = qword_10070F758[0];
  if (!qword_10070F758[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10070F758);
  }
  return result;
}

unint64_t _s5ErrorVwxx(uint64_t a1)
{
  return sub_1000E853C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

ValueMetadata *_s5ErrorVMa()
{
  return &_s5ErrorVN;
}

uint64_t _s5ErrorVwcp_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1000E84F4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s5ErrorVwca_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1000E84F4(*(void *)a2, v4, v5, v6);
  unint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1000E853C(v7, v8, v9, v10);
  return a1;
}

uint64_t _s5ErrorVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  unint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1000E853C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandCompletionResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandCompletionResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *_s5ErrorVMa_0()
{
  return &_s5ErrorVN_0;
}

BOOL sub_1001DCA34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static TextPartEnumerationResult.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1001DCA48()
{
  return TextPartEnumerationResult.hashValue.getter(*v0);
}

void sub_1001DCA58(uint64_t a1)
{
  TextPartEnumerationResult.hash(into:)(a1, *v1);
}

Swift::Int sub_1001DCA68()
{
  sub_1005E33F0();
  TextPartEnumerationResult.hash(into:)((uint64_t)v2, *v0);
  return sub_1005E3470();
}

uint64_t sub_1001DCAB0(uint64_t a1)
{
  uint64_t v2 = sub_1005E2130();
  uint64_t v3 = sub_1001DE234(v2, a1);
  swift_bridgeObjectRelease();
  type metadata accessor for DependencyGraph.State();
  swift_getTupleTypeMetadata2();
  sub_1005E2130();
  sub_1005E1980();
  return v3;
}

uint64_t sub_1001DCB6C()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001DDA8C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DependencyGraph.State();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1005E1990();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001DCC70()
{
  if ((sub_1001DDBC0() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DependencyGraph.State();
  swift_getWitnessTable();
  return sub_1005E19A0();
}

Swift::Int sub_1001DCD34()
{
  return sub_1005E3470();
}

Swift::Int sub_1001DCDB4()
{
  return sub_1001DCD34();
}

uint64_t sub_1001DCDC8()
{
  return sub_1001DCB6C();
}

Swift::Int sub_1001DCDDC()
{
  return sub_1005E3470();
}

uint64_t sub_1001DCE28()
{
  return sub_1001DCC70() & 1;
}

uint64_t sub_1001DCE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = sub_1001DCED0(a1, *(void *)(a2 + 16));
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v6;
  a3[2] = v8;
  a3[3] = v10;
  return result;
}

uint64_t sub_1001DCED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v17 = v5;
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001DCAB0(v7);
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  if (!sub_1005E21C0()) {
    return v8;
  }
  for (uint64_t i = 0; ; ++i)
  {
    BOOL v13 = sub_1005E2160();
    sub_1005E20F0();
    if (v13)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, a1+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * i, a2);
      uint64_t v14 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_10;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_1005E2CE0();
    if (v17 != 8) {
      break;
    }
    uint64_t v18 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 16))(v6, &v18, a2);
    swift_unknownObjectRelease();
    uint64_t v14 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_10:
      __break(1u);
      return v19;
    }
LABEL_5:
    type metadata accessor for DependencyGraph();
    uint64_t v15 = type metadata accessor for DirectedAcyclicGraph();
    sub_1001DD2F4((uint64_t)v6, v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
    if (v14 == sub_1005E21C0()) {
      return v19;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DependencyGraph()
{
  return sub_1000DAF2C();
}

uint64_t type metadata accessor for DependencyGraph.State()
{
  return sub_1000DAF2C();
}

unsigned char *sub_1001DD130(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001DD1FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1001DD224()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001DD240()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001DD260()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001DD2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DirectedAcyclicGraph.Node();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_1001DD428((uint64_t)v6);
  swift_getWitnessTable();
  sub_1005E22E0();
  sub_1005E22C0();
  return swift_release();
}

uint64_t sub_1001DD428(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 96), a1);
  return v2;
}

uint64_t sub_1001DD4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = &v18[-v10];
  uint64_t v12 = v9 + *(void *)(*(void *)v9 + 96);
  swift_beginAccess();
  BOOL v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  v13(v11, v12, v4);
  uint64_t v14 = a2 + *(void *)(*(void *)a2 + 96);
  swift_beginAccess();
  v13(v8, v14, v4);
  char v15 = sub_1005E1BC0();
  uint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v11, v4);
  return v15 & 1;
}

uint64_t sub_1001DD674(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (uint64_t)v1 + *(void *)(v2 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_1005E19C0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1001DD7BC()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DirectedAcyclicGraph.Node()
{
  return sub_1000DAF2C();
}

Swift::Int sub_1001DD880()
{
  sub_1005E33F0();
  sub_1001DD674((uint64_t)v1);
  return sub_1005E3470();
}

Swift::Int sub_1001DD8C0()
{
  return sub_1001DD880();
}

uint64_t sub_1001DD8E4(uint64_t a1)
{
  return sub_1001DD674(a1);
}

Swift::Int sub_1001DD908()
{
  sub_1005E33F0();
  sub_1001DD674((uint64_t)v1);
  return sub_1005E3470();
}

uint64_t sub_1001DD948(uint64_t *a1, uint64_t *a2)
{
  return sub_1001DD4BC(*a1, *a2);
}

void *sub_1001DD954()
{
  uint64_t v0 = type metadata accessor for DirectedAcyclicGraph.Node();
  uint64_t v1 = sub_1005E2130();
  if (sub_1005E21D0())
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v3 = (void *)sub_1001DDE78(v1, v0, WitnessTable);
  }
  else
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  swift_getWitnessTable();
  sub_1005E22E0();
  swift_getTupleTypeMetadata2();
  sub_1005E2130();
  sub_1005E1980();
  sub_1005E2130();
  sub_1005E1980();
  return v3;
}

uint64_t sub_1001DDA8C()
{
  type metadata accessor for DirectedAcyclicGraph.Node();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1005E22A0();
  swift_bridgeObjectRelease();
  sub_1005E22E0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1005E1990();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1005E1990();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001DDBC0()
{
  type metadata accessor for DirectedAcyclicGraph.Node();
  swift_getWitnessTable();
  if ((sub_1005E2290() & 1) == 0) {
    return 0;
  }
  sub_1005E22E0();
  swift_getWitnessTable();
  if ((sub_1005E19A0() & 1) == 0) {
    return 0;
  }
  return sub_1005E19A0();
}

Swift::Int sub_1001DDCF0()
{
  return sub_1005E3470();
}

Swift::Int sub_1001DDD68()
{
  return sub_1001DDCF0();
}

uint64_t sub_1001DDD7C()
{
  return sub_1001DDA8C();
}

Swift::Int sub_1001DDD90()
{
  return sub_1005E3470();
}

uint64_t sub_1001DDDDC()
{
  return sub_1001DDBC0();
}

uint64_t sub_1001DDE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = sub_1001DE234(a1, *(void *)(a2 + 16));
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v6;
  a3[2] = v8;
  return result;
}

uint64_t sub_1001DDE5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001DDE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v38 - v11;
  uint64_t v39 = v12;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v38 - v13;
  if (sub_1005E2180())
  {
    sub_1005E2C40();
    char v15 = (unsigned char *)sub_1005E2C30();
  }
  else
  {
    char v15 = &_swiftEmptySetSingleton;
  }
  Swift::Int v43 = sub_1005E21D0();
  if (!v43) {
    return (uint64_t)v15;
  }
  uint64_t v16 = 0;
  int v48 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v49 = v15 + 56;
  uint64_t v45 = v6 + 32;
  os_log_type_t v47 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  os_log_t v42 = v14;
  while (1)
  {
    BOOL v17 = sub_1005E2160();
    sub_1005E20F0();
    if (v17)
    {
      uint64_t v18 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v18(v14, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16), a2);
      BOOL v19 = __OFADD__(v16, 1);
      uint64_t v20 = v16 + 1;
      if (v19) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1005E2CE0();
      if (v39 != 8) {
        goto LABEL_23;
      }
      uint64_t v51 = result;
      uint64_t v18 = *v48;
      (*v48)(v14, &v51, a2);
      swift_unknownObjectRelease();
      BOOL v19 = __OFADD__(v16, 1);
      uint64_t v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return (uint64_t)v15;
      }
    }
    uint64_t v46 = v20;
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v44(v50, v14, a2);
    uint64_t v21 = sub_1005E19B0();
    uint64_t v22 = v15;
    uint64_t v23 = -1 << v15[32];
    unint64_t v24 = v21 & ~v23;
    unint64_t v25 = v24 >> 6;
    uint64_t v26 = *(void *)&v49[8 * (v24 >> 6)];
    uint64_t v27 = 1 << v24;
    uint64_t v28 = *(void *)(v6 + 72);
    if (((1 << v24) & v26) != 0)
    {
      uint64_t v29 = ~v23;
      do
      {
        v18(v9, (uint64_t *)(v22[6] + v28 * v24), a2);
        uint64_t v30 = a3;
        char v31 = sub_1005E1BC0();
        unint64_t v32 = *v47;
        (*v47)(v9, a2);
        if (v31)
        {
          v32(v50, a2);
          a3 = v30;
          uint64_t v6 = v40;
          uint64_t v5 = v41;
          char v15 = v22;
          goto LABEL_7;
        }
        unint64_t v24 = (v24 + 1) & v29;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = *(void *)&v49[8 * (v24 >> 6)];
        uint64_t v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      uint64_t v6 = v40;
      uint64_t v5 = v41;
    }
    int v33 = v50;
    *(void *)&v49[8 * v25] = v27 | v26;
    unint64_t v34 = v22[6] + v28 * v24;
    char v15 = v22;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v44)(v34, v33, a2);
    uint64_t v36 = v22[2];
    BOOL v19 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v19) {
      break;
    }
    void v22[2] = v37;
LABEL_7:
    uint64_t v14 = v42;
    uint64_t v16 = v46;
    if (v46 == v43) {
      return (uint64_t)v15;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1001DE234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001DD954();
  uint64_t v18 = v7;
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  if (!sub_1005E21C0()) {
    return (uint64_t)v7;
  }
  uint64_t v16 = v5;
  for (uint64_t i = 0; ; ++i)
  {
    BOOL v11 = sub_1005E2160();
    sub_1005E20F0();
    if (v11)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, a1+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * i, a2);
      uint64_t v12 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_10;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_1005E2CE0();
    if (v16 != 8) {
      break;
    }
    uint64_t v17 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 16))(v6, &v17, a2);
    swift_unknownObjectRelease();
    uint64_t v12 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_10:
      __break(1u);
      return (uint64_t)v18;
    }
LABEL_5:
    uint64_t v13 = type metadata accessor for DirectedAcyclicGraph();
    sub_1001DD2F4((uint64_t)v6, v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
    if (v12 == sub_1005E21C0()) {
      return (uint64_t)v18;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DirectedAcyclicGraph()
{
  return sub_1000DAF2C();
}

uint64_t sub_1001DE468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1001DE470()
{
  return swift_getWitnessTable();
}

unint64_t sub_1001DE48C@<X0>(__int16 a1@<W0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  if ((a1 & 0x100) != 0)
  {
    *a4 = a2;
    type metadata accessor for ClientCommand(0);
  }
  else
  {
    if ((a1 & 1) != 0 || (a3 & 0x100000000) != 0)
    {
      sub_10000566C(&qword_10070CA10);
      type metadata accessor for SearchReturnOption();
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1005F6670;
    }
    else
    {
      sub_100064094();
      static MessageIdentifier.... infix(_:_:)();
      sub_10000566C(&qword_10070CA10);
      uint64_t v6 = *(void *)(type metadata accessor for SearchReturnOption() - 8);
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1005F6670;
      unint64_t v9 = v8 + v7;
      *(void *)unint64_t v9 = v11;
      *(unsigned char *)(v9 + 8) = 0;
    }
    swift_storeEnumTagMultiPayload();
    *a4 = a2;
    a4[1] = v8;
    type metadata accessor for ClientCommand(0);
  }
  swift_storeEnumTagMultiPayload();
  return sub_100008D7C(a2);
}

uint64_t *sub_1001DE688@<X0>(__int16 a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1001DE6C8(a1, &qword_100709E38, (void (*)(void))ExtendedSearchResponse.matchedUIDs.getter, a2);
}

uint64_t *sub_1001DE6A8@<X0>(__int16 a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1001DE6C8(a1, &qword_10070AB30, (void (*)(void))ExtendedSearchResponse.matchedSequenceNumbers.getter, a2);
}

uint64_t *sub_1001DE6C8@<X0>(__int16 a1@<W0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = v4;
  uint64_t v10 = sub_10000566C(a2);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_10070C9F8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &v17[*(int *)(v15 + 56)];
  *uint64_t v17 = HIBYTE(a1) & 1;
  sub_100086AE0(v7, (uint64_t)v18);
  type metadata accessor for UntaggedResponse(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((a1 & 0x100) == 0)
  {
    if (EnumCaseMultiPayload == 12)
    {
      long long v20 = v18[1];
      v27[0] = *v18;
      v27[1] = v20;
      void v27[2] = v18[2];
      a3();
      return sub_1000FCD64((uint64_t *)v27);
    }
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload != 11)
  {
LABEL_10:
    sub_1001D6E50((uint64_t)v18);
    return (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a4, 1, 1, v10);
  }
  uint64_t v22 = *(void *)v18;
  sub_10001FC6C();
  sub_1005E3680();
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v23; ++i)
    {
      int v25 = *(_DWORD *)(v22 + 4 * i + 32);
      v26[3] = v25;
      MessageIdentifierSet.insert(_:)();
    }
    swift_bridgeObjectRelease();
  }
  sub_10001FDF0((uint64_t)v13, a4, a2);
  swift_bridgeObjectRelease();
  return (uint64_t *)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a4, 0, 1, v10);
}

Swift::Int sub_1001DE900(void **a1)
{
  uint64_t v2 = *(void *)(sub_10000566C(&qword_10070BAC0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1000A4D0C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1001E1644(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1001DE9AC(void (*a1)(void, void, void), unsigned int a2, NSObject *a3)
{
  os_log_t v213 = a3;
  unint64_t v214 = (unint64_t)a1;
  os_log_t v210 = (os_log_t)sub_1005E17E0();
  Class isa = v210[-1].isa;
  __chkstk_darwin(v210);
  uint64_t v207 = (char *)&v183 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = type metadata accessor for MailboxTaskLogger(0);
  uint64_t v5 = __chkstk_darwin(v205);
  uint64_t v204 = (uint64_t)&v183 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v200 = (uint64_t)&v183 - v7;
  uint64_t v8 = sub_1005E0ED0();
  unint64_t v211 = *(void *)(v8 - 8);
  uint64_t v212 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v208 = (char *)&v183 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v201 = (char *)&v183 - v11;
  uint64_t v12 = sub_10000566C(&qword_10070D6F0);
  __chkstk_darwin(v12 - 8);
  unint64_t v198 = (char *)&v183 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_10000566C(&qword_10070A168);
  uint64_t v203 = *(void *)(v215 - 8);
  uint64_t v14 = __chkstk_darwin(v215);
  uint64_t v16 = (char *)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v183 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v183 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  int v25 = (char *)&v183 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v183 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  char v31 = (char *)&v183 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  unint64_t v34 = ((char *)&v183 - v33);
  __chkstk_darwin(v32);
  uint64_t v36 = (_DWORD *)((char *)&v183 - v35);
  uint64_t v37 = sub_1005E0AD0();
  uint64_t v38 = __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v183 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v42 = __chkstk_darwin(v41);
  uint64_t v43 = __chkstk_darwin(v42);
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v45 = __chkstk_darwin(v44);
  HIDWORD(v52) = -1431655765 * a2;
  LODWORD(v52) = -1431655765 * a2;
  if ((v52 >> 17) > 0x2AAA)
  {
    type metadata accessor for SegmentResequencer.Error(0);
    sub_1001E1594(&qword_10070F960, (void (*)(uint64_t))type metadata accessor for SegmentResequencer.Error);
    swift_allocError();
    *uint64_t v53 = a2;
LABEL_17:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v194 = (char *)&v183 - v48;
  unint64_t v192 = v47;
  uint64_t v187 = v46;
  uint64_t v188 = v34;
  uint64_t v216 = v31;
  uint64_t v186 = v28;
  uint64_t v199 = v25;
  uint64_t v185 = v22;
  int v189 = v40;
  unint64_t v197 = v19;
  uint64_t v184 = v16;
  uint64_t v190 = v51;
  uint64_t v193 = v50;
  uint64_t v195 = v49;
  uint64_t v191 = v45;
  unsigned int v196 = a2;
  unint64_t v54 = v214;
  if (_s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0() > 393216)
  {
    unint64_t v55 = v211;
    uint64_t v56 = v212;
    unint64_t v57 = v208;
    os_log_t v58 = v213;
    (*(void (**)(char *, os_log_t, uint64_t))(v211 + 16))(v208, v213, v212);
    uint64_t v59 = v204;
    sub_1001DC724((uint64_t)v58, v204);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    Class v60 = isa;
    unint64_t v61 = v207;
    os_log_t v62 = v210;
    (*((void (**)(char *, unint64_t, os_log_t))isa + 2))(v207, v54, v210);
    uint64_t v63 = sub_1005E0EB0();
    os_log_type_t v64 = sub_1005E25A0();
    LODWORD(v216) = v64;
    BOOL v65 = os_log_type_enabled(v63, v64);
    uint64_t v66 = v205;
    if (v65)
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v215 = swift_slowAlloc();
      os_log_t v221 = (os_log_t)v215;
      *(_DWORD *)uint64_t v67 = 68159747;
      LODWORD(v217) = 2;
      os_log_t v213 = v63;
      sub_1005E2960();
      *(_WORD *)(v67 + 8) = 256;
      uint64_t v68 = v59 + *(int *)(v66 + 20);
      LOBYTE(v217) = *(unsigned char *)v68;
      sub_1005E2960();
      *(_WORD *)(v67 + 11) = 2082;
      uint64_t v69 = *(void *)(v68 + 8);
      unint64_t v70 = *(void *)(v68 + 16);
      swift_bridgeObjectRetain();
      uint64_t v217 = sub_1000C6914(v69, v70, (uint64_t *)&v221);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 21) = 1040;
      LODWORD(v217) = 2;
      sub_1005E2960();
      *(_WORD *)(v67 + 27) = 512;
      LOWORD(v217) = *(_WORD *)(v68 + 24);
      sub_1005E2960();
      *(_WORD *)(v67 + 31) = 2160;
      uint64_t v217 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v67 + 41) = 2085;
      int v71 = *(_DWORD *)(v68 + 40);
      uint64_t v217 = *(void *)(v68 + 32);
      LODWORD(v218) = v71;
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_1005E1CC0();
      uint64_t v217 = sub_1000C6914(v72, v73, (uint64_t *)&v221);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1001E3C48(v59, type metadata accessor for MailboxTaskLogger);
      *(_WORD *)(v67 + 51) = 2048;
      Class v74 = v60;
      int v75 = v207;
      uint64_t v76 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*((void (**)(char *, os_log_t))v74 + 1))(v75, v210);
      uint64_t v217 = v76;
      sub_1005E2960();
      *(_WORD *)(v67 + 61) = 1024;
      LODWORD(v217) = 393216;
      sub_1005E2960();
      os_log_t v77 = v213;
      _os_log_impl((void *)&_mh_execute_header, v213, (os_log_type_t)v216, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Data length %ld > %u (segment length).", (uint8_t *)v67, 0x43u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v211 + 8))(v208, v212);
    }
    else
    {
      (*((void (**)(char *, os_log_t))v60 + 1))(v61, v62);
      sub_1001E3C48(v59, type metadata accessor for MailboxTaskLogger);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v56);
    }
    type metadata accessor for SegmentResequencer.Error(0);
    sub_1001E1594(&qword_10070F960, (void (*)(uint64_t))type metadata accessor for SegmentResequencer.Error);
    swift_allocError();
    *uint64_t v90 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
    goto LABEL_17;
  }
  unint64_t v78 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  os_log_t v79 = v213;
  if ((v78 & 0x8000000000000000) != 0) {
    goto LABEL_86;
  }
  int v80 = v78;
  os_log_t v81 = v209;
  unint64_t v82 = v192;
  if (HIDWORD(v78)) {
    goto LABEL_86;
  }
  uint64_t result = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  unsigned int v84 = v196;
  if (result >= 393216) {
    goto LABEL_36;
  }
  unsigned int v85 = v81[1].isa;
  if (!BYTE4(v81[1].isa))
  {
    if (!v80) {
      goto LABEL_36;
    }
    uint64_t v91 = type metadata accessor for SegmentResequencer.Error(0);
    sub_1001E1594(&qword_10070F960, (void (*)(uint64_t))type metadata accessor for SegmentResequencer.Error);
    uint64_t v93 = swift_allocError();
    os_log_t v79 = v92;
    if (v85 <= v84)
    {
      LODWORD(v92->isa) = v85;
      HIDWORD(v92->isa) = v84;
      goto LABEL_17;
    }
    os_log_t v81 = (os_log_t)v81->isa;
    swift_bridgeObjectRetain();
    sub_1005E0AC0();
    Class v94 = v81[2].isa;
    if (v94)
    {
      uint64_t v216 = (_DWORD *)v91;
      uint64_t v202 = v93;
      uint64_t v95 = (uint64_t)v81
          + ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80));
      uint64_t v96 = *(void *)(v203 + 72);
      swift_bridgeObjectRetain();
      unint64_t v54 = (unint64_t)v194;
      while (1)
      {
        sub_1000079E4(v95, (uint64_t)v36, &qword_10070A168);
        if (v36[1] < *v36) {
          break;
        }
        sub_1005E0A80();
        sub_100007A48((uint64_t)v36, &qword_10070A168);
        v95 += v96;
        Class v94 = (Class)((char *)v94 - 1);
        if (!v94)
        {
          swift_bridgeObjectRelease();
          unsigned int v84 = v196;
          goto LABEL_26;
        }
      }
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
LABEL_26:
    uint64_t v97 = *(int *)(sub_10000566C(&qword_10070F968) + 48);
    (*(void (**)(os_log_t, char *, uint64_t))(v195 + 32))(v79, v194, v191);
    swift_bridgeObjectRelease();
    if (!__CFADD__(v84, v80))
    {
      uint64_t v98 = (unsigned int *)((char *)v79 + v97);
      *uint64_t v98 = v84;
      v98[1] = v84 + v80;
      goto LABEL_17;
    }
    goto LABEL_85;
  }
  if (BYTE4(v81[1].isa) == 1)
  {
    if (v80)
    {
      unsigned int v86 = v196 + v80;
      if (!__CFADD__(v196, v80))
      {
        if (v85 < v86)
        {
          type metadata accessor for SegmentResequencer.Error(0);
          sub_1001E1594(&qword_10070F960, (void (*)(uint64_t))type metadata accessor for SegmentResequencer.Error);
          swift_allocError();
          uint64_t v88 = v87;
          uint64_t v89 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
          *(_DWORD *)uint64_t v88 = v85;
          *(_DWORD *)(v88 + 4) = v84;
          *(void *)(v88 + 8) = v89;
          swift_storeEnumTagMultiPayload();
          return swift_willThrow();
        }
        goto LABEL_30;
      }
      __break(1u);
      goto LABEL_84;
    }
    if (v85 <= v196) {
      goto LABEL_36;
    }
    BOOL v99 = 1;
LABEL_34:
    unsigned int v86 = v196;
    goto LABEL_35;
  }
  if (!v80)
  {
    BOOL v99 = v196 != 0;
    goto LABEL_34;
  }
  unsigned int v86 = v196 + v80;
  if (__CFADD__(v196, v80))
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    uint64_t result = sub_1005E2F10();
    __break(1u);
    return result;
  }
LABEL_30:
  BOOL v99 = 0;
LABEL_35:
  LODWORD(v81[1].isa) = v86;
  BYTE4(v81[1].isa) = v99;
LABEL_36:
  uint64_t v100 = v84 + v80;
  if (!__CFADD__(v84, v80))
  {
    if (!v80) {
      goto LABEL_50;
    }
    uint64_t v101 = v81->isa;
    swift_bridgeObjectRetain();
    sub_1005E0AC0();
    Class v102 = v101[2].isa;
    if (!v102)
    {
LABEL_43:
      uint64_t v104 = (unint64_t *)v81;
      uint64_t v105 = v195;
      unsigned int v106 = v84;
      uint64_t v107 = v191;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v195 + 32))(v193, v82, v191);
      swift_bridgeObjectRelease();
      uint64_t v108 = (_DWORD *)v100;
      unsigned int v109 = v106;
      if (sub_1005E0A90())
      {
        uint64_t v110 = v187;
        sub_1005E0A50();
        uint64_t v111 = v190;
        sub_1005E0A60();
        uint64_t v215 = *(void *)(v105 + 8);
        ((void (*)(uint64_t, uint64_t))v215)(v110, v107);
        unint64_t v112 = v211;
        uint64_t v113 = v212;
        uint64_t v114 = v201;
        (*(void (**)(char *, os_log_t, uint64_t))(v211 + 16))(v201, v79, v212);
        uint64_t v216 = v108;
        uint64_t v115 = v200;
        sub_1001DC724((uint64_t)v79, v200);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
        uint64_t v117 = v189;
        uint64_t v195 = v105 + 16;
        unint64_t v214 = (unint64_t)v116;
        v116(v189, v111, v107);
        uint64_t v118 = sub_1005E0EB0();
        os_log_type_t v119 = sub_1005E25A0();
        int v120 = v119;
        if (os_log_type_enabled(v118, v119))
        {
          uint64_t v121 = swift_slowAlloc();
          os_log_t v213 = (os_log_t)swift_slowAlloc();
          os_log_t v221 = v213;
          *(_DWORD *)uint64_t v121 = 68159747;
          LODWORD(v217) = 2;
          os_log_t v210 = v118;
          sub_1005E2960();
          *(_WORD *)(v121 + 8) = 256;
          uint64_t v122 = v115 + *(int *)(v205 + 20);
          LOBYTE(v217) = *(unsigned char *)v122;
          sub_1005E2960();
          *(_WORD *)(v121 + 11) = 2082;
          LODWORD(v209) = v120;
          uint64_t v123 = *(void *)(v122 + 8);
          unint64_t v124 = *(void *)(v122 + 16);
          swift_bridgeObjectRetain();
          uint64_t v217 = sub_1000C6914(v123, v124, (uint64_t *)&v221);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v121 + 21) = 1040;
          LODWORD(v217) = 2;
          sub_1005E2960();
          *(_WORD *)(v121 + 27) = 512;
          LOWORD(v217) = *(_WORD *)(v122 + 24);
          sub_1005E2960();
          *(_WORD *)(v121 + 31) = 2160;
          uint64_t v217 = 0x786F626C69616DLL;
          sub_1005E2960();
          *(_WORD *)(v121 + 41) = 2085;
          int v125 = *(_DWORD *)(v122 + 40);
          uint64_t v217 = *(void *)(v122 + 32);
          LODWORD(v218) = v125;
          swift_bridgeObjectRetain();
          uint64_t v126 = sub_1005E1CC0();
          uint64_t v217 = sub_1000C6914(v126, v127, (uint64_t *)&v221);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1001E3C48(v200, type metadata accessor for MailboxTaskLogger);
          *(_WORD *)(v121 + 51) = 2080;
          unsigned int v128 = v196;
          int v219 = (int)v216;
          unsigned int v220 = v196;
          uint64_t v217 = 0;
          unint64_t v218 = 0xE000000000000000;
          sub_1005E2E90();
          v222._countAndFlagsBits = 3943982;
          v222._object = (void *)0xE300000000000000;
          sub_1005E1E30(v222);
          uint64_t v107 = v191;
          sub_1005E2E90();
          uint64_t v217 = sub_1000C6914(v217, v218, (uint64_t *)&v221);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v121 + 61) = 2080;
          sub_1001E1594(&qword_10070F970, (void (*)(uint64_t))&type metadata accessor for IndexSet);
          uint64_t v129 = v189;
          uint64_t v130 = sub_1005E3230();
          uint64_t v217 = sub_1000C6914(v130, v131, (uint64_t *)&v221);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          uint64_t v132 = (void (*)(uint64_t, uint64_t))v215;
          ((void (*)(char *, uint64_t))v215)(v129, v107);
          os_log_t v133 = v210;
          _os_log_impl((void *)&_mh_execute_header, v210, (os_log_type_t)v209, "[%.*hhx-%{public}s] [{%.*hx}-%{sensitive,mask.mailbox}s] Received bytes in range %s -- some of which have previously been received: %s", (uint8_t *)v121, 0x47u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v112 + 8))(v201, v212);
        }
        else
        {
          sub_1001E3C48(v115, type metadata accessor for MailboxTaskLogger);
          uint64_t v132 = (void (*)(uint64_t, uint64_t))v215;
          ((void (*)(char *, uint64_t))v215)(v117, v107);

          (*(void (**)(char *, uint64_t))(v112 + 8))(v114, v113);
          unsigned int v128 = v196;
        }
        type metadata accessor for SegmentResequencer.Error(0);
        sub_1001E1594(&qword_10070F960, (void (*)(uint64_t))type metadata accessor for SegmentResequencer.Error);
        swift_allocError();
        uint64_t v163 = v162;
        uint64_t v164 = (unsigned int *)(v162 + *(int *)(sub_10000566C(&qword_10070F968) + 48));
        uint64_t v165 = v193;
        ((void (*)(uint64_t, uint64_t, uint64_t))v214)(v163, v193, v107);
        unsigned int v166 = v216;
        *uint64_t v164 = v128;
        v164[1] = v166;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        v132(v190, v107);
        return ((uint64_t (*)(uint64_t, uint64_t))v132)(v165, v107);
      }
      Class v134 = isa;
      uint64_t v135 = (uint64_t)v198;
      os_log_t v136 = v210;
      (*((void (**)(char *, unint64_t, os_log_t))isa + 2))(v198, v214, v210);
      (*((void (**)(uint64_t, void, uint64_t, os_log_t))v134 + 7))(v135, 0, 1, v136);
      os_log_t v79 = v188;
      uint64_t v137 = (uint64_t)v188 + *(int *)(v215 + 48);
      LODWORD(v188->isa) = v109;
      HIDWORD(v79->isa) = v108;
      sub_10001FDF0(v135, v137, &qword_10070D6F0);
      os_log_t v81 = (os_log_t)v104;
      unint64_t v54 = *v104;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_47;
      }
      goto LABEL_82;
    }
    os_log_t v81 = ((char *)v101
                     + ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80)));
    uint64_t v103 = *(void *)(v203 + 72);
    os_log_t v79 = v101;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000079E4((uint64_t)v81, (uint64_t)v36, &qword_10070A168);
      if (v36[1] < *v36) {
        break;
      }
      unint64_t v54 = v82;
      sub_1005E0A80();
      sub_100007A48((uint64_t)v36, &qword_10070A168);
      os_log_t v81 = (os_log_t)((char *)v81 + v103);
      Class v102 = (Class)((char *)v102 - 1);
      if (!v102)
      {
        swift_bridgeObjectRelease();
        unsigned int v84 = v196;
        os_log_t v81 = v209;
        os_log_t v79 = v213;
        goto LABEL_43;
      }
    }
    __break(1u);
    goto LABEL_80;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  unint64_t v54 = sub_100017CAC(0, *(void *)(v54 + 16) + 1, 1, v54);
LABEL_47:
  uint64_t v138 = v203;
  unint64_t v140 = *(void *)(v54 + 16);
  unint64_t v139 = *(void *)(v54 + 24);
  if (v140 >= v139 >> 1) {
    unint64_t v54 = sub_100017CAC(v139 > 1, v140 + 1, 1, v54);
  }
  *(void *)(v54 + 16) = v140 + 1;
  sub_10001FDF0((uint64_t)v79, v54+ ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80))+ *(void *)(v138 + 72) * v140, &qword_10070A168);
  v81->Class isa = (Class)v54;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v195 + 8))(v193, v191);
LABEL_50:
  uint64_t v141 = v215;
  if (BYTE4(v81[1].isa) != 1) {
    return result;
  }
  int v142 = (int)v81[1].isa;
  os_log_t v213 = (os_log_t)v81->isa;
  Class v143 = v213[2].isa;
  if (!v143)
  {
    if (v142) {
      return result;
    }
LABEL_67:
    LODWORD(v81[1].isa) = v142;
    BYTE4(v81[1].isa) = 0;
    return result;
  }
  LODWORD(v212) = v142;
  unint64_t v211 = (*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80);
  uint64_t v144 = (char *)v213 + v211;
  unint64_t v214 = *(void *)(v203 + 72);
  swift_bridgeObjectRetain();
  unsigned int v145 = 0;
  uint64_t v146 = (uint64_t)v144;
  uint64_t v147 = v186;
  uint64_t v148 = v216;
  do
  {
    sub_1000079E4(v146, (uint64_t)v148, &qword_10070A168);
    uint64_t v149 = *(int *)(v141 + 48);
    uint64_t v150 = (uint64_t)v147 + v149;
    uint64_t v151 = (uint64_t)v148 + v149;
    LODWORD(v149) = *v148;
    unsigned int v152 = v216[1];
    *uint64_t v147 = v149;
    v147[1] = v152;
    sub_1000079E4(v151, v150, &qword_10070D6F0);
    if (v152 > v145) {
      unsigned int v145 = v152;
    }
    uint64_t v153 = v150;
    uint64_t v141 = v215;
    uint64_t v148 = v216;
    sub_100007A48(v153, &qword_10070D6F0);
    sub_100007A48((uint64_t)v148, &qword_10070A168);
    v146 += v214;
    Class v143 = (Class)((char *)v143 - 1);
  }
  while (v143);
  uint64_t result = swift_bridgeObjectRelease();
  int v142 = v212;
  os_log_t v81 = v209;
  if (v145 == v212) {
    goto LABEL_67;
  }
  Class v154 = v213[2].isa;
  if (v154)
  {
    swift_bridgeObjectRetain();
    unsigned int v155 = 0;
    uint64_t v156 = v185;
    uint64_t v157 = v199;
    do
    {
      sub_1000079E4((uint64_t)v144, (uint64_t)v157, &qword_10070A168);
      uint64_t v158 = *(int *)(v141 + 48);
      uint64_t v159 = (uint64_t)v156 + v158;
      uint64_t v160 = (uint64_t)v157 + v158;
      LODWORD(v158) = *v157;
      unsigned int v161 = v199[1];
      *uint64_t v156 = v158;
      v156[1] = v161;
      sub_1000079E4(v160, v159, &qword_10070D6F0);
      if (v161 > v155) {
        unsigned int v155 = v161;
      }
      uint64_t v157 = v199;
      sub_100007A48(v159, &qword_10070D6F0);
      sub_100007A48((uint64_t)v157, &qword_10070A168);
      v144 += v214;
      Class v154 = (Class)((char *)v154 - 1);
    }
    while (v154);
    uint64_t result = swift_bridgeObjectRelease();
    int v142 = v212;
    os_log_t v81 = v209;
    if (v155 >= v212) {
      goto LABEL_71;
    }
  }
  else if (!v212)
  {
LABEL_71:
    uint64_t v167 = type metadata accessor for SegmentResequencer.Error(0);
    sub_1001E1594(&qword_10070F960, (void (*)(uint64_t))type metadata accessor for SegmentResequencer.Error);
    uint64_t v169 = swift_allocError();
    os_log_t v170 = v168;
    Class v171 = v81->isa;
    uint64_t v172 = *((void *)v81->isa + 2);
    if (v172)
    {
      os_log_t v213 = v168;
      uint64_t v216 = (_DWORD *)v167;
      uint64_t v202 = v169;
      uint64_t v173 = (uint64_t)v171 + v211;
      unint64_t v211 = (unint64_t)v171;
      swift_bridgeObjectRetain();
      unsigned int v174 = 0;
      unint64_t v175 = v184;
      uint64_t v176 = (uint64_t)v197;
      unint64_t v177 = v214;
      do
      {
        sub_1000079E4(v173, v176, &qword_10070A168);
        uint64_t v178 = *(int *)(v215 + 48);
        uint64_t v179 = (char *)v175 + v178;
        uint64_t v180 = (uint64_t)v197 + v178;
        unsigned int v181 = v197[1];
        *unint64_t v175 = *v197;
        v175[1] = v181;
        sub_1000079E4(v180, (uint64_t)v175 + v178, &qword_10070D6F0);
        if (v181 > v174) {
          unsigned int v174 = v181;
        }
        uint64_t v182 = (uint64_t)v179;
        uint64_t v176 = (uint64_t)v197;
        sub_100007A48(v182, &qword_10070D6F0);
        sub_100007A48(v176, &qword_10070A168);
        v173 += v177;
        --v172;
      }
      while (v172);
      swift_bridgeObjectRelease();
      int v142 = v212;
      os_log_t v170 = v213;
    }
    else
    {
      unsigned int v174 = 0;
    }
    LODWORD(v170->isa) = v174;
    HIDWORD(v170->isa) = v142;
    goto LABEL_17;
  }
  return result;
}

uint64_t type metadata accessor for SegmentResequencer.Error(uint64_t a1)
{
  return sub_10003B314(a1, qword_10070FA70);
}

uint64_t sub_1001E0268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000566C(&qword_10070D6F0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v110 = (char *)v104 - v8;
  __chkstk_darwin(v7);
  unsigned int v109 = (char *)v104 - v9;
  uint64_t v10 = sub_1005E17E0();
  uint64_t v114 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v122 = (char *)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v126 = (char *)v104 - v14;
  __chkstk_darwin(v13);
  uint64_t v113 = (char *)v104 - v15;
  uint64_t v131 = sub_10000566C(&qword_10070A168);
  uint64_t v125 = *(void *)(v131 - 8);
  uint64_t v16 = __chkstk_darwin(v131);
  unsigned int v128 = (_DWORD *)((char *)v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v19 = (_DWORD *)((char *)v104 - v18);
  uint64_t v130 = sub_10000566C(&qword_10070BAC0);
  uint64_t v115 = *(void *)(v130 - 8);
  uint64_t v20 = __chkstk_darwin(v130);
  uint64_t v123 = (void *)((char *)v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v112 = (char *)v104 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v118 = (uint64_t)v104 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v129 = (void *)((char *)v104 - v27);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v124 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)v104 - v29);
  __chkstk_darwin(v28);
  char v31 = (char *)v104 - v30;
  unint64_t v32 = *(void *)v1;
  unint64_t v33 = *(unsigned int *)(v1 + 8) | ((unint64_t)*(unsigned __int8 *)(v1 + 12) << 32);
  uint64_t v34 = swift_bridgeObjectRetain();
  unint64_t v127 = (char *)sub_1001E0DC8(v34, v33);
  uint64_t v117 = v35;
  LODWORD(v33) = v36;
  swift_bridgeObjectRelease();
  if (v33 == 1)
  {
    unsigned int v106 = v104;
    uint64_t v132 = _swiftEmptyArrayStorage;
    uint64_t v37 = *(void (***)(char *, uint64_t, uint64_t))(v32 + 16);
    swift_bridgeObjectRetain();
    uint64_t v111 = v1;
    uint64_t v121 = v37;
    uint64_t v105 = a1;
    uint64_t v108 = v10;
    uint64_t v107 = v6;
    if (v37)
    {
      os_log_type_t v119 = v19;
      uint64_t v38 = 0;
      unint64_t v39 = (*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
      v104[1] = v32;
      uint64_t v40 = v32 + v39;
      int v120 = *(void (***)(char *, uint64_t))(v125 + 72);
      uint64_t v116 = _swiftEmptyArrayStorage;
      uint64_t v41 = &qword_10070A168;
      while (1)
      {
        uint64_t v42 = v130;
        uint64_t v43 = (uint64_t)v129 + *(int *)(v130 + 48);
        sub_1000079E4(v40, v43, v41);
        uint64_t v44 = (uint64_t)v124;
        uint64_t v45 = (uint64_t)v124 + *(int *)(v42 + 48);
        *unint64_t v124 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v38;
        sub_10001FDF0(v43, v45, v41);
        sub_10001FDF0(v44, (uint64_t)v31, &qword_10070BAC0);
        uint64_t v46 = &v31[*(int *)(v42 + 48)];
        uint64_t v47 = *(unsigned int *)v46;
        LODWORD(v42) = *((_DWORD *)v46 + 1);
        uint64_t v48 = v41;
        uint64_t v49 = v131;
        uint64_t v50 = *(int *)(v131 + 48);
        uint64_t v51 = (uint64_t)v19 + v50;
        *uint64_t v19 = v47;
        v19[1] = v42;
        sub_1000079E4((uint64_t)&v46[v50], (uint64_t)v19 + v50, &qword_10070D6F0);
        uint64_t v52 = *(int *)(v49 + 48);
        uint64_t v53 = v128;
        uint64_t v54 = (uint64_t)v128 + v52;
        *unsigned int v128 = v47;
        v53[1] = v42;
        sub_1000079E4(v51, (uint64_t)v53 + v52, &qword_10070D6F0);
        sub_100007A48(v54, &qword_10070D6F0);
        if ((uint64_t)v127 > v47)
        {
          sub_100007A48((uint64_t)v19, v48);
          uint64_t v41 = v48;
        }
        else
        {
          sub_100007A48((uint64_t)v19, v48);
          uint64_t v41 = v48;
          if ((uint64_t)v117 > v47)
          {
            sub_10001FDF0((uint64_t)v31, v118, &qword_10070BAC0);
            unint64_t v55 = v116;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_10001AD54(0, v55[2] + 1, 1);
            }
            uint64_t v56 = v132;
            unint64_t v58 = v132[2];
            unint64_t v57 = v132[3];
            if (v58 >= v57 >> 1)
            {
              sub_10001AD54(v57 > 1, v58 + 1, 1);
              uint64_t v56 = v132;
            }
            v56[2] = v58 + 1;
            unint64_t v59 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
            uint64_t v116 = v56;
            sub_10001FDF0(v118, (uint64_t)v56 + v59 + *(void *)(v115 + 72) * v58, &qword_10070BAC0);
            uint64_t v41 = v48;
            goto LABEL_6;
          }
        }
        sub_100007A48((uint64_t)v31, &qword_10070BAC0);
LABEL_6:
        uint64_t v38 = (void (**)(char *, uint64_t, uint64_t))((char *)v38 + 1);
        v40 += (uint64_t)v120;
        if (v121 == v38)
        {
          os_log_t v62 = v132;
          uint64_t v1 = v111;
          uint64_t v10 = v108;
          uint64_t v6 = v107;
          goto LABEL_19;
        }
      }
    }
    os_log_t v62 = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v132 = v62;
    swift_retain();
    sub_1001DE900(&v132);
    uint64_t v63 = (uint64_t)v112;
    swift_release();
    os_log_type_t v64 = v132;
    sub_1005E1790();
    BOOL v65 = (char *)v64[2];
    uint64_t v117 = v64;
    if (v65)
    {
      uint64_t v66 = (uint64_t)v64
          + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
      unint64_t v124 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
      uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v114 + 32);
      os_log_type_t v119 = *(_DWORD **)(v115 + 72);
      int v120 = (void (**)(char *, uint64_t))(v114 + 8);
      swift_retain();
      uint64_t v68 = &qword_10070BAC0;
      uint64_t v121 = v67;
      uint64_t v118 = (unint64_t)v67 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v69 = (uint64_t)v110;
      uint64_t v70 = (uint64_t)v109;
      while (1)
      {
        unint64_t v127 = v65;
        int v71 = v68;
        sub_1000079E4(v66, v63, v68);
        uint64_t v72 = *(int *)(v130 + 48);
        uint64_t v73 = v131;
        uint64_t v74 = *(int *)(v131 + 48);
        uint64_t v75 = (uint64_t)v129 + v72 + v74;
        sub_1000079E4(v63 + v72 + v74, v75, &qword_10070D6F0);
        uint64_t v76 = v63;
        uint64_t v77 = (uint64_t)v128 + *(int *)(v73 + 48);
        sub_10001FDF0(v75, v77, &qword_10070D6F0);
        sub_10001FDF0(v77, v70, &qword_10070D6F0);
        sub_1000079E4(v70, v69, &qword_10070D6F0);
        if ((*v124)(v69, 1, v10) == 1) {
          goto LABEL_45;
        }
        unint64_t v78 = v122;
        os_log_t v79 = *v121;
        (*v121)(v122, v69, v10);
        sub_1005E17A0();
        (*v120)(v78, v10);
        sub_100007A48(v70, &qword_10070D6F0);
        uint64_t v68 = v71;
        sub_100007A48(v76, v71);
        v66 += (uint64_t)v119;
        BOOL v65 = v127 - 1;
        uint64_t v63 = v76;
        if (v127 == (char *)1)
        {
          os_log_type_t v64 = v117;
          swift_release();
          uint64_t v1 = v111;
          uint64_t v6 = v107;
          uint64_t v80 = v118;
          goto LABEL_25;
        }
      }
    }
    os_log_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 32);
    uint64_t v80 = (v114 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
LABEL_25:
    uint64_t v118 = v80;
    v79(v113, (uint64_t)v126, v10);
    int64_t v81 = v64[2];
    unint64_t v127 = (char *)v79;
    if (v81)
    {
      uint64_t v132 = _swiftEmptyArrayStorage;
      sub_10001A614(0, v81, 0);
      uint64_t v82 = (uint64_t)v64
          + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
      unsigned int v128 = *(_DWORD **)(v115 + 72);
      os_log_type_t v83 = v132;
      do
      {
        unsigned int v84 = v129;
        sub_1000079E4(v82, (uint64_t)v129, &qword_10070BAC0);
        uint64_t v85 = *(int *)(v130 + 48);
        unsigned int v86 = (uint64_t *)((char *)v123 + v85);
        uint64_t v87 = *(int *)(v131 + 48);
        uint64_t v88 = (uint64_t)v123 + v85 + v87;
        uint64_t v89 = (uint64_t *)((char *)v84 + v85);
        uint64_t v90 = *v84;
        *uint64_t v123 = *v84;
        *unsigned int v86 = *v89;
        sub_1000079E4((uint64_t)v89 + v87, v88, &qword_10070D6F0);
        sub_100007A48(v88, &qword_10070D6F0);
        sub_100007A48((uint64_t)v84, &qword_10070BAC0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10001A614(0, v83[2] + 1, 1);
          os_log_type_t v83 = v132;
        }
        unint64_t v92 = v83[2];
        unint64_t v91 = v83[3];
        if (v92 >= v91 >> 1)
        {
          sub_10001A614(v91 > 1, v92 + 1, 1);
          os_log_type_t v83 = v132;
        }
        uint64_t v83[2] = v92 + 1;
        v83[v92 + 4] = v90;
        v82 += (uint64_t)v128;
        --v81;
      }
      while (v81);
      swift_release();
      uint64_t v1 = v111;
      uint64_t v93 = v108;
      uint64_t v94 = v83[2];
      if (!v94) {
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v93 = v10;
      swift_release();
      os_log_type_t v83 = _swiftEmptyArrayStorage;
      uint64_t v94 = _swiftEmptyArrayStorage[2];
      if (!v94)
      {
LABEL_43:
        swift_bridgeObjectRelease();
        uint64_t v103 = v105;
        ((void (*)(uint64_t, char *, uint64_t))v127)(v105, v113, v93);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v114 + 56))(v103, 0, 1, v93);
      }
    }
    uint64_t v95 = v83 + 4;
    uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56);
    while (1)
    {
      unint64_t v98 = *v95++;
      unint64_t v97 = v98;
      uint64_t v99 = (uint64_t)v6;
      v96(v6, 1, 1, v93);
      unint64_t v100 = *(void *)v1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v1 = v100;
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v97 & 0x8000000000000000) != 0) {
          goto LABEL_42;
        }
      }
      else
      {
        unint64_t v100 = sub_100093534(v100);
        *(void *)uint64_t v1 = v100;
        if ((v97 & 0x8000000000000000) != 0)
        {
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
      }
      if (v97 >= *(void *)(v100 + 16)) {
        break;
      }
      uint64_t v102 = v100
           + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))
           + *(void *)(v125 + 72) * v97
           + *(int *)(v131 + 48);
      uint64_t v6 = (char *)v99;
      sub_1001E15DC(v99, v102);
      if (!--v94) {
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_45:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  Class v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56);
  return v60(a1, 1, 1, v10);
}

uint64_t sub_1001E0DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v75 = sub_10000566C(&qword_10070A168);
  uint64_t v70 = *(void *)(v75 - 8);
  uint64_t v4 = __chkstk_darwin(v75);
  uint64_t v6 = (_DWORD *)((char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v8 = (_DWORD *)((char *)&v60 - v7);
  uint64_t v74 = (void *)sub_1005E0AA0();
  uint64_t v9 = *(v74 - 1);
  uint64_t v10 = __chkstk_darwin(v74);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v72 = sub_1005E0AD0();
  uint64_t v15 = __chkstk_darwin(v72);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v68 = (char *)&v60 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = __chkstk_darwin((char *)&v60 - v18);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v60 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v28 = (char *)&v60 - v27;
  if ((a2 & 0xFFFFFFFFFFLL) == 0) {
    return 0;
  }
  uint64_t v64 = v23;
  uint64_t v65 = v26;
  uint64_t v66 = v25;
  uint64_t v67 = v12;
  uint64_t v73 = v24;
  uint64_t v62 = a2;
  swift_bridgeObjectRetain();
  sub_1005E0AC0();
  uint64_t v29 = *(void *)(a1 + 16);
  uint64_t v69 = a1;
  uint64_t v30 = v9;
  char v31 = v74;
  uint64_t v71 = v30;
  if (v29)
  {
    uint64_t v32 = a1 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
    uint64_t v33 = *(void *)(v70 + 72);
    swift_bridgeObjectRetain();
    uint64_t v34 = v29;
    while (1)
    {
      sub_1000079E4(v32, (uint64_t)v8, &qword_10070A168);
      if (v8[1] < *v8) {
        break;
      }
      sub_1005E0A80();
      sub_100007A48((uint64_t)v8, &qword_10070A168);
      v32 += v33;
      if (!--v34)
      {
        swift_bridgeObjectRelease();
        char v31 = v74;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
LABEL_7:
  uint64_t v36 = v72;
  uint64_t v35 = v73;
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
  v63(v28, v22, v72);
  swift_bridgeObjectRelease();
  sub_1005E0AB0();
  uint64_t v37 = *(void **)(v35 + 8);
  uint64_t v73 = v35 + 8;
  uint64_t v74 = v37;
  ((void (*)(char *, uint64_t))v37)(v28, v36);
  sub_1001E1594(&qword_10070D808, (void (*)(uint64_t))&type metadata accessor for IndexSet.RangeView);
  sub_1005E2390();
  sub_1005E23E0();
  if (v77 == v76[0])
  {
    (*(void (**)(char *, void *))(v71 + 8))(v14, v31);
    return 0;
  }
  uint64_t v38 = (void (*)(void *, void))sub_1005E24D0();
  uint64_t v40 = *v39;
  unint64_t v41 = v39[1];
  v38(v76, 0);
  uint64_t v42 = v71 + 8;
  uint64_t v43 = *(void (**)(char *, void *))(v71 + 8);
  v43(v14, v31);
  if (v40) {
    return 0;
  }
  unint64_t v61 = v43;
  uint64_t v71 = v42;
  uint64_t v44 = v69;
  swift_bridgeObjectRetain();
  uint64_t v45 = v68;
  sub_1005E0AC0();
  if (v29)
  {
    unint64_t v60 = v41;
    uint64_t v46 = v44 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
    uint64_t v47 = *(void *)(v70 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1000079E4(v46, (uint64_t)v6, &qword_10070A168);
      uint64_t v48 = (char *)v6 + *(int *)(v75 + 48);
      uint64_t v49 = sub_1005E17E0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v48, 1, v49) != 1)
      {
        if (v6[1] < *v6) {
          goto LABEL_29;
        }
        sub_1005E0A80();
      }
      sub_100007A48((uint64_t)v6, &qword_10070A168);
      v46 += v47;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    unint64_t v41 = v60;
  }
  uint64_t v50 = v64;
  uint64_t v51 = v72;
  v63((char *)v64, v45, v72);
  swift_bridgeObjectRelease();
  uint64_t v52 = v66;
  sub_1005E0A50();
  uint64_t v53 = v65;
  sub_1005E0A60();
  uint64_t v54 = (void (*)(uint64_t, uint64_t))v74;
  ((void (*)(uint64_t, uint64_t))v74)(v52, v51);
  v54(v50, v51);
  unint64_t v55 = v67;
  sub_1005E0AB0();
  v54(v53, v51);
  sub_1005E2390();
  sub_1005E23E0();
  if (v77 != v76[0])
  {
    unint64_t v58 = (void (*)(void *, void))sub_1005E24D0();
    unint64_t v41 = *v59;
    v58(v76, 0);
    v61(v55, v31);
    return v41;
  }
  uint64_t v56 = v62;
  v61(v55, v31);
  if ((v56 & 0xFF00000000) == 0 && v41 == v56) {
    return 0;
  }
  if ((v41 & 0x8000000000000000) == 0 && !HIDWORD(v41)) {
    return v41;
  }
LABEL_30:
  uint64_t result = sub_1005E2F10();
  __break(1u);
  return result;
}

BOOL sub_1001E1570(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

double sub_1001E1588@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_1001E1594(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001E15DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070D6F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Int sub_1001E1644(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v178 = sub_10000566C(&qword_10070BAC0);
  uint64_t v169 = *(void *)(v178 - 8);
  uint64_t v4 = __chkstk_darwin(v178);
  uint64_t v165 = (uint64_t)&v160 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v179 = (uint64_t)&v160 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  unsigned int v174 = (uint64_t *)((char *)&v160 - v9);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v173 = (uint64_t *)((char *)&v160 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v176 = (uint64_t *)((char *)&v160 - v13);
  __chkstk_darwin(v12);
  unint64_t v175 = (uint64_t *)((char *)&v160 - v14);
  Swift::Int v15 = a1[1];
  Swift::Int result = sub_1005E3210(v15);
  if (result >= v15)
  {
    if (v15 < 0) {
      goto LABEL_138;
    }
    if (v15) {
      return sub_1001E22F4(0, v15, 1, a1);
    }
    return result;
  }
  if (v15 >= 0) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = v15 + 1;
  }
  if (v15 < -1) {
    goto LABEL_146;
  }
  Swift::Int v162 = result;
  if (v15 < 2)
  {
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    unint64_t v167 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80));
    unsigned int v161 = _swiftEmptyArrayStorage;
    if (v15 != 1)
    {
      unint64_t v23 = _swiftEmptyArrayStorage[2];
LABEL_104:
      if (v23 >= 2)
      {
        uint64_t v154 = *a1;
        do
        {
          unint64_t v155 = v23 - 2;
          if (v23 < 2) {
            goto LABEL_133;
          }
          if (!v154) {
            goto LABEL_145;
          }
          uint64_t v156 = *(void *)&v21[16 * v155 + 32];
          uint64_t v157 = *(void *)&v21[16 * v23 + 24];
          sub_1001E2680(v154 + *(void *)(v169 + 72) * v156, v154 + *(void *)(v169 + 72) * *(void *)&v21[16 * v23 + 16], v154 + *(void *)(v169 + 72) * v157, v167);
          if (v2) {
            break;
          }
          if (v157 < v156) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v21 = sub_1000A6DE0((uint64_t)v21);
          }
          if (v155 >= *((void *)v21 + 2)) {
            goto LABEL_135;
          }
          uint64_t v158 = &v21[16 * v155 + 32];
          *(void *)uint64_t v158 = v156;
          *((void *)v158 + 1) = v157;
          unint64_t v159 = *((void *)v21 + 2);
          if (v23 > v159) {
            goto LABEL_136;
          }
          memmove(&v21[16 * v23 + 16], &v21[16 * v23 + 32], 16 * (v159 - v23));
          *((void *)v21 + 2) = v159 - 1;
          unint64_t v23 = v159 - 1;
        }
        while (v159 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v161[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v18 = v17 >> 1;
    uint64_t v19 = sub_1005E2150();
    *(void *)(v19 + 16) = v18;
    uint64_t v20 = *(unsigned __int8 *)(v169 + 80);
    unsigned int v161 = (void *)v19;
    unint64_t v167 = v19 + ((v20 + 32) & ~v20);
  }
  Swift::Int v22 = 0;
  uint64_t v21 = (char *)_swiftEmptyArrayStorage;
  uint64_t v168 = a1;
  while (1)
  {
    Swift::Int v24 = v22;
    Swift::Int v25 = v22 + 1;
    if (v22 + 1 < v15)
    {
      uint64_t v170 = *a1;
      uint64_t v26 = v170;
      Swift::Int v27 = *(void *)(v169 + 72);
      Swift::Int v182 = v27;
      uint64_t v172 = v22 + 1;
      uint64_t v28 = v175;
      sub_1000079E4(v170 + v27 * v25, (uint64_t)v175, &qword_10070BAC0);
      sub_1000079E4(v26 + v27 * v24, (uint64_t)v176, &qword_10070BAC0);
      Swift::Int v181 = v15;
      uint64_t v29 = v178;
      uint64_t v30 = *(int *)(v178 + 48);
      char v31 = v173;
      Swift::Int v166 = v24;
      uint64_t v32 = (uint32x2_t *)((char *)v173 + v30);
      uint64_t v33 = sub_10000566C(&qword_10070A168);
      uint64_t v34 = *(int *)(v33 + 48);
      uint64_t v35 = (uint64_t)v32 + v34;
      void *v31 = *v28;
      uint64_t v36 = (uint64_t)v28 + v30 + v34;
      uint32x2_t v37 = *(uint32x2_t *)((char *)v28 + v30);
      *uint64_t v32 = v37;
      Swift::Int v24 = v166;
      uint64_t v38 = v35;
      sub_1000079E4(v36, v35, &qword_10070D6F0);
      uint64_t v39 = *(int *)(v29 + 48);
      Swift::Int v15 = v181;
      uint64_t v40 = (uint32x2_t *)((char *)v174 + v39);
      Swift::Int v177 = v33;
      uint64_t v41 = *(int *)(v33 + 48);
      uint64_t v42 = (uint64_t)v174 + v39 + v41;
      uint64_t v43 = v176;
      uint64_t v44 = (uint32x2_t *)((char *)v176 + v39);
      *unsigned int v174 = *v176;
      uint32x2_t v45 = *v44;
      *uint64_t v40 = *v44;
      sub_1000079E4((uint64_t)v44 + v41, v42, &qword_10070D6F0);
      *(uint32x2_t *)&long long v46 = vcgt_u32(v45, v37);
      long long v180 = v46;
      sub_100007A48(v42, &qword_10070D6F0);
      sub_100007A48(v38, &qword_10070D6F0);
      sub_100007A48((uint64_t)v43, &qword_10070BAC0);
      sub_100007A48((uint64_t)v175, &qword_10070BAC0);
      Swift::Int v47 = v182;
      Swift::Int v25 = v24 + 2;
      if (v24 + 2 < v15)
      {
        uint64_t v163 = v21;
        uint64_t v160 = v2;
        uint64_t v48 = v170;
        Swift::Int v171 = v182 * v25;
        v172 *= v182;
        while (1)
        {
          Swift::Int v49 = v25;
          uint64_t v50 = v175;
          sub_1000079E4(v48 + v171, (uint64_t)v175, &qword_10070BAC0);
          uint64_t v51 = v176;
          sub_1000079E4(v48 + v172, (uint64_t)v176, &qword_10070BAC0);
          Swift::Int v53 = v177;
          uint64_t v52 = v178;
          uint64_t v54 = *(int *)(v178 + 48);
          unint64_t v55 = (uint32x2_t *)((char *)v173 + v54);
          uint64_t v56 = *(int *)(v177 + 48);
          uint64_t v57 = (uint64_t)v173 + v54 + v56;
          unint64_t v58 = (uint32x2_t *)((char *)v50 + v54);
          *uint64_t v173 = *v50;
          uint32x2_t v59 = *v58;
          *unint64_t v55 = *v58;
          sub_1000079E4((uint64_t)v58 + v56, v57, &qword_10070D6F0);
          uint64_t v60 = *(int *)(v52 + 48);
          unint64_t v61 = (uint32x2_t *)((char *)v174 + v60);
          uint64_t v62 = *(int *)(v53 + 48);
          uint64_t v63 = (uint64_t)v174 + v60 + v62;
          uint64_t v64 = (uint32x2_t *)((char *)v51 + v60);
          *unsigned int v174 = *v51;
          uint32x2_t v65 = *v64;
          *unint64_t v61 = *v64;
          sub_1000079E4((uint64_t)v64 + v62, v63, &qword_10070D6F0);
          sub_100007A48(v63, &qword_10070D6F0);
          sub_100007A48(v57, &qword_10070D6F0);
          sub_100007A48((uint64_t)v51, &qword_10070BAC0);
          sub_100007A48((uint64_t)v50, &qword_10070BAC0);
          if ((veor_s8(*(int8x8_t *)&v180, (int8x8_t)vcge_u32(v59, v65)).u8[0] & 1) == 0) {
            break;
          }
          Swift::Int v25 = v49 + 1;
          Swift::Int v47 = v182;
          v48 += v182;
          Swift::Int v15 = v181;
          if (v181 == v49 + 1)
          {
            Swift::Int v25 = v181;
            a1 = v168;
            uint64_t v2 = v160;
            Swift::Int v24 = v166;
            goto LABEL_22;
          }
        }
        a1 = v168;
        Swift::Int v25 = v49;
        uint64_t v2 = v160;
        Swift::Int v24 = v166;
        Swift::Int v15 = v181;
        Swift::Int v47 = v182;
LABEL_22:
        uint64_t v21 = v163;
      }
      if (v180)
      {
        if (v25 < v24) {
          goto LABEL_139;
        }
        if (v24 < v25)
        {
          uint64_t v163 = v21;
          uint64_t v66 = 0;
          uint64_t v67 = v47 * (v25 - 1);
          Swift::Int v68 = v25 * v47;
          uint64_t v69 = v24 * v47;
          do
          {
            if (v24 != v25 + v66 - 1)
            {
              uint64_t v71 = v2;
              Swift::Int v72 = v25;
              uint64_t v73 = v170;
              if (!v170) {
                goto LABEL_144;
              }
              unint64_t v74 = v170 + v69;
              *(void *)&long long v180 = v170 + v67;
              sub_10001FDF0(v170 + v69, v165, &qword_10070BAC0);
              if (v69 < v67 || v74 >= v73 + v68)
              {
                uint64_t v70 = v180;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v70 = v180;
                if (v69 != v67) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_10001FDF0(v165, v70, &qword_10070BAC0);
              Swift::Int v25 = v72;
              uint64_t v2 = v71;
              Swift::Int v47 = v182;
            }
            ++v24;
            --v66;
            v67 -= v47;
            v68 -= v47;
            v69 += v47;
          }
          while (v24 < v25 + v66);
          a1 = v168;
          uint64_t v21 = v163;
          Swift::Int v24 = v166;
          Swift::Int v15 = v181;
        }
      }
    }
    if (v25 < v15)
    {
      if (__OFSUB__(v25, v24)) {
        goto LABEL_137;
      }
      if (v25 - v24 < v162) {
        break;
      }
    }
LABEL_55:
    if (v25 < v24) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v177 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v21 = sub_1000A66A4(0, *((void *)v21 + 2) + 1, 1, v21);
    }
    unint64_t v104 = *((void *)v21 + 2);
    unint64_t v103 = *((void *)v21 + 3);
    unint64_t v23 = v104 + 1;
    if (v104 >= v103 >> 1) {
      uint64_t v21 = sub_1000A66A4((char *)(v103 > 1), v104 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v23;
    uint64_t v105 = v21 + 32;
    unsigned int v106 = &v21[16 * v104 + 32];
    Swift::Int v107 = v177;
    *(void *)unsigned int v106 = v24;
    *((void *)v106 + 1) = v107;
    if (v104)
    {
      while (1)
      {
        unint64_t v108 = v23 - 1;
        if (v23 >= 4)
        {
          uint64_t v113 = &v105[16 * v23];
          uint64_t v114 = *((void *)v113 - 8);
          uint64_t v115 = *((void *)v113 - 7);
          BOOL v119 = __OFSUB__(v115, v114);
          uint64_t v116 = v115 - v114;
          if (v119) {
            goto LABEL_121;
          }
          uint64_t v118 = *((void *)v113 - 6);
          uint64_t v117 = *((void *)v113 - 5);
          BOOL v119 = __OFSUB__(v117, v118);
          uint64_t v111 = v117 - v118;
          char v112 = v119;
          if (v119) {
            goto LABEL_122;
          }
          unint64_t v120 = v23 - 2;
          uint64_t v121 = &v105[16 * v23 - 32];
          uint64_t v123 = *(void *)v121;
          uint64_t v122 = *((void *)v121 + 1);
          BOOL v119 = __OFSUB__(v122, v123);
          uint64_t v124 = v122 - v123;
          if (v119) {
            goto LABEL_124;
          }
          BOOL v119 = __OFADD__(v111, v124);
          uint64_t v125 = v111 + v124;
          if (v119) {
            goto LABEL_127;
          }
          if (v125 >= v116)
          {
            Class v143 = &v105[16 * v108];
            uint64_t v145 = *(void *)v143;
            uint64_t v144 = *((void *)v143 + 1);
            BOOL v119 = __OFSUB__(v144, v145);
            uint64_t v146 = v144 - v145;
            if (v119) {
              goto LABEL_131;
            }
            BOOL v136 = v111 < v146;
            goto LABEL_92;
          }
        }
        else
        {
          if (v23 != 3)
          {
            uint64_t v137 = *((void *)v21 + 4);
            uint64_t v138 = *((void *)v21 + 5);
            BOOL v119 = __OFSUB__(v138, v137);
            uint64_t v130 = v138 - v137;
            char v131 = v119;
            goto LABEL_86;
          }
          uint64_t v110 = *((void *)v21 + 4);
          uint64_t v109 = *((void *)v21 + 5);
          BOOL v119 = __OFSUB__(v109, v110);
          uint64_t v111 = v109 - v110;
          char v112 = v119;
        }
        if (v112) {
          goto LABEL_123;
        }
        unint64_t v120 = v23 - 2;
        uint64_t v126 = &v105[16 * v23 - 32];
        uint64_t v128 = *(void *)v126;
        uint64_t v127 = *((void *)v126 + 1);
        BOOL v129 = __OFSUB__(v127, v128);
        uint64_t v130 = v127 - v128;
        char v131 = v129;
        if (v129) {
          goto LABEL_126;
        }
        uint64_t v132 = &v105[16 * v108];
        uint64_t v134 = *(void *)v132;
        uint64_t v133 = *((void *)v132 + 1);
        BOOL v119 = __OFSUB__(v133, v134);
        uint64_t v135 = v133 - v134;
        if (v119) {
          goto LABEL_129;
        }
        if (__OFADD__(v130, v135)) {
          goto LABEL_130;
        }
        if (v130 + v135 >= v111)
        {
          BOOL v136 = v111 < v135;
LABEL_92:
          if (v136) {
            unint64_t v108 = v120;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v131) {
          goto LABEL_125;
        }
        unint64_t v139 = &v105[16 * v108];
        uint64_t v141 = *(void *)v139;
        uint64_t v140 = *((void *)v139 + 1);
        BOOL v119 = __OFSUB__(v140, v141);
        uint64_t v142 = v140 - v141;
        if (v119) {
          goto LABEL_128;
        }
        if (v142 < v130) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v147 = v108 - 1;
        if (v108 - 1 >= v23)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v168) {
          goto LABEL_143;
        }
        uint64_t v148 = v21;
        uint64_t v149 = &v105[16 * v147];
        uint64_t v150 = *(void *)v149;
        uint64_t v151 = &v105[16 * v108];
        uint64_t v152 = *((void *)v151 + 1);
        sub_1001E2680(*v168 + *(void *)(v169 + 72) * *(void *)v149, *v168 + *(void *)(v169 + 72) * *(void *)v151, *v168 + *(void *)(v169 + 72) * v152, v167);
        if (v2) {
          goto LABEL_115;
        }
        if (v152 < v150) {
          goto LABEL_118;
        }
        if (v108 > *((void *)v148 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v149 = v150;
        *(void *)&v105[16 * v147 + 8] = v152;
        unint64_t v153 = *((void *)v148 + 2);
        if (v108 >= v153) {
          goto LABEL_120;
        }
        uint64_t v21 = v148;
        unint64_t v23 = v153 - 1;
        memmove(&v105[16 * v108], v151 + 16, 16 * (v153 - 1 - v108));
        *((void *)v148 + 2) = v153 - 1;
        if (v153 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v23 = 1;
LABEL_14:
    a1 = v168;
    Swift::Int v15 = v168[1];
    Swift::Int v22 = v177;
    if (v177 >= v15) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v24, v162)) {
    goto LABEL_140;
  }
  if (v24 + v162 >= v15) {
    Swift::Int v75 = v15;
  }
  else {
    Swift::Int v75 = v24 + v162;
  }
  if (v75 >= v24)
  {
    if (v25 != v75)
    {
      Swift::Int v166 = v24;
      uint64_t v163 = v21;
      uint64_t v160 = v2;
      uint64_t v76 = *(void *)(v169 + 72);
      uint64_t v77 = v76 * (v25 - 1);
      uint64_t v170 = v76;
      Swift::Int v78 = v25 * v76;
      Swift::Int v164 = v75;
      do
      {
        uint64_t v80 = 0;
        Swift::Int v81 = v166;
        Swift::Int v177 = v25;
        Swift::Int v171 = v78;
        uint64_t v172 = v77;
        while (1)
        {
          Swift::Int v182 = v81;
          uint64_t v82 = *a1;
          Swift::Int v181 = v78 + v80;
          os_log_type_t v83 = v175;
          sub_1000079E4(v78 + v80 + v82, (uint64_t)v175, &qword_10070BAC0);
          *(void *)&long long v180 = v77 + v80;
          unsigned int v84 = v176;
          sub_1000079E4(v77 + v80 + v82, (uint64_t)v176, &qword_10070BAC0);
          uint64_t v85 = a1;
          uint64_t v86 = v178;
          uint64_t v87 = *(int *)(v178 + 48);
          uint64_t v88 = v173;
          uint64_t v89 = (uint32x2_t *)((char *)v173 + v87);
          uint64_t v90 = sub_10000566C(&qword_10070A168);
          uint64_t v91 = *(int *)(v90 + 48);
          *uint64_t v88 = *v83;
          uint32x2_t v92 = *(uint32x2_t *)((char *)v83 + v87);
          *uint64_t v89 = v92;
          uint64_t v93 = (uint64_t)v89 + v91;
          sub_1000079E4((uint64_t)v83 + v87 + v91, (uint64_t)v89 + v91, &qword_10070D6F0);
          uint64_t v94 = *(int *)(v86 + 48);
          uint64_t v95 = (uint32x2_t *)((char *)v174 + v94);
          uint64_t v96 = *(int *)(v90 + 48);
          uint64_t v97 = (uint64_t)v174 + v94 + v96;
          unint64_t v98 = (uint32x2_t *)((char *)v84 + v94);
          *unsigned int v174 = *v84;
          uint32x2_t v99 = *v98;
          *uint64_t v95 = *v98;
          sub_1000079E4((uint64_t)v98 + v96, v97, &qword_10070D6F0);
          sub_100007A48(v97, &qword_10070D6F0);
          sub_100007A48(v93, &qword_10070D6F0);
          sub_100007A48((uint64_t)v84, &qword_10070BAC0);
          sub_100007A48((uint64_t)v83, &qword_10070BAC0);
          if ((vcgt_u32(v99, v92).u8[0] & 1) == 0) {
            break;
          }
          uint64_t v100 = *v85;
          if (!*v85) {
            goto LABEL_142;
          }
          a1 = v85;
          Swift::Int v78 = v171;
          uint64_t v77 = v172;
          uint64_t v101 = v100 + v172 + v80;
          sub_10001FDF0(v100 + v171 + v80, v179, &qword_10070BAC0);
          swift_arrayInitWithTakeFrontToBack();
          sub_10001FDF0(v179, v101, &qword_10070BAC0);
          v80 -= v170;
          Swift::Int v81 = v182 + 1;
          Swift::Int v79 = v177;
          if (v177 == v182 + 1) {
            goto LABEL_48;
          }
        }
        a1 = v85;
        Swift::Int v79 = v177;
        Swift::Int v78 = v171;
        uint64_t v77 = v172;
LABEL_48:
        Swift::Int v25 = v79 + 1;
        v77 += v170;
        v78 += v170;
      }
      while (v25 != v164);
      Swift::Int v25 = v164;
      uint64_t v2 = v160;
      uint64_t v21 = v163;
      Swift::Int v24 = v166;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1001E22F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v55 = a4;
  uint64_t v43 = a1;
  uint64_t v51 = sub_10000566C(&qword_10070BAC0);
  uint64_t v6 = __chkstk_darwin(v51);
  uint64_t v52 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::Int v47 = (uint64_t *)((char *)&v41 - v9);
  uint64_t v10 = __chkstk_darwin(v8);
  long long v46 = (char *)&v41 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint32x2_t v45 = (uint64_t *)((char *)&v41 - v13);
  uint64_t result = __chkstk_darwin(v12);
  uint64_t v44 = (uint64_t *)((char *)&v41 - v16);
  uint64_t v50 = a3;
  uint64_t v42 = a2;
  if (a3 != a2)
  {
    uint64_t v17 = *(void *)(v15 + 72);
    uint64_t v18 = v17 * (v50 - 1);
    uint64_t v48 = v17;
    uint64_t v19 = v17 * v50;
LABEL_5:
    uint64_t v20 = 0;
    uint64_t v56 = v43;
    uint64_t v49 = v18;
    while (1)
    {
      uint64_t v21 = *v55;
      uint64_t v54 = v19 + v20;
      Swift::Int v22 = v44;
      sub_1000079E4(v19 + v20 + v21, (uint64_t)v44, &qword_10070BAC0);
      uint64_t v53 = v18 + v20;
      unint64_t v23 = v45;
      sub_1000079E4(v18 + v20 + v21, (uint64_t)v45, &qword_10070BAC0);
      uint64_t v24 = v51;
      uint64_t v25 = *(int *)(v51 + 48);
      uint64_t v26 = v19;
      Swift::Int v27 = v46;
      uint64_t v28 = (uint32x2_t *)&v46[v25];
      uint64_t v29 = sub_10000566C(&qword_10070A168);
      uint64_t v30 = *(int *)(v29 + 48);
      *Swift::Int v27 = *v22;
      uint64_t v19 = v26;
      uint32x2_t v31 = *(uint32x2_t *)((char *)v22 + v25);
      *uint64_t v28 = v31;
      uint64_t v32 = (uint64_t)v28 + v30;
      sub_1000079E4((uint64_t)v22 + v25 + v30, v32, &qword_10070D6F0);
      uint64_t v33 = *(int *)(v24 + 48);
      uint64_t v18 = v49;
      uint64_t v34 = (uint32x2_t *)((char *)v47 + v33);
      uint64_t v35 = *(int *)(v29 + 48);
      uint64_t v36 = (uint64_t)v47 + v33 + v35;
      uint32x2_t v37 = (uint32x2_t *)((char *)v23 + v33);
      *Swift::Int v47 = *v23;
      uint32x2_t v38 = *v37;
      uint32x2_t *v34 = *v37;
      sub_1000079E4((uint64_t)v37 + v35, v36, &qword_10070D6F0);
      sub_100007A48(v36, &qword_10070D6F0);
      sub_100007A48(v32, &qword_10070D6F0);
      sub_100007A48((uint64_t)v23, &qword_10070BAC0);
      uint64_t result = sub_100007A48((uint64_t)v22, &qword_10070BAC0);
      if ((vcgt_u32(v38, v31).u8[0] & 1) == 0)
      {
LABEL_4:
        v18 += v48;
        uint64_t v19 = v26 + v48;
        if (++v50 == v42) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v39 = *v55;
      if (!*v55) {
        break;
      }
      uint64_t v40 = v39 + v18 + v20;
      sub_10001FDF0(v39 + v26 + v20, v52, &qword_10070BAC0);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_10001FDF0(v52, v40, &qword_10070BAC0);
      v20 -= v48;
      if (v50 == ++v56) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001E2680(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v83 = sub_10000566C(&qword_10070BAC0);
  uint64_t v8 = __chkstk_darwin(v83);
  uint64_t v82 = (uint64_t *)((char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v81 = (char *)&v72 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v80 = (uint64_t *)((char *)&v72 - v13);
  __chkstk_darwin(v12);
  Swift::Int v79 = (char *)&v72 - v14;
  uint64_t v16 = *(void *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_62;
  }
  int64_t v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_63;
  }
  uint64_t v18 = (uint64_t)(a2 - a1) / v16;
  unint64_t v86 = a1;
  unint64_t v85 = a4;
  uint64_t v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      uint64_t v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v46 = a4 + v21;
      unint64_t v84 = a4 + v21;
      unint64_t v86 = a2;
      if (v21 >= 1 && a1 < a2)
      {
        uint64_t v48 = -v16;
        uint64_t v74 = v48;
        unint64_t v75 = a4;
        unint64_t v73 = a1;
        uint64_t v50 = v79;
        uint64_t v49 = v80;
        uint64_t v51 = v83;
        do
        {
          unint64_t v77 = a2;
          unint64_t v78 = a3 + v48;
          sub_1000079E4(v46 + v48, (uint64_t)v50, &qword_10070BAC0);
          uint64_t v76 = a2 + v48;
          sub_1000079E4(a2 + v48, (uint64_t)v49, &qword_10070BAC0);
          uint64_t v52 = *(int *)(v51 + 48);
          uint64_t v53 = v81;
          uint64_t v54 = (uint32x2_t *)&v81[v52];
          uint64_t v55 = sub_10000566C(&qword_10070A168);
          uint64_t v56 = *(int *)(v55 + 48);
          unint64_t v57 = a3;
          uint64_t v58 = (uint64_t)v54 + v56;
          *uint64_t v53 = *v50;
          uint32x2_t v59 = *(uint32x2_t *)((char *)v50 + v52);
          *uint64_t v54 = v59;
          sub_1000079E4((uint64_t)v50 + v52 + v56, (uint64_t)v54 + v56, &qword_10070D6F0);
          uint64_t v60 = *(int *)(v51 + 48);
          unint64_t v61 = (uint32x2_t *)((char *)v82 + v60);
          uint64_t v62 = *(int *)(v55 + 48);
          uint64_t v63 = (uint64_t)v82 + v60 + v62;
          uint64_t v64 = (uint32x2_t *)((char *)v49 + v60);
          *uint64_t v82 = *v49;
          uint32x2_t v65 = *v64;
          *unint64_t v61 = *v64;
          sub_1000079E4((uint64_t)v64 + v62, v63, &qword_10070D6F0);
          sub_100007A48(v63, &qword_10070D6F0);
          sub_100007A48(v58, &qword_10070D6F0);
          sub_100007A48((uint64_t)v49, &qword_10070BAC0);
          sub_100007A48((uint64_t)v50, &qword_10070BAC0);
          if (vcgt_u32(v65, v59).u8[0])
          {
            uint64_t v48 = v74;
            a3 = v78;
            if (v57 < v77 || v78 >= v77)
            {
              unint64_t v67 = v76;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v68 = v75;
              unint64_t v69 = v73;
            }
            else
            {
              BOOL v66 = v57 == v77;
              unint64_t v68 = v75;
              unint64_t v67 = v76;
              unint64_t v69 = v73;
              if (!v66) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v86 += v48;
          }
          else
          {
            unint64_t v67 = v77;
            a3 = v78;
            unint64_t v70 = v84;
            v84 += v74;
            uint64_t v48 = v74;
            if (v57 < v70 || v78 >= v70)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v68 = v75;
            }
            else
            {
              unint64_t v68 = v75;
              if (v57 != v70) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v69 = v73;
          }
          unint64_t v46 = v84;
          if (v84 <= v68) {
            break;
          }
          a2 = v67;
        }
        while (v67 > v69);
      }
      goto LABEL_60;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v78 = a4 + v20;
    unint64_t v84 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      uint64_t v76 = v16;
      unint64_t v77 = a3;
      unint64_t v23 = v79;
      do
      {
        sub_1000079E4(a2, (uint64_t)v23, &qword_10070BAC0);
        uint64_t v24 = a4;
        uint64_t v25 = v80;
        sub_1000079E4(v24, (uint64_t)v80, &qword_10070BAC0);
        uint64_t v26 = v83;
        uint64_t v27 = *(int *)(v83 + 48);
        unint64_t v28 = a2;
        uint64_t v29 = v81;
        uint64_t v30 = (uint32x2_t *)&v81[v27];
        uint64_t v31 = sub_10000566C(&qword_10070A168);
        uint64_t v32 = *(int *)(v31 + 48);
        uint64_t v33 = (uint64_t)v30 + v32;
        *uint64_t v29 = *v23;
        uint32x2_t v34 = *(uint32x2_t *)((char *)v23 + v27);
        *uint64_t v30 = v34;
        sub_1000079E4((uint64_t)v23 + v27 + v32, (uint64_t)v30 + v32, &qword_10070D6F0);
        uint64_t v35 = *(int *)(v26 + 48);
        uint64_t v36 = (uint32x2_t *)((char *)v82 + v35);
        uint64_t v37 = *(int *)(v31 + 48);
        uint64_t v38 = (uint64_t)v82 + v35 + v37;
        uint64_t v39 = (uint32x2_t *)((char *)v25 + v35);
        *uint64_t v82 = *v25;
        uint32x2_t v40 = *v39;
        *uint64_t v36 = *v39;
        sub_1000079E4((uint64_t)v39 + v37, v38, &qword_10070D6F0);
        sub_100007A48(v38, &qword_10070D6F0);
        sub_100007A48(v33, &qword_10070D6F0);
        sub_100007A48((uint64_t)v25, &qword_10070BAC0);
        sub_100007A48((uint64_t)v23, &qword_10070BAC0);
        unint64_t v41 = v86;
        if (vcgt_u32(v40, v34).u8[0])
        {
          uint64_t v42 = v76;
          unint64_t v43 = v28 + v76;
          if (v86 < v28 || v86 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v44 = v77;
          }
          else
          {
            unint64_t v44 = v77;
            if (v86 == v28) {
              unint64_t v41 = v28;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v42 = v76;
          unint64_t v45 = v85 + v76;
          if (v86 < v85 || v86 >= v45)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v44 = v77;
          }
          else
          {
            unint64_t v44 = v77;
            if (v86 != v85) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v85 = v45;
          unint64_t v43 = v28;
        }
        unint64_t v86 = v41 + v42;
        a4 = v85;
        if (v85 >= v78) {
          break;
        }
        a2 = v43;
      }
      while (v43 < v44);
    }
LABEL_60:
    sub_1000A6C9C(&v86, &v85, (uint64_t *)&v84);
    return 1;
  }
LABEL_64:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for SegmentResequencer.ByteCount(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SegmentResequencer.ByteCount(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001E2DB8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u) {
    return *(unsigned __int8 *)(a1 + 4);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1001E2DD0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SegmentResequencer.ByteCount()
{
  return &type metadata for SegmentResequencer.ByteCount;
}

uint64_t *sub_1001E2DF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1005E17E0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1001E2F44(uint64_t a1)
{
  uint64_t v2 = sub_1005E17E0();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_1001E3014(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1001E3124(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1001E3298(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1001E33A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1001E351C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E3530);
}

uint64_t sub_1001E3530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001E359C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E35B0);
}

uint64_t sub_1001E35B0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1001E3630(uint64_t a1)
{
  uint64_t v2 = sub_1005E17E0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1001E3698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for SegmentResequencer.PopResult(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_10070F9E8);
}

uint64_t sub_1001E3728()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1001E37A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v11 = sub_1005E0AD0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = sub_10000566C(&qword_10070F9F8);
      *(_DWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_DWORD *)((char *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_1005E0AD0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = sub_10000566C(&qword_10070F968);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_1001E3924(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result & 0xFFFFFFFE) == 2)
  {
    uint64_t v3 = sub_1005E0AD0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

char *sub_1001E39A4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v9 = sub_1005E0AD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = sub_10000566C(&qword_10070F9F8);
    *(_DWORD *)&a1[*(int *)(v10 + 48)] = *(_DWORD *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_1005E0AD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = sub_10000566C(&qword_10070F968);
    *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1001E3AE4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001E3C48((uint64_t)a1, type metadata accessor for SegmentResequencer.Error);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v9 = sub_1005E0AD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = sub_10000566C(&qword_10070F9F8);
      *(_DWORD *)&a1[*(int *)(v10 + 48)] = *(_DWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_1005E0AD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = sub_10000566C(&qword_10070F968);
      *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001E3C48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1001E3CA8(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v9 = sub_1005E0AD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = sub_10000566C(&qword_10070F9F8);
    *(_DWORD *)&a1[*(int *)(v10 + 48)] = *(_DWORD *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_1005E0AD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = sub_10000566C(&qword_10070F968);
    *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1001E3DE8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001E3C48((uint64_t)a1, type metadata accessor for SegmentResequencer.Error);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v9 = sub_1005E0AD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = sub_10000566C(&qword_10070F9F8);
      *(_DWORD *)&a1[*(int *)(v10 + 48)] = *(_DWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_1005E0AD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = sub_10000566C(&qword_10070F968);
      *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001E3F4C()
{
  uint64_t v4 = (char *)&value witness table for Builtin.Int32 + 64;
  int v5 = (char *)&value witness table for Builtin.Int64 + 64;
  uint64_t result = sub_1005E0AD0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v2;
    uint64_t v8 = "\b";
    uint64_t v9 = &unk_1005F6598;
    uint64_t v10 = "\b";
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SegmentResequencer()
{
  return &type metadata for SegmentResequencer;
}

void *initializeBufferWithCopyOfBuffer for SegmentResequencer.SegmentRange(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for SegmentResequencer.SegmentRange()
{
  return &type metadata for SegmentResequencer.SegmentRange;
}

uint64_t MessageIdentifierSet.suffix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = __chkstk_darwin(TupleTypeMetadata2);
  unint64_t v103 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v102 = (char *)&v98 - v10;
  uint64_t v114 = *(void *)(v6 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unsigned int v106 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v105 = (char *)&v98 - v13;
  uint64_t v14 = sub_1005E28C0();
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v116 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v117 = (char *)&v98 - v17;
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v19 = *(void *)(v18 + 48);
  uint64_t v104 = *(void *)(v19 + 8);
  uint64_t v20 = sub_1005E1BA0();
  uint64_t v112 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v100 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v110 = (char *)&v98 - v23;
  unint64_t v24 = sub_1001E4EC4();
  uint64_t v108 = v19;
  uint64_t v139 = v19;
  unint64_t v140 = v24;
  unint64_t v107 = v24;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v134 = v20;
  uint64_t v26 = a1;
  uint64_t v113 = sub_1005E33D0();
  uint64_t v101 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v111 = (char *)&v98 - v27;
  uint64_t v133 = type metadata accessor for MessageIdentifierRange();
  uint64_t v115 = *(void *)(v133 - 8);
  uint64_t v28 = __chkstk_darwin(v133);
  uint64_t v99 = (uint64_t)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v126 = (char *)&v98 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint32x2_t v34 = (char *)&v98 - v33;
  __chkstk_darwin(v32);
  uint64_t v127 = (char *)&v98 - v35;
  uint64_t v129 = v18;
  uint64_t v130 = v6;
  uint64_t v36 = type metadata accessor for MessageIdentifierSet.RangeView();
  uint64_t v123 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v98 - v37;
  swift_getWitnessTable();
  uint64_t v39 = sub_1005E2FA0();
  __chkstk_darwin(v39 - 8);
  unint64_t v41 = (char *)&v98 - v40;
  uint64_t v128 = (char *)v36;
  uint64_t v120 = sub_1005E2F90();
  uint64_t v119 = *(void *)(v120 - 8);
  uint64_t v42 = __chkstk_darwin(v120);
  unint64_t v44 = (char *)&v98 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v42);
  Swift::Int v47 = (char *)&v98 - v46;
  uint64_t v132 = a2;
  uint64_t v118 = *(void *)(a2 - 8);
  uint64_t v48 = __chkstk_darwin(v45);
  uint64_t v125 = (char *)&v98 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v48);
  char v131 = (char *)&v98 - v51;
  if (v26 < 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v26) {
    return MessageIdentifierSet.init()();
  }
  uint64_t v98 = a3;
  MessageIdentifierSet.init()();
  MessageIdentifierSet.ranges.getter((uint64_t)v38);
  uint64_t v52 = v128;
  sub_1005E1A70();
  uint64_t v53 = v123;
  (*(void (**)(char *, char *, char *))(v123 + 16))(v44, v41, v52);
  uint64_t v54 = MessageIdentifierSet.RangeView.endIndex.getter();
  (*(void (**)(char *, char *))(v53 + 8))(v41, v52);
  uint64_t v55 = v120;
  *(void *)&v44[*(int *)(v120 + 36)] = v54;
  (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v47, v44, v55);
  uint64_t v56 = &v47[*(int *)(v55 + 36)];
  uint64_t v57 = *(void *)v56;
  if (v57 == MessageIdentifierSet.RangeView.startIndex.getter())
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v119 + 8))(v47, v120);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v118 + 32))(v98, v131, v132);
  }
  uint64_t v58 = 0;
  uint64_t v124 = (void (**)(char *, char *, uint64_t))(v115 + 32);
  uint64_t v121 = (void (**)(char *, char *, uint64_t))(v115 + 16);
  uint64_t v122 = (void (**)(uint64_t, uint64_t))(v118 + 8);
  uint64_t v123 = v115 + 8;
  while (1)
  {
    swift_getWitnessTable();
    sub_1005E2350();
    *(void *)uint64_t v56 = v138;
    uint32x2_t v59 = v127;
    MessageIdentifierSet.RangeView.subscript.getter();
    (*v124)(v34, v59, v133);
    uint64_t result = sub_1005E2470();
    if (__OFADD__(v58, result))
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v58 + result > v26) {
      break;
    }
    uint64_t result = sub_1005E2470();
    BOOL v60 = __OFADD__(v58, result);
    v58 += result;
    if (v60) {
      goto LABEL_20;
    }
    uint64_t v61 = WitnessTable;
    uint64_t v62 = v26;
    uint64_t v63 = v47;
    uint64_t v64 = v133;
    (*v121)(v126, v34, v133);
    uint32x2_t v65 = v34;
    uint64_t v66 = (uint64_t)v125;
    MessageIdentifierSet.init(_:)();
    uint64_t v67 = v132;
    MessageIdentifierSet.formUnion(_:)(v66, v132);
    uint64_t v68 = v66;
    uint32x2_t v34 = v65;
    (*v122)(v68, v67);
    uint64_t v69 = v64;
    Swift::Int v47 = v63;
    uint64_t v26 = v62;
    uint64_t WitnessTable = v61;
    (*(void (**)(char *, uint64_t))v123)(v65, v69);
    if (v58 < v26)
    {
      uint64_t v70 = *(void *)v56;
      if (v70 != MessageIdentifierSet.RangeView.startIndex.getter()) {
        continue;
      }
    }
    goto LABEL_17;
  }
  uint64_t v71 = v130;
  if (__OFSUB__(v26, v58)) {
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v110, v34, v134);
  uint64_t v136 = v108;
  unint64_t v137 = v107;
  uint64_t v72 = swift_getWitnessTable();
  sub_1005E1A60();
  swift_getWitnessTable();
  unint64_t v73 = v117;
  sub_1005E2480();
  uint64_t v74 = v114;
  unint64_t v75 = v73;
  uint64_t v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
  uint64_t result = v76(v75, 1, v71);
  if (result != 1)
  {
    uint64_t v128 = v47;
    uint64_t v135 = v72;
    swift_getWitnessTable();
    unint64_t v77 = v116;
    sub_1005E1A40();
    uint64_t result = v76(v77, 1, v71);
    if (result == 1) {
      goto LABEL_25;
    }
    unint64_t v78 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
    Swift::Int v79 = v105;
    v78(v105, v117, v71);
    uint64_t v80 = v106;
    v78(v106, v77, v71);
    char v81 = sub_1005E1AC0();
    uint64_t v82 = *(void (**)(char *, uint64_t))(v74 + 8);
    v82(v80, v71);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v82)(v79, v71);
    if (v81)
    {
      uint64_t v83 = TupleTypeMetadata2;
      unint64_t v84 = v102;
      unint64_t v85 = &v102[*(int *)(TupleTypeMetadata2 + 48)];
      v78(v102, v117, v71);
      uint64_t v127 = v85;
      v78(v85, v116, v71);
      unint64_t v86 = v103;
      uint64_t v87 = &v103[*(int *)(v83 + 48)];
      v78(v103, v84, v71);
      v78(v87, v85, v71);
      uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v114 + 32);
      uint64_t v89 = v110;
      v88(v110, v86, v71);
      v82(v87, v71);
      uint64_t v90 = &v86[*(int *)(TupleTypeMetadata2 + 48)];
      v88(v86, v84, v71);
      v88(v90, v127, v71);
      uint64_t v91 = v134;
      v88(&v89[*(int *)(v134 + 36)], v90, v71);
      v82(v86, v71);
      uint64_t v92 = (uint64_t)v100;
      (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v100, v89, v91);
      v82(v116, v71);
      v82(v117, v71);
      uint64_t v93 = v99;
      MessageIdentifierRange.init(_:)(v92, v99);
      uint64_t v94 = v133;
      (*v121)(v126, (char *)v93, v133);
      uint64_t v95 = (uint64_t)v125;
      MessageIdentifierSet.init(_:)();
      uint64_t v96 = v132;
      MessageIdentifierSet.formUnion(_:)(v95, v132);
      (*v122)(v95, v96);
      uint64_t v97 = *(void (**)(char *, uint64_t))v123;
      (*(void (**)(uint64_t, uint64_t))v123)(v93, v94);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v111, v113);
      v97(v34, v94);
      Swift::Int v47 = v128;
      goto LABEL_17;
    }
    goto LABEL_23;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1001E4EC4()
{
  unint64_t result = qword_10070FAA8;
  if (!qword_10070FAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FAA8);
  }
  return result;
}

uint64_t MessageIdentifierSetNonEmpty.suffix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MessageIdentifierSet();
  return MessageIdentifierSet.suffix(_:)(a1, v4, a2);
}

void *Base64.EncodingOptions.base64UrlAlphabet.unsafeMutableAddressor()
{
  return &static Base64.EncodingOptions.base64UrlAlphabet;
}

void *Base64.EncodingOptions.omitPaddingCharacter.unsafeMutableAddressor()
{
  return &static Base64.EncodingOptions.omitPaddingCharacter;
}

uint64_t sub_1001E4F88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = variable initialization expression of Cache._big5HkscsCanonicalName();
  *a1 = result;
  return result;
}

uint64_t sub_1001E4FB0(void *a1)
{
  return sub_1001E894C(*a1, *v1);
}

uint64_t sub_1001E4FBC(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t sub_1001E4FC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001E5BFC(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1001E4FF4(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_1001E4FFC(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_1001E5028(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

uint64_t sub_1001E504C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

uint64_t sub_1001E5064(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_1001E5074(void *a1)
{
  return sub_1001E8930(*a1);
}

uint64_t sub_1001E507C(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_1001E508C(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

uint64_t sub_1001E5094(void *a1)
{
  return sub_1001E8950(*a1, *v1);
}

BOOL sub_1001E50A0(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1001E50AC(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_1001E50B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_1001E50D0(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

BOOL sub_1001E50E0(uint64_t *a1, uint64_t *a2)
{
  return static DownloadRequest.ID.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t sub_1001E50EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v4 = v5;
      if ((v5 & ~v2) == 0) {
        uint64_t v4 = 0;
      }
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *Base64.DecodingOptions.base64UrlAlphabet.unsafeMutableAddressor()
{
  return &static Base64.DecodingOptions.base64UrlAlphabet;
}

void *Base64.DecodingOptions.omitPaddingCharacter.unsafeMutableAddressor()
{
  return &static Base64.DecodingOptions.omitPaddingCharacter;
}

void *sub_1001E5158@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1001E5164@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001E4FBC(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1001E5194@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001E4FF4(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1001E51C4(void *a1, uint64_t *a2)
{
  return sub_1001E4FFC(a1, *a2);
}

uint64_t sub_1001E51CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1001E5028(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1001E5200@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1001E504C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1001E5234(uint64_t *a1)
{
  return sub_1001E5064(*a1);
}

uint64_t sub_1001E523C(uint64_t *a1)
{
  return sub_1001E5C04(*a1);
}

uint64_t sub_1001E5244(uint64_t *a1)
{
  return sub_1001E507C(*a1);
}

uint64_t sub_1001E524C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001E508C(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_1001E527C(uint64_t *a1)
{
  return sub_1001E5C14(*a1, *v1);
}

BOOL sub_1001E5288(uint64_t *a1)
{
  return sub_1001E50A0(*a1, *v1);
}

BOOL sub_1001E5294(uint64_t *a1)
{
  return sub_1001E5C20(*a1, *v1);
}

BOOL sub_1001E52A0()
{
  return sub_1001E50AC(*v0);
}

uint64_t sub_1001E52A8(uint64_t *a1)
{
  return sub_1001E50D0(*a1);
}

uint64_t sub_1001E52B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001E50EC(a1);
  *a2 = result;
  return result;
}

uint64_t String.init<A>(base64Encoding:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static Base64.encodeString<A>(bytes:options:)();
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  return v6;
}

void variable initialization expression of EncodeBuffer.stopPoints()
{
}

uint64_t variable initialization expression of FramingParser.state()
{
  return 1;
}

uint64_t variable initialization expression of FramingParser.buffer()
{
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  return swift_retain();
}

double sub_1001E53E0(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xFFFFFFFE00000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 512;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 184) = 0;
  return result;
}

uint64_t sub_1001E5424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_10070FD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double variable initialization expression of AuthenticatedURLRump.expire@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 41) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 57) = 1;
  return result;
}

double variable initialization expression of BodyStructure.DispositionAndLanguage.disposition@<D0>(_OWORD *a1@<X8>)
{
  *((void *)a1 + 4) = 0;
  return sub_1001E5BF0(a1);
}

double variable initialization expression of IndexableMessageInfo.from@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double variable initialization expression of BodyStructure.Singlepart.extension@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1005F6750;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0;
  return result;
}

double variable initialization expression of BodyStructure.Singlepart.Extension.dispositionAndLanguage@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1005F6750;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  return result;
}

uint64_t variable initialization expression of IMAPServer.userAuthenticationMechanism()
{
  return 0;
}

uint64_t variable initialization expression of MessagePath.range()
{
  return 0;
}

uint64_t variable initialization expression of NetworkPath.command@<X0>(uint64_t a1@<X8>)
{
  sub_1001E53E0((uint64_t)v3);
  return sub_1001E5424((uint64_t)v3, a1);
}

double variable initialization expression of ExtendedSearchResponse.correlator@<D0>(_OWORD *a1@<X8>)
{
  *((unsigned char *)a1 + 32) = 0;
  return sub_1001E5BF0(a1);
}

unint64_t variable initialization expression of ResponseText.code()
{
  return 0xF000000000000007;
}

uint64_t variable initialization expression of SearchCorrelator.mailbox()
{
  return 0;
}

uint64_t variable initialization expression of QResyncParameter.knownUIDs()
{
  sub_10000566C(&qword_10070FD90);
  uint64_t v0 = sub_1001E5BC8();
  return storeEnumTagSinglePayload for ClientCommand(v0, v1, v2, v3);
}

uint64_t variable initialization expression of QResyncParameter.sequenceMatchData()
{
  type metadata accessor for SequenceMatchData();
  uint64_t v0 = sub_1001E5BC8();
  return storeEnumTagSinglePayload for ClientCommand(v0, v1, v2, v3);
}

uint64_t variable initialization expression of SynchronizedCommand.commandPart()
{
  type metadata accessor for CommandStreamPart();
  uint64_t v0 = sub_1001E5BC8();
  return storeEnumTagSinglePayload for ClientCommand(v0, v1, v2, v3);
}

uint64_t variable initialization expression of CommandParser.mode()
{
  return 0;
}

uint64_t SynchronizingLiteralParser.init()()
{
  return 0;
}

unint64_t sub_1001E5670()
{
  unint64_t result = qword_10070FD98;
  if (!qword_10070FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FD98);
  }
  return result;
}

unint64_t sub_1001E56C0()
{
  unint64_t result = qword_10070FDA0;
  if (!qword_10070FDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FDA0);
  }
  return result;
}

unint64_t sub_1001E5710()
{
  unint64_t result = qword_10070FDA8;
  if (!qword_10070FDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FDA8);
  }
  return result;
}

unint64_t sub_1001E5760()
{
  unint64_t result = qword_10070FDB0;
  if (!qword_10070FDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FDB0);
  }
  return result;
}

unint64_t sub_1001E57B0()
{
  unint64_t result = qword_10070FDB8;
  if (!qword_10070FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FDB8);
  }
  return result;
}

unint64_t sub_1001E5800()
{
  unint64_t result = qword_10070FDC0;
  if (!qword_10070FDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FDC0);
  }
  return result;
}

unint64_t sub_1001E5850()
{
  unint64_t result = qword_10070FDC8;
  if (!qword_10070FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FDC8);
  }
  return result;
}

unint64_t sub_1001E58A0()
{
  unint64_t result = qword_10070FDD0;
  if (!qword_10070FDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FDD0);
  }
  return result;
}

void type metadata accessor for Base64()
{
}

void type metadata accessor for Base64.EncodingOptions()
{
}

void type metadata accessor for Base64.DecodingOptions()
{
}

void *sub_1001E5914(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t sub_1001E591C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001E593C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 128) = v3;
  return result;
}

void type metadata accessor for sockaddr_storage(uint64_t a1)
{
}

void *sub_1001E599C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x6AuLL);
}

uint64_t sub_1001E59A4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 106)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001E59C4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 104) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 106) = v3;
  return result;
}

void type metadata accessor for sockaddr_un(uint64_t a1)
{
}

__n128 sub_1001E5A20(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1001E5A34(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 28)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1001E5A54(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 28) = v3;
  return result;
}

void type metadata accessor for sockaddr_in6(uint64_t a1)
{
}

__n128 sub_1001E5A98(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for sockaddr_in(uint64_t a1)
{
}

__n128 sub_1001E5AB8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for sockaddr(uint64_t a1)
{
}

void type metadata accessor for in6_addr(uint64_t a1)
{
}

void type metadata accessor for in_addr(uint64_t a1)
{
}

void type metadata accessor for in6_addr.__Unnamed_union___u6_addr(uint64_t a1)
{
}

void sub_1001E5B14(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t static IndexingStatistics.empty.getter()
{
  return 0;
}

uint64_t sub_1001E5BC8()
{
  return v0;
}

uint64_t variable initialization expression of Engine.powerTelemetry()
{
  return 0;
}

double sub_1001E5BF0@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1001E5BFC(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_1001E5C04(uint64_t result)
{
  *v1 &= result;
  return result;
}

BOOL sub_1001E5C14(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_1001E5C20(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL static DownloadRequest.ID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1001E5C38(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x534547415353454DLL;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x534547415353454DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x544E45434552;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x5458454E444955;
      break;
    case 3:
      uint64_t v5 = 0x44494C4156444955;
      uint64_t v6 = 5854281;
      goto LABEL_9;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x4E4545534E55;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1163544915;
      break;
    case 6:
      uint64_t v5 = 0x4D54534548474948;
      unint64_t v3 = 0xED0000514553444FLL;
      break;
    case 7:
      uint64_t v5 = 0x494C444E45505041;
      uint64_t v6 = 5523789;
LABEL_9:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v2 = 0x544E45434552;
      break;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v2 = 0x5458454E444955;
      break;
    case 3:
      uint64_t v2 = 0x44494C4156444955;
      uint64_t v8 = 5854281;
      goto LABEL_18;
    case 4:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v2 = 0x4E4545534E55;
      break;
    case 5:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v2 = 1163544915;
      break;
    case 6:
      uint64_t v2 = 0x4D54534548474948;
      unint64_t v7 = 0xED0000514553444FLL;
      break;
    case 7:
      uint64_t v2 = 0x494C444E45505041;
      uint64_t v8 = 5523789;
LABEL_18:
      unint64_t v7 = v8 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v10 = 1;
  }
  else {
    char v10 = sub_1001E8A04();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_1001E5E98(char a1, char a2)
{
  if (a1)
  {
    sub_1001E8A40();
    if (v2) {
      uint64_t v4 = 45;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v2) {
      unint64_t v5 = v3;
    }
    else {
      unint64_t v5 = 0xE000000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE100000000000000;
    uint64_t v4 = 43;
  }
  if (a2)
  {
    sub_1001E8A40();
    if (v6) {
      uint64_t v8 = 45;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v6) {
      unint64_t v9 = v7;
    }
    else {
      unint64_t v9 = 0xE000000000000000;
    }
  }
  else
  {
    unint64_t v9 = 0xE100000000000000;
    uint64_t v8 = 43;
  }
  if (v4 == v8 && v5 == v9) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1001E8A04();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1001E5F40(char a1, char a2)
{
  if (a1)
  {
    sub_1001E8A40();
    if (v2) {
      uint64_t v4 = 49;
    }
    else {
      uint64_t v4 = 0x7974696E69666E69;
    }
    if (v2) {
      unint64_t v5 = v3;
    }
    else {
      unint64_t v5 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE100000000000000;
    uint64_t v4 = 48;
  }
  if (a2)
  {
    sub_1001E8A40();
    if (v6) {
      uint64_t v8 = 49;
    }
    else {
      uint64_t v8 = 0x7974696E69666E69;
    }
    if (v6) {
      unint64_t v9 = v7;
    }
    else {
      unint64_t v9 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v9 = 0xE100000000000000;
    uint64_t v8 = 48;
  }
  if (v4 == v8 && v5 == v9) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1001E8A04();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t static MessageID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_1005E3290();
  }
}

BOOL static CredentialsRequestID.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

void static Base64.encodeString<A>(bytes:options:)()
{
  sub_1001E8954();
  __chkstk_darwin(v0);
  if (__OFADD__(sub_1001E8974(), 2))
  {
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001E89B4();
  if (!v2) {
    goto LABEL_10;
  }
  __chkstk_darwin(v1);
  sub_1005E1F90();
  if (v6) {
    return;
  }
  uint64_t v3 = sub_1001E89D0();
  v4(v3);
  if (__OFADD__(*(void *)(sub_1005E2210() + 16), 2)) {
    goto LABEL_11;
  }
  sub_1001E89A0();
  if (v2)
  {
    __chkstk_darwin(4 * v5);
    sub_1005E1DA0();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t static Base64.decode(string:options:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  unint64_t v7 = a2;
  uint64_t v8 = a1;
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1001E8390();
    uint64_t v4 = v14;
    swift_bridgeObjectRelease();
    unint64_t v7 = v4;
LABEL_12:
    uint64_t v13 = static Base64.decode(string:options:)(v8, v7, a3);
    if (!v5)
    {
      uint64_t v4 = v13;
      swift_bridgeObjectRelease();
      return v4;
    }
    goto LABEL_8;
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v16[0] = a1;
    v16[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    char v10 = v16;
    uint64_t v11 = HIBYTE(v7) & 0xF;
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
    {
      uint64_t v9 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v9 = sub_1005E2D30();
      uint64_t v4 = v15;
    }
    swift_bridgeObjectRetain();
    char v10 = (void *)v9;
    uint64_t v11 = v4;
  }
  sub_1001E6FB8((uint64_t)v10, v11, a3, &v17);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = v17;
    if (v17) {
      return v4;
    }
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  return v4;
}

const char *Base64.encodePaddingCharacter.unsafeMutableAddressor()
{
  return "=";
}

uint64_t static Base64.encodePaddingCharacter.getter()
{
  return 61;
}

void sub_1001E6340()
{
  static Base64.encoding0 = (uint64_t)&off_1006CC618;
}

uint64_t *Base64.encoding0.unsafeMutableAddressor()
{
  if (qword_10070FAB0 != -1) {
    swift_once();
  }
  return &static Base64.encoding0;
}

uint64_t static Base64.encoding0.getter()
{
  return sub_1001E8344(&qword_10070FAB0);
}

void sub_1001E63C4()
{
  static Base64.encoding1 = (uint64_t)&off_1006CC738;
}

uint64_t *Base64.encoding1.unsafeMutableAddressor()
{
  if (qword_10070FAB8 != -1) {
    swift_once();
  }
  return &static Base64.encoding1;
}

uint64_t static Base64.encoding1.getter()
{
  return sub_1001E8344(&qword_10070FAB8);
}

void sub_1001E6448()
{
  static Base64.encoding0url = (uint64_t)&off_1006CC858;
}

uint64_t *Base64.encoding0url.unsafeMutableAddressor()
{
  if (qword_10070FAC0 != -1) {
    swift_once();
  }
  return &static Base64.encoding0url;
}

uint64_t static Base64.encoding0url.getter()
{
  return sub_1001E8344(&qword_10070FAC0);
}

void sub_1001E64CC()
{
  static Base64.encoding1url = (uint64_t)&off_1006CC978;
}

uint64_t *Base64.encoding1url.unsafeMutableAddressor()
{
  if (qword_10070FAC8 != -1) {
    swift_once();
  }
  return &static Base64.encoding1url;
}

uint64_t static Base64.encoding1url.getter()
{
  return sub_1001E8344(&qword_10070FAC8);
}

void sub_1001E6550(uint64_t a1)
{
  if (__OFADD__(*(void *)(a1 + 16), 2))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001E89A0();
  if (!v6) {
    goto LABEL_11;
  }
  uint64_t v7 = 4 * v5;
  if (4 * v5 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 >= 3)
  {
    uint64_t v1 = sub_1005E2150();
    uint64_t v8 = (void *)v1;
    *(void *)(v1 + 16) = v7;
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  uint64_t v9 = 0;
  sub_1001E8A4C(v1, v2, (uint64_t)(v8 + 4), v3, &v9);
  if (v7 >= v9)
  {
    v8[2] = v9;
    return;
  }
LABEL_13:
  __break(1u);
}

void *sub_1001E6610(void *result)
{
  uint64_t v2 = result[3];
  uint64_t v1 = result[4];
  uint64_t v3 = v1 - v2;
  BOOL v4 = __OFSUB__(v1, v2);
  uint64_t v5 = v3 + 2;
  if (__OFADD__(v3, 2))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v5 / 3;
  if ((unint64_t)(v5 / 3 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  double result = (void *)swift_beginAccess();
  if (v4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = 4 * v6;
  if (4 * v6 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v9)
  {
    double result = (void *)sub_1005E2150();
    char v10 = result;
    result[2] = v9;
  }
  else
  {
    char v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v11 = 0;
  double result = (void *)sub_1001E8A4C((uint64_t)result, v7, (uint64_t)(v10 + 4), v8, &v11);
  if (v9 >= v11)
  {
    v10[2] = v11;
    return v10;
  }
LABEL_17:
  __break(1u);
  return result;
}

void static Base64.encodeBytes<A>(bytes:options:)()
{
  sub_1001E8954();
  __chkstk_darwin(v0);
  if (__OFADD__(sub_1001E8974(), 2))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  sub_1001E89B4();
  if (!v2) {
    goto LABEL_8;
  }
  __chkstk_darwin(v1);
  sub_10000566C(&qword_10070FE18);
  sub_1005E1F90();
  if (!v6)
  {
    uint64_t v3 = sub_1001E89D0();
    v4(v3);
    uint64_t v5 = sub_1005E2210();
    sub_1001E6550(v5);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001E6870@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    if (a3)
    {
      char v10 = (void *)sub_1005E2150();
      v10[2] = a3;
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
    }
    uint64_t v11 = 0;
    double result = static Base64._encodeChromium(input:buffer:length:options:)(v8, a2, (uint64_t)(v10 + 4), a3, &v11, a4);
    if (v11 <= a3)
    {
      v10[2] = v11;
      *a5 = v10;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t static Base64._encodeChromium(input:buffer:length:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if (a6)
  {
    if (qword_10070FAC0 != -1) {
      swift_once();
    }
    uint64_t v12 = static Base64.encoding0url;
    uint64_t v15 = qword_10070FAC8;
    swift_bridgeObjectRetain();
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v14 = &static Base64.encoding1url;
  }
  else
  {
    if (qword_10070FAB0 != -1) {
      swift_once();
    }
    uint64_t v12 = static Base64.encoding0;
    uint64_t v13 = qword_10070FAB8;
    swift_bridgeObjectRetain();
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v14 = &static Base64.encoding1;
  }
  uint64_t v16 = *v14;
  swift_bridgeObjectRetain();
  sub_1001E6BB4(v12 + 32, *(void *)(v12 + 16), v16 + 32, *(void *)(v16 + 16), a1, a2, a3, a4, (a6 & 2) != 0, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E6AD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1005E1DA0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001E6B28@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001E6AD0(a1);
}

uint64_t sub_1001E6B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = a3;
  static Base64._encodeChromium(input:buffer:length:options:)(a4, a5, a1, a2, &v7, a6);
  return v7;
}

uint64_t sub_1001E6B94(uint64_t a1, uint64_t a2)
{
  return sub_1001E6B44(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1001E6BB4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, void *a10)
{
  uint64_t v10 = 3 * (a6 / 3);
  uint64_t v11 = a6 % 3;
  if (v10 > 0)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      if (__OFADD__(v13, 3)) {
        uint64_t v14 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t v14 = v13 + 3;
      }
      uint64_t v15 = v13 + 2;
      if (__OFADD__(v13, 2))
      {
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v16 = (unsigned __int8 *)(a5 + v13);
      unint64_t v17 = v16[1];
      LODWORD(v16) = *v16;
      unint64_t v18 = *(unsigned __int8 *)(a5 + v15);
      uint64_t v19 = (unsigned char *)(a7 + v12);
      *uint64_t v19 = *(unsigned char *)(result + v16);
      v19[1] = *(unsigned char *)(a3 + ((v17 >> 4) & 0xFFFFFFFFFFFFFFCFLL | (16 * (v16 & 3))));
      _OWORD v19[2] = *(unsigned char *)(a3 + ((v18 >> 6) & 0xFFFFFFFFFFFFFFC3 | (4 * (v17 & 0xF))));
      v19[3] = *(unsigned char *)(a3 + v18);
      uint64_t v20 = v12 + 4;
      if (__OFADD__(v12, 4)) {
        goto LABEL_43;
      }
      v12 += 4;
      uint64_t v13 = v14;
    }
    while (v14 < v10);
    if (v11 > 0) {
      goto LABEL_13;
    }
    goto LABEL_41;
  }
  if (v11 < 1)
  {
LABEL_40:
    uint64_t v20 = 0;
    goto LABEL_41;
  }
  uint64_t v20 = 0;
LABEL_13:
  int64_t v21 = v10 + 1;
  if (v10 + 1 >= a6) {
    unsigned int v22 = 0;
  }
  else {
    unsigned int v22 = *(unsigned __int8 *)(a5 + v21);
  }
  uint64_t v23 = v10 + 2;
  if (__OFADD__(v10, 2))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  unint64_t v24 = *(unsigned __int8 *)(a5 + v10);
  LOBYTE(v10) = a9;
  if (v23 < a6)
  {
    unint64_t v25 = *(unsigned __int8 *)(a5 + v23);
    *(unsigned char *)(a7 + v20) = *(unsigned char *)(result + v24);
    if (v21 >= a6) {
      goto LABEL_33;
    }
    if (__OFADD__(v20, 1))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    int64_t v21 = (v22 >> 4) & 0xFFFFFFCF | (16 * (v24 & 3));
    *(unsigned char *)(a7 + v20 + 1) = *(unsigned char *)(a3 + v21);
    if (__OFADD__(v20, 2))
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    unint64_t v24 = (v25 >> 6) & 0xFFFFFFFFFFFFFFC3 | (4 * (v22 & 0xF));
    *(unsigned char *)(a7 + v20 + 2) = *(unsigned char *)(a3 + v24);
    uint64_t v10 = v20 + 3;
    if (__OFADD__(v20, 3))
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    unsigned int v22 = *(unsigned __int8 *)(a3 + v25);
    *(unsigned char *)(a7 + v10) = v22;
    BOOL v26 = __OFADD__(v20, 4);
    v20 += 4;
    if (!v26) {
      goto LABEL_41;
    }
    __break(1u);
  }
  *(unsigned char *)(a7 + v20) = *(unsigned char *)(result + v24);
  if (v21 < a6)
  {
    if (__OFADD__(v20, 1))
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    *(unsigned char *)(a7 + v20 + 1) = *(unsigned char *)(a3 + ((v22 >> 4) & 0xFFFFFFCF | (16 * (v24 & 3))));
    unint64_t v24 = v20 + 2;
    if (__OFADD__(v20, 2))
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    *(unsigned char *)(a7 + v24) = *(unsigned char *)(a3 + 4 * (v22 & 0xF));
    BOOL v26 = __OFADD__(v20, 3);
    v20 += 3;
    if (v26)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    if (v10) {
      goto LABEL_41;
    }
    LOBYTE(v10) = 61;
    *(unsigned char *)(a7 + v20) = 61;
    BOOL v26 = __OFADD__(v20++, 1);
    if (!v26) {
      goto LABEL_41;
    }
    __break(1u);
  }
LABEL_33:
  if (__OFADD__(v20, 1))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  *(unsigned char *)(a7 + v20 + 1) = *(unsigned char *)(a3 + 16 * (v24 & 3));
  BOOL v26 = __OFADD__(v20, 2);
  v20 += 2;
  if (v26)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v10)
  {
LABEL_41:
    *a10 = v20;
    return result;
  }
  *(unsigned char *)(a7 + v20) = 61;
  if (!__OFADD__(v20, 1))
  {
    *(unsigned char *)(a7 + v20 + 1) = 61;
    BOOL v26 = __OFADD__(v20, 2);
    v20 += 2;
    if (!v26) {
      goto LABEL_41;
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t static Base64.withUnsafeEncodingTablesAsBufferPointers<A>(options:_:)()
{
  sub_1001E89EC();
  if ((v0 & 1) == 0)
  {
    if (qword_10070FAB0 != -1) {
      swift_once();
    }
    uint64_t v1 = qword_10070FAB8;
    swift_bridgeObjectRetain();
    if (v1 == -1) {
      goto LABEL_9;
    }
LABEL_10:
    swift_once();
    goto LABEL_9;
  }
  if (qword_10070FAC0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10070FAC8;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v3 = swift_bridgeObjectRetain();
  __chkstk_darwin(v3);
  sub_1001E8A20();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E6F68()
{
  return sub_1005E2140();
}

uint64_t sub_1001E6FB8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  if (a2 < 1) {
    goto LABEL_7;
  }
  if (__OFADD__(a2, 3))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = result;
  uint64_t v9 = 3 * ((unint64_t)(a2 + 3) >> 2);
  uint64_t v10 = sub_1005E2150();
  *(void *)(v10 + 16) = v9;
  uint64_t v11 = v10 + 32;
  if (!v8)
  {
    uint64_t v14 = 0;
    uint64_t result = sub_1001E7834(a3, -1, 0, 0, v11, v9, &v14);
    uint64_t v12 = v14;
    BOOL v13 = v9 < v14;
    if (!v4) {
      goto LABEL_13;
    }
    if (v9 >= v14)
    {
LABEL_10:
      *(void *)(v10 + 16) = v12;
      return swift_bridgeObjectRelease();
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v14 = 0;
  uint64_t result = static Base64._decodeChromium(from:into:length:options:)(v8, a2, v11, v9, &v14, a3);
  uint64_t v12 = v14;
  BOOL v13 = v9 < v14;
  if (v4)
  {
    if (v9 < v14)
    {
      __break(1u);
LABEL_7:
      *a4 = (uint64_t)_swiftEmptyArrayStorage;
      return result;
    }
    goto LABEL_10;
  }
  if (v9 >= v14) {
    goto LABEL_14;
  }
  __break(1u);
LABEL_13:
  if (!v13)
  {
LABEL_14:
    *(void *)(v10 + 16) = v12;
    *a4 = v10;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t static Base64._decodeChromium(from:into:length:options:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  if ((a6 & 2) != 0)
  {
    if (a2 % 4 == 1) {
      goto LABEL_3;
    }
  }
  else if (a2 % 4 >= 1)
  {
LABEL_3:
    sub_1001E8434();
    swift_allocError();
    *uint64_t v6 = 256;
    return swift_willThrow();
  }
  if (__OFADD__(a2, 3))
  {
    __break(1u);
  }
  else if (3 * ((a2 + 3) / 4) <= a4)
  {
    return sub_1001E7834(a6, (__PAIR128__(a2 / 4, a2 % 4) - 1) >> 64, result, a2, a3, a4, a5);
  }
  __break(1u);
  return result;
}

void *sub_1001E71BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  sub_1001E74C0(a1 + 32, v5, a2, &v8);
  if (!v2)
  {
    uint64_t v3 = v8;
    if (!v8)
    {
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v3 = sub_1001E71BC(v7, a2);
      swift_bridgeObjectRelease();
    }
  }
  return (void *)v3;
}

void *sub_1001E7264(uint64_t a1, char a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = v3 - v4;
  BOOL v6 = __OFSUB__(v3, v4);
  if (v5 < 1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = *(unsigned __int16 *)(a1 + 20);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 22);
  uint64_t v10 = (void *)(*(void *)a1 + 24);
  uint64_t result = (void *)swift_beginAccess();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (void *)sub_1001E74C0(*v10 + (v9 | (v8 << 8)) + v4, v5, a2, &v12);
    if (!v2) {
      return (void *)v12;
    }
  }
  return result;
}

uint64_t *static Base64.decode<A>(bytes:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001E8954();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E23B0();
  if (v12 < 1) {
    return _swiftEmptyArrayStorage;
  }
  __chkstk_darwin(v12);
  BOOL v13 = &v16 - 4;
  *(&v16 - 2) = a2;
  sub_10000566C(&qword_10070FE18);
  sub_1005E1F90();
  if (!v4)
  {
    BOOL v13 = v17;
    if (!v17)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v3, a3);
      uint64_t v14 = sub_1005E2210();
      BOOL v13 = sub_1001E71BC(v14, a2);
      swift_bridgeObjectRelease();
    }
  }
  return v13;
}

uint64_t sub_1001E74C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v6 = a2 + 3;
  if (__OFADD__(a2, 3))
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 < -3)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v9 = result;
  uint64_t v10 = 3 * (v6 / 4);
  if (v6 < 4)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v11 = (void *)sub_1005E2150();
    void v11[2] = v10;
  }
  uint64_t v12 = 0;
  uint64_t result = static Base64._decodeChromium(from:into:length:options:)(v9, a2, (uint64_t)(v11 + 4), v10, &v12, a3);
  if (v4)
  {
    if (v10 >= v12)
    {
      void v11[2] = v12;
      return swift_bridgeObjectRelease();
    }
    goto LABEL_13;
  }
  if (v10 >= v12)
  {
    void v11[2] = v12;
    *a4 = v11;
    return result;
  }
LABEL_14:
  __break(1u);
  return result;
}

unsigned char *sub_1001E75B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  uint64_t v36 = 0;
  if (a9 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = (unsigned __int8 *)(a10 + 3);
    uint64_t v16 = a9;
    while (v14 != 0x6000000000000000)
    {
      uint64_t v17 = *(v15 - 3);
      unsigned int v18 = *(_DWORD *)(a3 + 4 * *(v15 - 2)) | *(_DWORD *)(a1 + 4 * v17) | *(_DWORD *)(a5 + 4 * *(v15 - 1)) | *(_DWORD *)(a7 + 4 * *v15);
      if (v18 >= 0x1FFFFFF) {
        goto LABEL_22;
      }
      *(unsigned char *)(a12 + v14) = v18;
      if (__OFADD__(v14, 1)) {
        goto LABEL_24;
      }
      *(unsigned char *)(a12 + v14 + 1) = BYTE1(v18);
      if (__OFADD__(v14, 2)) {
        goto LABEL_25;
      }
      *(unsigned char *)(a12 + v14 + 2) = BYTE2(v18);
      uint64_t v19 = v14 + 3;
      if (__OFADD__(v14, 3)) {
        goto LABEL_26;
      }
      v14 += 3;
      v15 += 4;
      if (!--v16)
      {
        uint64_t v36 = v19;
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
LABEL_10:
  sub_1001E89A0();
  if (!v27) {
    goto LABEL_27;
  }
  uint64_t v28 = 4 * v26;
  uint64_t v17 = *(unsigned __int8 *)(v25 + 4 * v26);
  uint64_t v29 = *(unsigned __int8 *)(v25 + ((4 * v26) | 1));
  __int16 v38 = 256;
  __int16 v37 = 256;
  if ((v28 | 2) >= a11 || (uint64_t v30 = *(unsigned __int8 *)(v25 + (v28 | 2)), v30 == 61)) {
    uint64_t v30 = 65;
  }
  else {
    __int16 v38 = v30;
  }
  uint64_t v31 = v28 | 3;
  if (v31 >= a11 || (uint64_t v32 = *(unsigned __int8 *)(v25 + v31), v32 == 61)) {
    uint64_t v32 = 65;
  }
  else {
    __int16 v37 = v32;
  }
  unsigned int v35 = *(_DWORD *)(v22 + 4 * v29) | *(_DWORD *)(v20 + 4 * v17) | *(_DWORD *)(v23 + 4 * v30) | *(_DWORD *)(v24 + 4 * v32);
  if (v35 >= 0x1FFFFFF)
  {
LABEL_22:
    sub_1001E8434();
    swift_allocError();
    unsigned char *v34 = v17;
    v34[1] = 0;
    return (unsigned char *)swift_willThrow();
  }
  else
  {
    uint64_t result = sub_1001E77D4(&v35, v21, a13, &v36, (uint64_t)&v38, (uint64_t)&v37);
    *a14 = v36;
  }
  return result;
}

void *Base64.badCharacter.unsafeMutableAddressor()
{
  return &static Base64.badCharacter;
}

unsigned char *sub_1001E77D4(unsigned char *result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *a4;
  *(unsigned char *)(a2 + v6) = *result;
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7)
  {
    __break(1u);
    goto LABEL_10;
  }
  *a4 = v8;
  if (*(unsigned char *)(a5 + 1)) {
    goto LABEL_5;
  }
  *(unsigned char *)(a2 + v8) = result[1];
  BOOL v7 = __OFADD__(v8++, 1);
  if (v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *a4 = v8;
LABEL_5:
  if (*(unsigned char *)(a6 + 1)) {
    return result;
  }
  *(unsigned char *)(a2 + v8) = result[2];
  BOOL v7 = __OFADD__(v8, 1);
  uint64_t v9 = v8 + 1;
  if (v7)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  *a4 = v9;
  return result;
}

uint64_t sub_1001E7834(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a1)
  {
    if (qword_10070FAF0 != -1) {
      swift_once();
    }
    uint64_t v11 = static Base64.decoding0url;
    uint64_t v18 = qword_10070FAF8;
    swift_bridgeObjectRetain();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v13 = static Base64.decoding1url;
    uint64_t v19 = qword_10070FB00;
    swift_bridgeObjectRetain();
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v15 = static Base64.decoding2url;
    uint64_t v20 = qword_10070FB08;
    swift_bridgeObjectRetain();
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v17 = &static Base64.decoding3url;
  }
  else
  {
    if (qword_10070FAD0 != -1) {
      swift_once();
    }
    uint64_t v11 = static Base64.decoding0;
    uint64_t v12 = qword_10070FAD8;
    swift_bridgeObjectRetain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = static Base64.decoding1;
    uint64_t v14 = qword_10070FAE0;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = static Base64.decoding2;
    uint64_t v16 = qword_10070FAE8;
    swift_bridgeObjectRetain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = &static Base64.decoding3;
  }
  uint64_t v21 = *v17;
  swift_bridgeObjectRetain();
  sub_1001E805C(v13 + 32, *(void *)(v13 + 16), v15, v21, v11 + 32, *(void *)(v11 + 16), a2, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static Base64.withUnsafeDecodingTablesAsBufferPointers<A>(options:_:)()
{
  sub_1001E89EC();
  if ((v0 & 1) == 0)
  {
    if (qword_10070FAD0 != -1) {
      swift_once();
    }
    uint64_t v1 = qword_10070FAD8;
    swift_bridgeObjectRetain();
    if (v1 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_10070FAE0;
    swift_bridgeObjectRetain();
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_10070FAE8;
    swift_bridgeObjectRetain();
    if (v3 == -1) {
      goto LABEL_17;
    }
LABEL_18:
    swift_once();
    goto LABEL_17;
  }
  if (qword_10070FAF0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_10070FAF8;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10070FB00;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10070FB08;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v7 = swift_bridgeObjectRetain();
  __chkstk_darwin(v7);
  sub_1001E8A20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *Base64.decoding0url.unsafeMutableAddressor()
{
  if (qword_10070FAF0 != -1) {
    swift_once();
  }
  return &static Base64.decoding0url;
}

uint64_t *Base64.decoding0.unsafeMutableAddressor()
{
  if (qword_10070FAD0 != -1) {
    swift_once();
  }
  return &static Base64.decoding0;
}

uint64_t *Base64.decoding1url.unsafeMutableAddressor()
{
  if (qword_10070FAF8 != -1) {
    swift_once();
  }
  return &static Base64.decoding1url;
}

uint64_t *Base64.decoding1.unsafeMutableAddressor()
{
  if (qword_10070FAD8 != -1) {
    swift_once();
  }
  return &static Base64.decoding1;
}

uint64_t *Base64.decoding2url.unsafeMutableAddressor()
{
  if (qword_10070FB00 != -1) {
    swift_once();
  }
  return &static Base64.decoding2url;
}

uint64_t *Base64.decoding2.unsafeMutableAddressor()
{
  if (qword_10070FAE0 != -1) {
    swift_once();
  }
  return &static Base64.decoding2;
}

uint64_t *Base64.decoding3url.unsafeMutableAddressor()
{
  if (qword_10070FB08 != -1) {
    swift_once();
  }
  return &static Base64.decoding3url;
}

uint64_t *Base64.decoding3.unsafeMutableAddressor()
{
  if (qword_10070FAE8 != -1) {
    swift_once();
  }
  return &static Base64.decoding3;
}

uint64_t sub_1001E8008()
{
  return sub_1005E2140();
}

unsigned char *sub_1001E805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  return sub_1001E75B8(a5, a6, a1, a2, a3 + 32, *(void *)(a3 + 16), a4 + 32, *(void *)(a4 + 16), a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1001E80C8()
{
  return sub_1005E2140();
}

uint64_t sub_1001E8120()
{
  return sub_1005E2140();
}

uint64_t static Base64.badCharacter.getter()
{
  return 0x1FFFFFFLL;
}

void sub_1001E8184()
{
  static Base64.decoding0 = (uint64_t)&off_1006CB598;
}

uint64_t static Base64.decoding0.getter()
{
  return sub_1001E8344(&qword_10070FAD0);
}

void sub_1001E81BC()
{
  static Base64.decoding1 = (uint64_t)&off_1006CB9B8;
}

uint64_t static Base64.decoding1.getter()
{
  return sub_1001E8344(&qword_10070FAD8);
}

void sub_1001E81F4()
{
  static Base64.decoding2 = (uint64_t)&off_1006CBDD8;
}

uint64_t static Base64.decoding2.getter()
{
  return sub_1001E8344(&qword_10070FAE0);
}

void sub_1001E822C()
{
  static Base64.decoding3 = (uint64_t)&off_1006CC1F8;
}

uint64_t static Base64.decoding3.getter()
{
  return sub_1001E8344(&qword_10070FAE8);
}

void sub_1001E8264()
{
  static Base64.decoding0url = (uint64_t)&off_1006CA518;
}

uint64_t static Base64.decoding0url.getter()
{
  return sub_1001E8344(&qword_10070FAF0);
}

void sub_1001E829C()
{
  static Base64.decoding1url = (uint64_t)&off_1006CA938;
}

uint64_t static Base64.decoding1url.getter()
{
  return sub_1001E8344(&qword_10070FAF8);
}

void sub_1001E82D4()
{
  static Base64.decoding2url = (uint64_t)&off_1006CAD58;
}

uint64_t static Base64.decoding2url.getter()
{
  return sub_1001E8344(&qword_10070FB00);
}

void sub_1001E830C()
{
  static Base64.decoding3url = (uint64_t)&off_1006CB178;
}

uint64_t static Base64.decoding3url.getter()
{
  return sub_1001E8344(&qword_10070FB08);
}

uint64_t sub_1001E8344(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001E8390()
{
  unint64_t v0 = sub_1001E85A0();
  uint64_t v4 = sub_1001E85D4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001E83F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1001E6870(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1001E8414()
{
  return sub_1001E6F68();
}

unint64_t sub_1001E8434()
{
  unint64_t result = qword_10070FE20;
  if (!qword_10070FE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FE20);
  }
  return result;
}

uint64_t sub_1001E8480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1001E74C0(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_1001E849C()
{
  return sub_1001E8008();
}

uint64_t sub_1001E84C0()
{
  return sub_1001E80C8();
}

uint64_t sub_1001E84F4()
{
  return sub_1001E8120();
}

uint64_t sub_1001E8528(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, void, void, void, void, uint64_t, uint64_t))(v2 + 24))(*(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), a1, a2);
}

uint64_t sub_1001E8568(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v2 + 24))(*(void *)(v2 + 40), *(void *)(v2 + 48), a1, a2);
}

uint64_t sub_1001E85A0()
{
  return sub_1005E1F50();
}

uint64_t sub_1001E85D4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1001F8A30(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          uint64_t v11 = sub_100284300(v9, 0),
          unint64_t v12 = sub_1001E872C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_1005E1D80();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_1005E1D80();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_1005E2D30();
LABEL_4:
  return sub_1005E1D80();
}

unint64_t sub_1001E872C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      unint64_t result = sub_100272294(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1005E1EC0();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1005E2D30();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      unint64_t result = sub_100272294(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_1005E1E90();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1001E8934(uint64_t a1, uint64_t a2)
{
  return sub_1001E6B94(a1, a2);
}

uint64_t sub_1001E8974()
{
  return sub_1005E23B0();
}

uint64_t sub_1001E89D0()
{
  return v0;
}

uint64_t sub_1001E8A04()
{
  return sub_1005E3290();
}

uint64_t sub_1001E8A20()
{
  return sub_1005E2140();
}

uint64_t sub_1001E8A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return static Base64._encodeChromium(input:buffer:length:options:)(v8, v6, a3, v7, a5, v5);
}

BOOL static Base64.DecodingError.__derived_enum_equals(_:_:)(__int16 a1, __int16 a2)
{
  if ((a1 & 0x100) != 0)
  {
    if ((_BYTE)a1)
    {
      if (a1 == 1)
      {
        if ((a2 & 0x100) == 0 || a2 != 1) {
          return 0;
        }
      }
      else if ((a2 & 0x100) == 0 || a2 <= 1u)
      {
        return 0;
      }
    }
    else if ((a2 & 0x100) == 0 || (_BYTE)a2)
    {
      return 0;
    }
    return 1;
  }
  else
  {
    if ((a2 & 0x100) != 0) {
      return 0;
    }
    return a1 == a2;
  }
}

BOOL sub_1001E8AD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static Base64.DecodingError.__derived_enum_equals(_:_:)(*a1 | (a1[1] << 8), *a2 | (a2[1] << 8));
}

_WORD *_s13DecodingErrorOwCP(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s13DecodingErrorOwet(unsigned __int16 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  unsigned int v2 = a2 + 0xFFFF;
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF) {
    unsigned int v3 = 2;
  }
  else {
    unsigned int v3 = 4;
  }
  if (v2 < 0xFF0000) {
    unsigned int v3 = 1;
  }
  if (v2 >= 0x10000) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  switch(v4)
  {
    case 1:
      uint64_t v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        return v4;
      }
      goto LABEL_17;
    case 2:
      uint64_t v4 = a1[1];
      if (!a1[1]) {
        return v4;
      }
      goto LABEL_17;
    case 3:
      __break(1u);
      JUMPOUT(0x1001E8BA0);
    case 4:
      uint64_t v4 = *(unsigned int *)(a1 + 1);
      if (v4) {
LABEL_17:
      }
        uint64_t v4 = (*a1 | (v4 << 16)) - 0xFFFF;
      break;
    default:
      return v4;
  }
  return v4;
}

uint64_t _s13DecodingErrorOwst(uint64_t result, int a2, int a3)
{
  unsigned int v3 = a3 + 0xFFFF;
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2)
  {
    unsigned int v7 = ((a2 - 1) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 1;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        return result;
      case 2:
        *(_WORD *)(result + 2) = v7;
        return result;
      case 3:
        goto LABEL_21;
      case 4:
        *(_DWORD *)(result + 2) = v7;
        return result;
      default:
        return result;
    }
  }
  switch(v6)
  {
    case 1:
      *(unsigned char *)(result + 2) = 0;
      break;
    case 2:
      *(_WORD *)(result + 2) = 0;
      break;
    case 3:
LABEL_21:
      __break(1u);
      JUMPOUT(0x1001E8C70);
    case 4:
      *(_DWORD *)(result + 2) = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001E8C98(unsigned __int8 *a1)
{
  if (a1[1]) {
    return (*a1 | (a1[1] << 8)) - 255;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1001E8CB8(unsigned char *result, int a2)
{
  if (a2)
  {
    *unint64_t result = a2 - 1;
    unsigned int v2 = ((a2 - 1) >> 8) + 1;
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  result[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for Base64.DecodingError()
{
  return &type metadata for Base64.DecodingError;
}

void sub_1001E8CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, char a8, uint64_t a9)
{
}

void sub_1001E8CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, char a8, uint64_t a9)
{
  Swift::UInt32 v10 = *(_DWORD *)(a9 + 20);
  uint64_t v79 = a9 + 8;
  uint64_t v77 = *(void *)(a1 + 16);
  if (v77)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v12 = a2;
    uint64_t v13 = sub_1001F435C();
    sub_100210AD0(v13, v14, v15, v10);
    Swift::Int v17 = v16;
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      Swift::Int v17 = sub_1001F47B4(v12);
    }
    swift_release();
    swift_release();
    int v20 = *(_DWORD *)(a9 + 20);
    Swift::UInt32 v10 = v20 + v17;
    unint64_t v21 = a5;
    uint64_t v22 = a6;
    unint64_t v23 = a7;
    if (__CFADD__(v20, v17)) {
      goto LABEL_60;
    }
    Swift::Int v24 = v17;
    *(_DWORD *)(a9 + 20) = v10;
    if ((a8 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v23 = a7;
    uint64_t v22 = a6;
    unint64_t v21 = a5;
    uint64_t v25 = sub_1001F3FD4();
    if ((v26 & 1) == 0) {
      goto LABEL_46;
    }
  }
  Swift::Int v27 = v24;
  Swift::Int v9 = v10;
  uint64_t v28 = sub_1001F4524();
  sub_100210AD0(v28, v29, v79, v10);
  if (v30) {
    sub_1001F42F4(40);
  }
  sub_1001F4B48();
  if (v32) {
    goto LABEL_63;
  }
  *(_DWORD *)(a9 + 20) = v10;
  Swift::Int v24 = v27 + v31;
  if (__OFADD__(v27, v31))
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    return;
  }
  if (!v77)
  {
LABEL_42:
    uint64_t v64 = sub_1001F4188();
    sub_100210AD0(v64, v65, v79, v9);
    if (v66) {
      sub_1001F42F4(41);
    }
    sub_1001F4B48();
    if (v32) {
      goto LABEL_65;
    }
    *(_DWORD *)(a9 + 20) = v9;
    goto LABEL_46;
  }
LABEL_13:
  Swift::Int v70 = v24;
  uint64_t v33 = v77;
  uint64_t v76 = v21 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v75 = (char *)v83 + (HIBYTE(v21) & 0xF);
  uint64_t v74 = (v21 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_bridgeObjectRetain();
  uint64_t v34 = 0;
  Swift::Int v35 = 0;
  do
  {
    uint64_t v36 = *(void *)(a1 + 8 * v34 + 32);
    if (v36 < 0)
    {
      uint64_t v39 = v36 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v41 = *(void *)((v36 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = *(void *)((v36 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      int v42 = *(_DWORD *)((v36 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
      __int16 v43 = *(_WORD *)((v36 & 0x7FFFFFFFFFFFFFFFLL) + 0x24);
      uint64_t v45 = *(void *)((v36 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v44 = *(void *)((v36 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v46 = (v36 & 0x7FFFFFFFFFFFFFFFLL) + 56;
      uint64_t v47 = *(unsigned int *)((v36 & 0x7FFFFFFFFFFFFFFFLL) + 0x38);
      unsigned int v48 = *(unsigned __int16 *)(v46 + 4);
      LODWORD(v46) = *(unsigned __int8 *)(v46 + 6);
      uint64_t v49 = v48 | (v46 << 16);
      char v50 = *(unsigned char *)(v39 + 38);
      uint64_t v93 = 0;
      v94[0] = 0;
      *(void *)((char *)v94 + 7) = 0;
      v94[2] = v45;
      v94[3] = v44;
      uint64_t v80 = v44;
      int v95 = v47;
      char v97 = v46;
      __int16 v96 = v48;
      uint64_t v98 = v41;
      uint64_t v99 = v40;
      char v102 = v50;
      __int16 v101 = v43;
      int v100 = v42;
      uint64_t v103 = 0;
      v104[0] = 0;
      *(void *)((char *)v104 + 7) = 0;
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_retain();
      sub_10026AFB8(&v93);
      sub_1001F4590();
      swift_release();
      uint64_t v51 = swift_bridgeObjectRetain();
      uint64_t v52 = sub_1001E8CFC(v51, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, a9);
      swift_bridgeObjectRelease();
      BOOL v53 = __OFADD__(a9, v52);
      uint64_t v54 = a9 + v52;
      if (v53) {
        goto LABEL_56;
      }
      uint64_t v85 = 0;
      v86[0] = 0;
      *(void *)((char *)v86 + 7) = 0;
      v86[2] = v45;
      v86[3] = v80;
      int v87 = v47;
      char v89 = (v47 | (unint64_t)(v49 << 32)) >> 48;
      __int16 v88 = (v47 | (unint64_t)(v49 << 32)) >> 32;
      uint64_t v90 = 0;
      v91[0] = 0;
      *(void *)((char *)v91 + 7) = 0;
      v91[2] = 0;
      v92[0] = 0;
      *(void *)((char *)v92 + 7) = 0;
      swift_retain();
      sub_10026AFB8(&v85);
      sub_1001F49CC();
      swift_release();
      swift_release_n();
      uint64_t v38 = v54 + a9;
      if (__OFADD__(v54, a9)) {
        goto LABEL_57;
      }
      uint64_t v33 = v77;
      unint64_t v21 = a5;
    }
    else
    {
      memcpy(__dst, (const void *)(v36 + 16), 0x5FuLL);
      swift_retain();
      sub_1001F32FC((uint64_t)__dst);
      sub_10026AFB8(__dst);
      uint64_t v38 = v37;
      sub_1001F3354((uint64_t)__dst);
    }
    BOOL v53 = __OFADD__(v35, v38);
    Swift::Int v55 = v35 + v38;
    if (v53)
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    Swift::Int v9 = *(unsigned int *)(a9 + 20);
    if (v34 >= v77 - 1)
    {
      swift_release();
      Swift::Int v61 = 0;
    }
    else
    {
      if ((v21 & 0x1000000000000000) != 0)
      {
        swift_retain();
        swift_retain();
        v63._object = (void *)v21;
        v63._countAndFlagsBits = a4;
        Swift::Int v61 = ByteBuffer._setStringSlowpath(_:at:)(v63, v9);
        swift_release();
        swift_release();
      }
      else
      {
        if ((v21 & 0x2000000000000000) != 0)
        {
          v83[0] = a4;
          v83[1] = v76;
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          uint32x2_t v59 = v83;
          uint64_t v60 = (uint64_t)v75;
        }
        else
        {
          uint64_t v56 = a4 & 0xFFFFFFFFFFFFLL;
          uint64_t v57 = v74;
          if ((a4 & 0x1000000000000000) == 0) {
            uint64_t v57 = sub_1005E2D30();
          }
          if (v57) {
            uint64_t v58 = v57 + v56;
          }
          else {
            uint64_t v58 = 0;
          }
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          uint32x2_t v59 = (void *)v57;
          uint64_t v60 = v58;
          unint64_t v21 = a5;
        }
        ByteBuffer._setBytes(_:at:)((uint64_t)v59, v60, v9);
        sub_1001F4590();
        swift_release();
        swift_bridgeObjectRelease();
        Swift::Int v61 = v79;
      }
      swift_release();
      int v62 = *(_DWORD *)(a9 + 20);
      Swift::Int v9 = (v62 + v61);
      if (__CFADD__(v62, v61)) {
        goto LABEL_55;
      }
      *(_DWORD *)(a9 + 20) = v9;
    }
    BOOL v53 = __OFADD__(v55, v61);
    Swift::Int v35 = v55 + v61;
    if (v53) {
      goto LABEL_54;
    }
    ++v34;
  }
  while (v33 != v34);
  swift_bridgeObjectRelease();
  Swift::Int v24 = v70 + v35;
  if (__OFADD__(v70, v35)) {
    goto LABEL_61;
  }
  if (a8)
  {
    uint64_t v22 = a6;
    unint64_t v23 = a7;
    goto LABEL_42;
  }
  uint64_t v25 = 0;
  uint64_t v22 = a6;
  unint64_t v23 = a7;
LABEL_46:
  Swift::Int v67 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (v77)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(v22, v23, v79, v9);
    sub_1001F4078();
    swift_release();
    swift_release();
    int v68 = *(_DWORD *)(a9 + 20);
    BOOL v32 = __CFADD__(v68, v9);
    int v69 = v68 + v9;
    if (v32)
    {
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    *(_DWORD *)(a9 + 20) = v69;
  }
  else
  {
    Swift::Int v9 = 0;
  }
  if (__OFADD__(v67, v9)) {
    goto LABEL_59;
  }
}

#error "1001E9504: call analysis failed (funcsize=191)"

void sub_1001E9628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  sub_1001F412C();
  a39 = v41;
  a40 = v45;
  uint64_t v105 = v46;
  unsigned int v106 = v47;
  uint64_t v48 = a41;
  unsigned int v49 = *(_DWORD *)(a41 + 20);
  uint64_t v107 = *(void *)(v50 + 16);
  uint64_t v108 = a41 + 8;
  char v101 = v44;
  if (v107)
  {
    unint64_t v51 = v43;
    uint64_t v52 = v42;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1001F3E08(v52, v51);
    Swift::Int v54 = v53;
    LOBYTE(v52) = v55;
    swift_bridgeObjectRelease();
    if (v52)
    {
      v56._countAndFlagsBits = sub_1001F45A8();
      Swift::Int v54 = ByteBuffer._setStringSlowpath(_:at:)(v56, v57);
    }
    swift_release();
    swift_release();
    sub_1001F436C();
    if (v59)
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    Swift::Int v102 = v54;
    *(_DWORD *)(v48 + 20) = v49;
    if ((v101 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    Swift::Int v102 = 0;
    Swift::Int v60 = 0;
    Swift::Int v61 = 0;
    uint64_t v58 = 0;
    if ((v44 & 1) == 0) {
      goto LABEL_39;
    }
  }
  uint64_t v62 = v58;
  sub_1001F3E08(40, 0xE100000000000000);
  if (v64)
  {
    v65._countAndFlagsBits = 40;
    v65._object = (void *)0xE100000000000000;
    Swift::Int v63 = ByteBuffer._setStringSlowpath(_:at:)(v65, v49);
  }
  int v66 = *(_DWORD *)(v48 + 20);
  BOOL v59 = __CFADD__(v66, v63);
  unsigned int v67 = v66 + v63;
  if (v59)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  *(_DWORD *)(v48 + 20) = v67;
  Swift::Int v68 = v102 + v63;
  if (!__OFADD__(v102, v63))
  {
    if (!v62)
    {
LABEL_28:
      Swift::Int v90 = v67;
      sub_1001F3E08(41, 0xE100000000000000);
      if (v91)
      {
        v92._countAndFlagsBits = 41;
        v92._object = (void *)0xE100000000000000;
        Swift::Int v88 = ByteBuffer._setStringSlowpath(_:at:)(v92, v90);
      }
      int v93 = *(_DWORD *)(v48 + 20);
      BOOL v59 = __CFADD__(v93, v88);
      unsigned int v89 = v93 + v88;
      if (v59) {
        goto LABEL_50;
      }
      *(_DWORD *)(v48 + 20) = v89;
      goto LABEL_32;
    }
    uint64_t v58 = v62;
    v102 += v63;
LABEL_14:
    uint64_t v62 = v58;
    uint64_t v69 = v58 - 1;
    uint64_t v70 = 0;
    Swift::Int v71 = 0;
    uint64_t v72 = (unsigned char *)(swift_bridgeObjectRetain() + 54);
    uint64_t v103 = v69;
    uint64_t v104 = v48;
    do
    {
      int v73 = *(_DWORD *)(v72 - 6);
      __int16 v74 = *((_WORD *)v72 - 1);
      char v75 = *v72;
      a24 = *(void *)(v72 - 22);
      a25 = *(void *)(v72 - 14);
      a26 = v73;
      a27 = v74;
      a28 = v75;
      swift_retain();
      sub_10024DD18(&a24, v48);
      BOOL v77 = __OFADD__(v71, v76);
      Swift::Int v78 = v71 + v76;
      if (v77)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      Swift::Int v79 = *(unsigned int *)(v48 + 20);
      if (v70 >= v69)
      {
        swift_release();
        Swift::Int v81 = 0;
        uint64_t v87 = v62;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_100210AD0(v105, (unint64_t)v106, v108, v79);
        Swift::Int v81 = v80;
        char v83 = v82;
        swift_bridgeObjectRelease();
        if (v83)
        {
          v84._countAndFlagsBits = v105;
          v84._object = v106;
          Swift::Int v81 = ByteBuffer._setStringSlowpath(_:at:)(v84, v79);
        }
        swift_release();
        swift_release();
        swift_release();
        uint64_t v69 = v103;
        uint64_t v48 = v104;
        int v85 = *(_DWORD *)(v104 + 20);
        BOOL v59 = __CFADD__(v85, v81);
        int v86 = v85 + v81;
        uint64_t v87 = v107;
        if (v59) {
          goto LABEL_43;
        }
        *(_DWORD *)(v104 + 20) = v86;
      }
      BOOL v77 = __OFADD__(v78, v81);
      Swift::Int v71 = v78 + v81;
      if (v77) {
        goto LABEL_42;
      }
      v72 += 24;
      ++v70;
      uint64_t v62 = v87;
    }
    while (v87 != v70);
    swift_bridgeObjectRelease();
    Swift::Int v68 = v102 + v71;
    if (__OFADD__(v102, v71)) {
      goto LABEL_47;
    }
    if (v101)
    {
      sub_1001F44B8();
      goto LABEL_28;
    }
    sub_1001F44B8();
LABEL_32:
    Swift::Int v60 = v68 + v88;
    if (__OFADD__(v68, v88))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v62)
    {
      Swift::Int v94 = v89;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_1001F3CF0();
      Swift::Int v61 = v95;
      char v97 = v96;
      swift_bridgeObjectRelease();
      if (v97)
      {
        v98._countAndFlagsBits = sub_1001F4A6C();
        Swift::Int v61 = ByteBuffer._setStringSlowpath(_:at:)(v98, v94);
      }
      swift_release();
      swift_release();
      int v99 = *(_DWORD *)(v48 + 20);
      BOOL v59 = __CFADD__(v99, v61);
      int v100 = v99 + v61;
      if (v59) {
        goto LABEL_51;
      }
      *(_DWORD *)(v48 + 20) = v100;
    }
    else
    {
      Swift::Int v61 = 0;
    }
LABEL_39:
    if (!__OFADD__(v60, v61))
    {
      sub_1001F416C();
      return;
    }
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
}

void sub_1001E9A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,__int16 a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  sub_1001F3C44();
  a42 = v44;
  a43 = v48;
  uint64_t v110 = v49;
  uint64_t v111 = v50;
  uint64_t v51 = a44;
  uint64_t v52 = a44 + 8;
  Swift::Int v53 = *(unsigned int *)(a44 + 20);
  uint64_t v112 = v54;
  uint64_t v113 = a44;
  uint64_t v115 = *(void *)(v54 + 16);
  char v108 = v47;
  if (v115)
  {
    char v55 = v46;
    uint64_t v56 = v45;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v57 = v56;
    uint64_t v58 = sub_1001F45A8();
    sub_100210AD0(v58, v59, v60, v53);
    Swift::Int v62 = v61;
    char v64 = v63;
    swift_bridgeObjectRelease();
    if (v64)
    {
      v65._countAndFlagsBits = v57;
      v65._object = v55;
      Swift::Int v62 = ByteBuffer._setStringSlowpath(_:at:)(v65, v53);
    }
    swift_release();
    swift_release();
    uint64_t v51 = v113;
    int v66 = *(_DWORD *)(v113 + 20);
    LODWORD(v53) = v66 + v62;
    if (__CFADD__(v66, v62))
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    Swift::Int v109 = v62;
    *(_DWORD *)(v113 + 20) = v53;
    if ((v108 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v109 = 0;
    Swift::Int v67 = 0;
    Swift::Int v68 = 0;
    if ((v47 & 1) == 0) {
      goto LABEL_40;
    }
  }
  sub_100210AD0(40, 0xE100000000000000, v52, v53);
  if (v70)
  {
    v71._countAndFlagsBits = 40;
    v71._object = (void *)0xE100000000000000;
    Swift::Int v69 = ByteBuffer._setStringSlowpath(_:at:)(v71, v53);
  }
  int v72 = *(_DWORD *)(v51 + 20);
  Swift::Int v73 = (v72 + v69);
  if (__CFADD__(v72, v69))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  *(_DWORD *)(v51 + 20) = v73;
  BOOL v74 = __OFADD__(v109, v69);
  v109 += v69;
  if (!v74)
  {
    if (!v115)
    {
LABEL_28:
      uint64_t v93 = sub_1001F4188();
      sub_100210AD0(v93, v94, v52, v73);
      if (v96)
      {
        v97._countAndFlagsBits = 41;
        v97._object = (void *)0xE100000000000000;
        Swift::Int v95 = ByteBuffer._setStringSlowpath(_:at:)(v97, v73);
      }
      int v98 = *(_DWORD *)(v51 + 20);
      LODWORD(v73) = v98 + v95;
      if (__CFADD__(v98, v95)) {
        goto LABEL_53;
      }
      *(_DWORD *)(v51 + 20) = v73;
      goto LABEL_33;
    }
LABEL_13:
    uint64_t v114 = v52;
    sub_1001F45F0();
    uint64_t v75 = v112;
    swift_bridgeObjectRetain();
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    Swift::Int v78 = 0;
    do
    {
      uint64_t v79 = v75 + v76;
      uint64_t v80 = *(unsigned int *)(v75 + v76 + 40);
      uint64_t v81 = *(unsigned int *)(v75 + v76 + 44);
      if (v81 < v80)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      int v82 = *(_DWORD *)(v79 + 48);
      int v83 = *(unsigned __int16 *)(v79 + 52);
      int v84 = *(unsigned __int8 *)(v79 + 54);
      if (v82 - (v84 | (v83 << 8)) < v81) {
        goto LABEL_43;
      }
      a23 = *(void *)(v79 + 32);
      a24 = v80;
      a25 = v81;
      a26 = v82;
      a27 = v83;
      a28 = v84;
      a29 = v80;
      a30 = v81;
      swift_retain();
      Swift::Int v85 = sub_10025E0BC(&a23);
      Swift::Int v86 = v78 + v85;
      if (__OFADD__(v78, v85)) {
        goto LABEL_44;
      }
      Swift::Int v73 = *(unsigned int *)(v51 + 20);
      if (v77 >= a20)
      {
        swift_release();
        Swift::Int v88 = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_100210AD0(v110, (unint64_t)v111, v114, v73);
        Swift::Int v88 = v87;
        char v90 = v89;
        swift_bridgeObjectRelease();
        if (v90)
        {
          v91._countAndFlagsBits = v110;
          v91._object = v111;
          Swift::Int v88 = ByteBuffer._setStringSlowpath(_:at:)(v91, v73);
        }
        swift_release();
        swift_release();
        swift_release();
        uint64_t v75 = v112;
        uint64_t v51 = v113;
        int v92 = *(_DWORD *)(v113 + 20);
        Swift::Int v73 = (v92 + v88);
        if (__CFADD__(v92, v88)) {
          goto LABEL_46;
        }
        *(_DWORD *)(v113 + 20) = v73;
      }
      BOOL v74 = __OFADD__(v86, v88);
      Swift::Int v78 = v86 + v88;
      if (v74) {
        goto LABEL_45;
      }
      ++v77;
      v76 += 24;
    }
    while (v115 != v77);
    swift_bridgeObjectRelease();
    BOOL v74 = __OFADD__(v109, v78);
    v109 += v78;
    if (v74) {
      goto LABEL_50;
    }
    if (v108)
    {
      uint64_t v52 = v114;
      goto LABEL_28;
    }
    Swift::Int v95 = 0;
    uint64_t v52 = v114;
LABEL_33:
    Swift::Int v67 = v109 + v95;
    if (__OFADD__(v109, v95))
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v115)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v99 = sub_1001F4B54();
      sub_100210AD0(v99, v100, v52, v73);
      Swift::Int v68 = v101;
      char v103 = v102;
      swift_bridgeObjectRelease();
      if (v103)
      {
        v104._countAndFlagsBits = sub_1001F4B54();
        Swift::Int v68 = ByteBuffer._setStringSlowpath(_:at:)(v104, v73);
      }
      swift_release();
      swift_release();
      int v105 = *(_DWORD *)(v113 + 20);
      BOOL v106 = __CFADD__(v105, v68);
      int v107 = v105 + v68;
      if (v106) {
        goto LABEL_54;
      }
      *(_DWORD *)(v113 + 20) = v107;
    }
    else
    {
      Swift::Int v68 = 0;
    }
LABEL_40:
    if (!__OFADD__(v67, v68))
    {
      sub_1001F3C28();
      return;
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
}

void sub_1001E9E34(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, Swift::String _,uint64_t a21,uint64_t a22,unint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  sub_1001E9E40(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    _,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37);
}

void sub_1001E9E40(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, Swift::String _,uint64_t a21,uint64_t a22,unint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  sub_1001F470C();
  a35 = v37;
  a36 = v41;
  unint64_t v43 = v42;
  uint64_t _a = v44;
  uint64_t v45 = a37;
  uint64_t v46 = a37 + 8;
  Swift::Int v47 = *(unsigned int *)(a37 + 20);
  uint64_t v97 = v48;
  uint64_t v49 = *(void *)(v48 + 16);
  uint64_t v93 = v49;
  char v92 = v40;
  if (v49)
  {
    uint64_t v50 = v39;
    uint64_t v51 = v38;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t __8 = v51;
    sub_1001F3B7C(v51, (unint64_t)v50);
    Swift::Int v53 = v52;
    char v55 = v54;
    swift_bridgeObjectRelease();
    if (v55)
    {
      v56._countAndFlagsBits = __8;
      v56._object = v50;
      Swift::Int v53 = ByteBuffer._setStringSlowpath(_:at:)(v56, v47);
    }
    swift_release();
    swift_release();
    int v57 = *(_DWORD *)(v45 + 20);
    int v58 = v57 + v53;
    uint64_t v49 = v93;
    if (__CFADD__(v57, v53)) {
      goto LABEL_64;
    }
    *(_DWORD *)(v45 + 20) = v58;
    if ((v92 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v53 = 0;
    uint64_t v59 = 0;
    Swift::Int v60 = 0;
    LODWORD(v61) = *(_DWORD *)(a37 + 20);
    if ((v40 & 1) == 0) {
      goto LABEL_49;
    }
  }
  sub_1001F4AE0(40);
  if (v63) {
    Swift::Int v62 = sub_1001F3BCC(40);
  }
  int v64 = *(_DWORD *)(v45 + 20);
  int v58 = v64 + v62;
  if (__CFADD__(v64, v62)) {
    goto LABEL_67;
  }
  *(_DWORD *)(v45 + 20) = v58;
  BOOL v65 = __OFADD__(v53, v62);
  v53 += v62;
  if (v65)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  LODWORD(v61) = v64 + v62;
  Swift::Int v60 = v53;
  if (!v49) {
    goto LABEL_44;
  }
LABEL_13:
  uint64_t v91 = v53;
  uint64_t __8a = v49 - 1;
  swift_bridgeObjectRetain();
  uint64_t v66 = 0;
  Swift::Int v67 = 0;
  LODWORD(v61) = v58;
  do
  {
    unint64_t v68 = 0xE800000000000000;
    uint64_t v69 = 0x534547415353454DLL;
    switch(*(unsigned char *)(v97 + v66 + 32))
    {
      case 1:
        unint64_t v68 = 0xE600000000000000;
        uint64_t v69 = 0x544E45434552;
        break;
      case 2:
        unint64_t v68 = 0xE700000000000000;
        uint64_t v69 = 0x5458454E444955;
        break;
      case 3:
        unint64_t v68 = 0xEB00000000595449;
        uint64_t v69 = 0x44494C4156444955;
        break;
      case 4:
        unint64_t v68 = 0xE600000000000000;
        uint64_t v69 = 0x4E4545534E55;
        break;
      case 5:
        unint64_t v68 = 0xE400000000000000;
        uint64_t v69 = 1163544915;
        break;
      case 6:
        unint64_t v68 = 0xED0000514553444FLL;
        uint64_t v69 = 0x4D54534548474948;
        break;
      case 7:
        unint64_t v68 = 0xEB0000000054494DLL;
        uint64_t v69 = 0x494C444E45505041;
        break;
      default:
        break;
    }
    a22 = v69;
    a23 = v68 & 0x51455F5D4FLL;
    ByteBuffer._setBytes(_:at:)((uint64_t)&a22, (uint64_t)&a22 + (HIBYTE(v68) & 0xF), v61);
    unsigned int v71 = v70;
    swift_bridgeObjectRelease();
    int v72 = *(_DWORD *)(v45 + 20);
    Swift::Int v61 = v72 + v71;
    if (__CFADD__(v72, v71))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    *(_DWORD *)(v45 + 20) = v61;
    BOOL v65 = __OFADD__(v67, v71);
    Swift::Int v73 = v67 + v71;
    if (v65) {
      goto LABEL_59;
    }
    if (v66 >= __8a)
    {
      Swift::Int v78 = 0;
    }
    else
    {
      if ((v43 & 0x1000000000000000) != 0)
      {
        swift_retain();
        swift_retain();
        v81._countAndFlagsBits = _a;
        v81._object = (void *)v43;
        Swift::Int v78 = ByteBuffer._setStringSlowpath(_:at:)(v81, v61);
        swift_release();
        swift_release();
      }
      else
      {
        if ((v43 & 0x2000000000000000) != 0)
        {
          a22 = _a;
          a23 = v43 & 0xFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          ByteBuffer._setBytes(_:at:)((uint64_t)&a22, (uint64_t)&a22 + (HIBYTE(v43) & 0xF), v61);
          LODWORD(v61) = v79;
        }
        else
        {
          uint64_t v74 = _a & 0xFFFFFFFFFFFFLL;
          uint64_t v75 = (v43 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((_a & 0x1000000000000000) == 0) {
            uint64_t v75 = sub_1005E2D30();
          }
          if (v75) {
            uint64_t v76 = v75 + v74;
          }
          else {
            uint64_t v76 = 0;
          }
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          ByteBuffer._setBytes(_:at:)(v75, v76, v61);
          LODWORD(v61) = v77;
          uint64_t v49 = v93;
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        Swift::Int v78 = v61;
      }
      sub_1001F436C();
      if (v80) {
        goto LABEL_61;
      }
      *(_DWORD *)(v45 + 20) = v61;
    }
    BOOL v65 = __OFADD__(v73, v78);
    Swift::Int v67 = v73 + v78;
    if (v65) {
      goto LABEL_60;
    }
    ++v66;
  }
  while (v49 != v66);
  swift_bridgeObjectRelease();
  Swift::Int v60 = v91 + v67;
  if (__OFADD__(v91, v67)) {
    goto LABEL_65;
  }
  if (v92)
  {
LABEL_44:
    sub_1001F4AE0(41);
    if (v82) {
      sub_1001F3BCC(41);
    }
    sub_1001F40E0();
    if (!v80)
    {
      *(_DWORD *)(v45 + 20) = v61;
      goto LABEL_49;
    }
LABEL_69:
    __break(1u);
    JUMPOUT(0x1001EA364);
  }
  uint64_t v59 = 0;
LABEL_49:
  Swift::Int v83 = v60 + v59;
  if (__OFADD__(v60, v59)) {
    goto LABEL_62;
  }
  if (v93)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v84 = sub_1001F4700();
    sub_100210AD0(v84, v85, v46, v61);
    Swift::Int v87 = v86;
    char v89 = v88;
    swift_bridgeObjectRelease();
    if (v89) {
      Swift::Int v87 = sub_1001F4094();
    }
    swift_release();
    swift_release();
    sub_1001F4804();
    if (!v80)
    {
      *(_DWORD *)(v45 + 20) = v90;
      goto LABEL_56;
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  Swift::Int v87 = 0;
LABEL_56:
  if (__OFADD__(v83, v87)) {
    goto LABEL_63;
  }
  sub_1001F45D4();
}

#error "1001EA620: call analysis failed (funcsize=246)"

void sub_1001EA76C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, char a8, uint64_t a9)
{
  char v9 = a8;
  uint64_t v11 = a9 + 8;
  Swift::Int v12 = *(unsigned int *)(a9 + 20);
  uint64_t v88 = *(void *)(a1 + 16);
  if (v88)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1001F4154(a2, a3);
    Swift::Int v16 = v15;
    char v18 = v17;
    swift_bridgeObjectRelease();
    if (v18) {
      Swift::Int v16 = sub_1001F3D10(a2, a3);
    }
    swift_release();
    swift_release();
    int v19 = *(_DWORD *)(a9 + 20);
    LODWORD(v12) = v19 + v16;
    if (__CFADD__(v19, v16)) {
      goto LABEL_70;
    }
    char v9 = a8;
    Swift::Int v81 = v16;
    *(_DWORD *)(a9 + 20) = v12;
    uint64_t v20 = a6;
    if ((v9 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v20 = a6;
    Swift::Int v81 = 0;
    uint64_t v21 = 0;
    Swift::Int v22 = 0;
    LODWORD(v23) = *(_DWORD *)(a9 + 20);
    if ((a8 & 1) == 0) {
      goto LABEL_54;
    }
  }
  uint64_t v24 = sub_1001F4B00();
  sub_100210AD0(v24, v25, v26, v27);
  if (v29) {
    Swift::Int v28 = sub_1001F3C0C(40);
  }
  int v30 = *(_DWORD *)(a9 + 20);
  Swift::Int v12 = (v30 + v28);
  if (__CFADD__(v30, v28)) {
    goto LABEL_73;
  }
  *(_DWORD *)(a9 + 20) = v12;
  Swift::Int v22 = v81 + v28;
  if (__OFADD__(v81, v28))
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    return;
  }
  LODWORD(v23) = v30 + v28;
  v81 += v28;
  if (!v88)
  {
LABEL_49:
    uint64_t v69 = sub_1001F4744();
    sub_100210AD0(v69, v70, v71, v72);
    if (v73) {
      sub_1001F3C0C(41);
    }
    sub_1001F44FC();
    if (!v55)
    {
      *(_DWORD *)(a9 + 20) = v23;
      goto LABEL_54;
    }
    goto LABEL_75;
  }
LABEL_13:
  char v79 = v9;
  unint64_t v78 = a7;
  sub_1001F4864();
  Swift::Int v83 = (char *)&v92 + v31;
  unint64_t v84 = v32;
  uint64_t v82 = (v33 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_bridgeObjectRetain();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  Swift::Int v36 = 0;
  LODWORD(v23) = v12;
  do
  {
    Swift::UInt32 v89 = v23;
    uint64_t v37 = *(void *)(a1 + v34 + 32);
    uint64_t v39 = *(unsigned int *)(a1 + v34 + 40);
    uint64_t v38 = *(unsigned int *)(a1 + v34 + 44);
    int v40 = *(_DWORD *)(a1 + v34 + 48);
    uint64_t v41 = *(unsigned __int16 *)(a1 + v34 + 52);
    uint64_t v42 = *(unsigned __int8 *)(a1 + v34 + 54);
    uint64_t v91 = v37;
    if (v38 == v39
      || (swift_beginAccess(),
          uint64_t v37 = v91,
          uint64_t v43 = *(void *)(v91 + 24) + (v42 | (v41 << 8)),
          uint64_t v44 = v43 + v39,
          *(unsigned char *)(v43 + v39) != 92))
    {
      if (v38 < v39) {
        goto LABEL_63;
      }
      if (v40 - (v42 | (v41 << 8)) < v38) {
        goto LABEL_64;
      }
      uint64_t v94 = v37;
      int v95 = v39;
      int v96 = v38;
      int v97 = v40;
      __int16 v98 = v41;
      char v99 = v42;
      uint64_t v100 = v39;
      uint64_t v101 = v38;
      swift_retain();
      uint64_t v45 = a9;
      Swift::Int v49 = sub_10025E0BC(&v94);
      goto LABEL_24;
    }
    uint64_t v45 = a9;
    if (*(unsigned char *)a9 != 1)
    {
      uint64_t v64 = v43 + v38;
      swift_retain();
      ByteBuffer._setBytes(_:at:)(v44, v64, v23);
      int v66 = *(_DWORD *)(a9 + 20);
      BOOL v55 = __CFADD__(v66, v65);
      int v67 = v66 + v65;
      if (v55) {
        goto LABEL_67;
      }
      Swift::Int v49 = v65;
      *(_DWORD *)(a9 + 20) = v67;
LABEL_24:
      unint64_t v53 = a5;
      goto LABEL_25;
    }
    uint64_t v92 = 91;
    unint64_t v93 = 0xE100000000000000;
    swift_retain();
    v102._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v102);
    swift_bridgeObjectRelease();
    sub_1001F46CC();
    uint64_t v46 = v92;
    Swift::Int v47 = (void *)v93;
    swift_bridgeObjectRetain();
    sub_100210AD0(v46, (unint64_t)v47, a9 + 8, v89);
    Swift::Int v49 = v48;
    char v51 = v50;
    swift_bridgeObjectRelease();
    if (v51)
    {
      v52._countAndFlagsBits = v46;
      v52._object = v47;
      Swift::Int v49 = ByteBuffer._setStringSlowpath(_:at:)(v52, v89);
    }
    swift_bridgeObjectRelease();
    uint64_t v45 = a9;
    unint64_t v53 = a5;
    sub_1001F4630();
    if (v55) {
      goto LABEL_66;
    }
    *(_DWORD *)(a9 + 20) = v54;
LABEL_25:
    Swift::Int v56 = v36 + v49;
    if (__OFADD__(v36, v49))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    Swift::Int v23 = *(unsigned int *)(v45 + 20);
    if (v35 >= v88 - 1)
    {
      swift_release();
      Swift::Int v12 = 0;
    }
    else
    {
      if ((v53 & 0x1000000000000000) != 0)
      {
        swift_retain();
        swift_retain();
        v68._countAndFlagsBits = a4;
        v68._object = (void *)v53;
        Swift::Int v12 = ByteBuffer._setStringSlowpath(_:at:)(v68, v23);
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        if ((v53 & 0x2000000000000000) != 0)
        {
          uint64_t v92 = a4;
          unint64_t v93 = v84;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          Swift::Int v61 = &v92;
          uint64_t v62 = (uint64_t)v83;
        }
        else
        {
          uint64_t v57 = v82;
          if ((a4 & 0x1000000000000000) == 0) {
            uint64_t v57 = sub_1005E2D30();
          }
          sub_1001F495C();
          if (v59) {
            uint64_t v60 = 0;
          }
          else {
            uint64_t v60 = v58;
          }
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          Swift::Int v61 = (uint64_t *)v57;
          uint64_t v62 = v60;
        }
        ByteBuffer._setBytes(_:at:)((uint64_t)v61, v62, v23);
        LODWORD(v12) = v63;
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        Swift::Int v12 = v12;
      }
      sub_1001F49C0();
      if (v55) {
        goto LABEL_65;
      }
      *(_DWORD *)(v45 + 20) = v23;
    }
    Swift::Int v36 = v56 + v12;
    if (__OFADD__(v56, v12)) {
      goto LABEL_62;
    }
    ++v35;
    v34 += 24;
  }
  while (v88 != v35);
  swift_bridgeObjectRelease();
  Swift::Int v22 = v81 + v36;
  if (__OFADD__(v81, v36)) {
    goto LABEL_71;
  }
  if (v79)
  {
    a7 = v78;
    uint64_t v20 = a6;
    uint64_t v11 = a9 + 8;
    goto LABEL_49;
  }
  uint64_t v21 = 0;
  a7 = v78;
  uint64_t v20 = a6;
  uint64_t v11 = a9 + 8;
LABEL_54:
  BOOL v74 = __OFADD__(v22, v21);
  Swift::Int v75 = v22 + v21;
  if (v74)
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v88)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(v20, a7, v11, v23);
    sub_1001F4260();
    swift_release();
    swift_release();
    int v76 = *(_DWORD *)(a9 + 20);
    BOOL v55 = __CFADD__(v76, v12);
    int v77 = v76 + v12;
    if (!v55)
    {
      *(_DWORD *)(a9 + 20) = v77;
      goto LABEL_59;
    }
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  Swift::Int v12 = 0;
LABEL_59:
  if (__OFADD__(v75, v12)) {
    goto LABEL_69;
  }
}

void sub_1001EAD94(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, Swift::String _,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  sub_1001F3DDC();
  a41 = v44;
  a42 = v45;
  uint64_t v132 = v46;
  uint64_t _a = v47;
  uint64_t v49 = v48;
  sub_1001F4BD8();
  uint64_t v53 = v52 + 8;
  Swift::Int v54 = *(unsigned int *)(v52 + 20);
  uint64_t v136 = v52;
  uint64_t v133 = *(void *)(v55 + 16);
  char v127 = v56;
  if (v133)
  {
    uint64_t v57 = v51;
    uint64_t v58 = v50;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(v58, (unint64_t)v57, v53, v54);
    Swift::Int v60 = v59;
    uint64_t v61 = v53;
    char v63 = v62;
    swift_bridgeObjectRelease();
    if (v63)
    {
      v64._countAndFlagsBits = v58;
      v64._object = v57;
      Swift::Int v60 = ByteBuffer._setStringSlowpath(_:at:)(v64, v54);
    }
    swift_release();
    swift_release();
    uint64_t v53 = v61;
    unint64_t v65 = v132;
    sub_1001F41B8();
    LODWORD(v54) = v67 + v60;
    if (__CFADD__(v67, v60))
    {
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    *(_DWORD *)(v66 + 20) = v54;
    if ((v127 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v60 = 0;
    uint64_t v68 = sub_1001F4530();
    Swift::Int v69 = v54;
    unint64_t v65 = v132;
    if ((v70 & 1) == 0) {
      goto LABEL_52;
    }
  }
  LODWORD(v71) = v54;
  sub_100210AD0(40, 0xE100000000000000, v53, v54);
  if (v72)
  {
    v73._countAndFlagsBits = sub_1001F3D44();
    ByteBuffer._setStringSlowpath(_:at:)(v73, v74);
  }
  sub_1001F41B8();
  if (__CFADD__(v76, v75)) {
    goto LABEL_74;
  }
  *(_DWORD *)(v77 + 20) = v76 + v75;
  BOOL v78 = __OFADD__(v60, v75);
  v60 += v75;
  if (!v78)
  {
    Swift::Int v43 = v60;
    if (v133)
    {
LABEL_13:
      uint64_t v126 = v60;
      uint64_t v134 = v53;
      uint64_t v129 = (char *)&a27 + (HIBYTE(v65) & 0xF);
      uint64_t v130 = v65 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v128 = (v65 & 0xFFFFFFFFFFFFFFFLL) + 32;
      swift_bridgeObjectRetain();
      uint64_t v79 = v49;
      uint64_t v80 = 0;
      Swift::Int v71 = 0;
      Swift::Int v81 = (uint64_t *)(v79 + 48);
      uint64_t v82 = v136;
      do
      {
        uint64_t v84 = *(v81 - 2);
        unint64_t v83 = *(v81 - 1);
        uint64_t v135 = *v81;
        swift_bridgeObjectRetain();
        sub_1001F4154(v84, v83);
        if (v86) {
          Swift::Int v85 = sub_1001F3D10(v84, v83);
        }
        Swift::Int v87 = v85;
        int v88 = *(_DWORD *)(v82 + 20);
        if (__CFADD__(v88, v85))
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        *(_DWORD *)(v82 + 20) = v88 + v85;
        sub_1001F4728(32);
        if (v89) {
          sub_1001F3D28(32);
        }
        sub_1001F4768();
        if (v91) {
          goto LABEL_62;
        }
        *(_DWORD *)(v82 + 20) = v134;
        Swift::Int v92 = v87 + v90;
        if (__OFADD__(v87, v90)) {
          goto LABEL_63;
        }
        a27 = v135;
        uint64_t v93 = sub_1005E3230();
        int v95 = (void *)v94;
        sub_100210AD0(v93, v94, v134, v134);
        if (v97)
        {
          v98._countAndFlagsBits = v93;
          v98._object = v95;
          Swift::Int v96 = ByteBuffer._setStringSlowpath(_:at:)(v98, v134);
        }
        Swift::Int v99 = v96;
        swift_bridgeObjectRelease();
        sub_1001F41B8();
        Swift::Int v69 = (v101 + v99);
        if (__CFADD__(v101, v99)) {
          goto LABEL_64;
        }
        *(_DWORD *)(v100 + 20) = v69;
        Swift::Int v102 = v92 + v99;
        if (__OFADD__(v92, v99)) {
          goto LABEL_65;
        }
        Swift::Int v103 = v71 + v102;
        if (__OFADD__(v71, v102)) {
          goto LABEL_66;
        }
        if (v80 >= v133 - 1)
        {
          swift_bridgeObjectRelease();
          Swift::Int v109 = 0;
          uint64_t v82 = v136;
        }
        else
        {
          uint64_t v82 = v136;
          if ((v132 & 0x1000000000000000) != 0)
          {
            swift_retain();
            swift_retain();
            v112._countAndFlagsBits = _a;
            v112._object = (void *)v132;
            Swift::Int v109 = ByteBuffer._setStringSlowpath(_:at:)(v112, v69);
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
          }
          else
          {
            if ((v132 & 0x2000000000000000) != 0)
            {
              a27 = _a;
              a28 = v130;
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              sub_1001F48A0((uint64_t)&a27, (uint64_t)v129);
              unsigned int v108 = v110;
            }
            else
            {
              uint64_t v104 = _a & 0xFFFFFFFFFFFFLL;
              uint64_t v105 = v128;
              if ((_a & 0x1000000000000000) == 0) {
                uint64_t v105 = sub_1005E2D30();
              }
              if (v105) {
                uint64_t v106 = v105 + v104;
              }
              else {
                uint64_t v106 = 0;
              }
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              sub_1001F48A0(v105, v106);
              unsigned int v108 = v107;
            }
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            Swift::Int v109 = v108;
          }
          int v111 = *(_DWORD *)(v136 + 20);
          Swift::Int v69 = (v111 + v109);
          if (__CFADD__(v111, v109)) {
            goto LABEL_68;
          }
          *(_DWORD *)(v136 + 20) = v69;
        }
        Swift::Int v71 = v103 + v109;
        if (__OFADD__(v103, v109)) {
          goto LABEL_67;
        }
        v81 += 3;
        ++v80;
      }
      while (v133 != v80);
      swift_bridgeObjectRelease();
      Swift::Int v43 = v126 + v71;
      if (__OFADD__(v126, v71)) {
        goto LABEL_72;
      }
      if (v127)
      {
        uint64_t v53 = v134;
        goto LABEL_47;
      }
      uint64_t v68 = 0;
      uint64_t v53 = v134;
      goto LABEL_52;
    }
LABEL_47:
    uint64_t v113 = sub_1001F4110();
    sub_100210AD0(v113, v114, v53, v71);
    if (v115)
    {
      v116._countAndFlagsBits = sub_1001F3C60();
      ByteBuffer._setStringSlowpath(_:at:)(v116, v117);
    }
    sub_1001F41B8();
    Swift::Int v69 = (v119 + v68);
    if (__CFADD__(v119, v68)) {
      goto LABEL_76;
    }
    *(_DWORD *)(v118 + 20) = v69;
LABEL_52:
    Swift::Int v120 = v43 + v68;
    if (__OFADD__(v43, v68))
    {
LABEL_69:
      __break(1u);
    }
    else
    {
      if (v133)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v121 = sub_1001F4700();
        sub_100210AD0(v121, v122, v53, v69);
        sub_1001F463C();
        if (v42)
        {
          v123._countAndFlagsBits = sub_1001F4700();
          Swift::Int v69 = ByteBuffer._setStringSlowpath(_:at:)(v123, v69);
        }
        swift_release();
        swift_release();
        int v124 = *(_DWORD *)(v136 + 20);
        BOOL v91 = __CFADD__(v124, v69);
        int v125 = v124 + v69;
        if (v91) {
          goto LABEL_73;
        }
        *(_DWORD *)(v136 + 20) = v125;
      }
      else
      {
        Swift::Int v69 = 0;
      }
      if (!__OFADD__(v120, v69))
      {
        sub_1001F3E90();
        return;
      }
    }
    __break(1u);
    goto LABEL_71;
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
}

void sub_1001EB2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001F412C();
  uint64_t v21 = v20;
  uint64_t v75 = v22;
  int v76 = v23;
  sub_1001F4BD8();
  uint64_t v25 = v24 + 8;
  uint64_t v79 = v24;
  sub_1001F4BCC();
  uint64_t v78 = v30;
  char v73 = v29;
  unint64_t v72 = v28;
  if (v30)
  {
    unint64_t v31 = v27;
    uint64_t v32 = v26;
    uint64_t v33 = v21;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v34 = v32;
    sub_1001F4154(v32, v31);
    Swift::Int v36 = v35;
    char v38 = v37;
    swift_bridgeObjectRelease();
    if (v38) {
      Swift::Int v36 = sub_1001F3D10(v34, v31);
    }
    swift_release();
    swift_release();
    int v39 = *(_DWORD *)(v79 + 20);
    if (__CFADD__(v39, v36))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v21 = v33;
    Swift::Int v74 = v36;
    *(_DWORD *)(v79 + 20) = v39 + v36;
    unint64_t v40 = v72;
    if ((v73 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    unint64_t v40 = v28;
    Swift::Int v74 = 0;
    Swift::Int v41 = 0;
    Swift::Int v42 = 0;
    if ((v29 & 1) == 0) {
      goto LABEL_39;
    }
  }
  sub_1001F4154(40, 0xE100000000000000);
  if (v44) {
    Swift::Int v43 = sub_1001F3C0C(40);
  }
  uint64_t v45 = v79;
  int v46 = *(_DWORD *)(v79 + 20);
  if (__CFADD__(v46, v43))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  *(_DWORD *)(v79 + 20) = v46 + v43;
  Swift::Int v47 = v74 + v43;
  if (!__OFADD__(v74, v43))
  {
    if (!v78)
    {
LABEL_27:
      sub_1001F4154(41, 0xE100000000000000);
      if (v63) {
        Swift::Int v62 = sub_1001F3C0C(41);
      }
      int v64 = *(_DWORD *)(v45 + 20);
      if (__CFADD__(v64, v62)) {
        goto LABEL_50;
      }
      *(_DWORD *)(v45 + 20) = v64 + v62;
      goto LABEL_32;
    }
    v74 += v43;
LABEL_14:
    uint64_t v77 = v25;
    uint64_t v71 = v21;
    sub_1001F45F0();
    uint64_t v48 = 0;
    Swift::Int v49 = 0;
    uint64_t v50 = swift_bridgeObjectRetain() + 54;
    do
    {
      swift_beginAccess();
      swift_retain();
      unint64_t v51 = sub_1005E1D70();
      Swift::Int v53 = sub_10025DCBC(v51, v52);
      swift_bridgeObjectRelease();
      Swift::Int v54 = v49 + v53;
      if (__OFADD__(v49, v53))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      Swift::Int v55 = *(unsigned int *)(v79 + 20);
      if (v48 >= a20)
      {
        swift_release();
        Swift::Int v57 = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_100210AD0(v75, (unint64_t)v76, v77, v55);
        Swift::Int v57 = v56;
        char v59 = v58;
        swift_bridgeObjectRelease();
        if (v59)
        {
          v60._countAndFlagsBits = v75;
          v60._object = v76;
          Swift::Int v57 = ByteBuffer._setStringSlowpath(_:at:)(v60, v55);
        }
        swift_release();
        swift_release();
        swift_release();
        int v61 = *(_DWORD *)(v79 + 20);
        if (__CFADD__(v61, v57)) {
          goto LABEL_43;
        }
        *(_DWORD *)(v79 + 20) = v61 + v57;
      }
      Swift::Int v49 = v54 + v57;
      if (__OFADD__(v54, v57)) {
        goto LABEL_42;
      }
      v50 += 24;
      ++v48;
    }
    while (v78 != v48);
    swift_bridgeObjectRelease();
    Swift::Int v47 = v74 + v49;
    if (__OFADD__(v74, v49)) {
      goto LABEL_47;
    }
    if (v73)
    {
      uint64_t v21 = v71;
      unint64_t v40 = v72;
      uint64_t v45 = v79;
      goto LABEL_27;
    }
    Swift::Int v62 = 0;
    uint64_t v21 = v71;
    unint64_t v40 = v72;
LABEL_32:
    Swift::Int v41 = v47 + v62;
    if (__OFADD__(v47, v62))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v78)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_1001F4154(v21, v40);
      Swift::Int v42 = v65;
      char v67 = v66;
      swift_bridgeObjectRelease();
      if (v67) {
        Swift::Int v42 = sub_1001F3D10(v21, v40);
      }
      swift_release();
      swift_release();
      int v68 = *(_DWORD *)(v79 + 20);
      BOOL v69 = __CFADD__(v68, v42);
      int v70 = v68 + v42;
      if (v69) {
        goto LABEL_51;
      }
      *(_DWORD *)(v79 + 20) = v70;
    }
    else
    {
      Swift::Int v42 = 0;
    }
LABEL_39:
    if (!__OFADD__(v41, v42))
    {
      sub_1001F416C();
      return;
    }
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
}

#error "1001EB710: call analysis failed (funcsize=183)"

#error "1001EBBE8: call analysis failed (funcsize=280)"

#error "1001EBFE4: call analysis failed (funcsize=188)"

void sub_1001EC104(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, int a8, uint64_t a9)
{
  _._uint64_t countAndFlagsBits = a4;
  _._object = a5;
  uint64_t v9 = a9;
  uint64_t v11 = a9 + 8;
  Swift::Int v10 = *(void *)(a9 + 8);
  uint64_t v12 = *(unsigned int *)(a9 + 20);
  v103._object = a1;
  uint64_t v104 = a7;
  uint64_t v113 = a9;
  uint64_t v117 = a1[2];
  uint64_t v118 = a9 + 8;
  uint64_t v105 = a6;
  if (v117)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(a2, a3, a9 + 8, v12);
    Swift::Int v17 = v16;
    char v19 = v18;
    uint64_t v115 = 0;
    swift_bridgeObjectRelease();
    if (v19)
    {
      v20._uint64_t countAndFlagsBits = sub_1001F435C();
      Swift::Int v17 = ByteBuffer._setStringSlowpath(_:at:)(v20, v21);
    }
    swift_release();
    swift_release();
    int v22 = a8;
    uint64_t v9 = a9;
    int v23 = *(_DWORD *)(a9 + 20);
    LODWORD(v12) = v23 + v17;
    unint64_t v25 = v104;
    uint64_t v24 = v105;
    if (__CFADD__(v23, v17)) {
      goto LABEL_86;
    }
    *(_DWORD *)(a9 + 20) = v12;
    uint64_t v11 = a9 + 8;
    if ((v22 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v25 = a7;
    uint64_t v24 = a6;
    LOBYTE(v115) = 0;
    Swift::Int v17 = 0;
    uint64_t v26 = sub_1001F4530();
    Swift::Int v27 = v12;
    int v22 = v28;
    if ((v28 & 1) == 0) {
      goto LABEL_67;
    }
  }
  sub_100210AD0(40, 0xE100000000000000, v11, v12);
  if (v30)
  {
    v31._uint64_t countAndFlagsBits = sub_1001F3D44();
    Swift::Int v29 = ByteBuffer._setStringSlowpath(_:at:)(v31, v32);
  }
  int v33 = *(_DWORD *)(v9 + 20);
  LODWORD(v12) = v33 + v29;
  if (__CFADD__(v33, v29)) {
    goto LABEL_89;
  }
  *(_DWORD *)(v9 + 20) = v12;
  BOOL v34 = __OFADD__(v17, v29);
  v17 += v29;
  if (v34)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    return;
  }
  uint64_t v115 = 0;
  Swift::Int v10 = v17;
  if (!v117)
  {
LABEL_62:
    uint64_t v86 = sub_1001F4110();
    sub_100210AD0(v86, v87, v11, v12);
    if (v88)
    {
      v89._uint64_t countAndFlagsBits = sub_1001F3C60();
      uint64_t v26 = ByteBuffer._setStringSlowpath(_:at:)(v89, v90);
    }
    int v91 = *(_DWORD *)(v9 + 20);
    Swift::Int v27 = (v91 + v26);
    if (__CFADD__(v91, v26)) {
      goto LABEL_91;
    }
    *(_DWORD *)(v9 + 20) = v27;
    goto LABEL_67;
  }
LABEL_13:
  *(void *)Swift::String v98 = v17;
  HIDWORD(v97) = v22;
  uint64_t v116 = v117 - 1;
  v103._uint64_t countAndFlagsBits = (unint64_t)&countAndFlagsBits | 0xB;
  Swift::Int v102 = &v128;
  unint64_t v108 = (unint64_t)&countAndFlagsBits | 0xA;
  sub_1001F4864();
  uint64_t v111 = v36 + v35;
  uint64_t v112 = v37;
  uint64_t v109 = _._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  uint64_t v110 = (v38 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  Swift::Int v41 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  __n128 v100 = (__n128)xmmword_1005F6890;
  __n128 v99 = (__n128)xmmword_1005F68A0;
  __n128 v106 = (__n128)xmmword_1005F68B0;
  LODWORD(v27) = v12;
  do
  {
    uint64_t v42 = *(v41 - 2);
    uint64_t v12 = *(v41 - 1);
    uint64_t v43 = *v41;
    uint64_t v44 = v41[1];
    unint64_t v46 = v41[2];
    uint64_t v45 = v41[3];
    uint64_t v47 = v41[4];
    unint64_t v48 = v41[5];
    uint64_t v125 = *v41;
    uint64_t v126 = v42;
    uint64_t v123 = v45;
    uint64_t v124 = v44;
    unint64_t v121 = v48;
    uint64_t v122 = v47;
    if (v46 >> 62)
    {
      if (v46 >> 62 == 1)
      {
        v129[0] = *(v41 - 2);
        v129[1] = v12;
        v129[2] = v43;
        v129[3] = v44;
        char v130 = v46 & 1;
        uint64_t v131 = v45;
        uint64_t v132 = v47;
        unint64_t v133 = v48;
        sub_1001F3560(v42, v12, v43, v44, v46, v45, v47, v48);
        sub_100290DC4(v129);
      }
      else
      {
        unint64_t v68 = v45 | v47 | v48;
        if (v46 == 0x8000000000000000 && (v43 | v12 | v42 | v44 | v68) == 0)
        {
          uint64_t v74 = sub_1001F4810(v106);
          sub_1001F48B8(v74, v108);
          int v75 = *(_DWORD *)(v9 + 20);
          BOOL v57 = __CFADD__(v75, v49);
          int v73 = v75 + v49;
          if (v57) {
            goto LABEL_81;
          }
        }
        else
        {
          BOOL v70 = v46 == 0x8000000000000000 && v42 == 1;
          if (!v70 || v43 | v12 | v44 | v68)
          {
            uint64_t v76 = sub_1001F4810(v100);
            sub_1001F48B8(v76, v103._countAndFlagsBits);
            int v77 = *(_DWORD *)(v9 + 20);
            BOOL v57 = __CFADD__(v77, v49);
            int v73 = v77 + v49;
            if (v57) {
              goto LABEL_83;
            }
          }
          else
          {
            uint64_t v71 = sub_1001F4810(v99);
            sub_1001F48B8(v71, (uint64_t)v102);
            int v72 = *(_DWORD *)(v9 + 20);
            BOOL v57 = __CFADD__(v72, v49);
            int v73 = v72 + v49;
            if (v57) {
              goto LABEL_82;
            }
          }
        }
        Swift::Int v49 = v49;
        *(_DWORD *)(v9 + 20) = v73;
      }
    }
    else
    {
      uint64_t v119 = *(v41 - 1);
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1001F4838();
      sub_100210AD0(v50, v51, v11, v27);
      if (v53)
      {
        v54._uint64_t countAndFlagsBits = sub_1001F4838();
        Swift::Int v52 = ByteBuffer._setStringSlowpath(_:at:)(v54, v27);
      }
      Swift::Int v55 = v52;
      int v56 = *(_DWORD *)(v9 + 20);
      BOOL v57 = __CFADD__(v56, v52);
      int v58 = v56 + v52;
      if (v57) {
        goto LABEL_79;
      }
      *(_DWORD *)(v9 + 20) = v58;
      sub_1001F41F4();
      sub_1001E9E40(v59, v60, v61, v62, v63, v64, v65, v66, v9, v96, v97, v98[0], v98[1], v99.n128_i64[0], v99.n128_i64[1], v100.n128_i64[0], v100.n128_i64[1], v101, (uint64_t)v102,
        v103,
        v104,
        v105,
        v106.n128_u64[0],
        v106.n128_i64[1],
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        _._countAndFlagsBits,
        (uint64_t)_._object,
        v115,
        v116,
        v117,
        v118);
      BOOL v34 = __OFADD__(v55, v67);
      Swift::Int v49 = v55 + v67;
      if (v34) {
        goto LABEL_80;
      }
      uint64_t v12 = v119;
    }
    uint64_t v78 = v40 + v49;
    if (__OFADD__(v40, v49))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    Swift::Int v27 = *(unsigned int *)(v9 + 20);
    if (v39 >= v116)
    {
      sub_1001F34E8(v126, v12, v125, v124, v46, v123, v122, v121);
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v120 = v12;
      LODWORD(v12) = _._object;
      if (((uint64_t)_._object & 0x1000000000000000) != 0)
      {
        swift_retain();
        swift_retain();
        ByteBuffer._setStringSlowpath(_:at:)(_, v27);
        sub_1001F48FC();
        swift_release();
      }
      else
      {
        if (((uint64_t)_._object & 0x2000000000000000) != 0)
        {
          uint64_t countAndFlagsBits = _._countAndFlagsBits;
          uint64_t v128 = v112;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          sub_1001F48B8((uint64_t)&countAndFlagsBits, v111);
          unsigned int v83 = v84;
        }
        else
        {
          uint64_t v79 = v109;
          uint64_t v80 = v110;
          if ((_._countAndFlagsBits & 0x1000000000000000) == 0)
          {
            uint64_t v80 = sub_1005E2D30();
            LODWORD(v12) = _._object;
          }
          if (v80) {
            uint64_t v81 = v80 + v79;
          }
          else {
            uint64_t v81 = 0;
          }
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          ByteBuffer._setBytes(_:at:)(v80, v81, v27);
          unsigned int v83 = v82;
          uint64_t v9 = v113;
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v11 = v83;
      }
      sub_1001F34E8(v126, v120, v125, v124, v46, v123, v122, v121);
      int v85 = *(_DWORD *)(v9 + 20);
      Swift::Int v27 = (v85 + v11);
      if (__CFADD__(v85, v11)) {
        goto LABEL_78;
      }
      *(_DWORD *)(v9 + 20) = v27;
    }
    uint64_t v40 = v78 + v11;
    if (__OFADD__(v78, v11)) {
      goto LABEL_77;
    }
    v41 += 8;
    ++v39;
    uint64_t v11 = v118;
  }
  while (v117 != v39);
  swift_bridgeObjectRelease();
  Swift::Int v10 = *(void *)v98 + v40;
  if (__OFADD__(*(void *)v98, v40)) {
    goto LABEL_87;
  }
  uint64_t v24 = v105;
  if ((v97 & 0x100000000) != 0)
  {
    unint64_t v25 = v104;
    goto LABEL_62;
  }
  uint64_t v26 = 0;
  unint64_t v25 = v104;
LABEL_67:
  Swift::Int v92 = v10 + v26;
  if (__OFADD__(v10, v26))
  {
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (v117)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(v24, v25, v118, v27);
    sub_1001F463C();
    if (v115)
    {
      v93._uint64_t countAndFlagsBits = sub_1001F4700();
      Swift::Int v27 = ByteBuffer._setStringSlowpath(_:at:)(v93, v27);
    }
    swift_release();
    swift_release();
    int v94 = *(_DWORD *)(v9 + 20);
    BOOL v57 = __CFADD__(v94, v27);
    int v95 = v94 + v27;
    if (v57) {
      goto LABEL_88;
    }
    *(_DWORD *)(v9 + 20) = v95;
  }
  else
  {
    Swift::Int v27 = 0;
  }
  if (__OFADD__(v92, v27)) {
    goto LABEL_85;
  }
}

void sub_1001EC770(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9)
{
  uint64_t v98 = a6;
  uint64_t v106 = a4;
  uint64_t v107 = a5;
  uint64_t v10 = a9;
  uint64_t v114 = a9 + 8;
  LODWORD(v11) = *(_DWORD *)(a9 + 20);
  uint64_t v99 = a1;
  uint64_t v112 = *(void *)(a1 + 16);
  HIDWORD(v100) = a8;
  if (v112)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(a2, a3, v114, (Swift::UInt32)v11);
    Swift::Int v15 = v14;
    char v17 = v16;
    uint64_t v113 = 0;
    swift_bridgeObjectRelease();
    if (v17)
    {
      v18._uint64_t countAndFlagsBits = sub_1001F435C();
      Swift::Int v15 = ByteBuffer._setStringSlowpath(_:at:)(v18, v19);
    }
    swift_release();
    swift_release();
    int v20 = *(_DWORD *)(a9 + 20);
    LODWORD(v11) = v20 + v15;
    if (__CFADD__(v20, v15))
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    *(_DWORD *)(a9 + 20) = v11;
    if ((v100 & 0x100000000) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v15 = 0;
    Swift::Int v21 = 0;
    Swift::Int v22 = 0;
    if ((a8 & 1) == 0) {
      goto LABEL_46;
    }
  }
  uint64_t v23 = sub_1001F4524();
  sub_100210AD0(v23, v24, v114, (Swift::UInt32)v11);
  uint64_t v113 = 0;
  if (v26)
  {
    v27._uint64_t countAndFlagsBits = sub_1001F3D44();
    Swift::Int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, v28);
  }
  int v29 = *(_DWORD *)(a9 + 20);
  LODWORD(v11) = v29 + v25;
  if (__CFADD__(v29, v25))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  *(_DWORD *)(a9 + 20) = v11;
  BOOL v30 = __OFADD__(v15, v25);
  v15 += v25;
  if (v30)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (!v112)
  {
LABEL_34:
    uint64_t v83 = sub_1001F4110();
    sub_100210AD0(v83, v84, v114, (Swift::UInt32)v11);
    if (v86)
    {
      v87._uint64_t countAndFlagsBits = sub_1001F3C60();
      Swift::Int v85 = ByteBuffer._setStringSlowpath(_:at:)(v87, v88);
    }
    int v89 = *(_DWORD *)(v10 + 20);
    Swift::Int v22 = (v89 + v85);
    if (!__CFADD__(v89, v85))
    {
      *(_DWORD *)(v10 + 20) = v22;
      goto LABEL_39;
    }
    goto LABEL_59;
  }
LABEL_13:
  uint64_t v96 = (uint64_t)a7;
  uint64_t v97 = v15;
  uint64_t v111 = v112 - 1;
  unint64_t v104 = (unint64_t)&v117 | 0xB;
  Swift::String v103 = &v118;
  uint64_t v31 = 0;
  Swift::Int v32 = 0;
  int v33 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  __n128 v102 = (__n128)xmmword_1005F6890;
  __n128 v101 = (__n128)xmmword_1005F68C0;
  LODWORD(v22) = v11;
  uint64_t v34 = v106;
  uint64_t v11 = (void *)v107;
  uint64_t v105 = a9;
  do
  {
    uint64_t v35 = *(v33 - 2);
    uint64_t v36 = *(v33 - 1);
    uint64_t v37 = *v33;
    uint64_t v38 = v33[1];
    uint64_t v40 = v33[2];
    uint64_t v39 = v33[3];
    uint64_t v41 = v33[4];
    uint64_t v42 = v33[5];
    uint64_t v116 = v35;
    if (v40 == 254)
    {
      uint64_t v55 = sub_1001F4810(v102);
      ByteBuffer._setBytes(_:at:)(v55, v104, v22);
      int v56 = *(_DWORD *)(v10 + 20);
      BOOL v53 = __CFADD__(v56, v44);
      int v54 = v56 + v44;
      if (v53) {
        goto LABEL_52;
      }
      goto LABEL_20;
    }
    if (v40 == 255)
    {
      uint64_t v43 = sub_1001F4810(v101);
      ByteBuffer._setBytes(_:at:)(v43, (uint64_t)v103, v22);
      int v52 = *(_DWORD *)(v10 + 20);
      BOOL v53 = __CFADD__(v52, v44);
      int v54 = v52 + v44;
      if (v53) {
        goto LABEL_51;
      }
LABEL_20:
      uint64_t v44 = v44;
      *(_DWORD *)(v10 + 20) = v54;
      goto LABEL_22;
    }
    v119[0] = *(v33 - 2);
    v119[1] = v36;
    v119[2] = v37;
    v119[3] = v38;
    char v120 = v40 & 1;
    uint64_t v121 = v39;
    uint64_t v122 = v41;
    uint64_t v123 = v42;
    sub_1001F35D8(v35, v36, v37, v38, v40);
    sub_100290DC4(v119);
LABEL_22:
    Swift::Int v57 = v32 + v44;
    if (__OFADD__(v32, v44))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    uint64_t v115 = v41;
    Swift::Int v22 = *(unsigned int *)(v10 + 20);
    if (v31 >= v111)
    {
      uint64_t v78 = sub_1001F4618(v44, v45, v46, v47, v48, v49, v50, v51, (uint64_t)sub_1001F3480, (uint64_t)sub_1001F34D0, v95, v96, v97, v98, v99, v100, v101.n128_i64[0], v101.n128_i64[1], v102.n128_i64[0],
              v102.n128_i64[1],
              (uint64_t)v103,
              v104,
              v105,
              v106,
              v107,
              v108,
              v109,
              v111,
              v112,
              v113,
              v114,
              v41,
              v116);
      sub_1001F35D8(v78, v79, v80, v81, v82);
      Swift::Int v60 = 0;
    }
    else
    {
      uint64_t v110 = v42;
      uint64_t v58 = *(void *)(v10 + 8);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100210AD0(v34, (unint64_t)v11, v114, v22);
      Swift::Int v60 = v59;
      char v62 = v61;
      swift_bridgeObjectRelease();
      if (v62)
      {
        v63._uint64_t countAndFlagsBits = v34;
        v63._object = v11;
        Swift::Int v60 = ByteBuffer._setStringSlowpath(_:at:)(v63, v22);
      }
      swift_release();
      uint64_t v64 = swift_release();
      uint64_t v72 = sub_1001F4618(v64, v65, v66, v67, v68, v69, v70, v71, (uint64_t)sub_1001F3480, (uint64_t)sub_1001F34D0, v95, v96, v97, v98, v99, v100, v101.n128_i64[0], v101.n128_i64[1], v102.n128_i64[0],
              v102.n128_i64[1],
              (uint64_t)v103,
              v104,
              v105,
              v106,
              v107,
              v58,
              v110,
              v111,
              v112,
              v113,
              v114,
              v115,
              v116);
      sub_1001F35D8(v72, v73, v74, v75, v76);
      uint64_t v10 = v105;
      int v77 = *(_DWORD *)(v105 + 20);
      Swift::Int v22 = (v77 + v60);
      if (__CFADD__(v77, v60)) {
        goto LABEL_50;
      }
      *(_DWORD *)(v105 + 20) = v22;
      uint64_t v34 = v106;
      uint64_t v11 = (void *)v107;
    }
    Swift::Int v32 = v57 + v60;
    if (__OFADD__(v57, v60)) {
      goto LABEL_49;
    }
    v33 += 8;
    ++v31;
  }
  while (v112 != v31);
  swift_bridgeObjectRelease();
  Swift::Int v15 = v97 + v32;
  if (__OFADD__(v97, v32)) {
    goto LABEL_56;
  }
  if ((v100 & 0x100000000) != 0)
  {
    a7 = (void *)v96;
    goto LABEL_34;
  }
  Swift::Int v85 = 0;
  a7 = (void *)v96;
LABEL_39:
  Swift::Int v21 = v15 + v85;
  if (__OFADD__(v15, v85))
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (!v112)
  {
    Swift::Int v22 = 0;
LABEL_46:
    if (!__OFADD__(v21, v22)) {
      return;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v90 = sub_1001F4700();
  sub_100210AD0(v90, v91, v114, v22);
  sub_1001F463C();
  if (v113)
  {
    v92._uint64_t countAndFlagsBits = v98;
    v92._object = a7;
    Swift::Int v22 = ByteBuffer._setStringSlowpath(_:at:)(v92, v22);
  }
  swift_release();
  swift_release();
  int v93 = *(_DWORD *)(v10 + 20);
  BOOL v53 = __CFADD__(v93, v22);
  int v94 = v93 + v22;
  if (!v53)
  {
    *(_DWORD *)(v10 + 20) = v94;
    goto LABEL_46;
  }
LABEL_60:
  __break(1u);
}

void sub_1001ECCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8, uint64_t a9)
{
  v87._uint64_t countAndFlagsBits = a4;
  v87._unint64_t object = a5;
  uint64_t v10 = a9;
  uint64_t v11 = a9 + 8;
  Swift::Int v12 = *(unsigned int *)(a9 + 20);
  Swift::Int v88 = *(void *)(a1 + 16);
  if (v88)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v13 = sub_1001F4670();
    sub_100210AD0(v13, v14, v11, v12);
    Swift::Int v78 = v15;
    char v17 = v16;
    swift_bridgeObjectRelease();
    if (v17)
    {
      v24._uint64_t countAndFlagsBits = sub_1001F4670();
      LODWORD(v9) = a9 + 8;
      Swift::Int v20 = ByteBuffer._setStringSlowpath(_:at:)(v24, v12);
      swift_release();
      swift_release();
      uint64_t v18 = a6;
      Swift::Int v19 = v88;
    }
    else
    {
      swift_release();
      swift_release();
      uint64_t v18 = a6;
      Swift::Int v19 = v88;
      Swift::Int v20 = v78;
    }
    int v25 = *(_DWORD *)(a9 + 20);
    LODWORD(v12) = v25 + v20;
    Swift::Int v21 = a7;
    if (__CFADD__(v25, v20)) {
      goto LABEL_62;
    }
    *(_DWORD *)(a9 + 20) = v12;
    if ((a8 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    Swift::Int v21 = a7;
    Swift::Int v20 = 0;
    uint64_t v22 = sub_1001F3FD4();
    uint64_t v18 = a6;
    Swift::Int v19 = 0;
    if ((v23 & 1) == 0) {
      goto LABEL_47;
    }
  }
  Swift::Int v26 = v20;
  uint64_t v27 = sub_1001F4524();
  sub_100210AD0(v27, v28, v11, v12);
  if (v29)
  {
    v30._uint64_t countAndFlagsBits = sub_1001F3D44();
    LODWORD(v9) = a9 + 8;
    ByteBuffer._setStringSlowpath(_:at:)(v30, v31);
  }
  sub_1001F4B48();
  if (v33) {
    goto LABEL_65;
  }
  *(_DWORD *)(a9 + 20) = v9;
  v20 += v32;
  if (__OFADD__(v26, v32))
  {
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    return;
  }
  if (!v19)
  {
    Swift::Int v65 = v26 + v32;
LABEL_43:
    uint64_t v66 = sub_1001F4110();
    sub_100210AD0(v66, v67, v11, v20);
    if (v68)
    {
      v69._uint64_t countAndFlagsBits = sub_1001F3C60();
      LODWORD(v9) = v11;
      ByteBuffer._setStringSlowpath(_:at:)(v69, v70);
    }
    Swift::Int v20 = v65;
    sub_1001F4B48();
    if (v33) {
      goto LABEL_67;
    }
    *(_DWORD *)(v10 + 20) = v9;
    goto LABEL_47;
  }
LABEL_14:
  Swift::Int v79 = v20;
  Swift::Int v90 = v19 - 1;
  sub_1001F4864();
  unint64_t v84 = (char *)v92 + v34;
  uint64_t v85 = v35;
  uint64_t v83 = (v36 & 0xFFFFFFFFFFFFFFFLL) + 32;
  Swift::Int v37 = 0;
  uint64_t v38 = 0;
  uint64_t v39 = (char *)(swift_bridgeObjectRetain() + 55);
  do
  {
    uint64_t v40 = *(void *)(v39 - 23);
    unint64_t v41 = *(void *)(v39 - 15);
    unint64_t v42 = *(unsigned int *)(v39 - 7) | ((unint64_t)(*(unsigned __int16 *)(v39 - 3) | (*(v39 - 1) << 16)) << 32);
    char v43 = *v39;
    if (*v39)
    {
      uint64_t v44 = sub_1001F40D0();
      sub_1001F33AC(v44, v45, v46, 1);
      sub_1001F41F4();
      Swift::Int v48 = sub_1001ECCA8(v47);
    }
    else
    {
      if (HIDWORD(v41) < v41) {
        goto LABEL_57;
      }
      if (HIDWORD(v41) > v42 - (BYTE6(v42) | (WORD2(v42) << 8))) {
        goto LABEL_58;
      }
      v93[0] = *(void *)(v39 - 23);
      v93[1] = v41;
      int v94 = v42;
      __int16 v95 = WORD2(v42);
      char v96 = BYTE6(v42);
      uint64_t v97 = v41;
      unint64_t v98 = HIDWORD(v41);
      uint64_t v49 = sub_1001F40D0();
      sub_1001F33AC(v49, v50, v51, 0);
      Swift::Int v48 = sub_10025E0BC(v93);
    }
    BOOL v52 = __OFADD__(v38, v48);
    BOOL v53 = &v38[v48];
    if (v52)
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    Swift::Int v9 = *(unsigned int *)(v10 + 20);
    if (v37 >= v90)
    {
      uint64_t v59 = sub_1001F40D0();
      sub_1001F33B8(v59, v60, v61, v43);
      unint64_t object = 0;
    }
    else
    {
      char v89 = v43;
      if (((uint64_t)v87._object & 0x1000000000000000) != 0)
      {
        unint64_t object = (unint64_t)v87._object;
        swift_retain();
        swift_retain();
        ByteBuffer._setStringSlowpath(_:at:)(v87, v9);
        sub_1001F48FC();
        swift_release();
      }
      else
      {
        if (((uint64_t)v87._object & 0x2000000000000000) != 0)
        {
          v92[0] = v87._countAndFlagsBits;
          v92[1] = v85;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          ByteBuffer._setBytes(_:at:)((uint64_t)v92, (uint64_t)v84, v9);
          unsigned int v58 = v63;
        }
        else
        {
          uint64_t v54 = v87._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
          uint64_t v55 = v83;
          if ((v87._countAndFlagsBits & 0x1000000000000000) == 0) {
            uint64_t v55 = sub_1005E2D30();
          }
          uint64_t v56 = v55 + v54;
          if (!v55) {
            uint64_t v56 = 0;
          }
          uint64_t v86 = v56;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          ByteBuffer._setBytes(_:at:)(v55, v86, v9);
          unsigned int v58 = v57;
          uint64_t v10 = a9;
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t object = v58;
      }
      sub_1001F33B8(v40, v41, v42, v89);
      int v64 = *(_DWORD *)(v10 + 20);
      LODWORD(v9) = v64 + object;
      Swift::Int v19 = v88;
      if (__CFADD__(v64, object)) {
        goto LABEL_59;
      }
      *(_DWORD *)(v10 + 20) = v9;
    }
    BOOL v52 = __OFADD__(v53, object);
    uint64_t v38 = &v53[object];
    if (v52) {
      goto LABEL_56;
    }
    ++v37;
    v39 += 24;
  }
  while (v19 != v37);
  swift_bridgeObjectRelease();
  Swift::Int v20 = (Swift::Int)&v38[v79];
  if (__OFADD__(v79, v38)) {
    goto LABEL_63;
  }
  Swift::Int v21 = a7;
  uint64_t v18 = a6;
  if (a8)
  {
    Swift::Int v65 = (Swift::Int)&v38[v79];
    uint64_t v11 = a9 + 8;
    goto LABEL_43;
  }
  uint64_t v22 = 0;
  uint64_t v11 = a9 + 8;
LABEL_47:
  Swift::Int v71 = v20 + v22;
  if (__OFADD__(v20, v22))
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (v19)
  {
    Swift::Int v91 = v20 + v22;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(v18, (unint64_t)v21, v11, v9);
    Swift::Int v19 = v72;
    char v74 = v73;
    swift_bridgeObjectRelease();
    if (v74)
    {
      v75._uint64_t countAndFlagsBits = v18;
      v75._unint64_t object = v21;
      Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v75, v9);
    }
    swift_release();
    swift_release();
    int v76 = *(_DWORD *)(v10 + 20);
    BOOL v33 = __CFADD__(v76, v19);
    int v77 = v76 + v19;
    if (v33) {
      goto LABEL_64;
    }
    *(_DWORD *)(v10 + 20) = v77;
    Swift::Int v71 = v91;
  }
  if (__OFADD__(v71, v19)) {
    goto LABEL_61;
  }
}

void sub_1001ED20C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,Swift::String _,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  sub_1001F3DDC();
  a41 = v44;
  a42 = v47;
  unint64_t __8 = v48;
  uint64_t _a = v49;
  uint64_t v50 = a43;
  uint64_t v51 = a43 + 8;
  Swift::UInt32 v52 = *(_DWORD *)(a43 + 20);
  uint64_t v54 = *(void *)(v53 + 16);
  uint64_t v113 = v54;
  char v105 = v55;
  if (v54)
  {
    unint64_t v56 = v46;
    uint64_t v57 = v45;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v58 = v57;
    sub_100210AD0(v57, v56, v51, v52);
    Swift::Int v60 = v59;
    char v62 = v61;
    swift_bridgeObjectRelease();
    if (v62) {
      Swift::Int v60 = sub_1001F47B4(v58);
    }
    swift_release();
    swift_release();
    sub_1001F436C();
    uint64_t v54 = v113;
    if (v63)
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    *(_DWORD *)(v50 + 20) = v52;
    if ((v105 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v60 = 0;
    uint64_t v64 = sub_1001F3FD4();
    if ((v65 & 1) == 0) {
      goto LABEL_40;
    }
  }
  uint64_t v66 = sub_1001F3D44();
  sub_100210AD0(v66, v67, v68, v52);
  if (v70) {
    Swift::Int v69 = sub_1001F42F4(40);
  }
  int v71 = *(_DWORD *)(v50 + 20);
  LODWORD(v43) = v71 + v69;
  if (__CFADD__(v71, v69)) {
    goto LABEL_55;
  }
  *(_DWORD *)(v50 + 20) = v43;
  BOOL v72 = __OFADD__(v60, v69);
  v60 += v69;
  if (!v72)
  {
    if (v54)
    {
LABEL_13:
      uint64_t v104 = v60;
      uint64_t v112 = v51;
      uint64_t v73 = v54 - 1;
      sub_1001F4198();
      uint64_t v107 = v74;
      uint64_t v108 = v75;
      uint64_t v106 = (v76 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v77 = 0;
      Swift::Int v78 = 0;
      Swift::Int v79 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 40);
      uint64_t v109 = v50;
      uint64_t v111 = v54 - 1;
      do
      {
        uint64_t v80 = *((void *)v79 - 1);
        uint64_t v81 = *v79;
        sub_1001F38D4(v80, *v79);
        uint64_t v82 = sub_100290210(v80, v81);
        BOOL v72 = __OFADD__(v78, v82);
        Swift::Int v83 = v78 + v82;
        if (v72)
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        Swift::Int v43 = *(unsigned int *)(v50 + 20);
        if (v77 >= v73)
        {
          sub_1001F38E8(v80, v81);
          Swift::Int v89 = 0;
        }
        else
        {
          if ((__8 & 0x1000000000000000) != 0)
          {
            swift_retain();
            swift_retain();
            v92._uint64_t countAndFlagsBits = _a;
            v92._unint64_t object = (void *)__8;
            Swift::Int v89 = ByteBuffer._setStringSlowpath(_:at:)(v92, v43);
            swift_release();
            swift_release();
          }
          else
          {
            if ((__8 & 0x2000000000000000) != 0)
            {
              a27 = _a;
              a28 = v108;
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              sub_1001F48A0((uint64_t)&a27, v107);
              unsigned int v88 = v90;
            }
            else
            {
              uint64_t v84 = _a & 0xFFFFFFFFFFFFLL;
              uint64_t v85 = v106;
              if ((_a & 0x1000000000000000) == 0) {
                uint64_t v85 = sub_1005E2D30();
              }
              uint64_t v86 = v85 + v84;
              if (!v85) {
                uint64_t v86 = 0;
              }
              uint64_t v110 = v86;
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              sub_1001F48A0(v85, v110);
              unsigned int v88 = v87;
              uint64_t v50 = v109;
            }
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            Swift::Int v89 = v88;
          }
          sub_1001F38E8(v80, v81);
          int v91 = *(_DWORD *)(v50 + 20);
          Swift::Int v43 = (v91 + v89);
          uint64_t v54 = v113;
          uint64_t v73 = v111;
          if (__CFADD__(v91, v89)) {
            goto LABEL_49;
          }
          *(_DWORD *)(v50 + 20) = v43;
        }
        BOOL v72 = __OFADD__(v83, v89);
        Swift::Int v78 = v83 + v89;
        if (v72) {
          goto LABEL_48;
        }
        v79 += 16;
        ++v77;
      }
      while (v54 != v77);
      swift_bridgeObjectRelease();
      Swift::Int v60 = v104 + v78;
      if (__OFADD__(v104, v78)) {
        goto LABEL_53;
      }
      if (v105)
      {
        uint64_t v51 = v112;
        goto LABEL_35;
      }
      uint64_t v64 = 0;
      uint64_t v51 = v112;
      goto LABEL_40;
    }
LABEL_35:
    uint64_t v93 = sub_1001F3C60();
    sub_100210AD0(v93, v94, v95, v43);
    if (v96) {
      uint64_t v64 = sub_1001F42F4(41);
    }
    int v97 = *(_DWORD *)(v50 + 20);
    Swift::Int v43 = (v97 + v64);
    if (__CFADD__(v97, v64)) {
      goto LABEL_57;
    }
    *(_DWORD *)(v50 + 20) = v43;
LABEL_40:
    uint64_t v98 = v51;
    Swift::Int v99 = v60 + v64;
    if (__OFADD__(v60, v64))
    {
LABEL_50:
      __break(1u);
    }
    else
    {
      if (v54)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v100 = sub_1001F4A6C();
        sub_100210AD0(v100, v101, v98, v43);
        sub_1001F4260();
        swift_release();
        swift_release();
        int v102 = *(_DWORD *)(v50 + 20);
        BOOL v63 = __CFADD__(v102, v43);
        int v103 = v102 + v43;
        if (v63)
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        *(_DWORD *)(v50 + 20) = v103;
      }
      else
      {
        Swift::Int v43 = 0;
      }
      if (!__OFADD__(v99, v43))
      {
        sub_1001F3E90();
        return;
      }
    }
    __break(1u);
    goto LABEL_52;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

void sub_1001ED654(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,Swift::String _,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  sub_1001F3C44();
  a39 = v42;
  a40 = v43;
  uint64_t v88 = v44;
  uint64_t v89 = v45;
  _._uint64_t countAndFlagsBits = v46;
  uint64_t v47 = a41;
  uint64_t v49 = a41 + 8;
  Swift::Int v48 = *(void *)(a41 + 8);
  Swift::Int v50 = *(unsigned int *)(a41 + 20);
  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v87 = v52;
  char v83 = v53;
  if (v52)
  {
    sub_1001F43C0();
    swift_retain();
    swift_retain();
    sub_100210AD0(_._countAndFlagsBits, v41, v49, v50);
    sub_1001F41D8();
    if (v52)
    {
      v54._uint64_t countAndFlagsBits = _._countAndFlagsBits;
      v54._unint64_t object = (void *)v41;
      Swift::Int v48 = ByteBuffer._setStringSlowpath(_:at:)(v54, v50);
    }
    swift_release();
    swift_release();
    sub_1001F44D4();
    if (v55)
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    *(_DWORD *)(v47 + 20) = v50;
    if ((v83 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v48 = 0;
    uint64_t v56 = sub_1001F3FD4();
    if ((v57 & 1) == 0) {
      goto LABEL_37;
    }
  }
  unint64_t v41 = v50;
  sub_1001F4154(40, 0xE100000000000000);
  if (v58) {
    sub_1001F3C0C(40);
  }
  sub_1001F3D90();
  if (v55) {
    goto LABEL_52;
  }
  sub_1001F4870();
  if (!v73)
  {
    if (v52)
    {
LABEL_13:
      _._uint64_t countAndFlagsBits = v52 - 1;
      sub_1001F4198();
      uint64_t v84 = v59;
      uint64_t v85 = v60;
      sub_1001F4850();
      swift_bridgeObjectRetain();
      uint64_t v61 = 0;
      Swift::Int v62 = 0;
      Swift::Int v48 = 32;
      uint64_t v86 = v47;
      do
      {
        uint64_t v63 = swift_bridgeObjectRetain();
        Swift::Int v64 = sub_10025E538(v63);
        Swift::Int v65 = v62 + v64;
        if (__OFADD__(v62, v64))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        unint64_t v41 = *(unsigned int *)(v47 + 20);
        if (v61 >= _._countAndFlagsBits)
        {
          swift_bridgeObjectRelease();
          Swift::Int v70 = 0;
        }
        else
        {
          if ((v89 & 0x1000000000000000) != 0)
          {
            swift_retain();
            swift_retain();
            Swift::Int v70 = sub_1001F3D10(v88, v89);
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
          }
          else
          {
            if ((v89 & 0x2000000000000000) != 0)
            {
              _._unint64_t object = (void *)v88;
              a26 = v85;
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              ByteBuffer._setBytes(_:at:)((uint64_t)&_._object, v84, v41);
              unsigned int v69 = v71;
            }
            else
            {
              if ((v88 & 0x1000000000000000) == 0) {
                sub_1005E2D30();
              }
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v66 = sub_1001F4670();
              ByteBuffer._setBytes(_:at:)(v66, v67, v41);
              unsigned int v69 = v68;
              uint64_t v47 = v86;
            }
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            Swift::Int v70 = v69;
          }
          int v72 = *(_DWORD *)(v47 + 20);
          unint64_t v41 = (v72 + v70);
          uint64_t v52 = v87;
          if (__CFADD__(v72, v70)) {
            goto LABEL_46;
          }
          *(_DWORD *)(v47 + 20) = v41;
        }
        BOOL v73 = __OFADD__(v65, v70);
        Swift::Int v62 = v65 + v70;
        if (v73) {
          goto LABEL_45;
        }
        ++v61;
        v48 += 16;
      }
      while (v52 != v61);
      swift_bridgeObjectRelease();
      sub_1001F4BC0();
      if (v73) {
        goto LABEL_50;
      }
      if (v83) {
        goto LABEL_32;
      }
      uint64_t v56 = 0;
      goto LABEL_37;
    }
LABEL_32:
    uint64_t v74 = sub_1001F4188();
    sub_1001F4154(v74, v75);
    if (v76) {
      sub_1001F3C0C(41);
    }
    sub_1001F3D90();
    if (v55) {
      goto LABEL_54;
    }
    *(_DWORD *)(v47 + 20) = v41;
LABEL_37:
    BOOL v73 = __OFADD__(v48, v56);
    Swift::Int v77 = v48 + v56;
    if (v73)
    {
LABEL_47:
      __break(1u);
    }
    else
    {
      if (v52)
      {
        sub_1001F4BE4();
        swift_retain();
        swift_retain();
        uint64_t v78 = sub_1001F4BAC();
        sub_100210AD0(v78, v79, v80, v81);
        sub_1001F3C90();
        swift_release();
        swift_release();
        sub_1001F4120();
        if (v55)
        {
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        *(_DWORD *)(v47 + 20) = v82;
      }
      else
      {
        unint64_t v41 = 0;
      }
      if (!__OFADD__(v77, v41))
      {
        sub_1001F3C28();
        return;
      }
    }
    __break(1u);
    goto LABEL_49;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
}

#error "1001EDCB8: call analysis failed (funcsize=243)"

#error "1001EE078: call analysis failed (funcsize=238)"

#error "1001EE354: call analysis failed (funcsize=300)"

#error "1001EE8B0: call analysis failed (funcsize=237)"

void sub_1001EEA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  sub_1001F4BD8();
  uint64_t v13 = v12 + 8;
  Swift::UInt32 v14 = *(_DWORD *)(v12 + 20);
  uint64_t v90 = v12;
  uint64_t v89 = *(void *)(v15 + 16);
  uint64_t v82 = v10;
  char v83 = v11;
  if (v89)
  {
    unint64_t v16 = v9;
    uint64_t v17 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(v17, v16, v13, v14);
    Swift::Int v19 = v18;
    char v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      v22._uint64_t countAndFlagsBits = sub_1001F435C();
      Swift::Int v19 = ByteBuffer._setStringSlowpath(_:at:)(v22, v23);
    }
    swift_release();
    swift_release();
    sub_1001F41B8();
    Swift::Int v84 = v19;
    Swift::UInt32 v14 = v25 + v19;
    if (__CFADD__(v25, v19))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    *(_DWORD *)(v24 + 20) = v14;
    uint64_t v26 = v82;
    if ((v83 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v26 = v10;
    Swift::Int v84 = 0;
    Swift::Int v27 = 0;
    Swift::Int v28 = 0;
    if ((v11 & 1) == 0) {
      goto LABEL_40;
    }
  }
  uint64_t v29 = sub_1001F4524();
  sub_100210AD0(v29, v30, v13, v14);
  if (v32)
  {
    v33._uint64_t countAndFlagsBits = sub_1001F3D44();
    Swift::Int v31 = ByteBuffer._setStringSlowpath(_:at:)(v33, v34);
  }
  uint64_t v35 = v90;
  int v36 = *(_DWORD *)(v90 + 20);
  Swift::UInt32 v37 = v36 + v31;
  if (__CFADD__(v36, v31))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  *(_DWORD *)(v90 + 20) = v37;
  Swift::Int v38 = v84 + v31;
  if (__OFADD__(v84, v31))
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    return;
  }
  if (!v89)
  {
LABEL_28:
    sub_100210AD0(41, 0xE100000000000000, v13, v37);
    if (v69)
    {
      v70._uint64_t countAndFlagsBits = sub_1001F3C60();
      Swift::Int v68 = ByteBuffer._setStringSlowpath(_:at:)(v70, v71);
      uint64_t v35 = v90;
    }
    int v72 = *(_DWORD *)(v35 + 20);
    Swift::UInt32 v37 = v72 + v68;
    if (__CFADD__(v72, v68)) {
      goto LABEL_51;
    }
    *(_DWORD *)(v35 + 20) = v37;
    goto LABEL_33;
  }
  v84 += v31;
LABEL_14:
  uint64_t v88 = v13;
  Swift::UInt32 v81 = a7;
  uint64_t v93 = 0;
  Swift::Int v39 = 0;
  uint64_t v40 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  do
  {
    uint64_t v42 = *(v40 - 2);
    uint64_t v41 = *(v40 - 1);
    uint64_t v43 = *v40;
    uint64_t v44 = v40[1];
    uint64_t v46 = v40[2];
    uint64_t v45 = v40[3];
    uint64_t v47 = v40[4];
    uint64_t v48 = v40[5];
    v94[0] = v42;
    v94[1] = v41;
    v94[2] = v43;
    v94[3] = v44;
    void v94[4] = v46;
    v94[5] = v45;
    v94[6] = v47;
    v94[7] = v48;
    uint64_t v49 = sub_1001F4564();
    sub_1001F341C(v49, v50, v51, v52, v53);
    Swift::Int v54 = sub_10027D544(v94, v90);
    if (__OFADD__(v39, v54))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    Swift::Int v91 = v39 + v54;
    Swift::Int at = *(unsigned int *)(v90 + 20);
    if (v93 >= v89 - 1)
    {
      uint64_t v59 = sub_1001F4564();
      sub_1001F341C(v59, v60, v61, v62, v63);
      uint64_t v58 = 0;
      Swift::UInt32 v37 = at;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100210AD0(a4, (unint64_t)a5, v88, at);
      uint64_t v86 = v55;
      char v57 = v56;
      swift_bridgeObjectRelease();
      if (v57)
      {
        v64._uint64_t countAndFlagsBits = a4;
        uint64_t v58 = v88;
        v64._unint64_t object = a5;
        ByteBuffer._setStringSlowpath(_:at:)(v64, at);
        sub_1001F4590();
        swift_release();
      }
      else
      {
        swift_release();
        swift_release();
        uint64_t v58 = v86;
      }
      sub_1001F341C(v42, v41, v43, v44, v46);
      sub_1001F41B8();
      Swift::UInt32 v37 = v66 + v58;
      if (__CFADD__(v66, v58)) {
        goto LABEL_44;
      }
      *(_DWORD *)(v65 + 20) = v37;
    }
    BOOL v67 = __OFADD__(v91, v58);
    Swift::Int v39 = v91 + v58;
    if (v67) {
      goto LABEL_43;
    }
    v40 += 8;
    ++v93;
  }
  while (v89 != v93);
  swift_bridgeObjectRelease();
  Swift::Int v38 = v84 + v39;
  if (__OFADD__(v84, v39)) {
    goto LABEL_48;
  }
  uint64_t v13 = v88;
  if (v83)
  {
    uint64_t v35 = v90;
    a7 = v81;
    uint64_t v26 = v82;
    goto LABEL_28;
  }
  Swift::Int v68 = 0;
  a7 = v81;
  uint64_t v26 = v82;
LABEL_33:
  Swift::Int v27 = v38 + v68;
  if (__OFADD__(v38, v68))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v89)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(v26, (unint64_t)a7, v13, v37);
    Swift::Int v28 = v73;
    char v75 = v74;
    swift_bridgeObjectRelease();
    if (v75)
    {
      v76._uint64_t countAndFlagsBits = v26;
      v76._unint64_t object = a7;
      Swift::Int v28 = ByteBuffer._setStringSlowpath(_:at:)(v76, v37);
    }
    swift_release();
    swift_release();
    sub_1001F41B8();
    BOOL v79 = __CFADD__(v78, v28);
    int v80 = v78 + v28;
    if (v79) {
      goto LABEL_52;
    }
    *(_DWORD *)(v77 + 20) = v80;
  }
  else
  {
    Swift::Int v28 = 0;
  }
LABEL_40:
  if (__OFADD__(v27, v28))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
}

void sub_1001EEECC()
{
  sub_1001F412C();
  uint64_t v66 = v0;
  BOOL v67 = v1;
  uint64_t v69 = v2;
  Swift::String v70 = v3;
  sub_1001F4BD8();
  uint64_t v5 = v4 + 8;
  Swift::Int v6 = *(unsigned int *)(v4 + 20);
  uint64_t v7 = v4;
  sub_1001F4BCC();
  uint64_t v71 = v5;
  uint64_t v72 = v11;
  char v68 = v10;
  if (v11)
  {
    uint64_t v12 = v9;
    uint64_t v13 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(v13, (unint64_t)v12, v5, v6);
    Swift::Int v15 = v14;
    char v17 = v16;
    swift_bridgeObjectRelease();
    if (v17)
    {
      v18._uint64_t countAndFlagsBits = v13;
      v18._unint64_t object = v12;
      Swift::Int v15 = ByteBuffer._setStringSlowpath(_:at:)(v18, v6);
    }
    swift_release();
    swift_release();
    int v19 = *(_DWORD *)(v7 + 20);
    int v20 = v19 + v15;
    if (__CFADD__(v19, v15))
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    uint64_t v21 = v7;
    *(_DWORD *)(v7 + 20) = v20;
    if ((v68 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v15 = 0;
    Swift::Int v22 = 0;
    Swift::Int v23 = 0;
    uint64_t v21 = v7;
    if ((v10 & 1) == 0) {
      goto LABEL_41;
    }
  }
  uint64_t v24 = sub_1001F4524();
  sub_1001F3B7C(v24, v25);
  if (v27) {
    Swift::Int v26 = sub_1001F3BCC(40);
  }
  int v28 = *(_DWORD *)(v21 + 20);
  int v20 = v28 + v26;
  if (__CFADD__(v28, v26))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  *(_DWORD *)(v21 + 20) = v20;
  BOOL v29 = __OFADD__(v15, v26);
  v15 += v26;
  if (!v29)
  {
    if (!v72)
    {
LABEL_29:
      sub_1001F3B7C(41, 0xE100000000000000);
      if (v54) {
        Swift::Int v53 = sub_1001F3BCC(41);
      }
      uint64_t v55 = v67;
      int v56 = *(_DWORD *)(v21 + 20);
      LODWORD(v33) = v56 + v53;
      if (__CFADD__(v56, v53)) {
        goto LABEL_53;
      }
      *(_DWORD *)(v21 + 20) = v33;
LABEL_34:
      Swift::Int v22 = v15 + v53;
      if (__OFADD__(v15, v53)) {
        goto LABEL_48;
      }
      if (v72)
      {
        Swift::Int v57 = v33;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_100210AD0(v66, (unint64_t)v55, v71, v33);
        Swift::Int v23 = v58;
        char v60 = v59;
        swift_bridgeObjectRelease();
        if (v60)
        {
          v61._uint64_t countAndFlagsBits = v66;
          v61._unint64_t object = v55;
          Swift::Int v23 = ByteBuffer._setStringSlowpath(_:at:)(v61, v57);
        }
        swift_release();
        swift_release();
        int v62 = *(_DWORD *)(v21 + 20);
        BOOL v63 = __CFADD__(v62, v23);
        int v64 = v62 + v23;
        if (v63) {
          goto LABEL_54;
        }
        *(_DWORD *)(v21 + 20) = v64;
      }
      else
      {
        Swift::Int v23 = 0;
      }
LABEL_41:
      if (!__OFADD__(v22, v23))
      {
        sub_1001F416C();
        return;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
LABEL_13:
    Swift::Int v65 = v15;
    uint64_t v30 = 0;
    Swift::Int v31 = 0;
    char v32 = (void **)(swift_bridgeObjectRetain() + 56);
    LODWORD(v33) = v20;
    uint64_t v34 = v71;
    uint64_t v73 = v21;
    do
    {
      uint64_t v36 = (uint64_t)*(v32 - 1);
      uint64_t v35 = *v32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v74._uint64_t countAndFlagsBits = 32;
      v74._unint64_t object = (void *)0xE100000000000000;
      sub_1005E1E30(v74);
      v75._uint64_t countAndFlagsBits = v36;
      v75._unint64_t object = v35;
      sub_1005E1E30(v75);
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1001F4B54();
      sub_100210AD0(v37, v38, v34, v33);
      Swift::Int v40 = v39;
      uint64_t v41 = v34;
      char v43 = v42;
      swift_bridgeObjectRelease();
      if (v43)
      {
        v44._uint64_t countAndFlagsBits = sub_1001F4B54();
        Swift::Int v40 = ByteBuffer._setStringSlowpath(_:at:)(v44, v33);
      }
      swift_bridgeObjectRelease();
      uint64_t v34 = v41;
      uint64_t v21 = v73;
      int v45 = *(_DWORD *)(v73 + 20);
      Swift::Int v33 = (v45 + v40);
      if (__CFADD__(v45, v40))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      *(_DWORD *)(v73 + 20) = v33;
      BOOL v29 = __OFADD__(v31, v40);
      Swift::Int v46 = v31 + v40;
      if (v29) {
        goto LABEL_44;
      }
      if (v30 >= v72 - 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int v48 = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_100210AD0(v69, (unint64_t)v70, v34, v33);
        Swift::Int v48 = v47;
        char v50 = v49;
        swift_bridgeObjectRelease();
        if (v50)
        {
          v51._uint64_t countAndFlagsBits = v69;
          v51._unint64_t object = v70;
          uint64_t v34 = v71;
          Swift::Int v48 = ByteBuffer._setStringSlowpath(_:at:)(v51, v33);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          uint64_t v34 = v71;
        }
        swift_bridgeObjectRelease();
        uint64_t v21 = v73;
        int v52 = *(_DWORD *)(v73 + 20);
        LODWORD(v33) = v52 + v48;
        if (__CFADD__(v52, v48)) {
          goto LABEL_46;
        }
        *(_DWORD *)(v73 + 20) = v33;
      }
      BOOL v29 = __OFADD__(v46, v48);
      Swift::Int v31 = v46 + v48;
      if (v29) {
        goto LABEL_45;
      }
      v32 += 4;
      ++v30;
    }
    while (v72 != v30);
    swift_bridgeObjectRelease();
    Swift::Int v15 = v65 + v31;
    if (__OFADD__(v65, v31)) {
      goto LABEL_50;
    }
    if ((v68 & 1) == 0)
    {
      Swift::Int v53 = 0;
      uint64_t v55 = v67;
      goto LABEL_34;
    }
    goto LABEL_29;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
}

#error "1001EF5FC: call analysis failed (funcsize=310)"

void sub_1001EF820()
{
  sub_1001F3B48();
  if (v6)
  {
    sub_1001F43C0();
    swift_retain();
    uint64_t v10 = swift_retain();
    sub_1001F4468(v10, v11, v12, v13, v14, v15, v16, v17, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71,
      v72,
      v73,
      *(uint64_t *)v74,
      *(uint64_t *)&v74[8]);
    int v18 = sub_1001F41D8();
    if (v6) {
      Swift::Int v5 = sub_1001F4448(v18, v19, v20, v21, v22, v23, v24, v25, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71,
    }
             v72,
             v73,
             *(uint64_t *)v74,
             *(Swift::String *)&v74[8]);
    swift_release();
    swift_release();
    sub_1001F44D4();
    uint64_t v26 = v72;
    uint64_t v6 = v73;
    uint64_t v27 = v66;
    if (v28) {
      goto LABEL_52;
    }
    sub_1001F487C();
    if ((v29 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v27 = v9;
    uint64_t v26 = v8;
    Swift::Int v5 = 0;
    uint64_t v30 = sub_1001F3FD4();
    if ((v31 & 1) == 0) {
      goto LABEL_38;
    }
  }
  LODWORD(v1) = v3;
  sub_1001F3E58(40);
  if (v32) {
    sub_1001F3E3C(40);
  }
  sub_1001F3D90();
  if (v28) {
    goto LABEL_55;
  }
  sub_1001F4870();
  if (v49)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    return;
  }
  if (!v6)
  {
LABEL_33:
    Swift::Int v1 = v1;
    sub_1001F3E58(41);
    if (v50) {
      sub_1001F3E3C(41);
    }
    sub_1001F3D90();
    if (v28) {
      goto LABEL_57;
    }
    *(_DWORD *)(v0 + 20) = v1;
    goto LABEL_38;
  }
LABEL_13:
  sub_1001F3AFC();
  sub_1001F46F0();
  do
  {
    long long v33 = *(_OWORD *)(v26 + v4 + 16);
    v75[0] = *(_OWORD *)(v26 + v4);
    v75[1] = v33;
    long long v34 = *(_OWORD *)(v26 + v4 + 48);
    v75[2] = *(_OWORD *)(v26 + v4 + 32);
    v75[3] = v34;
    sub_10017C654((uint64_t)v75);
    Swift::Int v1 = v0;
    sub_10028E8DC((uint64_t)v75);
    Swift::Int v5 = v2 + v35;
    if (__OFADD__(v2, v35))
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    sub_1001F4580();
    if (v36 != v49)
    {
      if ((v7 & 0x1000000000000000) != 0)
      {
        swift_retain();
        int v41 = swift_retain();
        Swift::Int v40 = sub_1001F4408(v41, v42, v43, v44, v45, v46, v47, v48, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71,
                v72,
                v73,
                *(Swift::String *)v74);
        swift_release();
        swift_release();
      }
      else
      {
        if ((v7 & 0x2000000000000000) != 0)
        {
          sub_1001F4428();
          swift_retain();
          swift_retain();
          unint64_t v38 = &v74[16];
          uint64_t v39 = v69;
        }
        else
        {
          sub_1001F4A78();
          if ((v37 & 0x1000000000000000) == 0) {
            sub_1005E2D30();
          }
          sub_1001F42C4();
          swift_retain();
          swift_retain();
          unint64_t v38 = (unsigned char *)sub_1001F4C24();
        }
        Swift::Int v1 = v71;
        ByteBuffer._setBytes(_:at:)((uint64_t)v38, v39, v0);
        sub_1001F4590();
        swift_release();
        swift_bridgeObjectRelease();
        Swift::Int v40 = v71;
      }
      sub_1001F3200((uint64_t)v75);
      sub_1001F4894();
      uint64_t v26 = v72;
      uint64_t v6 = v73;
      if (v28) {
        goto LABEL_49;
      }
      *(_DWORD *)(v0 + 20) = v1;
    }
    else
    {
      sub_1001F3200((uint64_t)v75);
      Swift::Int v40 = 0;
    }
    Swift::Int v2 = v5 + v40;
    if (__OFADD__(v5, v40)) {
      goto LABEL_48;
    }
    ++v27;
    v4 += 64;
  }
  while (v6 != v27);
  swift_bridgeObjectRelease();
  sub_1001F4BC0();
  if (v49) {
    goto LABEL_53;
  }
  if ((v65 & 0x100000000) != 0)
  {
    sub_1001F3DF8();
    goto LABEL_33;
  }
  sub_1001F3DF8();
LABEL_38:
  BOOL v49 = __OFADD__(v5, v30);
  Swift::Int v51 = v5 + v30;
  if (v49)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v6)
  {
    sub_1001F40EC();
    swift_retain();
    uint64_t v52 = swift_retain();
    sub_1001F3D54(v52, v53, v54, v55, v56, v57, v58, v59, v61, v62, v63, v64);
    sub_1001F4078();
    if (v2) {
      Swift::Int v1 = sub_1001F4028();
    }
    swift_release();
    swift_release();
    sub_1001F4120();
    if (v28) {
      goto LABEL_54;
    }
    *(_DWORD *)(v0 + 20) = v60;
  }
  else
  {
    Swift::Int v1 = 0;
  }
  if (__OFADD__(v51, v1)) {
    goto LABEL_51;
  }
}

void sub_1001EFB14()
{
  sub_1001F3B48();
  if (v6)
  {
    sub_1001F43C0();
    swift_retain();
    uint64_t v10 = swift_retain();
    sub_1001F4468(v10, v11, v12, v13, v14, v15, v16, v17, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70,
      v71,
      v72,
      *(uint64_t *)v73,
      *(uint64_t *)&v73[8]);
    int v18 = sub_1001F41D8();
    if (v6) {
      Swift::Int v5 = sub_1001F4448(v18, v19, v20, v21, v22, v23, v24, v25, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70,
    }
             v71,
             v72,
             *(uint64_t *)v73,
             *(Swift::String *)&v73[8]);
    swift_release();
    swift_release();
    sub_1001F44D4();
    uint64_t v26 = v71;
    uint64_t v6 = v72;
    uint64_t v27 = v65;
    if (v28) {
      goto LABEL_52;
    }
    sub_1001F487C();
    if ((v29 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v27 = v9;
    uint64_t v26 = v8;
    Swift::Int v5 = 0;
    uint64_t v30 = sub_1001F3FD4();
    if ((v31 & 1) == 0) {
      goto LABEL_38;
    }
  }
  LODWORD(v1) = v3;
  sub_1001F3E58(40);
  if (v32) {
    sub_1001F3E3C(40);
  }
  sub_1001F3D90();
  if (v28) {
    goto LABEL_55;
  }
  sub_1001F4870();
  if (v48)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    return;
  }
  if (!v6)
  {
LABEL_33:
    Swift::Int v1 = v1;
    sub_1001F3E58(41);
    if (v49) {
      sub_1001F3E3C(41);
    }
    sub_1001F3D90();
    if (v28) {
      goto LABEL_57;
    }
    *(_DWORD *)(v0 + 20) = v1;
    goto LABEL_38;
  }
LABEL_13:
  sub_1001F3AFC();
  sub_1001F46F0();
  do
  {
    long long v33 = *(_OWORD *)(v26 + v4 + 16);
    long long v74 = *(_OWORD *)(v26 + v4);
    v75[0] = v33;
    *(_OWORD *)((char *)v75 + 15) = *(_OWORD *)(v26 + v4 + 31);
    sub_1001F328C((uint64_t)&v74);
    Swift::Int v1 = v0;
    sub_1002CBA7C((uint64_t)&v74);
    Swift::Int v5 = v2 + v34;
    if (__OFADD__(v2, v34))
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    sub_1001F4580();
    if (v35 != v48)
    {
      if ((v7 & 0x1000000000000000) != 0)
      {
        swift_retain();
        int v40 = swift_retain();
        Swift::Int v39 = sub_1001F4408(v40, v41, v42, v43, v44, v45, v46, v47, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70,
                v71,
                v72,
                *(Swift::String *)v73);
        swift_release();
        swift_release();
      }
      else
      {
        if ((v7 & 0x2000000000000000) != 0)
        {
          sub_1001F4428();
          swift_retain();
          swift_retain();
          uint64_t v37 = &v73[16];
          uint64_t v38 = v68;
        }
        else
        {
          sub_1001F4A78();
          if ((v36 & 0x1000000000000000) == 0) {
            sub_1005E2D30();
          }
          sub_1001F42C4();
          swift_retain();
          swift_retain();
          uint64_t v37 = (unsigned char *)sub_1001F4C24();
        }
        Swift::Int v1 = v70;
        ByteBuffer._setBytes(_:at:)((uint64_t)v37, v38, v0);
        sub_1001F4590();
        swift_release();
        swift_bridgeObjectRelease();
        Swift::Int v39 = v70;
      }
      sub_1001F32C4((uint64_t)&v74);
      sub_1001F4894();
      uint64_t v26 = v71;
      uint64_t v6 = v72;
      if (v28) {
        goto LABEL_49;
      }
      *(_DWORD *)(v0 + 20) = v1;
    }
    else
    {
      sub_1001F32C4((uint64_t)&v74);
      Swift::Int v39 = 0;
    }
    Swift::Int v2 = v5 + v39;
    if (__OFADD__(v5, v39)) {
      goto LABEL_48;
    }
    ++v27;
    v4 += 48;
  }
  while (v6 != v27);
  swift_bridgeObjectRelease();
  sub_1001F4BC0();
  if (v48) {
    goto LABEL_53;
  }
  if ((v64 & 0x100000000) != 0)
  {
    sub_1001F3DF8();
    goto LABEL_33;
  }
  sub_1001F3DF8();
LABEL_38:
  BOOL v48 = __OFADD__(v5, v30);
  Swift::Int v50 = v5 + v30;
  if (v48)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v6)
  {
    sub_1001F40EC();
    swift_retain();
    uint64_t v51 = swift_retain();
    sub_1001F3D54(v51, v52, v53, v54, v55, v56, v57, v58, v60, v61, v62, v63);
    sub_1001F4078();
    if (v2) {
      Swift::Int v1 = sub_1001F4028();
    }
    swift_release();
    swift_release();
    sub_1001F4120();
    if (v28) {
      goto LABEL_54;
    }
    *(_DWORD *)(v0 + 20) = v59;
  }
  else
  {
    Swift::Int v1 = 0;
  }
  if (__OFADD__(v50, v1)) {
    goto LABEL_51;
  }
}

#error "1001F0018: call analysis failed (funcsize=375)"

void sub_1001F03E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, char a8, uint64_t a9)
{
  _._uint64_t countAndFlagsBits = a4;
  _._unint64_t object = a5;
  uint64_t v10 = a9 + 8;
  Swift::Int v11 = *(void *)(a9 + 8);
  Swift::Int v12 = *(unsigned int *)(a9 + 20);
  uint64_t v89 = *(void *)(a1 + 16);
  if (v89)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1001F3B7C(a2, (unint64_t)a3);
    Swift::Int v16 = v15;
    char v18 = v17;
    swift_bridgeObjectRelease();
    if (v18)
    {
      v19._uint64_t countAndFlagsBits = a2;
      v19._unint64_t object = a3;
      Swift::Int v16 = ByteBuffer._setStringSlowpath(_:at:)(v19, v12);
    }
    swift_release();
    swift_release();
    sub_1001F41AC();
    int v22 = v21 + v16;
    if (__CFADD__(v21, v16)) {
      goto LABEL_87;
    }
    *(_DWORD *)(v20 + 20) = v22;
    if ((a8 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v16 = 0;
    uint64_t v23 = sub_1001F4530();
    LODWORD(v24) = v12;
    if ((v25 & 1) == 0) {
      goto LABEL_69;
    }
  }
  sub_1001F3B7C(40, 0xE100000000000000);
  if (v26) {
    sub_1001F3BCC(40);
  }
  sub_1001F41AC();
  int v22 = v29 + v27;
  if (__CFADD__(v29, v27)) {
    goto LABEL_90;
  }
  *(_DWORD *)(v28 + 20) = v22;
  BOOL v30 = __OFADD__(v16, v27);
  v16 += v27;
  if (v30)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    return;
  }
  Swift::Int v11 = v16;
  if (!v89)
  {
LABEL_64:
    sub_1001F3B7C(41, 0xE100000000000000);
    if (v76) {
      sub_1001F3BCC(41);
    }
    sub_1001F41AC();
    LODWORD(v24) = v78 + v23;
    if (__CFADD__(v78, v23)) {
      goto LABEL_92;
    }
    *(_DWORD *)(v77 + 20) = v24;
    goto LABEL_69;
  }
LABEL_13:
  unint64_t v83 = a7;
  Swift::Int v84 = v16;
  sub_1001F45F0();
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  long long v33 = (unsigned int *)(swift_bridgeObjectRetain() + 64);
  LODWORD(v24) = v22;
  do
  {
    uint64_t v95 = v32;
    uint64_t v34 = *((void *)v33 - 4);
    unint64_t v35 = *((void *)v33 - 3);
    uint64_t v36 = *((void *)v33 - 2);
    unint64_t v37 = *((void *)v33 - 1);
    int v92 = *((unsigned __int16 *)v33 + 2);
    int v93 = *((unsigned __int8 *)v33 + 6);
    uint64_t v94 = *v33;
    if ((v35 & 0x1000000000000000) != 0)
    {
      uint64_t v32 = 0;
      swift_retain();
      swift_bridgeObjectRetain();
      v75._uint64_t countAndFlagsBits = sub_1001F4670();
      Swift::Int v42 = ByteBuffer._setStringSlowpath(_:at:)(v75, v24);
    }
    else
    {
      if ((v35 & 0x2000000000000000) != 0)
      {
        uint64_t countAndFlagsBits = *((void *)v33 - 4);
        uint64_t v97 = v35 & 0xFFFFFFFFFFFFFFLL;
        Swift::Int v39 = (char *)&countAndFlagsBits + (HIBYTE(v35) & 0xF);
        swift_retain();
        swift_bridgeObjectRetain_n();
        int v40 = &countAndFlagsBits;
      }
      else
      {
        if ((v34 & 0x1000000000000000) != 0)
        {
          uint64_t v32 = (v35 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v38 = v34 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          sub_1001F4670();
          uint64_t v32 = sub_1005E2D30();
        }
        if (v32) {
          Swift::Int v39 = (char *)(v32 + v38);
        }
        else {
          Swift::Int v39 = 0;
        }
        swift_retain();
        swift_bridgeObjectRetain_n();
        int v40 = (uint64_t *)v32;
      }
      ByteBuffer._setBytes(_:at:)((uint64_t)v40, (uint64_t)v39, v24);
      LODWORD(v42) = v41;
      swift_bridgeObjectRelease();
      Swift::Int v42 = v42;
    }
    sub_1001F41AC();
    unint64_t v24 = (v43 + v42);
    if (__CFADD__(v43, v42))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    *(_DWORD *)(v44 + 20) = v24;
    if (v36)
    {
      sub_100210AD0(61, 0xE100000000000000, v10, v43 + v42);
      if (v45)
      {
        v46._uint64_t countAndFlagsBits = 61;
        v46._unint64_t object = (void *)0xE100000000000000;
        ByteBuffer._setStringSlowpath(_:at:)(v46, v24);
      }
      sub_1001F44FC();
      if (v48) {
        goto LABEL_80;
      }
      uint64_t v90 = v47;
      Swift::Int v91 = v42;
      *(_DWORD *)(a9 + 20) = v32;
      if (*(unsigned char *)a9 == 1)
      {
        uint64_t countAndFlagsBits = 91;
        uint64_t v97 = 0xE100000000000000;
        v98._uint64_t countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v98);
        swift_bridgeObjectRelease();
        sub_1001F46CC();
        uint64_t v49 = countAndFlagsBits;
        Swift::Int v50 = (void *)v97;
        swift_bridgeObjectRetain();
        uint64_t v10 = a9 + 8;
        sub_1001F3E08(v49, (unint64_t)v50);
        Swift::Int v52 = v51;
        char v54 = v53;
        swift_bridgeObjectRelease();
        if (v54)
        {
          v55._uint64_t countAndFlagsBits = v49;
          v55._unint64_t object = v50;
          Swift::Int v52 = ByteBuffer._setStringSlowpath(_:at:)(v55, v32);
        }
        swift_bridgeObjectRelease();
        Swift::Int v42 = v91;
        sub_1001F41AC();
        LODWORD(v24) = v57 + v52;
        if (__CFADD__(v57, v52)) {
          goto LABEL_83;
        }
      }
      else
      {
        unint64_t v24 = v94 | ((unint64_t)(v92 | (v93 << 16)) << 32);
        swift_beginAccess();
        uint64_t v59 = *(void *)(v36 + 24) + ((v24 >> 24) & 0xFFFF00 | BYTE6(v24));
        ByteBuffer._setBytes(_:at:)(v59 + v37, v59 + HIDWORD(v37), v32);
        int v61 = *(_DWORD *)(a9 + 20);
        LODWORD(v24) = v61 + v60;
        if (__CFADD__(v61, v60)) {
          goto LABEL_84;
        }
        uint64_t v56 = a9;
        Swift::Int v52 = v60;
        uint64_t v10 = a9 + 8;
      }
      *(_DWORD *)(v56 + 20) = v24;
      Swift::Int v58 = v90 + v52;
      if (__OFADD__(v90, v52)) {
        goto LABEL_81;
      }
    }
    else
    {
      Swift::Int v58 = 0;
    }
    BOOL v30 = __OFADD__(v42, v58);
    Swift::Int v62 = v42 + v58;
    if (v30) {
      goto LABEL_77;
    }
    uint64_t v63 = v95 + v62;
    if (__OFADD__(v95, v62)) {
      goto LABEL_78;
    }
    if (v31 >= v88)
    {
      swift_bridgeObjectRelease();
      swift_release();
      Swift::Int v71 = 0;
    }
    else
    {
      if (((uint64_t)_._object & 0x1000000000000000) != 0)
      {
        swift_retain();
        swift_retain();
        Swift::Int v71 = ByteBuffer._setStringSlowpath(_:at:)(_, v24);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      else
      {
        if (((uint64_t)_._object & 0x2000000000000000) != 0)
        {
          uint64_t countAndFlagsBits = _._countAndFlagsBits;
          uint64_t v97 = (uint64_t)_._object & 0xFFFFFFFFFFFFFFLL;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          ByteBuffer._setBytes(_:at:)((uint64_t)&countAndFlagsBits, (uint64_t)&countAndFlagsBits + (((unint64_t)_._object >> 56) & 0xF), v24);
          unsigned int v70 = v72;
        }
        else
        {
          uint64_t v64 = ((uint64_t)_._object & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((_._countAndFlagsBits & 0x1000000000000000) == 0) {
            uint64_t v64 = sub_1005E2D30();
          }
          sub_1001F495C();
          if (v66) {
            uint64_t v67 = 0;
          }
          else {
            uint64_t v67 = v65;
          }
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          uint64_t v68 = v64;
          uint64_t v10 = a9 + 8;
          ByteBuffer._setBytes(_:at:)(v68, v67, v24);
          unsigned int v70 = v69;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        Swift::Int v71 = v70;
      }
      swift_release();
      sub_1001F41AC();
      LODWORD(v24) = v74 + v71;
      if (__CFADD__(v74, v71)) {
        goto LABEL_82;
      }
      *(_DWORD *)(v73 + 20) = v24;
    }
    BOOL v30 = __OFADD__(v63, v71);
    uint64_t v32 = v63 + v71;
    if (v30) {
      goto LABEL_79;
    }
    ++v31;
    v33 += 10;
  }
  while (v89 != v31);
  swift_bridgeObjectRelease();
  BOOL v30 = __OFADD__(v84, v32);
  Swift::Int v11 = v84 + v32;
  if (v30) {
    goto LABEL_88;
  }
  if (a8)
  {
    a7 = v83;
    goto LABEL_64;
  }
  uint64_t v23 = 0;
  a7 = v83;
LABEL_69:
  Swift::Int v79 = v11 + v23;
  if (__OFADD__(v11, v23))
  {
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v89)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100210AD0(a6, a7, a9 + 8, v24);
    sub_1001F3C90();
    swift_release();
    swift_release();
    sub_1001F41AC();
    BOOL v48 = __CFADD__(v81, v10);
    int v82 = v81 + v10;
    if (v48)
    {
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    *(_DWORD *)(v80 + 20) = v82;
  }
  else
  {
    uint64_t v10 = 0;
  }
  if (__OFADD__(v79, v10)) {
    goto LABEL_86;
  }
}

uint64_t sub_1001F0AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v11 = v10;
  uint64_t v64 = a8;
  uint64_t v65 = a7;
  uint64_t v67 = a6;
  uint64_t v62 = a5;
  uint64_t v63 = a10;
  uint64_t v61 = sub_10000566C(&qword_10070FE60);
  uint64_t v16 = __chkstk_darwin(v61);
  unsigned int v60 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v59 = (char *)v49 - v18;
  uint64_t v58 = sub_10000566C(&qword_10070FE68);
  uint64_t v19 = __chkstk_darwin(v58);
  int v57 = (void *)((char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v56 = (uint64_t)v49 - v21;
  uint64_t v55 = sub_10000566C(&qword_10070FE70);
  uint64_t v22 = __chkstk_darwin(v55);
  char v54 = (void *)((char *)v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __chkstk_darwin(v22);
  char v53 = (char *)v49 - v25;
  __chkstk_darwin(v24);
  Swift::Int v52 = (void *)((char *)v49 - v26);
  uint64_t v27 = *(void *)(a4 + 16);
  v49[1] = a2;
  swift_retain();
  swift_retain();
  uint64_t v66 = a4;
  uint64_t result = swift_retain();
  uint64_t v51 = v27;
  if (v27)
  {
    unint64_t v29 = 0;
    uint64_t v50 = a9;
    BOOL v30 = (uint64_t *)(a3 + 40);
    while (v29 < *(void *)(a3 + 16))
    {
      uint64_t v31 = v61;
      uint64_t v32 = (uint64_t)&v59[*(int *)(v61 + 48)];
      uint64_t v68 = v11;
      uint64_t v34 = *(v30 - 1);
      uint64_t v33 = *v30;
      uint64_t v35 = *(void *)(type metadata accessor for ParameterValue() - 8);
      sub_1001F3974(v66+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v29, v32);
      uint64_t v36 = (uint64_t)&v60[*(int *)(v31 + 48)];
      sub_1001F3638(v32, v36, (void (*)(void))type metadata accessor for ParameterValue);
      uint64_t v37 = (uint64_t)v57;
      uint64_t v38 = (uint64_t)v57 + *(int *)(v58 + 48);
      *int v57 = v34;
      *(void *)(v37 + 8) = v33;
      sub_1001F3638(v36, v38, (void (*)(void))type metadata accessor for ParameterValue);
      uint64_t v39 = v56;
      sub_1001F39D8(v37, v56, &qword_10070FE68);
      uint64_t v40 = v55;
      uint64_t v41 = (uint64_t)&v53[*(int *)(v55 + 48)];
      sub_1001F39D8(v39, v41, &qword_10070FE68);
      uint64_t v42 = (uint64_t)v52;
      uint64_t v43 = (uint64_t)v52 + *(int *)(v40 + 48);
      *Swift::Int v52 = v29;
      uint64_t v44 = v41;
      uint64_t v45 = a1;
      sub_1001F39D8(v44, v43, &qword_10070FE68);
      Swift::String v46 = v54;
      sub_1001F39D8(v42, (uint64_t)v54, &qword_10070FE70);
      swift_bridgeObjectRetain();
      uint64_t v47 = v68;
      uint64_t v48 = sub_1001F24DC(v45, v46, v62, v67, v65, v64, v50, v63);
      uint64_t v11 = v47;
      uint64_t result = sub_1001F3A28((uint64_t)v46, &qword_10070FE70);
      if (v47)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return v45;
      }
      ++v29;
      v30 += 2;
      a1 = v48;
      if (v51 == v29) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v48 = a1;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v48;
  }
  return result;
}

void sub_1001F0F60(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v46 = *(void *)(a4 + 16);
  if (v46)
  {
    uint64_t v11 = a5;
    uint64_t v12 = a4;
    uint64_t v13 = a3;
    uint64_t v14 = *(void *)(a3 + 16);
    uint64_t v49 = a5 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v44 = v12;
    uint64_t v45 = v13;
    uint64_t v42 = v14;
    uint64_t v48 = v11;
    while (v14 != v16)
    {
      unint64_t v17 = *(void *)(v13 + v15 + 32);
      unint64_t v18 = *(void *)(v13 + v15 + 40);
      unint64_t v20 = *(void *)(v12 + v15 + 32);
      unint64_t v19 = *(void *)(v12 + v15 + 40);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      Swift::Int v21 = sub_10025DCBC(v17, v18);
      Swift::Int v22 = *(unsigned int *)(v11 + 20);
      sub_100210AD0(32, 0xE100000000000000, v49, v22);
      if (v24)
      {
        v25._uint64_t countAndFlagsBits = 32;
        v25._unint64_t object = (void *)0xE100000000000000;
        Swift::Int v23 = ByteBuffer._setStringSlowpath(_:at:)(v25, v22);
      }
      uint64_t v11 = v48;
      int v26 = *(_DWORD *)(v48 + 20);
      BOOL v27 = __CFADD__(v26, v23);
      int v28 = v26 + v23;
      if (v27) {
        goto LABEL_21;
      }
      *(_DWORD *)(v48 + 20) = v28;
      BOOL v29 = __OFADD__(v21, v23);
      Swift::Int v30 = v21 + v23;
      if (v29) {
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      Swift::Int v31 = sub_10025DCBC(v20, v19);
      swift_bridgeObjectRelease();
      Swift::Int v32 = v30 + v31;
      if (__OFADD__(v30, v31)) {
        goto LABEL_23;
      }
      Swift::Int v33 = a1 + v32;
      if (__OFADD__(a1, v32)) {
        goto LABEL_24;
      }
      if (v16 >= *(void *)(a8 + 16) - 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int v36 = 0;
      }
      else
      {
        Swift::Int v43 = a1 + v32;
        Swift::Int v34 = *(unsigned int *)(v48 + 20);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_100210AD0(a9, (unint64_t)a10, v49, v34);
        Swift::Int v36 = v35;
        char v38 = v37;
        swift_bridgeObjectRelease();
        if (v38)
        {
          v39._uint64_t countAndFlagsBits = a9;
          v39._unint64_t object = a10;
          Swift::Int v36 = ByteBuffer._setStringSlowpath(_:at:)(v39, v34);
        }
        uint64_t v11 = v48;
        int v40 = *(_DWORD *)(v48 + 20);
        BOOL v27 = __CFADD__(v40, v36);
        int v41 = v40 + v36;
        uint64_t v14 = v42;
        Swift::Int v33 = v43;
        if (v27) {
          goto LABEL_26;
        }
        *(_DWORD *)(v48 + 20) = v41;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v33 + v36;
      if (__OFADD__(v33, v36)) {
        goto LABEL_25;
      }
      ++v16;
      v15 += 16;
      uint64_t v13 = v45;
      uint64_t v12 = v44;
      if (v46 == v16)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1001F1278(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v37 = *(void *)(a4 + 16);
  if (v37)
  {
    uint64_t v12 = a4;
    uint64_t v13 = a3;
    uint64_t v14 = a9;
    uint64_t v36 = *(void *)(a3 + 16);
    uint64_t v42 = a5;
    uint64_t v32 = a5 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v31 = a8;
    uint64_t v33 = v13;
    uint64_t v35 = v12;
    while (v36 != v16)
    {
      uint64_t v17 = *(void *)(v13 + v15 + 40);
      uint64_t v18 = *(void *)(v12 + v15 + 32);
      uint64_t v19 = *(void *)(v12 + v15 + 40);
      _._unint64_t object = *(void **)(v13 + v15 + 32);
      uint64_t v39 = v17;
      uint64_t v40 = v18;
      uint64_t v41 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1002AFC54((uint64_t *)&_._object, v42);
      BOOL v21 = __OFADD__(a1, v20);
      Swift::Int v22 = a1 + v20;
      if (v21) {
        goto LABEL_16;
      }
      if (v16 >= *(void *)(a8 + 16) - 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int v25 = 0;
      }
      else
      {
        Swift::Int v23 = *(unsigned int *)(v42 + 20);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        Swift::Int at = v23;
        sub_100210AD0(v14, (unint64_t)a10, v32, v23);
        Swift::Int v25 = v24;
        LOBYTE(v23) = v26;
        swift_bridgeObjectRelease();
        if (v23)
        {
          v27._uint64_t countAndFlagsBits = a9;
          v27._unint64_t object = a10;
          Swift::Int v25 = ByteBuffer._setStringSlowpath(_:at:)(v27, at);
        }
        int v28 = *(_DWORD *)(v42 + 20);
        BOOL v29 = __CFADD__(v28, v25);
        int v30 = v28 + v25;
        uint64_t v13 = v33;
        if (v29) {
          goto LABEL_18;
        }
        *(_DWORD *)(v42 + 20) = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        a8 = v31;
      }
      BOOL v21 = __OFADD__(v22, v25);
      a1 = v22 + v25;
      uint64_t v12 = v35;
      if (v21) {
        goto LABEL_17;
      }
      ++v16;
      v15 += 16;
      uint64_t v14 = a9;
      if (v37 == v16)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1001F14EC(Swift::Int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v52 = *(void *)(a4 + 16);
  if (v52)
  {
    uint64_t v11 = a5;
    uint64_t v12 = a4;
    uint64_t v13 = a3;
    uint64_t v51 = *(void *)(a3 + 16);
    uint64_t v14 = a5 + 8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v54 = v14;
    uint64_t v48 = v11;
    uint64_t v49 = v13;
    uint64_t v50 = v12;
    while (v51 != v16)
    {
      Swift::Int v56 = a1;
      unint64_t v18 = *(void *)(v13 + v15 + 32);
      unint64_t v17 = *(void *)(v13 + v15 + 40);
      unint64_t v19 = *(void *)(v12 + v15 + 40);
      unint64_t v55 = *(void *)(v12 + v15 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      Swift::Int v20 = sub_10025DCBC(v18, v17);
      Swift::Int v21 = *(unsigned int *)(v11 + 20);
      sub_100210AD0(32, 0xE100000000000000, v14, *(_DWORD *)(v11 + 20));
      if (v23)
      {
        v24._uint64_t countAndFlagsBits = 32;
        v24._unint64_t object = (void *)0xE100000000000000;
        Swift::Int v22 = ByteBuffer._setStringSlowpath(_:at:)(v24, v21);
      }
      int v25 = *(_DWORD *)(v11 + 20);
      Swift::Int v26 = (v25 + v22);
      if (__CFADD__(v25, v22)) {
        goto LABEL_27;
      }
      *(_DWORD *)(v11 + 20) = v26;
      Swift::Int v27 = v20 + v22;
      if (__OFADD__(v20, v22)) {
        goto LABEL_28;
      }
      if (v19)
      {
        swift_bridgeObjectRetain();
        Swift::Int v28 = sub_10025DCBC(v55, v19);
        swift_bridgeObjectRelease();
        uint64_t v29 = a9;
      }
      else
      {
        sub_100210AD0(4999502, 0xE300000000000000, v54, v26);
        if (v31)
        {
          v32._uint64_t countAndFlagsBits = 4999502;
          v32._unint64_t object = (void *)0xE300000000000000;
          Swift::Int v30 = ByteBuffer._setStringSlowpath(_:at:)(v32, v26);
        }
        Swift::Int v28 = v30;
        uint64_t v11 = v48;
        int v33 = *(_DWORD *)(v48 + 20);
        BOOL v34 = __CFADD__(v33, v30);
        int v35 = v33 + v30;
        uint64_t v29 = a9;
        if (v34) {
          goto LABEL_33;
        }
        *(_DWORD *)(v48 + 20) = v35;
      }
      Swift::Int v36 = v27 + v28;
      if (__OFADD__(v27, v28)) {
        goto LABEL_29;
      }
      Swift::Int v37 = v56 + v36;
      if (__OFADD__(v56, v36)) {
        goto LABEL_30;
      }
      if (v16 >= *(void *)(a8 + 16) - 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int v40 = 0;
        uint64_t v14 = v54;
      }
      else
      {
        Swift::Int v38 = *(unsigned int *)(v11 + 20);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        Swift::Int at = v38;
        sub_100210AD0(v29, (unint64_t)a10, v54, v38);
        Swift::Int v40 = v39;
        uint64_t v41 = v29;
        char v43 = v42;
        swift_bridgeObjectRelease();
        if (v43)
        {
          v44._uint64_t countAndFlagsBits = v41;
          v44._unint64_t object = a10;
          Swift::Int v40 = ByteBuffer._setStringSlowpath(_:at:)(v44, at);
        }
        uint64_t v14 = v54;
        uint64_t v11 = v48;
        int v45 = *(_DWORD *)(v48 + 20);
        BOOL v34 = __CFADD__(v45, v40);
        int v46 = v45 + v40;
        if (v34) {
          goto LABEL_32;
        }
        *(_DWORD *)(v48 + 20) = v46;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      a1 = v37 + v40;
      uint64_t v12 = v50;
      if (__OFADD__(v37, v40)) {
        goto LABEL_31;
      }
      ++v16;
      v15 += 16;
      uint64_t v13 = v49;
      if (v52 == v16)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1001F185C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v11 = v10;
  uint64_t v43 = *(void *)(a4 + 16);
  if (v43)
  {
    uint64_t v14 = a4;
    uint64_t v15 = a3;
    uint64_t v42 = *(void *)(a3 + 16);
    uint64_t v53 = a5;
    uint64_t v39 = a5 + 8;
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v37 = a8;
    uint64_t v40 = v14;
    uint64_t v41 = v15;
    while (v42 != v18)
    {
      uint64_t v19 = *(void *)(v15 + v17 + 32);
      char v20 = *(unsigned char *)(v15 + v17 + 54);
      __int16 v21 = *(_WORD *)(v15 + v17 + 52);
      int v22 = *(_DWORD *)(v15 + v17 + 48);
      int v23 = *(_DWORD *)(v14 + v17 + 48);
      v45[1] = *(void *)(v15 + v17 + 40);
      long long v24 = *(_OWORD *)(v14 + v17 + 32);
      __int16 v25 = *(_WORD *)(v14 + v17 + 52);
      v45[0] = v19;
      int v46 = v22;
      __int16 v47 = v21;
      char v48 = v20;
      long long v49 = v24;
      int v50 = v23;
      __int16 v51 = v25;
      char v52 = *(unsigned char *)(v14 + v17 + 54);
      swift_retain_n();
      swift_retain_n();
      sub_10026C3EC((uint64_t)v45);
      uint64_t v27 = v26;
      swift_release();
      uint64_t result = swift_release();
      uint64_t v28 = a1 + v27;
      if (__OFADD__(a1, v27)) {
        goto LABEL_16;
      }
      if (v18 >= *(void *)(a8 + 16) - 1)
      {
        uint64_t v31 = 0;
      }
      else
      {
        uint64_t v44 = v11;
        Swift::Int v29 = *(unsigned int *)(v53 + 20);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        Swift::Int v38 = v29;
        sub_100210AD0(a9, (unint64_t)a10, v39, v29);
        uint64_t v31 = v30;
        LOBYTE(v29) = v32;
        uint64_t result = swift_bridgeObjectRelease();
        if (v29)
        {
          v33._uint64_t countAndFlagsBits = a9;
          v33._unint64_t object = a10;
          uint64_t result = ByteBuffer._setStringSlowpath(_:at:)(v33, v38);
          uint64_t v31 = result;
        }
        int v34 = *(_DWORD *)(v53 + 20);
        BOOL v35 = __CFADD__(v34, v31);
        int v36 = v34 + v31;
        uint64_t v11 = v44;
        a8 = v37;
        if (v35) {
          goto LABEL_18;
        }
        *(_DWORD *)(v53 + 20) = v36;
        swift_release_n();
      }
      swift_release_n();
      swift_release();
      uint64_t result = swift_release();
      a1 = v28 + v31;
      if (__OFADD__(v28, v31)) {
        goto LABEL_17;
      }
      ++v18;
      v17 += 24;
      uint64_t v14 = v40;
      uint64_t v15 = v41;
      if (v43 == v18)
      {
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return a1;
  }
  return result;
}

uint64_t sub_1001F1B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v11 = v10;
  uint64_t v70 = a8;
  uint64_t v71 = a7;
  uint64_t v73 = a6;
  uint64_t v68 = a5;
  unsigned int v69 = a10;
  uint64_t v67 = sub_10000566C(&qword_10070FE30);
  sub_1001F3BBC();
  __chkstk_darwin(v16);
  sub_1001F3FE0();
  uint64_t v66 = v17;
  sub_1001F475C();
  __chkstk_darwin(v18);
  uint64_t v65 = (char *)v55 - v19;
  uint64_t v64 = sub_10000566C(&qword_10070FE38);
  sub_1001F3BBC();
  __chkstk_darwin(v20);
  sub_1001F3FE0();
  uint64_t v58 = v21;
  sub_1001F475C();
  __chkstk_darwin(v22);
  uint64_t v63 = (uint64_t)v55 - v23;
  uint64_t v62 = sub_10000566C(&qword_10070FE40);
  sub_1001F3BBC();
  __chkstk_darwin(v24);
  sub_1001F3FE0();
  uint64_t v61 = v25;
  sub_1001F475C();
  __chkstk_darwin(v26);
  unsigned int v60 = (char *)v55 - v27;
  sub_1001F475C();
  __chkstk_darwin(v28);
  uint64_t v59 = (void *)((char *)v55 - v29);
  uint64_t v30 = *(void *)(a4 + 16);
  v55[1] = a2;
  swift_retain();
  swift_retain();
  uint64_t v72 = a4;
  uint64_t result = swift_retain();
  uint64_t v57 = v30;
  if (v30)
  {
    unint64_t v32 = 0;
    uint64_t v56 = a9;
    Swift::String v33 = (uint64_t *)(a3 + 40);
    while (v32 < *(void *)(a3 + 16))
    {
      uint64_t v34 = v67;
      uint64_t v35 = a1;
      uint64_t v36 = (uint64_t)&v65[*(int *)(v67 + 48)];
      uint64_t v74 = v11;
      uint64_t v37 = *(v33 - 1);
      uint64_t v38 = *v33;
      uint64_t v39 = *(void *)(sub_10000566C(&qword_10070FE28) - 8);
      sub_1001F36E4(v72+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v32, v36, &qword_10070FE28);
      uint64_t v40 = v66 + *(int *)(v34 + 48);
      sub_1001F39D8(v36, v40, &qword_10070FE28);
      uint64_t v41 = (uint64_t)v58;
      uint64_t v42 = (uint64_t)v58 + *(int *)(v64 + 48);
      *uint64_t v58 = v37;
      *(void *)(v41 + 8) = v38;
      sub_1001F39D8(v40, v42, &qword_10070FE28);
      uint64_t v43 = v63;
      sub_1001F39D8(v41, v63, &qword_10070FE38);
      uint64_t v44 = v62;
      uint64_t v45 = (uint64_t)&v60[*(int *)(v62 + 48)];
      sub_1001F39D8(v43, v45, &qword_10070FE38);
      uint64_t v46 = (uint64_t)v59;
      uint64_t v47 = (uint64_t)v59 + *(int *)(v44 + 48);
      *uint64_t v59 = v32;
      uint64_t v48 = v45;
      uint64_t v49 = v35;
      sub_1001F39D8(v48, v47, &qword_10070FE38);
      uint64_t v50 = v61;
      sub_1001F39D8(v46, v61, &qword_10070FE40);
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1001F4A6C();
      uint64_t v52 = v74;
      uint64_t v54 = sub_1001F285C(v51, v53, v68, v73, v71, v70, v56, v69);
      uint64_t v11 = v52;
      uint64_t result = sub_1001F3A28(v50, &qword_10070FE40);
      if (v52)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return v49;
      }
      ++v32;
      v33 += 2;
      a1 = v54;
      if (v57 == v32) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v54 = a1;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v54;
  }
  return result;
}

void sub_1001F1F30()
{
  sub_1001F4068();
  sub_1001F4600(v0, v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v9, (void (*)(uint64_t))sub_1001F0AFC);
}

void sub_1001F1F68()
{
  sub_1001F4068();
  sub_1001F4600(v0, v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v9, (void (*)(uint64_t))sub_1001F0F60);
}

void sub_1001F1FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t))
{
  sub_1001F3D9C();
  if (v18)
  {
    sub_1001F453C();
    swift_retain();
    swift_retain();
    sub_1001F3E08(v16, (unint64_t)v17);
    uint64_t v37 = v19;
    char v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      v23._uint64_t countAndFlagsBits = v16;
      v23._unint64_t object = v17;
      ByteBuffer._setStringSlowpath(_:at:)(v23, v14);
      sub_1001F48FC();
      swift_release();
      char v15 = v38;
    }
    else
    {
      swift_release();
      swift_release();
      char v15 = v38;
      uint64_t v16 = v37;
    }
    sub_1001F44D4();
    if (v24) {
      goto LABEL_35;
    }
    *(_DWORD *)(v12 + 20) = v14;
    if ((v15 & 1) == 0)
    {
      uint64_t v22 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v22 = 0;
    if ((v15 & 1) == 0) {
      goto LABEL_14;
    }
  }
  sub_1001F4728(40);
  if (v25) {
    sub_1001F3D28(40);
  }
  sub_1001F4888();
  if (v24) {
    goto LABEL_37;
  }
  *(_DWORD *)(v12 + 20) = v26;
LABEL_14:
  uint64_t v27 = v16 + v22;
  if (__OFADD__(v16, v22))
  {
    __break(1u);
    goto LABEL_32;
  }
  Swift::Int v28 = (Swift::Int)a12;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1001F3EC8();
  a12(v29);
  sub_1001F4590();
  swift_release();
  swift_release();
  BOOL v30 = __OFADD__(v27, a12);
  uint64_t v31 = (char *)a12 + v27;
  if (v30)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    return;
  }
  if (v15)
  {
    Swift::Int v28 = *(unsigned int *)(v12 + 20);
    sub_1001F3E74(41);
    if (v32) {
      sub_1001F3E20(41);
    }
    sub_1001F4888();
    if (v24) {
      goto LABEL_38;
    }
    *(_DWORD *)(v12 + 20) = v34;
  }
  else
  {
    uint64_t v33 = 0;
  }
  uint64_t v35 = &v31[v33];
  if (__OFADD__(v31, v33)) {
    goto LABEL_33;
  }
  if (v39)
  {
    sub_1001F46A8();
    swift_retain();
    swift_retain();
    sub_1001F4B60();
    sub_1001F4260();
    if (v13) {
      Swift::Int v28 = sub_1001F4B80();
    }
    swift_release();
    swift_release();
    sub_1001F4120();
    if (v24) {
      goto LABEL_36;
    }
    *(_DWORD *)(v12 + 20) = v36;
  }
  else
  {
    Swift::Int v28 = 0;
  }
  if (__OFADD__(v35, v28)) {
    goto LABEL_34;
  }
}

void sub_1001F21EC()
{
  sub_1001F4068();
  sub_1001F4600(v0, v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v9, (void (*)(uint64_t))sub_1001F1278);
}

void sub_1001F2224()
{
  sub_1001F4068();
  sub_1001F4600(v0, v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v9, (void (*)(uint64_t))sub_1001F14EC);
}

void sub_1001F225C()
{
  sub_1001F4068();
  sub_1001F4600(v0, v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v9, (void (*)(uint64_t))sub_1001F185C);
}

void sub_1001F2298()
{
  sub_1001F3D9C();
  if (v7)
  {
    sub_1001F453C();
    swift_retain();
    swift_retain();
    sub_1001F3E08(v5, (unint64_t)v6);
    uint64_t v34 = v8;
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10)
    {
      v12._uint64_t countAndFlagsBits = v5;
      v12._unint64_t object = v6;
      ByteBuffer._setStringSlowpath(_:at:)(v12, v3);
      sub_1001F48FC();
      swift_release();
      char v4 = v35;
    }
    else
    {
      swift_release();
      swift_release();
      char v4 = v35;
      uint64_t v5 = v34;
    }
    sub_1001F44D4();
    if (v13) {
      goto LABEL_35;
    }
    *(_DWORD *)(v0 + 20) = v3;
    if ((v4 & 1) == 0)
    {
      uint64_t v11 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v11 = 0;
    if ((v4 & 1) == 0) {
      goto LABEL_14;
    }
  }
  Swift::Int v1 = v3;
  sub_1001F4728(40);
  if (v14) {
    sub_1001F3D28(40);
  }
  sub_1001F4888();
  if (v13) {
    goto LABEL_37;
  }
  *(_DWORD *)(v0 + 20) = v15;
LABEL_14:
  uint64_t v16 = v5 + v11;
  if (__OFADD__(v5, v11))
  {
    __break(1u);
    goto LABEL_32;
  }
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1001F3EC8();
  sub_1001F1B1C(v17, v18, v19, v20, v21, v22, v23, v24, v32, v33);
  sub_1001F4590();
  swift_release();
  swift_release();
  BOOL v25 = __OFADD__(v16, v1);
  Swift::Int v26 = v16 + v1;
  if (v25)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    return;
  }
  if (v4)
  {
    Swift::Int v1 = *(unsigned int *)(v0 + 20);
    sub_1001F3E74(41);
    if (v27) {
      sub_1001F3E20(41);
    }
    sub_1001F4888();
    if (v13) {
      goto LABEL_38;
    }
    *(_DWORD *)(v0 + 20) = v29;
  }
  else
  {
    uint64_t v28 = 0;
  }
  Swift::Int v30 = v26 + v28;
  if (__OFADD__(v26, v28)) {
    goto LABEL_33;
  }
  if (v36)
  {
    sub_1001F46A8();
    swift_retain();
    swift_retain();
    sub_1001F4B60();
    sub_1001F4260();
    if (v2) {
      Swift::Int v1 = sub_1001F4B80();
    }
    swift_release();
    swift_release();
    sub_1001F4120();
    if (v13) {
      goto LABEL_36;
    }
    *(_DWORD *)(v0 + 20) = v31;
  }
  else
  {
    Swift::Int v1 = 0;
  }
  if (__OFADD__(v30, v1)) {
    goto LABEL_34;
  }
}

uint64_t sub_1001F24DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v59 = a6;
  uint64_t v55 = a7;
  uint64_t v56 = a8;
  uint64_t v63 = a3;
  uint64_t v64 = a1;
  uint64_t v62 = sub_10000566C(&qword_10070FE78) - 8;
  __chkstk_darwin(v62);
  uint64_t v61 = (uint64_t *)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10000566C(&qword_10070FE70);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  char v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_10070FE68);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = __chkstk_darwin(v14);
  unsigned int v60 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (uint64_t *)((char *)&v55 - v19);
  __chkstk_darwin(v18);
  uint64_t v22 = (uint64_t *)((char *)&v55 - v21);
  uint64_t v23 = *(int *)(v15 + 56);
  uint64_t v24 = (char *)&v55 + v23 - v21;
  uint64_t v25 = *(int *)(v11 + 56);
  uint64_t v26 = (uint64_t)&v13[v25 + v23];
  char v27 = (uint64_t *)((char *)a2 + v25);
  uint64_t v58 = *a2;
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  sub_1001F3974((uint64_t)v27 + v23, v26);
  uint64_t v30 = (uint64_t)v20 + *(int *)(v15 + 56);
  sub_1001F3638(v26, v30, (void (*)(void))type metadata accessor for ParameterValue);
  *uint64_t v22 = v28;
  v22[1] = v29;
  uint64_t v57 = v22;
  sub_1001F3638(v30, (uint64_t)v24, (void (*)(void))type metadata accessor for ParameterValue);
  uint64_t v31 = (uint64_t)v20 + *(int *)(v15 + 56);
  *uint64_t v20 = v28;
  v20[1] = v29;
  sub_1001F3974((uint64_t)v24, v31);
  uint64_t v32 = (uint64_t)&v60[*(int *)(v15 + 56)];
  sub_1001F3974((uint64_t)v24, v32);
  uint64_t v34 = v61;
  uint64_t v33 = v62;
  *uint64_t v61 = v28;
  v34[1] = v29;
  uint64_t v35 = (uint64_t)v34;
  sub_1001F3638(v32, (uint64_t)v34 + *(int *)(v33 + 60), (void (*)(void))type metadata accessor for ParameterValue);
  swift_bridgeObjectRetain_n();
  sub_1001F368C(v31, (void (*)(void))type metadata accessor for ParameterValue);
  uint64_t v36 = v63;
  sub_100225308();
  uint64_t v38 = v37;
  uint64_t result = sub_1001F3A28(v35, &qword_10070FE78);
  BOOL v40 = __OFADD__(v64, v38);
  uint64_t v41 = v64 + v38;
  if (v40)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v58 >= *(void *)(v59 + 16) - 1)
  {
    uint64_t v48 = 0;
  }
  else
  {
    uint64_t v64 = v41;
    uint64_t v42 = v36;
    uint64_t v43 = *(void *)(v36 + 8);
    Swift::Int v44 = *(unsigned int *)(v36 + 20);
    uint64_t v45 = v56;
    swift_bridgeObjectRetain();
    uint64_t v62 = v43;
    swift_retain();
    swift_retain();
    uint64_t v46 = v55;
    sub_100210AD0(v55, (unint64_t)v45, v36 + 8, v44);
    uint64_t v48 = v47;
    char v50 = v49;
    uint64_t result = swift_bridgeObjectRelease();
    if (v50)
    {
      v51._uint64_t countAndFlagsBits = v46;
      v51._unint64_t object = v45;
      uint64_t result = ByteBuffer._setStringSlowpath(_:at:)(v51, v44);
      uint64_t v48 = result;
    }
    int v52 = *(_DWORD *)(v42 + 20);
    BOOL v53 = __CFADD__(v52, v48);
    int v54 = v52 + v48;
    if (v53) {
      goto LABEL_12;
    }
    *(_DWORD *)(v42 + 20) = v54;
    swift_release();
    swift_release();
    uint64_t v41 = v64;
  }
  sub_1001F3A28((uint64_t)v57, &qword_10070FE68);
  uint64_t result = v41 + v48;
  if (__OFADD__(v41, v48))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F285C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v58 = a6;
  uint64_t v54 = a7;
  uint64_t v55 = a8;
  uint64_t v62 = a3;
  uint64_t v63 = a1;
  uint64_t v61 = sub_10000566C(&qword_10070FE48) - 8;
  __chkstk_darwin(v61);
  sub_1001F40C0();
  unsigned int v60 = (uint64_t *)(v10 - v9);
  uint64_t v11 = sub_10000566C(&qword_10070FE40);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  sub_1001F40C0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10000566C(&qword_10070FE38);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  sub_1001F3FE0();
  uint64_t v59 = v18;
  sub_1001F475C();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v54 - v21);
  __chkstk_darwin(v20);
  uint64_t v24 = (uint64_t *)((char *)&v54 - v23);
  uint64_t v25 = *(int *)(v17 + 56);
  uint64_t v26 = (char *)&v54 + v25 - v23;
  uint64_t v27 = *(int *)(v12 + 56);
  uint64_t v28 = v15 + v27 + v25;
  uint64_t v29 = (uint64_t *)((char *)a2 + v27);
  uint64_t v57 = *a2;
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  sub_1001F36E4((uint64_t)v29 + v25, v28, &qword_10070FE28);
  uint64_t v32 = (uint64_t)v22 + *(int *)(v17 + 56);
  sub_1001F39D8(v28, v32, &qword_10070FE28);
  *uint64_t v24 = v30;
  v24[1] = v31;
  uint64_t v56 = v24;
  sub_1001F39D8(v32, (uint64_t)v26, &qword_10070FE28);
  uint64_t v33 = (uint64_t)v22 + *(int *)(v17 + 56);
  *uint64_t v22 = v30;
  v22[1] = v31;
  sub_1001F36E4((uint64_t)v26, v33, &qword_10070FE28);
  uint64_t v34 = v59 + *(int *)(v17 + 56);
  sub_1001F36E4((uint64_t)v26, v34, &qword_10070FE28);
  uint64_t v36 = v60;
  uint64_t v35 = v61;
  *unsigned int v60 = v30;
  v36[1] = v31;
  sub_1001F39D8(v34, (uint64_t)v36 + *(int *)(v35 + 60), &qword_10070FE28);
  uint64_t v37 = v62;
  swift_bridgeObjectRetain_n();
  sub_1001F3A28(v33, &qword_10070FE28);
  uint64_t v38 = sub_1002BE318(v36);
  uint64_t result = sub_1001F3A28((uint64_t)v36, &qword_10070FE48);
  BOOL v40 = __OFADD__(v63, v38);
  uint64_t v41 = v63 + v38;
  if (v40)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v57 >= *(void *)(v58 + 16) - 1)
  {
    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v63 = v41;
    uint64_t v42 = *(void *)(v37 + 8);
    Swift::Int v43 = *(unsigned int *)(v37 + 20);
    Swift::Int v44 = v55;
    swift_bridgeObjectRetain();
    uint64_t v61 = v42;
    swift_retain();
    swift_retain();
    uint64_t v45 = v54;
    sub_100210AD0(v54, (unint64_t)v44, v37 + 8, v43);
    uint64_t v47 = v46;
    char v49 = v48;
    uint64_t result = swift_bridgeObjectRelease();
    if (v49)
    {
      v50._uint64_t countAndFlagsBits = v45;
      v50._unint64_t object = v44;
      uint64_t result = ByteBuffer._setStringSlowpath(_:at:)(v50, v43);
      uint64_t v47 = result;
    }
    int v51 = *(_DWORD *)(v37 + 20);
    BOOL v52 = __CFADD__(v51, v47);
    int v53 = v51 + v47;
    if (v52) {
      goto LABEL_12;
    }
    *(_DWORD *)(v37 + 20) = v53;
    swift_release();
    swift_release();
    uint64_t v41 = v63;
  }
  sub_1001F3A28((uint64_t)v56, &qword_10070FE38);
  uint64_t result = v41 + v47;
  if (__OFADD__(v41, v47))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

void sub_1001F2BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    uint64_t v9 = a6 + 8;
    Swift::Int v10 = *(unsigned int *)(a6 + 20);
    swift_bridgeObjectRetain();
    sub_1000A9450(a2, a3);
    sub_100210AD0(32, 0xE100000000000000, v9, v10);
    if (v12)
    {
      v13._uint64_t countAndFlagsBits = 32;
      v13._unint64_t object = (void *)0xE100000000000000;
      Swift::Int v11 = ByteBuffer._setStringSlowpath(_:at:)(v13, v10);
    }
    Swift::Int v14 = v11;
    int v15 = *(_DWORD *)(a6 + 20);
    BOOL v16 = __CFADD__(v15, v11);
    int v17 = v15 + v11;
    if (v16)
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(a6 + 20) = v17;
      uint64_t v18 = sub_1001F45A8();
      uint64_t v19 = sub_100269C68(v18);
      swift_bridgeObjectRelease();
      sub_1000A6FC4(a2, a3);
      if (!__OFADD__(v14, v19)) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1001F2CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F2D30(a1, a2, a3, &qword_10070FE28, (uint64_t (*)(void))type metadata accessor for ParameterValue, (void (*)(void))type metadata accessor for ParameterValue, (uint64_t (*)(char *, uint64_t))sub_1002BE46C);
}

uint64_t sub_1001F2CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F2D30(a1, a2, a3, &qword_10070FE28, (uint64_t (*)(void))type metadata accessor for ParameterValue, (void (*)(void))type metadata accessor for ParameterValue, (uint64_t (*)(char *, uint64_t))sub_1002B3CF4);
}

uint64_t sub_1001F2D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), void (*a6)(void), uint64_t (*a7)(char *, uint64_t))
{
  uint64_t v13 = sub_10000566C(a4);
  __chkstk_darwin(v13 - 8);
  sub_1001F40C0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = a5(0);
  sub_1001F3BBC();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v23 - v19;
  sub_1001F36E4(a1, v16, a4);
  if (getEnumTagSinglePayload for ClientCommand(v16, 1, v17) == 1)
  {
    sub_1001F3A28(v16, a4);
    return 0;
  }
  else
  {
    sub_1001F3638(v16, (uint64_t)v20, a6);
    uint64_t v21 = a7(v20, a3);
    sub_1001F368C((uint64_t)v20, a6);
  }
  return v21;
}

#error "1001F2EDC: call analysis failed (funcsize=69)"

void sub_1001F2F84(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (a2 != (void *)1)
  {
    swift_bridgeObjectRetain();
    sub_1001F3264(a3, (uint64_t)a4);
    uint64_t v11 = sub_1002CCFBC(a1, a2, a3, a4);
    Swift::Int v12 = *(unsigned int *)(a6 + 20);
    sub_100210AD0(64, 0xE100000000000000, a6 + 8, *(_DWORD *)(a6 + 20));
    if (v14)
    {
      v15._uint64_t countAndFlagsBits = 64;
      v15._unint64_t object = (void *)0xE100000000000000;
      Swift::Int v13 = ByteBuffer._setStringSlowpath(_:at:)(v15, v12);
    }
    Swift::Int v16 = v13;
    sub_1001F4630();
    if (v18)
    {
      __break(1u);
    }
    else
    {
      *(_DWORD *)(a6 + 20) = v17;
      swift_bridgeObjectRelease();
      sub_1001F3278(a3, (uint64_t)a4);
      if (!__OFADD__(v11, v16)) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1001F3084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10000566C(&qword_10070FE58);
  __chkstk_darwin(v5 - 8);
  sub_1001F40C0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10000566C(&qword_10070FD90);
  sub_1001F3BBC();
  __chkstk_darwin(v10);
  sub_1001F40C0();
  uint64_t v13 = v12 - v11;
  sub_1001F36E4(a1, v8, &qword_10070FE58);
  if (getEnumTagSinglePayload for ClientCommand(v8, 1, v9) == 1)
  {
    sub_1001F3A28(v8, &qword_10070FE58);
    return 0;
  }
  else
  {
    sub_1001F39D8(v8, v13, &qword_10070FD90);
    sub_1002B6E44(v13, a3);
    uint64_t v14 = v15;
    sub_1001F3A28(v13, &qword_10070FD90);
  }
  return v14;
}

uint64_t sub_1001F31B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F2D30(a1, a2, a3, &qword_10070FE50, (uint64_t (*)(void))type metadata accessor for SequenceMatchData, (void (*)(void))type metadata accessor for SequenceMatchData, (uint64_t (*)(char *, uint64_t))sub_1002B6FB8);
}

uint64_t sub_1001F3200(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F3264(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001F3278(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001F328C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F32C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F32FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F3354(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F33AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_1001F33B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_1001F33C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F3404(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (HIBYTE(a3) != 255) {
    return sub_1001F33AC(result, a2, a3, HIBYTE(a3) & 1);
  }
  return result;
}

void sub_1001F341C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 0xFC | 2) != 0xFE)
  {
    sub_1001F4290();
    v6();
    uint64_t v7 = sub_1001F4934();
    v8(v7);
  }
}

uint64_t sub_1001F3480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a5)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001F34D0(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (HIBYTE(a3) != 255) {
    return sub_1001F33B8(result, a2, a3, HIBYTE(a3) & 1);
  }
  return result;
}

uint64_t sub_1001F34E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a5 >> 62 == 1)
  {
    sub_1001F3480(result, a2, a3, a4, a5 & 1);
    return sub_1001F34D0(a6, a7, a8);
  }
  else if (!(a5 >> 62))
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001F3560(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a5 >> 62 == 1)
  {
    sub_1001F33C4(result, a2, a3, a4, a5 & 1);
    return sub_1001F3404(a6, a7, a8);
  }
  else if (!(a5 >> 62))
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1001F35D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((~a5 & 0xFE) != 0)
  {
    sub_1001F4290();
    v6();
    uint64_t v7 = sub_1001F4934();
    v8(v7);
  }
}

uint64_t sub_1001F3638(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1001F3BBC();
  uint64_t v4 = sub_1001F4A1C();
  v5(v4);
  return a2;
}

uint64_t sub_1001F368C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1001F3BBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001F36E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000566C(a3);
  sub_1001F3BBC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001F3740(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1001F379C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, unint64_t a5)
{
  uint64_t v6 = (a5 >> 37) & 7;
  if (v6 == 4 || v6 == 3)
  {
    swift_bridgeObjectRetain();
  }
  else if (v6 == 1)
  {
    swift_bridgeObjectRetain();
    sub_10013B5CC(a3, a4);
  }
}

uint64_t sub_1001F3814(uint64_t a1, void (*a2)(void, void, void, void, unint64_t))
{
  return a1;
}

void sub_1001F385C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, unint64_t a5)
{
  uint64_t v6 = (a5 >> 37) & 7;
  if (v6 == 4 || v6 == 3)
  {
    swift_bridgeObjectRelease();
  }
  else if (v6 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10013B5E0(a3, a4);
  }
}

uint64_t sub_1001F38D4(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001F38E8(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001F38FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F3934(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F396C()
{
  return swift_retain();
}

uint64_t sub_1001F3974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ParameterValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F39D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10000566C(a3);
  sub_1001F3BBC();
  uint64_t v4 = sub_1001F4A1C();
  v5(v4);
  return a2;
}

uint64_t sub_1001F3A28(uint64_t a1, uint64_t *a2)
{
  sub_10000566C(a2);
  sub_1001F3BBC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001F3A7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F3AFC()
{
  return swift_bridgeObjectRetain();
}

void sub_1001F3B7C(uint64_t a1, unint64_t a2)
{
  sub_100210AD0(a1, a2, v3, v2);
}

uint64_t sub_1001F3B94()
{
  *(void *)(v2 - 112) = v1;
  *(void *)(v2 - 104) = v0 & 0xFFFFFFFFFFFFFFLL;
  return swift_bridgeObjectRetain();
}

Swift::Int sub_1001F3BCC(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t sub_1001F3BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1001EBE14(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1001F3BF0()
{
  return 0;
}

Swift::Int sub_1001F3C0C(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t sub_1001F3C60()
{
  return 41;
}

uint64_t sub_1001F3C70()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F3C90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F3CAC()
{
  return swift_bridgeObjectRetain();
}

void sub_1001F3CF0()
{
  sub_100210AD0(v3, v2, v0, v1);
}

Swift::Int sub_1001F3D10(uint64_t a1, uint64_t a2)
{
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

Swift::Int sub_1001F3D28(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t sub_1001F3D44()
{
  return 40;
}

void sub_1001F3D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_100210AD0(a12, v14, v13, v12);
}

void sub_1001F3DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,__int16 a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  sub_1001E9A10(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44);
}

void sub_1001F3E08(uint64_t a1, unint64_t a2)
{
  sub_100210AD0(a1, a2, v2, v3);
}

Swift::Int sub_1001F3E20(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

Swift::Int sub_1001F3E3C(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

void sub_1001F3E58(uint64_t a1)
{
  sub_100210AD0(a1, 0xE100000000000000, v2, v1);
}

void sub_1001F3E74(uint64_t a1)
{
  sub_100210AD0(a1, 0xE100000000000000, v2, v1);
}

void sub_1001F3EAC()
{
}

uint64_t sub_1001F3EC8()
{
  return 0;
}

uint64_t sub_1001F3EF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F3F14()
{
  return swift_bridgeObjectRetain();
}

Swift::Int sub_1001F3F34(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, Swift::String _,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v27 = v24;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&countAndFlagsBits, v23);
}

uint64_t sub_1001F3F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)(v20 - 112) = a20;
  *(void *)(v20 - 104) = a18;
  return swift_retain();
}

uint64_t sub_1001F3F74()
{
  return swift_retain();
}

void sub_1001F3F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  ByteBuffer._setBytes(_:at:)(v18 - 112, a17, v17);
}

void sub_1001F3FB4(uint64_t a1)
{
  sub_100210AD0(a1, 0xE100000000000000, v2, v1);
}

uint64_t sub_1001F3FD4()
{
  return 0;
}

void sub_1001F3FF4()
{
  ByteBuffer._setBytes(_:at:)(v2, v0, v1);
}

uint64_t sub_1001F4014()
{
  return v0;
}

Swift::Int sub_1001F4028()
{
  uint64_t v4 = v1;
  uint64_t v5 = v2;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v0);
}

uint64_t sub_1001F4048()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F4078()
{
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001F4094()
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v0);
}

uint64_t sub_1001F40D0()
{
  return v0;
}

uint64_t sub_1001F40EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F4110()
{
  return 41;
}

void sub_1001F4154(uint64_t a1, unint64_t a2)
{
  sub_100210AD0(a1, a2, v3, v2);
}

uint64_t sub_1001F4188()
{
  return 41;
}

uint64_t sub_1001F41D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F4234()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F4260()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F427C@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1001F42C4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F42E4()
{
  return v0 - 112;
}

Swift::Int sub_1001F42F4(uint64_t a1)
{
  unint64_t v3 = 0xE100000000000000;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

void sub_1001F4330()
{
  *(_DWORD *)(v1 + 20) = v0;
}

Swift::Int sub_1001F4340()
{
  uint64_t v4 = v2;
  uint64_t v5 = v0;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v1);
}

uint64_t sub_1001F435C()
{
  return v0;
}

Swift::Int sub_1001F4378()
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v0);
}

uint64_t sub_1001F43A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F43C0()
{
  return swift_bridgeObjectRetain();
}

void sub_1001F43DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100210AD0(a9, v11, v10, v9);
}

Swift::Int sub_1001F4408(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,Swift::String _)
{
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v26 = v23;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&countAndFlagsBits, v22);
}

uint64_t sub_1001F4428()
{
  return swift_bridgeObjectRetain();
}

Swift::Int sub_1001F4448(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,Swift::String _)
{
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v27 = v23;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&countAndFlagsBits, v24);
}

void sub_1001F4468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  sub_100210AD0(a23, v23, v25, v24);
}

uint64_t sub_1001F4488()
{
  return sub_1001EE65C();
}

uint64_t sub_1001F4494()
{
  return sub_1001E9328();
}

void sub_1001F44A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
}

void sub_1001F44AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, char a8, uint64_t a9)
{
}

uint64_t sub_1001F4524()
{
  return 40;
}

uint64_t sub_1001F4530()
{
  return 0;
}

uint64_t sub_1001F453C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F4564()
{
  return v0;
}

uint64_t sub_1001F4590()
{
  return swift_release();
}

uint64_t sub_1001F45A8()
{
  return v0;
}

void sub_1001F4600(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t))
{
  LOBYTE(a11) = v13;
  sub_1001F1FA0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a11, a12, a13);
}

uint64_t sub_1001F4618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return a33;
}

uint64_t sub_1001F463C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F4658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19)
{
  *(_OWORD *)(v19 - 112) = a19;
  return v19 - 112;
}

uint64_t sub_1001F4670()
{
  return v0;
}

Swift::Int sub_1001F467C(uint64_t a1)
{
  uint64_t v4 = v2;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v1);
}

uint64_t sub_1001F46A8()
{
  return swift_bridgeObjectRetain();
}

void sub_1001F46CC()
{
  v1._uint64_t countAndFlagsBits = 0x5D736574796220;
  v1._unint64_t object = (void *)0xE700000000000000;
  sub_1005E1E30(v1);
}

uint64_t sub_1001F4700()
{
  return v0;
}

void sub_1001F4728(uint64_t a1)
{
  sub_100210AD0(a1, 0xE100000000000000, v2, v1);
}

uint64_t sub_1001F4744()
{
  return 41;
}

void sub_1001F4774()
{
  ByteBuffer._setBytes(_:at:)(v0, v1, v2);
}

Swift::Int sub_1001F4798(uint64_t a1)
{
  uint64_t v4 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

Swift::Int sub_1001F47B4(uint64_t a1)
{
  uint64_t v4 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&a1, v2);
}

void sub_1001F47D0(uint64_t a1)
{
  sub_100210AD0(a1, v1, v3, v2);
}

uint64_t sub_1001F47EC()
{
  return sub_1005E2D30();
}

uint64_t sub_1001F4810(__n128 a1)
{
  *(__n128 *)(v1 - 176) = a1;
  return v1 - 176;
}

uint64_t sub_1001F4838()
{
  return 0x20535554415453;
}

void sub_1001F4870()
{
  *(_DWORD *)(v0 + 20) = v1;
}

void sub_1001F487C()
{
  *(_DWORD *)(v0 + 20) = v1;
}

void sub_1001F48A0(uint64_t a1, uint64_t a2)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

void sub_1001F48B8(uint64_t a1, uint64_t a2)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, v2);
}

uint64_t sub_1001F48DC()
{
  return swift_retain();
}

uint64_t sub_1001F48FC()
{
  return swift_release();
}

void sub_1001F4914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  ByteBuffer._setBytes(_:at:)((uint64_t)va, a8, v13);
}

uint64_t sub_1001F4934()
{
  return v0;
}

uint64_t sub_1001F4948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v24 - 112) = a23;
  *(void *)(v24 - 104) = a18;
  return v23;
}

uint64_t sub_1001F4968()
{
  return swift_retain();
}

uint64_t sub_1001F4988()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F49CC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F4A04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F4A1C()
{
  return v0;
}

uint64_t sub_1001F4A30()
{
  return sub_1005E2D30();
}

uint64_t sub_1001F4A48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F4A6C()
{
  return v0;
}

uint64_t sub_1001F4A84()
{
  return swift_bridgeObjectRetain();
}

void sub_1001F4AC8()
{
  *(_DWORD *)(v1 + 20) = v0;
}

void sub_1001F4AD4()
{
  *(_DWORD *)(v1 + 20) = v0;
}

void sub_1001F4AE0(uint64_t a1)
{
  sub_100210AD0(a1, 0xE100000000000000, v2, v1);
}

uint64_t sub_1001F4B00()
{
  return 40;
}

Swift::Int sub_1001F4B14(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, Swift::String _)
{
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v23 = v19;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&countAndFlagsBits, v20);
}

uint64_t sub_1001F4B54()
{
  return v0;
}

void sub_1001F4B60()
{
  sub_100210AD0(v3, v0, v2, v1);
}

Swift::Int sub_1001F4B80()
{
  uint64_t v4 = v2;
  uint64_t v5 = v0;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v1);
}

void sub_1001F4BA0()
{
  *(_DWORD *)(v1 + 20) = v0;
}

uint64_t sub_1001F4BAC()
{
  return v0;
}

uint64_t sub_1001F4BE4()
{
  return swift_bridgeObjectRetain();
}

Swift::Int sub_1001F4C04(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,Swift::String _)
{
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v26 = v23;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&countAndFlagsBits, v22);
}

uint64_t sub_1001F4C24()
{
  return v0;
}

BOOL sub_1001F4C34(int *a1, int *a2)
{
  return static CredentialsRequestID.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t sub_1001F4C40()
{
  return sub_1002AB530(*v0);
}

void sub_1001F4C48(uint64_t a1)
{
  sub_100235AB0(a1, *v1);
}

uint64_t sub_1001F4C50(uint64_t a1)
{
  return sub_1002AB654(a1, *v1);
}

_DWORD *sub_1001F4C58@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void *NIOBSDSocket.AddressFamily.inet.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.inet;
}

void *NIOBSDSocket.AddressFamily.inet6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.inet6;
}

uint64_t static NIOBSDSocket.ProtocolFamily.inet6.getter()
{
  return 30;
}

void *NIOBSDSocket.AddressFamily.unix.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.AddressFamily.unix;
}

void *NIOBSDSocket.ProtocolFamily.inet.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.inet;
}

void *NIOBSDSocket.ProtocolFamily.inet6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.inet6;
}

void *NIOBSDSocket.ProtocolFamily.unix.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.unix;
}

void *NIOBSDSocket.ProtocolFamily.local.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.ProtocolFamily.local;
}

void *NIOBSDSocket.OptionLevel.ip.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.ip;
}

void *NIOBSDSocket.OptionLevel.ipv6.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.ipv6;
}

uint64_t static NIOBSDSocket.OptionLevel.ipv6.getter()
{
  return 41;
}

void *NIOBSDSocket.OptionLevel.tcp.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.tcp;
}

uint64_t static NIOBSDSocket.OptionLevel.tcp.getter()
{
  return 6;
}

void *NIOBSDSocket.OptionLevel.mptcp.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.mptcp;
}

uint64_t static NIOBSDSocket.OptionLevel.mptcp.getter()
{
  return 284;
}

void *NIOBSDSocket.OptionLevel.socket.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.socket;
}

uint64_t static MailboxLoggingCounter.unknown.getter()
{
  return 0xFFFFLL;
}

void *NIOBSDSocket.OptionLevel.udp.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.OptionLevel.udp;
}

uint64_t static NIOBSDSocket.OptionLevel.udp.getter()
{
  return 17;
}

void *NIOBSDSocket.Option.ip_add_membership.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_add_membership;
}

uint64_t static NIOBSDSocket.Option.ip_add_membership.getter()
{
  return 12;
}

void *NIOBSDSocket.Option.ip_drop_membership.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_drop_membership;
}

uint64_t static NIOBSDSocket.Option.ip_drop_membership.getter()
{
  return 13;
}

void *NIOBSDSocket.Option.ip_multicast_if.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_if;
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_if.getter()
{
  return 9;
}

void *NIOBSDSocket.Option.ip_multicast_loop.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_loop;
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_loop.getter()
{
  return 11;
}

void *NIOBSDSocket.Option.ip_multicast_ttl.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_multicast_ttl;
}

uint64_t static NIOBSDSocket.Option.ipv6_multicast_hops.getter()
{
  return 10;
}

void *NIOBSDSocket.Option.ip_hdrincl.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ip_hdrincl;
}

void *NIOBSDSocket.Option.ipv6_join_group.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_join_group;
}

void *NIOBSDSocket.Option.ipv6_leave_group.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_leave_group;
}

void *NIOBSDSocket.Option.ipv6_multicast_hops.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_hops;
}

void *NIOBSDSocket.Option.ipv6_multicast_if.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_if;
}

void *NIOBSDSocket.Option.ipv6_multicast_loop.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_multicast_loop;
}

void *NIOBSDSocket.Option.ipv6_v6only.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.ipv6_v6only;
}

uint64_t static NIOBSDSocket.Option.ipv6_v6only.getter()
{
  return 27;
}

void *NIOBSDSocket.Option.tcp_nodelay.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.tcp_nodelay;
}

void *NIOBSDSocket.Option.tcp_connection_info.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.tcp_connection_info;
}

uint64_t static NIOBSDSocket.Option.tcp_connection_info.getter()
{
  return 262;
}

void *NIOBSDSocket.Option.mptcp_info.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.mptcp_info;
}

void *NIOBSDSocket.Option.so_error.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_error;
}

uint64_t static NIOBSDSocket.Option.so_error.getter()
{
  return 4103;
}

void *NIOBSDSocket.Option.so_keepalive.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_keepalive;
}

uint64_t static RemoteMailbox.Attributes.nonExistent.getter()
{
  return 8;
}

void *NIOBSDSocket.Option.so_linger.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_linger;
}

uint64_t static RemoteMailbox.Attributes.hasChildren.getter()
{
  return 128;
}

void *NIOBSDSocket.Option.so_rcvbuf.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_rcvbuf;
}

uint64_t static NIOBSDSocket.Option.so_rcvbuf.getter()
{
  return 4098;
}

void *NIOBSDSocket.Option.so_rcvtimeo.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_rcvtimeo;
}

uint64_t static NIOBSDSocket.Option.so_rcvtimeo.getter()
{
  return 4102;
}

void *NIOBSDSocket.Option.so_reuseaddr.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_reuseaddr;
}

uint64_t static RemoteMailbox.Attributes.unmarked.getter()
{
  return 4;
}

void *NIOBSDSocket.Option.so_broadcast.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_broadcast;
}

uint64_t static RemoteMailbox.Attributes.subscribed.getter()
{
  return 32;
}

void *NIOBSDSocket.Option.so_timestamp.unsafeMutableAddressor()
{
  return &static NIOBSDSocket.Option.so_timestamp;
}

uint64_t static NIOBSDSocket.Option.so_timestamp.getter()
{
  return 1024;
}

unint64_t sub_1001F4ECC()
{
  unint64_t result = qword_10070FE80;
  if (!qword_10070FE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FE80);
  }
  return result;
}

unint64_t sub_1001F4F1C()
{
  unint64_t result = qword_10070FE88;
  if (!qword_10070FE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FE88);
  }
  return result;
}

unint64_t sub_1001F4F6C()
{
  unint64_t result = qword_10070FE90;
  if (!qword_10070FE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FE90);
  }
  return result;
}

unint64_t sub_1001F4FBC()
{
  unint64_t result = qword_10070FE98;
  if (!qword_10070FE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FE98);
  }
  return result;
}

void type metadata accessor for NIOBSDSocket()
{
}

void type metadata accessor for NIOBSDSocket.AddressFamily()
{
}

void type metadata accessor for NIOBSDSocket.ProtocolFamily()
{
}

void type metadata accessor for NIOBSDSocket.OptionLevel()
{
}

void type metadata accessor for NIOBSDSocket.Option()
{
}

uint64_t sub_1001F5044(int a1, const char *a2, void *a3)
{
  uint64_t result = inet_pton(a1, a2, a3);
  if (result)
  {
    if (result == 1) {
      return result;
    }
    int v4 = sub_1005E1050();
  }
  else
  {
    int v4 = 22;
  }
  sub_1001F50C4();
  swift_allocError();
  sub_1001F5198(v5, (uint64_t)"inet_pton(addressFamily:addressDescription:address:)");
  *(_DWORD *)(v6 + 16) = v4;
  return swift_willThrow();
}

unint64_t sub_1001F50C4()
{
  unint64_t result = qword_10070FEA0;
  if (!qword_10070FEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FEA0);
  }
  return result;
}

const char *sub_1001F5110(int a1, const void *a2, char *a3, socklen_t a4)
{
  int v4 = inet_ntop(a1, a2, a3, a4);
  if (!v4)
  {
    int v5 = sub_1005E1050();
    sub_1001F50C4();
    swift_allocError();
    sub_1001F5198(v6, (uint64_t)"inet_ntop(addressFamily:addressBytes:addressDescription:addressDescriptionLength:)");
    *(_DWORD *)(v7 + 16) = v5;
    swift_willThrow();
  }
  return v4;
}

void sub_1001F5198(unint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  a1[1] = (a2 - 32) | 0x8000000000000000;
}

uint64_t sub_1001F51AC(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 24);
  uint64_t v1 = *(void *)(result + 32);
  uint64_t v3 = v1 - v2;
  BOOL v4 = __OFSUB__(v1, v2);
  uint64_t v5 = v3 + 2;
  if (__OFADD__(v3, 2))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = v5 / 3;
  if ((unint64_t)(v5 / 3 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t result = swift_beginAccess();
  if (!v4)
  {
    __chkstk_darwin(4 * v6);
    return sub_1005E1DA0();
  }
LABEL_10:
  __break(1u);
  return result;
}

void sub_1001F52A8(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v9[0] = a1;
      v9[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      ByteBuffer._setBytes(_:at:)((uint64_t)v9, (uint64_t)v9 + (HIBYTE(a2) & 0xF), a4);
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v6 = sub_1005E2D30();
      }
      if (v6) {
        uint64_t v8 = v6 + v7;
      }
      else {
        uint64_t v8 = 0;
      }
      ByteBuffer._setBytes(_:at:)(v6, v8, a4);
    }
  }
}

void sub_1001F5364(uint64_t a1, unint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v8[0] = a1;
      v8[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      ByteBuffer._setBytes(_:at:)((uint64_t)v8, (uint64_t)v8 + (HIBYTE(a2) & 0xF), a4);
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v6 = sub_1005E2D30();
      }
      sub_1001FB524(v6, v7, a4, &v9);
    }
  }
}

Swift::OpaquePointer_optional __swiftcall ByteBuffer.getBytes(at:length:)(Swift::Int at, Swift::Int length)
{
  BOOL v4 = 0;
  if (at >= v2 && (length & 0x8000000000000000) == 0)
  {
    sub_1001F99D0();
    if (v5 != v6)
    {
      BOOL v4 = 0;
    }
    else
    {
      sub_1001F969C();
      uint64_t v7 = (const void *)sub_1001F98A8();
      BOOL v4 = sub_1001F9058(v7, v8);
    }
  }
  result.is_nil = length;
  result.value._rawValue = v4;
  return result;
}

Swift::OpaquePointer_optional __swiftcall ByteBuffer.readBytes(length:)(Swift::Int length)
{
  sub_1001F9B10();
  unsigned int v3 = *(_DWORD *)(v1 + 8);
  Swift::OpaquePointer_optional result = ByteBuffer.getBytes(at:length:)(v3, length);
  if (result.value._rawValue)
  {
    if (__CFADD__(v3, length)) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v1 + 8) = v3 + length;
    }
  }
  return result;
}

void ByteBuffer.writeStaticString(_:)(uint64_t a1, uint64_t a2, char a3)
{
  ByteBuffer.setStaticString(_:at:)(a1, a2, a3, *(_DWORD *)(v3 + 12));
  sub_1001F99A8();
  if (v5) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v3 + 12) = v4;
  }
}

uint64_t ByteBuffer.setStaticString(_:at:)(uint64_t result, uint64_t a2, char a3, Swift::UInt32 a4)
{
  if (a3)
  {
    __break(1u);
  }
  else if (result)
  {
    ByteBuffer._setBytes(_:at:)(result, result + a2, a4);
    return result;
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall ByteBuffer.writeString(_:)(Swift::String a1)
{
  unint64_t object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  Swift::Int v4 = *(unsigned int *)(v1 + 12);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1001F9AF0();
  sub_100210AD0(v5, v6, v1, v4);
  Swift::Int v8 = v7;
  char v10 = v9;
  Swift::Int result = swift_bridgeObjectRelease();
  if (v10)
  {
    v12._uint64_t countAndFlagsBits = countAndFlagsBits;
    v12._unint64_t object = object;
    Swift::Int result = ByteBuffer._setStringSlowpath(_:at:)(v12, v4);
    Swift::Int v8 = result;
  }
  int v13 = *(_DWORD *)(v1 + 12);
  BOOL v14 = __CFADD__(v13, v8);
  int v15 = v13 + v8;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 12) = v15;
    return v8;
  }
  return result;
}

Swift::Int __swiftcall ByteBuffer.setString(_:at:)(Swift::String _, Swift::Int at)
{
  sub_1001F9ABC();
  swift_bridgeObjectRetain();
  sub_1001F96FC();
  sub_1001F9AA0();
  if ((v5 & 1) == 0) {
    return v2;
  }
  uint64_t v8 = v4;
  uint64_t v9 = v3;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v8, at);
}

Swift::Int __swiftcall ByteBuffer.writeNullTerminatedString(_:)(Swift::String a1)
{
  sub_1001F9A04();
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  sub_1001F9ABC();
  int v6 = *(_DWORD *)(v1 + 12);
  swift_bridgeObjectRetain();
  sub_1001F96FC();
  sub_1001F9AA0();
  if (v3) {
    int v2 = sub_1001F9A18();
  }
  char v10 = 0;
  ByteBuffer._setBytes(_:at:)((uint64_t)&v10, (uint64_t)&v11, v6 + v2);
  sub_1001F99A8();
  if (v8) {
    __break(1u);
  }
  *(_DWORD *)(v1 + 12) = v7;
  sub_1001F990C();
  return result;
}

Swift::Int __swiftcall ByteBuffer.setNullTerminatedString(_:at:)(Swift::String _, Swift::Int at)
{
  sub_1001F9A04();
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  int v7 = v6;
  sub_1001F9ABC();
  swift_bridgeObjectRetain();
  sub_1001F96FC();
  sub_1001F9AA0();
  if (v3) {
    int v2 = sub_1001F9A18();
  }
  char v9 = 0;
  ByteBuffer._setBytes(_:at:)((uint64_t)&v9, (uint64_t)&v10, v2 + v7);
  sub_1001F990C();
  return result;
}

Swift::Int __swiftcall ByteBuffer._setStringSlowpath(_:at:)(Swift::String _, Swift::Int at)
{
  Swift::UInt32 v3 = at;
  unint64_t object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  swift_bridgeObjectRetain();
  sub_1001F52A8(countAndFlagsBits, (unint64_t)object, v2, v3);
  Swift::Int v7 = v6;
  char v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_bridgeObjectRetain();
    sub_1001F5364(countAndFlagsBits, (unint64_t)object, v2, v3);
    if ((v10 & 0x100000000) != 0) {
      unsigned int v11 = sub_1001F80B8(countAndFlagsBits, (unint64_t)object, v3);
    }
    else {
      unsigned int v11 = v10;
    }
    swift_bridgeObjectRelease();
    return v11;
  }
  return v7;
}

void sub_1001F5888(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt32 a3@<W3>, void *a4@<X8>)
{
  if (a1) {
    uint64_t v5 = a1 + a2;
  }
  else {
    uint64_t v5 = 0;
  }
  ByteBuffer._setBytes(_:at:)(a1, v5, a3);
  *a4 = v6;
}

Swift::String_optional __swiftcall ByteBuffer.getString(at:length:)(Swift::Int at, Swift::Int length)
{
  uint64_t v4 = 0;
  if (at < v2)
  {
    unsigned int v6 = 0;
  }
  else
  {
    unsigned int v6 = 0;
    if ((length & 0x8000000000000000) == 0)
    {
      sub_1001F99D0();
      if (v7 != v8)
      {
        uint64_t v4 = variable initialization expression of UnsafeExtractedAttachment.filename();
      }
      else
      {
        sub_1001F969C();
        sub_1001F98A8();
        uint64_t v4 = sub_1005E1D70();
      }
    }
  }
  result.value._unint64_t object = v6;
  result.value._uint64_t countAndFlagsBits = v4;
  return result;
}

Swift::String_optional __swiftcall ByteBuffer.getNullTerminatedString(at:)(Swift::Int at)
{
  sub_1001F9A04();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  Swift::Int_optional v8 = ByteBuffer._getNullTerminatedStringLength(at:)(v3);
  if (v8.is_nil)
  {
LABEL_5:
    variable initialization expression of UnsafeExtractedAttachment.filename();
    goto LABEL_6;
  }
  if (v4 >= v2 && (v8.value & 0x8000000000000000) == 0)
  {
    if ((HIDWORD(v2) - v2) - v8.value >= v4 - v2)
    {
      sub_1001F969C();
      sub_1005E1D70();
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_6:
  sub_1001F990C();
  result.value._unint64_t object = v6;
  result.value._uint64_t countAndFlagsBits = v5;
  return result;
}

Swift::Int_optional __swiftcall ByteBuffer._getNullTerminatedStringLength(at:)(Swift::Int at)
{
  if (v2 > at || (Swift::Int v4 = at, v5 = HIDWORD(v2), v6 = HIDWORD(v2) - at, (uint64_t)HIDWORD(v2) <= at))
  {
LABEL_9:
    Swift::Int at = 0;
    LOBYTE(v1) = 1;
    goto LABEL_17;
  }
  unint64_t v7 = (v3 >> 24) & 0xFFFF00 | BYTE6(v3);
  if (v5 > (v3 - v7))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v5 < v2) {
    goto LABEL_15;
  }
  uint64_t v8 = v1;
  Swift::Int at = sub_1001F969C();
  uint64_t v9 = 0;
  while (*(unsigned char *)(*(void *)(v8 + 24) + v4 + v7 + v9))
  {
    if ((v6 & ~(v6 >> 63)) == v9)
    {
      __break(1u);
      goto LABEL_14;
    }
    if (v6 == ++v9) {
      goto LABEL_9;
    }
  }
  BOOL v10 = __OFADD__(v9, v4);
  Swift::Int v11 = v9 + v4;
  if (v10) {
    goto LABEL_16;
  }
  LOBYTE(v1) = 0;
  Swift::Int at = v11 - v4;
LABEL_17:
  result.is_nil = v1;
  result.value = at;
  return result;
}

Swift::String_optional __swiftcall ByteBuffer.readString(length:)(Swift::Int length)
{
  sub_1001F9A04();
  if ((v2 & 0x8000000000000000) != 0
    || (int v3 = v2, v4 = *(_DWORD *)(v1 + 8), (*(_DWORD *)(v1 + 12) - v4) < v2))
  {
    variable initialization expression of UnsafeExtractedAttachment.filename();
  }
  else
  {
    sub_1001F969C();
    uint64_t v5 = sub_1005E1D70();
    if (__CFADD__(v4, v3))
    {
      __break(1u);
      goto LABEL_8;
    }
    *(_DWORD *)(v1 + 8) = v4 + v3;
  }
  sub_1001F990C();
LABEL_8:
  result.value._unint64_t object = v6;
  result.value._uint64_t countAndFlagsBits = v5;
  return result;
}

Swift::String_optional __swiftcall ByteBuffer.readNullTerminatedString()()
{
  sub_1001F9A34();
  unsigned int v1 = *(_DWORD *)(v0 + 8);
  unsigned int v2 = *(_DWORD *)(v0 + 12);
  Swift::Int_optional v9 = ByteBuffer._getNullTerminatedStringLength(at:)(v1);
  if (!v9.is_nil)
  {
    Swift::Int value = v9.value;
    uint64_t v4 = 0;
    if (value < 0)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = 0;
      if (value <= v2 - v1)
      {
        sub_1001F969C();
        uint64_t v4 = sub_1005E1D70();
        BOOL v6 = __CFADD__(v1, value);
        v1 += value;
        if (v6) {
          goto LABEL_14;
        }
        *(_DWORD *)(v0 + 8) = v1;
      }
    }
    unsigned int v7 = v1 + 1;
    if (v1 == -1)
    {
      __break(1u);
    }
    else if (v2 >= v7)
    {
      *(_DWORD *)(v0 + 8) = v7;
      goto LABEL_11;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  variable initialization expression of UnsafeExtractedAttachment.filename();
LABEL_11:
  sub_1001F99EC();
LABEL_15:
  result.value._unint64_t object = v5;
  result.value._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t ByteBuffer.writeSubstring(_:)()
{
  sub_1001F9BFC();
  Swift::Int v1 = *(unsigned int *)(v0 + 12);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1001F9BE8();
  uint64_t v6 = sub_1001F8B30(v2, v3, v4, v5, v0, v1);
  char v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
    sub_1001F9BE8();
    uint64_t v10 = sub_1005E1D00();
    uint64_t v12 = (void *)v11;
    sub_100210AD0(v10, v11, v0, v1);
    if (v14)
    {
      v15._uint64_t countAndFlagsBits = v10;
      v15._unint64_t object = v12;
      Swift::Int v13 = ByteBuffer._setStringSlowpath(_:at:)(v15, v1);
    }
    uint64_t v6 = v13;
    uint64_t result = swift_bridgeObjectRelease();
  }
  int v16 = *(_DWORD *)(v0 + 12);
  BOOL v17 = __CFADD__(v16, v6);
  int v18 = v16 + v6;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v0 + 12) = v18;
    return v6;
  }
  return result;
}

Swift::Int ByteBuffer.setSubstring(_:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::UInt32 a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1001F9BB4();
  uint64_t v11 = sub_1001F8B30(v7, v8, v9, v10, v5, a5);
  char v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    return v11;
  }
  sub_1001F9BB4();
  uint64_t v14 = sub_1005E1D00();
  sub_100210AD0(v14, v15, v5, a5);
  if ((v17 & 1) == 0)
  {
    uint64_t v11 = v16;
    swift_bridgeObjectRelease();
    return v11;
  }
  Swift::Int v19 = sub_1001F9A18();
  swift_bridgeObjectRelease();
  return v19;
}

void ByteBuffer.writeDispatchData(_:)()
{
  ByteBuffer.setDispatchData(_:at:)();
  sub_1001F99A8();
  if (v2) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v0 + 12) = v1;
  }
}

void ByteBuffer.setDispatchData(_:at:)()
{
  sub_1001F9A34();
  unint64_t v2 = v1;
  uint64_t v3 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  unint64_t v4 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_12;
  }
  ByteBuffer.reserveCapacity(_:)(v2 + v3);
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
  int v5 = *(_DWORD *)(v0 + 16);
  int v6 = *(unsigned __int16 *)(v0 + 20);
  int v7 = *(unsigned __int8 *)(v0 + 22);
  sub_1001F969C();
  unint64_t v8 = v5 - (v7 | (v6 << 8));
  if ((uint64_t)v4 < (uint64_t)v2)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  BOOL v9 = __OFSUB__(v4, v2);
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_13;
  }
  if (v8 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v4 > v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!v9)
  {
    sub_1005E17D0();
    sub_1001F99EC();
    return;
  }
LABEL_16:
  __break(1u);
}

void ByteBuffer.getDispatchData(at:length:)()
{
  sub_1001F9A04();
  uint64_t v4 = v3;
  if (v0 < v2 || v1 < 0 || (HIDWORD(v2) - v2) - v1 < v0 - v2)
  {
    sub_1005E17E0();
    sub_1001F990C();
    storeEnumTagSinglePayload for ClientCommand(v5, v6, v7, v8);
  }
  else
  {
    sub_1001F969C();
    sub_1005E1770();
    uint64_t v10 = sub_1005E17E0();
    storeEnumTagSinglePayload for ClientCommand(v4, 0, 1, v10);
    sub_1001F990C();
  }
}

uint64_t ByteBuffer.readDispatchData(length:)@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000566C(&qword_10070FEA8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F9B10();
  int v8 = *(_DWORD *)(v2 + 8);
  ByteBuffer.getDispatchData(at:length:)();
  uint64_t v9 = sub_1005E17E0();
  if (getEnumTagSinglePayload for ClientCommand((uint64_t)v7, 1, v9) == 1)
  {
    sub_1001F9510((uint64_t)v7);
    uint64_t v10 = a2;
    uint64_t v11 = 1;
    return storeEnumTagSinglePayload for ClientCommand(v10, v11, 1, v9);
  }
  sub_1001F9720();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v7, v9);
  if (!__CFADD__(v8, a1))
  {
    *(_DWORD *)(v2 + 8) = v8 + a1;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
    return storeEnumTagSinglePayload for ClientCommand(v10, v11, 1, v9);
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer.readWithUnsafeReadableBytes(_:)(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v4 = *v1;
  uint64_t v5 = *((unsigned int *)v1 + 2);
  uint64_t v6 = *((unsigned int *)v1 + 3);
  uint64_t v7 = *((unsigned __int16 *)v1 + 10);
  uint64_t v8 = *((unsigned __int8 *)v1 + 22);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v4 + 24) + (v8 | (v7 << 8));
  uint64_t result = a1(v9 + v5, v9 + v6);
  if (!v2)
  {
    if (__CFADD__(v5, result)) {
      __break(1u);
    }
    else {
      *((_DWORD *)v1 + 2) = v5 + result;
    }
  }
  return result;
}

uint64_t ByteBuffer.readWithUnsafeMutableReadableBytes(_:)(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v3 = v1;
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
  uint64_t v6 = *((unsigned int *)v1 + 2);
  uint64_t v5 = *((unsigned int *)v1 + 3);
  uint64_t v7 = *v3;
  uint64_t v8 = *((unsigned __int16 *)v3 + 10);
  uint64_t v9 = *((unsigned __int8 *)v3 + 22);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v7 + 24) + (v9 | (v8 << 8));
  uint64_t result = a1(v10 + v6, v10 + v5);
  if (!v2)
  {
    if (__CFADD__(v6, result)) {
      __break(1u);
    }
    else {
      *((_DWORD *)v3 + 2) = v6 + result;
    }
  }
  return result;
}

void ByteBuffer.set(buffer:at:)()
{
}

void ByteBuffer.writeBuffer(_:)()
{
  sub_1001F9A34();
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *((unsigned int *)v1 + 2);
  uint64_t v5 = *((unsigned int *)v1 + 3);
  uint64_t v6 = *((unsigned __int16 *)v1 + 10);
  uint64_t v7 = *((unsigned __int8 *)v1 + 22);
  Swift::UInt32 v8 = *(_DWORD *)(v0 + 12);
  sub_1001F969C();
  uint64_t v9 = *(void *)(v3 + 24) + (v7 | (v6 << 8));
  ByteBuffer._setBytes(_:at:)(v9 + v4, v9 + v5, v8);
  sub_1001F99A8();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v0 + 12) = v11;
    if (!__CFADD__(v4, v10))
    {
      *((_DWORD *)v2 + 2) = v4 + v10;
      sub_1001F99EC();
      return;
    }
  }
  __break(1u);
}

void ByteBuffer.writeBytes<A>(_:)(uint64_t *a1, uint64_t a2)
{
  ByteBuffer.setBytes<A>(_:at:)(a1, *(_DWORD *)(v2 + 12), a2);
  sub_1001F99A8();
  if (v4) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v2 + 12) = v3;
  }
}

void ByteBuffer.writeBytes(_:)(uint64_t a1, uint64_t a2)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, *(_DWORD *)(v2 + 12));
  sub_1001F99A8();
  if (v4) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v2 + 12) = v3;
  }
}

Swift::Int __swiftcall ByteBuffer.writeRepeatingByte(_:count:)(Swift::UInt8 _, Swift::Int count)
{
  Swift::Int result = ByteBuffer.setRepeatingByte(_:count:at:)(_, count, *(unsigned int *)(v2 + 12));
  int v5 = *(_DWORD *)(v2 + 12);
  BOOL v6 = __CFADD__(v5, count);
  int v7 = v5 + count;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 + 12) = v7;
    return count;
  }
  return result;
}

Swift::Int __swiftcall ByteBuffer.setRepeatingByte(_:count:at:)(Swift::UInt8 _, Swift::Int count, Swift::Int at)
{
  sub_1001F9A34();
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  uint64_t v8 = v6 + v5;
  if (__OFADD__(v6, v5))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  int v9 = result;
  ByteBuffer.reserveCapacity(_:)(v6 + v5);
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
  uint64_t v10 = *(unsigned __int16 *)(v3 + 20);
  uint64_t v11 = *(unsigned __int8 *)(v3 + 22);
  char v12 = (void *)(*(void *)v3 + 24);
  Swift::Int result = sub_1001F969C();
  if (v8 < v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v8 - v7 < 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (v8 != v7) {
    memset((void *)(*v12 + (v11 | (v10 << 8)) + v7), v9, v8 - v7);
  }
  sub_1001F99EC();
  return result;
}

void ByteBuffer.slice()(uint64_t a1, uint64_t a2)
{
  ByteBuffer.getSlice(at:length:)(a2, (HIDWORD(a2) - a2));
  if (!v2) {
    __break(1u);
  }
}

uint64_t ByteBuffer.readSlice(length:)(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0) {
    return 0;
  }
  Swift::UInt32 v2 = a1;
  uint64_t v4 = *(unsigned int *)(v1 + 8);
  unint64_t v3 = *(unsigned int *)(v1 + 12);
  if (v3 < a1 || (uint64_t)(v3 - a1) < v4) {
    return 0;
  }
  int v7 = *(unsigned __int8 *)(v1 + 22) | (*(unsigned __int16 *)(v1 + 20) << 8);
  uint64_t result = (v7 + v4);
  if (__CFADD__(v7, v4))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)v1;
    if (BYTE3(result))
    {
      uint64_t result = ByteBuffer._copyIntoByteBufferWithSliceIndex0_slowPath(index:length:)(*(unsigned int *)(v1 + 8), v2, *(void *)v1);
      uint64_t v6 = result;
    }
    else
    {
      _UInt24.init(_:)(result);
      uint64_t result = swift_retain();
    }
    if (!__CFADD__(v4, v2))
    {
      *(_DWORD *)(v1 + 8) = v4 + v2;
      return v6;
    }
  }
  __break(1u);
  return result;
}

void ByteBuffer.writeImmutableBuffer(_:)()
{
}

uint64_t ByteBuffer.readWithUnsafeMutableReadableBytes<A>(_:)()
{
  sub_1001F9AC8();
  swift_getTupleTypeMetadata2();
  sub_1001F9720();
  __chkstk_darwin(v5);
  int v7 = (int *)&v15[-v6];
  uint64_t v16 = v0;
  uint64_t v17 = v4;
  uint64_t v18 = v3;
  uint64_t result = ByteBuffer.withUnsafeMutableReadableBytes<A>(_:)();
  if (!v2)
  {
    int v9 = *v7;
    sub_1001F9720();
    uint64_t v10 = sub_1001F9ADC();
    uint64_t result = v11(v10);
    int v12 = *(_DWORD *)(v1 + 8);
    BOOL v13 = __CFADD__(v12, v9);
    int v14 = v12 + v9;
    if (v13) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v1 + 8) = v14;
    }
  }
  return result;
}

uint64_t ByteBuffer.readWithUnsafeReadableBytes<A>(_:)()
{
  sub_1001F9AC8();
  swift_getTupleTypeMetadata2();
  sub_1001F9720();
  __chkstk_darwin(v5);
  int v7 = (int *)&v15[-v6];
  uint64_t v16 = v0;
  uint64_t v17 = v4;
  uint64_t v18 = v3;
  uint64_t result = ByteBuffer.withUnsafeReadableBytes<A>(_:)((uint64_t (*)(uint64_t))sub_1001F9594);
  if (!v2)
  {
    int v9 = *v7;
    sub_1001F9720();
    uint64_t v10 = sub_1001F9ADC();
    uint64_t result = v11(v10);
    int v12 = *(_DWORD *)(v1 + 8);
    BOOL v13 = __CFADD__(v12, v9);
    int v14 = v12 + v9;
    if (v13) {
      __break(1u);
    }
    else {
      *(_DWORD *)(v1 + 8) = v14;
    }
  }
  return result;
}

uint64_t sub_1001F6848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(char *, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a3((char *)a4 + *(int *)(TupleTypeMetadata2 + 48), a1, a2);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t ByteBuffer.init(string:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = ByteBufferAllocator.buffer(string:)(a1, a2, (uint64_t)j_j__malloc_0, (uint64_t)j_j__realloc_0, (uint64_t)j_j__free_0);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ByteBufferAllocator.buffer(string:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001F9BFC();
  uint64_t v10 = (void *)v9;
  uint64_t v11 = v8;
  if ((v9 & 0x1000000000000000) != 0)
  {
    sub_1001F9AF0();
    Swift::Int v15 = sub_1005E1E80();
    if (v15 < 0) {
      __break(1u);
    }
    LODWORD(v12) = v15;
    if (v15) {
      goto LABEL_6;
    }
LABEL_10:
    if (qword_10070FB10 != -1) {
      goto LABEL_17;
    }
    goto LABEL_11;
  }
  if ((v9 & 0x2000000000000000) != 0) {
    uint64_t v12 = HIBYTE(v9) & 0xF;
  }
  else {
    uint64_t v12 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12) {
    goto LABEL_10;
  }
LABEL_6:
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v13 = sub_1001F98F4(v12, v6, v5, a5);
  sub_1001F969C();
  Swift::UInt32 v14 = 0;
  while (1)
  {
    uint64_t v39 = v13;
    Swift::UInt32 v40 = v14;
    Swift::Int v16 = v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1001F9AF0();
    sub_100210AD0(v17, v18, v19, v14);
    int v21 = v20;
    char v23 = v22;
    uint64_t v24 = swift_bridgeObjectRelease();
    if (v23)
    {
      v32._uint64_t countAndFlagsBits = v11;
      v32._unint64_t object = v10;
      uint64_t v24 = ByteBuffer._setStringSlowpath(_:at:)(v32, v16);
      int v21 = v24;
    }
    if (!__CFADD__(v40, v21)) {
      break;
    }
    __break(1u);
LABEL_17:
    swift_once();
LABEL_11:
    uint64_t v13 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
    Swift::UInt32 v14 = HIDWORD(qword_100761858);
    sub_1001F985C();
  }
  return sub_1001F96B4(v24, v25, v26, v27, v28, v29, v30, v31, v34, v35, v36, v37, v38, v39);
}

#error "1001F6C08: call analysis failed (funcsize=83)"

#error "1001F6D34: call analysis failed (funcsize=72)"

uint64_t ByteBuffer.init(staticString:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ByteBufferAllocator.buffer(staticString:)(a1, a2, a3, j_j__malloc_0, j_j__realloc_0, j_j__free_0, sub_1001FA3EC);
}

#error "1001F6EB0: call analysis failed (funcsize=70)"

uint64_t ByteBuffer.init<A>(bytes:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = ByteBufferAllocator.buffer<A>(bytes:)(a1, (uint64_t (*)(void))j_j__malloc_0, (uint64_t)j_j__realloc_0, (uint64_t)j_j__free_0, (uint64_t)sub_1001FA3EC, a2);
  sub_1001F9720();
  uint64_t v3 = sub_1001F9B24();
  v4(v3);
  return v2;
}

uint64_t sub_1001F6FAC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
    if (qword_10070FB10 != -1) {
      goto LABEL_10;
    }
    goto LABEL_4;
  }
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v9 = sub_1001F98F4(v5, a2, a3, a4);
  sub_1001F969C();
  int v10 = 0;
  Swift::UInt32 v11 = 0;
  __int16 v12 = 0;
  char v13 = 0;
  int v14 = *(_DWORD *)(v9 + 16);
  while (1)
  {
    uint64_t v29 = v9;
    int v30 = v10;
    Swift::UInt32 v31 = v11;
    int v32 = v14;
    __int16 v33 = v12;
    char v34 = v13;
    uint64_t v15 = sub_100201A34(a1, (uint64_t)&v29, v11);
    if ((v15 & 0x100000000) != 0) {
      uint64_t v15 = (uint64_t)sub_1001F847C(a1, v11);
    }
    if (!__CFADD__(v31, v15)) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_once();
LABEL_4:
    uint64_t v9 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
    int v10 = qword_100761858;
    Swift::UInt32 v11 = HIDWORD(qword_100761858);
    int v14 = dword_100761860;
    __int16 v12 = word_100761864;
    char v13 = byte_100761866;
    swift_retain();
  }
  return sub_1001F96B4(v15, v16, v17, v18, v19, v20, v21, v22, v24, v25, v26, v27, v28, v29);
}

uint64_t ByteBufferAllocator.buffer<A>(bytes:)(uint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (uint64_t)a1;
  uint64_t v13 = sub_1005E1F80();
  if (v13 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v12 = v13;
  if (!v13)
  {
    if (qword_10070FB10 == -1)
    {
LABEL_5:
      sub_1001F987C();
      goto LABEL_6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v12 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v12, a2, a3, a4, a5);
  sub_1001F969C();
  sub_1001F9B4C();
LABEL_6:
  ByteBuffer.writeBytes<A>(_:)(a1, a6);
  return sub_1001F9920(v14, v15, v16, v17, v18, v19, v20, v21, v23, v24, v25, v26, v27, v12);
}

uint64_t ByteBuffer.init<A>(integer:endianness:as:)(uint64_t a1)
{
  uint64_t v1 = ByteBufferAllocator.buffer<A>(integer:endianness:as:)(a1);
  sub_1001F9720();
  uint64_t v2 = sub_1001F9B24();
  v3(v2);
  return v1;
}

#error "1001F73E0: call analysis failed (funcsize=78)"

#error "1001F74D8: call analysis failed (funcsize=60)"

#error "1001F75BC: call analysis failed (funcsize=54)"

uint64_t ByteBuffer.init(buffer:)(uint64_t a1, unint64_t a2, int a3, __n128 a4)
{
  unsigned int v5 = a2;
  unint64_t v7 = HIDWORD(a2);
  int v8 = HIDWORD(a2) - a2;
  if (HIDWORD(a2) == a2)
  {
    if (qword_10070FB10 != -1) {
      swift_once();
    }
    uint64_t v9 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
    a4.n128_u64[0] = qword_100761858;
    __n128 v19 = a4;
    swift_retain();
  }
  else
  {
    type metadata accessor for ByteBuffer._Storage();
    uint64_t v9 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v8, (uint64_t (*)(void))j_j__malloc_0, (uint64_t)j_j__realloc_0, (uint64_t)j_j__free_0, (uint64_t)sub_1001FA3EC);
    sub_1001F969C();
  }
  LODWORD(v24) = a3;
  sub_1001F9B80();
  uint64_t v10 = swift_release();
  return sub_1001F99B4(v10, v11, v12, v13, v14, v15, v16, v17, v19.n128_i64[0], v19.n128_i64[1], v20, v21, v22, v23, a1, __SPAIR64__(v7, v5), v24, v9);
}

uint64_t ByteBufferAllocator.buffer(buffer:)(uint64_t a1, unint64_t a2, int a3)
{
  unsigned int v8 = a2;
  unint64_t v10 = HIDWORD(a2);
  int v11 = HIDWORD(a2) - a2;
  if (HIDWORD(a2) == a2)
  {
    if (qword_10070FB10 != -1) {
      swift_once();
    }
    sub_1001F987C();
  }
  else
  {
    sub_1001F9A7C();
    uint64_t v3 = sub_1001F98F4(v11, v6, v5, v4);
    sub_1001F969C();
    sub_1001F9B4C();
  }
  LODWORD(v27) = a3;
  sub_1001F9B80();
  return sub_1001F99B4(v12, v13, v14, v15, v16, v17, v18, v19, v21, v22, v23, v24, v25, v26, a1, __SPAIR64__(v10, v8), v27, v3);
}

uint64_t ByteBuffer.init(dispatchData:)(uint64_t a1)
{
  uint64_t v2 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v2 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  int v3 = v2;
  if (!v2)
  {
    if (qword_10070FB10 != -1) {
      goto LABEL_10;
    }
    goto LABEL_5;
  }
  type metadata accessor for ByteBuffer._Storage();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v3, (uint64_t (*)(void))j_j__malloc_0, (uint64_t)j_j__realloc_0, (uint64_t)j_j__free_0, (uint64_t)sub_1001FA3EC);
  sub_1001F969C();
  sub_1001F9A64();
  while (1)
  {
    sub_1001F97E4();
    if (!__CFADD__(v8, v4)) {
      break;
    }
LABEL_9:
    __break(1u);
LABEL_10:
    swift_once();
LABEL_5:
    sub_1001F993C();
  }
  sub_1005E17E0();
  sub_1001F9720();
  (*(void (**)(uint64_t))(v5 + 8))(a1);
  return v7;
}

uint64_t ByteBufferAllocator.buffer(dispatchData:)()
{
  uint64_t v0 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v0 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!v0)
  {
    if (qword_10070FB10 != -1) {
      goto LABEL_10;
    }
    goto LABEL_5;
  }
  type metadata accessor for ByteBuffer._Storage();
  sub_1001F9BA0();
  static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v1, v2, v3, v4, v5);
  sub_1001F969C();
  sub_1001F9A64();
  while (1)
  {
    sub_1001F97E4();
    if (!__CFADD__(v19, v6)) {
      break;
    }
LABEL_9:
    __break(1u);
LABEL_10:
    swift_once();
LABEL_5:
    sub_1001F993C();
  }
  return sub_1001F96D8(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16, v17, v18);
}

uint64_t ByteBuffer.init(from:)(void *a1)
{
  sub_10003BCDC(a1, a1[3]);
  sub_1001F9B38();
  sub_1005E34D0();
  if (!v2)
  {
    sub_10003BCDC(v8, v8[3]);
    sub_1001F9B38();
    uint64_t v4 = sub_1005E32B0();
    uint64_t v7 = static Base64.decode(string:options:)(v4, v5, 0);
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_1001F6FAC(v7, (uint64_t (*)(void))j_j__malloc_0, (uint64_t)j_j__realloc_0, (uint64_t)j_j__free_0);
    swift_bridgeObjectRelease();
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v8);
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
  return v1;
}

uint64_t ByteBuffer.encode(to:)()
{
  sub_1001F9BFC();
  uint64_t v3 = v2;
  unint64_t v5 = HIDWORD(v4);
  sub_10003BCDC(v6, v6[3]);
  uint64_t result = sub_1005E34F0();
  if (v5 < v1)
  {
    __break(1u);
  }
  else if (v0 - (BYTE6(v0) | (WORD2(v0) << 8)) >= v5)
  {
    uint64_t v9 = v3;
    unsigned int v10 = v1;
    int v11 = v5;
    int v12 = v0;
    __int16 v13 = WORD2(v0);
    char v14 = BYTE6(v0);
    uint64_t v15 = v1;
    unint64_t v16 = v5;
    swift_retain();
    sub_1001F51AC((uint64_t)&v9);
    swift_release();
    sub_100057374((uint64_t)v8, v8[3]);
    sub_1005E32D0();
    swift_bridgeObjectRelease();
    return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v8);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F7D28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = ByteBuffer.init(from:)(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
    *(_WORD *)(a2 + 20) = WORD2(v6);
    *(unsigned char *)(a2 + 22) = BYTE6(v6);
  }
  return result;
}

uint64_t sub_1001F7D70()
{
  return ByteBuffer.encode(to:)();
}

uint64_t Optional<A>.setOrWriteImmutableBuffer(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)v3)
  {
    ByteBuffer.writeBuffer(_:)();
    return v4;
  }
  else
  {
    uint64_t v5 = (HIDWORD(a2) - a2);
    *(void *)uint64_t v3 = a1;
    *(void *)(v3 + 8) = a2;
    *(_DWORD *)(v3 + 16) = a3;
    *(unsigned char *)(v3 + 22) = BYTE6(a3);
    *(_WORD *)(v3 + 20) = WORD2(a3);
    swift_retain();
  }
  return v5;
}

void Optional<A>.setOrWriteBuffer(_:)(uint64_t a1)
{
  if (*(void *)v1)
  {
    ByteBuffer.writeBuffer(_:)();
  }
  else
  {
    uint64_t v2 = *(unsigned int *)(a1 + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 12);
    int v4 = *(_DWORD *)(a1 + 16);
    __int16 v5 = *(_WORD *)(a1 + 20);
    char v6 = *(unsigned char *)(a1 + 22);
    *(void *)uint64_t v1 = *(void *)a1;
    *(void *)(v1 + 8) = v2 | (v3 << 32);
    *(unsigned char *)(v1 + 22) = v6;
    *(_WORD *)(v1 + 20) = v5;
    *(_DWORD *)(v1 + 16) = v4;
    *(_DWORD *)(a1 + 8) = v3;
    swift_retain();
  }
}

void sub_1001F7E94(uint64_t a1, uint64_t a2, uint64_t a3, Swift::UInt32 a4)
{
  sub_1001F9ABC();
  unint64_t v8 = v7 - v6;
  if (v7 < v6) {
    v8 += *(void *)(v5 + 16);
  }
  unsigned int v9 = a4 + v8;
  if (!__CFADD__(a4, v8))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      unsigned int v10 = *(_DWORD *)(v4 + 16);
      BOOL v11 = v9 >= v10;
      Swift::UInt32 v12 = v9 - v10;
      if (v11) {
        Swift::UInt32 v13 = v12;
      }
      else {
        Swift::UInt32 v13 = 0;
      }
      char v14 = static ByteBuffer.CopyBytesError.negativeLength.getter();
      ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v13, v14 & 1);
    }
    sub_1001FB400(v8, (uint64_t *)v4, a4);
    sub_1001F9BA0();
    sub_1001F8758(v15, v16, v17, v18, v19, v20);
    if (v36 < 0) {
      goto LABEL_33;
    }
    if (HIDWORD(v36)) {
      goto LABEL_34;
    }
    unint64_t v21 = v37;
    uint64_t v22 = v41;
    BOOL v23 = v37 == (unint64_t)v36 && v38 == 0xFFFF;
    if (v23 && v39 == 255 && (((v36 < v35) ^ v40) & 1) != 0)
    {
LABEL_26:
      swift_release();
      return;
    }
    while (1)
    {
      unint64_t v24 = *(void *)(v34 + 16);
      if (v24 <= v21) {
        break;
      }
      uint64_t v25 = (char *)(v34 + 32 + 2 * v21);
      if (v25[1]) {
        goto LABEL_35;
      }
      uint64_t v26 = (v24 + 0x1FFFFFFFFLL) & (v21 + 1);
      if (HIDWORD(v26)) {
        goto LABEL_28;
      }
      unint64_t v27 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_29;
      }
      if ((v27 & 0x8000000000000000) != 0) {
        goto LABEL_30;
      }
      if (HIDWORD(v27)) {
        goto LABEL_31;
      }
      char v28 = *v25;
      unint64_t v21 = v26;
      BOOL v29 = v26 >= v35;
      ByteBuffer._ensureAvailableCapacity(_:at:)(v22 + 1, a4);
      uint64_t v30 = *(void *)v4;
      uint64_t v31 = *(unsigned __int16 *)(v4 + 20);
      uint64_t v32 = *(unsigned __int8 *)(v4 + 22);
      sub_1001F969C();
      *(unsigned char *)(*(void *)(v30 + 24) + (v32 | (v31 << 8)) + a4 + v22++) = v28;
      if (v21 == v36 && v36 < v35 != v29) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void *sub_1001F80B8(uint64_t a1, unint64_t a2, Swift::UInt32 a3)
{
  uint64_t result = (void *)sub_10000566C(&qword_10070FEC8);
  if (result == &type metadata for String.UTF8View) {
    goto LABEL_16;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t result = (void *)sub_1005E1E80();
    unint64_t v8 = (unint64_t)result;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    unint64_t v8 = HIBYTE(a2) & 0xF;
  }
  else
  {
    unint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  unsigned int v9 = a3 + v8;
  if (__CFADD__(a3, v8))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    unsigned int v10 = *(_DWORD *)(v3 + 16);
    BOOL v11 = v9 >= v10;
    Swift::UInt32 v12 = v9 - v10;
    if (v11) {
      Swift::UInt32 v13 = v12;
    }
    else {
      Swift::UInt32 v13 = 0;
    }
    char v14 = static ByteBuffer.CopyBytesError.negativeLength.getter();
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v13, v14 & 1);
  }
  sub_1001FB400(v8, (uint64_t *)v3, a3);
  swift_bridgeObjectRetain();
  uint64_t result = (void *)sub_1005E2C90();
  if ((v15 & 1) == 0)
  {
    int64_t v16 = result;
    swift_bridgeObjectRelease();
    return v16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_1001F81B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_1001F9760();
  a27 = v29;
  a28 = v30;
  uint64_t v32 = v31;
  char v34 = v33;
  unint64_t v36 = v35;
  uint64_t v37 = sub_10000566C(&qword_10070FED8);
  if (v37 != sub_10000566C(&qword_10070FEC8))
  {
    unsigned int v38 = v32 + v36;
    if (!__CFADD__(v32, v36))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unsigned int v39 = *(_DWORD *)(v28 + 16);
        BOOL v40 = v38 >= v39;
        Swift::UInt32 v41 = v38 - v39;
        if (v40) {
          Swift::UInt32 v42 = v41;
        }
        else {
          Swift::UInt32 v42 = 0;
        }
        char v43 = static ByteBuffer.CopyBytesError.negativeLength.getter();
        ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v42, v43 & 1);
      }
      Swift::Int v44 = (unsigned char *)sub_1001FB400(v36, (uint64_t *)v28, v32);
      uint64_t v45 = sub_100233EFC((uint64_t)&a14, v44, v36, v36, v34);
      uint64_t v46 = a16;
      uint64_t v54 = a14;
      if (a16 == a14)
      {
LABEL_9:
        sub_1001F9814();
        return;
      }
      if (a16 < 0 || a16 >= a14)
      {
LABEL_19:
        __break(1u);
      }
      else
      {
        char v53 = a15;
        int64_t v47 = v32;
        while (1)
        {
          unint64_t v48 = v45 + 1;
          if (__OFADD__(v45, 1)) {
            break;
          }
          if ((v48 & 0x8000000000000000) != 0) {
            goto LABEL_21;
          }
          if (HIDWORD(v48)) {
            goto LABEL_22;
          }
          uint64_t v49 = v32;
          ByteBuffer._ensureAvailableCapacity(_:at:)(v45 + 1, v32);
          uint64_t v50 = *(unsigned __int16 *)(v28 + 20);
          uint64_t v51 = *(unsigned __int8 *)(v28 + 22);
          BOOL v52 = (void *)(*(void *)v28 + 24);
          sub_1001F969C();
          if ((uint64_t)(v48 + v47) < v47) {
            goto LABEL_23;
          }
          *(unsigned char *)(*v52 + (v51 | (v50 << 8)) + v47 + v45) = v53;
          if (v54 - 1 == v46) {
            goto LABEL_9;
          }
          ++v46;
          ++v45;
          uint64_t v32 = v49;
          if (v46 >= v54) {
            goto LABEL_19;
          }
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1001F8350(char a1, Swift::UInt32 a2)
{
  uint64_t v5 = sub_10000566C(&qword_10070FED0);
  uint64_t result = sub_10000566C(&qword_10070FEC8);
  if (v5 == result) {
    goto LABEL_10;
  }
  Swift::UInt32 v7 = a2 + 1;
  if (a2 == -1)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    Swift::UInt32 v8 = *(_DWORD *)(v2 + 16);
    BOOL v9 = v7 >= v8;
    Swift::UInt32 v10 = v7 - v8;
    if (v9) {
      Swift::UInt32 v11 = v10;
    }
    else {
      Swift::UInt32 v11 = 0;
    }
    char v12 = static ByteBuffer.CopyBytesError.negativeLength.getter();
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v11, v12 & 1);
  }
  *(unsigned char *)sub_1001FB400(1uLL, (uint64_t *)v2, a2) = a1;
  return 1;
}

uint64_t sub_1001F83F0(Swift::UInt32 a1)
{
  uint64_t v3 = sub_10000566C(&qword_10070FEC0);
  uint64_t result = sub_10000566C(&qword_10070FEC8);
  if (v3 == result)
  {
    __break(1u);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      Swift::UInt32 v5 = *(_DWORD *)(v1 + 16);
      BOOL v6 = a1 >= v5;
      Swift::UInt32 v7 = a1 - v5;
      if (v6) {
        Swift::UInt32 v8 = v7;
      }
      else {
        Swift::UInt32 v8 = 0;
      }
      char v9 = static ByteBuffer.CopyBytesError.negativeLength.getter();
      ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v8, v9 & 1);
    }
    sub_1001FB400(0, (uint64_t *)v1, a1);
    return 0;
  }
  return result;
}

void *sub_1001F847C(uint64_t a1, Swift::UInt32 a2)
{
  uint64_t v5 = sub_10000566C(&qword_10070FE18);
  uint64_t result = (void *)sub_10000566C(&qword_10070FEC8);
  if ((void *)v5 == result) {
    goto LABEL_22;
  }
  unint64_t v7 = *(void *)(a1 + 16);
  unsigned int v8 = a2 + v7;
  if (!__CFADD__(a2, v7))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      unsigned int v9 = *(_DWORD *)(v2 + 16);
      BOOL v10 = v8 >= v9;
      Swift::UInt32 v11 = v8 - v9;
      if (v10) {
        Swift::UInt32 v12 = v11;
      }
      else {
        Swift::UInt32 v12 = 0;
      }
      char v13 = static ByteBuffer.CopyBytesError.negativeLength.getter();
      ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v12, v13 & 1);
    }
    uint64_t result = (void *)sub_1001FB400(v7, (uint64_t *)v2, a2);
    if (v7) {
      uint64_t result = memcpy(result, (const void *)(a1 + 32), v7);
    }
    unint64_t v14 = *(void *)(a1 + 16);
    if (v7 == v14) {
      return (void *)v7;
    }
    if (v7 >= v14) {
      goto LABEL_21;
    }
    uint64_t v15 = a1 + 32;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    while (v7 <= 0xFFFFFFFE)
    {
      char v16 = *(unsigned char *)(v15 + v7);
      unint64_t v17 = v7 + 1;
      ByteBuffer._ensureAvailableCapacity(_:at:)(v7 + 1, a2);
      uint64_t v18 = *(unsigned __int16 *)(v2 + 20);
      uint64_t v19 = *(unsigned __int8 *)(v2 + 22);
      uint64_t v20 = (void *)(*(void *)v2 + 24);
      uint64_t result = (void *)sub_1001F969C();
      if ((uint64_t)(v7 + 1 + a2) < a2) {
        goto LABEL_19;
      }
      *(unsigned char *)(*v20 + (v19 | (v18 << 8)) + a2 + v7++) = v16;
      if (v14 == v17)
      {
        swift_bridgeObjectRelease();
        return (void *)v14;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_1001F85F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, Swift::UInt32 a5)
{
  uint64_t v11 = sub_10000566C(&qword_10070FEE8);
  if (v11 != sub_10000566C(&qword_10070FEC8))
  {
    unint64_t v12 = a4 >> 1;
    BOOL v13 = __OFSUB__(a4 >> 1, a3);
    unint64_t v14 = (a4 >> 1) - a3;
    if (v13)
    {
      __break(1u);
    }
    else
    {
      unsigned int v15 = a5 + v14;
      if (!__CFADD__(a5, v14))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          unsigned int v16 = *(_DWORD *)(v5 + 16);
          BOOL v17 = v15 >= v16;
          Swift::UInt32 v18 = v15 - v16;
          if (v17) {
            Swift::UInt32 v19 = v18;
          }
          else {
            Swift::UInt32 v19 = 0;
          }
          char v20 = static ByteBuffer.CopyBytesError.negativeLength.getter();
          ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v19, v20 & 1);
        }
        unint64_t v21 = (void *)sub_1001FB400(v14, (uint64_t *)v5, a5);
        if (v12 != a3) {
          memcpy(v21, (const void *)(a2 + a3), v14);
        }
        return;
      }
    }
    __break(1u);
    return;
  }
  sub_1001F7E94(a1, a2, a3, a5);
}

unint64_t sub_1001F8708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if ((a1 & 0x100000000000000) != 0)
  {
    uint64_t v5 = v3 - a1 + a2;
    if ((a2 & 0x100000000000000) != 0) {
      return a2 - (unint64_t)a1;
    }
    else {
      return v5;
    }
  }
  else if ((a2 & 0x100000000000000) != 0)
  {
    uint64_t v6 = a1 - (unint64_t)a2 + v3;
    unint64_t result = -v6;
    if (__OFSUB__(0, v6)) {
      __break(1u);
    }
  }
  else
  {
    return a2 - (unint64_t)a1;
  }
  return result;
}

unint64_t sub_1001F8758@<X0>(unint64_t result@<X0>, int64_t a2@<X1>, uint64_t a3@<X2>, int64_t a4@<X3>, int64_t a5@<X4>, uint64_t a6@<X8>)
{
  int64_t v6 = a5;
  int64_t v7 = a4;
  uint64_t v8 = a3;
  int64_t v10 = a5 - a4;
  if (a5 < a4) {
    v10 += *(void *)(a3 + 16);
  }
  if (v10 > a2)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (!result)
  {
    if (a4 < 0)
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (HIDWORD(a4))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    unint64_t result = swift_retain();
    int64_t v16 = 0;
    goto LABEL_38;
  }
  if (a5 >= a4)
  {
    if (a5 != a4)
    {
      int64_t v17 = *(void *)(a3 + 16);
      Swift::UInt32 v18 = (unsigned char *)(a3 + 2 * a4 + 33);
      int64_t v19 = a4;
      while (v19 < a5)
      {
        if (a4 < 0) {
          goto LABEL_43;
        }
        if (v19 >= v17) {
          goto LABEL_44;
        }
        if (*v18) {
          goto LABEL_57;
        }
        ++v19;
        *(unsigned char *)result++ = *(v18 - 1);
        v18 += 2;
        if (a5 == v19) {
          goto LABEL_30;
        }
      }
      goto LABEL_42;
    }
LABEL_30:
    if (a5 < 0)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (HIDWORD(a5))
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
LABEL_32:
    unint64_t v20 = a5 | ((unint64_t)(a5 >= a4) << 56) | 0xFFFFFF00000000;
    unint64_t result = sub_1002C38E4(v20, v20);
    if ((result & 1) == 0)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    unint64_t result = sub_1001F8970(v20, v20, v8, v7, v6);
    if ((v21 & 0x8000000000000000) != 0)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (HIDWORD(v21))
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    int64_t v16 = v6 - v7;
    if (v6 < v7) {
      v16 += *(void *)(v8 + 16);
    }
    uint64_t v8 = result;
    int64_t v7 = v21;
    int64_t v6 = v22;
LABEL_38:
    *(void *)a6 = v8;
    *(void *)(a6 + 8) = v7;
    *(void *)(a6 + 16) = v6;
    *(_DWORD *)(a6 + 24) = v7;
    *(_DWORD *)(a6 + 28) = 0x1FFFFFF;
    *(void *)(a6 + 32) = v16;
    return result;
  }
  int64_t v11 = *(void *)(a3 + 16);
  if (v11 >= a4)
  {
    if (v11 != a4)
    {
      unint64_t v12 = (unsigned char *)(a3 + 2 * a4 + 33);
      int64_t v13 = a4;
      while (v13 < v11)
      {
        if (a4 < 0) {
          goto LABEL_41;
        }
        if (*v12) {
          goto LABEL_56;
        }
        ++v13;
        *(unsigned char *)result++ = *(v12 - 1);
        v12 += 2;
        if (v11 == v13) {
          goto LABEL_13;
        }
      }
      goto LABEL_40;
    }
LABEL_13:
    if (a5 < 0) {
      goto LABEL_54;
    }
    if (a5)
    {
      unint64_t v14 = (unsigned char *)(a3 + 33);
      int64_t v15 = a5;
      while (v11)
      {
        if (*v14) {
          goto LABEL_55;
        }
        *(unsigned char *)result++ = *(v14 - 1);
        --v11;
        v14 += 2;
        if (!--v15) {
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    goto LABEL_32;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

unint64_t sub_1001F8970(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (HIDWORD(a4))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((result & 0x100000000000000) != 0) {
    uint64_t v5 = result - a4;
  }
  else {
    uint64_t v5 = *(void *)(a3 + 16) - a4 + result;
  }
  if (v5 < 0) {
    goto LABEL_15;
  }
  if ((a5 & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (HIDWORD(a5))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = 0x1FFFFFF00000000;
  if ((uint64_t)a5 < (uint64_t)a4) {
    uint64_t v6 = 0xFFFFFF00000000;
  }
  unint64_t result = sub_1001F8708(a2 & 0x1FFFFFFFFFFFFFFLL, v6 | a5, a3);
  if ((result & 0x8000000000000000) == 0) {
    return swift_retain();
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1001F8A30(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    unint64_t result = sub_100272294(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    unint64_t result = sub_100272294(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_1005E1EB0();
}

uint64_t sub_1001F8B30(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, Swift::UInt32 a6)
{
  if ((a4 & 0x1000000000000000) != 0) {
    return 0;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    uint64_t v13 = HIBYTE(a4) & 0xF;
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v12 = v15;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unint64_t v12 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v13 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v12 = (void *)sub_1005E2D30();
  }
  return sub_1001F8C00((uint64_t)v12, v13, a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1001F8C00(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, Swift::UInt32 a8)
{
  unint64_t v11 = a3;
  uint64_t v12 = result;
  uint64_t v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v13) = 1;
  }
  uint64_t v14 = 4 << v13;
  uint64_t v15 = a3 & 0xC;
  unint64_t v16 = a3;
  if (v15 == 4 << v13)
  {
    Swift::UInt32 v18 = a8;
    unint64_t result = sub_100272294(a3, a5, a6);
    a8 = v18;
    unint64_t v16 = result;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
    Swift::UInt32 v27 = a8;
    unint64_t v19 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v19 = HIBYTE(a6) & 0xF;
    }
    if (v19 < v16 >> 16) {
      goto LABEL_35;
    }
    unint64_t result = sub_1005E1EB0();
    uint64_t v17 = result;
    a8 = v27;
  }
  else
  {
    uint64_t v17 = v16 >> 16;
  }
  if (v15 == v14)
  {
    uint64_t v20 = v11;
    Swift::UInt32 v21 = a8;
    unint64_t result = sub_100272294(v20, a5, a6);
    a8 = v21;
    unint64_t v11 = result;
  }
  if ((a4 & 0xC) == v14)
  {
    Swift::UInt32 v22 = a8;
    unint64_t result = sub_100272294(a4, a5, a6);
    a8 = v22;
    a4 = result;
    if ((a6 & 0x1000000000000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    unint64_t result = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  unint64_t v23 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0) {
    unint64_t v23 = HIBYTE(a6) & 0xF;
  }
  if (v23 < v11 >> 16) {
    goto LABEL_33;
  }
  if (v23 < a4 >> 16)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    return result;
  }
  Swift::UInt32 v24 = a8;
  unint64_t result = sub_1005E1EB0();
  a8 = v24;
LABEL_22:
  if (__OFADD__(v17, result))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v17 + result < v17)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v12) {
    uint64_t v25 = v12 + v17 + result;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v12) {
    uint64_t v26 = v12 + v17;
  }
  else {
    uint64_t v26 = 0;
  }
  ByteBuffer._setBytes(_:at:)(v26, v25, a8);
  return result;
}

void *sub_1001F8DE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  int64_t v3 = v2 - v1;
  if (v2 == v1) {
    return _swiftEmptyArrayStorage;
  }
  if (v3 <= 0)
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10000566C(&qword_10070FEE0);
    uint64_t v4 = (void *)swift_allocObject();
    size_t v5 = j__malloc_size(v4);
    v4[2] = v3;
    v4[3] = 2 * v5 - 64;
  }
  ByteBufferView._copyContents(initializing:)((uint64_t)(v4 + 4), v3, (uint64_t)v8);
  uint64_t v6 = v8[6];
  unint64_t result = (void *)swift_release();
  if (v6 == v3) {
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F8E94(uint64_t a1)
{
  sub_10000566C(&qword_10070FEB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  uint64_t result = BodyStructure.subpartCount.getter();
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(inited + 32) = result + 1;
    uint64_t v4 = _swiftEmptyArrayStorage;
    sub_1001F90E8();
    uint64_t v6 = v5;
    swift_setDeallocating();
    if (!v6) {
      return (uint64_t)v4;
    }
    if (v6 > 0)
    {
      sub_10000566C(&qword_10070FEB8);
      uint64_t v4 = (void *)swift_allocObject();
      size_t v7 = j__malloc_size(v4);
      v4[2] = v6;
      v4[3] = 2 * ((uint64_t)(v7 - 32) / 184);
    }
    sub_1001F95B8(a1);
    sub_100233B9C();
    uint64_t v9 = v8;
    uint64_t result = sub_1001F9624((uint64_t)v10);
    if (v9 == v6) {
      return (uint64_t)v4;
    }
  }
  __break(1u);
  return result;
}

void sub_1001F8FA0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10000566C(&qword_10070FEB0);
      uint64_t v8 = (void *)swift_allocObject();
      j__malloc_size(v8);
      sub_1001F9AFC();
      v8[2] = v5;
      void v8[3] = v9;
    }
    if (v4 != a3)
    {
      memcpy(v8 + 4, (const void *)(a2 + 8 * a3), 8 * v5);
      return;
    }
    goto LABEL_10;
  }
}

void *sub_1001F9058(const void *a1, int64_t a2)
{
  if (!a2) {
    return _swiftEmptyArrayStorage;
  }
  if (a2 <= 0)
  {
    unint64_t v4 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10000566C(&qword_10070FEE0);
    unint64_t v4 = (void *)swift_allocObject();
    size_t v5 = j__malloc_size(v4);
    v4[2] = a2;
    v4[3] = 2 * v5 - 64;
  }
  memcpy(v4 + 4, a1, a2);
  return v4;
}

void sub_1001F90E8()
{
  sub_1001F97C8();
  uint64_t v1 = (void *)v0;
  rawValue = (void *)v2;
  if (static SectionSpecifier.Part.< infix(_:_:)(v2, v0))
  {
    if (_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(rawValue, v1)) {
      goto LABEL_45;
    }
    uint64_t v4 = v1[2];
    swift_bridgeObjectRetain();
    uint64_t v5 = 1;
    do
    {
      rawValue = BodyStructure.index(after:)((NIOIMAPCore2::SectionSpecifier::Part)rawValue).array._rawValue;
      swift_bridgeObjectRelease();
      if (rawValue[2] == v4)
      {
        if (!v4 || rawValue == v1) {
          goto LABEL_44;
        }
        if (rawValue[4] == v1[4])
        {
          uint64_t v6 = 0;
          do
          {
            if (v4 - 1 == v6) {
              goto LABEL_44;
            }
            uint64_t v7 = rawValue[v6 + 5];
            uint64_t v8 = v1[v6++ + 5];
          }
          while (v7 == v8);
        }
      }
      BOOL v9 = __OFADD__(v5++, 1);
    }
    while (!v9);
    __break(1u);
  }
  if (!static SectionSpecifier.Part.< infix(_:_:)((BOOL)v1, (uint64_t)rawValue)
    || (_s12NIOIMAPCore216SectionSpecifierV4PartV23__derived_struct_equalsySbAE_AEtFZ_0(rawValue, v1) & 1) != 0)
  {
    goto LABEL_45;
  }
  unint64_t v10 = rawValue[2];
  swift_bridgeObjectRetain();
  uint64_t v11 = -1;
  while (1)
  {
    uint64_t v12 = rawValue;
    if (!v10) {
      goto LABEL_47;
    }
    unint64_t v13 = v10 - 1;
    uint64_t v14 = rawValue[v10 + 3];
    uint64_t v15 = v14 - 1;
    if (v14 > 1)
    {
      uint64_t v16 = sub_100230B4C(1, (uint64_t)rawValue);
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      unint64_t v22 = v21;
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_10022EC44(v16, v18, v20, v22);
      swift_bridgeObjectRetain();
      Swift::UInt32 v24 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100232524();
        Swift::UInt32 v24 = v31;
      }
      unint64_t v25 = v24[2];
      if (v25 >= v24[3] >> 1)
      {
        sub_100232524();
        Swift::UInt32 v24 = v32;
      }
      void v24[2] = v25 + 1;
      v24[v25 + 4] = v15;
      swift_bridgeObjectRelease();
      rawValue = (void *)sub_100230CB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_1005E3300();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v26 = (void *)swift_dynamicCastClass();
    if (!v26)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = _swiftEmptyArrayStorage;
    }
    uint64_t v27 = v26[2];
    swift_release();
    if (v27 != v13)
    {
      swift_bridgeObjectRelease();
      if (v10 >= 2)
      {
        sub_10000566C(&qword_10070FEB0);
        rawValue = (void *)swift_allocObject();
        j__malloc_size(rawValue);
        sub_1001F9AFC();
        rawValue[2] = v13;
        rawValue[3] = v33;
        memcpy(rawValue + 4, v12 + 4, 8 * v13);
        swift_bridgeObjectRelease_n();
        goto LABEL_31;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_30;
    }
    rawValue = (void *)swift_dynamicCastClass();
    swift_bridgeObjectRelease_n();
    if (!rawValue)
    {
      swift_bridgeObjectRelease();
LABEL_30:
      rawValue = _swiftEmptyArrayStorage;
    }
LABEL_31:
    unint64_t v10 = rawValue[2];
    if (v10 == v1[2])
    {
      if (!v10 || rawValue == v1) {
        goto LABEL_44;
      }
      if (rawValue[4] == v1[4]) {
        break;
      }
    }
LABEL_38:
    BOOL v9 = __OFSUB__(v11--, 1);
    if (v9)
    {
      __break(1u);
LABEL_47:
      sub_1005E2C80(32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v34._uint64_t countAndFlagsBits = sub_1005E1CC0();
      sub_1005E1E30(v34);
      swift_bridgeObjectRelease();
      sub_1005E2F20();
      __break(1u);
      return;
    }
  }
  uint64_t v28 = 0;
  while (v10 - 1 != v28)
  {
    uint64_t v29 = rawValue[v28 + 5];
    uint64_t v30 = v1[v28++ + 5];
    if (v29 != v30) {
      goto LABEL_38;
    }
  }
LABEL_44:
  swift_bridgeObjectRelease();
LABEL_45:
  sub_1001F977C();
}

uint64_t sub_1001F94DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 - a3;
  if (!a3) {
    uint64_t v4 = 0;
  }
  if (result < 0 || v4 < result)
  {
    __break(1u);
  }
  else if ((a2 & 0x8000000000000000) == 0 && v4 >= a2)
  {
    return a2 - result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F9510(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_10070FEA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F9570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1001F6848(a1, a2, *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 24), a3);
}

uint64_t sub_1001F9594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1001F6848(a1, a2, *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 24), a3);
}

uint64_t sub_1001F95B8(uint64_t a1)
{
  sub_100136870(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
  return a1;
}

uint64_t sub_1001F9624(uint64_t a1)
{
  sub_100061440(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001F969C()
{
  return swift_beginAccess();
}

uint64_t sub_1001F96B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a14;
}

uint64_t sub_1001F96D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

void sub_1001F96FC()
{
  sub_100210AD0(v3, v2, v1, v0);
}

Swift::Int sub_1001F972C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, __int16 a16, char a17)
{
  return ByteBuffer.setRepeatingByte(_:count:at:)(v18, v17, v19);
}

void sub_1001F9798()
{
  uint64_t v5 = *(void *)(v3 + 24) + ((v1 >> 24) & 0xFFFF00 | BYTE6(v1));
  ByteBuffer._setBytes(_:at:)(v5 + v2, v5 + HIDWORD(v2), v0);
}

void sub_1001F97E4()
{
  ByteBuffer.setDispatchData(_:at:)();
}

uint64_t sub_1001F9830()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001F985C()
{
  return swift_retain();
}

uint64_t sub_1001F987C()
{
  return swift_retain();
}

uint64_t sub_1001F98A8()
{
  return *(void *)(v2 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0)) + v1;
}

uint64_t sub_1001F98C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_1001F8B30(v8, v7, v6, v5, (uint64_t)va, v9);
}

uint64_t sub_1001F98F4(int a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  return static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(a1, a2, a3, a4, v4);
}

uint64_t sub_1001F9920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a14;
}

uint64_t sub_1001F993C()
{
  return swift_retain();
}

uint64_t sub_1001F9964()
{
  return swift_retain();
}

uint64_t sub_1001F99B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return a18;
}

Swift::Int sub_1001F9A18()
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  return ByteBuffer._setStringSlowpath(_:at:)(*(Swift::String *)&v4, v0);
}

uint64_t sub_1001F9A7C()
{
  return type metadata accessor for ByteBuffer._Storage();
}

uint64_t sub_1001F9AA0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F9ADC()
{
  return v0;
}

uint64_t sub_1001F9AF0()
{
  return v0;
}

uint64_t sub_1001F9B24()
{
  return v0;
}

uint64_t sub_1001F9B38()
{
  return v0;
}

double sub_1001F9B4C()
{
  return 0.0;
}

uint64_t sub_1001F9B60(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  return sub_1001F8A30(result, a2, a3, a4);
}

void sub_1001F9B80()
{
  ByteBuffer.writeBuffer(_:)();
}

uint64_t sub_1001F9BB4()
{
  return v0;
}

uint64_t sub_1001F9BC8()
{
  return sub_1005E1D00();
}

uint64_t sub_1001F9BE8()
{
  return v0;
}

int64_t ByteBuffer.rangeWithinReadableBytes(index:length:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = a1 - a4;
  if ((HIDWORD(a4) - a4) - a2 < v4) {
    int64_t v4 = 0;
  }
  if (a2 < 0) {
    int64_t v4 = 0;
  }
  if (a1 >= a4) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t ByteBuffer.withUnsafeReadableBytes<A>(_:)(uint64_t (*a1)(uint64_t))
{
  sub_1001FCD38();
  uint64_t v2 = sub_1001FCD94();
  return a1(v2);
}

uint64_t ByteBuffer.readerIndex.getter(uint64_t a1, unsigned int a2)
{
  return a2;
}

Swift::Void __swiftcall ByteBuffer._moveReaderIndex(forwardBy:)(Swift::Int forwardBy)
{
  int v2 = *(_DWORD *)(v1 + 8);
  BOOL v3 = __CFADD__(v2, forwardBy);
  int v4 = v2 + forwardBy;
  if (v3) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v1 + 8) = v4;
  }
}

unint64_t MailboxPath._pathSeparator.getter(uint64_t a1, unint64_t a2)
{
  return HIDWORD(a2);
}

Swift::Void __swiftcall ByteBuffer._moveWriterIndex(forwardBy:)(Swift::Int forwardBy)
{
  int v2 = *(_DWORD *)(v1 + 12);
  BOOL v3 = __CFADD__(v2, forwardBy);
  int v4 = v2 + forwardBy;
  if (v3) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v1 + 12) = v4;
  }
}

uint64_t ByteBuffer.setBytes(_:at:)(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, a3);
  return result;
}

uint64_t ByteBuffer.setBytes<A>(_:at:)(uint64_t *a1, Swift::UInt32 a2, uint64_t a3)
{
  ByteBuffer._setBytes<A>(_:at:)(a1, a2, a3);
  return result;
}

Swift::Void __swiftcall ByteBuffer.moveReaderIndex(forwardBy:)(Swift::Int forwardBy)
{
  int v2 = *(_DWORD *)(v1 + 8);
  BOOL v3 = __CFADD__(v2, forwardBy);
  unsigned int v4 = v2 + forwardBy;
  if (v3)
  {
    __break(1u);
  }
  else if (*(_DWORD *)(v1 + 12) >= v4)
  {
    *(_DWORD *)(v1 + 8) = v4;
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall ByteBuffer.reserveCapacity(_:)(Swift::Int a1)
{
  sub_1001FCE38();
  if (v2 < v1)
  {
    Swift::UInt32 v3 = v1;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      ByteBuffer._ensureAvailableCapacity(_:at:)(v3, 0);
    }
    else
    {
      Swift::Bool v4 = static ByteBuffer.CopyBytesError.negativeLength.getter() & 1;
      ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v3, v4);
    }
  }
}

uint64_t sub_1001F9DF4(uint64_t a1)
{
  if (HIDWORD(a1) < a1) {
    return -(uint64_t)(a1 - HIDWORD(a1));
  }
  else {
    return (HIDWORD(a1) - a1);
  }
}

uint64_t sub_1001F9E0C()
{
  sub_10000566C(&qword_10070FEB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6670;
  uint64_t result = BodyStructure.subpartCount.getter();
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(inited + 32) = result + 1;
    sub_1001F90E8();
    uint64_t v3 = v2;
    swift_setDeallocating();
    return v3;
  }
  return result;
}

uint64_t sub_1001F9E88(uint64_t a1)
{
  if (HIDWORD(a1) < a1) {
    uint64_t v1 = -(uint64_t)(a1 - HIDWORD(a1));
  }
  else {
    uint64_t v1 = (HIDWORD(a1) - a1);
  }
  return v1 + 1;
}

void ByteBuffer.withVeryUnsafeMutableBytes<A>(_:)()
{
  sub_1001FCE8C();
  sub_1001FCF64();
  sub_1001FCD38();
  sub_1001FCF84();
  v0();
  sub_1001FCE74();
}

uint64_t ByteBuffer.withUnsafeMutableReadableBytes<A>(_:)()
{
  sub_1001FCF64();
  sub_1001FCD38();
  sub_1001FCF84();
  return v0();
}

uint64_t ByteBuffer.readableBytes.getter(uint64_t a1, uint64_t a2)
{
  return (HIDWORD(a2) - a2);
}

void ByteBuffer.getSlice(at:length:)(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0x8000000000000000) == 0 && (a2 & 0x8000000000000000) == 0)
  {
    sub_1001FCF30();
    if (v7 ^ v8 | v6)
    {
      if (HIDWORD(v3) >= a2 && (uint64_t)(HIDWORD(v3) - a2) >= v5)
      {
        Swift::UInt32 v11 = sub_1001FCE5C(v4, v5);
        if (v10)
        {
          __break(1u);
        }
        else if (HIBYTE(v11))
        {
          sub_1001FCEF0(v12);
        }
        else
        {
          _UInt24.init(_:)(v11);
          sub_1001FCDF4();
        }
      }
    }
  }
}

uint64_t *ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor()
{
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  return &static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
}

void *(__cdecl *ByteBufferAllocator.init()())(size_t __size)
{
  return j_j__malloc_0;
}

uint64_t ByteBufferAllocator.buffer(capacity:)(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v5 = a1;
  if (!a1)
  {
    if (qword_10070FB10 == -1)
    {
LABEL_5:
      uint64_t v6 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
      swift_retain();
      return v6;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  sub_1001FCEDC();
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v6 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v5, v4, v3, v2, v1);
  sub_1001F969C();
  return v6;
}

Swift::Void __swiftcall ByteBuffer.moveReaderIndex(to:)(Swift::Int to)
{
  if (*(unsigned int *)(v1 + 12) < (unint64_t)to) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v1 + 8) = to;
  }
}

_UNKNOWN **sysMalloc.unsafeMutableAddressor()
{
  return &sysMalloc;
}

_UNKNOWN **sysRealloc.unsafeMutableAddressor()
{
  return &sysRealloc;
}

void (__cdecl **sysFree.unsafeMutableAddressor())(void *)
{
  return &sysFree;
}

BOOL static _ByteBufferSlice.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return (a1 & 0xFFFFFFFFFFFFFFLL) == (a2 & 0xFFFFFFFFFFFFFFLL);
}

BOOL sub_1001FA21C(unsigned int *a1, unsigned int *a2)
{
  return static _ByteBufferSlice.__derived_struct_equals(_:_:)(*a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48), *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48));
}

uint64_t _ByteBufferSlice._begin.getter(unint64_t a1)
{
  return HIDWORD(a1) & 0xFFFFFF;
}

uint64_t _ByteBufferSlice._begin.setter(uint64_t result)
{
  *(_WORD *)(v1 + 4) = result;
  *(unsigned char *)(v1 + 6) = BYTE2(result);
  return result;
}

unint64_t _ByteBufferSlice.lowerBound.getter(unint64_t a1)
{
  return (a1 >> 24) & 0xFFFF00 | BYTE6(a1);
}

unint64_t _ByteBufferSlice.count.getter(unint64_t a1)
{
  return a1 - (BYTE6(a1) | (a1 >> 24) & 0xFFFF00);
}

uint64_t static _UInt24.max.getter()
{
  return 0xFFFFFFLL;
}

unint64_t _ByteBufferSlice.init(_:)(unint64_t a1)
{
  return HIDWORD(a1) & 0xFF000000FFFFFFFFLL | ((unint64_t)(unsigned __int16)(a1 >> 8) << 32) & 0xFF00FFFFFFFFFFFFLL | ((unint64_t)a1 << 48);
}

unint64_t _ByteBufferSlice.description.getter()
{
  sub_1005E2C80(28);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 3943982;
  v2._unint64_t object = (void *)0xE300000000000000;
  sub_1005E1E30(v2);
  v3._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 32032;
  v4._unint64_t object = (void *)0xE200000000000000;
  sub_1005E1E30(v4);
  return 0xD000000000000013;
}

unint64_t sub_1001FA3B4()
{
  return _ByteBufferSlice.description.getter();
}

void *sub_1001FA3E0(void *__dst, const void *__src, size_t __len)
{
  if ((__len & 0x8000000000000000) == 0) {
    return memmove(__dst, __src, __len);
  }
  __break(1u);
  return __dst;
}

uint64_t ByteBuffer.init(allocator:startingCapacity:)()
{
  sub_1001FCEDC();
  int v5 = v4;
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v6 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(v0, v5, v3, v2, v1);
  sub_1001F969C();
  return v6;
}

uint64_t sub_1001FA46C()
{
  type metadata accessor for ByteBuffer._Storage();
  uint64_t v0 = static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(0, (uint64_t (*)(void))j_j__malloc_0, (uint64_t)j_j__realloc_0, (uint64_t)j_j__free_0, (uint64_t)sub_1001FA3EC);
  uint64_t result = sub_1001F969C();
  int v2 = *(_DWORD *)(v0 + 16);
  static ByteBufferAllocator.zeroCapacityWithDefaultAllocator = v0;
  qword_100761858 = 0;
  dword_100761860 = v2;
  word_100761864 = 0;
  byte_100761866 = 0;
  return result;
}

uint64_t static ByteBufferAllocator.zeroCapacityWithDefaultAllocator.getter()
{
  if (qword_10070FB10 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t AccountConfiguration.Endpoint.port.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t Environment.unreconciledMessageCount.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4;
}

uint64_t CircularBuffer._buffer.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  void *v1 = a1;
  return result;
}

uint64_t RemoteMailbox.Status.nextUID.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t MessageSectionData.message.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  return result;
}

Swift::UInt32 (__swiftcall *MessageSectionData.message.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t ByteBuffer._slice.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 & 0xFFFFFFFFFFFFFFLL;
}

uint64_t ByteBuffer._slice.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  *(_WORD *)(v1 + 20) = WORD2(result);
  *(unsigned char *)(v1 + 22) = BYTE6(result);
  return result;
}

uint64_t ByteBuffer._Storage.fullSlice.getter()
{
  sub_1001F969C();
  return *(unsigned int *)(v0 + 16);
}

uint64_t ByteBuffer._Storage.capacity.setter(int a1)
{
  uint64_t result = sub_1001FCEA4();
  *(_DWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ByteBuffer._Storage.capacity.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ByteBuffer._Storage.bytes.getter()
{
  sub_1001F969C();
  return *(void *)(v0 + 24);
}

uint64_t ByteBuffer._Storage.bytes.setter(uint64_t a1)
{
  uint64_t result = sub_1001FCEA4();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ByteBuffer._Storage.bytes.modify())()
{
  return j__swift_endAccess;
}

uint64_t ByteBuffer._Storage.allocator.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ByteBuffer._Storage.__allocating_init(bytesNoCopy:capacity:allocator:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_1001FCF44();
  *(_DWORD *)(result + 16) = a2;
  *(void *)(result + 24) = v6;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(void *)(result + 56) = a6;
  return result;
}

uint64_t ByteBuffer._Storage.init(bytesNoCopy:capacity:allocator:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a1;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  return v6;
}

uint64_t ByteBuffer._Storage.deinit()
{
  sub_1001FA804();
  return v0;
}

uint64_t sub_1001FA804()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 48);
  swift_beginAccess();
  return v1(*(void *)(v0 + 24));
}

uint64_t ByteBuffer._Storage.__deallocating_deinit()
{
  sub_1001FA804();
  return swift_deallocClassInstance();
}

uint64_t static ByteBuffer._Storage._allocateAndPrepareRawMemory(bytes:allocator:)(unsigned int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(a1);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t ByteBuffer._Storage.allocateStorage()()
{
  sub_1001F969C();
  return ByteBuffer._Storage.allocateStorage(capacity:)(*(_DWORD *)(v0 + 16));
}

uint64_t ByteBuffer._Storage.allocateStorage(capacity:)(int a1)
{
  if (a1) {
    Swift::UInt32 v2 = UInt32.nextPowerOf2ClampedToMax()();
  }
  else {
    Swift::UInt32 v2 = 0;
  }
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 32);
  uint64_t result = v3(v2);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = *(void *)(v1 + 56);
    uint64_t result = swift_allocObject();
    *(_DWORD *)(result + 16) = v2;
    *(void *)(result + 24) = v5;
    *(void *)(result + 32) = v3;
    *(_OWORD *)(result + 40) = *(_OWORD *)(v1 + 40);
    *(void *)(result + 56) = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ByteBuffer._Storage.reallocSlice(_:capacity:)(uint64_t a1, int a2)
{
  uint64_t v4 = ByteBuffer._Storage.allocateStorage(capacity:)(a2);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 56);
  sub_1001F969C();
  uint64_t v6 = *(void *)(v4 + 24);
  sub_1001F969C();
  uint64_t v7 = *(void *)(v2 + 24) + a1;
  uint64_t v8 = sub_1001F9DF4(a1);
  v5(v6, v7, v8);
  return v4;
}

Swift::Void __swiftcall ByteBuffer._Storage.reallocStorage(capacity:)(Swift::UInt32 capacity)
{
  Swift::UInt32 v2 = UInt32.nextPowerOf2ClampedToMax()();
  uint64_t v3 = *(uint64_t (**)(void, void))(v1 + 40);
  sub_1001FCEA4();
  uint64_t v4 = v3(*(void *)(v1 + 24), v2);
  if (v4)
  {
    *(void *)(v1 + 24) = v4;
    sub_1001FCEA4();
    *(_DWORD *)(v1 + 16) = v2;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static ByteBuffer._Storage.reallocated(minimumCapacity:allocator:)(int a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    Swift::UInt32 v10 = UInt32.nextPowerOf2ClampedToMax()();
  }
  else {
    Swift::UInt32 v10 = 0;
  }
  uint64_t result = a2(v10);
  if (result)
  {
    uint64_t result = sub_1001FCF44();
    *(_DWORD *)(result + 16) = v10;
    *(void *)(result + 24) = v5;
    *(void *)(result + 32) = a2;
    *(void *)(result + 40) = a3;
    *(void *)(result + 48) = a4;
    *(void *)(result + 56) = a5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FAAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001FCE50();
  sub_1001F969C();
  uint64_t result = sub_1001F969C();
  uint64_t v8 = (v5 >> 24) & 0xFFFF00 | BYTE6(v5);
  int64_t v9 = v8 + v4;
  if (__OFADD__(v8, v4))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v10 = v9 + a3;
  if (__OFADD__(v9, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v10 < v9)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 == v10)
  {
LABEL_15:
    v21._uint64_t countAndFlagsBits = 23840;
    v21._unint64_t object = (void *)0xE200000000000000;
    sub_1005E1E30(v21);
    return 91;
  }
  if (v9 < v10)
  {
    unint64_t v11 = *(unsigned int *)(v3 + 16);
    while (v9 < v11)
    {
      ++v9;
      sub_1001FCC34();
      uint64_t v12 = sub_1005E1F20();
      uint64_t v14 = v13;
      uint64_t v15 = sub_1005E1DC0();
      BOOL v16 = v15 == 1;
      if (v15 == 1) {
        v17._uint64_t countAndFlagsBits = 48;
      }
      else {
        v17._uint64_t countAndFlagsBits = 0;
      }
      if (v16) {
        Swift::UInt8 v18 = (void *)0xE100000000000000;
      }
      else {
        Swift::UInt8 v18 = (void *)0xE000000000000000;
      }
      v17._unint64_t object = v18;
      sub_1005E1E30(v17);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = v12;
      v19._unint64_t object = v14;
      sub_1005E1E30(v19);
      swift_bridgeObjectRelease();
      v20._uint64_t countAndFlagsBits = 32;
      v20._unint64_t object = (void *)0xE100000000000000;
      sub_1005E1E30(v20);
      uint64_t result = swift_bridgeObjectRelease();
      if (!--a3) {
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
  return result;
}

Swift::Void __swiftcall ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(Swift::UInt32 capacity, Swift::Bool resetIndices)
{
  uint64_t v3 = v2;
  if (resetIndices) {
    unsigned int v4 = *(_DWORD *)(v2 + 8);
  }
  else {
    unsigned int v4 = 0;
  }
  int v5 = *(unsigned __int8 *)(v2 + 22) | (*(unsigned __int16 *)(v2 + 20) << 8);
  BOOL v6 = __CFADD__(v5, v4);
  uint64_t v7 = v5 + v4;
  if (v6)
  {
    __break(1u);
    goto LABEL_16;
  }
  LODWORD(v8) = v7 + capacity;
  if (__CFADD__(v7, capacity))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unsigned int v9 = *(_DWORD *)(v2 + 16);
  if (v8 >= v9) {
    uint64_t v8 = v9;
  }
  else {
    uint64_t v8 = v8;
  }
  if (v8 < v7) {
    goto LABEL_17;
  }
  uint64_t v10 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v7 | (v8 << 32), capacity);
  swift_release();
  *(void *)uint64_t v3 = v10;
  unsigned int v11 = *(_DWORD *)(v3 + 8);
  BOOL v6 = v11 >= v4;
  unsigned int v12 = v11 - v4;
  if (!v6) {
    goto LABEL_18;
  }
  *(_DWORD *)(v3 + 8) = v12;
  unsigned int v13 = *(_DWORD *)(v3 + 12);
  BOOL v6 = v13 >= v4;
  unsigned int v14 = v13 - v4;
  if (v6)
  {
    *(_DWORD *)(v3 + 12) = v14;
    sub_1001F969C();
    *(_DWORD *)(v3 + 16) = *(_DWORD *)(v10 + 16);
    *(_WORD *)(v3 + 20) = 0;
    *(unsigned char *)(v3 + 22) = 0;
    return;
  }
LABEL_19:
  __break(1u);
}

Swift::Void __swiftcall ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(Swift::UInt32 extraCapacity, Swift::Bool resetIndices)
{
  int v3 = *(_DWORD *)(v2 + 16) - (*(unsigned __int8 *)(v2 + 22) | (*(unsigned __int16 *)(v2 + 20) << 8));
  BOOL v4 = __CFADD__(v3, extraCapacity);
  Swift::UInt32 v5 = v3 + extraCapacity;
  if (v4) {
    __break(1u);
  }
  else {
    ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v5, resetIndices);
  }
}

Swift::Void __swiftcall ByteBuffer._ensureAvailableCapacity(_:at:)(Swift::UInt32 _, Swift::UInt32 at)
{
  uint64_t v3 = *(unsigned __int8 *)(v2 + 22) | (*(unsigned __int16 *)(v2 + 20) << 8);
  int v4 = v3 + at;
  if (__CFADD__(v3, at))
  {
    __break(1u);
    goto LABEL_16;
  }
  unsigned int v6 = v4 + _;
  if (__CFADD__(v4, _))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = v2;
  uint64_t v8 = *(unsigned int *)(v2 + 16);
  if (v8 >= v6) {
    return;
  }
  uint64_t v10 = *(void *)v2;
  sub_1001F969C();
  unsigned int v11 = *(_DWORD *)(v10 + 16);
  if (v11 < v6)
  {
    if (!__CFADD__(at, _))
    {
      if (!v3)
      {
        ByteBuffer._Storage.reallocStorage(capacity:)(at + _);
        goto LABEL_12;
      }
      if (v8 >= v3)
      {
        uint64_t v12 = ByteBuffer._Storage.reallocSlice(_:capacity:)(v3 | (v8 << 32), at + _);
        swift_release();
        *(void *)uint64_t v7 = v12;
        uint64_t v10 = v12;
LABEL_12:
        sub_1001F969C();
        LOWORD(v13) = 0;
        LOBYTE(v14) = 0;
        unsigned int v11 = *(_DWORD *)(v10 + 16);
        goto LABEL_13;
      }
LABEL_19:
      __break(1u);
      return;
    }
    goto LABEL_17;
  }
  if (v11 < v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  LOWORD(v13) = (unsigned __int16)_UInt24.init(_:)(v3);
  unsigned int v14 = HIWORD(v13);
LABEL_13:
  *(_DWORD *)(v7 + 16) = v11;
  *(_WORD *)(v7 + 20) = v13;
  *(unsigned char *)(v7 + 22) = v14;
}

void ByteBuffer._setBytes(_:at:)(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  if (a1) {
    unint64_t v4 = a2 - a1;
  }
  else {
    unint64_t v4 = 0;
  }
  unsigned int v5 = a3 + v4;
  if (__CFADD__(a3, v4))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001FCE50();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    unsigned int v7 = *((_DWORD *)v3 + 4);
    BOOL v8 = v5 >= v7;
    Swift::UInt32 v9 = v5 - v7;
    if (v8) {
      Swift::UInt32 v10 = v9;
    }
    else {
      Swift::UInt32 v10 = 0;
    }
    char v11 = static ByteBuffer.CopyBytesError.negativeLength.getter();
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v10, v11 & 1);
  }
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_14;
  }
  if (!HIDWORD(v4))
  {
    ByteBuffer._ensureAvailableCapacity(_:at:)(v4, a3);
    uint64_t v12 = *v3;
    int v13 = *((_DWORD *)v3 + 4);
    int v14 = *((unsigned __int16 *)v3 + 10);
    int v15 = *((unsigned __int8 *)v3 + 22);
    sub_1001F969C();
    uint64_t v16 = sub_1001FB0C0(a3, *(void *)(v12 + 24) + (v15 | (v14 << 8)), *(void *)(v12 + 24) + (v15 | (v14 << 8)) + v13 - (v15 | (v14 << 8)));
    UnsafeMutableRawBufferPointer.init(fastRebase:)(v16);
    sub_1001FCF10();
    return;
  }
LABEL_15:
  __break(1u);
}

uint64_t ByteBuffer._setBytesAssumingUniqueBufferAccess(_:at:)(uint64_t a1, uint64_t a2, unsigned int a3)
{
  sub_1001FCE50();
  uint64_t v5 = *v3;
  int v6 = *((_DWORD *)v3 + 4);
  int v7 = *((unsigned __int16 *)v3 + 10);
  int v8 = *((unsigned __int8 *)v3 + 22);
  sub_1001F969C();
  uint64_t v9 = sub_1001FB0C0(a3, *(void *)(v5 + 24) + (v8 | (v7 << 8)), *(void *)(v5 + 24) + (v8 | (v7 << 8)) + v6 - (v8 | (v7 << 8)));
  UnsafeMutableRawBufferPointer.init(fastRebase:)(v9);
  return sub_1001FCF10();
}

unint64_t ByteBuffer._slicedStorageBuffer.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return *(void *)(a1 + 24) + ((a3 >> 24) & 0xFFFF00 | BYTE6(a3));
}

uint64_t sub_1001FB054(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_10022ED3C(0, result, v3);
  if (v4) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result;
  }
  if (v3 < v5) {
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000) == 0) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1001FB0C0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v5 = a3 - a2;
  if (a2) {
    uint64_t v6 = a3 - a2;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t result = sub_1001FCCAC(0, result, v6, a2, a3);
  if (v7)
  {
    uint64_t result = v5;
    if (!a2) {
      return 0;
    }
  }
  else if (!a2)
  {
    uint64_t v5 = 0;
  }
  if (v5 < result) {
    goto LABEL_13;
  }
  return result;
}

void ByteBuffer._setSlowPath<A>(bytes:at:)(uint64_t *a1, Swift::UInt32 a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v30 = (char *)&v28 - v9;
  if (sub_10000566C(&qword_10070FEC8) == a3)
  {
    uint64_t v18 = *a1;
    uint64_t v19 = a1[1];
    uint64_t v20 = a1[2];
    sub_1001F7E94(v18, v19, v20, a2);
  }
  else
  {
    unint64_t v10 = sub_1005E1F80();
    unsigned int v11 = a2 + v10;
    if (!__CFADD__(a2, v10))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unsigned int v12 = *(_DWORD *)(v4 + 16);
        BOOL v13 = v11 >= v12;
        Swift::UInt32 v14 = v11 - v12;
        if (v13) {
          Swift::UInt32 v15 = v14;
        }
        else {
          Swift::UInt32 v15 = 0;
        }
        char v16 = static ByteBuffer.CopyBytesError.negativeLength.getter();
        ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v15, v16 & 1);
      }
      uint64_t v29 = v8;
      sub_1001FB400(v10, (uint64_t *)v4, a2);
      uint64_t v17 = sub_1005E28D0();
      swift_getAssociatedConformanceWitness();
      sub_1005E2950();
      if (v33 == 1)
      {
LABEL_18:
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, AssociatedTypeWitness);
        return;
      }
      Swift::UInt32 v21 = a2;
      uint64_t v22 = a2;
      while (1)
      {
        unint64_t v23 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if ((v23 & 0x8000000000000000) != 0) {
          goto LABEL_20;
        }
        if (HIDWORD(v23)) {
          goto LABEL_21;
        }
        char v24 = v32;
        ByteBuffer._ensureAvailableCapacity(_:at:)(v17 + 1, v21);
        uint64_t v25 = *(void *)v4;
        uint64_t v26 = *(unsigned __int16 *)(v4 + 20);
        uint64_t v27 = *(unsigned __int8 *)(v4 + 22);
        sub_1001F969C();
        *(unsigned char *)(*(void *)(v25 + 24) + (v27 | (v26 << 8)) + v22 + v17) = v24;
        sub_1005E2950();
        ++v17;
        if (v33 == 1) {
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
    __break(1u);
  }
}

unint64_t sub_1001FB400(unint64_t result, uint64_t *a2, Swift::UInt32 at)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (!HIDWORD(result))
  {
    ByteBuffer._ensureAvailableCapacity(_:at:)(result, at);
    uint64_t v5 = *a2;
    uint64_t v6 = *((unsigned __int16 *)a2 + 10);
    uint64_t v7 = *((unsigned __int8 *)a2 + 22);
    sub_1001F969C();
    return *(void *)(v5 + 24) + (v7 | (v6 << 8)) + at;
  }
  __break(1u);
  return result;
}

void ByteBuffer._setBytes<A>(_:at:)(uint64_t *a1, Swift::UInt32 a2, uint64_t a3)
{
  sub_1005E1F90();
  if (v6) {
    ByteBuffer._setSlowPath<A>(bytes:at:)(a1, a2, a3);
  }
}

void sub_1001FB524(uint64_t a1@<X0>, uint64_t a2@<X1>, Swift::UInt32 a3@<W3>, _DWORD *a4@<X8>)
{
  if (a1) {
    uint64_t v5 = a1 + a2;
  }
  else {
    uint64_t v5 = 0;
  }
  ByteBuffer._setBytes(_:at:)(a1, v5, a3);
  *a4 = v6;
}

unint64_t ByteBuffer.writableBytes.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return a3 - ((a3 >> 24) & 0xFFFF00) - (HIDWORD(a2) + BYTE6(a3));
}

unint64_t ByteBuffer.capacity.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return a3 - (BYTE6(a3) | (a3 >> 24) & 0xFFFF00);
}

uint64_t ByteBuffer.storageCapacity.getter(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

Swift::Void __swiftcall ByteBuffer.reserveCapacity(minimumWritableBytes:)(Swift::Int minimumWritableBytes)
{
  uint64_t v2 = *(unsigned int *)(v1 + 12);
  Swift::Int v3 = v2 + minimumWritableBytes;
  if (__OFADD__(v2, minimumWritableBytes))
  {
    __break(1u);
  }
  else
  {
    sub_1001FCE38();
    if (v3 > v4)
    {
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        ByteBuffer._ensureAvailableCapacity(_:at:)(v3, 0);
      }
      else
      {
        Swift::Bool v5 = static ByteBuffer.CopyBytesError.negativeLength.getter() & 1;
        ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v3, v5);
      }
    }
  }
}

Swift::Void __swiftcall ByteBuffer._copyStorageAndRebaseIfNeeded()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    Swift::UInt32 v0 = variable initialization expression of Engine.isProcessingUpdates();
    Swift::Bool v1 = static ByteBuffer.CopyBytesError.negativeLength.getter() & 1;
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v0, v1);
  }
}

uint64_t ByteBuffer.withUnsafeMutableWritableBytes<A>(_:)(uint64_t (*a1)(uint64_t))
{
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
  uint64_t v3 = *v1;
  int v4 = *((_DWORD *)v1 + 4);
  int v5 = *((unsigned __int16 *)v1 + 10);
  int v6 = *((unsigned __int8 *)v1 + 22);
  sub_1001FCD38();
  uint64_t v7 = sub_1001FB0C0(*((unsigned int *)v1 + 3), *(void *)(v3 + 24) + (v6 | (v5 << 8)), *(void *)(v3 + 24) + (v6 | (v5 << 8)) + v4 - (v6 | (v5 << 8)));
  uint64_t v8 = UnsafeMutableRawBufferPointer.init(fastRebase:)(v7);
  return a1(v8);
}

void ByteBuffer.writeWithUnsafeMutableBytes(minimumWritableBytes:_:)()
{
  sub_1001FCE8C();
  uint64_t v3 = v0;
  int v5 = v4;
  if (v2 >= 1) {
    ByteBuffer.reserveCapacity(minimumWritableBytes:)(v2);
  }
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
  uint64_t v6 = *v0;
  int v7 = *((_DWORD *)v3 + 4);
  int v8 = *((unsigned __int16 *)v3 + 10);
  int v9 = *((unsigned __int8 *)v3 + 22);
  sub_1001FCD38();
  uint64_t v10 = v9 | (v8 << 8);
  uint64_t v11 = *(void *)(v6 + 24) + v10;
  uint64_t v12 = v11 + (v7 - v10);
  unsigned int v13 = *((_DWORD *)v3 + 3);
  uint64_t v14 = sub_1001FB0C0(v13, v11, v12);
  uint64_t v15 = UnsafeMutableRawBufferPointer.init(fastRebase:)(v14);
  int v16 = v5(v15);
  if (v1) {
    goto LABEL_6;
  }
  if (!__CFADD__(v13, v16))
  {
    *((_DWORD *)v3 + 3) = v13 + v16;
LABEL_6:
    sub_1001FCE74();
    return;
  }
  __break(1u);
}

void ByteBuffer.writeWithUnsafeMutableBytes(_:)()
{
  sub_1001FCE8C();
  Swift::Int v2 = v0;
  int v4 = v3;
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
  uint64_t v5 = *v0;
  int v6 = *((_DWORD *)v2 + 4);
  int v7 = *((unsigned __int16 *)v2 + 10);
  int v8 = *((unsigned __int8 *)v2 + 22);
  sub_1001FCD38();
  uint64_t v9 = v8 | (v7 << 8);
  uint64_t v10 = *(void *)(v5 + 24) + v9;
  uint64_t v11 = v10 + (v6 - v9);
  unsigned int v12 = *((_DWORD *)v2 + 3);
  uint64_t v13 = sub_1001FB0C0(v12, v10, v11);
  uint64_t v14 = UnsafeMutableRawBufferPointer.init(fastRebase:)(v13);
  int v15 = v4(v14);
  if (v1) {
    goto LABEL_4;
  }
  if (!__CFADD__(v12, v15))
  {
    *((_DWORD *)v2 + 3) = v12 + v15;
LABEL_4:
    sub_1001FCE74();
    return;
  }
  __break(1u);
}

uint64_t ByteBuffer.withVeryUnsafeBytes<A>(_:)(uint64_t (*a1)(unint64_t))
{
  sub_1001FCD38();
  unint64_t v2 = sub_1001FCD6C();
  return a1(v2);
}

uint64_t ByteBuffer.withUnsafeReadableBytesWithStorageManagement<A>(_:)(uint64_t (*a1)(uint64_t))
{
  sub_1001FCD38();
  uint64_t v2 = sub_1001FCD94();
  return a1(v2);
}

uint64_t ByteBuffer.withVeryUnsafeBytesWithStorageManagement<A>(_:)(uint64_t (*a1)(unint64_t))
{
  sub_1001FCD38();
  unint64_t v2 = sub_1001FCD6C();
  return a1(v2);
}

uint64_t ByteBuffer._copyIntoByteBufferWithSliceIndex0_slowPath(index:length:)(uint64_t result, Swift::UInt32 a2, uint64_t a3)
{
  if (__CFADD__(result, a2))
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(a2, 1);
    return a3;
  }
  return result;
}

Swift::Bool __swiftcall ByteBuffer.discardReadBytes()()
{
  int v1 = *(_DWORD *)(v0 + 8);
  if (!v1) {
    return v1 != 0;
  }
  if (v1 == *(_DWORD *)(v0 + 12))
  {
    *(void *)(v0 + 8) = 0;
    return v1 != 0;
  }
  if (!swift_isUniquelyReferenced_nonNull_native())
  {
    ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(0, 1);
    return v1 != 0;
  }
  unint64_t v2 = (uint64_t *)(*(void *)v0 + 24);
  Swift::Bool result = sub_1001F969C();
  unsigned int v4 = *(unsigned __int8 *)(v0 + 22) | (*(unsigned __int16 *)(v0 + 20) << 8);
  unsigned int v5 = *(_DWORD *)(v0 + 8);
  unsigned int v6 = v4 + v5;
  if (__CFADD__(v4, v5))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *v2;
    int v8 = (void *)(*v2 + v4);
    unsigned int v9 = *(_DWORD *)(v0 + 12);
    unsigned int v10 = v9 - v5;
    BOOL v11 = v9 < v5;
    Swift::Bool result = memmove(v8, (const void *)(v7 + v6), v9 - v5);
    *(_DWORD *)(v0 + 8) = 0;
    if (!v11)
    {
      *(_DWORD *)(v0 + 12) = v10;
      return v1 != 0;
    }
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ByteBuffer.clear()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v1 = *v0;
    sub_1001F969C();
    uint64_t v2 = ByteBuffer._Storage.allocateStorage(capacity:)(*(_DWORD *)(v1 + 16));
    sub_1001FCE1C(v2);
  }
  sub_1001F969C();
  sub_1001FCD54();
}

Swift::Void __swiftcall ByteBuffer.clear(minimumCapacity:)(Swift::UInt32 minimumCapacity)
{
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1001F969C();
    if (*(_DWORD *)(v4 + 16) < minimumCapacity) {
      ByteBuffer._Storage.reallocStorage(capacity:)(minimumCapacity);
    }
  }
  else
  {
    uint64_t v5 = ByteBuffer._Storage.allocateStorage(capacity:)(minimumCapacity);
    sub_1001FCE1C(v5);
  }
  sub_1001F969C();
  sub_1001FCD54();
}

Swift::Void __swiftcall ByteBuffer.clear(minimumCapacity:)(Swift::Int minimumCapacity)
{
  if (HIDWORD(minimumCapacity))
  {
    __break(1u);
  }
  else
  {
    Swift::UInt32 v2 = minimumCapacity;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v4 = *v1;
    if (isUniquelyReferenced_nonNull_native)
    {
      sub_1001F969C();
      if (*(_DWORD *)(v4 + 16) < v2) {
        ByteBuffer._Storage.reallocStorage(capacity:)(v2);
      }
    }
    else
    {
      uint64_t v5 = ByteBuffer._Storage.allocateStorage(capacity:)(v2);
      sub_1001FCE1C(v5);
    }
    sub_1001F969C();
    sub_1001FCD54();
  }
}

uint64_t ByteBuffer.description.getter()
{
  sub_1005E2C80(136);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v1._unint64_t object = (void *)0x80000001005E5F50;
  sub_1005E1E30(v1);
  v2._uint64_t countAndFlagsBits = sub_1001FCDB8();
  sub_1005E1E30(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = (unsigned __int16)sub_1001FCF98() | 0x7265746972770000;
  v3._unint64_t object = (void *)0xEF203A7865646E49;
  sub_1005E1E30(v3);
  v4._uint64_t countAndFlagsBits = sub_1001FCDB8();
  sub_1005E1E30(v4);
  swift_bridgeObjectRelease();
  v5._unint64_t object = (void *)0x80000001005E5F70;
  v5._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_1005E1E30(v5);
  v6._uint64_t countAndFlagsBits = sub_1001FCDB8();
  sub_1005E1E30(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = (unsigned __int16)sub_1001FCF98() | 0x6963617061630000;
  v7._unint64_t object = (void *)0xEC000000203A7974;
  sub_1005E1E30(v7);
  v8._uint64_t countAndFlagsBits = sub_1001FCDB8();
  sub_1005E1E30(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0xD000000000000013;
  v9._unint64_t object = (void *)0x80000001005E5F90;
  sub_1005E1E30(v9);
  sub_1001F969C();
  v10._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = (unsigned __int16)sub_1001FCF98() | 0x3A6563696C730000;
  v11._unint64_t object = (void *)0xE900000000000020;
  sub_1005E1E30(v11);
  v12._uint64_t countAndFlagsBits = _ByteBufferSlice.description.getter();
  sub_1005E1E30(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = (unsigned __int16)sub_1001FCF98() | 0x6761726F74730000;
  v13._unint64_t object = (void *)0xEB00000000203A65;
  sub_1005E1E30(v13);
  sub_1001F969C();
  sub_1005E2E90();
  v14._uint64_t countAndFlagsBits = 10272;
  v14._unint64_t object = (void *)0xE200000000000000;
  sub_1005E1E30(v14);
  v15._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v15);
  swift_bridgeObjectRelease();
  v16._unint64_t object = (void *)0xE90000000000007DLL;
  v16._uint64_t countAndFlagsBits = 0x2029736574796220;
  sub_1005E1E30(v16);
  return 0;
}

uint64_t ByteBuffer.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001FCE50();
  unint64_t v6 = HIDWORD(v5);
  sub_1005E2C80(30);
  uint64_t v7 = a3 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v8 = ByteBuffer.description.getter();
  swift_bridgeObjectRelease();
  v11._unint64_t object = (void *)0x80000001005E5FB0;
  v11._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  sub_1005E1E30(v11);
  if (v6 - v3 >= 0x400uLL) {
    uint64_t v9 = 1024;
  }
  else {
    uint64_t v9 = v6 - v3;
  }
  v12._uint64_t countAndFlagsBits = sub_1001FAAE8(v7, v3, v9);
  sub_1005E1E30(v12);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001FC0A0(uint64_t a1, uint64_t a2)
{
  return sub_1001FC0D0(a1, a2, (uint64_t (*)(void, void, unint64_t))ByteBuffer.description.getter);
}

uint64_t sub_1001FC0B8(uint64_t a1, uint64_t a2)
{
  return sub_1001FC0D0(a1, a2, (uint64_t (*)(void, void, unint64_t))ByteBuffer.debugDescription.getter);
}

uint64_t sub_1001FC0D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, unint64_t))
{
  return a3(*(void *)v3, *(void *)(v3 + 8), *(unsigned int *)(v3 + 16) | ((unint64_t)*(unsigned __int16 *)(v3 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v3 + 22) << 48));
}

Swift::Void __swiftcall ByteBuffer.moveWriterIndex(forwardBy:)(Swift::Int forwardBy)
{
  int v2 = *(_DWORD *)(v1 + 12);
  BOOL v3 = __CFADD__(v2, forwardBy);
  unsigned int v4 = v2 + forwardBy;
  if (v3)
  {
    __break(1u);
  }
  else if (*(_DWORD *)(v1 + 16) - (*(unsigned __int8 *)(v1 + 22) | (*(unsigned __int16 *)(v1 + 20) << 8)) >= v4)
  {
    *(_DWORD *)(v1 + 12) = v4;
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall ByteBuffer.moveWriterIndex(to:)(Swift::Int to)
{
  if (*(_DWORD *)(v1 + 16) - (*(unsigned __int8 *)(v1 + 22) | (*(unsigned __int16 *)(v1 + 20) << 8)) < to) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v1 + 12) = to;
  }
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ByteBuffer.copyBytes(at:to:length:)(Swift::Int at, Swift::Int to, Swift::Int length)
{
  sub_1001FCE8C();
  if ((v6 & 0x8000000000000000) != 0)
  {
    char v9 = 0;
    goto LABEL_8;
  }
  size_t v7 = v6;
  if (!v6)
  {
LABEL_9:
    sub_1001FCE74();
    return result;
  }
  Swift::Int v8 = result;
  if (*((unsigned int *)v3 + 2) > result)
  {
LABEL_6:
    char v9 = 1;
LABEL_8:
    sub_1001FC6C0();
    swift_allocError();
    char *v10 = v9;
    swift_willThrow();
    goto LABEL_9;
  }
  if (__OFADD__(result, v6))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((uint64_t)(result + v6) > *((unsigned int *)v3 + 3)) {
    goto LABEL_6;
  }
  uint64_t v11 = v5;
  Swift::Int result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
LABEL_16:
    if (!HIDWORD(v7))
    {
      ByteBuffer._ensureAvailableCapacity(_:at:)(v7, v11);
      ByteBuffer._copyStorageAndRebaseIfNeeded()();
      uint64_t v14 = *v3;
      int v15 = *((_DWORD *)v3 + 4);
      int v16 = *((unsigned __int16 *)v3 + 10);
      int v17 = *((unsigned __int8 *)v3 + 22);
      sub_1001FCD38();
      uint64_t v18 = v17 | (v16 << 8);
      uint64_t v19 = *(void *)(v14 + 24) + v18;
      uint64_t v20 = sub_1001FB0C0(v11, v19, v19 + (v15 - v18));
      Swift::UInt32 v21 = (void *)UnsafeMutableRawBufferPointer.init(fastRebase:)(v20);
      if (v21) {
        memmove(v21, (const void *)(v19 + v8), v7);
      }
      goto LABEL_9;
    }
    goto LABEL_20;
  }
  if (!__OFADD__(v11, v7))
  {
    if (*((_DWORD *)v3 + 3) <= (v11 + v7)) {
      Swift::UInt32 v12 = v11 + v7;
    }
    else {
      Swift::UInt32 v12 = *((_DWORD *)v3 + 3);
    }
    char v13 = static ByteBuffer.CopyBytesError.negativeLength.getter();
    ByteBuffer._copyStorageAndRebase(capacity:resetIndices:)(v12, v13 & 1);
    goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

void *ByteBuffer.CopyBytesError.negativeLength.unsafeMutableAddressor()
{
  return &static ByteBuffer.CopyBytesError.negativeLength;
}

void *ByteBuffer.CopyBytesError.unreadableSourceBytes.unsafeMutableAddressor()
{
  return &static ByteBuffer.CopyBytesError.unreadableSourceBytes;
}

BOOL sub_1001FC2B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static TextPartEnumerationResult.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1001FC2C0()
{
  return TextPartEnumerationResult.hashValue.getter(*v0);
}

void sub_1001FC2C8(uint64_t a1)
{
  TextPartEnumerationResult.hash(into:)(a1, *v1);
}

uint64_t ByteBuffer.CopyBytesError.debugDescription.getter()
{
  return sub_1005E1CA0();
}

uint64_t sub_1001FC304()
{
  return ByteBuffer.CopyBytesError.debugDescription.getter();
}

BOOL static ByteBuffer.== infix(_:_:)(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unsigned int v6 = a5;
  unsigned int v7 = a2;
  unint64_t v8 = HIDWORD(a2);
  if (HIDWORD(a2) - a2 != HIDWORD(a5) - a5) {
    return 0;
  }
  unsigned __int8 v9 = BYTE6(a6);
  unsigned __int8 v11 = BYTE6(a3);
  unint64_t v13 = HIDWORD(a3);
  unint64_t v14 = HIDWORD(a6);
  if (a3 == a6 && WORD2(a3) == WORD2(a6) && BYTE6(a3) == BYTE6(a6) && a1 == a4) {
    return 1;
  }
  sub_1001F969C();
  int v17 = (const void *)(*(void *)(a1 + 24) + (v11 | ((unint64_t)(unsigned __int16)v13 << 8)) + v7);
  sub_1001F969C();
  return memcmp(v17, (const void *)(*(void *)(a4 + 24) + (v9 | ((unint64_t)(unsigned __int16)v14 << 8)) + v6), v8 - v7) == 0;
}

BOOL sub_1001FC41C(uint64_t a1, uint64_t a2)
{
  return static ByteBuffer.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(void *)a2, *(void *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

uint64_t ByteBuffer.hash(into:)()
{
  return sub_1005E3400();
}

Swift::Int QuotaRoot.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_1001FC50C()
{
  return QuotaRoot.hashValue.getter();
}

uint64_t sub_1001FC528()
{
  return ByteBuffer.hash(into:)();
}

Swift::Int sub_1001FC544()
{
  return sub_1005E3470();
}

uint64_t ByteBuffer.modifyIfUniquelyOwned<A>(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t result = a1(v3);
    if (v4) {
      return result;
    }
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  return storeEnumTagSinglePayload for ClientCommand(a3, v9, 1, a2);
}

uint64_t type metadata accessor for ByteBuffer._Storage()
{
  return self;
}

void sub_1001FC670(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  if (a1) {
    uint64_t v5 = a1 + a2;
  }
  else {
    uint64_t v5 = 0;
  }
  ByteBuffer._setBytes(_:at:)(a1, v5, *(_DWORD *)(v3 + 24));
  *a3 = v6;
}

unint64_t sub_1001FC6C0()
{
  unint64_t result = qword_10070FEF0;
  if (!qword_10070FEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FEF0);
  }
  return result;
}

unint64_t sub_1001FC710()
{
  unint64_t result = qword_10070FEF8;
  if (!qword_10070FEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FEF8);
  }
  return result;
}

unint64_t sub_1001FC760()
{
  unint64_t result = qword_10070FF00;
  if (!qword_10070FF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FF00);
  }
  return result;
}

_DWORD *initializeBufferWithCopyOfBuffer for _ByteBufferSlice(_DWORD *result, int *a2)
{
  int v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for _ByteBufferSlice(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 7)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for _ByteBufferSlice(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 7) = v3;
  return result;
}

void type metadata accessor for _ByteBufferSlice()
{
}

__n128 initializeWithCopy for ByteBufferAllocator(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ByteBufferAllocator(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for ByteBufferAllocator()
{
}

uint64_t destroy for ByteBuffer()
{
  return swift_release();
}

uint64_t _s12NIOIMAPCore210ByteBufferVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ByteBuffer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  return a1;
}

__n128 initializeWithTake for ByteBuffer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 15) = *(void *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ByteBuffer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ByteBuffer(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 23))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ByteBuffer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 23) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 23) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ByteBuffer()
{
}

unsigned char *initializeBufferWithCopyOfBuffer for MailboxAttribute(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

void type metadata accessor for ByteBuffer.CopyBytesError()
{
}

uint64_t getEnumTagSinglePayload for ExtendedSearchResponse.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s12NIOIMAPCore210ByteBufferV14CopyBytesErrorV9BaseErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001FCBACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ByteBuffer.CopyBytesError.BaseError()
{
  return &type metadata for ByteBuffer.CopyBytesError.BaseError;
}

unint64_t sub_1001FCBE8()
{
  unint64_t result = qword_10070FFB8;
  if (!qword_10070FFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FFB8);
  }
  return result;
}

unint64_t sub_1001FCC34()
{
  unint64_t result = qword_10070FFC0;
  if (!qword_10070FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FFC0);
  }
  return result;
}

uint64_t sub_1001FCC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v6 = a4 - a3;
  if (!a3) {
    uint64_t v6 = 0;
  }
  if (result < 0 || v6 < result) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1001FCCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1001F94DC(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2) {
      return 0;
    }
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_1001FCC80(a1, a2, a4, a5);
}

uint64_t sub_1001FCD38()
{
  return swift_beginAccess();
}

void sub_1001FCD54()
{
  *(_DWORD *)(v0 + 16) = *(_DWORD *)(v1 + 16);
  *(_WORD *)(v0 + 20) = 0;
  *(unsigned char *)(v0 + 22) = 0;
  *(void *)(v0 + 8) = 0;
}

unint64_t sub_1001FCD6C()
{
  return *(void *)(v1 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0));
}

uint64_t sub_1001FCD94()
{
  return *(void *)(v2 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0)) + v1;
}

uint64_t sub_1001FCDB8()
{
  return sub_1005E3230();
}

uint64_t sub_1001FCDD4()
{
  return *(void *)(v2 + 24) + ((v0 >> 24) & 0xFFFF00 | BYTE6(v0)) + v1;
}

uint64_t sub_1001FCDF4()
{
  return swift_retain();
}

uint64_t sub_1001FCE1C(uint64_t a1)
{
  void *v1 = a1;
  return swift_release();
}

uint64_t sub_1001FCE5C@<X0>(unint64_t a1@<X4>, int a2@<W8>)
{
  return ((a1 >> 24) & 0xFFFF00 | BYTE6(a1)) + a2;
}

uint64_t sub_1001FCEA4()
{
  return swift_beginAccess();
}

uint64_t sub_1001FCEBC()
{
  return swift_beginAccess();
}

uint64_t sub_1001FCEF0@<X0>(uint64_t a1@<X8>)
{
  return ByteBuffer._copyIntoByteBufferWithSliceIndex0_slowPath(index:length:)(a1, v2, v1);
}

uint64_t sub_1001FCF10()
{
  return sub_1005E2960();
}

uint64_t sub_1001FCF44()
{
  return swift_allocObject();
}

void sub_1001FCF64()
{
  ByteBuffer._copyStorageAndRebaseIfNeeded()();
}

uint64_t sub_1001FCF98()
{
  return 8236;
}

void ByteBuffer.setInteger<A>(_:at:endianness:as:)()
{
  sub_1001FE5B4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_1001FE450();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  ByteBuffer._toEndianness<A>(value:endianness:)(v6, v10);
  swift_release();
  uint64_t v17 = v0;
  uint64_t v18 = v4;
  sub_1001FD78C((uint64_t)v13, (uint64_t)sub_1001FD744, (uint64_t)&v16, v2, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Never, v14);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v2);
  sub_1001FE57C();
}

void ByteBuffer.writeInteger<A>(_:endianness:as:)()
{
  ByteBuffer.setInteger<A>(_:at:endianness:as:)();
  int v1 = *(_DWORD *)(v0 + 12);
  BOOL v3 = __CFADD__(v1, v2);
  int v4 = v1 + v2;
  if (v3) {
    __break(1u);
  }
  else {
    *(_DWORD *)(v0 + 12) = v4;
  }
}

Swift::UInt32 __swiftcall UInt32.nextPowerOf2ClampedToMax()()
{
  if (!v0) {
    return 1;
  }
  unsigned int v1 = (v0 - 1) | ((v0 - 1) >> 1) | (((v0 - 1) | ((v0 - 1) >> 1)) >> 2);
  unsigned int v2 = v1 | (v1 >> 4) | ((v1 | (v1 >> 4)) >> 8);
  int v3 = v2 | HIWORD(v2);
  BOOL v4 = __CFADD__(v3, 1);
  Swift::UInt32 v5 = v3 + 1;
  if (v4) {
    return -1;
  }
  else {
    return v5;
  }
}

uint64_t ByteBuffer._toEndianness<A>(value:endianness:)(uint64_t a1, char a2)
{
  if (a2) {
    return sub_1005E2ED0();
  }
  else {
    return sub_1005E2F00();
  }
}

void ByteBuffer.readInteger<A>(endianness:as:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FE5B4();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = sub_1005E28C0();
  sub_1001FE450();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  char v32 = (char *)&a9 - v31;
  uint64_t v33 = *(unsigned int *)(v20 + 8);
  ByteBuffer.getInteger<A>(at:endianness:as:)(v33 | ((unint64_t)*(unsigned int *)(v20 + 12) << 32), (uint64_t)&a9 - v31);
  if (getEnumTagSinglePayload for ClientCommand((uint64_t)v32, 1, v24) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
    uint64_t v34 = v26;
    uint64_t v35 = 1;
LABEL_5:
    storeEnumTagSinglePayload for ClientCommand(v34, v35, 1, v24);
    sub_1001FE57C();
    return;
  }
  sub_1001F9720();
  uint64_t v37 = v36 + 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v26, v32, v24);
  int v38 = *(_DWORD *)(v37 + 32);
  BOOL v39 = __CFADD__(v33, v38);
  int v40 = v33 + v38;
  if (!v39)
  {
    *(_DWORD *)(v20 + 8) = v40;
    uint64_t v34 = v26;
    uint64_t v35 = 0;
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t ByteBuffer.getInteger<A>(at:endianness:as:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  sub_1001F9720();
  uint64_t v8 = *(void *)(v7 + 64);
  if (v4 < a1 || v8 < 0 || (HIDWORD(a1) - a1) - v8 < v4 - a1)
  {
    return storeEnumTagSinglePayload for ClientCommand(a2, 1, 1, (uint64_t)v6);
  }
  else if (v6 == &type metadata for UInt8)
  {
    __chkstk_darwin(v4);
    ByteBuffer.withUnsafeReadableBytes<A>(_:)((uint64_t (*)(uint64_t))sub_1001FD8C8);
    return storeEnumTagSinglePayload for ClientCommand(a2, 0, 1, (uint64_t)&type metadata for UInt8);
  }
  else
  {
    __chkstk_darwin(HIDWORD(v5));
    sub_1005E28C0();
    return ByteBuffer.withUnsafeReadableBytes<A>(_:)((uint64_t (*)(uint64_t))sub_1001FD880);
  }
}

uint64_t sub_1001FD4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W7>, uint64_t a6@<X8>, uint64_t a7)
{
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  int v19 = a5 & 1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v10 = *(void *)(a7 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedConformanceWitness();
  sub_1005E3340();
  sub_1005E3250();
  uint64_t v21 = v15;
  uint64_t v22 = v16;
  uint64_t v23 = v17;
  uint64_t v24 = v18;
  sub_1001FD78C((uint64_t)v12, (uint64_t)sub_1001FE41C, (uint64_t)v20, a7, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for () + 8, (uint64_t)&protocol witness table for Never, v13);
  ByteBuffer._toEndianness<A>(value:endianness:)((uint64_t)v12, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a7);
  return storeEnumTagSinglePayload for ClientCommand(a6, 0, 1, a7);
}

void sub_1001FD744(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  ByteBuffer._setBytes(_:at:)(a1, a2, *(_DWORD *)(v3 + 24));
  *a3 = v5;
}

uint64_t sub_1001FD78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = __chkstk_darwin(a1);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v12, v12 + *(void *)(*(void *)(v15 - 8) + 64), v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

uint64_t sub_1001FD880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1001FD4D8(a1, a2, *(void *)(v3 + 32), *(void *)(v3 + 40), *(unsigned char *)(v3 + 71), a3, *(void *)(v3 + 16));
}

uint64_t sub_1001FD8C8()
{
  return swift_dynamicCast();
}

void FixedWidthInteger.nextPowerOf2()()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v57 = v4;
  uint64_t v6 = *(void (**)(void))(v5 + 8);
  uint64_t v54 = *((void *)v6 + 3);
  uint64_t v55 = v5;
  uint64_t v7 = *(void *)(v54 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1001F9720();
  __chkstk_darwin(v9);
  sub_1001F3FE0();
  uint64_t v53 = v10;
  __chkstk_darwin(v11);
  sub_1001FE450();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001F3FE0();
  uint64_t v51 = v15;
  uint64_t v17 = __chkstk_darwin(v16);
  BOOL v52 = (char *)v47 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v47 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (void (*)(void))((char *)v47 - v22);
  char v24 = sub_1001FE4A0();
  uint64_t v50 = v6;
  uint64_t v56 = v0;
  if ((v24 & 1) == 0)
  {
    uint64_t v49 = v7;
    char v29 = sub_1001FE4A0();
    uint64_t v30 = sub_1001FE620();
    if (v29)
    {
      if (v30 <= 64)
      {
        sub_1001FE52C();
        v47[2] = AssociatedTypeWitness;
        sub_1005E3340();
        sub_1001FE638();
        char v31 = sub_1005E1AB0();
        uint64_t v6 = v23;
        uint64_t v23 = *(void (**)(void))(v13 + 8);
        v47[1] = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        sub_1001FE5A4();
        v23();
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v21, v1, v3);
        if (v31)
        {
          uint64_t v32 = sub_1005E2A20();
          sub_1001FE5A4();
          v23();
          if (!v32) {
            goto LABEL_17;
          }
        }
        else
        {
          sub_1001FE5A4();
          v23();
        }
        goto LABEL_11;
      }
    }
    else if (v30 < 64)
    {
      uint64_t v40 = sub_1001FE480();
      v41(v40);
      uint64_t v42 = sub_1001FE5CC();
      uint64_t v43 = sub_1001FE468();
      ((void (*)(uint64_t))v23)(v43);
      if (!v42) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
    uint64_t v58 = 0;
    unint64_t v44 = sub_1001FDDDC();
    sub_1001FE4BC((uint64_t)&v58, (uint64_t)&type metadata for Int, v44);
    char v45 = sub_1001FE4D8();
    uint64_t v46 = sub_1001FE468();
    ((void (*)(uint64_t))v23)(v46);
    if ((v45 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_17:
    sub_1001FE52C();
    sub_1005E3340();
    sub_1001FE638();
    goto LABEL_18;
  }
  if (sub_1001FE620() >= 64)
  {
    uint64_t v58 = 0;
    unint64_t v33 = sub_1001FDDDC();
    sub_1001FE4BC((uint64_t)&v58, (uint64_t)&type metadata for Int, v33);
    char v34 = sub_1001FE4D8();
    uint64_t v35 = sub_1001FE468();
    ((void (*)(uint64_t))v23)(v35);
    if ((v34 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
  uint64_t v25 = sub_1001FE480();
  v26(v25);
  uint64_t v27 = sub_1001FE5CC();
  uint64_t v28 = sub_1001FE468();
  ((void (*)(uint64_t))v23)(v28);
  if (!v27) {
    goto LABEL_17;
  }
LABEL_11:
  unint64_t v48 = v6;
  sub_1001FE52C();
  sub_1001FE508();
  sub_1005E3250();
  uint64_t v49 = sub_1005E2EC0();
  sub_1001FE508();
  uint64_t v36 = v51;
  sub_1005E3250();
  uint64_t v37 = v52;
  sub_1005E2F40();
  ((void (*)(uint64_t, uint64_t))v23)(v36, v3);
  uint64_t v38 = sub_1005E2EE0();
  ((void (*)(char *, uint64_t))v23)(v37, v3);
  if (!__OFSUB__(v49, v38))
  {
    uint64_t v58 = v49 - v38;
    sub_1001FDDDC();
    BOOL v39 = v48;
    sub_1005E2A10();
    ((void (*)(void (*)(void), uint64_t))v23)(v39, v3);
LABEL_18:
    sub_1001FE57C();
    return;
  }
  __break(1u);
}

unint64_t sub_1001FDDDC()
{
  unint64_t result = qword_10070FFC8;
  if (!qword_10070FFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FFC8);
  }
  return result;
}

void FixedWidthInteger.previousPowerOf2()()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v29[2] = v6;
  uint64_t v7 = *(void *)(*(void *)(*(void *)(v6 + 8) + 24) + 16);
  swift_getAssociatedTypeWitness();
  sub_1001F9720();
  __chkstk_darwin(v8);
  sub_1001FE450();
  uint64_t v31 = v9;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v29 - v14;
  char v16 = sub_1001FE4A0();
  uint64_t v30 = v0;
  if (v16)
  {
    if (sub_1001FE620() < 64)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v15, v0, v3);
      goto LABEL_12;
    }
    goto LABEL_14;
  }
  uint64_t v1 = sub_1001FE4A0();
  uint64_t v17 = sub_1001FE620();
  if (v1)
  {
    if (v17 <= 64)
    {
      v29[1] = v5;
      sub_1001FE560();
      sub_1001FE600();
      sub_1001FE5EC();
      v29[0] = v7;
      sub_1005E3250();
      char v18 = sub_1005E1AB0();
      uint64_t v19 = v31;
      uint64_t v1 = *(void *)(v31 + 8);
      sub_1001FE594();
      ((void (*)(void))v1)();
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v13, v30, v3);
      if ((v18 & 1) == 0)
      {
        sub_1001FE594();
        ((void (*)(void))v1)();
        goto LABEL_17;
      }
      uint64_t v20 = sub_1005E2A20();
      sub_1001FE594();
      ((void (*)(void))v1)();
      if (v20) {
        goto LABEL_17;
      }
LABEL_15:
      sub_1001FE560();
      sub_1001FE600();
      sub_1005E3250();
LABEL_20:
      sub_1001FE57C();
      return;
    }
LABEL_14:
    uint64_t v32 = 0;
    unint64_t v23 = sub_1001FDDDC();
    sub_1001FE4BC((uint64_t)&v32, (uint64_t)&type metadata for Int, v23);
    char v24 = sub_1005E1BC0();
    uint64_t v25 = sub_1001FE548();
    ((void (*)(uint64_t))v1)(v25);
    if ((v24 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  if (v17 >= 64) {
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v15, v30, v3);
LABEL_12:
  uint64_t v21 = sub_1005E2A20();
  uint64_t v22 = sub_1001FE548();
  ((void (*)(uint64_t))v1)(v22);
  if (!v21) {
    goto LABEL_15;
  }
LABEL_17:
  sub_1001FE560();
  sub_1005E3340();
  sub_1001FE5EC();
  sub_1005E3250();
  uint64_t v26 = sub_1005E2EC0();
  uint64_t v27 = v26 - 1;
  if (__OFSUB__(v26, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v28 = sub_1005E2EE0();
    if (!__OFSUB__(v27, v28))
    {
      uint64_t v32 = v27 - v28;
      sub_1001FDDDC();
      sub_1005E2A10();
      ((void (*)(char *, uint64_t))v1)(v15, v3);
      goto LABEL_20;
    }
  }
  __break(1u);
}

void sub_1001FE220()
{
  static Endianness.host = 1;
}

char *Endianness.host.unsafeMutableAddressor()
{
  if (qword_10070FB18 != -1) {
    swift_once();
  }
  return &static Endianness.host;
}

uint64_t static Endianness.host.getter()
{
  if (qword_10070FB18 != -1) {
    swift_once();
  }
  return static Endianness.host;
}

unint64_t sub_1001FE2CC()
{
  unint64_t result = qword_10070FFD0;
  if (!qword_10070FFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FFD0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Endianness(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001FE3E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Endianness()
{
  return &type metadata for Endianness;
}

void *sub_1001FE41C(void *result)
{
  uint64_t v2 = v1[2];
  if (v2) {
    int v3 = (const void *)(v2 + v1[4]);
  }
  else {
    int v3 = 0;
  }
  if (result && v3)
  {
    if (v2) {
      uint64_t v4 = v2 + v1[5];
    }
    else {
      uint64_t v4 = 0;
    }
    return sub_1001FE500(result, v3, v4);
  }
  return result;
}

uint64_t sub_1001FE468()
{
  return v0;
}

uint64_t sub_1001FE480()
{
  return v0;
}

uint64_t sub_1001FE4A0()
{
  return dispatch thunk of static BinaryInteger.isSigned.getter(v0, v1);
}

uint64_t sub_1001FE4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:)(a1, a2, a3, v3, v4);
}

uint64_t sub_1001FE4D8()
{
  return sub_1005E1BC0();
}

void *sub_1001FE500@<X0>(void *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  return memmove(a1, a2, a3 - (void)a2);
}

uint64_t sub_1001FE508()
{
  return sub_1005E3340();
}

uint64_t sub_1001FE52C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1001FE548()
{
  return v0;
}

uint64_t sub_1001FE560()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1001FE5CC()
{
  return sub_1005E2A20();
}

uint64_t sub_1001FE5EC()
{
  return v0;
}

uint64_t sub_1001FE600()
{
  return sub_1005E3340();
}

uint64_t sub_1001FE620()
{
  return sub_1005E2A30();
}

uint64_t sub_1001FE638()
{
  return sub_1005E3250();
}

uint64_t ByteBuffer.readableBytesView.getter@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else if (a3 - (BYTE6(a3) | (WORD2(a3) << 8)) >= HIDWORD(a2))
  {
    sub_100202150(result, a2, a3, a4);
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001FE694(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (a1 >= a4)
  {
    sub_100202114();
    if (v10 <= v9)
    {
      int v4 = 0;
      int v5 = 1;
    }
    else
    {
      unint64_t v11 = v8;
      uint64_t v12 = v7;
      sub_1001F969C();
      int v5 = 0;
      int v4 = *(unsigned __int8 *)(*(void *)(v12 + 24) + ((v11 >> 24) & 0xFFFF00 | BYTE6(v11)) + a1);
    }
  }
  else
  {
    int v4 = 0;
    int v5 = 1;
  }
  return v4 | (v5 << 8);
}

uint64_t sub_1001FE728(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (a1 >= a4 && (sub_100202114(), v8 - 2 >= v9))
  {
    unint64_t v12 = v7;
    uint64_t v13 = v6;
    char v14 = v5;
    sub_1001F969C();
    int v11 = 0;
    unsigned int v10 = *(unsigned __int16 *)(*(void *)(v13 + 24) + ((v12 >> 24) & 0xFFFF00 | BYTE6(v12)) + a1);
    unsigned int v15 = bswap32(v10) >> 16;
    if ((v14 & 1) == 0) {
      LOWORD(v10) = v15;
    }
    unsigned int v10 = (unsigned __int16)v10;
  }
  else
  {
    unsigned int v10 = 0;
    int v11 = 1;
  }
  return v10 | (v11 << 16);
}

uint64_t ByteBufferView._buffer.getter()
{
  return swift_retain();
}

uint64_t QuotaRoot.storage.setter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  int v4 = a3;
  int v5 = a2;
  unint64_t v7 = HIDWORD(a2);
  unint64_t v8 = HIDWORD(a3);
  unint64_t v9 = HIWORD(a3);
  uint64_t result = swift_release();
  *(void *)uint64_t v3 = a1;
  *(_DWORD *)(v3 + 8) = v5;
  *(_DWORD *)(v3 + 12) = v7;
  *(_DWORD *)(v3 + 16) = v4;
  *(_WORD *)(v3 + 20) = v8;
  *(unsigned char *)(v3 + 22) = v9;
  return result;
}

uint64_t ByteBufferView._range.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t ByteBufferView._range.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 24) = result;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t ByteBufferView.init(buffer:range:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  if (a4 < 0 || (int64_t)(a3 - (BYTE6(a3) | (a3 >> 24) & 0xFFFF00)) < a5)
  {
    __break(1u);
  }
  else
  {
    *(void *)a6 = result;
    *(void *)(a6 + 8) = a2;
    *(_DWORD *)(a6 + 16) = a3;
    *(_WORD *)(a6 + 20) = WORD2(a3);
    *(unsigned char *)(a6 + 22) = BYTE6(a3);
    *(void *)(a6 + 24) = a4;
    *(void *)(a6 + 32) = a5;
  }
  return result;
}

uint64_t ByteBufferView.init(_:)@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (HIDWORD(a2) < a2)
  {
    __break(1u);
  }
  else if (a3 - (BYTE6(a3) | (WORD2(a3) << 8)) >= HIDWORD(a2))
  {
    return sub_100202150(result, a2, a3, a4);
  }
  __break(1u);
  return result;
}

uint64_t ByteBufferView.withUnsafeBytes<A>(_:)()
{
  return ByteBuffer.withVeryUnsafeBytes<A>(_:)((uint64_t (*)(unint64_t))sub_100201634);
}

uint64_t sub_1001FE984(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  if (result)
  {
    uint64_t v5 = *(void *)(a5 + 24);
    uint64_t v6 = *(void *)(a5 + 32);
    BOOL v7 = __OFSUB__(v6, v5);
    uint64_t v8 = v6 - v5;
    if (!v7) {
      return a3(result + v5, result + v5 + v8);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DataTransferReport.sentTransportByteCount.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t DownloadRequest.ID.next.getter(uint64_t a1)
{
  BOOL v1 = __OFADD__(a1, 1);
  uint64_t result = a1 + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t ByteBufferView.count.getter()
{
  return *(void *)(v0 + 32) - *(void *)(v0 + 24);
}

uint64_t ByteBufferView.subscript.getter(uint64_t result)
{
  if (v1[3] > result || v1[4] <= result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = result;
  uint64_t v4 = *((unsigned int *)v1 + 2);
  if (result < v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (result - v4 < (*((_DWORD *)v1 + 3) - v4))
  {
    uint64_t v5 = *v1;
    uint64_t v6 = *((unsigned __int16 *)v1 + 10);
    uint64_t v7 = *((unsigned __int8 *)v1 + 22);
    sub_1001F969C();
    return *(unsigned __int8 *)(*(void *)(v5 + 24) + (v7 | (v6 << 8)) + v3);
  }
LABEL_10:
  __break(1u);
  return result;
}

void ByteBufferView.subscript.setter(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + 24) > a2)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (*(void *)(v2 + 32) <= a2) {
    goto LABEL_5;
  }
  sub_100202174();
  ByteBuffer._setBytes(_:at:)(v3, v4, v5);
}

void (*ByteBufferView.subscript.modify(void (**a1)(uint64_t a1), uint64_t a2))(uint64_t a1)
{
  uint64_t result = (void (*)(uint64_t))malloc(0x30uLL);
  *a1 = result;
  *((void *)result + 3) = a2;
  *((void *)result + 4) = v2;
  if (v2[3] > a2 || v2[4] <= a2)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = *((unsigned int *)v2 + 2);
  if (a2 < v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 - v7 < (*((_DWORD *)v2 + 3) - v7))
  {
    uint64_t v8 = result;
    uint64_t v9 = *v2;
    uint64_t v10 = *((unsigned __int16 *)v2 + 10);
    uint64_t v11 = *((unsigned __int8 *)v2 + 22);
    sub_1001F969C();
    *((unsigned char *)v8 + 40) = *(unsigned char *)(*(void *)(v9 + 24) + (v11 | (v10 << 8)) + a2);
    return sub_1001FEBC8;
  }
LABEL_10:
  __break(1u);
  return result;
}

void sub_1001FEBC8(uint64_t a1)
{
  BOOL v1 = *(void **)a1;
  ByteBufferView.subscript.setter(*(unsigned __int8 *)(*(void *)a1 + 40), *(void *)(*(void *)a1 + 24));
  free(v1);
}

uint64_t ByteBufferView.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (result < 0
    || (int v6 = *(_DWORD *)(v3 + 16),
        int v7 = *(unsigned __int16 *)(v3 + 20),
        int v8 = *(unsigned __int8 *)(v3 + 22),
        v6 - (v8 | (v7 << 8)) < a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)v3;
    uint64_t v11 = *(void *)(v3 + 8);
    uint64_t result = sub_1000811BC(v3);
    *(void *)a3 = v10;
    *(void *)(a3 + 8) = v11;
    *(_DWORD *)(a3 + 16) = v6;
    *(_WORD *)(a3 + 20) = v7;
    *(unsigned char *)(a3 + 22) = v8;
    *(void *)(a3 + 24) = v9;
    *(void *)(a3 + 32) = a2;
  }
  return result;
}

uint64_t ByteBufferView.subscript.setter(uint64_t *a1, uint64_t a2, Swift::Int at)
{
  sub_1001FECE0(a2, at, a1);
  return sub_1000811E8((uint64_t)a1);
}

void sub_1001FECE0(uint64_t a1, Swift::Int at, uint64_t *a3)
{
  uint64_t v4 = *(void *)(v3 + 24);
  if (v4 > a1)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v6 = *(void *)(v3 + 32);
  if (v6 < at)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v10 = a3[3];
  uint64_t v9 = a3[4];
  uint64_t v11 = v9 - v10;
  BOOL v12 = __OFSUB__(v9, v10);
  Swift::Int v13 = at - a1;
  if (__OFSUB__(at, a1)) {
    goto LABEL_28;
  }
  if (v11 == v13)
  {
    uint64_t v14 = *((unsigned __int16 *)a3 + 10);
    uint64_t v15 = *((unsigned __int8 *)a3 + 22);
    char v16 = (void *)(*a3 + 24);
    swift_beginAccess();
    if (!v12)
    {
      uint64_t v17 = *v16 + (v15 | (v14 << 8)) + v10;
      ByteBuffer._setBytes(_:at:)(v17, v17 + v11, a1);
      return;
    }
    goto LABEL_29;
  }
  if (v11 >= v13)
  {
    if (__OFADD__(a1, v11))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v25 = *(unsigned int *)(v3 + 12);
    if (__OFSUB__(v25, at))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    ByteBuffer.copyBytes(at:to:length:)(at, a1 + v11, v25 - at);
    if (!v26)
    {
      uint64_t v27 = *a3;
      uint64_t v35 = *((unsigned __int16 *)a3 + 10);
      uint64_t v28 = *((unsigned __int8 *)a3 + 22);
      char v29 = (void *)(v27 + 24);
      swift_beginAccess();
      if (!v12)
      {
        uint64_t v30 = *v29 + (v28 | (v35 << 8)) + v10;
        ByteBuffer._setBytes(_:at:)(v30, v30 + v11, a1);
        Swift::Int v31 = v11 - v13;
        if (!__OFSUB__(v11, v13))
        {
          ByteBuffer.moveWriterIndex(forwardBy:)(v11 - v13);
          uint64_t v32 = v6 + v31;
          if (!__OFADD__(v6, v31))
          {
            if (v32 >= v4)
            {
              *(void *)(v3 + 24) = v4;
              *(void *)(v3 + 32) = v32;
              return;
            }
            goto LABEL_40;
          }
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        goto LABEL_37;
      }
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v34 = *((unsigned __int16 *)a3 + 10);
    uint64_t v33 = *((unsigned __int8 *)a3 + 22);
    char v18 = (void *)(*a3 + 24);
    swift_beginAccess();
    if (v12)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v19 = *v18 + (v33 | (v34 << 8)) + v10;
    ByteBuffer._setBytes(_:at:)(v19, v19 + v11, a1);
    if (__OFADD__(a1, v11))
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v20 = *(unsigned int *)(v3 + 12);
    if (__OFSUB__(v20, at))
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    ByteBuffer.copyBytes(at:to:length:)(at, a1 + v11, v20 - at);
    if (!v21)
    {
      Swift::Int v22 = v13 - v11;
      if (!__OFSUB__(v13, v11))
      {
        uint64_t v23 = *(unsigned int *)(v3 + 12);
        if (!__OFSUB__(v23, v22))
        {
          ByteBuffer.moveWriterIndex(to:)(v23 - v22);
          *(void *)(v3 + 24) = sub_1002006D0(v13 - v11, v4, v6);
          *(void *)(v3 + 32) = v24;
          return;
        }
        goto LABEL_38;
      }
      goto LABEL_36;
    }
  }
LABEL_41:
  swift_unexpectedError();
  __break(1u);
}

void sub_1001FEF60(uint64_t a1, Swift::Int at, char a3)
{
  uint64_t v4 = *(void *)(v3 + 24);
  if (v4 > a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)(v3 + 32);
  if (v6 < at)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = at - a1;
  if (__OFSUB__(at, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v8 != 1)
  {
    if (v8 <= 1)
    {
      if (!__OFADD__(a1, 1))
      {
        uint64_t v13 = *(unsigned int *)(v3 + 12);
        if (!__OFSUB__(v13, at))
        {
          ByteBuffer.copyBytes(at:to:length:)(at, a1 + 1, v13 - at);
          if (v14)
          {
LABEL_30:
            swift_unexpectedError();
            __break(1u);
            return;
          }
          sub_1001F8350(a3, a1);
          uint64_t v15 = 1 - v8;
          if (!__OFSUB__(1, v8))
          {
            ByteBuffer.moveWriterIndex(forwardBy:)(1 - v8);
            uint64_t v16 = v6 + v15;
            if (!__OFADD__(v6, v15))
            {
              if (v16 >= v4)
              {
                *(void *)(v3 + 24) = v4;
                *(void *)(v3 + 32) = v16;
                return;
              }
              goto LABEL_29;
            }
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      goto LABEL_24;
    }
    sub_1001F8350(a3, a1);
    if (!__OFADD__(a1, 1))
    {
      uint64_t v10 = *(unsigned int *)(v3 + 12);
      if (!__OFSUB__(v10, at))
      {
        ByteBuffer.copyBytes(at:to:length:)(at, a1 + 1, v10 - at);
        if (!v11)
        {
          ByteBuffer.moveWriterIndex(to:)(*(unsigned int *)(v3 + 12) - (v8 - 1));
          *(void *)(v3 + 24) = sub_1002006D0(v8 - 1, v4, v6);
          *(void *)(v3 + 32) = v12;
          return;
        }
        goto LABEL_30;
      }
      goto LABEL_25;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1001F8350(a3, a1);
}

void sub_1001FF118(Swift::Int to, Swift::Int at)
{
  uint64_t v3 = *(void *)(v2 + 24);
  if (v3 > to)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)(v2 + 32);
  if (v5 < at)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v7 = at - to;
  if (__OFSUB__(at, to))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v7)
  {
    if (v7 <= 0)
    {
      uint64_t v11 = *(unsigned int *)(v2 + 12);
      if (!__OFSUB__(v11, at))
      {
        ByteBuffer.copyBytes(at:to:length:)(at, to, v11 - at);
        if (v12)
        {
LABEL_26:
          swift_unexpectedError();
          __break(1u);
          return;
        }
        sub_1001F83F0(to);
        if (!__OFSUB__(0, v7))
        {
          ByteBuffer.moveWriterIndex(forwardBy:)(-v7);
          uint64_t v13 = v5 - v7;
          if (!__OFADD__(v5, -v7))
          {
            if (v13 >= v3)
            {
              *(void *)(v2 + 24) = v3;
              *(void *)(v2 + 32) = v13;
              return;
            }
            goto LABEL_25;
          }
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    sub_1001F83F0(to);
    uint64_t v8 = *(unsigned int *)(v2 + 12);
    if (!__OFSUB__(v8, at))
    {
      ByteBuffer.copyBytes(at:to:length:)(at, to, v8 - at);
      if (!v9)
      {
        ByteBuffer.moveWriterIndex(to:)(*(unsigned int *)(v2 + 12) - v7);
        *(void *)(v2 + 24) = sub_1002006D0(v7, v3, v5);
        *(void *)(v2 + 32) = v10;
        return;
      }
      goto LABEL_26;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1001F83F0(to);
}

void ByteBufferView.replaceSubrange<A>(_:with:)(uint64_t a1, Swift::Int a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(v4 + 24);
  if (v5 > a1)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)(v4 + 32);
  if (v7 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v11 = sub_1005E23B0();
  uint64_t v12 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v11 != v12)
  {
    if (sub_10020206C() >= v12)
    {
      uint64_t v20 = sub_10020206C();
      if (!__OFADD__(a1, v20))
      {
        uint64_t v21 = *(unsigned int *)(v4 + 12);
        if (!__OFSUB__(v21, a2))
        {
          ByteBuffer.copyBytes(at:to:length:)(a2, a1 + v20, v21 - a2);
          if (!v22)
          {
            sub_1002020D8();
            uint64_t v23 = sub_10020206C();
            uint64_t v24 = v23 - v12;
            if (!__OFSUB__(v23, v12))
            {
              ByteBuffer.moveWriterIndex(forwardBy:)(v23 - v12);
              uint64_t v25 = v7 + v24;
              if (!__OFADD__(v7, v24))
              {
                if (v25 >= v5)
                {
                  *(void *)(v4 + 24) = v5;
                  *(void *)(v4 + 32) = v25;
                  return;
                }
                goto LABEL_33;
              }
LABEL_32:
              __break(1u);
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
            goto LABEL_30;
          }
          goto LABEL_34;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      goto LABEL_26;
    }
    sub_1002020D8();
    uint64_t v13 = sub_10020206C();
    if (!__OFADD__(a1, v13))
    {
      uint64_t v14 = *(unsigned int *)(v4 + 12);
      if (!__OFSUB__(v14, a2))
      {
        ByteBuffer.copyBytes(at:to:length:)(a2, a1 + v13, v14 - a2);
        if (!v15)
        {
          uint64_t v16 = sub_10020206C();
          uint64_t v17 = v12 - v16;
          if (!__OFSUB__(v12, v16))
          {
            uint64_t v18 = *(unsigned int *)(v4 + 12);
            if (!__OFSUB__(v18, v17))
            {
              ByteBuffer.moveWriterIndex(to:)(v18 - v17);
              *(void *)(v4 + 24) = sub_1002006D0(v17, v5, v7);
              *(void *)(v4 + 32) = v19;
              return;
            }
            goto LABEL_31;
          }
          goto LABEL_29;
        }
LABEL_34:
        swift_unexpectedError();
        __break(1u);
        return;
      }
      goto LABEL_27;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  ByteBuffer.setBytes<A>(_:at:)(a3, a1, a4);
}

void (*ByteBufferView.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = malloc(0xB8uLL);
  *a1 = v7;
  v7[21] = a3;
  v7[22] = v3;
  v7[20] = a2;
  long long v8 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v3;
  *((_OWORD *)v7 + 1) = v8;
  v7[4] = *(void *)(v3 + 32);
  ByteBufferView.subscript.getter(a2, a3, (uint64_t)(v7 + 15));
  return sub_1001FF544;
}

void sub_1001FF544(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 120;
  Swift::Int v5 = *(void *)(*a1 + 168);
  uint64_t v6 = *(void *)(*a1 + 160);
  if (a2)
  {
    sub_1002020B0();
    sub_1001FECE0(v6, v5, v2);
    sub_1000811E8((uint64_t)v2);
    swift_release();
  }
  else
  {
    long long v7 = *(_OWORD *)(*a1 + 136);
    *(_OWORD *)(v3 + 80) = *(_OWORD *)v4;
    *(_OWORD *)(v3 + 96) = v7;
    *(void *)(v3 + 112) = *(void *)(v4 + 32);
    sub_1001FECE0(v6, v5, (uint64_t *)(v3 + 80));
    sub_1000811E8(v3 + 80);
  }
  free((void *)v3);
}

uint64_t sub_1001FF5EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(unsigned __int16 *)(a1 + 20);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 22);
  uint64_t v6 = (void *)(*(void *)a1 + 24);
  uint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  if (__OFSUB__(v9, v8))
  {
    __break(1u);
  }
  else
  {
    sub_1003502F8(*v6 + (v5 | (v4 << 8)) + v8, v9 - v8, a2);
    return 0;
  }
  return result;
}

uint64_t ByteBufferView.withContiguousStorageIfAvailable<A>(_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t result = ByteBufferView.withUnsafeBytes<A>(_:)();
  if (!v2) {
    return storeEnumTagSinglePayload for ClientCommand(a2, 0, 1, a1);
  }
  return result;
}

Swift::Int_optional_optional __swiftcall ByteBufferView._customIndexOfEquatableElement(_:)(Swift::UInt8 a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *((unsigned __int16 *)v1 + 10);
  uint64_t v5 = *((unsigned __int8 *)v1 + 22);
  Swift::Int v6 = sub_1001F969C();
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  BOOL v10 = __OFSUB__(v9, v8);
  uint64_t v11 = v9 - v8;
  if (v10)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else if (v11)
  {
    uint64_t v12 = 0;
    while (*(unsigned __int8 *)(*(void *)(v3 + 24) + (v5 | (v4 << 8)) + v8 + v12) != a1)
    {
      if ((v11 & ~(v11 >> 63)) == v12)
      {
        __break(1u);
        goto LABEL_12;
      }
      if (v11 == ++v12) {
        goto LABEL_7;
      }
    }
    Swift::Int v6 = v12 + v8;
    if (__OFADD__(v12, v8)) {
      goto LABEL_13;
    }
    Swift::Bool v7 = 0;
  }
  else
  {
LABEL_7:
    Swift::Int v6 = 0;
    Swift::Bool v7 = 1;
  }
  result.value.Swift::Int value = v6;
  result.value.is_nil = v7;
  return result;
}

Swift::Int_optional_optional __swiftcall ByteBufferView._customLastIndexOfEquatableElement(_:)(Swift::UInt8 a1)
{
  Swift::Int v3 = sub_1001F969C();
  uint64_t v5 = *(void *)(v1 + 24);
  if (__OFSUB__(*(void *)(v1 + 32), v5))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  Swift::UInt8 v10 = a1;
  __chkstk_darwin(v3);
  void v9[2] = &v10;
  Swift::Int v3 = sub_100201688((uint64_t)sub_100201AAC, (uint64_t)v9, v6, v7);
  if ((v4 & 1) == 0)
  {
    BOOL v8 = __OFADD__(v3, v5);
    v3 += v5;
    if (v8) {
      goto LABEL_6;
    }
  }
  v4 &= 1u;
LABEL_7:
  result.value.Swift::Int value = v3;
  result.value.is_nil = v4;
  return result;
}

Swift::Bool_optional __swiftcall ByteBufferView._customContainsEquatableElement(_:)(Swift::UInt8 a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *((unsigned __int16 *)v1 + 10);
  uint64_t v5 = *((unsigned __int8 *)v1 + 22);
  result.Swift::Int value = sub_1001F969C();
  uint64_t v8 = v1[3];
  uint64_t v7 = v1[4];
  if (__OFSUB__(v7, v8))
  {
    __break(1u);
  }
  else if (v7 == v8)
  {
    return 0;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 24);
    if (*(unsigned __int8 *)(v9 + (v5 & 0xFFFFFFFFFF0000FFLL | ((unint64_t)(unsigned __int16)v4 << 8)) + v8) == a1)
    {
      return (Swift::Bool_optional)1;
    }
    else
    {
      uint64_t v10 = ~v8 + v7;
      uint64_t v11 = (unsigned __int8 *)(v8 + (v4 << 8) + v5 + v9 + 1);
      do
      {
        result.Swift::Int value = v10 != 0;
        if (!v10) {
          break;
        }
        int v12 = *v11++;
        --v10;
      }
      while (v12 != a1);
    }
  }
  return result;
}

uint64_t ByteBufferView._copyContents(initializing:)@<X0>(uint64_t result@<X0>, int64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int64_t v7 = v6 - v5;
  BOOL v8 = __OFSUB__(v6, v5);
  if (v7 > a2)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v24 = *(void *)(v3 + 24);
  uint64_t v25 = (void *)result;
  uint64_t v10 = *(void *)(v3 + 8);
  int v11 = *(_DWORD *)(v3 + 16);
  int v12 = *(unsigned __int16 *)(v3 + 20);
  int v13 = *(unsigned __int8 *)(v3 + 22);
  uint64_t v14 = *(void *)v3;
  Swift::Bool_optional result = sub_1001F969C();
  if (v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  size_t v15 = 0;
  __int16 v26 = v12;
  uint64_t v16 = v13 | (v12 << 8);
  char v17 = v13;
  uint64_t v18 = v14;
  if (a2 && v7)
  {
    uint64_t v19 = (const void *)(*(void *)(v14 + 24) + v16 + v24);
    if (v7 >= a2) {
      size_t v15 = a2;
    }
    else {
      size_t v15 = v7;
    }
    char v20 = v17;
    Swift::Bool_optional result = (uint64_t)memcpy(v25, v19, v15);
    char v17 = v20;
  }
  if (v6 <= (v11 - v16) && v15 == v7)
  {
    uint64_t v22 = v3;
    char v23 = v17;
    Swift::Bool_optional result = sub_1000811BC(v22);
    *(void *)a3 = v18;
    *(void *)(a3 + 8) = v10;
    *(_DWORD *)(a3 + 16) = v11;
    *(_WORD *)(a3 + 20) = v26;
    *(unsigned char *)(a3 + 22) = v23;
    *(void *)(a3 + 24) = v6;
    *(void *)(a3 + 32) = v6;
    *(void *)(a3 + 40) = v6;
    *(void *)(a3 + 48) = v7;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1001FFA88@<X0>(uint64_t *a1@<X8>)
{
  sub_100202054();
  uint64_t result = sub_100344DEC(v2);
  *a1 = result;
  return result;
}

void *sub_1001FFAC0(void *result)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    --*result;
  }
  return result;
}

uint64_t sub_1001FFAD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Activity.MailboxStatus.Info.FetchProgress.total.getter(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001FFB20(uint64_t *a1, uint64_t *a2)
{
  return sub_10022EDE8(*a1, *a2);
}

uint64_t sub_1001FFB64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DataTransferReport.receivedTransportByteCount.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001FFB8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DataTransferReport.sentTransportByteCount.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001FFBB4(unsigned char *a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2 >= v2[3] && result < v2[4])
  {
    uint64_t result = sub_1001FE694(result, 0, *v2, v2[1]);
    if ((result & 0x100) == 0)
    {
      *a1 = result;
      return (uint64_t)UInt32.init(_:);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1001FFC34(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  long long v4 = v1[1];
  long long v18 = *v1;
  long long v19 = v4;
  uint64_t v20 = *((void *)v1 + 4);
  uint64_t v5 = ByteBufferView.subscript.getter(v3, v2, (uint64_t)&v16);
  *(void *)&double result = sub_1002020FC(v5, v6, v7, v8, v9, v10, v11, v12, v15, v13, v16, v17).n128_u64[0];
  return result;
}

uint64_t sub_1001FFC84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001FFCC8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001FFCC8()
{
  uint64_t result = *(void *)(v0 + 24);
  if (*(void *)(v0 + 32) < result) {
    __break(1u);
  }
  return result;
}

BOOL sub_1001FFCDC()
{
  return sub_1001FFD0C();
}

BOOL sub_1001FFD0C()
{
  return *(void *)(v0 + 24) == *(void *)(v0 + 32);
}

uint64_t sub_1001FFD20@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001FFD50(a1, (uint64_t (*)(void))ByteBufferView._customIndexOfEquatableElement(_:), a2);
}

uint64_t sub_1001FFD38@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001FFD50(a1, (uint64_t (*)(void))ByteBufferView._customLastIndexOfEquatableElement(_:), a2);
}

uint64_t sub_1001FFD50@<X0>(unsigned __int8 *a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t result = a2(*a1);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 9) = v6 & 1;
  return result;
}

uint64_t sub_1001FFD8C@<X0>(uint64_t a1@<X8>)
{
  sub_100202054();
  uint64_t result = sub_10022ED3C(v2, v3, v4);
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1001FFDD0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DownloadRequest.ID.next.getter(*a1);
  *a2 = result;
  return result;
}

void *sub_1001FFDFC(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

__n128 sub_1001FFE14@<Q0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 16);
  __int16 v3 = *(_WORD *)(v1 + 20);
  char v4 = *(unsigned char *)(v1 + 22);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = *(void *)(v1 + 8);
  *(_DWORD *)(a1 + 16) = v2;
  *(_WORD *)(a1 + 20) = v3;
  *(unsigned char *)(a1 + 22) = v4;
  __n128 result = *(__n128 *)(v1 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a1 + 40) = result.n128_u64[0];
  return result;
}

uint64_t sub_1001FFE4C()
{
  return ByteBufferView.count.getter();
}

Swift::Bool_optional sub_1001FFE88(Swift::UInt8 *a1)
{
  return ByteBufferView._customContainsEquatableElement(_:)(*a1);
}

void *sub_1001FFE90()
{
  return sub_10025FAD0();
}

uint64_t sub_1001FFEBC(uint64_t a1, uint64_t a2, int64_t a3)
{
  long long v5 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  v22[1] = v5;
  uint64_t v23 = *(void *)(v3 + 32);
  ByteBufferView._copyContents(initializing:)(a2, a3, (uint64_t)v15);
  uint64_t v6 = v15[0];
  int v7 = v16;
  __int16 v8 = v17;
  char v9 = v18;
  long long v14 = v19;
  uint64_t v11 = v20;
  uint64_t v10 = v21;
  uint64_t v12 = v15[1];
  sub_1000811E8((uint64_t)v22);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v12;
  *(_DWORD *)(a1 + 16) = v7;
  *(_WORD *)(a1 + 20) = v8;
  *(unsigned char *)(a1 + 22) = v9;
  *(_OWORD *)(a1 + 24) = v14;
  *(void *)(a1 + 40) = v11;
  return v10;
}

uint64_t sub_1001FFF74@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return ByteBufferView.withContiguousStorageIfAvailable<A>(_:)(a1, a2);
}

void sub_1001FFFB0(unsigned __int8 *a1, uint64_t *a2)
{
}

void (*sub_1001FFFBC(void *a1, uint64_t *a2))(uint64_t a1)
{
  long long v5 = malloc(0x40uLL);
  *a1 = v5;
  uint64_t v6 = *a2;
  v5[5] = v2;
  v5[6] = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)long long v5 = *(_OWORD *)v2;
  *((_OWORD *)v5 + 1) = v7;
  v5[4] = *(void *)(v2 + 32);
  *((unsigned char *)v5 + 56) = ByteBufferView.subscript.getter(v6);
  return sub_100200038;
}

void sub_100200038(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  ByteBufferView.subscript.setter(*(unsigned __int8 *)(*(void *)a1 + 56), *(void *)(*(void *)a1 + 48));
  free(v1);
}

uint64_t sub_100200078(uint64_t a1, uint64_t *a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  uint64_t v5 = *(void *)(a1 + 32);
  return ByteBufferView.subscript.setter((uint64_t *)v4, *a2, a2[1]);
}

void (*sub_1002000B4(void *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = malloc(0xB8uLL);
  *a1 = v5;
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  v5[20] = v2;
  v5[21] = v6;
  v5[22] = v7;
  long long v8 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)v2;
  *((_OWORD *)v5 + 1) = v8;
  v5[4] = *(void *)(v2 + 32);
  ByteBufferView.subscript.getter(v6, v7, (uint64_t)(v5 + 15));
  return sub_100200138;
}

void sub_100200138(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 120;
  uint64_t v6 = *(void *)(*a1 + 168);
  Swift::Int v5 = *(void *)(*a1 + 176);
  if (a2)
  {
    sub_1002020B0();
    ByteBufferView.subscript.setter(v2, v6, v5);
    swift_release();
  }
  else
  {
    long long v7 = *(_OWORD *)(*a1 + 136);
    *(_OWORD *)(v3 + 80) = *(_OWORD *)v4;
    *(_OWORD *)(v3 + 96) = v7;
    *(void *)(v3 + 112) = *(void *)(v4 + 32);
    ByteBufferView.subscript.setter((uint64_t *)(v3 + 80), v6, v5);
  }
  free((void *)v3);
}

void sub_1002001CC(uint64_t (*a1)(char *)@<X0>, void *a2@<X8>)
{
  sub_1002001F8(a1);
  if (!v2) {
    *a2 = v4;
  }
}

void sub_1002001F8(uint64_t (*a1)(char *))
{
  uint64_t v4 = v1[3];
  uint64_t v3 = v1[4];
  if (v4 < v3)
  {
    uint64_t v5 = v1[4];
    uint64_t v15 = v1[3];
    uint64_t v16 = v5;
    __n128 v13 = v1;
    while (v4 < v3)
    {
      uint64_t v6 = *((unsigned int *)v1 + 2);
      if (v4 < v6) {
        goto LABEL_26;
      }
      uint64_t v7 = (*((_DWORD *)v1 + 3) - v6);
      if (v4 - v6 >= v7) {
        goto LABEL_27;
      }
      uint64_t v8 = *v1;
      uint64_t v14 = *((unsigned __int16 *)v1 + 10);
      uint64_t v9 = *((unsigned __int8 *)v1 + 22);
      swift_beginAccess();
      uint64_t v10 = v9 | (v14 << 8);
      char v18 = *(unsigned char *)(*(void *)(v8 + 24) + v10 + v4);
      char v11 = a1(&v18);
      if (v2) {
        return;
      }
      if (v11)
      {
        if (v4 >= --v5) {
          return;
        }
        while (v5 >= v15 && v5 < v16)
        {
          if (v5 < v6) {
            goto LABEL_23;
          }
          if (v5 - v6 >= v7) {
            goto LABEL_24;
          }
          char v18 = *(unsigned char *)(*(void *)(v8 + 24) + v10 + v5);
          if ((a1(&v18) & 1) == 0)
          {
            uint64_t v1 = v13;
            sub_1002003B0(v4, v5);
            goto LABEL_21;
          }
          if (v4 >= --v5) {
            return;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        break;
      }
      uint64_t v1 = v13;
LABEL_21:
      ++v4;
      uint64_t v3 = v16;
      if (v4 >= v5) {
        return;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

void sub_1002003A4(uint64_t *a1, uint64_t *a2)
{
}

void sub_1002003B0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = v2[3];
    uint64_t v5 = v2[4];
    if (v4 > a1 || v5 <= a1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = *((unsigned int *)v2 + 2);
      if (a1 >= v7)
      {
        uint64_t v8 = (*((_DWORD *)v2 + 3) - v7);
        if (a1 - v7 < v8)
        {
          uint64_t v10 = *v2;
          uint64_t v11 = *((unsigned __int16 *)v2 + 10);
          uint64_t v12 = *((unsigned __int8 *)v2 + 22);
          swift_beginAccess();
          if (v4 <= a2 && v5 > a2)
          {
            if (a2 >= v7)
            {
              if (a2 - v7 < v8)
              {
                uint64_t v14 = *(void *)(v10 + 24) + (v12 | (v11 << 8));
                uint64_t v15 = *(unsigned __int8 *)(v14 + a1);
                ByteBufferView.subscript.setter(*(unsigned __int8 *)(v14 + a2), a1);
                ByteBufferView.subscript.setter(v15, a2);
                return;
              }
LABEL_21:
              __break(1u);
              return;
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
}

uint64_t sub_1002004AC()
{
  return sub_1005E1B10();
}

uint64_t sub_1002004D0()
{
  return sub_1005E1B00();
}

uint64_t ByteBufferView.init()@<X0>(uint64_t a1@<X8>)
{
  if (qword_10070FB10 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v2 = qword_100761858;
  uint64_t v3 = HIDWORD(qword_100761858);
  if (HIDWORD(qword_100761858) < qword_100761858)
  {
    __break(1u);
    goto LABEL_9;
  }
  int v4 = dword_100761860;
  __int16 v5 = word_100761864;
  char v6 = byte_100761866;
  if (dword_100761860 - (byte_100761866 | ((unsigned __int16)word_100761864 << 8)) < HIDWORD(qword_100761858))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  *(void *)a1 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  *(_DWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 20) = v5;
  *(unsigned char *)(a1 + 22) = v6;
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v3;
  return swift_retain();
}

Swift::Void __swiftcall ByteBufferView.reserveCapacity(_:)(Swift::Int a1)
{
  uint64_t v2 = *(void *)(v1 + 32) - *(void *)(v1 + 24);
  BOOL v3 = __OFSUB__(a1, v2);
  uint64_t v4 = a1 - v2;
  if (v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  if (v4 >= 1)
  {
    uint64_t v5 = *(_DWORD *)(v1 + 16) - (*(unsigned __int8 *)(v1 + 22) | (*(unsigned __int16 *)(v1 + 20) << 8));
    if (!__OFADD__(v5, v4))
    {
      ByteBuffer.reserveCapacity(_:)(v5 + v4);
      return;
    }
    goto LABEL_7;
  }
}

Swift::Void __swiftcall ByteBufferView.append(_:)(Swift::UInt8 a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  sub_100202174();
  ByteBuffer._setBytes(_:at:)(v3, v4, v2);
  Swift::Int v5 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (v5 < *(void *)(v1 + 24)) {
    goto LABEL_5;
  }
  *(void *)(v1 + 32) = v5;
  ByteBuffer.moveWriterIndex(to:)(v5);
}

void ByteBufferView.append<A>(contentsOf:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 32);
  uint64_t v4 = ByteBuffer.setBytes<A>(_:at:)(a1, v3, a2);
  BOOL v5 = __OFADD__(v3, v4);
  Swift::Int v6 = v3 + v4;
  if (v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < *(void *)(v2 + 24))
  {
LABEL_7:
    __break(1u);
    return;
  }
  *(void *)(v2 + 32) = v6;
  ByteBuffer.moveWriterIndex(to:)(v6);
}

uint64_t sub_1002006D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v3 = a2 - a3;
  if (__OFSUB__(a2, a3))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = -result;
  if (v3 <= 0 && v3 > v4) {
    return a2;
  }
  uint64_t v6 = a3 - result;
  if (__OFADD__(a3, v4)) {
    goto LABEL_17;
  }
  if (v6 >= a2 && v6 <= a3) {
    return a2;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_100200720(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_10022ED3C(v3, -result, 0);
  if (v4) {
    unint64_t v5 = 0;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

double sub_100200790()
{
  uint64_t v0 = ByteBufferView.init()((uint64_t)&v11);
  *(void *)&double result = sub_1002020FC(v0, v1, v2, v3, v4, v5, v6, v7, v10, v8, v11, v12).n128_u64[0];
  return result;
}

uint64_t sub_1002007C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  ByteBufferView.replaceSubrange<A>(_:with:)(*a1, a1[1], a2, a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(a3 - 8) + 8);
  return v5(a2, a3);
}

uint64_t sub_100200848(unsigned __int8 *a1)
{
  return sub_100200850(*a1);
}

#error "1002008F4: call analysis failed (funcsize=80)"

uint64_t sub_10020099C()
{
  return sub_1005E2520();
}

void sub_1002009B4(Swift::UInt8 *a1)
{
}

uint64_t sub_1002009BC(uint64_t *a1, uint64_t a2)
{
  ByteBufferView.append<A>(contentsOf:)(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(a2 - 8) + 8);
  return v4(a1, a2);
}

void sub_100200A28(char *a1, uint64_t *a2)
{
}

void sub_100200A34(char a1, uint64_t a2)
{
}

uint64_t sub_100200A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return RangeReplaceableCollection.insert<A>(contentsOf:at:)(a1, a2, a5, a3, a6, a4);
}

Swift::Int sub_100200A58@<X0>(Swift::Int *a1@<X0>, unsigned char *a2@<X8>)
{
  Swift::Int result = sub_100200A84(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_100200A84(Swift::Int result)
{
  Swift::Int v2 = v1[3];
  Swift::Int v3 = v1[4];
  if (v2 == v3)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  Swift::Int v4 = result;
  if (v2 > result || v3 <= result) {
    goto LABEL_10;
  }
  Swift::Int v6 = *((unsigned int *)v1 + 2);
  if (result < v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result - v6 < (*((_DWORD *)v1 + 3) - v6))
  {
    uint64_t v7 = *v1;
    uint64_t v8 = *((unsigned __int16 *)v1 + 10);
    uint64_t v9 = *((unsigned __int8 *)v1 + 22);
    swift_beginAccess();
    uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 + 24) + (v9 | (v8 << 8)) + v4);
    sub_1001FF118(v4, v4 + 1);
    return v10;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_100200B40(Swift::Int *a1)
{
  return sub_100200B4C(*a1, a1[1]);
}

uint64_t sub_100200B50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100200B80();
  *a1 = result;
  a1[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_100200B80()
{
  long long v3 = *v0;
  long long v4 = v0[1];
  uint64_t v5 = *((void *)v0 + 4);
  uint64_t result = sub_10022EEB0();
  if ((result & 0x100) != 0) {
    goto LABEL_11;
  }
  uint64_t v2 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 < *((uint64_t *)&v4 + 1))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((*((void *)&v4 + 1) & 0x8000000000000000) == 0)
  {
    if (v2 <= v4 - (BYTE6(v4) | (WORD2(v4) << 8)))
    {
      long long *v0 = v3;
      *((_DWORD *)v0 + 4) = v4;
      *((_WORD *)v0 + 10) = WORD2(v4);
      *((unsigned char *)v0 + 22) = BYTE6(v4);
      *((void *)v0 + 3) = *((void *)&v4 + 1);
      *((void *)v0 + 4) = v2;
      return result;
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100200C38(uint64_t result)
{
  if (__OFSUB__(0, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v2 = v1[3];
  uint64_t v3 = *v1;
  int v4 = *((_DWORD *)v1 + 2);
  int v5 = *((_DWORD *)v1 + 3);
  int v6 = *((_DWORD *)v1 + 4);
  int v7 = *((unsigned __int16 *)v1 + 10);
  int v8 = *((unsigned __int8 *)v1 + 22);
  uint64_t result = sub_10022ED3C(v1[4], -result, v2);
  if ((v9 & 1) == 0)
  {
    if (result >= v2)
    {
      if ((v2 & 0x8000000000000000) == 0)
      {
        if (result <= v6 - (v8 | (v7 << 8)))
        {
          uint64_t *v1 = v3;
          *((_DWORD *)v1 + 2) = v4;
          *((_DWORD *)v1 + 3) = v5;
          *((_DWORD *)v1 + 4) = v6;
          *((_WORD *)v1 + 10) = v7;
          *((unsigned char *)v1 + 22) = v8;
          v1[3] = v2;
          v1[4] = result;
          return 1;
        }
        goto LABEL_10;
      }
LABEL_9:
      __break(1u);
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_100200D14(unsigned char *a1@<X8>)
{
  sub_100200D3C();
  *a1 = v2;
}

void sub_100200D3C()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  if (v2 == v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = *v0;
  int v4 = *((_DWORD *)v0 + 2);
  int v5 = *((_DWORD *)v0 + 3);
  int v6 = *((_DWORD *)v0 + 4);
  int v7 = *((unsigned __int16 *)v0 + 10);
  int v8 = *((unsigned __int8 *)v0 + 22);
  if ((sub_100271D84() & 0x100) == 0)
  {
    uint64_t v9 = v2 + 1;
    if (!__OFADD__(v2, 1))
    {
      if (v1 >= v9)
      {
        if ((v9 & 0x8000000000000000) == 0)
        {
          if (v1 <= v6 - (v8 | (v7 << 8)))
          {
            uint64_t *v0 = v3;
            *((_DWORD *)v0 + 2) = v4;
            *((_DWORD *)v0 + 3) = v5;
            *((_DWORD *)v0 + 4) = v6;
            *((_WORD *)v0 + 10) = v7;
            *((unsigned char *)v0 + 22) = v8;
            v0[3] = v9;
            v0[4] = v1;
            return;
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_100200E20(uint64_t result)
{
  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v2 = v1[4];
      uint64_t v3 = *v1;
      int v4 = *((_DWORD *)v1 + 2);
      int v5 = *((_DWORD *)v1 + 3);
      int v6 = *((_DWORD *)v1 + 4);
      int v7 = *((unsigned __int16 *)v1 + 10);
      int v8 = *((unsigned __int8 *)v1 + 22);
      uint64_t result = sub_10022ED3C(v1[3], result, v2);
      if (v9)
      {
LABEL_13:
        __break(1u);
        return result;
      }
      if (v2 >= result)
      {
        if ((result & 0x8000000000000000) == 0)
        {
          if (v2 <= v6 - (v8 | (v7 << 8)))
          {
            uint64_t *v1 = v3;
            *((_DWORD *)v1 + 2) = v4;
            *((_DWORD *)v1 + 3) = v5;
            *((_DWORD *)v1 + 4) = v6;
            *((_WORD *)v1 + 10) = v7;
            *((unsigned char *)v1 + 22) = v8;
            v1[3] = result;
            v1[4] = v2;
            return result;
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

void sub_100200F00(char a1)
{
  if (a1)
  {
    Swift::Int v2 = *(void *)(v1 + 24);
    Swift::Int v3 = *(void *)(v1 + 32);
    if (v3 >= v2)
    {
      sub_1001FF118(v2, v3);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_release();
    if (qword_10070FB10 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v4 = qword_100761858;
  uint64_t v5 = HIDWORD(qword_100761858);
  if (HIDWORD(qword_100761858) < qword_100761858)
  {
    __break(1u);
    goto LABEL_15;
  }
  int v6 = dword_100761860;
  __int16 v7 = word_100761864;
  char v8 = byte_100761866;
  if (dword_100761860 - (byte_100761866 | ((unsigned __int16)word_100761864 << 8)) < HIDWORD(qword_100761858))
  {
LABEL_15:
    __break(1u);
    return;
  }
  *(void *)uint64_t v1 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  *(_DWORD *)(v1 + 8) = v4;
  *(_DWORD *)(v1 + 12) = v5;
  *(_DWORD *)(v1 + 16) = v6;
  *(_WORD *)(v1 + 20) = v7;
  *(unsigned char *)(v1 + 22) = v8;
  *(void *)(v1 + 24) = v4;
  *(void *)(v1 + 32) = v5;
  swift_retain();
}

void sub_100200FDC(uint64_t (*a1)(char *))
{
}

void sub_100200FF4(uint64_t (*a1)(char *))
{
  Swift::Int v3 = sub_100201728(a1);
  if (!v2)
  {
    Swift::Int v4 = *(void *)(v1 + 32);
    if (v4 < v3) {
      __break(1u);
    }
    else {
      sub_1001FF118(v3, v4);
    }
  }
}

void ByteBuffer.viewBytes(at:length:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X3>, void *a4@<X8>)
{
  if (a2 < 0)
  {
    sub_10020213C();
    goto LABEL_10;
  }
  sub_10020213C();
  if (v16 > v15)
  {
LABEL_10:
    *a4 = v12;
    a4[1] = v13;
    a4[2] = v5;
    a4[3] = v14;
    a4[4] = v4;
    return;
  }
  if ((uint64_t)(HIDWORD(a3) - v9) < a1)
  {
    uint64_t v12 = 0;
    unint64_t v13 = 0;
    uint64_t v5 = 0;
    uint64_t v14 = 0;
    uint64_t v4 = 0;
    goto LABEL_10;
  }
  uint64_t v4 = a1 + v9;
  if (__OFADD__(a1, v9))
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v4 < a1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if ((int64_t)(v11 - (BYTE6(v11) | (v11 >> 24) & 0xFFFF00)) >= v4)
  {
    uint64_t v17 = v10;
    uint64_t v5 = v11 & 0xFFFFFFFFFFFFFFLL;
    swift_retain();
    uint64_t v12 = v17;
    unint64_t v13 = a3;
    uint64_t v14 = a1;
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
}

void ByteBuffer.init(_:)(uint64_t a1)
{
  ByteBuffer.getSlice(at:length:)(*(void *)(a1 + 24), *(void *)(a1 + 32) - *(void *)(a1 + 24));
  if (v2) {
    sub_1000811E8(a1);
  }
  else {
    __break(1u);
  }
}

void static ByteBufferView.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = v4 - v3;
  if (__OFSUB__(v4, v3))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  BOOL v8 = __OFSUB__(v6, v7);
  uint64_t v9 = v6 - v7;
  if (v8)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 == v9)
  {
    ByteBuffer.getSlice(at:length:)(v3, v5);
    if (v10)
    {
      uint64_t v13 = v10;
      unint64_t v14 = v11;
      uint64_t v15 = v12;
      sub_100202128();
      ByteBuffer.getSlice(at:length:)(v7, v5);
      if (v16)
      {
        static ByteBuffer.== infix(_:_:)(v13, v14, v15 & 0xFFFFFFFFFFFFFFLL, v16, v17, v18 & 0xFFFFFFFFFFFFFFLL);
        swift_release();
        swift_release();
        return;
      }
      goto LABEL_11;
    }
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

void ByteBufferView.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
  }
  else
  {
    sub_100202088(v1, v2 - v1);
    if (v3)
    {
      sub_1001F969C();
      sub_1005E3400();
      swift_release();
      return;
    }
  }
  __break(1u);
}

void ByteBufferView.hashValue.getter()
{
  sub_1005E33F0();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
  }
  else
  {
    sub_100202088(v1, v2 - v1);
    if (v3)
    {
      sub_1001F969C();
      sub_1005E3400();
      swift_release();
      sub_1005E3470();
      return;
    }
  }
  __break(1u);
}

void sub_1002013C8()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1005E33F0();
  if (__OFSUB__(v1, v2))
  {
    __break(1u);
  }
  else
  {
    ByteBuffer.getSlice(at:length:)(v2, v1 - v2);
    if (v3)
    {
      swift_beginAccess();
      sub_1005E3400();
      swift_release();
      sub_1005E3470();
      return;
    }
  }
  __break(1u);
}

uint64_t ByteBufferView.init(arrayLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result;
  if (qword_10070FB10 != -1) {
    uint64_t result = swift_once();
  }
  unint64_t v5 = qword_100761858;
  uint64_t v4 = HIDWORD(qword_100761858);
  if (HIDWORD(qword_100761858) < qword_100761858)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (dword_100761860 - (byte_100761866 | ((unsigned __int16)word_100761864 << 8)) < HIDWORD(qword_100761858))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v13 = static ByteBufferAllocator.zeroCapacityWithDefaultAllocator;
  uint64_t v14 = qword_100761858;
  int v15 = dword_100761860;
  unsigned __int16 v16 = word_100761864;
  unsigned __int8 v17 = byte_100761866;
  uint64_t v18 = qword_100761858;
  uint64_t v19 = HIDWORD(qword_100761858);
  swift_retain();
  uint64_t v6 = sub_100201A34(v2, (uint64_t)&v13, v4);
  if ((v6 & 0x100000000) != 0) {
    unsigned int v7 = sub_1001F81B4(v2, v4);
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v8 = v4 + v7;
  if (v8 < v5) {
    goto LABEL_13;
  }
  int v9 = v15;
  unsigned __int16 v10 = v16;
  unsigned __int8 v11 = v17;
  if (v15 - (v17 | (v16 << 8)) >= v8)
  {
    int v12 = v14;
    *(void *)a2 = v13;
    *(_DWORD *)(a2 + 8) = v12;
    *(_DWORD *)(a2 + 12) = v8;
    *(_DWORD *)(a2 + 16) = v9;
    *(_WORD *)(a2 + 20) = v10;
    *(unsigned char *)(a2 + 22) = v11;
    *(void *)(a2 + 24) = v5;
    *(void *)(a2 + 32) = v8;
    return result;
  }
LABEL_14:
  __break(1u);
  return result;
}

double sub_1002015F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  ByteBufferView.init(arrayLiteral:)(a1, (uint64_t)v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_100201634(uint64_t a1, uint64_t a2)
{
  return sub_1001FE984(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100201654(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = a2 - a1;
  }
  else {
    uint64_t v3 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(a1, v3);
}

uint64_t sub_100201688(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return 0;
  }
  uint64_t v6 = a4 - a3;
  if (a4 == a3)
  {
    return 0;
  }
  else
  {
    unsigned int v7 = (uint64_t (*)(char *))result;
    uint64_t v8 = a4 - a3;
    while (!__OFSUB__(v8--, 1))
    {
      if (v8 < 0 || v8 >= v6) {
        goto LABEL_15;
      }
      char v10 = *(unsigned char *)(a3 + v8);
      double result = v7(&v10);
      if (v4 || (result & 1) != 0 || !v8) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
  }
  return result;
}

uint64_t sub_100201728(uint64_t (*a1)(char *))
{
  uint64_t v3 = v1[3];
  uint64_t v32 = v1[4];
  uint64_t v30 = v3 - v32;
  if (v3 == v32) {
    return v1[3];
  }
  uint64_t v5 = *((unsigned __int8 *)v1 + 22);
  uint64_t v6 = *((unsigned __int16 *)v1 + 10);
  uint64_t v7 = *((unsigned int *)v1 + 2);
  uint64_t v27 = v1;
  uint64_t v8 = (*((_DWORD *)v1 + 3) - v7);
  int v9 = (void *)(*v1 + 24);
  swift_retain();
  swift_beginAccess();
  uint64_t v4 = v3 + (v6 << 8) + v5;
  uint64_t v10 = 1;
  while (1)
  {
    if (v3 + v10 - 1 >= v32)
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
    }
    if (v3 < v7) {
      goto LABEL_38;
    }
    if (v3 - v7 + v10 - 1 >= v8) {
      goto LABEL_39;
    }
    v34[0] = *(unsigned char *)(*v9 + v4 + v10 - 1);
    char v11 = a1(v34);
    if (v2)
    {
      swift_release();
      return v4;
    }
    if (v11) {
      break;
    }
    ++v10;
    if (v30 + v10 == 1)
    {
      swift_release();
      return v32;
    }
  }
  swift_release();
  uint64_t v26 = v3 + v10;
  uint64_t v4 = v3 + v10 - 1;
  if (v30 + v10)
  {
    int v12 = v1;
    while (1)
    {
      uint64_t v28 = v4;
      uint64_t v13 = v3 + v10;
      if (v26 < v3 || v13 >= v32) {
        goto LABEL_40;
      }
      uint64_t v15 = *((unsigned int *)v12 + 2);
      if (v13 < v15) {
        goto LABEL_41;
      }
      uint64_t v16 = (*((_DWORD *)v12 + 3) - v15);
      if (v3 + v10 - v15 >= v16) {
        goto LABEL_42;
      }
      uint64_t v17 = *v12;
      uint64_t v29 = *((unsigned __int16 *)v12 + 10);
      uint64_t v18 = *((unsigned __int8 *)v12 + 22);
      uint64_t v19 = (void *)(*v12 + 24);
      swift_beginAccess();
      uint64_t v20 = v18 | (v29 << 8);
      char v33 = *(unsigned char *)(*(void *)(v17 + 24) + v20 + v3 + v10);
      char v21 = a1(&v33);
      if (v21)
      {
        uint64_t v4 = v28;
      }
      else
      {
        if (v13 != v28)
        {
          if (v28 < v3 || v28 >= v32) {
            goto LABEL_44;
          }
          if (v28 < v15) {
            goto LABEL_45;
          }
          if (v28 - v15 >= v16) {
            goto LABEL_46;
          }
          uint64_t v23 = *v19 + v20;
          char v24 = *(unsigned char *)(v23 + v28);
          char v33 = *(unsigned char *)(v23 + v3 + v10);
          ByteBuffer._setBytes(_:at:)((uint64_t)&v33, (uint64_t)v34, v28);
          char v33 = v24;
          ByteBuffer._setBytes(_:at:)((uint64_t)&v33, (uint64_t)v34, v3 + v10);
        }
        uint64_t v4 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_43;
        }
      }
      ++v10;
      int v12 = v27;
      if (!(v30 + v10)) {
        return v4;
      }
    }
  }
  return v4;
}

uint64_t sub_100201A34(uint64_t a1, uint64_t a2, Swift::UInt32 a3)
{
  ByteBuffer._setBytes(_:at:)(a1 + 32, a1 + 32 + *(void *)(a1 + 16), a3);
  return result;
}

BOOL sub_100201A88(char *a1, char *a2)
{
  return static Header.Priority.__derived_struct_equals(_:_:)(*a1, *a2);
}

BOOL sub_100201AAC(char *a1)
{
  return sub_100201A88(a1, *(char **)(v1 + 16));
}

unint64_t sub_100201AD0()
{
  unint64_t result = qword_10070FFD8;
  if (!qword_10070FFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FFD8);
  }
  return result;
}

uint64_t sub_100201B1C()
{
  return sub_100201D00(&qword_10070FFE0);
}

unint64_t sub_100201B50()
{
  unint64_t result = qword_10070FFF0;
  if (!qword_10070FFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FFF0);
  }
  return result;
}

unint64_t sub_100201BA0()
{
  unint64_t result = qword_10070FFF8;
  if (!qword_10070FFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070FFF8);
  }
  return result;
}

unint64_t sub_100201BF0()
{
  unint64_t result = qword_100710000;
  if (!qword_100710000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710000);
  }
  return result;
}

uint64_t sub_100201C3C()
{
  return sub_100201D00(&qword_100710008);
}

unint64_t sub_100201C74()
{
  unint64_t result = qword_100710010;
  if (!qword_100710010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710010);
  }
  return result;
}

void *sub_100201CC0()
{
  return &protocol witness table for Int;
}

uint64_t sub_100201CCC()
{
  return sub_100201D00(&qword_100710018);
}

uint64_t sub_100201D00(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000744C(&qword_10070FFE8);
    sub_100201B50();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100201D74()
{
  unint64_t result = qword_100710020;
  if (!qword_100710020)
  {
    sub_10000744C(&qword_100710028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710020);
  }
  return result;
}

unint64_t sub_100201DCC()
{
  unint64_t result = qword_100710030;
  if (!qword_100710030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710030);
  }
  return result;
}

unint64_t sub_100201E1C()
{
  unint64_t result = qword_100710038;
  if (!qword_100710038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710038);
  }
  return result;
}

unint64_t sub_100201E6C()
{
  unint64_t result = qword_100710040;
  if (!qword_100710040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710040);
  }
  return result;
}

uint64_t initializeWithCopy for ByteBufferView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 19) = *(_DWORD *)(a2 + 19);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ByteBufferView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 _s11DispositionVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ByteBufferView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ByteBufferView(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ByteBufferView()
{
  return &type metadata for ByteBufferView;
}

__n128 sub_100202054()
{
  return *(__n128 *)v0;
}

uint64_t sub_10020206C()
{
  return sub_1005E23B0();
}

void sub_100202088(uint64_t a1, unint64_t a2)
{
  ByteBuffer.getSlice(at:length:)(a1, a2);
}

uint64_t sub_1002020B0()
{
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 56) = v3;
  *(void *)(v0 + 72) = *(void *)(v1 + 32);
  return sub_1000811BC(v0 + 40);
}

uint64_t sub_1002020D8()
{
  return ByteBuffer.setBytes<A>(_:at:)(v1, v2, v0);
}

__n128 sub_1002020FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __n128 a10, long long a11, uint64_t a12)
{
  __n128 result = a10;
  *(__n128 *)uint64_t v12 = a10;
  *(_OWORD *)(v12 + 16) = a11;
  *(void *)(v12 + 32) = a12;
  return result;
}

uint64_t sub_100202150@<X0>(uint64_t result@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(_DWORD *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 12) = v4;
  *(_DWORD *)(a4 + 16) = a3;
  *(_WORD *)(a4 + 20) = v5;
  *(unsigned char *)(a4 + 22) = BYTE6(a3);
  *(void *)(a4 + 24) = a2;
  *(void *)(a4 + 32) = v4;
  return result;
}

uint64_t sub_100202188(int a1)
{
  unsigned int v1 = __clz(a1 - 1);
  if (v1) {
    unsigned int v2 = 1 << -(char)v1;
  }
  else {
    unsigned int v2 = 0;
  }
  if (a1) {
    return v2;
  }
  else {
    return 1;
  }
}

uint64_t sub_1002021B0(uint64_t result)
{
  if (!result) {
    return 1;
  }
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v1 = __clz(result - 1);
    if (v1) {
      return 1 << -(char)v1;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002021E4@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  uint64_t v22 = *(void *)(a2 - 8);
  uint64_t v23 = a2;
  uint64_t v7 = __chkstk_darwin(a1);
  int v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v7);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v18 + 16))(v17, v19);
  uint64_t v20 = 1;
  if (getEnumTagSinglePayload for ClientCommand((uint64_t)v17, 1, v11) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v17, v11);
    v25(v15, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if (v5) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v9, v23);
    }
    uint64_t v20 = 0;
  }
  return storeEnumTagSinglePayload for ClientCommand(a5, v20, 1, v26);
}

uint64_t IndexingStatistics.messagesInLargestAccount.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t CircularBuffer.mask.getter()
{
  return sub_1005E2DF0() - 1;
}

Swift::Void __swiftcall CircularBuffer.advanceHeadIdx(by:)(Swift::Int by)
{
  Swift::Int v2 = *(void *)(v1 + 8) + by;
  *(void *)(v1 + 8) = CircularBuffer.mask.getter() & v2;
}

Swift::Int __swiftcall CircularBuffer.indexAdvanced(index:by:)(Swift::Int index, Swift::Int by)
{
  return CircularBuffer.mask.getter() & (by + index);
}

Swift::Void __swiftcall CircularBuffer.advanceTailIdx(by:)(Swift::Int by)
{
  Swift::Int v2 = *(void *)(v1 + 16) + by;
  *(void *)(v1 + 16) = CircularBuffer.mask.getter() & v2;
}

Swift::Int __swiftcall CircularBuffer.indexBeforeHeadIdx()()
{
  return CircularBuffer.mask.getter() & (v0 - 1);
}

Swift::Int __swiftcall CircularBuffer.indexBeforeTailIdx()()
{
  return CircularBuffer.mask.getter() & (v0 - 1);
}

uint64_t CircularBuffer.Index.isIndexGEQHeadIndex.getter(unint64_t a1)
{
  return HIBYTE(a1) & 1;
}

uint64_t FlagsUpdate.label.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 7) = result;
  return result;
}

Swift::UInt32 (__swiftcall *Flags.label.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t CircularBuffer.Index.backingIndex.getter(uint64_t result)
{
  return result;
}

uint64_t CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (HIDWORD(result))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v3 = 0x1FFFFFF00000000;
  if (result < a3) {
    uint64_t v3 = 0xFFFFFF00000000;
  }
  return v3 | result;
}

uint64_t static CircularBuffer.Index.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xFFFFFFFFFFFFFFLL) == (a2 & 0xFFFFFFFFFFFFFFLL)) {
    return ((a1 & 0x100000000000000) == 0) ^ HIBYTE(a2) & 1u;
  }
  else {
    return 0;
  }
}

BOOL static CircularBuffer.Index.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 < (unint64_t)a2;
  if ((a2 & 0x100000000000000) != 0) {
    BOOL v2 = 0;
  }
  BOOL v3 = a1 < (unint64_t)a2;
  if ((a2 & 0x100000000000000) == 0) {
    BOOL v3 = 1;
  }
  if ((a1 & 0x100000000000000) != 0) {
    return v3;
  }
  else {
    return v2;
  }
}

BOOL CircularBuffer.Index.isValidIndex(for:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return (~a4 & 0xFFFFFF00000000) == 0
      || ((a4 >> 24) & 0xFFFF00 | BYTE6(a4)) == CircularBuffer.count.getter(a1, a2, a3);
}

uint64_t CircularBuffer.count.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - a2;
  if (a3 < a2)
  {
    sub_1005E28C0();
    v3 += sub_1005E2DF0();
  }
  return v3;
}

uint64_t sub_1002026E4(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_100202720(a1, a2, a3, a4, (uint64_t (*)(unint64_t, unint64_t))static CircularBuffer.Index.< infix(_:_:));
}

uint64_t sub_100202708(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  return sub_100202720(a1, a2, a3, a4, (uint64_t (*)(unint64_t, unint64_t))static CircularBuffer.Index.== infix(_:_:));
}

uint64_t sub_100202720(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t, unint64_t))
{
  if (*((unsigned char *)a1 + 7)) {
    uint64_t v5 = 0x100000000000000;
  }
  else {
    uint64_t v5 = 0;
  }
  unint64_t v6 = v5 | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | *a1;
  if (*((unsigned char *)a2 + 7)) {
    uint64_t v7 = 0x100000000000000;
  }
  else {
    uint64_t v7 = 0;
  }
  return a5(v6, v7 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2);
}

void sub_100202774()
{
}

void CircularBuffer.description.getter()
{
  sub_1001FE5B4();
  uint64_t v27 = v1;
  uint64_t v30 = v2;
  uint64_t v31 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1005E28C0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1001FE450();
  uint64_t v9 = v8;
  sub_100207F00();
  __chkstk_darwin(v10);
  sub_100208444();
  sub_1005E28C0();
  sub_100207F00();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v36 = 8283;
  unint64_t v37 = 0xE200000000000000;
  uint64_t v26 = v5;
  v35._uint64_t countAndFlagsBits = v5;
  sub_1005E2E50();
  swift_getWitnessTable();
  sub_100208258();
  sub_1005E1FB0();
  uint64_t v34 = v32;
  sub_1005E2F80();
  sub_1005E2F50();
  uint64_t v29 = sub_1005E2F70();
  sub_1005E2F60();
  sub_100207FC4((uint64_t)v13, 1, TupleTypeMetadata2);
  if (!v14)
  {
    sub_1001F9720();
    uint64_t v28 = *(uint64_t (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v16 = (void (**)(char *, uint64_t))(v9 + 8);
    while (1)
    {
      uint64_t v17 = *(void *)v13;
      uint64_t v18 = *(int *)(TupleTypeMetadata2 + 48);
      *(void *)uint64_t v0 = *(void *)v13;
      uint64_t v19 = v28(&v0[v18], &v13[v18], v6);
      if (v17 == v30) {
        break;
      }
      if (v17 == v27)
      {
        v20._uint64_t countAndFlagsBits = 62;
        goto LABEL_7;
      }
LABEL_8:
      __chkstk_darwin(v19);
      *(&v25 - 2) = v31;
      sub_1002021E4((void (*)(char *, char *))sub_100207990, (uint64_t)&type metadata for Never, (uint64_t)&type metadata for String, v21, (uint64_t)&v32);
      if (v33) {
        v22._uint64_t countAndFlagsBits = v32;
      }
      else {
        v22._uint64_t countAndFlagsBits = 8287;
      }
      if (v33) {
        uint64_t v23 = v33;
      }
      else {
        uint64_t v23 = (void *)0xE200000000000000;
      }
      v22._unint64_t object = v23;
      sub_1005E1E30(v22);
      swift_bridgeObjectRelease();
      (*v16)(v0, TupleTypeMetadata2);
      sub_1005E2F60();
      sub_100207FC4((uint64_t)v13, 1, TupleTypeMetadata2);
      if (v14) {
        goto LABEL_16;
      }
    }
    v20._uint64_t countAndFlagsBits = 60;
LABEL_7:
    v20._unint64_t object = (void *)0xE100000000000000;
    sub_1005E1E30(v20);
    goto LABEL_8;
  }
LABEL_16:
  swift_release();
  v38._uint64_t countAndFlagsBits = 93;
  v38._unint64_t object = (void *)0xE100000000000000;
  sub_1005E1E30(v38);
  v35._uint64_t countAndFlagsBits = 0;
  v35._unint64_t object = (void *)0xE000000000000000;
  sub_1005E2C80(37);
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 0xD000000000000012;
  v35._unint64_t object = (void *)0x80000001005E6060;
  uint64_t v24 = v26;
  uint64_t v32 = sub_1005E2DF0();
  v39._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v39);
  swift_bridgeObjectRelease();
  v40._uint64_t countAndFlagsBits = 0x654C676E6972202CLL;
  v40._unint64_t object = (void *)0xEE00203A6874676ELL;
  sub_1005E1E30(v40);
  uint64_t v32 = CircularBuffer.count.getter(v24, v30, v27);
  v41._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v41);
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = 41;
  v42._unint64_t object = (void *)0xE100000000000000;
  sub_1005E1E30(v42);
  sub_1005E1E30(v35);
  swift_bridgeObjectRelease();
  sub_1001FE57C();
}

unint64_t CircularBuffer.index(after:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100202C10(a1, a2, a3, a4, a5, 1);
}

unint64_t CircularBuffer.index(_:offsetBy:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = CircularBuffer.mask.getter() & (a2 + a1);
  CircularBuffer.count.getter(a3, a4, a5);
  unint64_t v10 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(v8, v9, a4);
  return sub_100207ED8(v10);
}

unint64_t CircularBuffer.index(before:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100202C10(a1, a2, a3, a4, a5, -1);
}

unint64_t sub_100202C10(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = CircularBuffer.index(_:offsetBy:)(a1, a6, a2, a3, a4);
  return sub_100207ED8(v6);
}

uint64_t CircularBuffer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1005E28C0();
  sub_1001F3BBC();
  sub_100207F00();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v12 - v7;
  sub_1005E2E70();
  uint64_t result = sub_100207FC4((uint64_t)v8, 1, a5);
  if (v10)
  {
    __break(1u);
  }
  else
  {
    sub_1001F9720();
    sub_10020824C();
    return v11();
  }
  return result;
}

void CircularBuffer.subscript.setter()
{
  sub_1002080C0();
  unsigned int v3 = v2;
  uint64_t v4 = sub_100208118();
  sub_1001FE450();
  uint64_t v6 = v5;
  sub_100207F00();
  __chkstk_darwin(v7);
  sub_100208034();
  uint64_t v8 = sub_10020807C();
  v9(v8);
  sub_100208000(v1, 0);
  sub_1005E2DB0();
  uint64_t v10 = *v0;
  sub_1002079B0(v3, v10);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 40))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v3, v1, v4);
  uint64_t v11 = sub_100208258();
  v12(v11);
  sub_100208130();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);

  sub_1001FE5B4();
  sub_1001FE450();
  __chkstk_darwin(v1);
  unsigned int v2 = *v0;
  unsigned int v3 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v5 = CircularBuffer.startIndex.getter(*v0, v3, v4);
  uint64_t v6 = sub_1002080FC(v5);
  CircularBuffer.index(_:offsetBy:)(v6, v7, v2, v3, v4);
  uint64_t v8 = sub_10020807C();
  v9(v8);
  CircularBuffer.subscript.setter();
  uint64_t v10 = sub_100208258();
  v11(v10);
  sub_1001FE57C();
}

void (*CircularBuffer.subscript.modify())()
{
  uint64_t v4 = sub_1002084A0();
  *unsigned int v3 = v4;
  *uint64_t v4 = v2;
  v4[1] = v0;
  uint64_t v5 = *(void *)(v0 + 16);
  _OWORD v4[2] = v1;
  v4[3] = v5;
  sub_1001FE450();
  *(void *)(v6 + 32) = v7;
  size_t v9 = *(void *)(v8 + 64);
  v4[5] = malloc(v9);
  v4[6] = malloc(v9);
  CircularBuffer.subscript.getter(v2 & 0x1FFFFFFFFFFFFFFLL, *v1, v10, v11, v5);
  return sub_100202EEC;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;

  uint64_t v4 = sub_1002084A0();
  *unsigned int v3 = v4;
  *uint64_t v4 = v2;
  v4[1] = v0;
  uint64_t v5 = *(void *)(v0 + 16);
  _OWORD v4[2] = v1;
  v4[3] = v5;
  sub_1001FE450();
  *(void *)(v6 + 32) = v7;
  size_t v9 = *(void *)(v8 + 64);
  v4[5] = malloc(v9);
  v4[6] = malloc(v9);
  CircularBuffer.subscript.getter();
  return sub_100205FEC;
}

void sub_100202EEC()
{
  sub_1002080C0();
  uint64_t v1 = *(void **)(*(void *)v0 + 40);
  uint64_t v2 = *(void **)(*(void *)v0 + 48);
  if (v3)
  {
    uint64_t v4 = sub_100207F74();
    v5(v4);
    CircularBuffer.subscript.setter();
    uint64_t v6 = sub_100207FAC();
    v7(v6);
  }
  else
  {
    CircularBuffer.subscript.setter();
  }
  free(v2);
  free(v1);
  sub_100208130();
  free(v8);
}

unint64_t CircularBuffer.startIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CircularBuffer.count.getter(a1, a2, a3);
  unint64_t v5 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(a2, v4, a2);
  return sub_100207ED8(v5);
}

unint64_t CircularBuffer.endIndex.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CircularBuffer.count.getter(a1, a2, a3);
  unint64_t v6 = CircularBuffer.Index.init(backingIndex:backingCount:backingIndexOfHead:)(a3, v5, a2);
  return sub_100207ED8(v6);
}

unint64_t CircularBuffer.distance(from:to:)(uint64_t a1, uint64_t a2)
{
  sub_1005E28C0();
  uint64_t v4 = sub_1005E2DF0();
  if ((a1 & 0x100000000000000) != 0)
  {
    if ((a2 & 0x100000000000000) != 0) {
      return a2 - (unint64_t)a1;
    }
    else {
      return v4 - a1 + a2;
    }
  }
  else if ((a2 & 0x100000000000000) != 0)
  {
    unint64_t v6 = a1 - (unint64_t)a2 + v4;
    unint64_t result = -(uint64_t)v6;
    if (__OFSUB__(0, v6)) {
      __break(1u);
    }
  }
  else
  {
    return a2 - (unint64_t)a1;
  }
  return result;
}

void CircularBuffer._copyContents(initializing:)()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  v48[1] = v10;
  uint64_t v12 = v11;
  sub_1005E28C0();
  sub_1001F3BBC();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v48 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v48 - v20;
  uint64_t v49 = v5;
  uint64_t v50 = v7;
  if (CircularBuffer.count.getter(v7, v5, v3) > v9) {
    goto LABEL_29;
  }
  v48[0] = v12;
  uint64_t v22 = sub_1005E28F0();
  if (!v22)
  {
    unint64_t v31 = v50;
    uint64_t v32 = swift_retain();
    uint64_t v33 = v49;
    unint64_t v34 = CircularBuffer.startIndex.getter(v32, v49, v3);
    uint64_t v35 = sub_1005E28E0();
    goto LABEL_25;
  }
  uint64_t v23 = v22;
  if (v3 >= v49)
  {
    uint64_t v28 = v50;
    if (v49 != v3)
    {
      uint64_t v36 = v49;
      while (v36 < v3)
      {
        sub_1005E2E70();
        sub_100207FC4((uint64_t)v21, 1, v1);
        if (v26) {
          goto LABEL_35;
        }
        ++v36;
        uint64_t v37 = *(void *)(v1 - 8) + 32;
        (*(void (**)(uint64_t, char *, uint64_t))v37)(v23, v21, v1);
        v23 += *(void *)(v37 + 40);
        if (v3 == v36) {
          goto LABEL_23;
        }
      }
      goto LABEL_27;
    }
    goto LABEL_23;
  }
  uint64_t v24 = *(void *)(v50 + 16);
  if (v24 >= v49)
  {
    if (v24 != v49)
    {
      uint64_t v25 = v49;
      while (v25 < v24)
      {
        sub_1005E2E70();
        sub_100207FC4((uint64_t)v19, 1, v1);
        if (v26) {
          goto LABEL_34;
        }
        ++v25;
        uint64_t v27 = *(void *)(v1 - 8) + 32;
        (*(void (**)(uint64_t, char *, uint64_t))v27)(v23, v19, v1);
        v23 += *(void *)(v27 + 40);
        if (v24 == v25) {
          goto LABEL_10;
        }
      }
      goto LABEL_28;
    }
LABEL_10:
    if (v3 < 0) {
      goto LABEL_32;
    }
    uint64_t v28 = v50;
    if (v3)
    {
      uint64_t v29 = 0;
      while (v3 != v29)
      {
        sub_1005E2E70();
        sub_100207FC4((uint64_t)v16, 1, v1);
        if (v26) {
          goto LABEL_33;
        }
        ++v29;
        uint64_t v30 = *(void *)(v1 - 8) + 32;
        (*(void (**)(uint64_t, char *, uint64_t))v30)(v23, v16, v1);
        v23 += *(void *)(v30 + 40);
        if (v3 == v29) {
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_23:
    uint64_t v38 = v49;
    unint64_t v39 = CircularBuffer.endIndex.getter(v28, v49, v3);
    unint64_t v40 = CircularBuffer.endIndex.getter(v28, v38, v3);
    int v55 = v39;
    __int16 v56 = WORD2(v39);
    char v57 = BYTE6(v39);
    BOOL v58 = HIBYTE(v39) != 0;
    int v51 = v40;
    __int16 v52 = WORD2(v40);
    char v53 = BYTE6(v40);
    BOOL v54 = HIBYTE(v40) != 0;
    type metadata accessor for CircularBuffer.Index();
    swift_getWitnessTable();
    if ((sub_1005E1AF0() & 1) == 0)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v41 = v50;
    unint64_t v31 = CircularBuffer.subscript.getter(v39 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v39) != 0) << 56), v40 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v40) != 0) << 56), v50, v38, v3);
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    uint64_t v46 = swift_retain();
    unint64_t v34 = CircularBuffer.startIndex.getter(v46, v43, v45);
    swift_release();
    uint64_t v35 = CircularBuffer.count.getter(v41, v38, v3);
    uint64_t v33 = v43;
    uint64_t v3 = v45;
LABEL_25:
    uint64_t v47 = v48[0];
    *(void *)v48[0] = v31;
    *(void *)(v47 + 8) = v33;
    *(void *)(v47 + 16) = v3;
    *(_DWORD *)(v47 + 24) = v34;
    *(_WORD *)(v47 + 28) = WORD2(v34);
    *(unsigned char *)(v47 + 30) = BYTE6(v34);
    *(unsigned char *)(v47 + 31) = HIBYTE(v34) != 0;
    *(void *)(v47 + 32) = v35;
    sub_1001FE57C();
    return;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

unint64_t CircularBuffer.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8 = CircularBuffer.startIndex.getter(a3, a4, a5);
  unint64_t v9 = sub_100207ED8(v8);
  unint64_t result = CircularBuffer.distance(from:to:)(v9, a1 & 0x1FFFFFFFFFFFFFFLL);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = sub_100208294(a3);
    unint64_t result = CircularBuffer.distance(from:to:)(a2 & 0x1FFFFFFFFFFFFFFLL, v11 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v11) != 0) << 56));
    if ((result & 0x8000000000000000) == 0) {
      return swift_retain();
    }
  }
  __break(1u);
  return result;
}

void sub_1002035EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_100203604(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_10020361C(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void, void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a2(*v3, v3[1], v3[2], *(void *)(a1 + 16));
  sub_100207F5C(v5);
  *(_WORD *)(a3 + 4) = v6;
  if (v7) {
    char v8 = 0;
  }
  else {
    char v8 = 1;
  }
  sub_10020838C(v8);
}

void (*sub_100203668(uint64_t **a1, unsigned int *a2, uint64_t a3))(void *a1)
{
  char v7 = (uint64_t *)malloc(0x28uLL);
  *a1 = v7;
  uint64_t v8 = 0x100000000000000;
  if (!*((unsigned char *)a2 + 7)) {
    uint64_t v8 = 0;
  }
  v7[4] = (uint64_t)sub_10020374C(v7, v8 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2, *v3, v3[1], v3[2], *(void *)(a3 + 16));
  return sub_100203704;
}

void sub_100203704(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_10020374C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(void *a1)
{
  uint64_t v9 = *(void *)(a6 - 8);
  *a1 = a6;
  a1[1] = v9;
  a1[2] = (uint64_t)malloc(*(void *)(v9 + 64));
  CircularBuffer.subscript.getter(a2 & 0x1FFFFFFFFFFFFFFLL, a3, v10, v11, a6);
  return sub_100203808;
}

void sub_100203808(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);
  free(v1);
}

unint64_t sub_100203854@<X0>(unsigned int *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = *((unsigned __int16 *)a1 + 6);
  uint64_t v6 = *((unsigned __int8 *)a1 + 14);
  int v7 = *((unsigned __int8 *)a1 + 15);
  uint64_t v8 = 0x100000000000000;
  if (*((unsigned char *)a1 + 7)) {
    uint64_t v9 = 0x100000000000000;
  }
  else {
    uint64_t v9 = 0;
  }
  unint64_t v10 = *a1 | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | v9;
  if (!v7) {
    uint64_t v8 = 0;
  }
  unint64_t result = CircularBuffer.subscript.getter(v10, v4 | (v5 << 32) | (v6 << 48) | v8, *v2, v2[1], v2[2]);
  *a2 = result;
  a2[1] = v12;
  a2[2] = v13;
  return result;
}

BOOL sub_1002038DC(uint64_t a1)
{
  return CircularBuffer.isEmpty.getter(a1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

BOOL CircularBuffer.isEmpty.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2 == a3;
}

uint64_t sub_1002038F0()
{
  return CircularBuffer.count.getter(*v0, v0[1], v0[2]);
}

void sub_100203904(void *a1@<X8>)
{
  *a1 = 0x300000000000000;
}

void sub_100203918(uint64_t a1@<X8>)
{
}

void sub_100203930(uint64_t a1)
{
}

void sub_100203948()
{
}

void (*sub_100203974(void *a1, unsigned int *a2, uint64_t a3))()
{
  int v7 = malloc(0x38uLL);
  *a1 = v7;
  void *v7 = v3;
  v7[1] = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  _OWORD v7[2] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[3] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[4] = malloc(v10);
  v7[5] = malloc(v10);
  uint64_t v13 = *a2;
  *((_DWORD *)v7 + 12) = v13;
  uint64_t v14 = *((unsigned __int16 *)a2 + 2);
  *((_WORD *)v7 + 26) = v14;
  uint64_t v15 = *((unsigned __int8 *)a2 + 6);
  *((unsigned char *)v7 + 54) = v15;
  int v16 = *((unsigned __int8 *)a2 + 7);
  *((unsigned char *)v7 + 55) = v16;
  BOOL v17 = v16 == 0;
  uint64_t v18 = 0x100000000000000;
  if (v17) {
    uint64_t v18 = 0;
  }
  CircularBuffer.subscript.getter(v18 | (v15 << 48) | (v14 << 32) | v13, *v3, v11, v12, v8);
  return sub_100203A8C;
}

void sub_100203A8C()
{
  sub_1002080C0();
  uint64_t v1 = *(void **)(*(void *)v0 + 32);
  uint64_t v2 = *(void **)(*(void *)v0 + 40);
  if (v3)
  {
    uint64_t v4 = sub_100207F74();
    v5(v4);
    CircularBuffer.subscript.setter();
    uint64_t v6 = sub_100207FAC();
    v7(v6);
  }
  else
  {
    CircularBuffer.subscript.setter();
  }
  free(v2);
  free(v1);
  sub_100208130();
  free(v8);
}

unint64_t sub_100203B60(uint64_t *a1, unsigned int *a2)
{
  uint64_t v2 = 0x100000000000000;
  if (*((unsigned char *)a2 + 7)) {
    uint64_t v3 = 0x100000000000000;
  }
  else {
    uint64_t v3 = 0;
  }
  if (!*((unsigned char *)a2 + 15)) {
    uint64_t v2 = 0;
  }
  return CircularBuffer.subscript.setter(*a1, a1[1], a1[2], *a2 | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | v3, a2[2] | ((unint64_t)*((unsigned __int16 *)a2 + 6) << 32) | ((unint64_t)*((unsigned __int8 *)a2+ 14) << 48) | v2);
}

unint64_t CircularBuffer.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_100208354();
  unint64_t v10 = CircularBuffer.startIndex.getter(v7, v8, v9);
  unint64_t v11 = sub_100207ED8(v10);
  unint64_t result = CircularBuffer.distance(from:to:)(v11, a4 & 0x1FFFFFFFFFFFFFFLL);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = sub_100208354();
    unint64_t v16 = CircularBuffer.endIndex.getter(v13, v14, v15);
    unint64_t result = CircularBuffer.distance(from:to:)(a5 & 0x1FFFFFFFFFFFFFFLL, v16 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v16) != 0) << 56));
    if ((result & 0x8000000000000000) == 0)
    {
      swift_getWitnessTable();
      CircularBuffer.replaceSubrange<A>(_:with:)();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

void (*sub_100203CD8(void *a1, unsigned int *a2, uint64_t a3))()
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[3] = v3;
  v7[4] = a3;
  uint64_t v8 = *a2;
  uint64_t v9 = *((unsigned __int16 *)a2 + 2);
  *((_WORD *)v7 + 24) = v9;
  uint64_t v10 = *((unsigned __int8 *)a2 + 6);
  *((unsigned char *)v7 + 52) = v10;
  int v11 = *((unsigned __int8 *)a2 + 7);
  *((unsigned char *)v7 + 53) = v11;
  uint64_t v12 = a2[2];
  *((_DWORD *)v7 + 10) = v8;
  *((_DWORD *)v7 + 11) = v12;
  uint64_t v13 = *((unsigned __int16 *)a2 + 6);
  *((_WORD *)v7 + 25) = v13;
  uint64_t v14 = *((unsigned __int8 *)a2 + 14);
  *((unsigned char *)v7 + 54) = v14;
  uint64_t v15 = v8 | (v9 << 32) | (v10 << 48);
  int v16 = *((unsigned __int8 *)a2 + 15);
  *((unsigned char *)v7 + 55) = v16;
  if (v11) {
    uint64_t v17 = 0x100000000000000;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    uint64_t v18 = 0x100000000000000;
  }
  else {
    uint64_t v18 = 0;
  }
  void *v7 = CircularBuffer.subscript.getter(v15 | v17, v12 | (v13 << 32) | (v14 << 48) | v18, *v3, v3[1], v3[2]);
  v7[1] = v19;
  _OWORD v7[2] = v20;
  return sub_100203DC0;
}

void sub_100203DC0()
{
  sub_1002080C0();
  uint64_t v1 = **v0;
  if (v2)
  {
    uint64_t v3 = swift_retain();
    sub_1002081A4(v3);
    swift_release();
  }
  else
  {
    sub_1002081A4(v1);
  }
  sub_100208130();
  free(v4);
}

void (*CircularBuffer.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v9 = malloc(0x38uLL);
  *a1 = v9;
  v9[5] = a4;
  void v9[6] = v4;
  v9[3] = a2;
  v9[4] = a3;
  *uint64_t v9 = CircularBuffer.subscript.getter(a2 & 0x1FFFFFFFFFFFFFFLL, a3 & 0x1FFFFFFFFFFFFFFLL, *v4, v4[1], v4[2]);
  v9[1] = v10;
  void v9[2] = v11;
  return sub_100203F04;
}

void sub_100203F04()
{
  sub_1002080C0();
  uint64_t v1 = **v0;
  if (v2)
  {
    uint64_t v3 = swift_retain();
    sub_100208180(v3);
    swift_release();
  }
  else
  {
    sub_100208180(v1);
  }
  sub_100208130();
  free(v4);
}

uint64_t sub_100203F7C()
{
  return sub_1005E1B50();
}

uint64_t sub_100204000@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = swift_retain();
  unint64_t v7 = CircularBuffer.startIndex.getter(v6, v4, v5);
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 28) = WORD2(v7);
  *(unsigned char *)(a1 + 30) = BYTE6(v7);
  *(unsigned char *)(a1 + 31) = HIBYTE(v7) != 0;
  return result;
}

uint64_t sub_10020408C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_1002040E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return Collection._copyToContiguousArray()(a1, WitnessTable);
}

uint64_t sub_100204134(uint64_t a1)
{
  CircularBuffer._copyContents(initializing:)();
  swift_release();
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 28) = v6;
  *(unsigned char *)(a1 + 30) = v7;
  *(unsigned char *)(a1 + 31) = v8;
  return v9;
}

void CircularBuffer.replaceSubrange<A>(_:with:)()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  int v5 = v4;
  unint64_t v158 = v6;
  unint64_t v160 = v7;
  uint64_t v9 = v8;
  Swift::Int v10 = HIDWORD(v8);
  uint64_t v151 = v11;
  uint64_t v12 = *(void *)(v11 + 16);
  unint64_t v13 = HIWORD(v8);
  uint64_t v14 = HIBYTE(v8) & 1;
  uint64_t v15 = sub_1005E28C0();
  v134[2] = sub_1005E36B0();
  sub_1001F3BBC();
  sub_100207F00();
  __chkstk_darwin(v16);
  sub_100208458();
  sub_1002081E0(v17);
  uint64_t v157 = v3;
  uint64_t v18 = *(void *)(v3 + 8);
  sub_100208438();
  uint64_t v139 = sub_1005E2CA0();
  sub_1001FE450();
  uint64_t v138 = v19;
  sub_100207F00();
  __chkstk_darwin(v20);
  sub_100208458();
  sub_1002081E0(v21);
  sub_100208438();
  uint64_t v137 = sub_1005E2E80();
  sub_1001F3BBC();
  sub_100207F00();
  __chkstk_darwin(v22);
  sub_100208458();
  sub_1002081E0(v23);
  sub_1001FE450();
  unint64_t v161 = v24;
  __chkstk_darwin(v25);
  sub_100208054();
  sub_1002081E0(v26);
  uint64_t v164 = v15;
  sub_100207F94();
  uint64_t v150 = v27;
  __chkstk_darwin(v28);
  sub_1001F3FE0();
  uint64_t v149 = v29;
  __chkstk_darwin(v30);
  uint64_t v165 = (uint64_t)v134 - v31;
  sub_1001FE450();
  uint64_t v156 = v32;
  __chkstk_darwin(v33);
  sub_1001F3FE0();
  uint64_t v146 = v34;
  __chkstk_darwin(v35);
  sub_1002081E0((uint64_t)v134 - v36);
  uint64_t v153 = v18;
  unint64_t v159 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1001FE450();
  uint64_t v147 = v37;
  sub_100207F00();
  __chkstk_darwin(v38);
  sub_100208458();
  uint64_t v162 = v39;
  uint64_t v40 = type metadata accessor for CircularBuffer.Index();
  LODWORD(v170) = v9;
  Swift::Int v154 = v10;
  WORD2(v170) = v10;
  uint64_t v41 = v14;
  BYTE6(v170) = v13;
  HIBYTE(v170) = v14;
  uint64_t v42 = v1[1];
  unint64_t v155 = v1;
  uint64_t v43 = v1[2];
  uint64_t v44 = swift_retain();
  CircularBuffer.startIndex.getter(v44, v42, v43);
  swift_release();
  sub_1002082B0();
  __int16 v167 = v46;
  char v48 = !v47;
  char v168 = v45;
  BOOL v169 = v48;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_10020827C();
  if ((sub_1005E1AE0() & 1) == 0)
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v144 = v41;
  unint64_t v50 = HIWORD(v160);
  unint64_t v170 = v160 & 0x1FFFFFFFFFFFFFFLL;
  unint64_t v136 = HIDWORD(v160);
  uint64_t v135 = HIBYTE(v160) & 1;
  uint64_t v51 = swift_retain();
  uint64_t v143 = v42;
  CircularBuffer.endIndex.getter(v51, v42, v43);
  swift_release();
  sub_1002082B0();
  __int16 v167 = v53;
  char v54 = !v47;
  char v168 = v52;
  BOOL v169 = v54;
  sub_10020827C();
  if ((sub_1005E1AF0() & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v142 = v43;
  uint64_t v152 = v13;
  uint64_t v55 = v160 & 0x1FFFFFFFFFFFFFFLL;
  swift_retain();
  uint64_t v141 = v9 & 0x1FFFFFFFFFFFFFFLL;
  uint64_t v140 = v55;
  uint64_t v56 = v12;
  unint64_t v57 = CircularBuffer.distance(from:to:)(v9 & 0x1FFFFFFFFFFFFFFLL, v55);
  swift_release();
  unint64_t v58 = v158;
  uint64_t v59 = v159;
  uint64_t v60 = v157;
  if (v57 == sub_1005E23B0())
  {
    sub_100208380();
    v61();
    sub_1005E1F60();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v63 = v165;
    unint64_t v160 = AssociatedConformanceWitness;
    sub_1005E2950();
    uint64_t v64 = v63;
    sub_100207FC4(v63, 1, v56);
    uint64_t v65 = v56;
    uint64_t v66 = v155;
    uint64_t v67 = v150;
    uint64_t v68 = v149;
    uint64_t v69 = v148;
    if (!v47)
    {
      unint64_t v159 = *(void (**)(void, void, void))(v161 + 32);
      unint64_t v158 = v161 + 16;
      uint64_t v157 = v150 + 40;
      v161 += 32;
      uint64_t v156 = (void (**)(uint64_t, uint64_t, void))(v161 - 24);
      do
      {
        v159(v69, v64, v65);
        unsigned int v70 = v9;
        sub_100208380();
        v71();
        storeEnumTagSinglePayload for ClientCommand(v68, 0, 1, v65);
        uint64_t v72 = v164;
        sub_1005E2E50();
        sub_1005E2DB0();
        uint64_t v73 = *v66;
        sub_1002079B0(v9, *v66);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v67 + 40))(v73+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v9, v68, v72);
        uint64_t v74 = *v66;
        uint64_t v75 = v66[1];
        uint64_t v9 = v66[2];
        swift_retain();
        LODWORD(v9) = CircularBuffer.index(after:)(v70, v74, v75, v9, v65);
        swift_release();
        sub_1002080D4();
        v76();
        sub_1005E2950();
        uint64_t v64 = v165;
        sub_100207FC4(v165, 1, v65);
      }
      while (!v47);
    }
    sub_1002080D4();
    v77();
    goto LABEL_30;
  }
  unint64_t v161 = v50;
  v134[3] = WitnessTable;
  uint64_t AssociatedTypeWitness = v40;
  uint64_t v78 = swift_retain();
  uint64_t v162 = v56;
  CircularBuffer.count.getter(v78, v143, v142);
  sub_1002083C4();
  v156[2](v146, v58, v59);
  uint64_t v165 = v57;
  BOOL v47 = v57 == v40;
  unint64_t v79 = v164;
  uint64_t v80 = v155;
  if (v47)
  {
    char v81 = sub_1005E23D0();
    uint64_t v82 = sub_1002082C8();
    v83(v82);
    if (v81)
    {
      CircularBuffer.removeSubrange(_:)();
LABEL_30:
      sub_1001FE57C();
      return;
    }
  }
  else
  {
    uint64_t v84 = sub_1002082C8();
    v85(v84);
  }
  sub_1005E2130();
  uint64_t v173 = sub_1005E2D80();
  uint64_t v87 = *v80;
  uint64_t v86 = v80[1];
  uint64_t v88 = v80[2];
  swift_retain();
  sub_10020824C();
  uint64_t v89 = v162;
  CircularBuffer.count.getter(v90, v91, v92);
  sub_1002083C4();
  uint64_t v93 = sub_1005E23B0();
  unint64_t v94 = v79 + v93;
  if (__OFADD__(v79, v93)) {
    goto LABEL_33;
  }
  BOOL v95 = __OFSUB__(v94, v165);
  uint64_t v96 = v94 - v165;
  if (v95)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v97 = v96 + 1;
  if (__OFADD__(v96, 1))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v156 = (void (**)(uint64_t, uint64_t, void))((v9 & 0x100000000000000uLL) >> 56);
  swift_retain();
  CircularBuffer.capacity.getter();
  sub_1002083C4();
  uint64_t v98 = sub_1002021B0(v97);
  if (v98 <= (uint64_t)v79) {
    Swift::Int v99 = v79;
  }
  else {
    Swift::Int v99 = v98;
  }
  uint64_t v165 = sub_1005E2E50();
  sub_1005E2D90(v99);
  swift_retain();
  sub_10020824C();
  CircularBuffer.startIndex.getter(v100, v101, v102);
  sub_1002083C4();
  LODWORD(v170) = v79;
  WORD2(v170) = WORD2(v79);
  BYTE6(v170) = BYTE6(v79);
  HIBYTE(v170) = HIBYTE(v79) != 0;
  int v166 = v9;
  __int16 v167 = v154;
  char v168 = v152;
  BOOL v169 = (char)v156;
  if ((sub_1005E1AF0() & 1) == 0) {
    goto LABEL_36;
  }
  Swift::Int v154 = v99;
  unint64_t v170 = CircularBuffer.subscript.getter(v79 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v79) != 0) << 56), v141, v87, v86, v88);
  uint64_t v171 = v103;
  uint64_t v172 = v104;
  uint64_t v105 = sub_100208408();
  sub_1005E1FE0();
  swift_release();
  sub_1002083F4();
  uint64_t v106 = (void *)sub_1002083DC();
  uint64_t v107 = v60;
  uint64_t v108 = v159;
  v106[2] = v89;
  v106[3] = v108;
  v106[4] = v60;
  uint64_t v109 = (void *)swift_allocObject();
  v109[2] = v89;
  v109[3] = v108;
  v109[4] = v60;
  v109[5] = sub_1002079E8;
  v109[6] = v106;
  uint64_t v110 = sub_1005E2CA0();
  uint64_t v156 = (void (**)(uint64_t, uint64_t, void))&protocol conformance descriptor for LazySequence<A>;
  swift_getWitnessTable();
  sub_100208478();
  *(void *)(v111 - 256) = v110;
  uint64_t v147 = v112;
  sub_1005E3030();
  swift_release();
  swift_release();
  sub_1002081C8();
  uint64_t v152 = v105;
  uint64_t v113 = sub_1005E2E80();
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v146 = v113;
  uint64_t v145 = v114;
  sub_1005E2E00();
  sub_1005E1FE0();
  uint64_t v115 = (void *)sub_1002083DC();
  v115[2] = v89;
  v115[3] = v108;
  v115[4] = v107;
  uint64_t v116 = (void *)swift_allocObject();
  v116[2] = v89;
  v116[3] = v108;
  v116[4] = v107;
  v116[5] = sub_1002079E8;
  v116[6] = v115;
  sub_100208408();
  sub_10020824C();
  sub_1005E3030();
  swift_release();
  sub_1002080D4();
  v117();
  sub_100208408();
  sub_1005E2E00();
  uint64_t v118 = *v155;
  uint64_t v119 = v155[1];
  uint64_t v120 = v155[2];
  uint64_t v121 = swift_retain();
  unint64_t v122 = CircularBuffer.endIndex.getter(v121, v119, v120);
  swift_release();
  LODWORD(v170) = v160;
  WORD2(v170) = v136;
  BYTE6(v170) = v161;
  HIBYTE(v170) = v135;
  int v166 = v122;
  __int16 v167 = WORD2(v122);
  char v168 = BYTE6(v122);
  BOOL v169 = HIBYTE(v122) != 0;
  if (sub_1005E1AF0())
  {
    unint64_t v170 = CircularBuffer.subscript.getter(v140, v122 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(v122) != 0) << 56), v118, v119, v120);
    uint64_t v171 = v123;
    uint64_t v172 = v124;
    sub_1005E1FE0();
    swift_release();
    sub_1002083F4();
    uint64_t v125 = (void *)sub_1002083DC();
    v125[2] = v89;
    v125[3] = v108;
    uint64_t v126 = v157;
    v125[4] = v157;
    char v127 = (void *)swift_allocObject();
    v127[2] = v89;
    v127[3] = v108;
    v127[4] = v126;
    v127[5] = sub_1002079E8;
    v127[6] = v125;
    sub_100208478();
    sub_1005E3030();
    swift_release();
    swift_release();
    sub_1002081C8();
    sub_1005E2E00();
    swift_retain();
    uint64_t v128 = sub_1005E2DF0();
    swift_release();
    Swift::Int v129 = v154 - v128;
    if (v154 - v128 >= 1)
    {
      storeEnumTagSinglePayload for ClientCommand(v149, 1, 1, v89);
      sub_1005E2D50();
      sub_1002080D4();
      v130();
      sub_100208408();
      sub_1005E2E00();
    }
    uint64_t v131 = v173;
    uint64_t v132 = v155;
    swift_retain();
    swift_release();
    *uint64_t v132 = v131;
    v132[1] = 0;
    uint64_t v133 = sub_1005E2DF0();
    swift_release();
    v132[2] = v133 - v129;
    goto LABEL_30;
  }
LABEL_37:
  __break(1u);
}

void sub_1002050CC(uint64_t a1@<X8>)
{
}

void sub_1002050E4(uint64_t a1@<X8>)
{
  sub_10020848C();
  sub_100208464();
  if (v8) {
    uint64_t v7 = 0;
  }
  uint64_t v9 = v3(v7 | (v6 << 48) | (v5 << 32) | v4, v2);
  sub_100207F5C(v9);
  *(_WORD *)(a1 + 4) = v10;
  if (v8) {
    char v11 = 0;
  }
  else {
    char v11 = 1;
  }
  sub_10020838C(v11);
}

void sub_100205140(uint64_t a1)
{
}

void sub_100205158(uint64_t a1)
{
  sub_10020848C();
  sub_100208464();
  if (v8) {
    uint64_t v7 = 0;
  }
  uint64_t v9 = v2(v7 | (v6 << 48) | (v5 << 32) | v4, v3);
  sub_100207F5C(v9);
  *(_WORD *)(a1 + 4) = v10;
  if (v8) {
    char v11 = 0;
  }
  else {
    char v11 = 1;
  }
  sub_10020838C(v11);
}

void sub_1002051B4(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = CircularBuffer.index(_:offsetBy:)(*a1, a2, *v3, v3[1], v3[2]);
  sub_100207F5C(v5);
  *(_WORD *)(a3 + 4) = v6;
  if (v7) {
    char v8 = 0;
  }
  else {
    char v8 = 1;
  }
  sub_10020838C(v8);
}

uint64_t sub_100205220()
{
  swift_getWitnessTable();
  return sub_1005E2330();
}

unint64_t sub_1002052A4(unsigned int *a1, unsigned int *a2)
{
  if (*((unsigned char *)a1 + 7)) {
    uint64_t v2 = 0x100000000000000;
  }
  else {
    uint64_t v2 = 0;
  }
  unint64_t v3 = v2 | ((unint64_t)*((unsigned __int8 *)a1 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a1 + 2) << 32) | *a1;
  if (*((unsigned char *)a2 + 7)) {
    uint64_t v4 = 0x100000000000000;
  }
  else {
    uint64_t v4 = 0;
  }
  return CircularBuffer.distance(from:to:)(v3, v4 | ((unint64_t)*((unsigned __int8 *)a2 + 6) << 48) | ((unint64_t)*((unsigned __int16 *)a2 + 2) << 32) | *a2);
}

void CircularBuffer.init(initialCapacity:)(unint64_t a1)
{
  sub_1005E28C0();
  sub_1001F3BBC();
  sub_100207F00();
  __chkstk_darwin(v2);
  sub_100208044();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (!HIDWORD(a1))
  {
    sub_100202188(a1);
    sub_100208398();
    sub_1005E2E30();
    return;
  }
  __break(1u);
}

void CircularBuffer.init()()
{
}

void CircularBuffer.append(_:)()
{
  sub_1002080C0();
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = sub_1005E28C0();
  sub_1001FE450();
  uint64_t v6 = v5;
  sub_100207F00();
  __chkstk_darwin(v7);
  sub_100208034();
  uint64_t v8 = v0[2];
  sub_1001F9720();
  sub_100208380();
  v9();
  storeEnumTagSinglePayload for ClientCommand(v1, 0, 1, v3);
  sub_100208420();
  sub_1005E2DB0();
  uint64_t v10 = *v0;
  sub_100208310();
  sub_1002079B0(v11, v12);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 40))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v8, v1, v4);
  CircularBuffer.advanceTailIdx(by:)(1);
  if (v0[1] == v0[2]) {
    CircularBuffer._doubleCapacity()();
  }
  sub_100208130();
}

Swift::Void __swiftcall CircularBuffer._doubleCapacity()()
{
  sub_1001FE5B4();
  uint64_t v3 = *(void *)(v2 + 16);
  sub_1005E28C0();
  sub_1001FE450();
  sub_100207F00();
  __chkstk_darwin(v4);
  sub_100208444();
  sub_1005E36B0();
  sub_1001F3BBC();
  sub_100207F00();
  __chkstk_darwin(v5);
  Swift::Int v6 = 2 * CircularBuffer.capacity.getter();
  sub_1005E2130();
  uint64_t v9 = sub_1005E2D80();
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    sub_100208420();
    sub_1005E2D90(v6);
    sub_10000566C(&qword_100710048);
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_100007494(&qword_100710050, &qword_100710048);
    sub_100208204();
    sub_1005E1B30();
    sub_1002082F0();
    swift_getWitnessTable();
    sub_100208144();
    sub_10000566C(&qword_100710058);
    sub_100007494(qword_100710060, &qword_100710058);
    sub_100208204();
    sub_1005E1B30();
    sub_100208144();
    swift_retain();
    sub_1005E2DF0();
    sub_100208368();
    storeEnumTagSinglePayload for ClientCommand(v1, 1, 1, v3);
    sub_1005E2D50();
    sub_1002080D4();
    v8();
    swift_getWitnessTable();
    sub_1005E2E00();
    v0[1] = 0;
    v0[2] = WitnessTable;
    swift_release();
    uint64_t *v0 = v9;
    sub_1001FE57C();
  }
}

void CircularBuffer.prepend(_:)()
{
  sub_1001FE5B4();
  uint64_t v3 = *(void *)(v2 + 16);
  sub_1005E28C0();
  sub_1001FE450();
  sub_100207F00();
  __chkstk_darwin(v4);
  sub_100208044();
  swift_retain();
  Swift::Int v5 = CircularBuffer.indexBeforeHeadIdx()();
  swift_release();
  sub_1001F9720();
  sub_100208380();
  v6();
  storeEnumTagSinglePayload for ClientCommand(v1, 0, 1, v3);
  sub_100208420();
  sub_1005E2DB0();
  sub_1002079B0(v5, *v0);
  sub_100208310();
  v7();
  CircularBuffer.advanceHeadIdx(by:)(-1);
  if (v0[1] == v0[2]) {
    CircularBuffer._doubleCapacity()();
  }
  sub_1001FE57C();
}

uint64_t CircularBuffer.capacity.getter()
{
  sub_1005E28C0();
  return sub_1005E2DF0();
}

Swift::Bool __swiftcall CircularBuffer.verifyInvariants()()
{
  sub_1002080C0();
  uint64_t v16 = v0;
  uint64_t v17 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_1005E28C0();
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v15 - v10;
  if (v7 != v5)
  {
    uint64_t v12 = (void (**)(char *, uint64_t))(v9 + 8);
    do
    {
      sub_1005E2E70();
      int EnumTagSingle = getEnumTagSinglePayload for ClientCommand((uint64_t)v11, 1, v3);
      (*v12)(v11, v8);
      if (EnumTagSingle == 1) {
        break;
      }
      uint64_t v7 = CircularBuffer.mask.getter() & (v7 + 1);
    }
    while (v7 != v5);
  }
  sub_100208130();
  return result;
}

Swift::Void __swiftcall CircularBuffer._resizeAndFlatten(newCapacity:)(Swift::Int newCapacity)
{
  sub_1001FE5B4();
  uint64_t v2 = v1;
  Swift::Int v4 = v3;
  uint64_t v6 = *(void *)(v5 + 16);
  sub_100208438();
  uint64_t v7 = sub_1005E28C0();
  sub_1001FE450();
  uint64_t v9 = v8;
  sub_100207F00();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v23 - v11;
  uint64_t v13 = sub_1005E36B0();
  sub_1001F3BBC();
  sub_100207F00();
  __chkstk_darwin(v14);
  sub_1005E2130();
  uint64_t v33 = sub_1005E2D80();
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v27 = v6;
    sub_100208420();
    Swift::Int v26 = v4;
    sub_1005E2D90(v4);
    uint64_t v15 = v2[1];
    uint64_t v16 = v2[2];
    uint64_t v17 = *v2;
    if (v16 >= v15)
    {
      *(void *)&long long v31 = sub_1005E2E60();
      *((void *)&v31 + 1) = v19;
      *(void *)&long long v32 = v20;
      *((void *)&v32 + 1) = v21;
      uint64_t v18 = sub_1005E2A80();
      swift_getWitnessTable();
    }
    else
    {
      *(void *)&long long v28 = *v2;
      uint64_t v30 = v15;
      uint64_t v24 = sub_10000566C(&qword_100710048);
      uint64_t v25 = v9;
      v23[1] = swift_getWitnessTable();
      sub_100007494(&qword_100710050, &qword_100710048);
      sub_10020821C();
      sub_1005E1B30();
      sub_1002082F0();
      swift_getWitnessTable();
      uint64_t v24 = v13;
      sub_100208168();
      sub_1005E2E00();
      *(void *)&long long v28 = v17;
      uint64_t v30 = v16;
      uint64_t v18 = sub_10000566C(&qword_100710058);
      sub_100007494(qword_100710060, &qword_100710058);
      sub_10020821C();
      sub_1005E1B30();
      long long v28 = v31;
      long long v29 = v32;
      sub_100208168();
      uint64_t v9 = v25;
    }
    sub_1005E2E00();
    swift_retain();
    sub_1005E2DF0();
    sub_100208368();
    storeEnumTagSinglePayload for ClientCommand((uint64_t)v12, 1, 1, v27);
    sub_1005E2D50();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
    swift_getWitnessTable();
    sub_1005E2E00();
    v2[1] = 0;
    v2[2] = v18;
    uint64_t v22 = v33;
    swift_release();
    uint64_t *v2 = v22;
    sub_1001FE57C();
  }
}

uint64_t CircularBuffer.subscript.getter()
{
  sub_1002081EC();
  unint64_t v5 = CircularBuffer.startIndex.getter(v2, v3, v4);
  sub_1002080FC(v5);
  sub_1002082DC();
  unint64_t v11 = CircularBuffer.index(_:offsetBy:)(v6, v7, v8, v9, v10);
  unint64_t v12 = sub_100207ED8(v11);
  return CircularBuffer.subscript.getter(v12, v1, v13, v14, v0);
}

void sub_100205FEC()
{
  sub_1002080C0();
  uint64_t v1 = *(void **)(*(void *)v0 + 40);
  uint64_t v2 = *(void **)(*(void *)v0 + 48);
  if (v3)
  {
    uint64_t v4 = sub_100207F74();
    v5(v4);
    CircularBuffer.subscript.setter();
    uint64_t v6 = sub_100207FAC();
    v7(v6);
  }
  else
  {
    CircularBuffer.subscript.setter();
  }
  free(v2);
  free(v1);
  sub_100208130();
  free(v8);
}

Swift::Void __swiftcall CircularBuffer.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  sub_1005E28C0();
  sub_1001F3BBC();
  sub_100207F00();
  __chkstk_darwin(v3);
  sub_100208044();
  if (keepingCapacity)
  {
    Swift::Int v4 = CircularBuffer.count.getter(*v1, v1[1], v1[2]);
    CircularBuffer.removeFirst(_:)(v4);
  }
  else
  {
    sub_1005E2E50();
    sub_1005E2E20(0);
    sub_100208398();
    sub_1005E2E10();
  }
  v1[1] = 0;
  v1[2] = 0;
}

Swift::Void __swiftcall CircularBuffer.removeFirst(_:)(Swift::Int a1)
{
  sub_1001FE5B4();
  uint64_t v3 = v2;
  sub_100208118();
  sub_1001FE450();
  sub_100207F00();
  __chkstk_darwin(v4);
  sub_100208034();
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = swift_retain();
  uint64_t v8 = CircularBuffer.count.getter(v7, v5, v6);
  swift_release();
  if (v8 < v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (v3)
  {
    sub_1005E2E50();
    sub_1005E2DB0();
    sub_1005E2DB0();
    do
    {
      sub_10020831C();
      unint64_t v9 = sub_100207F0C();
      v10(v9);
      uint64_t v11 = v5 + 1;
      swift_retain();
      uint64_t v12 = CircularBuffer.mask.getter();
      swift_release();
      uint64_t v5 = v12 & v11;
      --v3;
    }
    while (v3);
  }
  *(void *)(v1 + 8) = v5;
  sub_1001FE57C();
}

uint64_t CircularBuffer.modify<A>(_:_:)(unsigned int a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  unint64_t v7 = a1;
  sub_1005E28C0();
  sub_1005E2E50();
  sub_1005E2DB0();
  uint64_t v8 = *v4;
  sub_1002079B0(v7, v8);
  sub_100207F94();
  uint64_t v11 = v8
      + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(void *)(v10 + 72) * v7;
  uint64_t result = getEnumTagSinglePayload for ClientCommand(v11, 1, v6);
  if (result != 1) {
    return a2(v11);
  }
  __break(1u);
  return result;
}

void sub_100206348(void *a1@<X8>)
{
  sub_1005E3240();
  v2._uint64_t countAndFlagsBits = 32;
  v2._unint64_t object = (void *)0xE100000000000000;
  sub_1005E1E30(v2);
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t CircularBuffer.popFirst()()
{
  if (sub_100208098() < 1)
  {
    uint64_t v3 = 1;
  }
  else
  {
    CircularBuffer.removeFirst()(v2, v0);
    uint64_t v3 = 0;
  }
  return storeEnumTagSinglePayload for ClientCommand(v0, v3, 1, v1);
}

void CircularBuffer.removeFirst()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  sub_1005E28C0();
  sub_100207F00();
  __chkstk_darwin(v6);
  sub_100208044();
  CircularBuffer.first.getter(*v2, v2[1], v2[2], v5, v3);
  sub_100207FC4(v3, 1, v5);
  if (v7)
  {
    __break(1u);
  }
  else
  {
    sub_1001F9720();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a2, v3, v5);
    sub_100206770();
  }
}

uint64_t CircularBuffer.popLast()()
{
  if (sub_100208098() < 1)
  {
    uint64_t v3 = 1;
  }
  else
  {
    CircularBuffer.removeLast()(v2, v0);
    uint64_t v3 = 0;
  }
  return storeEnumTagSinglePayload for ClientCommand(v0, v3, 1, v1);
}

void CircularBuffer.removeLast()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  sub_100208118();
  sub_100207F00();
  __chkstk_darwin(v5);
  char v7 = (char *)v10 - v6;
  v10[1] = *(void *)v2;
  long long v11 = *(_OWORD *)(v2 + 8);
  swift_getWitnessTable();
  sub_1005E1A40();
  sub_100207FC4((uint64_t)v7, 1, v4);
  if (v8)
  {
    __break(1u);
  }
  else
  {
    sub_1001F9720();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v4);
    sub_100208258();
    sub_100206820();
  }
}

Swift::Void __swiftcall CircularBuffer.removeLast(_:)(Swift::Int a1)
{
  sub_1001FE5B4();
  uint64_t v3 = v2;
  sub_100208118();
  sub_1001FE450();
  sub_100207F00();
  __chkstk_darwin(v4);
  sub_100208034();
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = swift_retain();
  uint64_t v8 = CircularBuffer.count.getter(v7, v5, v6);
  swift_release();
  if (v8 < v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  if (v3)
  {
    sub_1005E2E50();
    sub_1005E2DB0();
    sub_1005E2DB0();
    do
    {
      uint64_t v9 = v6 - 1;
      swift_retain();
      uint64_t v10 = CircularBuffer.mask.getter();
      swift_release();
      uint64_t v6 = v10 & v9;
      sub_10020831C();
      unint64_t v11 = sub_100207F0C();
      v12(v11);
      --v3;
    }
    while (v3);
  }
  *(void *)(v1 + 16) = v6;
  sub_1001FE57C();
}

void sub_100206770()
{
}

uint64_t CircularBuffer.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a2 == a3)
  {
    uint64_t v7 = 1;
  }
  else
  {
    unint64_t v9 = CircularBuffer.startIndex.getter(a1, a2, a3);
    unint64_t v10 = sub_100207ED8(v9);
    CircularBuffer.subscript.getter(v10, a1, v11, v12, a4);
    uint64_t v7 = 0;
  }
  return storeEnumTagSinglePayload for ClientCommand(a5, v7, 1, a4);
}

void sub_100206820()
{
}

void CircularBuffer.removeSubrange(_:)()
{
  sub_1001FE5B4();
  unint64_t v2 = v1;
  uint64_t v28 = v4;
  uint64_t v29 = v3;
  unint64_t v5 = HIDWORD(v1);
  unint64_t v6 = HIWORD(v1);
  __chkstk_darwin(v3);
  sub_100208054();
  type metadata accessor for CircularBuffer.Index();
  LODWORD(v31) = v2;
  uint64_t v30 = v0;
  WORD2(v31) = v5;
  BYTE6(v31) = v6;
  HIBYTE(v31) = HIBYTE(v2) & 1;
  uint64_t v27 = v0 + 1;
  uint64_t v7 = sub_100208068();
  unint64_t v10 = CircularBuffer.startIndex.getter(v7, v8, v9);
  sub_100208234(v10);
  swift_getWitnessTable();
  sub_100208264();
  if ((sub_1005E1AE0() & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  LODWORD(v31) = v2;
  WORD2(v31) = v5;
  BYTE6(v31) = v6;
  HIBYTE(v31) = HIBYTE(v2) & 1;
  uint64_t v11 = sub_100208068();
  unint64_t v14 = CircularBuffer.endIndex.getter(v11, v12, v13);
  sub_100208234(v14);
  sub_100208264();
  if ((sub_1005E1AF0() & 1) == 0)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v15 = v2 & 0x1FFFFFFFFFFFFFFLL;
  unint64_t v16 = CircularBuffer.distance(from:to:)(v29 & 0x1FFFFFFFFFFFFFFLL, v2 & 0x1FFFFFFFFFFFFFFLL);
  if (v16 == 1)
  {
    CircularBuffer.remove(at:)();
    sub_100208258();
    sub_1002080D4();
    v17();
  }
  else
  {
    unint64_t v18 = v16;
    uint64_t v19 = sub_100208068();
    if (CircularBuffer.count.getter(v19, v20, v21) == v18)
    {
      sub_100208118();
      unint64_t v22 = sub_1005E2DF0();
      CircularBuffer.init(initialCapacity:)(v22);
      uint64_t v24 = v23;
      swift_release();
      *uint64_t v30 = v24;
      *uint64_t v27 = 0;
      v27[1] = 0;
    }
    else
    {
      uint64_t v31 = sub_1005E2130();
      uint64_t v25 = sub_1005E21F0();
      uint64_t WitnessTable = swift_getWitnessTable();
      CircularBuffer.replaceSubrange<A>(_:with:)(v29 & 0x1FFFFFFFFFFFFFFLL, v15, &v31, v28, v25, WitnessTable);
      swift_bridgeObjectRelease();
    }
  }
  sub_1001FE57C();
}

uint64_t sub_100206AD4@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  a1();
  return storeEnumTagSinglePayload for ClientCommand(a3, 0, 1, a2);
}

void CircularBuffer.remove(at:)()
{
  sub_1001FE5B4();
  unint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v44 = v6;
  __int16 v46 = (void (*)(void))HIDWORD(v4);
  unint64_t v47 = HIWORD(v4);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = sub_100208118();
  sub_1001FE450();
  uint64_t v43 = v9;
  __chkstk_darwin(v10);
  sub_1001F3FE0();
  uint64_t v42 = v11;
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)v41 - v13;
  sub_1001FE450();
  uint64_t v49 = v15;
  __chkstk_darwin(v16);
  sub_100208054();
  uint64_t v48 = v17;
  unint64_t v18 = v0[1];
  uint64_t v19 = v0[2];
  uint64_t v54 = *v0;
  *(void *)&long long v55 = v18;
  unint64_t v45 = v18;
  v41[1] = v19;
  *((void *)&v55 + 1) = v19;
  swift_getWitnessTable();
  sub_1005E24B0();
  uint64_t v54 = v64;
  long long v55 = v65;
  int v56 = v66;
  __int16 v57 = v67;
  char v58 = v68;
  char v59 = v69;
  int v60 = v70;
  __int16 v61 = v71;
  char v62 = v72;
  char v63 = v73;
  int v50 = v5;
  __int16 v51 = (__int16)v46;
  char v52 = v47;
  char v53 = HIBYTE(v5) & 1;
  unint64_t v47 = v3;
  sub_1005E19D0();
  swift_getWitnessTable();
  type metadata accessor for CircularBuffer.Index();
  swift_getWitnessTable();
  char v20 = sub_1005E2050();
  swift_release();
  if (v20)
  {
    uint64_t v5 = v5;
    uint64_t v21 = v8;
    sub_1005E2E70();
    sub_100207FC4((uint64_t)v14, 1, v7);
    if (!v22)
    {
      uint64_t v23 = v48;
      uint64_t v24 = v49 + 32;
      uint64_t v25 = *(void (**)(void))(v49 + 32);
      sub_100208310();
      v25();
      if (v45 == v5)
      {
        unint64_t v26 = v45;
        CircularBuffer.advanceHeadIdx(by:)(1);
        __int16 v46 = v25;
        uint64_t v27 = v42;
        storeEnumTagSinglePayload for ClientCommand(v42, 1, 1, v7);
        sub_1005E2E50();
        sub_1005E2DB0();
        sub_1002079B0(v26, *v1);
        unint64_t v28 = sub_100207FDC();
        uint64_t v30 = v27;
        uint64_t v25 = v46;
        uint64_t v31 = v21;
      }
      else
      {
        swift_retain();
        Swift::Int v32 = CircularBuffer.indexBeforeTailIdx()();
        swift_release();
        uint64_t v33 = v21;
        if (v32 != v5)
        {
          __int16 v46 = v25;
          uint64_t v49 = v24;
          uint64_t v36 = v42;
          sub_100208000(v42, 1);
          sub_1005E2DB0();
          uint64_t v37 = *v1;
          sub_1002079B0(v5, *v1);
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 40))(v37+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v5, v36, v33);
          uint64_t v38 = v1[2];
          swift_retain();
          CircularBuffer.mask.getter();
          sub_100208368();
          uint64_t v39 = v33 & (v5 + 1);
          if (v39 != v38)
          {
            do
            {
              uint64_t v64 = v5;
              uint64_t v54 = v39;
              swift_getWitnessTable();
              sub_1005E1B20();
              uint64_t v40 = v1[2];
              swift_retain();
              CircularBuffer.mask.getter();
              sub_100208368();
              uint64_t v5 = v39;
              uint64_t v39 = v33 & (v39 + 1);
            }
            while (v39 != v40);
          }
          CircularBuffer.advanceTailIdx(by:)(-1);
          uint64_t v35 = v44;
          uint64_t v23 = v48;
          uint64_t v25 = v46;
          goto LABEL_11;
        }
        CircularBuffer.advanceTailIdx(by:)(-1);
        uint64_t v34 = v42;
        sub_100208000(v42, 1);
        sub_1005E2DB0();
        sub_1002079B0(v5, *v1);
        unint64_t v28 = sub_100207FDC();
        uint64_t v30 = v34;
        uint64_t v31 = v33;
      }
      v29(v28, v30, v31);
      uint64_t v35 = v44;
LABEL_11:
      ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v35, v23, v7);
      sub_1001FE57C();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Void __swiftcall CircularBuffer.reserveCapacity(_:)(Swift::Int a1)
{
  if (CircularBuffer.capacity.getter() < a1)
  {
    Swift::Int v2 = sub_1002021B0(a1);
    CircularBuffer._resizeAndFlatten(newCapacity:)(v2);
  }
}

void sub_100207054(void *a1@<X8>)
{
  CircularBuffer.init()();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = v2;
}

uint64_t sub_100207084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CircularBuffer.replaceSubrange<A>(_:with:)();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);
  return v5(a2, a3);
}

uint64_t sub_100207154(uint64_t a1, uint64_t a2)
{
  CircularBuffer.append(_:)();
  unint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

uint64_t sub_1002071C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return RangeReplaceableCollection.append<A>(contentsOf:)(a1, a4, a2, a5, a3);
}

void sub_1002071DC()
{
}

void sub_100207208()
{
}

uint64_t sub_10020725C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RangeReplaceableCollection<>._customRemoveLast()(a1, WitnessTable, a2);
}

uint64_t sub_1002072C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return RangeReplaceableCollection<>._customRemoveLast(_:)(a1, a2, WitnessTable, a3);
}

uint64_t sub_10020733C()
{
  return sub_1005E2550();
}

void static CircularBuffer<A>.== infix(_:_:)()
{
  sub_1001FE5B4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v7 = CircularBuffer.count.getter(v4, v5, v6);
  sub_100208310();
  if (v7 == CircularBuffer.count.getter(v8, v9, v10))
  {
    sub_100208438();
    type metadata accessor for CircularBuffer();
    swift_getWitnessTable();
    sub_1005E3360();
    uint64_t v11 = (void *)sub_1002083DC();
    void v11[2] = v3;
    void v11[3] = v1;
    v11[4] = v3;
    __chkstk_darwin(v11);
    sub_1005E2CC0();
    swift_getWitnessTable();
    sub_1005E1FA0();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1001FE57C();
}

uint64_t sub_10020758C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

void sub_1002075F4()
{
  static CircularBuffer<A>.== infix(_:_:)();
}

void CircularBuffer<A>.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1001FE5B4();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_1001FE450();
  uint64_t v31 = v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  unint64_t v35 = CircularBuffer.startIndex.getter(v29, v27, v25);
  LODWORD(v36) = HIBYTE(v35) != 0;
  sub_100208294(v29);
  sub_1002080E0();
  if (!v40 || v36 != v39)
  {
    uint64_t v42 = (void (**)(char *, uint64_t))(v31 + 8);
    do
    {
      if (v36) {
        uint64_t v43 = 0x100000000000000;
      }
      else {
        uint64_t v43 = 0;
      }
      unint64_t v36 = v43 & 0xFF00000000000000 | v35 & 0xFFFFFFFFFFFFFFLL;
      CircularBuffer.subscript.getter(v36, v29, v37, v38, v23);
      swift_retain();
      unint64_t v35 = CircularBuffer.index(after:)(v36, v29, v27, v25, v23);
      swift_release();
      LOBYTE(v36) = HIBYTE(v35) != 0;
      sub_1005E19C0();
      (*v42)(v34, v23);
      sub_100208294(v29);
      sub_1002080E0();
    }
    while (!v40 || ((v36 ^ v44) & 1) != 0);
    swift_release();
    sub_1001FE57C();
  }
  else
  {
    sub_1001FE57C();
    swift_release();
  }
}

Swift::Int CircularBuffer<A>.hashValue.getter()
{
  sub_1002081EC();
  sub_1005E33F0();
  sub_1002082DC();
  CircularBuffer<A>.hash(into:)(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,
    v20);
  return sub_1005E3470();
}

Swift::Int sub_100207820()
{
  return CircularBuffer<A>.hashValue.getter();
}

void sub_100207838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  CircularBuffer<A>.hash(into:)(a1, *v20, v20[1], v20[2], *(void *)(a2 + 16), *(void *)(a3 - 8), a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

Swift::Int sub_100207850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  sub_1005E33F0();
  CircularBuffer<A>.hash(into:)((uint64_t)v10, *v3, v3[1], v3[2], *(void *)(a2 + 16), v5, v6, v7, v9, v10[0], v10[1], v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8], v10[9],
    v10[10]);
  return sub_1005E3470();
}

uint64_t CircularBuffer.init(arrayLiteral:)()
{
  type metadata accessor for CircularBuffer();
  sub_1005E21F0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_10020824C();
  sub_1005E2520();
  return v1;
}

uint64_t sub_100207960@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CircularBuffer.init(arrayLiteral:)();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

void sub_100207990(void *a1@<X8>)
{
}

unint64_t sub_1002079B0(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(void *)(a2 + 16) <= result) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t type metadata accessor for CircularBuffer.Index()
{
  return sub_1000DAF2C();
}

uint64_t sub_1002079F8()
{
  sub_1001F9720();
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100207A30()
{
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100207A68@<X0>(uint64_t a1@<X8>)
{
  return sub_100206AD4(*(void (**)(void))(v1 + 40), *(void *)(v1 + 16), a1);
}

uint64_t type metadata accessor for CircularBuffer()
{
  return sub_1000DAF2C();
}

uint64_t sub_100207A94()
{
  return sub_1005E1BC0() & 1;
}

uint64_t sub_100207AC0(uint64_t a1)
{
  return sub_10020758C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32)) & 1;
}

uint64_t sub_100207AE4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207B00()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207B1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207B38()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207B54()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207B70()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207B8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207BA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207BC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207C28()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207C44()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207CA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207CC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100207D0C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

void *sub_100207D44(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

__n128 initializeWithTake for OptionValueComp(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_100207DB0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for NamespaceResponse(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void *sub_100207E30(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t sub_100207E3C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 7);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100207E88(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 7) = a2 + 1;
    }
  }
  return result;
}

unint64_t sub_100207ED8(unint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(a1) != 0) << 56);
}

uint64_t sub_100207EF0()
{
  return _swift_deallocObject(v0, 40, 7);
}

unint64_t sub_100207F0C()
{
  uint64_t v3 = *v0;
  sub_1002079B0(v2, *v0);
  return v3
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + *(void *)(v1 + 72) * v2;
}

uint64_t sub_100207F5C(uint64_t result)
{
  _DWORD *v1 = result;
  return result;
}

uint64_t sub_100207F74()
{
  return v0;
}

uint64_t sub_100207FAC()
{
  return v0;
}

uint64_t sub_100207FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return getEnumTagSinglePayload for ClientCommand(a1, a2, a3);
}

unint64_t sub_100207FDC()
{
  return v0
       + ((*(unsigned __int8 *)(*(void *)(v2 - 232) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 232) + 80))
       + *(void *)(*(void *)(v2 - 232) + 72) * v1;
}

uint64_t sub_100208000(uint64_t a1, uint64_t a2)
{
  storeEnumTagSinglePayload for ClientCommand(a1, a2, 1, v2);
  return sub_1005E2E50();
}

uint64_t sub_100208068()
{
  return v0;
}

uint64_t sub_10020807C()
{
  return v0;
}

uint64_t sub_100208098()
{
  uint64_t v2 = *v0;
  uint64_t v3 = v0[1];
  uint64_t v4 = v0[2];
  return CircularBuffer.count.getter(v2, v3, v4);
}

unint64_t sub_1002080FC(unint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL | ((unint64_t)(HIBYTE(a1) != 0) << 56);
}

uint64_t sub_100208118()
{
  return sub_1005E28C0();
}

uint64_t sub_100208144()
{
  return sub_1005E2E00();
}

uint64_t sub_100208168()
{
  return v0 - 176;
}

unint64_t sub_100208180(uint64_t a1)
{
  return CircularBuffer.subscript.setter(a1, v1, v4, v2, v3);
}

unint64_t sub_1002081A4(uint64_t a1)
{
  return CircularBuffer.subscript.setter(a1, v1, v2, v3, v4);
}

__n128 sub_1002081C8()
{
  *(void *)(v0 - 200) = *(void *)(v0 - 136);
  __n128 result = *(__n128 *)(v0 - 112);
  *(_OWORD *)(v0 - 192) = *(_OWORD *)(v0 - 128);
  *(__n128 *)(v0 - 176) = result;
  return result;
}

void sub_1002081E0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_100208204()
{
  return v0 - 136;
}

uint64_t sub_10020821C()
{
  return v0 - 136;
}

uint64_t sub_100208234(uint64_t result)
{
  *(_DWORD *)(v1 - 96) = result;
  return result;
}

uint64_t sub_100208258()
{
  return v0;
}

uint64_t sub_100208264()
{
  return v0 - 88;
}

uint64_t sub_10020827C()
{
  return v0 - 136;
}

unint64_t sub_100208294(uint64_t a1)
{
  return CircularBuffer.endIndex.getter(a1, v2, v1);
}

void sub_1002082B0()
{
  *(_DWORD *)(v1 - 200) = v0;
}

uint64_t sub_1002082C8()
{
  return v0;
}

uint64_t sub_1002082F0()
{
  long long v2 = *(_OWORD *)(v0 - 112);
  *(_OWORD *)(v0 - 176) = *(_OWORD *)(v0 - 128);
  *(_OWORD *)(v0 - 160) = v2;
  return sub_1005E2A80();
}

void sub_10020831C()
{
  storeEnumTagSinglePayload for ClientCommand(v1, 1, 1, v0);
  sub_1005E2DB0();
}

uint64_t sub_100208354()
{
  return v0;
}

uint64_t sub_100208368()
{
  return swift_release();
}

void sub_10020838C(char a1@<W8>)
{
  *(unsigned char *)(v2 + 6) = v1;
  *(unsigned char *)(v2 + 7) = a1;
}

uint64_t sub_100208398()
{
  storeEnumTagSinglePayload for ClientCommand(v1, 1, 1, v0);
  return v1;
}

uint64_t sub_1002083C4()
{
  return swift_release();
}

uint64_t sub_1002083DC()
{
  return swift_allocObject();
}

__n128 sub_1002083F4()
{
  *(void *)(v0 - 160) = *(void *)(v0 - 200);
  __n128 result = *(__n128 *)(v0 - 192);
  *(__n128 *)(v0 - 152) = result;
  return result;
}

uint64_t sub_100208408()
{
  return swift_getWitnessTable();
}

uint64_t sub_100208420()
{
  return sub_1005E2E50();
}

uint64_t sub_100208438()
{
  return 0;
}

uint64_t sub_100208444()
{
  return 0;
}

void *sub_1002084A0()
{
  return malloc(0x38uLL);
}

uint64_t IOError.init(errnoCode:reason:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t IOError.reason.getter(uint64_t a1)
{
  return a1;
}

uint64_t IOError.init(errnoCode:function:)()
{
  return sub_1005E2CB0();
}

uint64_t sub_100208548(int a1, uint64_t a2)
{
  if (strerror(a1))
  {
    sub_1005E2C80(18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v4 = a2;
    v5._uint64_t countAndFlagsBits = 8250;
    v5._unint64_t object = (void *)0xE200000000000000;
    sub_1005E1E30(v5);
    v6._uint64_t countAndFlagsBits = sub_1005E1E50();
    sub_1005E1E30(v6);
    swift_bridgeObjectRelease();
    v7._uint64_t countAndFlagsBits = 0x3A6F6E7272652820;
    v7._unint64_t object = (void *)0xE900000000000020;
    sub_1005E1E30(v7);
    v8._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v8);
    swift_bridgeObjectRelease();
    v9._uint64_t countAndFlagsBits = 41;
    v9._unint64_t object = (void *)0xE100000000000000;
    sub_1005E1E30(v9);
  }
  else
  {
    sub_1005E2C80(38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v4 = a2;
    v10._unint64_t object = (void *)0x80000001005E6080;
    v10._uint64_t countAndFlagsBits = 0xD000000000000022;
    sub_1005E1E30(v10);
    v11._uint64_t countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v11);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1002086D4()
{
  return IOError.localizedDescription.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned int *)(v0 + 16));
}

uint64_t sub_1002086E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IOError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for EngineMailboxLoggerID(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IOError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for IOError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 20))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for IOError()
{
  return &type metadata for IOError;
}

uint64_t sub_10020881C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for IOError.FailureDescription(uint64_t a1)
{
  return sub_100208840(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(unsigned char *)(a1 + 17));
}

uint64_t sub_100208840(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s12NIOIMAPCore27IOErrorV18FailureDescriptionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 16);
  sub_10020881C(*(void *)a2, v4, v6, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  return a1;
}

uint64_t assignWithCopy for IOError.FailureDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 16);
  sub_10020881C(*(void *)a2, v4, v6, v5);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 17);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  sub_100208840(v7, v8, v10, v9);
  return a1;
}

__n128 initializeWithTake for IOError.FailureDescription(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IOError.FailureDescription(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 17);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  sub_100208840(v5, v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for IOError.FailureDescription(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 18))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IOError.FailureDescription(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100208A0C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_100208A14(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for IOError.FailureDescription()
{
  return &type metadata for IOError.FailureDescription;
}

_DWORD *initializeBufferWithCopyOfBuffer for IOError.Error(_DWORD *result, _DWORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for IOError.Error(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IOError.Error(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for IOError.Error()
{
  return &type metadata for IOError.Error;
}

uint64_t _s12NIOIMAPCore27IOErrorV20localizedDescriptionSSvg_0(uint64_t a1, uint64_t a2, int a3)
{
  return sub_100208548(a3, a1);
}

uint64_t static _IntegerBitPacking.packUU<A, B, C>(_:_:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001FE450();
  uint64_t v23 = v6;
  __chkstk_darwin(v7);
  sub_1001F40C0();
  uint64_t v10 = v9 - v8;
  sub_1001FE450();
  __chkstk_darwin(v11);
  sub_1001F40C0();
  uint64_t v14 = v13 - v12;
  sub_1001FE450();
  uint64_t v16 = v15;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v19 = __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  (*(void (**)(uint64_t))(v20 + 16))(v14);
  sub_1005E2A60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v10, a2, a5);
  sub_1005E2A60();
  sub_1005E2EC0();
  sub_1001FDDDC();
  sub_1005E2A10();
  sub_1005E29F0();
  uint64_t v21 = *(void (**)(void))(v16 + 8);
  sub_1001FE594();
  v21();
  sub_1001FE594();
  v21();
  sub_1001FE594();
  return ((uint64_t (*)(void))v21)();
}

uint64_t static _IntegerBitPacking.unpackUU<A, B, C>(_:leftType:rightType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v37 = a13;
  uint64_t v38 = a3;
  __chkstk_darwin(a1);
  sub_1001F40C0();
  v36[1] = v15 - v14;
  __chkstk_darwin(v16);
  sub_1001F40C0();
  sub_1001FE450();
  uint64_t v39 = v17;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v43 = (char *)v36 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v36[0] = (char *)v36 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v42 = (char *)v36 - v27;
  __chkstk_darwin(v26);
  unsigned __int8 v44 = (char *)v36 - v28;
  v36[3] = v29;
  sub_1005E2EF0();
  unsigned char v36[4] = *(void *)(a11 + 8);
  sub_1005E2A60();
  uint64_t v30 = v37;
  sub_1005E2EF0();
  v36[2] = *(void *)(v30 + 8);
  sub_1005E2A60();
  sub_1005E29E0();
  uint64_t v45 = sub_1005E2EC0();
  sub_1001FDDDC();
  sub_1005E2A00();
  uint64_t v31 = v43;
  sub_1005E29E0();
  uint64_t v32 = v39;
  uint64_t v33 = *(void (**)(void))(v39 + 8);
  sub_100209114();
  v33();
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v34(v21, v31, a6);
  sub_1005E2A60();
  v34(v21, (char *)v36[0], a6);
  sub_1005E2A60();
  sub_100209114();
  v33();
  sub_100209114();
  v33();
  sub_100209114();
  v33();
  sub_100209114();
  return ((uint64_t (*)(void))v33)();
}

unint64_t static IntegerBitPacking.packUInt32UInt16UInt8(_:_:_:)(unsigned int a1, unsigned __int16 a2, unsigned __int8 a3)
{
  return ((unint64_t)a2 << 32) | ((unint64_t)a3 << 48) | a1;
}

uint64_t static IntegerBitPacking.unpackUInt32UInt16UInt8(_:)(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFLL;
}

uint64_t static IntegerBitPacking.packUInt8UInt8(_:_:)(int a1, unsigned __int8 a2)
{
  return a2 | (a1 << 8);
}

uint64_t static IntegerBitPacking.unpackUInt8UInt8(_:)(unsigned int a1)
{
  return bswap32(a1) >> 16;
}

uint64_t static IntegerBitPacking.packUInt16UInt8(_:_:)(unsigned __int16 a1, unsigned __int8 a2)
{
  return a2 | (a1 << 8);
}

NIOIMAPCore2::_UInt24 __swiftcall _UInt24.init(_:)(Swift::UInt32 a1)
{
  Swift::UInt16 v1 = a1 >> 8;
  result._backing._0 = v1;
  return result;
}

unint64_t static IntegerBitPacking.packUInt32CInt(_:_:)(uint64_t a1, unsigned int a2)
{
  return a2 | (unint64_t)(a1 << 32);
}

uint64_t static IntegerBitPacking.unpackUInt32CInt(_:)(uint64_t a1)
{
  return __ROR8__(a1, 32);
}

ValueMetadata *type metadata accessor for _IntegerBitPacking()
{
  return &type metadata for _IntegerBitPacking;
}

ValueMetadata *type metadata accessor for IntegerBitPacking()
{
  return &type metadata for IntegerBitPacking;
}

BOOL static _UInt24.== infix(_:_:)(int a1, int a2)
{
  return (a1 & 0xFFFFFF) == (a2 & 0xFFFFFF);
}

Swift::UInt32 __swiftcall UInt32.init(_:)(NIOIMAPCore2::_UInt24 a1)
{
  return v1 | (a1._backing._0 << 8);
}

void *_UInt24.max.unsafeMutableAddressor()
{
  return &static _UInt24.max;
}

IMAP2Persistence::ActionID __swiftcall ActionID.init(rawValue:)(Swift::UInt32 rawValue)
{
  return (IMAP2Persistence::ActionID)(rawValue & 0xFFFFFF);
}

uint64_t _UInt24._backing.setter(uint64_t result, char a2)
{
  *(_WORD *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 2) = a2;
  return result;
}

void *_UInt24.min.unsafeMutableAddressor()
{
  return &static _UInt24.min;
}

BOOL sub_100209174(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return static _UInt24.== infix(_:_:)(*a1 | (*((unsigned __int8 *)a1 + 2) << 16), *a2 | (*((unsigned __int8 *)a2 + 2) << 16));
}

uint64_t _UInt24.description.getter()
{
  return sub_1005E2A50();
}

unint64_t sub_1002091D8()
{
  unint64_t result = qword_100710168;
  if (!qword_100710168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710168);
  }
  return result;
}

uint64_t sub_100209224()
{
  return _UInt24.description.getter();
}

uint64_t initializeBufferWithCopyOfBuffer for _UInt24(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for _UInt24(unsigned __int16 *a1, int a2)
{
  if (a2)
  {
    if ((a2 + 0x1FFFFFF) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
      }
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for _UInt24(uint64_t result, int a2, int a3)
{
  if ((a3 + 0x1FFFFFF) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (!a3) {
    int v3 = 0;
  }
  if (a2)
  {
    *(_WORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 2) = (a2 - 1) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 1) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else if (v3)
  {
    if (v3 == 2) {
      *(_WORD *)(result + 3) = 0;
    }
    else {
      *(unsigned char *)(result + 3) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _UInt24()
{
  return &type metadata for _UInt24;
}

uint64_t sub_100209314()
{
  return sub_1005E2A50();
}

uint64_t sub_100209358()
{
  return sub_100209314();
}

unint64_t sub_100209370()
{
  unint64_t result = qword_100710170;
  if (!qword_100710170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710170);
  }
  return result;
}

ValueMetadata *type metadata accessor for _UInt56()
{
  return &type metadata for _UInt56;
}

uint64_t EmailAddress.address.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NIONetworkInterface.address.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t NIONetworkInterface.netmask.getter()
{
  return sub_10020B0BC();
}

uint64_t sub_10020944C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

uint64_t NIONetworkInterface.broadcastAddress.getter()
{
  return sub_10020B0BC();
}

uint64_t NIONetworkInterface.pointToPointDestinationAddress.getter()
{
  return sub_10020B0BC();
}

uint64_t NIONetworkInterface.multicastSupported.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t NIONetworkInterface.interfaceIndex.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_1002094BC(uint64_t result)
{
  int v2 = *(const char **)(result + 8);
  if (v2)
  {
    uint64_t v3 = result;
    *(void *)(v1 + 16) = sub_1005E1E50();
    *(void *)(v1 + 24) = v4;
    uint64_t v5 = *(char **)(v3 + 24);
    if (!v5 || (unint64_t v6 = sub_1002096D8(v5), (~v6 & 0xF000000000000007) == 0))
    {
      swift_bridgeObjectRelease();
      swift_deallocPartialClassInstance();
      return 0;
    }
    uint64_t v7 = v6;
    *(void *)(v1 + 32) = v6;
    sub_10020AF74(v3 + 32, (uint64_t)v15);
    sub_10020AF74((uint64_t)v15, (uint64_t)&v16);
    uint64_t v8 = v16;
    if (v16)
    {
      swift_retain();
      *(void *)(v1 + 40) = sub_1002096D8(v8);
      int v9 = *(_DWORD *)(v3 + 16);
      if ((v9 & 2) != 0)
      {
LABEL_13:
        sub_10020AF74(v3 + 40, (uint64_t)v14);
        sub_10020AF74((uint64_t)v14, (uint64_t)&v17);
        if (v17)
        {
          *(void *)(v1 + 48) = sub_1002096D8(v17);
          *(void *)(v1 + 56) = 0xF000000000000007;
          goto LABEL_18;
        }
        int v9 = *(_DWORD *)(v3 + 16);
        if ((v9 & 0x10) == 0)
        {
LABEL_21:
          *(int64x2_t *)(v1 + 48) = vdupq_n_s64(0xF000000000000007);
          if ((v9 & 0x8000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_22;
        }
LABEL_16:
        sub_10020AF74(v3 + 40, (uint64_t)v13);
        sub_10020AF74((uint64_t)v13, (uint64_t)&v18);
        uint64_t v10 = v18;
        if (v18)
        {
          *(void *)(v1 + 48) = 0xF000000000000007;
          *(void *)(v1 + 56) = sub_1002096D8(v10);
LABEL_18:
          if ((*(unsigned char *)(v3 + 17) & 0x80) == 0)
          {
LABEL_19:
            char v11 = 0;
LABEL_23:
            *(unsigned char *)(v1 + 64) = v11;
            unsigned int v12 = sub_10020DD3C(v2);
            sub_100209930(v7);
            *(void *)(v1 + 72) = v12;
            return v1;
          }
LABEL_22:
          char v11 = 1;
          goto LABEL_23;
        }
        int v9 = *(_DWORD *)(v3 + 16);
        goto LABEL_21;
      }
    }
    else
    {
      *(void *)(v1 + 40) = 0xF000000000000007;
      int v9 = *(_DWORD *)(v3 + 16);
      if ((v9 & 2) != 0)
      {
        swift_retain();
        goto LABEL_13;
      }
      swift_retain();
    }
    if ((v9 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

unint64_t sub_1002096D8(char *a1)
{
  int v2 = a1[1];
  switch(v2)
  {
    case 1:
      char v23 = *a1;
      sub_10000566C(&qword_100710340);
      uint64_t v24 = swift_allocObject();
      *(unsigned char *)(v24 + 16) = v23;
      *(unsigned char *)(v24 + 17) = 1;
      *(_OWORD *)(v24 + 18) = *(_OWORD *)(a1 + 2);
      *(_OWORD *)(v24 + 34) = *(_OWORD *)(a1 + 18);
      *(_OWORD *)(v24 + 50) = *(_OWORD *)(a1 + 34);
      long long v25 = *(_OWORD *)(a1 + 66);
      long long v26 = *(_OWORD *)(a1 + 82);
      uint64_t v27 = *(void *)(a1 + 98);
      *(_OWORD *)(v24 + 66) = *(_OWORD *)(a1 + 50);
      *(_OWORD *)(v24 + 82) = v25;
      *(_OWORD *)(v24 + 98) = v26;
      unint64_t result = v24 | 0x8000000000000000;
      *(void *)(v24 + 114) = v27;
      break;
    case 30:
      char v12 = *a1;
      __int16 v13 = *((_WORD *)a1 + 1);
      int v14 = *((_DWORD *)a1 + 1);
      uint64_t v16 = *((void *)a1 + 2);
      int v17 = *((_DWORD *)a1 + 6);
      v28[0] = *((void *)a1 + 1);
      uint64_t v15 = v28[0];
      v28[1] = v16;
      sub_10020BC14(30, v28, 0x2EuLL);
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      sub_10000566C(&qword_100710348);
      uint64_t v22 = swift_allocObject();
      *(unsigned char *)(v22 + 16) = v12;
      *(unsigned char *)(v22 + 17) = 30;
      *(_WORD *)(v22 + 18) = v13;
      *(_DWORD *)(v22 + 20) = v14;
      *(void *)(v22 + 24) = v15;
      *(void *)(v22 + 32) = v16;
      *(_DWORD *)(v22 + 40) = v17;
      unint64_t result = v22 | 0x4000000000000000;
      *(void *)(v22 + 48) = v19;
      *(void *)(v22 + 56) = v21;
      break;
    case 2:
      char v3 = *a1;
      __int16 v4 = *((_WORD *)a1 + 1);
      uint64_t v6 = *((void *)a1 + 1);
      LODWORD(v28[0]) = *((_DWORD *)a1 + 1);
      int v5 = v28[0];
      sub_10020BC14(2, v28, 0x10uLL);
      uint64_t v8 = v7;
      uint64_t v10 = v9;
      sub_10000566C(&qword_100710350);
      unint64_t result = swift_allocObject();
      *(unsigned char *)(result + 16) = v3;
      *(unsigned char *)(result + 17) = 2;
      *(_WORD *)(result + 18) = v4;
      *(_DWORD *)(result + 20) = v5;
      *(void *)(result + 24) = v6;
      *(void *)(result + 32) = v8;
      *(void *)(result + 40) = v10;
      break;
    default:
      return 0xF000000000000007;
  }
  return result;
}

uint64_t *NIONetworkInterface.deinit()
{
  return sub_10020B1BC();
}

uint64_t sub_100209930(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t NIONetworkInterface.__deallocating_deinit()
{
  NIONetworkInterface.deinit();
  return swift_deallocClassInstance();
}

uint64_t NIONetworkInterface.debugDescription.getter()
{
  uint64_t v1 = v0;
  int v2 = (void *)0xE000000000000000;
  sub_1005E2C80(24);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[2];
  __int16 v4 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = v3;
  v14._unint64_t object = v4;
  sub_1005E1E30(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = sub_10020B1E8();
  sub_1005E1E30(v15);
  unint64_t v5 = v0[4];
  swift_retain();
  v16._uint64_t countAndFlagsBits = SocketAddress.description.getter(v5);
  sub_1005E1E30(v16);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v6 = v1[5];
  sub_10020B134();
  if (v7)
  {
    uint64_t v10 = 0;
  }
  else
  {
    sub_10020B15C();
    uint64_t v12 = v8;
    __int16 v13 = v9;
    swift_retain();
    v17._uint64_t countAndFlagsBits = SocketAddress.description.getter(v6);
    sub_1005E1E30(v17);
    swift_bridgeObjectRelease();
    sub_100209930(v6);
    uint64_t v10 = v12;
    int v2 = v13;
  }
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = v10;
  v18._unint64_t object = v2;
  sub_1005E1E30(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x6361667265746E49;
}

uint64_t sub_100209AD4()
{
  return NIONetworkInterface.debugDescription.getter();
}

BOOL static NIONetworkInterface.== infix(_:_:)(uint64_t a1)
{
  sub_10020B140(a1);
  BOOL v6 = v6 && v4 == v5;
  if (v6 || (v7 = sub_1005E3290(), BOOL result = 0, (v7 & 1) != 0))
  {
    if (static SocketAddress.== infix(_:_:)(*(void *)(v2 + 32), *(void *)(v1 + 32)))
    {
      sub_10020B094();
      if (v6)
      {
        if (v10 != v9) {
          return 0;
        }
      }
      else
      {
        if (v10 == v9) {
          return 0;
        }
        sub_10020AFDC();
        sub_10020B048();
        if ((v3 & 1) == 0) {
          return 0;
        }
      }
      sub_10020B094();
      if (v6)
      {
        if (v12 == v11) {
          goto LABEL_19;
        }
      }
      else if (v12 != v11)
      {
        sub_10020AFDC();
        sub_10020B048();
        if (v3)
        {
LABEL_19:
          sub_10020B094();
          if (v6)
          {
            if (v14 == v13) {
              return sub_10020B1FC();
            }
          }
          else if (v14 != v13)
          {
            sub_10020AFDC();
            sub_10020B048();
            if (v3) {
              return sub_10020B1FC();
            }
          }
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_100209BF0(uint64_t *a1)
{
  return static NIONetworkInterface.== infix(_:_:)(*a1);
}

uint64_t NIONetworkDevice.name.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NIONetworkDevice.name.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10020B0F4();
    sub_10020B014();
    uint64_t v5 = swift_retain();
    BOOL v6 = sub_10020A8C4(v5);
    sub_10020B02C((uint64_t)v6);
  }
  uint64_t v7 = *v2;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*NIONetworkDevice.name.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_100209D18;
}

uint64_t sub_100209D18(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (int64x2_t **)a1[2];
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for NIONetworkDevice.Backing();
      sub_10020B014();
      uint64_t v5 = sub_10020B0A4();
      *uint64_t v4 = sub_10020A8C4(v5);
      swift_release();
    }
    BOOL v6 = *v4;
    v6[1].i64[0] = v3;
    v6[1].i64[1] = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for NIONetworkDevice.Backing();
      sub_10020B014();
      uint64_t v7 = sub_10020B0A4();
      *uint64_t v4 = sub_10020A8C4(v7);
      swift_release();
    }
    uint64_t v8 = *v4;
    v8[1].i64[0] = v3;
    v8[1].i64[1] = v2;
  }
  return swift_bridgeObjectRelease();
}

uint64_t NIONetworkDevice.address.getter()
{
  return sub_10020B0BC();
}

uint64_t NIONetworkDevice.address.setter()
{
  if ((sub_10020B0D8() & 1) == 0)
  {
    sub_10020B178();
    sub_10020B014();
    uint64_t v2 = sub_10020B11C();
    uint64_t v3 = sub_10020A8C4(v2);
    sub_10020B078((uint64_t)v3);
  }
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 32) = v0;
  return sub_100209930(v4);
}

uint64_t (*NIONetworkDevice.address.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  sub_10020B10C(a1);
  uint64_t v3 = *(void *)(v2 + 32);
  uint64_t *v1 = v3;
  sub_10020944C(v3);
  return sub_100209ECC;
}

uint64_t sub_100209ECC(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    if ((sub_10020B190() & 1) == 0)
    {
      sub_10020B0F4();
      sub_10020B014();
      uint64_t v4 = sub_10020B0A4();
      uint64_t v5 = sub_10020A8C4(v4);
      sub_10020B02C((uint64_t)v5);
    }
    uint64_t v6 = *(void *)(*(void *)v3 + 32);
    *(void *)(*(void *)v3 + 32) = v2;
    sub_100209930(v6);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10020B0F4();
      sub_10020B014();
      uint64_t v7 = sub_10020B0A4();
      uint64_t v8 = sub_10020A8C4(v7);
      sub_10020B02C((uint64_t)v8);
    }
    uint64_t v9 = *(void *)(*(void *)v3 + 32);
    *(void *)(*(void *)v3 + 32) = v2;
    uint64_t v2 = v9;
  }
  return sub_100209930(v2);
}

uint64_t NIONetworkDevice.netmask.getter()
{
  return sub_10020B0BC();
}

uint64_t NIONetworkDevice.netmask.setter()
{
  if ((sub_10020B0D8() & 1) == 0)
  {
    sub_10020B178();
    sub_10020B014();
    uint64_t v2 = sub_10020B11C();
    uint64_t v3 = sub_10020A8C4(v2);
    sub_10020B078((uint64_t)v3);
  }
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 40) = v0;
  return sub_100209930(v4);
}

uint64_t (*NIONetworkDevice.netmask.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  sub_10020B10C(a1);
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t *v1 = v3;
  sub_10020944C(v3);
  return sub_10020A040;
}

uint64_t sub_10020A040(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    if ((sub_10020B190() & 1) == 0)
    {
      sub_10020B0F4();
      sub_10020B014();
      uint64_t v4 = sub_10020B0A4();
      uint64_t v5 = sub_10020A8C4(v4);
      sub_10020B02C((uint64_t)v5);
    }
    uint64_t v6 = *(void *)(*(void *)v3 + 40);
    *(void *)(*(void *)v3 + 40) = v2;
    sub_100209930(v6);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10020B0F4();
      sub_10020B014();
      uint64_t v7 = sub_10020B0A4();
      uint64_t v8 = sub_10020A8C4(v7);
      sub_10020B02C((uint64_t)v8);
    }
    uint64_t v9 = *(void *)(*(void *)v3 + 40);
    *(void *)(*(void *)v3 + 40) = v2;
    uint64_t v2 = v9;
  }
  return sub_100209930(v2);
}

uint64_t NIONetworkDevice.broadcastAddress.getter()
{
  return sub_10020B0BC();
}

uint64_t NIONetworkDevice.broadcastAddress.setter()
{
  if ((sub_10020B0D8() & 1) == 0)
  {
    sub_10020B178();
    sub_10020B014();
    uint64_t v2 = sub_10020B11C();
    uint64_t v3 = sub_10020A8C4(v2);
    sub_10020B078((uint64_t)v3);
  }
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 48) = v0;
  return sub_100209930(v4);
}

uint64_t (*NIONetworkDevice.broadcastAddress.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  sub_10020B10C(a1);
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t *v1 = v3;
  sub_10020944C(v3);
  return sub_10020A1B4;
}

uint64_t sub_10020A1B4(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    if ((sub_10020B190() & 1) == 0)
    {
      sub_10020B0F4();
      sub_10020B014();
      uint64_t v4 = sub_10020B0A4();
      uint64_t v5 = sub_10020A8C4(v4);
      sub_10020B02C((uint64_t)v5);
    }
    uint64_t v6 = *(void *)(*(void *)v3 + 48);
    *(void *)(*(void *)v3 + 48) = v2;
    sub_100209930(v6);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10020B0F4();
      sub_10020B014();
      uint64_t v7 = sub_10020B0A4();
      uint64_t v8 = sub_10020A8C4(v7);
      sub_10020B02C((uint64_t)v8);
    }
    uint64_t v9 = *(void *)(*(void *)v3 + 48);
    *(void *)(*(void *)v3 + 48) = v2;
    uint64_t v2 = v9;
  }
  return sub_100209930(v2);
}

uint64_t NIONetworkDevice.pointToPointDestinationAddress.getter()
{
  return sub_10020B0BC();
}

uint64_t NIONetworkDevice.pointToPointDestinationAddress.setter()
{
  if ((sub_10020B0D8() & 1) == 0)
  {
    sub_10020B178();
    sub_10020B014();
    uint64_t v2 = sub_10020B11C();
    uint64_t v3 = sub_10020A8C4(v2);
    sub_10020B078((uint64_t)v3);
  }
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 56) = v0;
  return sub_100209930(v4);
}

uint64_t (*NIONetworkDevice.pointToPointDestinationAddress.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  sub_10020B10C(a1);
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t *v1 = v3;
  sub_10020944C(v3);
  return sub_10020A328;
}

uint64_t sub_10020A328(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    if ((sub_10020B190() & 1) == 0)
    {
      sub_10020B0F4();
      sub_10020B014();
      uint64_t v4 = sub_10020B0A4();
      uint64_t v5 = sub_10020A8C4(v4);
      sub_10020B02C((uint64_t)v5);
    }
    uint64_t v6 = *(void *)(*(void *)v3 + 56);
    *(void *)(*(void *)v3 + 56) = v2;
    sub_100209930(v6);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10020B0F4();
      sub_10020B014();
      uint64_t v7 = sub_10020B0A4();
      uint64_t v8 = sub_10020A8C4(v7);
      sub_10020B02C((uint64_t)v8);
    }
    uint64_t v9 = *(void *)(*(void *)v3 + 56);
    *(void *)(*(void *)v3 + 56) = v2;
    uint64_t v2 = v9;
  }
  return sub_100209930(v2);
}

uint64_t NIONetworkDevice.multicastSupported.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t NIONetworkDevice.multicastSupported.setter(char a1)
{
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    sub_10020B178();
    sub_10020B014();
    uint64_t v4 = sub_10020B11C();
    uint64_t v5 = sub_10020A8C4(v4);
    uint64_t result = sub_10020B078((uint64_t)v5);
  }
  *(unsigned char *)(*(void *)v1 + 64) = a1 & 1;
  return result;
}

uint64_t (*NIONetworkDevice.multicastSupported.modify(uint64_t a1))(uint64_t *a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(*(void *)v1 + 64);
  return sub_10020A464;
}

uint64_t sub_10020A464(uint64_t *a1)
{
  uint64_t v1 = *a1;
  char v2 = *((unsigned char *)a1 + 8);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    type metadata accessor for NIONetworkDevice.Backing();
    sub_10020B014();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_10020A8C4(v4);
    uint64_t result = sub_10020B078((uint64_t)v5);
  }
  *(unsigned char *)(*(void *)v1 + 64) = v2;
  return result;
}

uint64_t NIONetworkDevice.interfaceIndex.getter(uint64_t a1)
{
  return *(void *)(a1 + 72);
}

uint64_t NIONetworkDevice.interfaceIndex.setter()
{
  uint64_t result = sub_10020B0D8();
  if ((result & 1) == 0)
  {
    sub_10020B178();
    sub_10020B014();
    uint64_t v3 = sub_10020B11C();
    uint64_t v4 = sub_10020A8C4(v3);
    uint64_t result = sub_10020B078((uint64_t)v4);
  }
  *(void *)(*(void *)v1 + 72) = v0;
  return result;
}

uint64_t (*NIONetworkDevice.interfaceIndex.modify(void *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = *(void *)(*(void *)v1 + 72);
  return sub_10020A54C;
}

uint64_t sub_10020A54C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    type metadata accessor for NIONetworkDevice.Backing();
    sub_10020B014();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_10020A8C4(v4);
    uint64_t result = sub_10020B078((uint64_t)v5);
  }
  *(void *)(*(void *)v1 + 72) = v2;
  return result;
}

uint64_t NIONetworkDevice.init(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  type metadata accessor for NIONetworkDevice.Backing();
  sub_10020B014();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10020944C(v4);
  sub_10020944C(v5);
  sub_10020944C(v6);
  uint64_t v9 = sub_10020A980(v1, v2, v3, v4, v5, v6, v7, v8);
  swift_release();
  return v9;
}

uint64_t NIONetworkDevice.init(name:address:netmask:broadcastAddress:pointToPointDestinationAddress:multicastSupported:interfaceIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  return sub_10020A980(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10020A6FC(uint64_t result)
{
  int64x2_t v2 = vdupq_n_s64(0xF000000000000007);
  *(int64x2_t *)(v1 + 32) = v2;
  *(int64x2_t *)(v1 + 48) = v2;
  uint64_t v3 = *(const char **)(result + 8);
  if (v3)
  {
    uint64_t v4 = result;
    *(void *)(v1 + 16) = sub_1005E1E50();
    *(void *)(v1 + 24) = v5;
    uint64_t v6 = *(char **)(v4 + 24);
    if (v6) {
      unint64_t v7 = sub_1002096D8(v6);
    }
    else {
      unint64_t v7 = 0xF000000000000007;
    }
    uint64_t v8 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = v7;
    sub_100209930(v8);
    uint64_t v9 = *(char **)(v4 + 32);
    if (v9) {
      unint64_t v10 = sub_1002096D8(v9);
    }
    else {
      unint64_t v10 = 0xF000000000000007;
    }
    uint64_t v11 = *(void *)(v1 + 40);
    *(void *)(v1 + 40) = v10;
    sub_100209930(v11);
    int v12 = *(_DWORD *)(v4 + 16);
    if ((v12 & 2) != 0 && (sub_10020AF74(v4 + 40, (uint64_t)v21), sub_10020AF74((uint64_t)v21, (uint64_t)&v22), v22))
    {
      unint64_t v13 = sub_1002096D8(v22);
      uint64_t v14 = *(void *)(v1 + 48);
      *(void *)(v1 + 48) = v13;
      sub_100209930(v14);
      unint64_t v15 = 0xF000000000000007;
    }
    else if ((v12 & 0x10) != 0 {
           && (sub_10020AF74(v4 + 40, (uint64_t)v20), sub_10020AF74((uint64_t)v20, (uint64_t)&v23), (Swift::String v16 = v23) != 0))
    }
    {
      uint64_t v17 = *(void *)(v1 + 48);
      *(void *)(v1 + 48) = 0xF000000000000007;
      sub_100209930(v17);
      unint64_t v15 = sub_1002096D8(v16);
    }
    else
    {
      uint64_t v18 = *(void *)(v1 + 48);
      unint64_t v15 = 0xF000000000000007;
      *(void *)(v1 + 48) = 0xF000000000000007;
      sub_100209930(v18);
    }
    uint64_t v19 = *(void *)(v1 + 56);
    *(void *)(v1 + 56) = v15;
    sub_100209930(v19);
    *(unsigned char *)(v1 + 64) = (v12 & 0x8000) != 0;
    *(void *)(v1 + 72) = sub_10020DD3C(v3);
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

int64x2_t *sub_10020A8C4(uint64_t a1)
{
  int64x2_t v3 = vdupq_n_s64(0xF000000000000007);
  v1[2] = v3;
  v1[3] = v3;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  v1[1].i64[0] = v5;
  v1[1].i64[1] = v4;
  uint64_t v6 = *(void *)(a1 + 32);
  v1[2].i64[0] = v6;
  swift_bridgeObjectRetain();
  sub_10020944C(v6);
  sub_100209930(0xF000000000000007);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = v1[2].i64[1];
  v1[2].i64[1] = v7;
  sub_10020944C(v7);
  sub_100209930(v8);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = v1[3].i64[0];
  v1[3].i64[0] = v9;
  sub_10020944C(v9);
  sub_100209930(v10);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = v1[3].i64[1];
  v1[3].i64[1] = v11;
  sub_10020944C(v11);
  sub_100209930(v12);
  v1[4].i8[0] = *(unsigned char *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  swift_release();
  v1[4].i64[1] = v13;
  return v1;
}

uint64_t sub_10020A980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(int64x2_t *)(v8 + 40) = vdupq_n_s64(0xF000000000000007);
  *(void *)(v8 + 56) = 0xF000000000000007;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  sub_100209930(0xF000000000000007);
  uint64_t v14 = *(void *)(v8 + 40);
  *(void *)(v8 + 40) = a4;
  sub_100209930(v14);
  uint64_t v15 = *(void *)(v8 + 48);
  *(void *)(v8 + 48) = a5;
  sub_100209930(v15);
  uint64_t v16 = *(void *)(v8 + 56);
  *(void *)(v8 + 56) = a6;
  sub_100209930(v16);
  *(unsigned char *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = a8;
  return v8;
}

uint64_t *sub_10020AA10()
{
  swift_bridgeObjectRelease();
  sub_100209930(v0[4]);
  sub_100209930(v0[5]);
  sub_100209930(v0[6]);
  sub_100209930(v0[7]);
  return v0;
}

uint64_t sub_10020AA50()
{
  sub_10020AA10();
  return swift_deallocClassInstance();
}

uint64_t NIONetworkDevice.debugDescription.getter(void *a1)
{
  int64x2_t v2 = (void *)0xE000000000000000;
  sub_1005E2C80(21);
  swift_bridgeObjectRelease();
  uint64_t v3 = a1[2];
  uint64_t v4 = (void *)a1[3];
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = v3;
  v13._unint64_t object = v4;
  sub_1005E1E30(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = sub_10020B1E8();
  v14._unint64_t object = (void *)0xEA00000000002073;
  sub_1005E1E30(v14);
  sub_10020944C(a1[4]);
  sub_10000566C(&qword_100710178);
  v15._uint64_t countAndFlagsBits = sub_1005E1CA0();
  sub_1005E1E30(v15);
  swift_bridgeObjectRelease();
  unint64_t v5 = a1[5];
  sub_10020B134();
  if (v6)
  {
    uint64_t v9 = 0;
  }
  else
  {
    sub_10020B15C();
    uint64_t v11 = v7;
    uint64_t v12 = v8;
    swift_retain();
    v16._uint64_t countAndFlagsBits = SocketAddress.description.getter(v5);
    sub_1005E1E30(v16);
    swift_bridgeObjectRelease();
    sub_100209930(v5);
    uint64_t v9 = v11;
    int64x2_t v2 = v12;
  }
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = v9;
  v17._unint64_t object = v2;
  sub_1005E1E30(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x20656369766544;
}

uint64_t sub_10020ABDC()
{
  return NIONetworkDevice.debugDescription.getter(*v0);
}

BOOL static NIONetworkDevice.== infix(_:_:)(uint64_t a1)
{
  sub_10020B140(a1);
  BOOL v4 = v4 && v2 == v3;
  if (v4 || (char v5 = sub_1005E3290(), result = 0, (v5 & 1) != 0))
  {
    sub_10020B094();
    if (v4)
    {
      if (v8 != v7) {
        return 0;
      }
    }
    else
    {
      if (v8 == v7) {
        return 0;
      }
      sub_10020AFDC();
      sub_10020B048();
      if ((v1 & 1) == 0) {
        return 0;
      }
    }
    sub_10020B094();
    if (v4)
    {
      if (v10 != v9) {
        return 0;
      }
    }
    else
    {
      if (v10 == v9) {
        return 0;
      }
      sub_10020AFDC();
      sub_10020B048();
      if ((v1 & 1) == 0) {
        return 0;
      }
    }
    sub_10020B094();
    if (v4)
    {
      if (v12 == v11) {
        goto LABEL_24;
      }
    }
    else if (v12 != v11)
    {
      sub_10020AFDC();
      sub_10020B048();
      if (v1)
      {
LABEL_24:
        sub_10020B094();
        if (v4)
        {
          if (v14 == v13) {
            return sub_10020B1FC();
          }
        }
        else if (v14 != v13)
        {
          sub_10020AFDC();
          sub_10020B048();
          if (v1) {
            return sub_10020B1FC();
          }
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_10020ACFC(uint64_t *a1)
{
  return static NIONetworkDevice.== infix(_:_:)(*a1);
}

void NIONetworkDevice.hash(into:)(uint64_t a1, void *a2)
{
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  uint64_t v3 = a2[4];
  sub_10020B134();
  if (v4)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    swift_retain();
    sub_10020B210();
    sub_100209930(v3);
  }
  uint64_t v5 = a2[5];
  sub_10020B134();
  if (v4)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    swift_retain();
    sub_10020B210();
    sub_100209930(v5);
  }
  uint64_t v6 = a2[6];
  sub_10020B134();
  if (v4)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    swift_retain();
    sub_10020B210();
    sub_100209930(v6);
  }
  uint64_t v7 = a2[7];
  sub_10020B134();
  if (v4)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    swift_retain();
    sub_10020B210();
    sub_100209930(v7);
  }
  sub_1005E3410(a2[9]);
}

Swift::Int NIONetworkDevice.hashValue.getter(void *a1)
{
  sub_1005E33F0();
  NIONetworkDevice.hash(into:)((uint64_t)v3, a1);
  return sub_1005E3470();
}

Swift::Int sub_10020AE78()
{
  return NIONetworkDevice.hashValue.getter(*v0);
}

void sub_10020AE80(uint64_t a1)
{
  NIONetworkDevice.hash(into:)(a1, *v1);
}

Swift::Int sub_10020AE88()
{
  char v1 = *v0;
  sub_1005E33F0();
  NIONetworkDevice.hash(into:)((uint64_t)v3, v1);
  return sub_1005E3470();
}

uint64_t type metadata accessor for NIONetworkDevice.Backing()
{
  return self;
}

unint64_t sub_10020AEF4()
{
  unint64_t result = qword_100710180;
  if (!qword_100710180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100710180);
  }
  return result;
}

uint64_t type metadata accessor for NIONetworkInterface()
{
  return self;
}

ValueMetadata *type metadata accessor for NIONetworkDevice()
{
  return &type metadata for NIONetworkDevice;
}

uint64_t sub_10020AF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100710338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_10020AFDC()
{
  sub_10020944C(v1);
  sub_10020944C(v0);
  return static SocketAddress.== infix(_:_:)(v0, v1);
}

uint64_t sub_10020B014()
{
  return swift_allocObject();
}

uint64_t sub_10020B02C(uint64_t a1)
{
  void *v1 = a1;
  return swift_release();
}

uint64_t sub_10020B048()
{
  sub_100209930(v1);
  return sub_100209930(v0);
}

uint64_t sub_10020B078(uint64_t a1)
{
  void *v1 = a1;
  return swift_release();
}

uint64_t sub_10020B0A4()
{
  return swift_retain();
}

uint64_t sub_10020B0BC()
{
  sub_10020944C(v0);
  return v0;
}

uint64_t sub_10020B0D8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_10020B0F4()
{
  return type metadata accessor for NIONetworkDevice.Backing();
}

uint64_t sub_10020B10C(uint64_t result)
{
  *(void *)(result + 8) = v1;
  return result;
}

uint64_t sub_10020B11C()
{
  return swift_retain();
}

uint64_t sub_10020B140(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_10020B178()
{
  return type metadata accessor for NIONetworkDevice.Backing();
}

uint64_t sub_10020B190()
{
  sub_10020944C(v0);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t *sub_10020B1BC()
{
  sub_100209930(v0[5]);
  sub_100209930(v0[6]);
  sub_100209930(v0[7]);
  return v0;
}

uint64_t sub_10020B1E8()
{
  return 0x736572646461203ALL;
}

BOOL sub_10020B1FC()
{
  return *(void *)(v1 + 72) == *(void *)(v0 + 72);
}

void sub_10020B210()
{
  SocketAddress.hash(into:)(v0, v1);
}

uint64_t sub_10020B22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return a3 + a1;
  }
  else {
    return 0;
  }
}

BOOL static SocketAddress.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      if (a2 >> 62 == 1
        && *(unsigned __int8 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x11) == *(unsigned __int8 *)((a2 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                          + 0x11)
        && *(unsigned __int16 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x12) == *(unsigned __int16 *)((a2 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                            + 0x12)
        && *(_DWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x14) == *(_DWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x14)
        && *(_DWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x28) == *(_DWORD *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x28))
      {
        uint64_t v2 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        __s1[0] = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        __s1[1] = v2;
        uint64_t v3 = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
        __s2[0] = *(void *)((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
        __s2[1] = v3;
        return memcmp(__s1, __s2, 0x10uLL) == 0;
      }
    }
    else if (a2 >> 62 == 2)
    {
      uint64_t v6 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      if (*(unsigned __int8 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x11) == *(unsigned __int8 *)((a2 & 0x3FFFFFFFFFFFFFFFLL)
                                                                                          + 0x11))
      {
        long long v7 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x22);
        v13[0] = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x12);
        v13[1] = v7;
        long long v8 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x42);
        long long v9 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x52);
        long long v10 = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x62);
        uint64_t v11 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x72);
        v13[2] = *(_OWORD *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x32);
        v13[3] = v8;
        _OWORD v13[4] = v9;
        v13[5] = v10;
        uint64_t v14 = v11;
        swift_retain();
        return sub_10020C0DC((uint64_t)v13, v6, 0x68uLL);
      }
    }
    return 0;
  }
  if (a2 >> 62
    || *(unsigned __int8 *)(a1 + 17) != *(unsigned __int8 *)(a2 + 17)
    || *(unsigned __int16 *)(a1 + 18) != *(unsigned __int16 *)(a2 + 18))
  {
    return 0;
  }
  return *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20);
}

uint64_t SocketAddress.init(_:)(unint64_t a1, uint64_t a2)
{
  int v4 = a1;
  unint64_t v5 = HIDWORD(a1);
  int v11 = HIDWORD(a1);
  sub_10020DCF4(a1, &v11);
  uint64_t v9 = v7;
  uint64_t v10 = v6;
  if (v2)
  {
    sub_10020DC7C();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_10000566C(&qword_100710350);
    uint64_t result = swift_allocObject();
    *(_DWORD *)(result + 16) = v4;
    *(_DWORD *)(result + 20) = v5;
    *(void *)(result + 24) = a2;
    *(void *)(result + 32) = v10;
    *(void *)(result + 40) = v9;
  }
  return result;
}

uint64_t SocketAddress.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  v15[0] = a2;
  v15[1] = a3;
  sub_10020DCD8(a1, v15);
  if (v4)
  {
    sub_10020DC7C();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    sub_10000566C(&qword_100710348);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = a2;
    *(void *)(v13 + 32) = a3;
    *(_DWORD *)(v13 + 40) = a4;
    *(void *)(v13 + 48) = v11;
    *(void *)(v13 + 56) = v12;
    return v13 | 0x4000000000000000;
  }
  return result;
}

unint64_t SocketAddress.init(_:)(const void *a1)
{
  sub_10000566C(&qword_100710340);
  uint64_t v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), a1, 0x6AuLL);
  return v2 | 0x8000000000000000;
}

uint64_t QuotaRoot.storage.getter()
{
  return swift_retain();
}

uint64_t SocketAddressError.FailedToParseIPByteBuffer.hash(into:)()
{
  return sub_1005E3400();
}

BOOL static QuotaRoot.__derived_struct_equals(_:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static ByteBuffer.== infix(_:_:)(a1, a2, a3 & 0xFFFFFFFFFFFFFFLL, a4, a5, a6 & 0xFFFFFFFFFFFFFFLL);
}

Swift::Int LiteralSizeParsingError.hashValue.getter()
{
  return sub_1005E3470();
}

Swift::Int sub_10020B75C()
{
  return LiteralSizeParsingError.hashValue.getter();
}

uint64_t sub_10020B778()
{
  return SocketAddressError.FailedToParseIPByteBuffer.hash(into:)();
}

Swift::Int sub_10020B794()
{
  return sub_1005E3470();
}

BOOL sub_10020B818(uint64_t a1, uint64_t a2)
{
  return static QuotaRoot.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned __int16 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48), *(void *)a2, *(void *)(a2 + 8), *(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned __int16 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48));
}

uint64_t SocketAddress.IPv4Address.address.getter(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t SocketAddress.IPv4Address.host.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SocketAddress.IPv6Address.address.getter(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t SocketAddress.IPv6Address.host.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 SocketAddress.UnixSocketAddress.address.getter@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int16 v2 = *(_WORD *)(a1 + 120);
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 96);
  uint64_t v8 = *(void *)(a1 + 112);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 80) = v7;
  *(void *)(a2 + 96) = v8;
  *(_WORD *)(a2 + 104) = v2;
  return result;
}

uint64_t SocketAddress.description.getter(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    long long v3 = *(void **)(a1 + 40);
    sub_10020DD28();
    if (v6)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = 0;
      long long v3 = 0;
    }
    LODWORD(v26) = *(_DWORD *)(a1 + 20);
    uint64_t v20 = swift_retain();
    sub_10020DCF4(v20, &v26);
    if (v1) {
      goto LABEL_26;
    }
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    uint64_t v23 = SocketAddress.port.getter(a1);
    if ((v24 & 1) == 0)
    {
      v27._uint64_t countAndFlagsBits = v23;
      v31._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v31);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t countAndFlagsBits = v28;
      uint64_t v18 = (void *)v29;
      v19._uint64_t countAndFlagsBits = 880169033;
      goto LABEL_19;
    }
    goto LABEL_25;
  }
  if (a1 >> 62 != 1)
  {
    uint64_t v28 = 0x5D5344555BLL;
    unint64_t v29 = 0xE500000000000000;
    v7._uint64_t countAndFlagsBits = SocketAddress.pathname.getter(a1);
    if (v7._object)
    {
      unint64_t object = v7._object;
    }
    else
    {
      v7._uint64_t countAndFlagsBits = 0;
      unint64_t object = (void *)0xE000000000000000;
    }
    v7._unint64_t object = object;
    sub_1005E1E30(v7);
    goto LABEL_23;
  }
  uint64_t v4 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
  long long v3 = *(void **)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
  sub_10020DD28();
  if (v5)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
    long long v3 = 0;
  }
  unint64_t v9 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v28 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  unint64_t v29 = v9;
  uint64_t v10 = swift_retain();
  sub_10020DCD8(v10, &v28);
  if (!v1)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    v27._uint64_t countAndFlagsBits = 0;
    v27._unint64_t object = (void *)0xE000000000000000;
    uint64_t v15 = SocketAddress.port.getter(a1);
    if ((v16 & 1) == 0)
    {
      uint64_t v26 = v15;
      v30._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v30);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v27._countAndFlagsBits;
      uint64_t v18 = v27._object;
      v19._uint64_t countAndFlagsBits = 913723465;
LABEL_19:
      uint64_t v28 = 91;
      unint64_t v29 = 0xE100000000000000;
      v19._unint64_t object = (void *)0xE400000000000000;
      sub_1005E1E30(v19);
      swift_bridgeObjectRelease();
      v32._uint64_t countAndFlagsBits = 93;
      v32._unint64_t object = (void *)0xE100000000000000;
      sub_1005E1E30(v32);
      if (v3)
      {
        v27._uint64_t countAndFlagsBits = v4;
        v27._unint64_t object = v3;
        swift_bridgeObjectRetain();
        v33._uint64_t countAndFlagsBits = 47;
        v33._unint64_t object = (void *)0xE100000000000000;
        sub_1005E1E30(v33);
        v34._uint64_t countAndFlagsBits = v13;
        v34._unint64_t object = v14;
        sub_1005E1E30(v34);
        v35._uint64_t countAndFlagsBits = 58;
        v35._unint64_t object = (void *)0xE100000000000000;
        sub_1005E1E30(v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v27._uint64_t countAndFlagsBits = v13;
        v27._unint64_t object = v14;
        v36._uint64_t countAndFlagsBits = 58;
        v36._unint64_t object = (void *)0xE100000000000000;
        sub_1005E1E30(v36);
      }
      sub_1005E1E30(v27);
      swift_bridgeObjectRelease();
      v37._uint64_t countAndFlagsBits = countAndFlagsBits;
      v37._unint64_t object = v18;
      sub_1005E1E30(v37);
LABEL_23:
      swift_bridgeObjectRelease();
      return v28;
    }
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease();
    __break(1u);
  }
LABEL_26:
  swift_bridgeObjectRelease();
  sub_10020DC7C();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_10020BC14(int a1, const void *a2, size_t a3)
{
  Swift::String v7 = (char *)sub_10020D6D4(0, a3);
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    if ((a3 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1002EE2C0();
  Swift::String v7 = v8;
  if ((a3 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (HIDWORD(a3))
  {
LABEL_9:
    __break(1u);
    return;
  }
  sub_1001F5110(a1, a2, v7 + 32, a3);
  if (!v3) {
    sub_1005E1E60();
  }
  swift_bridgeObjectRelease();
}

uint64_t SocketAddress.port.getter(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v1 = (unsigned __int16 *)(a1 + 18);
    return bswap32(*v1) >> 16;
  }
  if (a1 >> 62 == 1)
  {
    uint64_t v1 = (unsigned __int16 *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 18);
    return bswap32(*v1) >> 16;
  }
  return 0;
}

uint64_t SocketAddress.pathname.getter(uint64_t a1)
{
  if (a1 < 0) {
    return sub_1005E1E50();
  }
  else {
    return 0;
  }
}

uint64_t SocketAddress.protocol.getter(unint64_t a1)
{
  return *(unsigned int *)((char *)&unk_1005F84D4 + ((a1 >> 60) & 0xC));
}

uint64_t SocketAddress.ipAddress.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
    uint64_t v2 = 0;
    if (a1 >> 62 != 1) {
      return v2;
    }
    uint64_t v3 = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
    v9[0] = *(void *)((a1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    v9[1] = v3;
    uint64_t v4 = swift_retain();
    sub_10020DCD8(v4, v9);
    if (!v1)
    {
      uint64_t v2 = v5;
LABEL_7:
      swift_release();
      return v2;
    }
  }
  else
  {
    LODWORD(v9[0]) = *(_DWORD *)(a1 + 20);
    uint64_t v6 = swift_retain();
    sub_10020DCF4(v6, v9);
    if (!v1)
    {
      uint64_t v2 = v7;
      goto LABEL_7;
    }
  }
  sub_10020DC7C();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t SocketAddress.port.setter(uint64_t result, char a2)
{
  uint64_t v3 = *v2;
  unint64_t v4 = (unint64_t)*v2 >> 62;
  if (!v4)
  {
    if (a2) {
      unint64_t v15 = 0;
    }
    else {
      unint64_t v15 = result;
    }
    if ((v15 & 0x8000000000000000) == 0)
    {
      if (!(v15 >> 16))
      {
        char v16 = *(unsigned char *)(v3 + 16);
        char v17 = *(unsigned char *)(v3 + 17);
        int v18 = *(_DWORD *)(v3 + 20);
        uint64_t v19 = *(void *)(v3 + 24);
        unsigned int v20 = bswap32(v15) >> 16;
        uint64_t v22 = *(void *)(v3 + 32);
        uint64_t v21 = *(void *)(v3 + 40);
        swift_bridgeObjectRetain();
        swift_release();
        sub_10000566C(&qword_100710350);
        uint64_t result = swift_allocObject();
        *(unsigned char *)(result + 16) = v16;
        *(unsigned char *)(result + 17) = v17;
        *(_WORD *)(result + 18) = v20;
        *(_DWORD *)(result + 20) = v18;
        *(void *)(result + 24) = v19;
        *(void *)(result + 32) = v22;
        *(void *)(result + 40) = v21;
        goto LABEL_15;
      }
      goto LABEL_21;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v4 == 1)
  {
    if (a2) {
      unint64_t v5 = 0;
    }
    else {
      unint64_t v5 = result;
    }
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (!(v5 >> 16))
    {
      char v6 = *(unsigned char *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      char v7 = *(unsigned char *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x11);
      int v23 = *(_DWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x14);
      uint64_t v9 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v8 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
      int v10 = *(_DWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x28);
      unsigned int v11 = bswap32(v5) >> 16;
      uint64_t v13 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v12 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x38);
      swift_bridgeObjectRetain();
      swift_release();
      sub_10000566C(&qword_100710348);
      uint64_t v14 = swift_allocObject();
      *(unsigned char *)(v14 + 16) = v6;
      *(unsigned char *)(v14 + 17) = v7;
      *(_WORD *)(v14 + 18) = v11;
      *(_DWORD *)(v14 + 20) = v23;
      *(void *)(v14 + 24) = v9;
      *(void *)(v14 + 32) = v8;
      *(_DWORD *)(v14 + 40) = v10;
      uint64_t result = v14 | 0x4000000000000000;
      *(void *)(v14 + 48) = v13;
      *(void *)(v14 + 56) = v12;
LABEL_15:
      uint64_t *v2 = result;
      return result;
    }
    __break(1u);
    goto LABEL_20;
  }
  if ((a2 & 1) == 0) {
LABEL_22:
  }
    __break(1u);
  return result;
}