uint64_t sub_10046D3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned char *v14;
  uint64_t v15;
  uint64_t result;
  int v17;
  uint64_t v18;
  NSObject *v19;
  int v20;
  uint8_t *v21;
  uint8_t *v22;
  os_signpost_id_t v23;
  void (*v24)(unsigned char *, uint64_t);
  unsigned char *v25;
  uint64_t v26;
  unsigned char v27[4];
  int v28;
  uint64_t v29;
  int v30;

  v1 = v0;
  v29 = sub_1005E0D40();
  v2 = *(void *)(v29 - 8);
  v3 = __chkstk_darwin(v29);
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v27[-v6];
  v8 = sub_1005E0D80();
  v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v12 - 8);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v15, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  LOBYTE(v15) = sub_1004EB15C();
  sub_100484F64((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  result = sub_1004EB15C();
  v17 = v15;
  if (v15 != result)
  {
    v18 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v18, v8);
    OSSignpostID.init(engine:kind:connectionID:)(*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_engineID), 1, *(_DWORD *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
    v19 = sub_1005E0D70();
    v20 = sub_1005E26F0();
    if (sub_1005E28A0())
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v29);
      v21 = (uint8_t *)swift_slowAlloc();
      v28 = v20;
      v22 = v21;
      *(_DWORD *)v21 = 67109120;
      v30 = v17;
      sub_1005E2960();
      v23 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, (os_signpost_type_t)v28, v23, "Connection.imapStateUpdate", "%u", v22, 8u);
      swift_slowDealloc();

      v24 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
      v25 = v7;
      v26 = v29;
      v24(v25, v29);
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      return ((uint64_t (*)(unsigned char *, uint64_t))v24)(v5, v26);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v29);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return result;
}

uint64_t sub_10046D764(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v53);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 >> 60) - 2 > 3)
  {
LABEL_5:
    uint64_t v51 = v4;
    uint64_t v15 = *(unsigned int *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
    swift_beginAccess();
    uint64_t v17 = *v16;
    swift_bridgeObjectRetain();
    int v52 = v15;
    int v18 = sub_1004882A0(v15, v17);
    uint64_t v54 = v20;
    uint64_t v55 = v19;
    swift_bridgeObjectRelease();
    v21 = (void *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents);
    swift_beginAccess();
    if (*v21)
    {
      sub_1004849C8(a1);
      v23 = sub_100469604();
      v24 = *v22;
      if (*v22)
      {
        v25 = v22;
        int v26 = v18;
        sub_1004849C8(a1);
        uint64_t v27 = v55;
        swift_bridgeObjectRetain();
        uint64_t v28 = v54;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        void *v25 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v24 = sub_1004D0E30(0, v24[2] + 1, 1, v24);
          void *v25 = v24;
        }
        unint64_t v31 = v24[2];
        unint64_t v30 = v24[3];
        if (v31 >= v30 >> 1)
        {
          v24 = sub_1004D0E30((void *)(v30 > 1), v31 + 1, 1, v24);
          void *v25 = v24;
        }
        v24[2] = v31 + 1;
        v32 = &v24[5 * v31];
        *((_DWORD *)v32 + 8) = v52;
        v32[5] = a1;
        *((_DWORD *)v32 + 12) = v26;
        v32[7] = v27;
        v32[8] = v28;
        ((void (*)(uint64_t *, void))v23)(v57, 0);
        sub_100484A20(a1);
        swift_bridgeObjectRelease();
      }
      else
      {
        ((void (*)(uint64_t *, void))v23)(v57, 0);
        sub_100484A20(a1);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      int v50 = v18;
      uint64_t v33 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      sub_100484EFC(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v9, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v34 = v51;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v9, v51);
      swift_retain();
      sub_1004849C8(a1);
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      v35 = sub_1005E0EB0();
      os_log_type_t v36 = sub_1005E25A0();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        v57[0] = v49;
        *(_DWORD *)uint64_t v37 = 68158210;
        LODWORD(v56) = 2;
        sub_1005E2960();
        *(_WORD *)(v37 + 8) = 256;
        uint64_t v38 = *(int *)(v53 + 20);
        uint64_t v53 = (uint64_t)v7;
        uint64_t v39 = v33 + v38;
        LOBYTE(v56) = *(unsigned char *)(v33 + v38);
        sub_1005E2960();
        *(_WORD *)(v37 + 11) = 2082;
        uint64_t v40 = ConnectionID.debugDescription.getter(*(unsigned int *)(v39 + 4));
        uint64_t v56 = sub_100481E54(v40, v41, v57);
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "[%.*hhx-%{public}s] Trying to enqueue event outside withEnqueuedSend.", (uint8_t *)v37, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v53, v51);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v34);
      }
      uint64_t v42 = v55;
      uint64_t v43 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v44 = *(void *)(v43 + 8);
        uint64_t ObjectType = swift_getObjectType();
        sub_10000566C(&qword_100715F58);
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = xmmword_1005F6670;
        *(_DWORD *)(v46 + 32) = v52;
        *(void *)(v46 + 40) = a1;
        *(_DWORD *)(v46 + 48) = v50;
        uint64_t v47 = v54;
        *(void *)(v46 + 56) = v42;
        *(void *)(v46 + 64) = v47;
        v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 8);
        sub_1004849C8(a1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v48(v46, ObjectType, v44);
        sub_100484A20(a1);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        sub_100484A20(a1);
      }
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_100484EFC(v13, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 2:
        memcpy(v57, v12, 0x15AuLL);
        sub_100482E3C((uint64_t)v57);
        goto LABEL_5;
      case 3:
      case 4:
      case 5:
        return result;
      default:
        uint64_t result = sub_100484F64((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        break;
    }
  }
  return result;
}

unint64_t sub_10046DE48(unint64_t a1)
{
  unint64_t v213 = a1;
  uint64_t v1 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  v209 = (char *)&v201 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v208 = (char *)&v201 - v4;
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v210 = *(void *)(v5 - 8);
  uint64_t v211 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v207 = (unint64_t)&v201 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v205 = (uint64_t)&v201 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v204 = (char *)&v201 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_t v203 = (os_log_t)((char *)&v201 - v13);
  uint64_t v14 = __chkstk_darwin(v12);
  v16 = ((char *)&v201 - v15);
  uint64_t v17 = __chkstk_darwin(v14);
  v201 = (char *)&v201 - v18;
  __chkstk_darwin(v17);
  v202 = (char *)&v201 - v19;
  uint64_t v206 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v20 = __chkstk_darwin(v206);
  v22 = (char *)&v201 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  v25 = (char *)&v201 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v201 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  unint64_t v31 = (char *)&v201 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v201 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v201 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v201 - v38;
  uint64_t v40 = type metadata accessor for UntaggedResponse(0);
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v42 = __chkstk_darwin(v41);
  __chkstk_darwin(v42);
  uint64_t v46 = (unint64_t *)((char *)&v201 - v45);
  if (v213 >> 60 != 4)
  {
    if (v213 >> 60 == 3)
    {
      uint64_t v47 = v44;
      uint64_t v48 = v43;
      unint64_t v49 = v213;
      uint64_t v50 = swift_projectBox();
      sub_100484EFC(v50, (uint64_t)v46, type metadata accessor for UntaggedResponse);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        unint64_t v51 = *v46;
        unint64_t v207 = v46[1];
        uint64_t v52 = v212;
        uint64_t v53 = v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
        sub_100484EFC(v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v39, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v55 = v210;
        uint64_t v54 = v211;
        uint64_t v56 = v202;
        (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v202, v39, v211);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_10044AE60(v51);
        swift_bridgeObjectRetain();
        sub_10044AE60(v51);
        swift_bridgeObjectRetain();
        v57 = sub_1005E0EB0();
        os_log_type_t v58 = sub_1005E25A0();
        int v59 = v58;
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v60 = swift_slowAlloc();
          uint64_t v205 = swift_slowAlloc();
          v215[0] = v205;
          *(_DWORD *)uint64_t v60 = 68158466;
          LODWORD(v214) = 2;
          sub_1005E2960();
          *(_WORD *)(v60 + 8) = 256;
          uint64_t v61 = *(int *)(v206 + 20);
          LODWORD(v206) = v59;
          uint64_t v62 = v53 + v61;
          LOBYTE(v214) = *(unsigned char *)(v53 + v61);
          sub_1005E2960();
          *(_WORD *)(v60 + 11) = 2082;
          uint64_t v63 = ConnectionID.debugDescription.getter(*(unsigned int *)(v62 + 4));
          uint64_t v214 = sub_100481E54(v63, v64, v215);
          sub_1005E2960();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 21) = 2082;
          uint64_t v52 = v212;
          sub_10044AE60(v51);
          swift_bridgeObjectRetain();
          ResponseText.debugDescription.getter(v51);
          uint64_t v66 = v65;
          unint64_t v68 = v67;
          sub_1004831AC(v51);
          swift_bridgeObjectRelease();
          uint64_t v214 = sub_100481E54(v66, v68, v215);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004831AC(v51);
          swift_bridgeObjectRelease();
          sub_1004831AC(v51);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v206, "[%.*hhx-%{public}s] Received BYE %{public}s", (uint8_t *)v60, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1004831AC(v51);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v202, v211);
        }
        else
        {
          sub_1004831AC(v51);
          swift_release_n();
          swift_bridgeObjectRelease();
          sub_1004831AC(v51);
          swift_bridgeObjectRelease();
          sub_1004831AC(v51);

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
        }
LABEL_33:
        uint64_t v194 = (uint64_t)v208;
        uint64_t v193 = (uint64_t)v209;
        unint64_t v49 = v213;
        goto LABEL_34;
      }
      sub_100484F64((uint64_t)v46, type metadata accessor for UntaggedResponse);
      uint64_t v111 = swift_projectBox();
      sub_100484EFC(v111, v48, type metadata accessor for UntaggedResponse);
      uint64_t v52 = v212;
      uint64_t v112 = v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      sub_100484EFC(v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v37, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v113 = v210;
      v114 = v201;
      v115 = v37;
      uint64_t v116 = v211;
      (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v201, v115, v211);
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v207 = v48;
      uint64_t v117 = v47;
      sub_100484EFC(v48, v47, type metadata accessor for UntaggedResponse);
      v118 = v114;
      v119 = sub_1005E0EB0();
      os_log_type_t v120 = sub_1005E2590();
      int v121 = v120;
      if (os_log_type_enabled(v119, v120))
      {
        uint64_t v122 = swift_slowAlloc();
        v215[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v122 = 68158466;
        LODWORD(v214) = 2;
        sub_1005E2960();
        *(_WORD *)(v122 + 8) = 256;
        uint64_t v123 = *(int *)(v206 + 20);
        LODWORD(v206) = v121;
        uint64_t v124 = v112 + v123;
        LOBYTE(v214) = *(unsigned char *)(v112 + v123);
        sub_1005E2960();
        *(_WORD *)(v122 + 11) = 2082;
        uint64_t v125 = ConnectionID.debugDescription.getter(*(unsigned int *)(v124 + 4));
        uint64_t v214 = sub_100481E54(v125, v126, v215);
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v122 + 21) = 2082;
        uint64_t v52 = v212;
        Swift::String v127 = UntaggedResponse.makeDescriptionWithoutPII()();
        uint64_t v214 = sub_100481E54(v127._countAndFlagsBits, (unint64_t)v127._object, v215);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100484F64(v117, type metadata accessor for UntaggedResponse);
        _os_log_impl((void *)&_mh_execute_header, v119, (os_log_type_t)v206, "[%.*hhx-%{public}s] Received 'S: %{public}s' from network.", (uint8_t *)v122, 0x1Fu);
        swift_arrayDestroy();
        unint64_t v49 = v213;
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v113 + 8))(v118, v211);
      }
      else
      {

        sub_100484F64(v117, type metadata accessor for UntaggedResponse);
        swift_release_n();
        (*(void (**)(char *, uint64_t))(v113 + 8))(v118, v116);
      }
      sub_100484F64(v207, type metadata accessor for UntaggedResponse);
    }
    else
    {
      uint64_t v52 = v212;
      uint64_t v99 = v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      sub_100484EFC(v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v22, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v101 = v210;
      uint64_t v100 = v211;
      uint64_t v102 = v207;
      (*(void (**)(unint64_t, char *, uint64_t))(v210 + 32))(v207, v22, v211);
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v49 = v213;
      sub_1004849C8(v213);
      sub_1004849C8(v49);
      v103 = sub_1005E0EB0();
      os_log_type_t v104 = sub_1005E2590();
      if (os_log_type_enabled(v103, v104))
      {
        uint64_t v105 = swift_slowAlloc();
        v215[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v105 = 68158466;
        LODWORD(v214) = 2;
        sub_1005E2960();
        *(_WORD *)(v105 + 8) = 256;
        uint64_t v106 = v99 + *(int *)(v206 + 20);
        LOBYTE(v214) = *(unsigned char *)v106;
        sub_1005E2960();
        *(_WORD *)(v105 + 11) = 2082;
        uint64_t v107 = ConnectionID.debugDescription.getter(*(unsigned int *)(v106 + 4));
        uint64_t v214 = sub_100481E54(v107, v108, v215);
        unint64_t v49 = v213;
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v105 + 21) = 2080;
        unint64_t v109 = Event.Payload.shortLogIdentifier.getter(v49);
        uint64_t v214 = sub_100481E54(v109, v110, v215);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100484A20(v49);
        sub_100484A20(v49);
        _os_log_impl((void *)&_mh_execute_header, v103, v104, "[%.*hhx-%{public}s] Received '%s' from network.", (uint8_t *)v105, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(unint64_t, uint64_t))(v101 + 8))(v207, v211);
      }
      else
      {
        swift_release_n();
        sub_100484A20(v49);
        sub_100484A20(v49);

        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v102, v100);
      }
    }
    uint64_t v194 = (uint64_t)v208;
    uint64_t v193 = (uint64_t)v209;
LABEL_34:
    sub_10046D764(v49);
    uint64_t v195 = *(void *)(v52 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
    LOBYTE(v195) = *(unsigned char *)(v195 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 36));
    unint64_t v196 = v52 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    uint64_t v197 = v52 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_100484EFC(v197, v194, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    swift_retain();
    sub_1004A2340(v49, v195, (uint64_t)sub_100484E1C, v52, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100484EF8, v52, v196);
    sub_100484EFC(v197, v193, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    swift_beginAccess();
    sub_100482D54(v194, v197);
    swift_endAccess();
    sub_100469198(v193);
    sub_100484F64(v194, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    sub_100484F64(v193, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    swift_release();
    return sub_10047D4E0();
  }
  uint64_t v69 = (uint64_t)v31;
  uint64_t v70 = (uint64_t)v28;
  v71 = v204;
  uint64_t v72 = v205;
  os_log_t v73 = v203;
  v74 = (char *)*(unsigned int *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
  unint64_t v75 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
  uint64_t v76 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
  uint64_t v77 = *(void *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
  int v78 = *(unsigned __int8 *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
  unint64_t v207 = *(unsigned __int8 *)((v213 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  if (!v78)
  {
    v204 = v74;
    uint64_t v52 = v212;
    uint64_t v128 = v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v25, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v129 = v76;
    uint64_t v130 = v211;
    uint64_t v131 = v72;
    (*(void (**)(uint64_t, char *, uint64_t))(v210 + 32))(v72, v25, v211);
    swift_retain_n();
    uint64_t v132 = v76;
    uint64_t v133 = v77;
    sub_100483498(v75, v132, v77, 0);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    uint64_t v134 = v129;
    sub_100483498(v75, v129, v77, 0);
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    v135 = sub_1005E0EB0();
    os_log_type_t v136 = sub_1005E2590();
    int v137 = v136;
    if (os_log_type_enabled(v135, v136))
    {
      uint64_t v138 = swift_slowAlloc();
      os_log_t v203 = (os_log_t)swift_slowAlloc();
      v215[0] = (uint64_t)v203;
      *(_DWORD *)uint64_t v138 = 68158978;
      LODWORD(v214) = 2;
      sub_1005E2960();
      *(_WORD *)(v138 + 8) = 256;
      uint64_t v139 = *(int *)(v206 + 20);
      LODWORD(v206) = v137;
      uint64_t v140 = v128 + v139;
      LOBYTE(v214) = *(unsigned char *)(v128 + v139);
      sub_1005E2960();
      *(_WORD *)(v138 + 11) = 2082;
      uint64_t v141 = ConnectionID.debugDescription.getter(*(unsigned int *)(v140 + 4));
      uint64_t v214 = sub_100481E54(v141, v142, v215);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 21) = 2082;
      uint64_t v143 = Tag.debugDescription.getter(v207 | ((void)v204 << 32));
      uint64_t v214 = sub_100481E54(v143, v144, v215);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 31) = 2082;
      uint64_t v214 = sub_100481E54(19279, 0xE200000000000000, v215);
      sub_1005E2960();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 41) = 2082;
      sub_10044AE60(v75);
      swift_bridgeObjectRetain();
      ResponseText.debugDescription.getter(v75);
      uint64_t v146 = v145;
      unint64_t v148 = v147;
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      uint64_t v149 = v146;
      uint64_t v52 = v212;
      uint64_t v214 = sub_100481E54(v149, v148, v215);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v135, (os_log_type_t)v206, "[%.*hhx-%{public}s] Received 'S: %{public}s %{public}s %{public}s' from network.", (uint8_t *)v138, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1004832E0(v75, v134, v133, 0);
      (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v205, v211);
    }
    else
    {
      swift_release_n();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);

      swift_bridgeObjectRelease();
      sub_1004832E0(v75, v134, v133, 0);
      (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v131, v130);
    }
    goto LABEL_33;
  }
  if (v78 != 1)
  {
    v204 = v74;
    uint64_t v150 = v212;
    uint64_t v151 = v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v34, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v152 = v210;
    v153 = v34;
    uint64_t v52 = v150;
    (*(void (**)(NSObject *, char *, uint64_t))(v210 + 32))(v16, v153, v211);
    swift_retain_n();
    uint64_t v154 = v77;
    sub_100483498(v75, v76, v77, 2u);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    sub_100483498(v75, v76, v77, 2u);
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    v155 = sub_1005E0EB0();
    os_log_type_t v156 = sub_1005E25A0();
    if (os_log_type_enabled(v155, v156))
    {
      uint64_t v157 = swift_slowAlloc();
      os_log_t v203 = v16;
      uint64_t v158 = v157;
      v202 = (char *)swift_slowAlloc();
      v215[0] = (uint64_t)v202;
      *(_DWORD *)uint64_t v158 = 68158978;
      LODWORD(v214) = 2;
      uint64_t v205 = v76;
      sub_1005E2960();
      *(_WORD *)(v158 + 8) = 256;
      uint64_t v159 = v151 + *(int *)(v206 + 20);
      LOBYTE(v214) = *(unsigned char *)v159;
      sub_1005E2960();
      *(_WORD *)(v158 + 11) = 2082;
      uint64_t v160 = ConnectionID.debugDescription.getter(*(unsigned int *)(v159 + 4));
      uint64_t v214 = sub_100481E54(v160, v161, v215);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v158 + 21) = 2082;
      uint64_t v162 = Tag.debugDescription.getter(v207 | ((void)v204 << 32));
      uint64_t v214 = sub_100481E54(v162, v163, v215);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v158 + 31) = 2082;
      uint64_t v214 = sub_100481E54(4473154, 0xE300000000000000, v215);
      sub_1005E2960();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      *(_WORD *)(v158 + 41) = 2082;
      sub_10044AE60(v75);
      swift_bridgeObjectRetain();
      uint64_t v164 = v205;
      ResponseText.debugDescription.getter(v75);
      uint64_t v166 = v165;
      unint64_t v168 = v167;
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      uint64_t v169 = v166;
      uint64_t v52 = v212;
      uint64_t v214 = sub_100481E54(v169, v168, v215);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v155, v156, "[%.*hhx-%{public}s] Received 'S: %{public}s %{public}s %{public}s' from network.", (uint8_t *)v158, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1004832E0(v75, v164, v154, 2u);
      (*(void (**)(os_log_t, uint64_t))(v210 + 8))(v203, v211);
    }
    else
    {
      swift_release_n();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);

      swift_bridgeObjectRelease();
      sub_1004832E0(v75, v76, v154, 2u);
      (*(void (**)(NSObject *, uint64_t))(v152 + 8))(v16, v211);
    }
    goto LABEL_33;
  }
  uint64_t v79 = v77;
  if ((~v75 & 0xF000000000000007) == 0 || v75 != 0x8000000000000068)
  {
    uint64_t v52 = v212;
    uint64_t v170 = v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    uint64_t v171 = v70;
    sub_100484EFC(v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v70, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v172 = v210;
    uint64_t v173 = v211;
    uint64_t v174 = v171;
    v175 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v210 + 32))(v71, v174, v211);
    swift_retain_n();
    sub_100483498(v75, v76, v79, 1u);
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    sub_100483498(v75, v76, v79, 1u);
    sub_10044AE60(v75);
    swift_bridgeObjectRetain();
    v176 = sub_1005E0EB0();
    os_log_type_t v177 = sub_1005E25A0();
    uint64_t v205 = v76;
    os_log_type_t v178 = v177;
    os_log_t v203 = v176;
    if (os_log_type_enabled(v176, v177))
    {
      v179 = v74;
      uint64_t v180 = swift_slowAlloc();
      v202 = (char *)swift_slowAlloc();
      v215[0] = (uint64_t)v202;
      *(_DWORD *)uint64_t v180 = 68158978;
      LODWORD(v214) = 2;
      sub_1005E2960();
      *(_WORD *)(v180 + 8) = 256;
      uint64_t v181 = v170 + *(int *)(v206 + 20);
      LOBYTE(v214) = *(unsigned char *)v181;
      sub_1005E2960();
      *(_WORD *)(v180 + 11) = 2082;
      uint64_t v182 = ConnectionID.debugDescription.getter(*(unsigned int *)(v181 + 4));
      uint64_t v214 = sub_100481E54(v182, v183, v215);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v180 + 21) = 2082;
      uint64_t v184 = Tag.debugDescription.getter(v207 | ((void)v179 << 32));
      uint64_t v214 = sub_100481E54(v184, v185, v215);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      *(_WORD *)(v180 + 31) = 2082;
      uint64_t v214 = sub_100481E54(20302, 0xE200000000000000, v215);
      sub_1005E2960();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      *(_WORD *)(v180 + 41) = 2082;
      sub_10044AE60(v75);
      swift_bridgeObjectRetain();
      uint64_t v186 = v205;
      ResponseText.debugDescription.getter(v75);
      uint64_t v188 = v187;
      unint64_t v190 = v189;
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      uint64_t v191 = v188;
      uint64_t v52 = v212;
      uint64_t v214 = sub_100481E54(v191, v190, v215);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      os_log_t v192 = v203;
      _os_log_impl((void *)&_mh_execute_header, v203, v178, "[%.*hhx-%{public}s] Received 'S: %{public}s %{public}s %{public}s' from network.", (uint8_t *)v180, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004832E0(v75, v186, v79, 1u);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v204, v211);
    }
    else
    {
      swift_release_n();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004831AC(v75);

      swift_bridgeObjectRelease();
      sub_1004831AC(v75);
      swift_bridgeObjectRelease();
      sub_1004832E0(v75, v205, v79, 1u);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v175, v173);
    }
    goto LABEL_33;
  }
  v204 = v74;
  uint64_t v80 = v212;
  uint64_t v81 = v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  uint64_t v82 = v69;
  sub_100484EFC(v212 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v69, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  uint64_t v83 = v210;
  uint64_t v84 = v211;
  os_log_t v85 = v73;
  (*(void (**)(os_log_t, uint64_t, uint64_t))(v210 + 32))(v73, v82, v211);
  swift_retain();
  sub_10044AE60(0x8000000000000068);
  swift_retain();
  sub_100483498(0x8000000000000068, v76, v79, 1u);
  sub_10044AE60(0x8000000000000068);
  swift_bridgeObjectRetain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_10044AE60(0x8000000000000068);
  swift_bridgeObjectRetain();
  sub_10044AE60(0x8000000000000068);
  swift_bridgeObjectRetain();
  sub_100483498(0x8000000000000068, v76, v79, 1u);
  sub_10044AE60(0x8000000000000068);
  swift_bridgeObjectRetain();
  v86 = sub_1005E0EB0();
  os_log_type_t v87 = sub_1005E25A0();
  if (os_log_type_enabled(v86, v87))
  {
    uint64_t v88 = swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    uint64_t v205 = v76;
    v215[0] = v89;
    *(_DWORD *)uint64_t v88 = 68158978;
    LODWORD(v214) = 2;
    sub_1005E2960();
    *(_WORD *)(v88 + 8) = 256;
    uint64_t v90 = v81 + *(int *)(v206 + 20);
    LOBYTE(v214) = *(unsigned char *)v90;
    sub_1005E2960();
    *(_WORD *)(v88 + 11) = 2082;
    uint64_t v91 = ConnectionID.debugDescription.getter(*(unsigned int *)(v90 + 4));
    uint64_t v214 = sub_100481E54(v91, v92, v215);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 21) = 2082;
    uint64_t v93 = Tag.debugDescription.getter(v207 | ((void)v204 << 32));
    uint64_t v214 = sub_100481E54(v93, v94, v215);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 31) = 2082;
    uint64_t v214 = sub_100481E54(20302, 0xE200000000000000, v215);
    sub_1005E2960();
    sub_1004831AC(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1004831AC(0x8000000000000068);
    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 41) = 2082;
    sub_10044AE60(0x8000000000000068);
    swift_bridgeObjectRetain();
    ResponseText.debugDescription.getter(0x8000000000000068);
    uint64_t v96 = v95;
    unint64_t v98 = v97;
    sub_1004831AC(0x8000000000000068);
    swift_bridgeObjectRelease();
    uint64_t v214 = sub_100481E54(v96, v98, v215);
    sub_1005E2960();
    uint64_t v80 = v212;
    swift_bridgeObjectRelease();
    sub_1004831AC(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1004831AC(0x8000000000000068);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v86, v87, "[%.*hhx-%{public}s] Received 'S: %{public}s %{public}s %{public}s' from network. Server is temporarily unavailable.", (uint8_t *)v88, 0x33u);
    swift_arrayDestroy();
    uint64_t v76 = v205;
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_t, uint64_t))(v210 + 8))(v203, v211);
  }
  else
  {
    swift_release_n();
    sub_1004831AC(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1004831AC(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1004831AC(0x8000000000000068);
    swift_bridgeObjectRelease();
    sub_1004831AC(0x8000000000000068);

    swift_bridgeObjectRelease();
    (*(void (**)(os_log_t, uint64_t))(v83 + 8))(v85, v84);
  }
  uint64_t v199 = swift_allocObject();
  v200 = (void *)(v80 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
  swift_beginAccess();
  *(void *)(v199 + 16) = *v200;
  swift_bridgeObjectRetain();
  *(_DWORD *)(v199 + 24) = *(_DWORD *)ConnectionID.invalid.unsafeMutableAddressor();
  *(void *)(v199 + 32) = &_swiftEmptySetSingleton;
  *(void *)(v199 + 40) = &_swiftEmptySetSingleton;
  sub_10046D764(v199 | 0x1000000000000000);
  swift_release();
  CommandConnection.cancel()();
  sub_1004831AC(0x8000000000000068);
  swift_bridgeObjectRelease();
  return sub_1004832E0(0x8000000000000068, v76, v79, 1u);
}

uint64_t sub_10046FD8C()
{
  uint64_t v1 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v12[-v5];
  uint64_t v7 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v7, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484EFC((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload - 3 >= 3)
  {
    if (EnumCaseMultiPayload >= 2)
    {
      sub_100484F64((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_100484F64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t v10 = swift_allocObject();
      uint64_t v11 = (void *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
      swift_beginAccess();
      *(void *)(v10 + 16) = *v11;
      swift_bridgeObjectRetain();
      sub_10046D764(v10 | 0x6000000000000000);
      return swift_release();
    }
    sub_100484F64((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  return sub_100484F64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
}

uint64_t sub_10046FF60(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v41 = a3;
  unint64_t v42 = a2;
  uint64_t v44 = type metadata accessor for ConnectionEvent(0);
  __chkstk_darwin(v44);
  uint64_t v45 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1005E0ED0();
  uint64_t v46 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v40);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OutboundContent(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005E1850();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v4 + 24);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    uint64_t v21 = (uint64_t *)(v4 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
    swift_beginAccess();
    uint64_t v22 = sub_1004E1DC0(*v21);
    if (v23)
    {
      uint64_t v29 = v4 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      sub_100484EFC(v4 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v30 = v46;
      unint64_t v31 = v10;
      uint64_t v32 = v43;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v8, v31, v43);
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v33 = sub_1005E0EB0();
      os_log_type_t v34 = sub_1005E2590();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 68158210;
        LODWORD(v47) = 2;
        sub_1005E2960();
        *(_WORD *)(v35 + 8) = 256;
        uint64_t v36 = v29 + *(int *)(v40 + 20);
        LOBYTE(v47) = *(unsigned char *)v36;
        sub_1005E2960();
        *(_WORD *)(v35 + 11) = 2082;
        uint64_t v37 = ConnectionID.debugDescription.getter(*(unsigned int *)(v36 + 4));
        uint64_t v47 = sub_100481E54(v37, v38, &v48);
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "[%.*hhx-%{public}s] Trying to send handshake reply, but no barrier command is running.", (uint8_t *)v35, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v32);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v32);
      }
      sub_1005E12F0();
      type metadata accessor for ConnectionEvent.FailureReason(0);
      uint64_t v39 = v45;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_1004704EC(v39);
      uint64_t v27 = type metadata accessor for ConnectionEvent;
      uint64_t v28 = (uint64_t)v39;
    }
    else
    {
      uint64_t v24 = v22;
      unint64_t v25 = v42;
      *(void *)uint64_t v13 = a1;
      *((void *)v13 + 1) = v25;
      char v26 = v41 & 1;
      v13[16] = v41 & 1;
      swift_storeEnumTagMultiPayload();
      sub_10044B198(a1, v25, v26);
      sub_10048D264(v24, v13);
      uint64_t v27 = type metadata accessor for OutboundContent;
      uint64_t v28 = (uint64_t)v13;
    }
    return sub_100484F64(v28, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1004704EC(NSObject *a1)
{
  v844 = 0;
  os_log_t v845 = a1;
  os_log_t v831 = (os_log_t)type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v831);
  uint64_t v832 = (uint64_t)&v801 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v826 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v826);
  os_log_t v834 = (os_log_t)((char *)&v801 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  uint64_t v843 = (uint64_t)&v801 - v4;
  uint64_t v5 = sub_1005E1650();
  uint64_t v827 = *(void *)(v5 - 8);
  uint64_t v828 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  v809 = (char *)&v801 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v816 = (char *)&v801 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v821 = (char *)&v801 - v11;
  uint64_t v808 = v12;
  __chkstk_darwin(v10);
  v810 = (char *)&v801 - v13;
  uint64_t v14 = sub_1005E0ED0();
  uint64_t v846 = *(void *)(v14 - 8);
  uint64_t v847 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  v839 = (char *)&v801 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  os_log_t v835 = (os_log_t)((char *)&v801 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  v841 = (char *)&v801 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  os_log_t v840 = (os_log_t)((char *)&v801 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  v820 = (char *)&v801 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v833 = (char *)&v801 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v819 = (char *)&v801 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v818 = (char *)&v801 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v805 = (char *)&v801 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v806 = (char *)&v801 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v811 = (char *)&v801 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v815 = (char *)&v801 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v837 = (uint64_t *)((char *)&v801 - v40);
  uint64_t v41 = __chkstk_darwin(v39);
  v823 = (char *)&v801 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v838 = (uint64_t *)((char *)&v801 - v44);
  __chkstk_darwin(v43);
  os_log_t v822 = (os_log_t)((char *)&v801 - v45);
  uint64_t v46 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v47 = __chkstk_darwin(v46 - 8);
  os_log_t v829 = (os_log_t)((char *)&v801 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v825 = (uint64_t)&v801 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  unint64_t v830 = (unint64_t)&v801 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v55 = (char *)&v801 - v54;
  uint64_t v56 = __chkstk_darwin(v53);
  uint64_t v814 = (uint64_t)&v801 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  os_log_t v824 = (os_log_t)((char *)&v801 - v59);
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v813 = (uint64_t)&v801 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v812 = (uint64_t)&v801 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v802 = (uint64_t)&v801 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v801 = (uint64_t)&v801 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v803 = (uint64_t)&v801 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v807 = (uint64_t)&v801 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  uint64_t v804 = (uint64_t)&v801 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  uint64_t v817 = (uint64_t)&v801 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  int v78 = (char *)&v801 - v77;
  __chkstk_darwin(v76);
  uint64_t v80 = (char *)&v801 - v79;
  uint64_t v81 = type metadata accessor for ConnectionEvent.FailureReason(0);
  uint64_t v82 = __chkstk_darwin(v81);
  v836 = (uint64_t *)((char *)&v801 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v82);
  uint64_t v842 = (uint64_t)&v801 - v84;
  uint64_t v85 = sub_1005E12C0();
  uint64_t v86 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v88 = (char *)&v801 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for ConnectionEvent(0);
  __chkstk_darwin(v89);
  uint64_t v91 = (char *)&v801 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100484EFC((uint64_t)v845, (uint64_t)v91, type metadata accessor for ConnectionEvent);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v197 = v842;
      sub_1004853A0((uint64_t)v91, v842, type metadata accessor for ConnectionEvent.FailureReason);
      v198 = (objc_class *)v848;
      uint64_t v199 = *(unsigned int *)(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
      v200 = (uint64_t *)(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
      swift_beginAccess();
      uint64_t v201 = *v200;
      v839 = (char *)v200;
      swift_bridgeObjectRetain();
      LODWORD(v840) = sub_1004882A0(v199, v201);
      v841 = v202;
      os_log_t v845 = v203;
      swift_bridgeObjectRelease();
      uint64_t v204 = (uint64_t)v836;
      sub_100484EFC(v197, (uint64_t)v836, type metadata accessor for ConnectionEvent.FailureReason);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      unint64_t v207 = v837;
      uint64_t v206 = v838;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          uint64_t v450 = v827;
          uint64_t v449 = v828;
          v451 = *(uint64_t (**)(uint64_t, uint64_t))(v827 + 88);
          int v452 = v451(v204, v828);
          int v453 = enum case for NWError.posix(_:);
          if (v452 == enum case for NWError.posix(_:))
          {
            v454 = v810;
            (*(void (**)(char *, uint64_t, uint64_t))(v450 + 16))(v810, v204, v449);
            (*(void (**)(char *, uint64_t))(v450 + 96))(v454, v449);
            if (*(_DWORD *)v454 == 89)
            {
              uint64_t v455 = v804;
              sub_100484EFC((uint64_t)v198 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v804, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
              (*(void (**)(uint64_t *, uint64_t, uint64_t))(v846 + 32))(v207, v455, v847);
              uint64_t v456 = swift_allocObject();
              *(void *)(v456 + 16) = sub_1004839DC;
              *(void *)(v456 + 24) = v198;
              uint64_t v457 = swift_allocObject();
              *(void *)(v457 + 16) = sub_1004854A0;
              *(void *)(v457 + 24) = v456;
              swift_retain_n();
              swift_retain();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              swift_release();
              uint64_t v458 = swift_allocObject();
              *(void *)(v458 + 16) = sub_1004839DC;
              *(void *)(v458 + 24) = v198;
              uint64_t v459 = swift_allocObject();
              *(void *)(v459 + 16) = sub_100485478;
              *(void *)(v459 + 24) = v458;
              uint64_t v460 = swift_allocObject();
              *(void *)(v460 + 16) = j___s15IMAP2Connection07CommandB0C12underlyingID0A8Protocol010UnderlyingbE0Vvg;
              *(void *)(v460 + 24) = v198;
              uint64_t v461 = swift_allocObject();
              os_log_t v834 = (os_log_t)v461;
              *(_DWORD *)(v461 + 16) = v840;
              os_log_t v462 = v845;
              *(void *)(v461 + 24) = v841;
              *(void *)(v461 + 32) = v462;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              os_log_t v824 = (os_log_t)sub_1005E0EB0();
              LODWORD(v823) = sub_1005E25C0();
              os_log_t v829 = (os_log_t)swift_allocObject();
              LOBYTE(v829[2].isa) = 16;
              os_log_t v835 = (os_log_t)swift_allocObject();
              LOBYTE(v835[2].isa) = 4;
              v838 = (uint64_t *)swift_allocObject();
              *((unsigned char *)v838 + 16) = 0;
              unint64_t v830 = swift_allocObject();
              *(unsigned char *)(v830 + 16) = 1;
              uint64_t v463 = swift_allocObject();
              *(void *)(v463 + 16) = sub_10035BBC8;
              *(void *)(v463 + 24) = v457;
              uint64_t v464 = swift_allocObject();
              *(void *)(v464 + 16) = sub_100485490;
              *(void *)(v464 + 24) = v463;
              uint64_t v832 = swift_allocObject();
              *(unsigned char *)(v832 + 16) = 34;
              v833 = (char *)swift_allocObject();
              v833[16] = 8;
              uint64_t v465 = swift_allocObject();
              *(void *)(v465 + 16) = sub_1004839E0;
              *(void *)(v465 + 24) = v459;
              uint64_t v466 = swift_allocObject();
              *(void *)(v466 + 16) = sub_10048547C;
              *(void *)(v466 + 24) = v465;
              uint64_t v467 = swift_allocObject();
              *(unsigned char *)(v467 + 16) = 0;
              v468 = (char *)v467;
              uint64_t v469 = swift_allocObject();
              *(unsigned char *)(v469 + 16) = 8;
              v470 = (char *)v469;
              uint64_t v471 = swift_allocObject();
              *(void *)(v471 + 16) = sub_100485488;
              *(void *)(v471 + 24) = v460;
              uint64_t v472 = swift_allocObject();
              uint64_t v825 = v472;
              *(void *)(v472 + 16) = sub_100485494;
              *(void *)(v472 + 24) = v471;
              os_log_t v831 = (os_log_t)swift_allocObject();
              LOBYTE(v831[2].isa) = 0;
              os_log_t v822 = (os_log_t)swift_allocObject();
              LOBYTE(v822[2].isa) = 8;
              uint64_t v473 = swift_allocObject();
              os_log_t v474 = v834;
              *(void *)(v473 + 16) = sub_1004857EC;
              *(void *)(v473 + 24) = v474;
              v475 = swift_allocObject();
              os_log_t v834 = v475;
              v475[2].isa = (Class)sub_10018A134;
              v475[3].isa = (Class)v473;
              v821 = (char *)v466;
              v819 = (char *)v464;
              sub_10000566C(&qword_100715F48);
              uint64_t v476 = swift_allocObject();
              *(_OWORD *)(v476 + 16) = xmmword_1005F67A0;
              *(void *)(v476 + 32) = sub_1004857E8;
              unint64_t v477 = v830;
              *(void *)(v476 + 40) = v829;
              *(void *)(v476 + 48) = sub_1004857E8;
              *(void *)(v476 + 56) = v835;
              *(void *)(v476 + 64) = sub_100187A80;
              *(void *)(v476 + 72) = 0;
              *(void *)(v476 + 80) = sub_1004857E8;
              *(void *)(v476 + 88) = v838;
              *(void *)(v476 + 96) = sub_1004857E8;
              *(void *)(v476 + 104) = v477;
              *(void *)(v476 + 112) = sub_100483A70;
              *(void *)(v476 + 120) = v464;
              *(void *)(v476 + 128) = sub_1004857E8;
              v478 = v833;
              *(void *)(v476 + 136) = v832;
              *(void *)(v476 + 144) = sub_1004857E8;
              *(void *)(v476 + 152) = v478;
              *(void *)(v476 + 160) = sub_100485498;
              *(void *)(v476 + 168) = v466;
              *(void *)(v476 + 176) = sub_1004857E8;
              *(void *)(v476 + 184) = v468;
              *(void *)(v476 + 192) = sub_1004857E8;
              *(void *)(v476 + 200) = v470;
              *(void *)(v476 + 208) = sub_1004840A0;
              *(void *)(v476 + 216) = v825;
              *(void *)(v476 + 224) = sub_1004857E8;
              *(void *)(v476 + 232) = v831;
              *(void *)(v476 + 240) = sub_1004857E8;
              *(void *)(v476 + 248) = v822;
              *(void *)(v476 + 256) = sub_1004840A0;
              *(void *)(v476 + 264) = v834;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v479 = v819;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v820 = v468;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              os_log_t v480 = v824;
              swift_bridgeObjectRelease();
              if (!os_log_type_enabled(v480, (os_log_type_t)v823))
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();

                (*(void (**)(uint64_t *, uint64_t))(v846 + 8))(v837, v847);
                uint64_t v248 = v848;
                goto LABEL_91;
              }
              os_log_t v481 = v835;
              v818 = v470;
              uint64_t v482 = swift_slowAlloc();
              v483 = swift_slowAlloc();
              uint64_t v849 = (uint64_t)v483;
              v850[0] = 0;
              *(_WORD *)uint64_t v482 = 1282;
              *(unsigned char *)(v482 + 2) = v829[2].isa;
              if (!v844)
              {
                swift_release();
                *(unsigned char *)(v482 + 3) = v481[2].isa;
                v853[0] = (void *)(v482 + 4);
                swift_release();
                *(_DWORD *)(v482 + 4) = 2;
                os_log_t v484 = v834;
                os_log_t v835 = v483;
                *(unsigned char *)(v482 + 8) = *((unsigned char *)v838 + 16);
                swift_release();
                *(unsigned char *)(v482 + 9) = *(unsigned char *)(v830 + 16);
                uint64_t v485 = swift_release();
                (*((void (**)(uint64_t *__return_ptr, uint64_t))v479 + 2))(v854, v485);
                sub_1005E2960();
                swift_release();
                *(unsigned char *)(v482 + 11) = *(unsigned char *)(v832 + 16);
                uint64_t v486 = v825;
                swift_release();
                *(unsigned char *)(v482 + 12) = v833[16];
                v853[0] = (void *)(v482 + 13);
                v487 = (uint64_t (**)(void))v821;
                swift_release();
                sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, v487[2]);
                swift_release();
                v488 = v853[0];
                *(unsigned char *)v853[0] = v820[16];
                swift_release();
                *((unsigned char *)v488 + 1) = v818[16];
                uint64_t v489 = swift_release();
                (*(void (**)(uint64_t *__return_ptr, uint64_t))(v486 + 16))(v854, v489);
                sub_1005E2960();
                swift_release();
                *((unsigned char *)v488 + 10) = v831[2].isa;
                swift_release();
                *((unsigned char *)v488 + 11) = v822[2].isa;
                uint64_t v490 = v846;
                uint64_t v491 = swift_release();
                ((void (*)(uint64_t *__return_ptr, uint64_t))v484[2].isa)(v854, v491);
                sub_1005E2960();
                v853[0] = (void *)((char *)v488 + 20);
                uint64_t v248 = v848;
                swift_release();
                os_log_t v492 = v824;
                _os_log_impl((void *)&_mh_execute_header, v824, (os_log_type_t)v823, "[%.*hhx-%{public}s] [C%llu] Connection did fail (%ld running command(s)): Operation canceled", (uint8_t *)v482, 0x29u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(uint64_t *, uint64_t))(v490 + 8))(v837, v847);
LABEL_91:
                uint64_t v246 = v843;
                v247 = v839;
                (*(void (**)(void *, uint64_t))(v827 + 8))(v836, v828);
LABEL_70:
                swift_beginAccess();
                *(void *)v247 = _swiftEmptyArrayStorage;
                swift_bridgeObjectRelease();
                swift_endAccess();
                uint64_t v601 = v248 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
                swift_beginAccess();
                sub_100484EFC(v601, v246, (uint64_t (*)(void))type metadata accessor for ConnectionState);
                LOBYTE(v601) = ConnectionState.isClosed.getter();
                sub_100484F64(v246, (uint64_t (*)(void))type metadata accessor for ConnectionState);
                if (v601)
                {
                  sub_100484F64(v842, type metadata accessor for ConnectionEvent.FailureReason);
                  swift_bridgeObjectRelease();
                  return swift_bridgeObjectRelease();
                }
                else
                {
                  swift_storeEnumTagMultiPayload();
                  sub_1004694E8(v246);
                  uint64_t v602 = swift_allocObject();
                  v603 = (void *)(v248 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
                  swift_beginAccess();
                  *(void *)(v602 + 16) = *v603;
                  *(_DWORD *)(v602 + 24) = v840;
                  os_log_t v604 = v845;
                  *(void *)(v602 + 32) = v841;
                  *(void *)(v602 + 40) = v604;
                  swift_bridgeObjectRetain();
                  sub_10046DE48(v602 | 0x1000000000000000);
                  swift_release();
                  return sub_100484F64(v842, type metadata accessor for ConnectionEvent.FailureReason);
                }
              }
              goto LABEL_100;
            }
          }
          uint64_t v493 = v450;
          v838 = *(uint64_t **)(v450 + 32);
          ((void (*)(char *, uint64_t, uint64_t))v838)(v821, v204, v449);
          v494 = *(void (**)(void))(v450 + 16);
          v495 = v816;
          v494();
          int v496 = v451((uint64_t)v495, v449);
          if (v496 == v453)
          {
            (*(void (**)(_DWORD *, uint64_t))(v493 + 96))(v495, v449);
            LODWORD(v838) = *v495;
            uint64_t v497 = v848;
            uint64_t v498 = v807;
            sub_100484EFC(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v807, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            (*(void (**)(char *, uint64_t, uint64_t))(v846 + 32))(v815, v498, v847);
            uint64_t v499 = swift_allocObject();
            *(void *)(v499 + 16) = sub_1004839DC;
            *(void *)(v499 + 24) = v497;
            uint64_t v500 = swift_allocObject();
            *(void *)(v500 + 16) = sub_1004854A0;
            *(void *)(v500 + 24) = v499;
            swift_retain_n();
            swift_retain();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            swift_release();
            uint64_t v501 = swift_allocObject();
            *(void *)(v501 + 16) = sub_1004839DC;
            *(void *)(v501 + 24) = v497;
            uint64_t v502 = swift_allocObject();
            *(void *)(v502 + 16) = sub_100485478;
            *(void *)(v502 + 24) = v501;
            uint64_t v503 = swift_allocObject();
            *(void *)(v503 + 16) = j___s15IMAP2Connection07CommandB0C12underlyingID0A8Protocol010UnderlyingbE0Vvg;
            *(void *)(v503 + 24) = v497;
            uint64_t v504 = swift_allocObject();
            *(_DWORD *)(v504 + 16) = v840;
            os_log_t v505 = v845;
            *(void *)(v504 + 24) = v841;
            *(void *)(v504 + 32) = v505;
            v818 = (char *)swift_allocObject();
            *((_DWORD *)v818 + 4) = v838;
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            os_log_t v824 = (os_log_t)sub_1005E0EB0();
            LODWORD(v823) = sub_1005E25A0();
            os_log_t v831 = (os_log_t)swift_allocObject();
            LOBYTE(v831[2].isa) = 16;
            uint64_t v506 = swift_allocObject();
            *(unsigned char *)(v506 + 16) = 4;
            uint64_t v507 = swift_allocObject();
            *(unsigned char *)(v507 + 16) = 0;
            unint64_t v830 = swift_allocObject();
            *(unsigned char *)(v830 + 16) = 1;
            uint64_t v508 = swift_allocObject();
            *(void *)(v508 + 16) = sub_10035BBC8;
            *(void *)(v508 + 24) = v500;
            uint64_t v509 = swift_allocObject();
            *(void *)(v509 + 16) = sub_100485490;
            *(void *)(v509 + 24) = v508;
            v838 = (uint64_t *)swift_allocObject();
            *((unsigned char *)v838 + 16) = 34;
            v837 = (uint64_t *)swift_allocObject();
            *((unsigned char *)v837 + 16) = 8;
            uint64_t v510 = swift_allocObject();
            *(void *)(v510 + 16) = sub_1004839E0;
            *(void *)(v510 + 24) = v502;
            uint64_t v511 = swift_allocObject();
            v836 = (void *)v511;
            *(void *)(v511 + 16) = sub_10048547C;
            *(void *)(v511 + 24) = v510;
            os_log_t v829 = (os_log_t)swift_allocObject();
            LOBYTE(v829[2].isa) = 0;
            os_log_t v835 = (os_log_t)swift_allocObject();
            LOBYTE(v835[2].isa) = 8;
            uint64_t v512 = swift_allocObject();
            *(void *)(v512 + 16) = sub_100485488;
            *(void *)(v512 + 24) = v503;
            v513 = swift_allocObject();
            v513[2].isa = (Class)sub_100485494;
            v513[3].isa = (Class)v512;
            os_log_t v822 = v513;
            uint64_t v514 = swift_allocObject();
            *(unsigned char *)(v514 + 16) = 0;
            v819 = (char *)swift_allocObject();
            v819[16] = 8;
            uint64_t v515 = swift_allocObject();
            *(void *)(v515 + 16) = sub_1001D7AA8;
            *(void *)(v515 + 24) = v504;
            v516 = swift_allocObject();
            os_log_t v834 = v516;
            v516[2].isa = (Class)sub_10018A134;
            v516[3].isa = (Class)v515;
            uint64_t v832 = v506;
            v820 = (char *)swift_allocObject();
            v820[16] = 0;
            v833 = (char *)swift_allocObject();
            v833[16] = 4;
            uint64_t v517 = swift_allocObject();
            v518 = v818;
            *(void *)(v517 + 16) = sub_100484458;
            *(void *)(v517 + 24) = v518;
            uint64_t v519 = swift_allocObject();
            *(void *)(v519 + 16) = sub_10048548C;
            *(void *)(v519 + 24) = v517;
            uint64_t v520 = swift_allocObject();
            *(void *)(v520 + 16) = sub_1004857F0;
            *(void *)(v520 + 24) = v519;
            os_log_t v521 = v831;
            uint64_t v825 = v507;
            sub_10000566C(&qword_100715F48);
            uint64_t v522 = swift_allocObject();
            *(_OWORD *)(v522 + 16) = xmmword_1005F6790;
            *(void *)(v522 + 32) = sub_1004857E8;
            *(void *)(v522 + 40) = v521;
            *(void *)(v522 + 48) = sub_1004857E8;
            *(void *)(v522 + 56) = v506;
            *(void *)(v522 + 64) = sub_100187A80;
            *(void *)(v522 + 72) = 0;
            *(void *)(v522 + 80) = sub_1004857E8;
            *(void *)(v522 + 88) = v507;
            os_log_t v523 = v829;
            unint64_t v524 = v830;
            *(void *)(v522 + 96) = sub_1004857E8;
            *(void *)(v522 + 104) = v524;
            *(void *)(v522 + 112) = sub_100483A70;
            *(void *)(v522 + 120) = v509;
            v525 = v838;
            *(void *)(v522 + 128) = sub_1004857E8;
            *(void *)(v522 + 136) = v525;
            v526 = v837;
            *(void *)(v522 + 144) = sub_1004857E8;
            *(void *)(v522 + 152) = v526;
            uint64_t v527 = (uint64_t)v836;
            *(void *)(v522 + 160) = sub_100485498;
            *(void *)(v522 + 168) = v527;
            *(void *)(v522 + 176) = sub_1004857E8;
            *(void *)(v522 + 184) = v523;
            os_log_t v528 = v835;
            *(void *)(v522 + 192) = sub_1004857E8;
            *(void *)(v522 + 200) = v528;
            *(void *)(v522 + 208) = sub_1004840A0;
            *(void *)(v522 + 216) = v513;
            *(void *)(v522 + 224) = sub_1004857E8;
            *(void *)(v522 + 232) = v514;
            v529 = v819;
            v530 = v820;
            *(void *)(v522 + 240) = sub_1004857E8;
            *(void *)(v522 + 248) = v529;
            os_log_t v531 = v834;
            *(void *)(v522 + 256) = sub_1004840A0;
            *(void *)(v522 + 264) = v531;
            *(void *)(v522 + 272) = sub_1004857E8;
            *(void *)(v522 + 280) = v530;
            v532 = v833;
            *(void *)(v522 + 288) = sub_1004857E8;
            *(void *)(v522 + 296) = v532;
            *(void *)(v522 + 304) = sub_100483AFC;
            *(void *)(v522 + 312) = v520;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v533 = v824;
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v533, (os_log_type_t)v823))
            {
              v818 = (char *)v520;
              os_log_t v534 = v835;
              uint64_t v535 = v825;
              uint64_t v536 = swift_slowAlloc();
              uint64_t v849 = swift_slowAlloc();
              v850[0] = 0;
              *(_WORD *)uint64_t v536 = 1538;
              *(unsigned char *)(v536 + 2) = v831[2].isa;
              if (v844)
              {
LABEL_106:
                swift_errorRelease();
                __break(1u);
                JUMPOUT(0x10047A654);
              }
              swift_release();
              *(unsigned char *)(v536 + 3) = *(unsigned char *)(v832 + 16);
              v853[0] = (void *)(v536 + 4);
              swift_release();
              *(_DWORD *)(v536 + 4) = 2;
              *(unsigned char *)(v536 + 8) = *(unsigned char *)(v535 + 16);
              swift_release();
              *(unsigned char *)(v536 + 9) = *(unsigned char *)(v830 + 16);
              uint64_t v537 = swift_release();
              (*(void (**)(uint64_t *__return_ptr, uint64_t))(v509 + 16))(v854, v537);
              sub_1005E2960();
              swift_release();
              *(unsigned char *)(v536 + 11) = *((unsigned char *)v838 + 16);
              swift_release();
              uint64_t v538 = (uint64_t)v836;
              *(unsigned char *)(v536 + 12) = *((unsigned char *)v837 + 16);
              v853[0] = (void *)(v536 + 13);
              swift_release();
              sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, *(uint64_t (**)(void))(v538 + 16));
              swift_release();
              v539 = v853[0];
              *(unsigned char *)v853[0] = v829[2].isa;
              swift_release();
              *((unsigned char *)v539 + 1) = v534[2].isa;
              uint64_t v540 = swift_release();
              ((void (*)(uint64_t *__return_ptr, uint64_t))v822[2].isa)(v854, v540);
              sub_1005E2960();
              v853[0] = (void *)((char *)v539 + 10);
              swift_release();
              *((unsigned char *)v539 + 10) = *(unsigned char *)(v514 + 16);
              swift_release();
              *((unsigned char *)v539 + 11) = v819[16];
              uint64_t v541 = swift_release();
              ((void (*)(uint64_t *__return_ptr, uint64_t))v834[2].isa)(v854, v541);
              sub_1005E2960();
              swift_release();
              *((unsigned char *)v539 + 20) = v820[16];
              swift_release();
              *((unsigned char *)v539 + 21) = v833[16];
              uint64_t v248 = v848;
              v542 = v818;
              uint64_t v543 = swift_release();
              (*((void (**)(uint64_t *__return_ptr, uint64_t))v542 + 2))(v854, v543);
              sub_1005E2960();
              v853[0] = (void *)((char *)v539 + 26);
              swift_release();
              os_log_t v544 = v824;
              _os_log_impl((void *)&_mh_execute_header, v824, (os_log_type_t)v823, "[%.*hhx-%{public}s] [C%llu] Connection did fail (%ld running command(s)): posix %{darwin.errno}d", (uint8_t *)v536, 0x2Fu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v846 + 8))(v815, v847);
              (*(void (**)(char *, uint64_t))(v827 + 8))(v821, v828);
LABEL_69:
              uint64_t v246 = v843;
              v247 = v839;
              goto LABEL_70;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v846 + 8))(v815, v847);
            goto LABEL_97;
          }
          v837 = (uint64_t *)v494;
          if (v496 == enum case for NWError.dns(_:))
          {
            uint64_t v605 = v828;
            uint64_t v606 = v827 + 96;
            (*(void (**)(_DWORD *, uint64_t))(v827 + 96))(v495, v828);
            int v607 = *v495;
            v608 = (objc_class *)v848;
            uint64_t v609 = v803;
            sub_100484EFC(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v803, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            (*(void (**)(char *, uint64_t, uint64_t))(v846 + 32))(v811, v609, v847);
            uint64_t v610 = swift_allocObject();
            *(void *)(v610 + 16) = sub_1004839DC;
            *(void *)(v610 + 24) = v608;
            v611 = swift_allocObject();
            os_log_t v831 = v611;
            v611[2].isa = (Class)sub_1004854A0;
            v611[3].isa = (Class)v610;
            swift_retain_n();
            swift_retain();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            swift_release();
            uint64_t v612 = swift_allocObject();
            *(void *)(v612 + 16) = sub_1004839DC;
            *(void *)(v612 + 24) = v608;
            uint64_t v613 = swift_allocObject();
            v836 = (void *)v613;
            *(void *)(v613 + 16) = sub_100485478;
            *(void *)(v613 + 24) = v612;
            v614 = swift_allocObject();
            os_log_t v835 = v614;
            v614[2].isa = (Class)j___s15IMAP2Connection07CommandB0C12underlyingID0A8Protocol010UnderlyingbE0Vvg;
            v614[3].isa = v608;
            uint64_t v615 = swift_allocObject();
            os_log_t v829 = (os_log_t)v615;
            *(_DWORD *)(v615 + 16) = v840;
            os_log_t v616 = v845;
            *(void *)(v615 + 24) = v841;
            *(void *)(v615 + 32) = v616;
            unint64_t v830 = swift_allocObject();
            *(_DWORD *)(v830 + 16) = v607;
            v617 = v809;
            ((void (*)(char *, char *, uint64_t))v837)(v809, v821, v605);
            unint64_t v618 = (*(unsigned __int8 *)(v606 - 16) + 16) & ~(unint64_t)*(unsigned __int8 *)(v606 - 16);
            uint64_t v825 = swift_allocObject();
            ((void (*)(unint64_t, char *, uint64_t))v838)(v825 + v618, v617, v605);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            os_log_t v822 = (os_log_t)sub_1005E0EB0();
            LODWORD(v820) = sub_1005E25A0();
            uint64_t v619 = swift_allocObject();
            *(unsigned char *)(v619 + 16) = 16;
            os_log_t v834 = (os_log_t)swift_allocObject();
            LOBYTE(v834[2].isa) = 4;
            v833 = (char *)swift_allocObject();
            v833[16] = 0;
            uint64_t v832 = swift_allocObject();
            *(unsigned char *)(v832 + 16) = 1;
            uint64_t v620 = swift_allocObject();
            os_log_t v621 = v831;
            *(void *)(v620 + 16) = sub_10035BBC8;
            *(void *)(v620 + 24) = v621;
            v622 = swift_allocObject();
            v838 = (uint64_t *)v622;
            v622[2].isa = (Class)sub_100485490;
            v622[3].isa = (Class)v620;
            v837 = (uint64_t *)swift_allocObject();
            *((unsigned char *)v837 + 16) = 34;
            uint64_t v623 = swift_allocObject();
            *(unsigned char *)(v623 + 16) = 8;
            uint64_t v624 = v623;
            uint64_t v625 = swift_allocObject();
            uint64_t v626 = (uint64_t)v836;
            *(void *)(v625 + 16) = sub_1004839E0;
            *(void *)(v625 + 24) = v626;
            uint64_t v627 = swift_allocObject();
            v836 = (void *)v627;
            *(void *)(v627 + 16) = sub_10048547C;
            *(void *)(v627 + 24) = v625;
            os_log_t v824 = (os_log_t)swift_allocObject();
            LOBYTE(v824[2].isa) = 0;
            v823 = (char *)swift_allocObject();
            v823[16] = 8;
            uint64_t v628 = swift_allocObject();
            os_log_t v629 = v835;
            *(void *)(v628 + 16) = sub_100485488;
            *(void *)(v628 + 24) = v629;
            v630 = swift_allocObject();
            os_log_t v831 = v630;
            v630[2].isa = (Class)sub_100485494;
            v630[3].isa = (Class)v628;
            uint64_t v631 = swift_allocObject();
            *(unsigned char *)(v631 + 16) = 0;
            os_log_t v835 = (os_log_t)swift_allocObject();
            LOBYTE(v835[2].isa) = 8;
            uint64_t v632 = swift_allocObject();
            os_log_t v633 = v829;
            *(void *)(v632 + 16) = sub_1004857EC;
            *(void *)(v632 + 24) = v633;
            uint64_t v634 = swift_allocObject();
            *(void *)(v634 + 16) = sub_10018A134;
            *(void *)(v634 + 24) = v632;
            v635 = (char *)v634;
            uint64_t v636 = swift_allocObject();
            *(unsigned char *)(v636 + 16) = 0;
            uint64_t v637 = swift_allocObject();
            *(unsigned char *)(v637 + 16) = 4;
            uint64_t v638 = v637;
            uint64_t v639 = swift_allocObject();
            unint64_t v640 = v830;
            *(void *)(v639 + 16) = sub_1001D7454;
            *(void *)(v639 + 24) = v640;
            uint64_t v641 = swift_allocObject();
            v819 = (char *)v641;
            *(void *)(v641 + 16) = sub_1004857F0;
            *(void *)(v641 + 24) = v639;
            unint64_t v830 = swift_allocObject();
            *(unsigned char *)(v830 + 16) = 32;
            os_log_t v829 = (os_log_t)swift_allocObject();
            LOBYTE(v829[2].isa) = 8;
            uint64_t v642 = swift_allocObject();
            uint64_t v643 = v825;
            *(void *)(v642 + 16) = sub_100484144;
            *(void *)(v642 + 24) = v643;
            uint64_t v644 = swift_allocObject();
            uint64_t v825 = v644;
            *(void *)(v644 + 16) = sub_10048547C;
            *(void *)(v644 + 24) = v642;
            sub_10000566C(&qword_100715F48);
            uint64_t v645 = swift_allocObject();
            *(_OWORD *)(v645 + 16) = xmmword_1006257A0;
            *(void *)(v645 + 32) = sub_1004857E8;
            v646 = (char *)v619;
            *(void *)(v645 + 40) = v619;
            *(void *)(v645 + 48) = sub_1004857E8;
            *(void *)(v645 + 56) = v834;
            *(void *)(v645 + 64) = sub_100187A80;
            *(void *)(v645 + 72) = 0;
            *(void *)(v645 + 80) = sub_1004857E8;
            *(void *)(v645 + 88) = v833;
            *(void *)(v645 + 96) = sub_1004857E8;
            *(void *)(v645 + 104) = v832;
            *(void *)(v645 + 112) = sub_100483A70;
            *(void *)(v645 + 120) = v838;
            *(void *)(v645 + 128) = sub_1004857E8;
            *(void *)(v645 + 136) = v837;
            *(void *)(v645 + 144) = sub_1004857E8;
            v647 = (char *)v624;
            *(void *)(v645 + 152) = v624;
            *(void *)(v645 + 160) = sub_100485498;
            *(void *)(v645 + 168) = v836;
            *(void *)(v645 + 176) = sub_1004857E8;
            v648 = v823;
            *(void *)(v645 + 184) = v824;
            *(void *)(v645 + 192) = sub_1004857E8;
            *(void *)(v645 + 200) = v648;
            *(void *)(v645 + 208) = sub_1004840A0;
            *(void *)(v645 + 216) = v831;
            *(void *)(v645 + 224) = sub_1004857E8;
            *(void *)(v645 + 232) = v631;
            *(void *)(v645 + 240) = sub_1004857E8;
            *(void *)(v645 + 248) = v835;
            *(void *)(v645 + 256) = sub_1004840A0;
            *(void *)(v645 + 264) = v635;
            *(void *)(v645 + 272) = sub_1004857E8;
            *(void *)(v645 + 280) = v636;
            *(void *)(v645 + 288) = sub_1004857E8;
            *(void *)(v645 + 296) = v638;
            *(void *)(v645 + 304) = sub_100483AFC;
            *(void *)(v645 + 312) = v819;
            *(void *)(v645 + 320) = sub_1004857E8;
            *(void *)(v645 + 328) = v830;
            *(void *)(v645 + 336) = sub_1004857E8;
            *(void *)(v645 + 344) = v829;
            *(void *)(v645 + 352) = sub_100485498;
            *(void *)(v645 + 360) = v825;
            v816 = v646;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v818 = v647;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v817 = v631;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v649 = v822;
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v649, (os_log_type_t)v820))
            {
              uint64_t v814 = v636;
              v815 = v635;
              os_log_t v651 = v831;
              uint64_t v650 = v832;
              v653 = v833;
              os_log_t v652 = v834;
              uint64_t v654 = swift_slowAlloc();
              uint64_t v849 = swift_slowAlloc();
              v850[0] = 0;
              *(_WORD *)uint64_t v654 = 1794;
              *(unsigned char *)(v654 + 2) = v816[16];
              if (!v844)
              {
                swift_release();
                *(unsigned char *)(v654 + 3) = v652[2].isa;
                v853[0] = (void *)(v654 + 4);
                swift_release();
                *(_DWORD *)(v654 + 4) = 2;
                *(unsigned char *)(v654 + 8) = v653[16];
                swift_release();
                *(unsigned char *)(v654 + 9) = *(unsigned char *)(v650 + 16);
                uint64_t v655 = swift_release();
                ((void (*)(uint64_t *__return_ptr, uint64_t))v838[2])(v854, v655);
                sub_1005E2960();
                swift_release();
                *(unsigned char *)(v654 + 11) = *((unsigned char *)v837 + 16);
                swift_release();
                *(unsigned char *)(v654 + 12) = v818[16];
                v853[0] = (void *)(v654 + 13);
                uint64_t v656 = (uint64_t)v836;
                swift_release();
                sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, *(uint64_t (**)(void))(v656 + 16));
                swift_release();
                v657 = v853[0];
                *(unsigned char *)v853[0] = v824[2].isa;
                swift_release();
                *((unsigned char *)v657 + 1) = v823[16];
                uint64_t v658 = swift_release();
                ((void (*)(uint64_t *__return_ptr, uint64_t))v651[2].isa)(v854, v658);
                sub_1005E2960();
                swift_release();
                *((unsigned char *)v657 + 10) = *(unsigned char *)(v817 + 16);
                swift_release();
                *((unsigned char *)v657 + 11) = v835[2].isa;
                v853[0] = (void *)((char *)v657 + 12);
                v659 = v815;
                uint64_t v660 = swift_release();
                (*((void (**)(uint64_t *__return_ptr, uint64_t))v659 + 2))(v854, v660);
                sub_1005E2960();
                swift_release();
                *((unsigned char *)v657 + 20) = *(unsigned char *)(v814 + 16);
                swift_release();
                *((unsigned char *)v657 + 21) = *(unsigned char *)(v638 + 16);
                uint64_t v248 = v848;
                uint64_t v661 = swift_release();
                (*((void (**)(uint64_t *__return_ptr, uint64_t))v819 + 2))(v854, v661);
                sub_1005E2960();
                swift_release();
                *((unsigned char *)v657 + 26) = *(unsigned char *)(v830 + 16);
                swift_release();
                *((unsigned char *)v657 + 27) = v829[2].isa;
                v853[0] = (void *)((char *)v657 + 28);
                uint64_t v662 = v825;
                swift_release();
                sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, *(uint64_t (**)(void))(v662 + 16));
                uint64_t v663 = v846;
                uint64_t v664 = v847;
                uint64_t v665 = v827;
                v666 = v821;
                swift_release();
                os_log_t v667 = v822;
                _os_log_impl((void *)&_mh_execute_header, v822, (os_log_type_t)v820, "[%.*hhx-%{public}s] [C%llu] Connection did fail (%ld running command(s)): DNS %d, %s", (uint8_t *)v654, 0x39u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v663 + 8))(v811, v664);
LABEL_89:
                (*(void (**)(char *, uint64_t))(v665 + 8))(v666, v828);
                goto LABEL_69;
              }
              goto LABEL_103;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v846 + 8))(v811, v847);
          }
          else
          {
            if (v496 != enum case for NWError.tls(_:))
            {
              uint64_t v729 = v848;
              uint64_t v730 = v802;
              sub_100484EFC(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v802, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
              (*(void (**)(char *, uint64_t, uint64_t))(v846 + 32))(v805, v730, v847);
              uint64_t v731 = swift_allocObject();
              *(void *)(v731 + 16) = sub_1004839DC;
              *(void *)(v731 + 24) = v729;
              uint64_t v732 = swift_allocObject();
              *(void *)(v732 + 16) = sub_1004854A0;
              *(void *)(v732 + 24) = v731;
              swift_retain_n();
              swift_retain();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              swift_release();
              uint64_t v733 = swift_allocObject();
              *(void *)(v733 + 16) = sub_1004839DC;
              *(void *)(v733 + 24) = v729;
              uint64_t v734 = swift_allocObject();
              v833 = (char *)v734;
              *(void *)(v734 + 16) = sub_100485478;
              *(void *)(v734 + 24) = v733;
              uint64_t v735 = swift_allocObject();
              uint64_t v832 = v735;
              *(void *)(v735 + 16) = j___s15IMAP2Connection07CommandB0C12underlyingID0A8Protocol010UnderlyingbE0Vvg;
              *(void *)(v735 + 24) = v729;
              uint64_t v736 = swift_allocObject();
              os_log_t v822 = (os_log_t)v736;
              *(_DWORD *)(v736 + 16) = v840;
              os_log_t v737 = v845;
              *(void *)(v736 + 24) = v841;
              *(void *)(v736 + 32) = v737;
              v738 = v809;
              uint64_t v739 = v828;
              ((void (*)(char *, char *, uint64_t))v837)(v809, v821, v828);
              unint64_t v740 = (*(unsigned __int8 *)(v827 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v827 + 80);
              v823 = (char *)swift_allocObject();
              ((void (*)(char *, char *, uint64_t))v838)(&v823[v740], v738, v739);
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              os_log_t v829 = (os_log_t)sub_1005E0EB0();
              LODWORD(v825) = sub_1005E25A0();
              uint64_t v741 = swift_allocObject();
              *(unsigned char *)(v741 + 16) = 16;
              uint64_t v742 = swift_allocObject();
              *(unsigned char *)(v742 + 16) = 4;
              uint64_t v743 = swift_allocObject();
              *(unsigned char *)(v743 + 16) = 0;
              os_log_t v835 = (os_log_t)swift_allocObject();
              LOBYTE(v835[2].isa) = 1;
              uint64_t v744 = swift_allocObject();
              *(void *)(v744 + 16) = sub_10035BBC8;
              *(void *)(v744 + 24) = v732;
              uint64_t v745 = swift_allocObject();
              v836 = (void *)v745;
              *(void *)(v745 + 16) = sub_100485490;
              *(void *)(v745 + 24) = v744;
              os_log_t v834 = (os_log_t)swift_allocObject();
              LOBYTE(v834[2].isa) = 34;
              v838 = (uint64_t *)swift_allocObject();
              *((unsigned char *)v838 + 16) = 8;
              uint64_t v746 = swift_allocObject();
              v747 = v833;
              *(void *)(v746 + 16) = sub_1004839E0;
              *(void *)(v746 + 24) = v747;
              v748 = swift_allocObject();
              v837 = (uint64_t *)v748;
              v748[2].isa = (Class)sub_10048547C;
              v748[3].isa = (Class)v746;
              uint64_t v749 = v743;
              os_log_t v831 = (os_log_t)v743;
              os_log_t v824 = (os_log_t)swift_allocObject();
              LOBYTE(v824[2].isa) = 0;
              uint64_t v750 = swift_allocObject();
              *(unsigned char *)(v750 + 16) = 8;
              uint64_t v751 = v750;
              v833 = (char *)v750;
              uint64_t v752 = swift_allocObject();
              uint64_t v753 = v832;
              *(void *)(v752 + 16) = sub_10036BB30;
              *(void *)(v752 + 24) = v753;
              uint64_t v754 = swift_allocObject();
              uint64_t v832 = v754;
              *(void *)(v754 + 16) = sub_100484070;
              *(void *)(v754 + 24) = v752;
              uint64_t v817 = swift_allocObject();
              *(unsigned char *)(v817 + 16) = 0;
              uint64_t v755 = swift_allocObject();
              *(unsigned char *)(v755 + 16) = 8;
              uint64_t v756 = v755;
              uint64_t v757 = swift_allocObject();
              os_log_t v758 = v822;
              *(void *)(v757 + 16) = sub_1004857EC;
              *(void *)(v757 + 24) = v758;
              uint64_t v759 = swift_allocObject();
              *(void *)(v759 + 16) = sub_100188FDC;
              *(void *)(v759 + 24) = v757;
              uint64_t v760 = v759;
              v818 = (char *)v759;
              uint64_t v761 = v741;
              unint64_t v830 = v742;
              os_log_t v822 = (os_log_t)swift_allocObject();
              LOBYTE(v822[2].isa) = 64;
              v820 = (char *)swift_allocObject();
              v820[16] = 8;
              uint64_t v762 = swift_allocObject();
              v763 = v823;
              *(void *)(v762 + 16) = sub_100483F90;
              *(void *)(v762 + 24) = v763;
              uint64_t v764 = swift_allocObject();
              *(void *)(v764 + 16) = sub_100485484;
              *(void *)(v764 + 24) = v762;
              v819 = (char *)v764;
              sub_10000566C(&qword_100715F48);
              uint64_t v765 = swift_allocObject();
              *(_OWORD *)(v765 + 16) = xmmword_1005F6790;
              *(void *)(v765 + 32) = sub_1004857E8;
              *(void *)(v765 + 40) = v761;
              v766 = (char *)v761;
              *(void *)(v765 + 48) = sub_1004857E8;
              *(void *)(v765 + 56) = v742;
              *(void *)(v765 + 64) = sub_100187A80;
              *(void *)(v765 + 72) = 0;
              *(void *)(v765 + 80) = sub_1004857E8;
              *(void *)(v765 + 88) = v749;
              os_log_t v767 = v835;
              uint64_t v768 = (uint64_t)v836;
              *(void *)(v765 + 96) = sub_1004857E8;
              *(void *)(v765 + 104) = v767;
              *(void *)(v765 + 112) = sub_100483A70;
              *(void *)(v765 + 120) = v768;
              os_log_t v769 = v834;
              *(void *)(v765 + 128) = sub_1004857E8;
              *(void *)(v765 + 136) = v769;
              v770 = v838;
              *(void *)(v765 + 144) = sub_1004857E8;
              *(void *)(v765 + 152) = v770;
              v771 = v837;
              *(void *)(v765 + 160) = sub_100485498;
              *(void *)(v765 + 168) = v771;
              os_log_t v772 = v824;
              *(void *)(v765 + 176) = sub_1004857E8;
              *(void *)(v765 + 184) = v772;
              *(void *)(v765 + 192) = sub_1004857E8;
              *(void *)(v765 + 200) = v751;
              uint64_t v773 = v832;
              *(void *)(v765 + 208) = sub_1004840A0;
              *(void *)(v765 + 216) = v773;
              uint64_t v774 = v817;
              *(void *)(v765 + 224) = sub_1004857E8;
              *(void *)(v765 + 232) = v774;
              *(void *)(v765 + 240) = sub_1004857E8;
              *(void *)(v765 + 248) = v756;
              v775 = (char *)v756;
              *(void *)(v765 + 256) = sub_1004840A0;
              *(void *)(v765 + 264) = v760;
              os_log_t v776 = v822;
              *(void *)(v765 + 272) = sub_1004857E8;
              *(void *)(v765 + 280) = v776;
              v777 = v820;
              *(void *)(v765 + 288) = sub_1004857E8;
              *(void *)(v765 + 296) = v777;
              *(void *)(v765 + 304) = sub_10048549C;
              *(void *)(v765 + 312) = v764;
              v823 = v766;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              os_log_t v778 = v829;
              swift_bridgeObjectRelease();
              if (os_log_type_enabled(v778, (os_log_type_t)v825))
              {
                v815 = v775;
                uint64_t v779 = v774;
                uint64_t v780 = (uint64_t)v836;
                os_log_t v781 = v831;
                uint64_t v782 = swift_slowAlloc();
                v783 = (void *)swift_slowAlloc();
                uint64_t v784 = swift_slowAlloc();
                uint64_t v849 = v784;
                v850[0] = v783;
                *(_WORD *)uint64_t v782 = 1538;
                *(unsigned char *)(v782 + 2) = v823[16];
                if (v844) {
                  goto LABEL_103;
                }
                v785 = v784;
                swift_release();
                *(unsigned char *)(v782 + 3) = *(unsigned char *)(v830 + 16);
                v853[0] = (void *)(v782 + 4);
                swift_release();
                *(_DWORD *)(v782 + 4) = 2;
                *(unsigned char *)(v782 + 8) = v781[2].isa;
                swift_release();
                *(unsigned char *)(v782 + 9) = v835[2].isa;
                uint64_t v786 = swift_release();
                (*(void (**)(uint64_t *__return_ptr, uint64_t))(v780 + 16))(v854, v786);
                sub_1005E2960();
                swift_release();
                *(unsigned char *)(v782 + 11) = v834[2].isa;
                uint64_t v787 = v832;
                swift_release();
                v788 = v837;
                *(unsigned char *)(v782 + 12) = *((unsigned char *)v838 + 16);
                v853[0] = (void *)(v782 + 13);
                v836 = v783;
                swift_release();
                sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, (uint64_t (*)(void))v788[2]);
                swift_release();
                v789 = v853[0];
                *(unsigned char *)v853[0] = v824[2].isa;
                swift_release();
                *((unsigned char *)v789 + 1) = v833[16];
                v853[0] = (void *)((char *)v789 + 2);
                uint64_t v790 = swift_release();
                (*(void (**)(uint64_t *__return_ptr, uint64_t))(v787 + 16))(v854, v790);
                sub_1005E2960();
                swift_release();
                *((unsigned char *)v789 + 10) = *(unsigned char *)(v779 + 16);
                swift_release();
                *((unsigned char *)v789 + 11) = v815[16];
                v791 = v818;
                uint64_t v792 = swift_release();
                (*((void (**)(uint64_t *__return_ptr, uint64_t))v791 + 2))(v854, v792);
                sub_1005E2960();
                v793 = (uint64_t (**)(void))v819;
                v838 = (uint64_t *)v785;
                swift_release();
                *((unsigned char *)v789 + 20) = v822[2].isa;
                swift_release();
                *((unsigned char *)v789 + 21) = v820[16];
                v853[0] = (void *)((char *)v789 + 22);
                uint64_t v248 = v848;
                swift_release();
                sub_1004C2150((uint64_t *)v853, v850, (uint64_t)&v849, v793[2]);
                uint64_t v794 = v846;
                uint64_t v795 = v847;
                uint64_t v797 = v827;
                uint64_t v796 = v828;
                v798 = v821;
                swift_release();
                os_log_t v799 = v829;
                _os_log_impl((void *)&_mh_execute_header, v829, (os_log_type_t)v825, "[%.*hhx-%{public}s] [C%llu] Connection did fail (%ld running command(s)): %@", (uint8_t *)v782, 0x33u);
                sub_10000566C(&qword_100717A10);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v794 + 8))(v805, v795);
                v800 = *(void (**)(char *, uint64_t))(v797 + 8);
                v800(v798, v796);
              }
              else
              {

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                (*(void (**)(char *, uint64_t))(v846 + 8))(v805, v847);
                uint64_t v796 = v828;
                v800 = *(void (**)(char *, uint64_t))(v827 + 8);
                v800(v821, v828);
                uint64_t v248 = v848;
              }
              v800(v816, v796);
              goto LABEL_69;
            }
            uint64_t v668 = v828;
            uint64_t v669 = v827 + 96;
            (*(void (**)(_DWORD *, uint64_t))(v827 + 96))(v495, v828);
            int v670 = *v495;
            v671 = (objc_class *)v848;
            uint64_t v672 = v801;
            sub_100484EFC(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v801, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            (*(void (**)(char *, uint64_t, uint64_t))(v846 + 32))(v806, v672, v847);
            uint64_t v673 = swift_allocObject();
            *(void *)(v673 + 16) = sub_1004839DC;
            *(void *)(v673 + 24) = v671;
            v674 = swift_allocObject();
            os_log_t v831 = v674;
            v674[2].isa = (Class)sub_1004854A0;
            v674[3].isa = (Class)v673;
            swift_retain_n();
            swift_retain();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            swift_release();
            uint64_t v675 = swift_allocObject();
            *(void *)(v675 + 16) = sub_1004839DC;
            *(void *)(v675 + 24) = v671;
            uint64_t v676 = swift_allocObject();
            v836 = (void *)v676;
            *(void *)(v676 + 16) = sub_100485478;
            *(void *)(v676 + 24) = v675;
            v677 = swift_allocObject();
            os_log_t v835 = v677;
            v677[2].isa = (Class)j___s15IMAP2Connection07CommandB0C12underlyingID0A8Protocol010UnderlyingbE0Vvg;
            v677[3].isa = v671;
            uint64_t v678 = swift_allocObject();
            os_log_t v829 = (os_log_t)v678;
            *(_DWORD *)(v678 + 16) = v840;
            os_log_t v679 = v845;
            *(void *)(v678 + 24) = v841;
            *(void *)(v678 + 32) = v679;
            unint64_t v830 = swift_allocObject();
            *(_DWORD *)(v830 + 16) = v670;
            v680 = v809;
            ((void (*)(char *, char *, uint64_t))v837)(v809, v821, v668);
            unint64_t v681 = (*(unsigned __int8 *)(v669 - 16) + 16) & ~(unint64_t)*(unsigned __int8 *)(v669 - 16);
            uint64_t v825 = swift_allocObject();
            ((void (*)(unint64_t, char *, uint64_t))v838)(v825 + v681, v680, v668);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            os_log_t v822 = (os_log_t)sub_1005E0EB0();
            LODWORD(v820) = sub_1005E25A0();
            uint64_t v682 = swift_allocObject();
            *(unsigned char *)(v682 + 16) = 16;
            os_log_t v834 = (os_log_t)swift_allocObject();
            LOBYTE(v834[2].isa) = 4;
            v833 = (char *)swift_allocObject();
            v833[16] = 0;
            uint64_t v832 = swift_allocObject();
            *(unsigned char *)(v832 + 16) = 1;
            uint64_t v683 = swift_allocObject();
            os_log_t v684 = v831;
            *(void *)(v683 + 16) = sub_10035BBC8;
            *(void *)(v683 + 24) = v684;
            v685 = swift_allocObject();
            v838 = (uint64_t *)v685;
            v685[2].isa = (Class)sub_100485490;
            v685[3].isa = (Class)v683;
            v837 = (uint64_t *)swift_allocObject();
            *((unsigned char *)v837 + 16) = 34;
            uint64_t v686 = swift_allocObject();
            *(unsigned char *)(v686 + 16) = 8;
            uint64_t v687 = v686;
            uint64_t v688 = swift_allocObject();
            uint64_t v689 = (uint64_t)v836;
            *(void *)(v688 + 16) = sub_1004839E0;
            *(void *)(v688 + 24) = v689;
            uint64_t v690 = swift_allocObject();
            v836 = (void *)v690;
            *(void *)(v690 + 16) = sub_10048547C;
            *(void *)(v690 + 24) = v688;
            os_log_t v824 = (os_log_t)swift_allocObject();
            LOBYTE(v824[2].isa) = 0;
            v823 = (char *)swift_allocObject();
            v823[16] = 8;
            uint64_t v691 = swift_allocObject();
            os_log_t v692 = v835;
            *(void *)(v691 + 16) = sub_100485488;
            *(void *)(v691 + 24) = v692;
            v693 = swift_allocObject();
            os_log_t v831 = v693;
            v693[2].isa = (Class)sub_100485494;
            v693[3].isa = (Class)v691;
            uint64_t v694 = swift_allocObject();
            *(unsigned char *)(v694 + 16) = 0;
            os_log_t v835 = (os_log_t)swift_allocObject();
            LOBYTE(v835[2].isa) = 8;
            uint64_t v695 = swift_allocObject();
            os_log_t v696 = v829;
            *(void *)(v695 + 16) = sub_1004857EC;
            *(void *)(v695 + 24) = v696;
            uint64_t v697 = swift_allocObject();
            *(void *)(v697 + 16) = sub_10018A134;
            *(void *)(v697 + 24) = v695;
            v698 = (char *)v697;
            uint64_t v699 = swift_allocObject();
            *(unsigned char *)(v699 + 16) = 0;
            uint64_t v700 = swift_allocObject();
            *(unsigned char *)(v700 + 16) = 4;
            uint64_t v701 = v700;
            uint64_t v702 = swift_allocObject();
            unint64_t v703 = v830;
            *(void *)(v702 + 16) = sub_1001D7D8C;
            *(void *)(v702 + 24) = v703;
            uint64_t v704 = swift_allocObject();
            v819 = (char *)v704;
            *(void *)(v704 + 16) = sub_1004857F0;
            *(void *)(v704 + 24) = v702;
            unint64_t v830 = swift_allocObject();
            *(unsigned char *)(v830 + 16) = 32;
            os_log_t v829 = (os_log_t)swift_allocObject();
            LOBYTE(v829[2].isa) = 8;
            uint64_t v705 = swift_allocObject();
            uint64_t v706 = v825;
            *(void *)(v705 + 16) = sub_100484144;
            *(void *)(v705 + 24) = v706;
            uint64_t v707 = swift_allocObject();
            uint64_t v825 = v707;
            *(void *)(v707 + 16) = sub_10048547C;
            *(void *)(v707 + 24) = v705;
            sub_10000566C(&qword_100715F48);
            uint64_t v708 = swift_allocObject();
            *(_OWORD *)(v708 + 16) = xmmword_1006257A0;
            *(void *)(v708 + 32) = sub_1004857E8;
            v709 = (char *)v682;
            *(void *)(v708 + 40) = v682;
            *(void *)(v708 + 48) = sub_1004857E8;
            *(void *)(v708 + 56) = v834;
            *(void *)(v708 + 64) = sub_100187A80;
            *(void *)(v708 + 72) = 0;
            *(void *)(v708 + 80) = sub_1004857E8;
            *(void *)(v708 + 88) = v833;
            *(void *)(v708 + 96) = sub_1004857E8;
            *(void *)(v708 + 104) = v832;
            *(void *)(v708 + 112) = sub_100483A70;
            *(void *)(v708 + 120) = v838;
            *(void *)(v708 + 128) = sub_1004857E8;
            *(void *)(v708 + 136) = v837;
            *(void *)(v708 + 144) = sub_1004857E8;
            v710 = (char *)v687;
            *(void *)(v708 + 152) = v687;
            *(void *)(v708 + 160) = sub_100485498;
            *(void *)(v708 + 168) = v836;
            *(void *)(v708 + 176) = sub_1004857E8;
            v711 = v823;
            *(void *)(v708 + 184) = v824;
            *(void *)(v708 + 192) = sub_1004857E8;
            *(void *)(v708 + 200) = v711;
            *(void *)(v708 + 208) = sub_1004840A0;
            *(void *)(v708 + 216) = v831;
            *(void *)(v708 + 224) = sub_1004857E8;
            *(void *)(v708 + 232) = v694;
            *(void *)(v708 + 240) = sub_1004857E8;
            *(void *)(v708 + 248) = v835;
            *(void *)(v708 + 256) = sub_1004840A0;
            *(void *)(v708 + 264) = v698;
            *(void *)(v708 + 272) = sub_1004857E8;
            *(void *)(v708 + 280) = v699;
            *(void *)(v708 + 288) = sub_1004857E8;
            *(void *)(v708 + 296) = v701;
            *(void *)(v708 + 304) = sub_100483AFC;
            *(void *)(v708 + 312) = v819;
            *(void *)(v708 + 320) = sub_1004857E8;
            *(void *)(v708 + 328) = v830;
            *(void *)(v708 + 336) = sub_1004857E8;
            *(void *)(v708 + 344) = v829;
            *(void *)(v708 + 352) = sub_100485498;
            *(void *)(v708 + 360) = v825;
            v816 = v709;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v818 = v710;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            uint64_t v817 = v694;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v712 = v822;
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v712, (os_log_type_t)v820))
            {
              uint64_t v814 = v699;
              v815 = v698;
              os_log_t v714 = v831;
              uint64_t v713 = v832;
              v716 = v833;
              os_log_t v715 = v834;
              uint64_t v717 = swift_slowAlloc();
              uint64_t v849 = swift_slowAlloc();
              v850[0] = 0;
              *(_WORD *)uint64_t v717 = 1794;
              *(unsigned char *)(v717 + 2) = v816[16];
              if (!v844)
              {
                swift_release();
                *(unsigned char *)(v717 + 3) = v715[2].isa;
                v853[0] = (void *)(v717 + 4);
                swift_release();
                *(_DWORD *)(v717 + 4) = 2;
                *(unsigned char *)(v717 + 8) = v716[16];
                swift_release();
                *(unsigned char *)(v717 + 9) = *(unsigned char *)(v713 + 16);
                uint64_t v718 = swift_release();
                ((void (*)(uint64_t *__return_ptr, uint64_t))v838[2])(v854, v718);
                sub_1005E2960();
                swift_release();
                *(unsigned char *)(v717 + 11) = *((unsigned char *)v837 + 16);
                swift_release();
                *(unsigned char *)(v717 + 12) = v818[16];
                v853[0] = (void *)(v717 + 13);
                uint64_t v719 = (uint64_t)v836;
                swift_release();
                sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, *(uint64_t (**)(void))(v719 + 16));
                swift_release();
                v720 = v853[0];
                *(unsigned char *)v853[0] = v824[2].isa;
                swift_release();
                *((unsigned char *)v720 + 1) = v823[16];
                uint64_t v721 = swift_release();
                ((void (*)(uint64_t *__return_ptr, uint64_t))v714[2].isa)(v854, v721);
                sub_1005E2960();
                swift_release();
                *((unsigned char *)v720 + 10) = *(unsigned char *)(v817 + 16);
                swift_release();
                *((unsigned char *)v720 + 11) = v835[2].isa;
                v853[0] = (void *)((char *)v720 + 12);
                v722 = v815;
                uint64_t v723 = swift_release();
                (*((void (**)(uint64_t *__return_ptr, uint64_t))v722 + 2))(v854, v723);
                sub_1005E2960();
                swift_release();
                *((unsigned char *)v720 + 20) = *(unsigned char *)(v814 + 16);
                swift_release();
                *((unsigned char *)v720 + 21) = *(unsigned char *)(v701 + 16);
                uint64_t v248 = v848;
                uint64_t v724 = swift_release();
                (*((void (**)(uint64_t *__return_ptr, uint64_t))v819 + 2))(v854, v724);
                sub_1005E2960();
                swift_release();
                *((unsigned char *)v720 + 26) = *(unsigned char *)(v830 + 16);
                swift_release();
                *((unsigned char *)v720 + 27) = v829[2].isa;
                v853[0] = (void *)((char *)v720 + 28);
                uint64_t v725 = v825;
                swift_release();
                sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, *(uint64_t (**)(void))(v725 + 16));
                uint64_t v726 = v846;
                uint64_t v727 = v847;
                uint64_t v665 = v827;
                v666 = v821;
                swift_release();
                os_log_t v728 = v822;
                _os_log_impl((void *)&_mh_execute_header, v822, (os_log_type_t)v820, "[%.*hhx-%{public}s] [C%llu] Connection did fail (%ld running command(s)): TLS %d, %s", (uint8_t *)v717, 0x39u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v726 + 8))(v806, v727);
                goto LABEL_89;
              }
LABEL_103:
              swift_errorRelease();
              __break(1u);
              swift_errorRelease();
              __break(1u);
              goto LABEL_104;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v846 + 8))(v806, v847);
          }
LABEL_97:
          (*(void (**)(char *, uint64_t))(v827 + 8))(v821, v828);
          break;
        case 2:
          sub_100484EFC((uint64_t)v198 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v80, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          (*(void (**)(os_log_t, char *, uint64_t))(v846 + 32))(v822, v80, v847);
          uint64_t v367 = swift_allocObject();
          *(void *)(v367 + 16) = sub_1004839DC;
          *(void *)(v367 + 24) = v198;
          uint64_t v368 = swift_allocObject();
          *(void *)(v368 + 16) = sub_1004854A0;
          *(void *)(v368 + 24) = v367;
          swift_retain_n();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v369 = swift_allocObject();
          *(void *)(v369 + 16) = sub_1004839DC;
          *(void *)(v369 + 24) = v198;
          uint64_t v370 = swift_allocObject();
          *(void *)(v370 + 16) = sub_100485478;
          *(void *)(v370 + 24) = v369;
          v371 = swift_allocObject();
          v837 = (uint64_t *)v371;
          v371[2].isa = (Class)j___s15IMAP2Connection07CommandB0C12underlyingID0A8Protocol010UnderlyingbE0Vvg;
          v371[3].isa = v198;
          uint64_t v372 = swift_allocObject();
          *(_DWORD *)(v372 + 16) = v840;
          os_log_t v373 = v845;
          *(void *)(v372 + 24) = v841;
          *(void *)(v372 + 32) = v373;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_log_t v831 = (os_log_t)sub_1005E0EB0();
          LODWORD(v830) = sub_1005E25C0();
          v833 = (char *)swift_allocObject();
          v833[16] = 16;
          v838 = (uint64_t *)swift_allocObject();
          *((unsigned char *)v838 + 16) = 4;
          os_log_t v824 = (os_log_t)swift_allocObject();
          LOBYTE(v824[2].isa) = 0;
          uint64_t v825 = swift_allocObject();
          *(unsigned char *)(v825 + 16) = 1;
          uint64_t v374 = swift_allocObject();
          *(void *)(v374 + 16) = sub_10035BBC8;
          *(void *)(v374 + 24) = v368;
          uint64_t v375 = swift_allocObject();
          *(void *)(v375 + 16) = sub_100485490;
          *(void *)(v375 + 24) = v374;
          os_log_t v834 = (os_log_t)swift_allocObject();
          LOBYTE(v834[2].isa) = 34;
          uint64_t v376 = swift_allocObject();
          *(unsigned char *)(v376 + 16) = 8;
          uint64_t v377 = swift_allocObject();
          *(void *)(v377 + 16) = sub_1004839E0;
          *(void *)(v377 + 24) = v370;
          uint64_t v378 = swift_allocObject();
          *(void *)(v378 + 16) = sub_10048547C;
          *(void *)(v378 + 24) = v377;
          uint64_t v379 = swift_allocObject();
          *(unsigned char *)(v379 + 16) = 0;
          uint64_t v380 = v379;
          os_log_t v835 = (os_log_t)v379;
          uint64_t v827 = swift_allocObject();
          *(unsigned char *)(v827 + 16) = 8;
          uint64_t v381 = swift_allocObject();
          v382 = v837;
          *(void *)(v381 + 16) = sub_100485488;
          *(void *)(v381 + 24) = v382;
          uint64_t v383 = swift_allocObject();
          *(void *)(v383 + 16) = sub_100485494;
          *(void *)(v383 + 24) = v381;
          uint64_t v384 = v383;
          v836 = (void *)v383;
          v837 = (uint64_t *)swift_allocObject();
          *((unsigned char *)v837 + 16) = 0;
          os_log_t v829 = (os_log_t)swift_allocObject();
          LOBYTE(v829[2].isa) = 8;
          uint64_t v385 = swift_allocObject();
          *(void *)(v385 + 16) = sub_1004857EC;
          *(void *)(v385 + 24) = v372;
          uint64_t v386 = swift_allocObject();
          *(void *)(v386 + 16) = sub_10018A134;
          *(void *)(v386 + 24) = v385;
          uint64_t v828 = v378;
          v823 = (char *)v376;
          uint64_t v832 = v375;
          sub_10000566C(&qword_100715F48);
          uint64_t v387 = swift_allocObject();
          *(_OWORD *)(v387 + 16) = xmmword_1005F67A0;
          *(void *)(v387 + 32) = sub_1004857E8;
          *(void *)(v387 + 40) = v833;
          *(void *)(v387 + 48) = sub_1004857E8;
          *(void *)(v387 + 56) = v838;
          *(void *)(v387 + 64) = sub_100187A80;
          *(void *)(v387 + 72) = 0;
          *(void *)(v387 + 80) = sub_1004857E8;
          os_log_t v388 = v824;
          uint64_t v389 = v825;
          *(void *)(v387 + 88) = v824;
          *(void *)(v387 + 96) = sub_1004857E8;
          *(void *)(v387 + 104) = v389;
          *(void *)(v387 + 112) = sub_100483A70;
          *(void *)(v387 + 120) = v375;
          *(void *)(v387 + 128) = sub_1004857E8;
          *(void *)(v387 + 136) = v834;
          *(void *)(v387 + 144) = sub_1004857E8;
          *(void *)(v387 + 152) = v376;
          *(void *)(v387 + 160) = sub_100485498;
          *(void *)(v387 + 168) = v378;
          *(void *)(v387 + 176) = sub_1004857E8;
          *(void *)(v387 + 184) = v380;
          *(void *)(v387 + 192) = sub_1004857E8;
          *(void *)(v387 + 200) = v827;
          *(void *)(v387 + 208) = sub_1004840A0;
          *(void *)(v387 + 216) = v384;
          *(void *)(v387 + 224) = sub_1004857E8;
          *(void *)(v387 + 232) = v837;
          *(void *)(v387 + 240) = sub_1004857E8;
          *(void *)(v387 + 248) = v829;
          *(void *)(v387 + 256) = sub_1004840A0;
          *(void *)(v387 + 264) = v386;
          swift_retain();
          v390 = v823;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v391 = v831;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v391, (os_log_type_t)v830))
          {
            v392 = v390;
            v393 = v838;
            v821 = (char *)v386;
            uint64_t v394 = swift_slowAlloc();
            v395 = swift_slowAlloc();
            uint64_t v849 = (uint64_t)v395;
            v850[0] = 0;
            *(_WORD *)uint64_t v394 = 1282;
            *(unsigned char *)(v394 + 2) = v833[16];
            if (!v844)
            {
              swift_release();
              *(unsigned char *)(v394 + 3) = *((unsigned char *)v393 + 16);
              v853[0] = (void *)(v394 + 4);
              swift_release();
              *(_DWORD *)(v394 + 4) = 2;
              v396 = v821;
              v838 = (uint64_t *)v395;
              *(unsigned char *)(v394 + 8) = v388[2].isa;
              swift_release();
              *(unsigned char *)(v394 + 9) = *(unsigned char *)(v825 + 16);
              uint64_t v397 = swift_release();
              (*(void (**)(uint64_t *__return_ptr, uint64_t))(v832 + 16))(v854, v397);
              sub_1005E2960();
              swift_release();
              *(unsigned char *)(v394 + 11) = v834[2].isa;
              swift_release();
              *(unsigned char *)(v394 + 12) = v392[16];
              v853[0] = (void *)(v394 + 13);
              uint64_t v398 = v828;
              swift_release();
              sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, *(uint64_t (**)(void))(v398 + 16));
              swift_release();
              v399 = v853[0];
              *(unsigned char *)v853[0] = v835[2].isa;
              swift_release();
              *((unsigned char *)v399 + 1) = *(unsigned char *)(v827 + 16);
              uint64_t v400 = swift_release();
              ((void (*)(uint64_t *__return_ptr, uint64_t))v836[2])(v854, v400);
              sub_1005E2960();
              swift_release();
              *((unsigned char *)v399 + 10) = *((unsigned char *)v837 + 16);
              swift_release();
              *((unsigned char *)v399 + 11) = v829[2].isa;
              uint64_t v401 = v846;
              uint64_t v402 = swift_release();
              (*((void (**)(uint64_t *__return_ptr, uint64_t))v396 + 2))(v854, v402);
              sub_1005E2960();
              v853[0] = (void *)((char *)v399 + 20);
              uint64_t v248 = v848;
              swift_release();
              os_log_t v403 = v831;
              _os_log_impl((void *)&_mh_execute_header, v831, (os_log_type_t)v830, "[%.*hhx-%{public}s] [C%llu] Connection did fail (%ld running command(s)): Closed", (uint8_t *)v394, 0x29u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(os_log_t, uint64_t))(v401 + 8))(v822, v847);
              goto LABEL_69;
            }
LABEL_100:
            swift_errorRelease();
            __break(1u);
            goto LABEL_101;
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(os_log_t, uint64_t))(v846 + 8))(v822, v847);
          break;
        case 3:
          uint64_t v411 = v817;
          sub_100484EFC((uint64_t)v198 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v817, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          (*(void (**)(char *, uint64_t, uint64_t))(v846 + 32))(v823, v411, v847);
          uint64_t v412 = swift_allocObject();
          *(void *)(v412 + 16) = sub_1004839DC;
          *(void *)(v412 + 24) = v198;
          uint64_t v413 = swift_allocObject();
          *(void *)(v413 + 16) = sub_1004854A0;
          *(void *)(v413 + 24) = v412;
          swift_retain_n();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v414 = swift_allocObject();
          *(void *)(v414 + 16) = sub_1004839DC;
          *(void *)(v414 + 24) = v198;
          uint64_t v415 = swift_allocObject();
          *(void *)(v415 + 16) = sub_100485478;
          *(void *)(v415 + 24) = v414;
          v416 = swift_allocObject();
          v837 = (uint64_t *)v416;
          v416[2].isa = (Class)j___s15IMAP2Connection07CommandB0C12underlyingID0A8Protocol010UnderlyingbE0Vvg;
          v416[3].isa = v198;
          uint64_t v417 = swift_allocObject();
          *(_DWORD *)(v417 + 16) = v840;
          os_log_t v418 = v845;
          *(void *)(v417 + 24) = v841;
          *(void *)(v417 + 32) = v418;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_log_t v831 = (os_log_t)sub_1005E0EB0();
          LODWORD(v830) = sub_1005E25A0();
          v833 = (char *)swift_allocObject();
          v833[16] = 16;
          v838 = (uint64_t *)swift_allocObject();
          *((unsigned char *)v838 + 16) = 4;
          os_log_t v824 = (os_log_t)swift_allocObject();
          LOBYTE(v824[2].isa) = 0;
          uint64_t v825 = swift_allocObject();
          *(unsigned char *)(v825 + 16) = 1;
          uint64_t v419 = swift_allocObject();
          *(void *)(v419 + 16) = sub_10035BBC8;
          *(void *)(v419 + 24) = v413;
          uint64_t v420 = swift_allocObject();
          *(void *)(v420 + 16) = sub_100485490;
          *(void *)(v420 + 24) = v419;
          os_log_t v834 = (os_log_t)swift_allocObject();
          LOBYTE(v834[2].isa) = 34;
          uint64_t v421 = swift_allocObject();
          *(unsigned char *)(v421 + 16) = 8;
          uint64_t v422 = swift_allocObject();
          *(void *)(v422 + 16) = sub_1004839E0;
          *(void *)(v422 + 24) = v415;
          uint64_t v423 = swift_allocObject();
          *(void *)(v423 + 16) = sub_10048547C;
          *(void *)(v423 + 24) = v422;
          uint64_t v424 = swift_allocObject();
          *(unsigned char *)(v424 + 16) = 0;
          uint64_t v425 = v424;
          os_log_t v835 = (os_log_t)v424;
          uint64_t v827 = swift_allocObject();
          *(unsigned char *)(v827 + 16) = 8;
          uint64_t v426 = swift_allocObject();
          v427 = v837;
          *(void *)(v426 + 16) = sub_100485488;
          *(void *)(v426 + 24) = v427;
          uint64_t v428 = swift_allocObject();
          *(void *)(v428 + 16) = sub_100485494;
          *(void *)(v428 + 24) = v426;
          uint64_t v429 = v428;
          v836 = (void *)v428;
          v837 = (uint64_t *)swift_allocObject();
          *((unsigned char *)v837 + 16) = 0;
          os_log_t v829 = (os_log_t)swift_allocObject();
          LOBYTE(v829[2].isa) = 8;
          uint64_t v430 = swift_allocObject();
          *(void *)(v430 + 16) = sub_1004857EC;
          *(void *)(v430 + 24) = v417;
          uint64_t v431 = swift_allocObject();
          *(void *)(v431 + 16) = sub_10018A134;
          *(void *)(v431 + 24) = v430;
          uint64_t v828 = v423;
          os_log_t v822 = (os_log_t)v421;
          uint64_t v832 = v420;
          sub_10000566C(&qword_100715F48);
          uint64_t v432 = swift_allocObject();
          *(_OWORD *)(v432 + 16) = xmmword_1005F67A0;
          *(void *)(v432 + 32) = sub_1004857E8;
          *(void *)(v432 + 40) = v833;
          *(void *)(v432 + 48) = sub_1004857E8;
          *(void *)(v432 + 56) = v838;
          *(void *)(v432 + 64) = sub_100187A80;
          *(void *)(v432 + 72) = 0;
          *(void *)(v432 + 80) = sub_1004857E8;
          os_log_t v433 = v824;
          uint64_t v434 = v825;
          *(void *)(v432 + 88) = v824;
          *(void *)(v432 + 96) = sub_1004857E8;
          *(void *)(v432 + 104) = v434;
          *(void *)(v432 + 112) = sub_100483A70;
          *(void *)(v432 + 120) = v420;
          *(void *)(v432 + 128) = sub_1004857E8;
          *(void *)(v432 + 136) = v834;
          *(void *)(v432 + 144) = sub_1004857E8;
          *(void *)(v432 + 152) = v421;
          *(void *)(v432 + 160) = sub_100485498;
          *(void *)(v432 + 168) = v423;
          *(void *)(v432 + 176) = sub_1004857E8;
          *(void *)(v432 + 184) = v425;
          *(void *)(v432 + 192) = sub_1004857E8;
          *(void *)(v432 + 200) = v827;
          *(void *)(v432 + 208) = sub_1004840A0;
          *(void *)(v432 + 216) = v429;
          *(void *)(v432 + 224) = sub_1004857E8;
          *(void *)(v432 + 232) = v837;
          *(void *)(v432 + 240) = sub_1004857E8;
          *(void *)(v432 + 248) = v829;
          *(void *)(v432 + 256) = sub_1004840A0;
          *(void *)(v432 + 264) = v431;
          swift_retain();
          os_log_t v435 = v822;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v436 = v831;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v436, (os_log_type_t)v830))
          {
            os_log_t v437 = v435;
            v438 = v838;
            v821 = (char *)v431;
            uint64_t v439 = swift_slowAlloc();
            v440 = swift_slowAlloc();
            uint64_t v849 = (uint64_t)v440;
            v850[0] = 0;
            *(_WORD *)uint64_t v439 = 1282;
            *(unsigned char *)(v439 + 2) = v833[16];
            if (!v844)
            {
              swift_release();
              *(unsigned char *)(v439 + 3) = *((unsigned char *)v438 + 16);
              v853[0] = (void *)(v439 + 4);
              swift_release();
              *(_DWORD *)(v439 + 4) = 2;
              v441 = v821;
              v838 = (uint64_t *)v440;
              *(unsigned char *)(v439 + 8) = v433[2].isa;
              swift_release();
              *(unsigned char *)(v439 + 9) = *(unsigned char *)(v825 + 16);
              uint64_t v442 = swift_release();
              (*(void (**)(uint64_t *__return_ptr, uint64_t))(v832 + 16))(v854, v442);
              sub_1005E2960();
              swift_release();
              *(unsigned char *)(v439 + 11) = v834[2].isa;
              swift_release();
              *(unsigned char *)(v439 + 12) = v437[2].isa;
              v853[0] = (void *)(v439 + 13);
              uint64_t v443 = v828;
              swift_release();
              sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, *(uint64_t (**)(void))(v443 + 16));
              swift_release();
              v444 = v853[0];
              *(unsigned char *)v853[0] = v835[2].isa;
              swift_release();
              *((unsigned char *)v444 + 1) = *(unsigned char *)(v827 + 16);
              uint64_t v445 = swift_release();
              ((void (*)(uint64_t *__return_ptr, uint64_t))v836[2])(v854, v445);
              sub_1005E2960();
              swift_release();
              *((unsigned char *)v444 + 10) = *((unsigned char *)v837 + 16);
              swift_release();
              *((unsigned char *)v444 + 11) = v829[2].isa;
              uint64_t v446 = v846;
              uint64_t v447 = swift_release();
              (*((void (**)(uint64_t *__return_ptr, uint64_t))v441 + 2))(v854, v447);
              sub_1005E2960();
              v853[0] = (void *)((char *)v444 + 20);
              uint64_t v248 = v848;
              swift_release();
              os_log_t v448 = v831;
              _os_log_impl((void *)&_mh_execute_header, v831, (os_log_type_t)v830, "[%.*hhx-%{public}s] [C%llu] Connection did fail (%ld running command(s)): invalid continuation state.", (uint8_t *)v439, 0x29u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v446 + 8))(v823, v847);
              goto LABEL_69;
            }
            goto LABEL_100;
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v846 + 8))(v823, v847);
          break;
        default:
          sub_100484EFC((uint64_t)v198 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v78, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          (*(void (**)(uint64_t *, char *, uint64_t))(v846 + 32))(v206, v78, v847);
          uint64_t v208 = swift_allocObject();
          *(void *)(v208 + 16) = sub_1004839DC;
          *(void *)(v208 + 24) = v198;
          uint64_t v209 = swift_allocObject();
          *(void *)(v209 + 16) = sub_1004854A0;
          *(void *)(v209 + 24) = v208;
          swift_retain_n();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v210 = swift_allocObject();
          *(void *)(v210 + 16) = sub_1004839DC;
          *(void *)(v210 + 24) = v198;
          uint64_t v211 = swift_allocObject();
          *(void *)(v211 + 16) = sub_100485478;
          *(void *)(v211 + 24) = v210;
          uint64_t v212 = swift_allocObject();
          unint64_t v830 = v212;
          *(void *)(v212 + 16) = j___s15IMAP2Connection07CommandB0C12underlyingID0A8Protocol010UnderlyingbE0Vvg;
          *(void *)(v212 + 24) = v198;
          swift_retain();
          os_log_t v835 = (os_log_t)sub_1005E0EB0();
          LODWORD(v834) = sub_1005E25A0();
          uint64_t v213 = swift_allocObject();
          *(unsigned char *)(v213 + 16) = 16;
          uint64_t v214 = swift_allocObject();
          *(unsigned char *)(v214 + 16) = 4;
          uint64_t v215 = swift_allocObject();
          *(unsigned char *)(v215 + 16) = 0;
          os_log_t v831 = (os_log_t)swift_allocObject();
          LOBYTE(v831[2].isa) = 1;
          uint64_t v216 = swift_allocObject();
          *(void *)(v216 + 16) = sub_10035BBC8;
          *(void *)(v216 + 24) = v209;
          v217 = swift_allocObject();
          v217[2].isa = (Class)sub_100485490;
          v217[3].isa = (Class)v216;
          uint64_t v218 = swift_allocObject();
          *(unsigned char *)(v218 + 16) = 34;
          uint64_t v219 = v218;
          uint64_t v832 = swift_allocObject();
          *(unsigned char *)(v832 + 16) = 8;
          uint64_t v220 = swift_allocObject();
          *(void *)(v220 + 16) = sub_1004839E0;
          *(void *)(v220 + 24) = v211;
          uint64_t v221 = swift_allocObject();
          *(void *)(v221 + 16) = sub_10048547C;
          *(void *)(v221 + 24) = v220;
          uint64_t v222 = swift_allocObject();
          *(unsigned char *)(v222 + 16) = 0;
          uint64_t v223 = v222;
          v833 = (char *)swift_allocObject();
          v833[16] = 8;
          unint64_t v224 = v213;
          os_log_t v829 = (os_log_t)v214;
          v225 = v217;
          v836 = (void *)v215;
          v837 = (uint64_t *)v217;
          uint64_t v226 = swift_allocObject();
          unint64_t v227 = v830;
          *(void *)(v226 + 16) = sub_100485488;
          *(void *)(v226 + 24) = v227;
          uint64_t v228 = swift_allocObject();
          *(void *)(v228 + 16) = sub_100485494;
          *(void *)(v228 + 24) = v226;
          sub_10000566C(&qword_100715F48);
          uint64_t v229 = swift_allocObject();
          *(_OWORD *)(v229 + 16) = xmmword_1005F67B0;
          *(void *)(v229 + 32) = sub_1004857E8;
          *(void *)(v229 + 40) = v224;
          *(void *)(v229 + 48) = sub_1004857E8;
          *(void *)(v229 + 56) = v214;
          *(void *)(v229 + 64) = sub_100187A80;
          *(void *)(v229 + 72) = 0;
          *(void *)(v229 + 80) = sub_1004857E8;
          *(void *)(v229 + 88) = v215;
          os_log_t v230 = v831;
          *(void *)(v229 + 96) = sub_1004857E8;
          *(void *)(v229 + 104) = v230;
          *(void *)(v229 + 112) = sub_100483A70;
          *(void *)(v229 + 120) = v225;
          *(void *)(v229 + 128) = sub_1004857E8;
          *(void *)(v229 + 136) = v219;
          uint64_t v231 = v219;
          uint64_t v232 = v832;
          *(void *)(v229 + 144) = sub_1004857E8;
          *(void *)(v229 + 152) = v232;
          *(void *)(v229 + 160) = sub_100485498;
          *(void *)(v229 + 168) = v221;
          *(void *)(v229 + 176) = sub_1004857E8;
          *(void *)(v229 + 184) = v223;
          uint64_t v233 = v223;
          v234 = v833;
          *(void *)(v229 + 192) = sub_1004857E8;
          *(void *)(v229 + 200) = v234;
          *(void *)(v229 + 208) = sub_1004840A0;
          *(void *)(v229 + 216) = v228;
          unint64_t v830 = v224;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v235 = v835;
          swift_bridgeObjectRelease();
          if (!os_log_type_enabled(v235, (os_log_type_t)v834))
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            (*(void (**)(uint64_t *, uint64_t))(v846 + 8))(v838, v847);
            break;
          }
          uint64_t v827 = v231;
          uint64_t v828 = v233;
          uint64_t v236 = swift_slowAlloc();
          uint64_t v237 = swift_slowAlloc();
          uint64_t v849 = v237;
          v850[0] = 0;
          *(_WORD *)uint64_t v236 = 1026;
          *(unsigned char *)(v236 + 2) = *(unsigned char *)(v830 + 16);
          if (!v844)
          {
            unint64_t v238 = v237;
            swift_release();
            *(unsigned char *)(v236 + 3) = v829[2].isa;
            v853[0] = (void *)(v236 + 4);
            uint64_t v239 = v228;
            swift_release();
            *(_DWORD *)(v236 + 4) = 2;
            unint64_t v830 = v238;
            *(unsigned char *)(v236 + 8) = *((unsigned char *)v836 + 16);
            swift_release();
            *(unsigned char *)(v236 + 9) = v831[2].isa;
            uint64_t v240 = swift_release();
            ((void (*)(uint64_t *__return_ptr, uint64_t))v837[2])(v854, v240);
            sub_1005E2960();
            swift_release();
            *(unsigned char *)(v236 + 11) = *(unsigned char *)(v827 + 16);
            swift_release();
            *(unsigned char *)(v236 + 12) = *(unsigned char *)(v832 + 16);
            v853[0] = (void *)(v236 + 13);
            swift_release();
            sub_100481DDC((uint64_t *)v853, (uint64_t)v850, &v849, *(uint64_t (**)(void))(v221 + 16));
            swift_release();
            v241 = v853[0];
            *(unsigned char *)v853[0] = *(unsigned char *)(v828 + 16);
            swift_release();
            *((unsigned char *)v241 + 1) = v833[16];
            uint64_t v242 = v846;
            uint64_t v243 = v847;
            uint64_t v244 = swift_release();
            (*(void (**)(uint64_t *__return_ptr, uint64_t))(v239 + 16))(v854, v244);
            sub_1005E2960();
            v853[0] = (void *)((char *)v241 + 10);
            swift_release();
            os_log_t v245 = v835;
            _os_log_impl((void *)&_mh_execute_header, v835, (os_log_type_t)v834, "[%.*hhx-%{public}s] [C%llu] Connection did fail to authenticate.", (uint8_t *)v236, 0x1Fu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(uint64_t *, uint64_t))(v242 + 8))(v838, v243);
            uint64_t v246 = v843;
            v247 = v839;
            uint64_t v248 = v848;
            goto LABEL_70;
          }
          goto LABEL_100;
      }
      uint64_t v248 = v848;
      goto LABEL_69;
    case 2u:
      uint64_t v123 = v832;
      sub_1004853A0((uint64_t)v91, v832, type metadata accessor for UntaggedResponse);
      uint64_t v124 = swift_allocBox();
      sub_100484EFC(v123, v125, type metadata accessor for UntaggedResponse);
      sub_10046DE48(v124 | 0x3000000000000000);
      swift_release();
      return sub_100484F64(v123, type metadata accessor for UntaggedResponse);
    case 3u:
      Swift::String v127 = *(NSObject **)v91;
      uint64_t v126 = *((void *)v91 + 1);
      uint64_t v842 = *((void *)v91 + 2);
      uint64_t v843 = v126;
      LODWORD(v841) = v91[24];
      uint64_t v128 = v91[28];
      uint64_t v129 = *((unsigned int *)v91 + 8);
      uint64_t v130 = v848;
      swift_beginAccess();
      __uint64_t v131 = static MonotonicTime.now()();
      uint64_t v132 = sub_1004E1EF4(v128 | (v129 << 32), v131);
      char v134 = v133;
      swift_endAccess();
      os_log_t v845 = v127;
      if ((v134 & 1) == 0)
      {
        os_log_t v135 = v824;
        sub_100484EFC(v130 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v824, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        (*(void (**)(char *, os_log_t, uint64_t))(v846 + 32))(v833, v135, v847);
        uint64_t v136 = swift_allocObject();
        *(void *)(v136 + 16) = sub_1004839DC;
        *(void *)(v136 + 24) = v130;
        uint64_t v137 = swift_allocObject();
        *(void *)(v137 + 16) = sub_1004854A0;
        *(void *)(v137 + 24) = v136;
        swift_retain_n();
        swift_retain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_release();
        uint64_t v138 = swift_allocObject();
        *(void *)(v138 + 16) = sub_1004839DC;
        *(void *)(v138 + 24) = v130;
        uint64_t v139 = swift_allocObject();
        *(void *)(v139 + 16) = sub_100485478;
        *(void *)(v139 + 24) = v138;
        uint64_t v140 = swift_allocObject();
        unint64_t v830 = v132;
        *(void *)(v140 + 16) = v132;
        uint64_t v141 = swift_allocObject();
        *(void *)(v141 + 16) = sub_100483D98;
        *(void *)(v141 + 24) = v140;
        os_log_t v834 = (os_log_t)sub_1005E0EB0();
        LODWORD(v837) = sub_1005E2590();
        uint64_t v142 = swift_allocObject();
        *(unsigned char *)(v142 + 16) = 16;
        uint64_t v143 = v142;
        v839 = (char *)swift_allocObject();
        v839[16] = 4;
        uint64_t v144 = swift_allocObject();
        *(unsigned char *)(v144 + 16) = 0;
        os_log_t v831 = (os_log_t)swift_allocObject();
        LOBYTE(v831[2].isa) = 1;
        uint64_t v145 = swift_allocObject();
        *(void *)(v145 + 16) = sub_10035BBC8;
        *(void *)(v145 + 24) = v137;
        uint64_t v146 = swift_allocObject();
        v146[2].isa = (Class)sub_100485490;
        v146[3].isa = (Class)v145;
        uint64_t v147 = swift_allocObject();
        *(unsigned char *)(v147 + 16) = 34;
        unint64_t v148 = v147;
        uint64_t v832 = swift_allocObject();
        *(unsigned char *)(v832 + 16) = 8;
        uint64_t v149 = swift_allocObject();
        *(void *)(v149 + 16) = sub_1004839E0;
        *(void *)(v149 + 24) = v139;
        uint64_t v150 = swift_allocObject();
        *(void *)(v150 + 16) = sub_10048547C;
        *(void *)(v150 + 24) = v149;
        uint64_t v151 = v150;
        os_log_t v835 = (os_log_t)swift_allocObject();
        LOBYTE(v835[2].isa) = 34;
        v836 = (void *)swift_allocObject();
        *((unsigned char *)v836 + 16) = 8;
        uint64_t v152 = swift_allocObject();
        *(void *)(v152 + 16) = sub_100485480;
        *(void *)(v152 + 24) = v141;
        uint64_t v153 = swift_allocObject();
        *(void *)(v153 + 16) = sub_10048547C;
        *(void *)(v153 + 24) = v152;
        os_log_t v840 = v146;
        v838 = (uint64_t *)v144;
        sub_10000566C(&qword_100715F48);
        uint64_t v154 = swift_allocObject();
        *(_OWORD *)(v154 + 16) = xmmword_1005F67B0;
        *(void *)(v154 + 32) = sub_1004857E8;
        *(void *)(v154 + 40) = v143;
        *(void *)(v154 + 48) = sub_1004857E8;
        *(void *)(v154 + 56) = v839;
        *(void *)(v154 + 64) = sub_100187A80;
        *(void *)(v154 + 72) = 0;
        *(void *)(v154 + 80) = sub_1004857E8;
        *(void *)(v154 + 88) = v144;
        *(void *)(v154 + 96) = sub_1004857E8;
        *(void *)(v154 + 104) = v831;
        *(void *)(v154 + 112) = sub_100483A70;
        *(void *)(v154 + 120) = v146;
        *(void *)(v154 + 128) = sub_1004857E8;
        *(void *)(v154 + 136) = v148;
        *(void *)(v154 + 144) = sub_1004857E8;
        *(void *)(v154 + 152) = v832;
        *(void *)(v154 + 160) = sub_100485498;
        uint64_t v155 = v151;
        *(void *)(v154 + 168) = v151;
        *(void *)(v154 + 176) = sub_1004857E8;
        uint64_t v156 = (uint64_t)v836;
        *(void *)(v154 + 184) = v835;
        *(void *)(v154 + 192) = sub_1004857E8;
        *(void *)(v154 + 200) = v156;
        *(void *)(v154 + 208) = sub_100485498;
        *(void *)(v154 + 216) = v153;
        uint64_t v828 = v143;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v829 = v148;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v157 = v834;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v157, (os_log_type_t)v837))
        {
          uint64_t v827 = v153;
          uint64_t v159 = v838;
          uint64_t v158 = v839;
          uint64_t v160 = swift_slowAlloc();
          unint64_t v161 = (void *)swift_slowAlloc();
          v854[0] = 0;
          v853[0] = v161;
          *(_WORD *)uint64_t v160 = 1026;
          *(unsigned char *)(v160 + 2) = *(unsigned char *)(v828 + 16);
          if (v844) {
            goto LABEL_103;
          }
          swift_release();
          *(unsigned char *)(v160 + 3) = v158[16];
          v851[0] = v160 + 4;
          swift_release();
          *(_DWORD *)(v160 + 4) = 2;
          *(unsigned char *)(v160 + 8) = *((unsigned char *)v159 + 16);
          swift_release();
          *(unsigned char *)(v160 + 9) = v831[2].isa;
          uint64_t v162 = swift_release();
          ((void (*)(void **__return_ptr, uint64_t))v840[2].isa)(v850, v162);
          sub_1005E2960();
          swift_release();
          *(unsigned char *)(v160 + 11) = v829[2].isa;
          swift_release();
          *(unsigned char *)(v160 + 12) = *(unsigned char *)(v832 + 16);
          v851[0] = v160 + 13;
          swift_release();
          sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, *(uint64_t (**)(void))(v155 + 16));
          swift_release();
          uint64_t v163 = v851[0];
          *(unsigned char *)v851[0] = v835[2].isa;
          swift_release();
          *(unsigned char *)(v163 + 1) = *((unsigned char *)v836 + 16);
          v851[0] = v163 + 2;
          uint64_t v164 = v833;
          uint64_t v165 = v827;
          swift_release();
          sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, *(uint64_t (**)(void))(v165 + 16));
          swift_release();
          os_log_t v166 = v834;
          _os_log_impl((void *)&_mh_execute_header, v834, (os_log_type_t)v837, "[%.*hhx-%{public}s] Command %{public}s completed.", (uint8_t *)v160, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v846 + 8))(v164, v847);
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v846 + 8))(v833, v847);
        }
        os_log_t v325 = v845;
        int v404 = v830;
        unint64_t v405 = HIDWORD(v830);
        uint64_t v406 = swift_allocObject();
        *(_DWORD *)(v406 + 16) = v404;
        *(_DWORD *)(v406 + 20) = v405;
        uint64_t v408 = v842;
        uint64_t v407 = v843;
        *(void *)(v406 + 24) = v325;
        *(void *)(v406 + 32) = v407;
        *(void *)(v406 + 40) = v408;
        unint64_t v409 = v406 | 0x4000000000000000;
        unsigned __int8 v410 = v841;
        *(unsigned char *)(v406 + 48) = (_BYTE)v841;
        sub_100483498((unint64_t)v325, v407, v408, v410);
        sub_10046DE48(v409);
        uint64_t v328 = swift_release();
LABEL_82:
        sub_10047CBD8(v328);
        return sub_1004832E0((unint64_t)v325, v407, v408, v410);
      }
      uint64_t v298 = v846;
      if (v132)
      {
        if (v132 == 1)
        {
          uint64_t v299 = v813;
          sub_100484EFC(v130 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v813, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          (*(void (**)(char *, uint64_t, uint64_t))(v298 + 32))(v819, v299, v847);
          uint64_t v300 = swift_allocObject();
          *(void *)(v300 + 16) = sub_1004839DC;
          *(void *)(v300 + 24) = v130;
          uint64_t v301 = swift_allocObject();
          *(void *)(v301 + 16) = sub_1004854A0;
          *(void *)(v301 + 24) = v300;
          swift_retain_n();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v302 = swift_allocObject();
          *(void *)(v302 + 16) = sub_1004839DC;
          *(void *)(v302 + 24) = v130;
          uint64_t v303 = swift_allocObject();
          *(void *)(v303 + 16) = sub_100485478;
          *(void *)(v303 + 24) = v302;
          uint64_t v304 = swift_allocObject();
          *(unsigned char *)(v304 + 16) = v128;
          *(_DWORD *)(v304 + 20) = v129;
          uint64_t v305 = swift_allocObject();
          *(void *)(v305 + 16) = sub_1004857F4;
          *(void *)(v305 + 24) = v304;
          v837 = (uint64_t *)sub_1005E0EB0();
          LODWORD(v836) = sub_1005E25C0();
          uint64_t v306 = swift_allocObject();
          *(unsigned char *)(v306 + 16) = 16;
          unint64_t v307 = v306;
          v839 = (char *)swift_allocObject();
          v839[16] = 4;
          uint64_t v308 = swift_allocObject();
          *(unsigned char *)(v308 + 16) = 0;
          uint64_t v832 = swift_allocObject();
          *(unsigned char *)(v832 + 16) = 1;
          uint64_t v309 = swift_allocObject();
          *(void *)(v309 + 16) = sub_10035BBC8;
          *(void *)(v309 + 24) = v301;
          v310 = swift_allocObject();
          v310[2].isa = (Class)sub_100485490;
          v310[3].isa = (Class)v309;
          uint64_t v311 = swift_allocObject();
          *(unsigned char *)(v311 + 16) = 34;
          v312 = v311;
          v833 = (char *)swift_allocObject();
          v833[16] = 8;
          uint64_t v313 = swift_allocObject();
          *(void *)(v313 + 16) = sub_1004839E0;
          *(void *)(v313 + 24) = v303;
          uint64_t v314 = swift_allocObject();
          *(void *)(v314 + 16) = sub_10048547C;
          *(void *)(v314 + 24) = v313;
          uint64_t v315 = v314;
          os_log_t v834 = (os_log_t)swift_allocObject();
          LOBYTE(v834[2].isa) = 34;
          os_log_t v835 = (os_log_t)swift_allocObject();
          LOBYTE(v835[2].isa) = 8;
          uint64_t v316 = swift_allocObject();
          *(void *)(v316 + 16) = sub_100485480;
          *(void *)(v316 + 24) = v305;
          v317 = swift_allocObject();
          v317[2].isa = (Class)sub_10048547C;
          v317[3].isa = (Class)v316;
          os_log_t v840 = v310;
          v838 = (uint64_t *)v308;
          sub_10000566C(&qword_100715F48);
          uint64_t v318 = swift_allocObject();
          *(_OWORD *)(v318 + 16) = xmmword_1005F67B0;
          *(void *)(v318 + 32) = sub_1004857E8;
          *(void *)(v318 + 40) = v307;
          *(void *)(v318 + 48) = sub_1004857E8;
          *(void *)(v318 + 56) = v839;
          *(void *)(v318 + 64) = sub_100187A80;
          *(void *)(v318 + 72) = 0;
          *(void *)(v318 + 80) = sub_1004857E8;
          *(void *)(v318 + 88) = v308;
          *(void *)(v318 + 96) = sub_1004857E8;
          *(void *)(v318 + 104) = v832;
          *(void *)(v318 + 112) = sub_100483A70;
          *(void *)(v318 + 120) = v310;
          *(void *)(v318 + 128) = sub_1004857E8;
          *(void *)(v318 + 136) = v312;
          *(void *)(v318 + 144) = sub_1004857E8;
          os_log_t v319 = v834;
          *(void *)(v318 + 152) = v833;
          *(void *)(v318 + 160) = sub_100485498;
          *(void *)(v318 + 168) = v315;
          *(void *)(v318 + 176) = sub_1004857E8;
          *(void *)(v318 + 184) = v319;
          *(void *)(v318 + 192) = sub_1004857E8;
          *(void *)(v318 + 200) = v835;
          *(void *)(v318 + 208) = sub_100485498;
          *(void *)(v318 + 216) = v317;
          unint64_t v830 = v307;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v831 = v312;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v320 = v837;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v320, (os_log_type_t)v836))
          {
            os_log_t v829 = v317;
            v321 = v838;
            uint64_t v322 = swift_slowAlloc();
            v323 = (void *)swift_slowAlloc();
            v854[0] = 0;
            v853[0] = v323;
            *(_WORD *)uint64_t v322 = 1026;
            *(unsigned char *)(v322 + 2) = *(unsigned char *)(v830 + 16);
            if (!v844)
            {
              swift_release();
              *(unsigned char *)(v322 + 3) = v839[16];
              v851[0] = v322 + 4;
              swift_release();
              *(_DWORD *)(v322 + 4) = 2;
              *(unsigned char *)(v322 + 8) = *((unsigned char *)v321 + 16);
              swift_release();
              *(unsigned char *)(v322 + 9) = *(unsigned char *)(v832 + 16);
              uint64_t v324 = swift_release();
              ((void (*)(void **__return_ptr, uint64_t))v840[2].isa)(v850, v324);
              sub_1005E2960();
              swift_release();
              *(unsigned char *)(v322 + 11) = v831[2].isa;
              swift_release();
              *(unsigned char *)(v322 + 12) = v833[16];
              v851[0] = v322 + 13;
              os_log_t v325 = v845;
              swift_release();
              sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, *(uint64_t (**)(void))(v315 + 16));
              swift_release();
              uint64_t v326 = v851[0];
              *(unsigned char *)v851[0] = v834[2].isa;
              swift_release();
              *(unsigned char *)(v326 + 1) = v835[2].isa;
              v851[0] = v326 + 2;
              swift_release();
              sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, (uint64_t (*)(void))v829[2].isa);
              swift_release();
              os_log_t v327 = (os_log_t)v837;
              _os_log_impl((void *)&_mh_execute_header, (os_log_t)v837, (os_log_type_t)v836, "[%.*hhx-%{public}s] %{public}s IDLE completed.", (uint8_t *)v322, 0x1Fu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v328 = (*(uint64_t (**)(char *, uint64_t))(v846 + 8))(v819, v847);
LABEL_81:
              uint64_t v408 = v842;
              uint64_t v407 = v843;
              unsigned __int8 v410 = v841;
              goto LABEL_82;
            }
            goto LABEL_105;
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          uint64_t v328 = (*(uint64_t (**)(char *, uint64_t))(v846 + 8))(v819, v847);
        }
        else
        {
          uint64_t v573 = v814;
          sub_100484EFC(v130 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v814, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          (*(void (**)(char *, uint64_t, uint64_t))(v298 + 32))(v820, v573, v847);
          uint64_t v574 = swift_allocObject();
          *(void *)(v574 + 16) = sub_1004839DC;
          *(void *)(v574 + 24) = v130;
          uint64_t v575 = swift_allocObject();
          *(void *)(v575 + 16) = sub_1004854A0;
          *(void *)(v575 + 24) = v574;
          swift_retain_n();
          swift_retain();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_release();
          uint64_t v576 = swift_allocObject();
          *(void *)(v576 + 16) = sub_1004839DC;
          *(void *)(v576 + 24) = v130;
          uint64_t v577 = swift_allocObject();
          *(void *)(v577 + 16) = sub_100485478;
          *(void *)(v577 + 24) = v576;
          uint64_t v578 = swift_allocObject();
          *(unsigned char *)(v578 + 16) = v128;
          *(_DWORD *)(v578 + 20) = v129;
          uint64_t v579 = swift_allocObject();
          *(void *)(v579 + 16) = sub_1004857F4;
          *(void *)(v579 + 24) = v578;
          v837 = (uint64_t *)sub_1005E0EB0();
          LODWORD(v836) = sub_1005E25A0();
          uint64_t v580 = swift_allocObject();
          *(unsigned char *)(v580 + 16) = 16;
          unint64_t v581 = v580;
          v839 = (char *)swift_allocObject();
          v839[16] = 4;
          uint64_t v582 = swift_allocObject();
          *(unsigned char *)(v582 + 16) = 0;
          uint64_t v832 = swift_allocObject();
          *(unsigned char *)(v832 + 16) = 1;
          uint64_t v583 = swift_allocObject();
          *(void *)(v583 + 16) = sub_10035BBC8;
          *(void *)(v583 + 24) = v575;
          v584 = swift_allocObject();
          v584[2].isa = (Class)sub_100485490;
          v584[3].isa = (Class)v583;
          uint64_t v585 = swift_allocObject();
          *(unsigned char *)(v585 + 16) = 34;
          v586 = v585;
          v833 = (char *)swift_allocObject();
          v833[16] = 8;
          uint64_t v587 = swift_allocObject();
          *(void *)(v587 + 16) = sub_1004839E0;
          *(void *)(v587 + 24) = v577;
          uint64_t v588 = swift_allocObject();
          *(void *)(v588 + 16) = sub_10048547C;
          *(void *)(v588 + 24) = v587;
          uint64_t v589 = v588;
          os_log_t v834 = (os_log_t)swift_allocObject();
          LOBYTE(v834[2].isa) = 34;
          os_log_t v835 = (os_log_t)swift_allocObject();
          LOBYTE(v835[2].isa) = 8;
          uint64_t v590 = swift_allocObject();
          *(void *)(v590 + 16) = sub_100483D00;
          *(void *)(v590 + 24) = v579;
          v591 = swift_allocObject();
          v591[2].isa = (Class)sub_10048547C;
          v591[3].isa = (Class)v590;
          os_log_t v840 = v584;
          v838 = (uint64_t *)v582;
          sub_10000566C(&qword_100715F48);
          uint64_t v592 = swift_allocObject();
          *(_OWORD *)(v592 + 16) = xmmword_1005F67B0;
          *(void *)(v592 + 32) = sub_1004857E8;
          *(void *)(v592 + 40) = v581;
          *(void *)(v592 + 48) = sub_1004857E8;
          *(void *)(v592 + 56) = v839;
          *(void *)(v592 + 64) = sub_100187A80;
          *(void *)(v592 + 72) = 0;
          *(void *)(v592 + 80) = sub_1004857E8;
          *(void *)(v592 + 88) = v582;
          *(void *)(v592 + 96) = sub_1004857E8;
          *(void *)(v592 + 104) = v832;
          *(void *)(v592 + 112) = sub_100483A70;
          *(void *)(v592 + 120) = v584;
          *(void *)(v592 + 128) = sub_1004857E8;
          *(void *)(v592 + 136) = v586;
          *(void *)(v592 + 144) = sub_1004857E8;
          os_log_t v593 = v834;
          *(void *)(v592 + 152) = v833;
          *(void *)(v592 + 160) = sub_100485498;
          *(void *)(v592 + 168) = v589;
          *(void *)(v592 + 176) = sub_1004857E8;
          *(void *)(v592 + 184) = v593;
          *(void *)(v592 + 192) = sub_1004857E8;
          *(void *)(v592 + 200) = v835;
          *(void *)(v592 + 208) = sub_100485498;
          *(void *)(v592 + 216) = v591;
          unint64_t v830 = v581;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          os_log_t v831 = v586;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v594 = v837;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v594, (os_log_type_t)v836))
          {
            os_log_t v829 = v591;
            v595 = v838;
            uint64_t v596 = swift_slowAlloc();
            v597 = (void *)swift_slowAlloc();
            v854[0] = 0;
            v853[0] = v597;
            *(_WORD *)uint64_t v596 = 1026;
            *(unsigned char *)(v596 + 2) = *(unsigned char *)(v830 + 16);
            if (!v844)
            {
              swift_release();
              *(unsigned char *)(v596 + 3) = v839[16];
              v851[0] = v596 + 4;
              swift_release();
              *(_DWORD *)(v596 + 4) = 2;
              *(unsigned char *)(v596 + 8) = *((unsigned char *)v595 + 16);
              swift_release();
              *(unsigned char *)(v596 + 9) = *(unsigned char *)(v832 + 16);
              uint64_t v598 = swift_release();
              ((void (*)(void **__return_ptr, uint64_t))v840[2].isa)(v850, v598);
              sub_1005E2960();
              swift_release();
              *(unsigned char *)(v596 + 11) = v831[2].isa;
              swift_release();
              *(unsigned char *)(v596 + 12) = v833[16];
              v851[0] = v596 + 13;
              os_log_t v325 = v845;
              swift_release();
              sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, *(uint64_t (**)(void))(v589 + 16));
              swift_release();
              uint64_t v599 = v851[0];
              *(unsigned char *)v851[0] = v834[2].isa;
              swift_release();
              *(unsigned char *)(v599 + 1) = v835[2].isa;
              v851[0] = v599 + 2;
              swift_release();
              sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, (uint64_t (*)(void))v829[2].isa);
              swift_release();
              os_log_t v600 = (os_log_t)v837;
              _os_log_impl((void *)&_mh_execute_header, (os_log_t)v837, (os_log_type_t)v836, "[%.*hhx-%{public}s] Command with unknown tag %{public}s completed.", (uint8_t *)v596, 0x1Fu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v328 = (*(uint64_t (**)(char *, uint64_t))(v846 + 8))(v820, v847);
              goto LABEL_81;
            }
            goto LABEL_105;
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          uint64_t v328 = (*(uint64_t (**)(char *, uint64_t))(v846 + 8))(v820, v847);
        }
      }
      else
      {
        uint64_t v545 = v812;
        sub_100484EFC(v130 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v812, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        (*(void (**)(char *, uint64_t, uint64_t))(v298 + 32))(v818, v545, v847);
        uint64_t v546 = swift_allocObject();
        *(void *)(v546 + 16) = sub_1004839DC;
        *(void *)(v546 + 24) = v130;
        uint64_t v547 = swift_allocObject();
        *(void *)(v547 + 16) = sub_1004854A0;
        *(void *)(v547 + 24) = v546;
        swift_retain_n();
        swift_retain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_release();
        uint64_t v548 = swift_allocObject();
        *(void *)(v548 + 16) = sub_1004839DC;
        *(void *)(v548 + 24) = v130;
        uint64_t v549 = swift_allocObject();
        *(void *)(v549 + 16) = sub_100485478;
        *(void *)(v549 + 24) = v548;
        uint64_t v550 = swift_allocObject();
        *(unsigned char *)(v550 + 16) = v128;
        *(_DWORD *)(v550 + 20) = v129;
        uint64_t v551 = swift_allocObject();
        *(void *)(v551 + 16) = sub_100483D98;
        *(void *)(v551 + 24) = v550;
        v837 = (uint64_t *)sub_1005E0EB0();
        LODWORD(v836) = sub_1005E2590();
        uint64_t v552 = swift_allocObject();
        *(unsigned char *)(v552 + 16) = 16;
        unint64_t v553 = v552;
        v839 = (char *)swift_allocObject();
        v839[16] = 4;
        uint64_t v554 = swift_allocObject();
        *(unsigned char *)(v554 + 16) = 0;
        uint64_t v832 = swift_allocObject();
        *(unsigned char *)(v832 + 16) = 1;
        uint64_t v555 = swift_allocObject();
        *(void *)(v555 + 16) = sub_10035BBC8;
        *(void *)(v555 + 24) = v547;
        v556 = swift_allocObject();
        v556[2].isa = (Class)sub_100485490;
        v556[3].isa = (Class)v555;
        uint64_t v557 = swift_allocObject();
        *(unsigned char *)(v557 + 16) = 34;
        v558 = v557;
        v833 = (char *)swift_allocObject();
        v833[16] = 8;
        uint64_t v559 = swift_allocObject();
        *(void *)(v559 + 16) = sub_1004839E0;
        *(void *)(v559 + 24) = v549;
        uint64_t v560 = swift_allocObject();
        *(void *)(v560 + 16) = sub_10048547C;
        *(void *)(v560 + 24) = v559;
        uint64_t v561 = v560;
        os_log_t v834 = (os_log_t)swift_allocObject();
        LOBYTE(v834[2].isa) = 34;
        os_log_t v835 = (os_log_t)swift_allocObject();
        LOBYTE(v835[2].isa) = 8;
        uint64_t v562 = swift_allocObject();
        *(void *)(v562 + 16) = sub_100485480;
        *(void *)(v562 + 24) = v551;
        v563 = swift_allocObject();
        v563[2].isa = (Class)sub_10048547C;
        v563[3].isa = (Class)v562;
        os_log_t v840 = v556;
        v838 = (uint64_t *)v554;
        sub_10000566C(&qword_100715F48);
        uint64_t v564 = swift_allocObject();
        *(_OWORD *)(v564 + 16) = xmmword_1005F67B0;
        *(void *)(v564 + 32) = sub_1004857E8;
        *(void *)(v564 + 40) = v553;
        *(void *)(v564 + 48) = sub_1004857E8;
        *(void *)(v564 + 56) = v839;
        *(void *)(v564 + 64) = sub_100187A80;
        *(void *)(v564 + 72) = 0;
        *(void *)(v564 + 80) = sub_1004857E8;
        *(void *)(v564 + 88) = v554;
        *(void *)(v564 + 96) = sub_1004857E8;
        *(void *)(v564 + 104) = v832;
        *(void *)(v564 + 112) = sub_100483A70;
        *(void *)(v564 + 120) = v556;
        *(void *)(v564 + 128) = sub_1004857E8;
        *(void *)(v564 + 136) = v558;
        *(void *)(v564 + 144) = sub_1004857E8;
        os_log_t v565 = v834;
        *(void *)(v564 + 152) = v833;
        *(void *)(v564 + 160) = sub_100485498;
        *(void *)(v564 + 168) = v561;
        *(void *)(v564 + 176) = sub_1004857E8;
        *(void *)(v564 + 184) = v565;
        *(void *)(v564 + 192) = sub_1004857E8;
        *(void *)(v564 + 200) = v835;
        *(void *)(v564 + 208) = sub_100485498;
        *(void *)(v564 + 216) = v563;
        unint64_t v830 = v553;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v831 = v558;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v566 = v837;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v566, (os_log_type_t)v836))
        {
          os_log_t v829 = v563;
          v567 = v838;
          uint64_t v568 = swift_slowAlloc();
          v569 = (void *)swift_slowAlloc();
          v854[0] = 0;
          v853[0] = v569;
          *(_WORD *)uint64_t v568 = 1026;
          *(unsigned char *)(v568 + 2) = *(unsigned char *)(v830 + 16);
          if (!v844)
          {
            swift_release();
            *(unsigned char *)(v568 + 3) = v839[16];
            v851[0] = v568 + 4;
            swift_release();
            *(_DWORD *)(v568 + 4) = 2;
            *(unsigned char *)(v568 + 8) = *((unsigned char *)v567 + 16);
            swift_release();
            *(unsigned char *)(v568 + 9) = *(unsigned char *)(v832 + 16);
            uint64_t v570 = swift_release();
            ((void (*)(void **__return_ptr, uint64_t))v840[2].isa)(v850, v570);
            sub_1005E2960();
            swift_release();
            *(unsigned char *)(v568 + 11) = v831[2].isa;
            swift_release();
            *(unsigned char *)(v568 + 12) = v833[16];
            v851[0] = v568 + 13;
            os_log_t v325 = v845;
            swift_release();
            sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, *(uint64_t (**)(void))(v561 + 16));
            swift_release();
            uint64_t v571 = v851[0];
            *(unsigned char *)v851[0] = v834[2].isa;
            swift_release();
            *(unsigned char *)(v571 + 1) = v835[2].isa;
            v851[0] = v571 + 2;
            swift_release();
            sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, (uint64_t (*)(void))v829[2].isa);
            swift_release();
            os_log_t v572 = (os_log_t)v837;
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v837, (os_log_type_t)v836, "[%.*hhx-%{public}s] %{public}s NOOP completed.", (uint8_t *)v568, 0x1Fu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v328 = (*(uint64_t (**)(char *, uint64_t))(v846 + 8))(v818, v847);
            goto LABEL_81;
          }
LABEL_105:
          swift_errorRelease();
          __break(1u);
          goto LABEL_106;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v328 = (*(uint64_t (**)(char *, uint64_t))(v846 + 8))(v818, v847);
      }
      os_log_t v325 = v845;
      goto LABEL_81;
    case 4u:
      os_log_t v845 = *(os_log_t *)v91;
      uint64_t v842 = *((void *)v91 + 1);
      LODWORD(v841) = v91[16];
      uint64_t v93 = v848;
      v836 = (void *)(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger);
      sub_100484EFC(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v55, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      os_log_t v831 = *(os_log_t *)(v846 + 32);
      uint64_t v832 = v846 + 32;
      ((void (*)(os_log_t, char *, uint64_t))v831)(v840, v55, v847);
      uint64_t v94 = swift_allocObject();
      *(void *)(v94 + 16) = sub_1004839DC;
      *(void *)(v94 + 24) = v93;
      uint64_t v95 = swift_allocObject();
      *(void *)(v95 + 16) = sub_1004854A0;
      *(void *)(v95 + 24) = v94;
      swift_retain_n();
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_release();
      uint64_t v96 = swift_allocObject();
      *(void *)(v96 + 16) = sub_1004839DC;
      *(void *)(v96 + 24) = v93;
      uint64_t v97 = swift_allocObject();
      *(void *)(v97 + 16) = sub_100485478;
      *(void *)(v97 + 24) = v96;
      v838 = (uint64_t *)sub_1005E0EB0();
      LODWORD(v837) = sub_1005E2590();
      uint64_t v98 = swift_allocObject();
      *(unsigned char *)(v98 + 16) = 16;
      os_log_t v835 = (os_log_t)swift_allocObject();
      LOBYTE(v835[2].isa) = 4;
      uint64_t v99 = swift_allocObject();
      *(unsigned char *)(v99 + 16) = 0;
      uint64_t v100 = swift_allocObject();
      *(unsigned char *)(v100 + 16) = 1;
      uint64_t v101 = swift_allocObject();
      *(void *)(v101 + 16) = sub_10035BBC8;
      *(void *)(v101 + 24) = v95;
      uint64_t v102 = swift_allocObject();
      *(void *)(v102 + 16) = sub_100485490;
      *(void *)(v102 + 24) = v101;
      uint64_t v103 = swift_allocObject();
      *(unsigned char *)(v103 + 16) = 34;
      uint64_t v104 = swift_allocObject();
      *(unsigned char *)(v104 + 16) = 8;
      uint64_t v105 = swift_allocObject();
      *(void *)(v105 + 16) = sub_1004839E0;
      *(void *)(v105 + 24) = v97;
      uint64_t v106 = swift_allocObject();
      *(void *)(v106 + 16) = sub_10048547C;
      *(void *)(v106 + 24) = v105;
      uint64_t v107 = v99;
      v833 = (char *)sub_10000566C(&qword_100715F48);
      uint64_t v108 = swift_allocObject();
      *(_OWORD *)(v108 + 16) = xmmword_1005F6780;
      *(void *)(v108 + 32) = sub_1004857E8;
      *(void *)(v108 + 40) = v98;
      os_log_t v109 = v835;
      *(void *)(v108 + 48) = sub_1004857E8;
      *(void *)(v108 + 56) = v109;
      *(void *)(v108 + 64) = sub_100187A80;
      *(void *)(v108 + 72) = 0;
      *(void *)(v108 + 80) = sub_1004857E8;
      *(void *)(v108 + 88) = v99;
      *(void *)(v108 + 96) = sub_1004857E8;
      *(void *)(v108 + 104) = v100;
      *(void *)(v108 + 112) = sub_100483A70;
      *(void *)(v108 + 120) = v102;
      *(void *)(v108 + 128) = sub_1004857E8;
      *(void *)(v108 + 136) = v103;
      *(void *)(v108 + 144) = sub_1004857E8;
      *(void *)(v108 + 152) = v104;
      *(void *)(v108 + 160) = sub_100485498;
      *(void *)(v108 + 168) = v106;
      uint64_t v110 = v98;
      os_log_t v111 = v109;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v112 = v838;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v112, (os_log_type_t)v837))
      {
        uint64_t v828 = v107;
        unint64_t v830 = v103;
        uint64_t v113 = swift_slowAlloc();
        v114 = swift_slowAlloc();
        v854[0] = 0;
        v853[0] = &v114->isa;
        *(_WORD *)uint64_t v113 = 770;
        *(unsigned char *)(v113 + 2) = *(unsigned char *)(v110 + 16);
        v115 = v844;
        if (v844)
        {
LABEL_101:
          swift_errorRelease();
          __break(1u);
          goto LABEL_102;
        }
        uint64_t v116 = v114;
        swift_release();
        *(unsigned char *)(v113 + 3) = v111[2].isa;
        v851[0] = v113 + 4;
        swift_release();
        *(_DWORD *)(v113 + 4) = 2;
        os_log_t v835 = v116;
        *(unsigned char *)(v113 + 8) = *(unsigned char *)(v828 + 16);
        swift_release();
        *(unsigned char *)(v113 + 9) = *(unsigned char *)(v100 + 16);
        uint64_t v117 = swift_release();
        (*(void (**)(void **__return_ptr, uint64_t))(v102 + 16))(v850, v117);
        sub_1005E2960();
        uint64_t v118 = v848;
        swift_release();
        *(unsigned char *)(v113 + 11) = *(unsigned char *)(v830 + 16);
        swift_release();
        *(unsigned char *)(v113 + 12) = *(unsigned char *)(v104 + 16);
        v851[0] = v113 + 13;
        os_log_t v119 = v840;
        swift_release();
        sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, *(uint64_t (**)(void))(v106 + 16));
        uint64_t v120 = v846;
        uint64_t v121 = v847;
        swift_release();
        os_log_t v122 = (os_log_t)v838;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v838, (os_log_type_t)v837, "[%.*hhx-%{public}s] Received handshake.", (uint8_t *)v113, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(os_log_t, uint64_t))(v120 + 8))(v119, v121);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v121 = v847;
        (*(void (**)(os_log_t, uint64_t))(v846 + 8))(v840, v847);
        uint64_t v118 = v848;
        v115 = v844;
      }
      uint64_t v254 = v118 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
      swift_retain();
      swift_beginAccess();
      uint64_t v255 = v254;
      os_log_t v256 = v834;
      sub_100484EFC(v255, (uint64_t)v834, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      swift_retain();
      uint64_t v257 = (uint64_t)v836;
      sub_1004A15A8((uint64_t)v845, v842, (char)v841, (uint64_t)v836, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1004857E4, v118, (uint64_t)v256, v118);
      if (v115)
      {
        uint64_t v258 = (uint64_t)v256;
        uint64_t v259 = v843;
        sub_1004853A0(v258, v843, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        sub_1004694E8(v259);
        swift_release();
        os_log_t v260 = v829;
        sub_100484EFC(v257, (uint64_t)v829, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        ((void (*)(char *, os_log_t, uint64_t))v831)(v839, v260, v121);
        uint64_t v261 = swift_allocObject();
        *(void *)(v261 + 16) = sub_1004839DC;
        *(void *)(v261 + 24) = v118;
        uint64_t v262 = swift_allocObject();
        *(void *)(v262 + 16) = sub_1004854A0;
        *(void *)(v262 + 24) = v261;
        swift_retain_n();
        swift_retain();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_release();
        uint64_t v263 = swift_allocObject();
        *(void *)(v263 + 16) = sub_1004839DC;
        *(void *)(v263 + 24) = v118;
        uint64_t v264 = swift_allocObject();
        *(void *)(v264 + 16) = sub_100485478;
        *(void *)(v264 + 24) = v263;
        os_log_t v835 = (os_log_t)swift_allocObject();
        v835[2].isa = v115;
        swift_errorRetain();
        os_log_t v840 = (os_log_t)sub_1005E0EB0();
        LODWORD(v838) = sub_1005E25A0();
        uint64_t v265 = swift_allocObject();
        *(unsigned char *)(v265 + 16) = 16;
        uint64_t v266 = v265;
        uint64_t v843 = swift_allocObject();
        *(unsigned char *)(v843 + 16) = 4;
        uint64_t v267 = swift_allocObject();
        *(unsigned char *)(v267 + 16) = 0;
        uint64_t v268 = swift_allocObject();
        *(unsigned char *)(v268 + 16) = 1;
        uint64_t v269 = v268;
        uint64_t v270 = swift_allocObject();
        *(void *)(v270 + 16) = sub_10035BBC8;
        *(void *)(v270 + 24) = v262;
        uint64_t v271 = swift_allocObject();
        os_log_t v834 = (os_log_t)v115;
        v272 = v271;
        *(void *)(v271 + 16) = sub_100485490;
        *(void *)(v271 + 24) = v270;
        v837 = (uint64_t *)swift_allocObject();
        *((unsigned char *)v837 + 16) = 34;
        os_log_t v831 = (os_log_t)swift_allocObject();
        LOBYTE(v831[2].isa) = 8;
        uint64_t v273 = swift_allocObject();
        *(void *)(v273 + 16) = sub_1004839E0;
        *(void *)(v273 + 24) = v264;
        uint64_t v274 = swift_allocObject();
        *(void *)(v274 + 16) = sub_10048547C;
        *(void *)(v274 + 24) = v273;
        uint64_t v275 = v274;
        v836 = (void *)v274;
        uint64_t v276 = swift_allocObject();
        *(unsigned char *)(v276 + 16) = 64;
        uint64_t v277 = swift_allocObject();
        *(unsigned char *)(v277 + 16) = 8;
        uint64_t v278 = swift_allocObject();
        os_log_t v279 = v835;
        *(void *)(v278 + 16) = sub_100483C58;
        *(void *)(v278 + 24) = v279;
        v280 = swift_allocObject();
        v280[2].isa = (Class)sub_100483CE0;
        v280[3].isa = (Class)v278;
        uint64_t v281 = v267;
        v844 = (objc_class *)v267;
        uint64_t v282 = swift_allocObject();
        *(_OWORD *)(v282 + 16) = xmmword_1005F67B0;
        *(void *)(v282 + 32) = sub_1004857E8;
        uint64_t v283 = v266;
        *(void *)(v282 + 40) = v266;
        *(void *)(v282 + 48) = sub_1004857E8;
        *(void *)(v282 + 56) = v843;
        *(void *)(v282 + 64) = sub_100187A80;
        *(void *)(v282 + 72) = 0;
        *(void *)(v282 + 80) = sub_1004857E8;
        *(void *)(v282 + 88) = v281;
        *(void *)(v282 + 96) = sub_1004857E8;
        v284 = (char *)v269;
        *(void *)(v282 + 104) = v269;
        *(void *)(v282 + 112) = sub_100483A70;
        *(void *)(v282 + 120) = v272;
        *(void *)(v282 + 128) = sub_1004857E8;
        *(void *)(v282 + 136) = v837;
        *(void *)(v282 + 144) = sub_1004857E8;
        os_log_t v285 = v831;
        *(void *)(v282 + 152) = v831;
        *(void *)(v282 + 160) = sub_100485498;
        *(void *)(v282 + 168) = v275;
        *(void *)(v282 + 176) = sub_1004857E8;
        *(void *)(v282 + 184) = v276;
        *(void *)(v282 + 192) = sub_1004857E8;
        *(void *)(v282 + 200) = v277;
        *(void *)(v282 + 208) = sub_100483CE8;
        *(void *)(v282 + 216) = v280;
        uint64_t v832 = v283;
        swift_retain();
        swift_retain();
        swift_retain();
        v833 = v284;
        swift_retain();
        os_log_t v835 = v272;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_log_t v286 = v840;
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v286, (os_log_type_t)v838))
        {
          os_log_t v829 = v280;
          unint64_t v830 = v276;
          uint64_t v287 = swift_slowAlloc();
          v288 = (void *)swift_slowAlloc();
          v289 = (void *)swift_slowAlloc();
          v853[0] = v288;
          v850[0] = v289;
          *(_WORD *)uint64_t v287 = 1026;
          *(unsigned char *)(v287 + 2) = *(unsigned char *)(v832 + 16);
          swift_release();
          *(unsigned char *)(v287 + 3) = *(unsigned char *)(v843 + 16);
          v854[0] = v287 + 4;
          swift_release();
          *(_DWORD *)(v287 + 4) = 2;
          *(unsigned char *)(v287 + 8) = *((unsigned char *)v844 + 16);
          swift_release();
          *(unsigned char *)(v287 + 9) = v833[16];
          uint64_t v290 = swift_release();
          ((void (*)(uint64_t *__return_ptr, uint64_t))v835[2].isa)(&v849, v290);
          sub_1005E2960();
          swift_release();
          *(unsigned char *)(v287 + 11) = *((unsigned char *)v837 + 16);
          swift_release();
          *(unsigned char *)(v287 + 12) = v285[2].isa;
          v854[0] = v287 + 13;
          uint64_t v291 = (uint64_t)v836;
          swift_release();
          sub_100481DDC(v854, (uint64_t)v853, (uint64_t *)v850, *(uint64_t (**)(void))(v291 + 16));
          swift_release();
          uint64_t v292 = v854[0];
          *(unsigned char *)v854[0] = *(unsigned char *)(v830 + 16);
          swift_release();
          *(unsigned char *)(v292 + 1) = *(unsigned char *)(v277 + 16);
          v854[0] = v292 + 2;
          uint64_t v293 = v846;
          uint64_t v294 = v847;
          v295 = v839;
          os_log_t v296 = v829;
          swift_release();
          sub_1004C2150(v854, v853, (uint64_t)v850, (uint64_t (*)(void))v296[2].isa);
          swift_release();
          os_log_t v297 = v840;
          _os_log_impl((void *)&_mh_execute_header, v840, (os_log_type_t)v838, "[%.*hhx-%{public}s] Received handshake query from server, but not in a state where we expect it: %@", (uint8_t *)v287, 0x1Fu);
          sub_10000566C(&qword_100717A10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
          (*(void (**)(char *, uint64_t))(v293 + 8))(v295, v294);
        }
        else
        {
          swift_errorRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v846 + 8))(v839, v847);
        }
      }
      else
      {
        sub_1004694E8((uint64_t)v256);
        swift_release();
      }
      sub_10047D4E0();
      sub_10046D764(0x8000000000000008);
      return sub_1004445F8((uint64_t)v845, v842, (char)v841);
    case 5u:
      uint64_t v249 = *(void *)v91;
      uint64_t v250 = v848;
      v251 = (Swift::Int *)(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
      swift_beginAccess();
      if (sub_100013158(*v251, v249)) {
        return swift_bridgeObjectRelease();
      }
      Swift::Int *v251 = v249;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v332 = v825;
      sub_100484EFC(v250 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v825, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      (*(void (**)(os_log_t, uint64_t, uint64_t))(v846 + 32))(v835, v332, v847);
      uint64_t v333 = swift_allocObject();
      *(void *)(v333 + 16) = sub_1004839DC;
      *(void *)(v333 + 24) = v250;
      uint64_t v334 = swift_allocObject();
      *(void *)(v334 + 16) = sub_10036AD14;
      *(void *)(v334 + 24) = v333;
      swift_retain_n();
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_release();
      uint64_t v335 = swift_allocObject();
      *(void *)(v335 + 16) = sub_1004839DC;
      *(void *)(v335 + 24) = v250;
      uint64_t v336 = swift_allocObject();
      *(void *)(v336 + 16) = sub_10036BACC;
      *(void *)(v336 + 24) = v335;
      uint64_t v337 = swift_allocObject();
      *(void *)(v337 + 16) = v249;
      os_log_t v840 = (os_log_t)sub_1005E0EB0();
      LODWORD(v839) = sub_1005E25C0();
      v841 = (char *)swift_allocObject();
      v841[16] = 16;
      uint64_t v842 = swift_allocObject();
      *(unsigned char *)(v842 + 16) = 4;
      uint64_t v338 = swift_allocObject();
      *(unsigned char *)(v338 + 16) = 0;
      uint64_t v339 = swift_allocObject();
      *(unsigned char *)(v339 + 16) = 1;
      uint64_t v340 = swift_allocObject();
      *(void *)(v340 + 16) = sub_10035A968;
      *(void *)(v340 + 24) = v334;
      uint64_t v341 = swift_allocObject();
      *(void *)(v341 + 16) = sub_100483A40;
      *(void *)(v341 + 24) = v340;
      uint64_t v342 = v341;
      v833 = (char *)v341;
      uint64_t v343 = swift_allocObject();
      *(unsigned char *)(v343 + 16) = 34;
      uint64_t v344 = v343;
      uint64_t v843 = swift_allocObject();
      *(unsigned char *)(v843 + 16) = 8;
      uint64_t v345 = swift_allocObject();
      *(void *)(v345 + 16) = sub_1004839E0;
      *(void *)(v345 + 24) = v336;
      v346 = swift_allocObject();
      v346[2].isa = (Class)sub_100483A94;
      v346[3].isa = (Class)v345;
      v347 = v346;
      v837 = (uint64_t *)v346;
      v838 = (uint64_t *)swift_allocObject();
      *((unsigned char *)v838 + 16) = 0;
      os_log_t v845 = (os_log_t)swift_allocObject();
      LOBYTE(v845[2].isa) = 4;
      uint64_t v348 = swift_allocObject();
      *(void *)(v348 + 16) = sub_1004839E4;
      *(void *)(v348 + 24) = v337;
      uint64_t v349 = swift_allocObject();
      *(void *)(v349 + 16) = sub_100483AE4;
      *(void *)(v349 + 24) = v348;
      uint64_t v350 = swift_allocObject();
      *(void *)(v350 + 16) = sub_100483AEC;
      *(void *)(v350 + 24) = v349;
      v351 = swift_allocObject();
      v351[2].isa = (Class)sub_100483AF4;
      v351[3].isa = (Class)v350;
      sub_10000566C(&qword_100715F48);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005F67B0;
      *(void *)(inited + 32) = sub_1004839FC;
      uint64_t v353 = v842;
      *(void *)(inited + 40) = v841;
      *(void *)(inited + 48) = sub_1004857E8;
      *(void *)(inited + 56) = v353;
      *(void *)(inited + 64) = sub_100187A80;
      *(void *)(inited + 72) = 0;
      *(void *)(inited + 80) = sub_1004857E8;
      *(void *)(inited + 88) = v338;
      *(void *)(inited + 96) = sub_1004857E8;
      *(void *)(inited + 104) = v339;
      *(void *)(inited + 112) = sub_100483A70;
      *(void *)(inited + 120) = v342;
      *(void *)(inited + 128) = sub_1004857E8;
      *(void *)(inited + 136) = v344;
      *(void *)(inited + 144) = sub_1004857E8;
      *(void *)(inited + 152) = v843;
      *(void *)(inited + 160) = sub_100483ABC;
      *(void *)(inited + 168) = v347;
      *(void *)(inited + 176) = sub_1004857E8;
      *(void *)(inited + 184) = v838;
      *(void *)(inited + 192) = sub_1004857E8;
      *(void *)(inited + 200) = v845;
      *(void *)(inited + 208) = sub_100483AFC;
      *(void *)(inited + 216) = v351;
      swift_retain();
      v354 = v833;
      swift_retain();
      swift_retain();
      os_log_t v834 = (os_log_t)v339;
      swift_retain();
      swift_retain();
      v836 = (void *)v344;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      os_log_t v355 = v840;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v355, (os_log_type_t)v839))
      {
        os_log_t v831 = v351;
        uint64_t v832 = v338;
        v356 = v354;
        v357 = v841;
        uint64_t v358 = swift_slowAlloc();
        v359 = (void *)swift_slowAlloc();
        v853[0] = 0;
        v850[0] = v359;
        *(_WORD *)uint64_t v358 = 1026;
        *(unsigned char *)(v358 + 2) = v357[16];
        if (v844)
        {
LABEL_104:
          swift_errorRelease();
          __break(1u);
          goto LABEL_105;
        }
        swift_release();
        *(unsigned char *)(v358 + 3) = *(unsigned char *)(v842 + 16);
        v854[0] = v358 + 4;
        os_log_t v361 = v831;
        uint64_t v360 = v832;
        swift_release();
        *(_DWORD *)(v358 + 4) = 2;
        *(unsigned char *)(v358 + 8) = *(unsigned char *)(v360 + 16);
        swift_release();
        *(unsigned char *)(v358 + 9) = v834[2].isa;
        uint64_t v362 = swift_release();
        (*((void (**)(uint64_t *__return_ptr, uint64_t))v356 + 2))(&v849, v362);
        sub_1005E2960();
        swift_release();
        *(unsigned char *)(v358 + 11) = *((unsigned char *)v836 + 16);
        swift_release();
        *(unsigned char *)(v358 + 12) = *(unsigned char *)(v843 + 16);
        v854[0] = v358 + 13;
        v363 = v837;
        swift_release();
        sub_100481DDC(v854, (uint64_t)v853, (uint64_t *)v850, (uint64_t (*)(void))v363[2]);
        swift_release();
        uint64_t v364 = v854[0];
        *(unsigned char *)v854[0] = *((unsigned char *)v838 + 16);
        swift_release();
        *(unsigned char *)(v364 + 1) = v845[2].isa;
        uint64_t v365 = swift_release();
        ((void (*)(uint64_t *__return_ptr, uint64_t))v361[2].isa)(&v849, v365);
        sub_1005E2960();
        v854[0] = v364 + 6;
        swift_release();
        os_log_t v366 = v840;
        _os_log_impl((void *)&_mh_execute_header, v840, (os_log_type_t)v839, "[%.*hhx-%{public}s] Path did change. Constrained: %{BOOL}d", (uint8_t *)v358, 0x1Bu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(os_log_t, uint64_t))(v846 + 8))(v835, v847);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(os_log_t, uint64_t))(v846 + 8))(v835, v847);
      }
      return sub_10046FD8C();
    case 6u:
      char v252 = *v91;
      uint64_t v253 = swift_allocObject();
      *(unsigned char *)(v253 + 16) = v252;
      sub_10046DE48(v253 | 0x7000000000000000);
      return swift_release();
    case 7u:
      uint64_t v167 = v848;
      os_log_t v840 = (os_log_t)(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger);
      unint64_t v168 = v830;
      sub_100484EFC(v848 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v830, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      (*(void (**)(char *, unint64_t, uint64_t))(v846 + 32))(v841, v168, v847);
      uint64_t v169 = swift_allocObject();
      *(void *)(v169 + 16) = sub_1004839DC;
      *(void *)(v169 + 24) = v167;
      uint64_t v170 = swift_allocObject();
      *(void *)(v170 + 16) = sub_1004854A0;
      *(void *)(v170 + 24) = v169;
      swift_retain_n();
      swift_retain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_release();
      uint64_t v171 = swift_allocObject();
      *(void *)(v171 + 16) = sub_1004839DC;
      *(void *)(v171 + 24) = v167;
      uint64_t v172 = swift_allocObject();
      *(void *)(v172 + 16) = sub_100485478;
      *(void *)(v172 + 24) = v171;
      os_log_t v845 = (os_log_t)sub_1005E0EB0();
      LODWORD(v842) = sub_1005E25C0();
      uint64_t v173 = swift_allocObject();
      *(unsigned char *)(v173 + 16) = 16;
      v839 = (char *)swift_allocObject();
      v839[16] = 4;
      uint64_t v174 = swift_allocObject();
      *(unsigned char *)(v174 + 16) = 0;
      uint64_t v175 = swift_allocObject();
      *(unsigned char *)(v175 + 16) = 1;
      uint64_t v176 = swift_allocObject();
      *(void *)(v176 + 16) = sub_10035BBC8;
      *(void *)(v176 + 24) = v170;
      uint64_t v177 = swift_allocObject();
      *(void *)(v177 + 16) = sub_100485490;
      *(void *)(v177 + 24) = v176;
      uint64_t v178 = swift_allocObject();
      *(unsigned char *)(v178 + 16) = 34;
      uint64_t v179 = swift_allocObject();
      *(unsigned char *)(v179 + 16) = 8;
      uint64_t v180 = swift_allocObject();
      *(void *)(v180 + 16) = sub_1004839E0;
      *(void *)(v180 + 24) = v172;
      uint64_t v181 = swift_allocObject();
      *(void *)(v181 + 16) = sub_10048547C;
      *(void *)(v181 + 24) = v180;
      uint64_t v182 = v174;
      sub_10000566C(&qword_100715F48);
      uint64_t v183 = swift_allocObject();
      *(_OWORD *)(v183 + 16) = xmmword_1005F6780;
      *(void *)(v183 + 32) = sub_1004857E8;
      *(void *)(v183 + 40) = v173;
      uint64_t v184 = v839;
      *(void *)(v183 + 48) = sub_1004857E8;
      *(void *)(v183 + 56) = v184;
      *(void *)(v183 + 64) = sub_100187A80;
      *(void *)(v183 + 72) = 0;
      *(void *)(v183 + 80) = sub_1004857E8;
      *(void *)(v183 + 88) = v174;
      *(void *)(v183 + 96) = sub_1004857E8;
      *(void *)(v183 + 104) = v175;
      *(void *)(v183 + 112) = sub_100483A70;
      *(void *)(v183 + 120) = v177;
      *(void *)(v183 + 128) = sub_1004857E8;
      *(void *)(v183 + 136) = v178;
      *(void *)(v183 + 144) = sub_1004857E8;
      *(void *)(v183 + 152) = v179;
      *(void *)(v183 + 160) = sub_100485498;
      *(void *)(v183 + 168) = v181;
      uint64_t v185 = v173;
      uint64_t v186 = v184;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      os_log_t v187 = v845;
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v187, (os_log_type_t)v842))
      {
        v837 = (uint64_t *)v182;
        v838 = (uint64_t *)v178;
        uint64_t v188 = swift_slowAlloc();
        unint64_t v189 = (void *)swift_slowAlloc();
        v854[0] = 0;
        v853[0] = v189;
        *(_WORD *)uint64_t v188 = 770;
        *(unsigned char *)(v188 + 2) = *(unsigned char *)(v185 + 16);
        if (v844)
        {
LABEL_102:
          swift_errorRelease();
          __break(1u);
          goto LABEL_103;
        }
        unint64_t v190 = (char *)v189;
        swift_release();
        *(unsigned char *)(v188 + 3) = v186[16];
        v851[0] = v188 + 4;
        swift_release();
        *(_DWORD *)(v188 + 4) = 2;
        v839 = v190;
        *(unsigned char *)(v188 + 8) = *((unsigned char *)v837 + 16);
        swift_release();
        *(unsigned char *)(v188 + 9) = *(unsigned char *)(v175 + 16);
        uint64_t v191 = swift_release();
        (*(void (**)(void **__return_ptr, uint64_t))(v177 + 16))(v850, v191);
        sub_1005E2960();
        uint64_t v192 = v848;
        swift_release();
        *(unsigned char *)(v188 + 11) = *((unsigned char *)v838 + 16);
        swift_release();
        *(unsigned char *)(v188 + 12) = *(unsigned char *)(v179 + 16);
        v851[0] = v188 + 13;
        swift_release();
        sub_100481DDC(v851, (uint64_t)v854, (uint64_t *)v853, *(uint64_t (**)(void))(v181 + 16));
        uint64_t v193 = v846;
        uint64_t v194 = v847;
        uint64_t v195 = v841;
        swift_release();
        os_log_t v196 = v845;
        _os_log_impl((void *)&_mh_execute_header, v845, (os_log_type_t)v842, "[%.*hhx-%{public}s] Connection did start TLS.", (uint8_t *)v188, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v193 + 8))(v195, v194);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v846 + 8))(v841, v847);
        uint64_t v192 = v848;
      }
      sub_10047D6B4(v851);
      uint64_t v329 = v192 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
      swift_beginAccess();
      uint64_t v330 = v329;
      uint64_t v331 = v843;
      sub_100484EFC(v330, v843, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_1004A1AF8((unint64_t *)v851, (uint64_t)v840);
      sub_100452B68((uint64_t)v851, (uint64_t)v854);
      sub_100483B60(v854);
      sub_100452B0C((uint64_t)&v852, (uint64_t)v853);
      sub_100483B90((uint64_t *)v853);
      sub_1004694E8(v331);
      return sub_10047D4E0();
    case 8u:
      return sub_10047D760();
    default:
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v88, v91, v85);
      sub_10047BC04((uint64_t)v88);
      return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v88, v85);
  }
}

uint64_t sub_10047A688(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E1850();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2 + 24);
  void *v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    __uint64_t v11 = static MonotonicTime.now()();
    swift_beginAccess();
    sub_10047B3F8(v11, a1);
    swift_endAccess();
    uint64_t v12 = (void *)(v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents);
    uint64_t result = swift_beginAccess();
    if (*v12)
    {
      uint64_t v13 = *(void *)(a1 + 16);
      if (v13)
      {
        uint64_t v14 = *(void *)(type metadata accessor for ConnectionEvent(0) - 8);
        uint64_t v15 = (a1
                         + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
        uint64_t v16 = *(void *)(v14 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1004704EC(v15);
          uint64_t v15 = ((char *)v15 + v16);
          --v13;
        }
        while (v13);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      void *v12 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a1 + 16);
      if (v17)
      {
        uint64_t v18 = *(void *)(type metadata accessor for ConnectionEvent(0) - 8);
        uint64_t v19 = (a1
                         + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)));
        uint64_t v20 = *(void *)(v18 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1004704EC(v19);
          uint64_t v19 = ((char *)v19 + v20);
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
      }
      return sub_10047E624();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10047A934(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v87 = a2;
  uint64_t v4 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (unint64_t *)((char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v74 = (unint64_t *)((char *)&v73 - v8);
  uint64_t v9 = sub_10000566C(&qword_100715F68);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v84 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v81 = (uint64_t)&v73 - v12;
  uint64_t v93 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t v13 = *(void *)(v93 - 8);
  uint64_t v14 = __chkstk_darwin(v93);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v90 = (uint64_t)&v73 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v83 = (uint64_t)&v73 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v76 = (uint64_t)&v73 - v22;
  __chkstk_darwin(v21);
  uint64_t v77 = (uint64_t)&v73 - v23;
  uint64_t v24 = type metadata accessor for ConnectionEvent(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v89 = (uint64_t)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  int v78 = (char *)&v73 - v28;
  uint64_t v29 = sub_10000566C(&qword_100715F80);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v91 = (uint64_t)&v73 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v86 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v73 - v32);
  uint64_t v33 = sub_10000566C(&qword_100715F70);
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v73 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10000566C(&qword_100715F88);
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  __chkstk_darwin(v37);
  uint64_t v92 = (uint64_t)&v73 - v38;
  uint64_t v39 = *v2;
  uint64_t v40 = *(void *)(*v2 + 16);
  uint64_t v82 = v4;
  uint64_t v79 = v13;
  uint64_t v80 = v24;
  uint64_t v73 = v2;
  uint64_t v88 = v41;
  if (v40)
  {
    uint64_t v85 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))a1;
    uint64_t v42 = v13;
    uint64_t v43 = v39 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v44 = *(void *)(v42 + 72);
    swift_bridgeObjectRetain();
    uint64_t v45 = v25;
    uint64_t v46 = v81;
    while (2)
    {
      sub_100484EFC(v43, (uint64_t)v16, type metadata accessor for CommandConnection.RecentErrors.Error);
      sub_100484EFC((uint64_t)&v16[*(int *)(v93 + 20)], (uint64_t)v7, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
          sub_1004831AC(*v7);
          swift_bridgeObjectRelease();
          goto LABEL_4;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        case 4u:
        case 5u:
          sub_100484F64((uint64_t)v7, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          goto LABEL_4;
        case 6u:
LABEL_4:
          sub_100484F64((uint64_t)v16, type metadata accessor for CommandConnection.RecentErrors.Error);
          v43 += v44;
          if (--v40) {
            continue;
          }
          int v75 = 0;
LABEL_9:
          swift_bridgeObjectRelease();
          uint64_t v47 = (uint64_t)v84;
          a1 = (uint64_t)v85;
          uint64_t v24 = v80;
          break;
        default:
          sub_100484F64((uint64_t)v16, type metadata accessor for CommandConnection.RecentErrors.Error);
          int v75 = 1;
          goto LABEL_9;
      }
      break;
    }
  }
  else
  {
    int v75 = 0;
    uint64_t v47 = (uint64_t)v84;
    uint64_t v45 = v25;
    uint64_t v46 = v81;
  }
  uint64_t v48 = v91;
  uint64_t v49 = (uint64_t)v86;
  sub_100485338((uint64_t)v87, (uint64_t)v35);
  sub_1004853A0((uint64_t)v35, v49, type metadata accessor for ConnectionEvent);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
  v50(v49, 0, 1, v24);
  uint64_t v51 = v88;
  v50(v88, 1, 1, v24);
  sub_100485408(v49, v51);
  uint64_t v52 = v92;
  sub_10001FDF0(v51, v92, &qword_100715F88);
  sub_10001FDF0(v52, v48, &qword_100715F80);
  v50(v52, 1, 1, v24);
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
  if (v53(v48, 1, v24) == 1)
  {
    uint64_t v54 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v86 = v53;
    uint64_t v87 = v50;
    uint64_t v88 = v45 + 56;
    uint64_t v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
    uint64_t v85 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56);
    uint64_t v54 = _swiftEmptyArrayStorage;
    uint64_t v58 = (uint64_t)v78;
    do
    {
      sub_1004853A0(v48, v58, type metadata accessor for ConnectionEvent);
      uint64_t v61 = v89;
      sub_100484EFC(v58, v89, type metadata accessor for ConnectionEvent);
      sub_1004D6B00(a1, v61, v47);
      uint64_t v62 = *v57;
      if ((*v57)(v47, 1, v93) == 1)
      {
        sub_100007A48(v47, &qword_100715F68);
        uint64_t v63 = 1;
      }
      else
      {
        uint64_t v64 = v76;
        sub_1004853A0(v47, v76, type metadata accessor for CommandConnection.RecentErrors.Error);
        uint64_t v65 = v64;
        uint64_t v66 = v64;
        uint64_t v67 = v83;
        sub_100484EFC(v66, v83, type metadata accessor for CommandConnection.RecentErrors.Error);
        if (v75)
        {
          sub_100484EFC(v67 + *(int *)(v93 + 20), (uint64_t)v74, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v67 = v83;
          uint64_t v47 = (uint64_t)v84;
          switch(EnumCaseMultiPayload)
          {
            case 1:
            case 3:
              sub_1004831AC(*v74);
              goto LABEL_24;
            case 2:
LABEL_24:
              swift_bridgeObjectRelease();
              break;
            case 4:
            case 5:
              sub_100484F64((uint64_t)v74, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
              break;
            case 6:
              break;
            default:
              sub_100484F64(v83, type metadata accessor for CommandConnection.RecentErrors.Error);
              sub_100484F64(v65, type metadata accessor for CommandConnection.RecentErrors.Error);
              uint64_t v63 = 1;
              uint64_t v24 = v80;
              uint64_t v46 = v81;
              goto LABEL_26;
          }
        }
        sub_100484F64(v67, type metadata accessor for CommandConnection.RecentErrors.Error);
        uint64_t v46 = v81;
        sub_1004853A0(v65, v81, type metadata accessor for CommandConnection.RecentErrors.Error);
        uint64_t v63 = 0;
        uint64_t v24 = v80;
LABEL_26:
        uint64_t v58 = (uint64_t)v78;
      }
      uint64_t v69 = v93;
      (*v85)(v46, v63, 1, v93);
      sub_100484F64(v58, type metadata accessor for ConnectionEvent);
      if (v62(v46, 1, v69) == 1)
      {
        uint64_t v59 = a1;
        sub_100007A48(v46, &qword_100715F68);
      }
      else
      {
        uint64_t v70 = v77;
        sub_1004853A0(v46, v77, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_1004853A0(v70, v90, type metadata accessor for CommandConnection.RecentErrors.Error);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v54 = (void *)sub_1004D0DFC(0, v54[2] + 1, 1, (unint64_t)v54);
        }
        unint64_t v72 = v54[2];
        unint64_t v71 = v54[3];
        if (v72 >= v71 >> 1) {
          uint64_t v54 = (void *)sub_1004D0DFC(v71 > 1, v72 + 1, 1, (unint64_t)v54);
        }
        uint64_t v59 = a1;
        v54[2] = v72 + 1;
        sub_1004853A0(v90, (uint64_t)v54+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v72, type metadata accessor for CommandConnection.RecentErrors.Error);
        uint64_t v47 = (uint64_t)v84;
      }
      uint64_t v48 = v91;
      uint64_t v60 = v92;
      sub_10001FDF0(v92, v91, &qword_100715F80);
      v87(v60, 1, 1, v24);
      a1 = v59;
    }
    while (v86(v48, 1, v24) != 1);
  }
  sub_100007A48(v92, &qword_100715F88);
  v55.rawValue = MonotonicTime.init(seconds:since:)(-4.0, (IMAP2Helpers::MonotonicTime)a1).rawValue;
  sub_1004D78A4(v55.rawValue);
  return sub_1004F20A4((uint64_t)v54);
}

uint64_t sub_10047B3F8(Swift::Int64 a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v71.rawValue = a1;
  uint64_t v5 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v59 = (void *)((char *)v57 - v9);
  uint64_t v10 = sub_10000566C(&qword_100715F68);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v57 - v14;
  uint64_t v16 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v70 = (uint64_t)v57 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v65 = (uint64_t)v57 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v68 = (uint64_t)v57 - v26;
  __chkstk_darwin(v25);
  uint64_t v61 = (uint64_t)v57 - v27;
  uint64_t v28 = type metadata accessor for ConnectionEvent(0) - 8;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v69 = (uint64_t)v57 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)v57 - v32;
  v57[1] = v3;
  uint64_t v58 = a2;
  uint64_t v34 = *v3;
  uint64_t v35 = (*v3)[2];
  uint64_t v62 = v17;
  uint64_t v63 = v5;
  if (v35)
  {
    uint64_t v66 = v34;
    uint64_t v67 = v31;
    uint64_t v36 = (uint64_t)v34 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v37 = *(void *)(v17 + 72);
    swift_bridgeObjectRetain();
    while (2)
    {
      sub_100484EFC(v36, (uint64_t)v20, type metadata accessor for CommandConnection.RecentErrors.Error);
      sub_100484EFC((uint64_t)&v20[*(int *)(v16 + 20)], (uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
          sub_1004831AC(*v8);
          swift_bridgeObjectRelease();
          goto LABEL_4;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        case 4u:
        case 5u:
          sub_100484F64((uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          goto LABEL_4;
        case 6u:
LABEL_4:
          sub_100484F64((uint64_t)v20, type metadata accessor for CommandConnection.RecentErrors.Error);
          v36 += v37;
          uint64_t v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v35 - 1);
          if (v35) {
            continue;
          }
          int v60 = 0;
LABEL_9:
          a2 = v58;
          uint64_t v38 = v62;
          swift_bridgeObjectRelease();
          uint64_t v31 = v67;
          uint64_t v39 = *(void *)(a2 + 16);
          if (v39) {
            goto LABEL_10;
          }
          goto LABEL_31;
        default:
          sub_100484F64((uint64_t)v20, type metadata accessor for CommandConnection.RecentErrors.Error);
          int v60 = 1;
          goto LABEL_9;
      }
    }
  }
  int v60 = 0;
  uint64_t v38 = v17;
  uint64_t v39 = *(void *)(a2 + 16);
  if (v39)
  {
LABEL_10:
    uint64_t v40 = a2 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    uint64_t v41 = *(void *)(v31 + 72);
    uint64_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    uint64_t v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v67 = v41;
    swift_bridgeObjectRetain();
    uint64_t v43 = _swiftEmptyArrayStorage;
    uint64_t v64 = v13;
    do
    {
      sub_100484EFC(v40, (uint64_t)v33, type metadata accessor for ConnectionEvent);
      uint64_t v44 = v69;
      sub_100484EFC((uint64_t)v33, v69, type metadata accessor for ConnectionEvent);
      sub_1004D6B00(v71.rawValue, v44, (uint64_t)v13);
      uint64_t v45 = *v42;
      if ((*v42)(v13, 1, v16) == 1)
      {
        sub_100007A48((uint64_t)v13, &qword_100715F68);
LABEL_15:
        uint64_t v46 = 1;
      }
      else
      {
        uint64_t v47 = v68;
        sub_1004853A0((uint64_t)v13, v68, type metadata accessor for CommandConnection.RecentErrors.Error);
        uint64_t v48 = v47;
        uint64_t v49 = v65;
        sub_100484EFC(v48, v65, type metadata accessor for CommandConnection.RecentErrors.Error);
        if (v60)
        {
          sub_100484EFC(v49 + *(int *)(v16 + 20), (uint64_t)v59, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v13 = v64;
          uint64_t v49 = v65;
          switch(EnumCaseMultiPayload)
          {
            case 1:
            case 3:
              unint64_t v51 = *v59;
              v57[0] = v59[2];
              sub_1004831AC(v51);
              break;
            case 2:
              break;
            case 4:
            case 5:
              sub_100484F64((uint64_t)v59, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
              goto LABEL_22;
            case 6:
              goto LABEL_22;
            default:
              sub_100484F64(v65, type metadata accessor for CommandConnection.RecentErrors.Error);
              sub_100484F64(v68, type metadata accessor for CommandConnection.RecentErrors.Error);
              goto LABEL_15;
          }
          swift_bridgeObjectRelease();
        }
LABEL_22:
        sub_100484F64(v49, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_1004853A0(v68, (uint64_t)v15, type metadata accessor for CommandConnection.RecentErrors.Error);
        uint64_t v46 = 0;
      }
      (*v66)(v15, v46, 1, v16);
      sub_100484F64((uint64_t)v33, type metadata accessor for ConnectionEvent);
      if (v45(v15, 1, v16) == 1)
      {
        sub_100007A48((uint64_t)v15, &qword_100715F68);
      }
      else
      {
        uint64_t v52 = v61;
        sub_1004853A0((uint64_t)v15, v61, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_1004853A0(v52, v70, type metadata accessor for CommandConnection.RecentErrors.Error);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v43 = (void *)sub_1004D0DFC(0, v43[2] + 1, 1, (unint64_t)v43);
        }
        unint64_t v54 = v43[2];
        unint64_t v53 = v43[3];
        if (v54 >= v53 >> 1) {
          uint64_t v43 = (void *)sub_1004D0DFC(v53 > 1, v54 + 1, 1, (unint64_t)v43);
        }
        v43[2] = v54 + 1;
        sub_1004853A0(v70, (uint64_t)v43+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v54, type metadata accessor for CommandConnection.RecentErrors.Error);
        uint64_t v13 = v64;
      }
      v40 += v67;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_31:
    uint64_t v43 = _swiftEmptyArrayStorage;
  }
  v55.rawValue = MonotonicTime.init(seconds:since:)(-4.0, v71).rawValue;
  sub_1004D78A4(v55.rawValue);
  return sub_1004F20A4((uint64_t)v43);
}

uint64_t sub_10047BC04(uint64_t a1)
{
  uint64_t v122 = a1;
  uint64_t v118 = type metadata accessor for ConnectionState();
  uint64_t v1 = __chkstk_darwin(v118);
  uint64_t v117 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  os_log_t v119 = (char *)&v102 - v4;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v116 = (char *)&v102 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v121 = (uint64_t)&v102 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v115 = (char *)&v102 - v10;
  __chkstk_darwin(v9);
  uint64_t v120 = (char *)&v102 - v11;
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v113 = *(void *)(v12 - 8);
  uint64_t v114 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  os_log_t v111 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v108 = (char *)&v102 - v15;
  uint64_t v110 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v16 = __chkstk_darwin(v110);
  uint64_t v18 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v102 - v19;
  uint64_t v21 = sub_1005E1650();
  uint64_t v112 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v102 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v102 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (_DWORD *)((char *)&v102 - v31);
  uint64_t v33 = sub_1005E12C0();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v122, v33);
  if ((*(unsigned int (**)(char *, uint64_t))(v34 + 88))(v36, v33) == enum case for NWConnection.State.failed(_:))
  {
    uint64_t v105 = (void (*)(void, void, void))v20;
    uint64_t v106 = v24;
    os_log_t v109 = v27;
    uint64_t v37 = v111;
    uint64_t v39 = v113;
    uint64_t v38 = v114;
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v40 = v112;
    int v41 = (*(uint64_t (**)(char *, uint64_t))(v112 + 88))(v36, v21);
    uint64_t v107 = v21;
    if (v41 == enum case for NWError.posix(_:))
    {
      (*(void (**)(_DWORD *, char *, uint64_t))(v40 + 16))(v32, v36, v21);
      (*(void (**)(_DWORD *, uint64_t))(v40 + 96))(v32, v21);
      if (*v32 == 89)
      {
        uint64_t v42 = v123;
        uint64_t v43 = v123 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
        uint64_t v44 = v105;
        sub_100484EFC(v123 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v105, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v45 = v39;
        uint64_t v46 = v42;
        uint64_t v47 = v108;
        (*(void (**)(char *, void, uint64_t))(v45 + 32))(v108, v44, v38);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        swift_retain_n();
        uint64_t v48 = sub_1005E0EB0();
        os_log_type_t v49 = sub_1005E25C0();
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t v50 = v45;
          uint64_t v51 = swift_slowAlloc();
          v125[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v51 = 68158466;
          LODWORD(v124) = 2;
          sub_1005E2960();
          *(_WORD *)(v51 + 8) = 256;
          uint64_t v52 = v43 + *(int *)(v110 + 20);
          LOBYTE(v124) = *(unsigned char *)v52;
          sub_1005E2960();
          *(_WORD *)(v51 + 11) = 2082;
          uint64_t v53 = ConnectionID.debugDescription.getter(*(unsigned int *)(v52 + 4));
          uint64_t v124 = sub_100481E54(v53, v54, v125);
          sub_1005E2960();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v51 + 21) = 2048;
          uint64_t v55 = *(void *)(*(void *)(v46 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_underlyingID);
          swift_release();
          uint64_t v124 = v55;
          sub_1005E2960();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "[%.*hhx-%{public}s] [C%llu] Connection did fail: Operation canceled", (uint8_t *)v51, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v50 + 8))(v108, v114);
        }
        else
        {

          swift_release_n();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v38);
        }
        uint64_t v83 = (uint64_t)v120;
        (*(void (**)(char *, uint64_t))(v112 + 8))(v36, v107);
        uint64_t v56 = (uint64_t)v119;
        uint64_t v58 = (uint64_t)v116;
        uint64_t v57 = (uint64_t)v117;
        goto LABEL_12;
      }
    }
    uint64_t v59 = v36;
    int v60 = v30;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v30, v59, v21);
    uint64_t v61 = v123;
    uint64_t v62 = v123 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    uint64_t v63 = v18;
    sub_100484EFC(v123 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v18, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v64 = v40;
    uint64_t v65 = v39;
    uint64_t v46 = v61;
    uint64_t v66 = v37;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v37, v63, v38);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v105 = *(void (**)(void, void, void))(v64 + 16);
    v105(v109, v60, v21);
    swift_retain_n();
    uint64_t v67 = sub_1005E0EB0();
    os_log_type_t v68 = sub_1005E25A0();
    LODWORD(v108) = v68;
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v104 = v60;
      uint64_t v70 = v69;
      uint64_t v103 = swift_slowAlloc();
      v125[0] = v103;
      *(_DWORD *)uint64_t v70 = 68158722;
      LODWORD(v124) = 2;
      os_log_t v102 = v67;
      sub_1005E2960();
      *(_WORD *)(v70 + 8) = 256;
      uint64_t v71 = v62 + *(int *)(v110 + 20);
      LOBYTE(v124) = *(unsigned char *)v71;
      sub_1005E2960();
      *(_WORD *)(v70 + 11) = 2082;
      uint64_t v72 = ConnectionID.debugDescription.getter(*(unsigned int *)(v71 + 4));
      uint64_t v124 = sub_100481E54(v72, v73, v125);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 21) = 2048;
      uint64_t v74 = *(void *)(*(void *)(v46 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_underlyingID);
      swift_release();
      uint64_t v124 = v74;
      sub_1005E2960();
      swift_release();
      *(_WORD *)(v70 + 31) = 2080;
      int v75 = v109;
      uint64_t v76 = v107;
      v105(v106, v109, v107);
      uint64_t v77 = sub_1005E1CC0();
      uint64_t v124 = sub_100481E54(v77, v78, v125);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      uint64_t v79 = *(void (**)(char *, uint64_t))(v64 + 8);
      v79(v75, v76);
      os_log_t v80 = v102;
      _os_log_impl((void *)&_mh_execute_header, v102, (os_log_type_t)v108, "[%.*hhx-%{public}s] [C%llu] Connection did fail: %s", (uint8_t *)v70, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v113 + 8))(v37, v114);
      v79(v104, v76);
    }
    else
    {

      swift_release();
      uint64_t v81 = *(void (**)(char *, uint64_t))(v64 + 8);
      uint64_t v82 = v107;
      v81(v109, v107);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v38);
      v81(v60, v82);
    }
    uint64_t v56 = (uint64_t)v119;
    uint64_t v58 = (uint64_t)v116;
    uint64_t v57 = (uint64_t)v117;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    uint64_t v56 = (uint64_t)v119;
    uint64_t v58 = (uint64_t)v116;
    uint64_t v57 = (uint64_t)v117;
    uint64_t v46 = v123;
  }
  uint64_t v83 = (uint64_t)v120;
LABEL_12:
  uint64_t v84 = (uint64_t)v115;
  uint64_t v85 = v46 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v85, v83, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484EFC(v83, v84, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  int v87 = 0;
  switch(EnumCaseMultiPayload)
  {
    case 3:
    case 4:
      int v87 = 1;
      break;
    case 5:
      break;
    default:
      sub_100484F64(v84, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      int v87 = 0;
      break;
  }
  LODWORD(v120) = v87;
  sub_100484F64(v83, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t v88 = *(void *)(v123 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
  LOBYTE(v88) = *(unsigned char *)(v88 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 36));
  uint64_t v89 = v121;
  sub_100484EFC(v85, v121, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_1004A1F78(v122, v88);
  sub_100484EFC(v85, v58, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_100482D54(v89, v85);
  swift_endAccess();
  sub_100469198(v58);
  sub_100484F64(v89, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484F64(v58, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484EFC(v85, v56, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484EFC(v56, v57, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unsigned int v90 = swift_getEnumCaseMultiPayload();
  if (v90 < 3)
  {
    sub_100484F64(v57, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_20:
    sub_100484F64(v56, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return sub_10047D4E0();
  }
  uint64_t v91 = v123;
  if (v90 - 3 >= 2) {
    goto LABEL_20;
  }
  uint64_t result = sub_100484F64(v56, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if ((v120 & 1) == 0)
  {
    uint64_t v93 = *(unsigned int *)(v91 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    uint64_t v94 = (uint64_t *)(v91 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
    swift_beginAccess();
    uint64_t v95 = *v94;
    swift_bridgeObjectRetain();
    LODWORD(v93) = sub_1004882A0(v93, v95);
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    swift_bridgeObjectRelease();
    uint64_t v100 = swift_allocObject();
    uint64_t v101 = (void *)(v91 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
    swift_beginAccess();
    *(void *)(v100 + 16) = *v101;
    *(_DWORD *)(v100 + 24) = v93;
    *(void *)(v100 + 32) = v97;
    *(void *)(v100 + 40) = v99;
    swift_bridgeObjectRetain();
    sub_10046DE48(v100 | 0x1000000000000000);
    return swift_release();
  }
  return result;
}

uint64_t sub_10047CA94(uint64_t a1)
{
  uint64_t v2 = sub_1005E1650();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_100484968(&qword_100715F50, (void (*)(uint64_t))&type metadata accessor for NWError);
  swift_allocError();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  uint64_t v7 = sub_1005E06E0();
  swift_errorRelease();
  return v7;
}

uint64_t sub_10047CBD8()
{
  uint64_t v1 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ConnectionState();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v22 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v13, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484EFC((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 3)
  {
    if (EnumCaseMultiPayload - 3 < 2) {
      return sub_100484F64((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    }
  }
  else
  {
    sub_100484F64((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  sub_100484EFC((uint64_t)v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  int v16 = swift_getEnumCaseMultiPayload();
  sub_100484F64((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t result = sub_100484F64((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (v16 != 5)
  {
    uint64_t v17 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands;
    swift_beginAccess();
    uint64_t v18 = *(void *)(v17 + 8);
    char v19 = *(unsigned char *)(v17 + 16);
    sub_100484EFC(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v3, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v20 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idle;
    uint64_t result = swift_beginAccess();
    if (*(void *)(v20 + 40))
    {
      __uint64_t v21 = static MonotonicTime.now()();
      sub_100480BF0(v18, v19, (uint64_t)sub_1004849B0, v0, (uint64_t)sub_1004849B8, v0, v21);
      sub_100484F64((uint64_t)v3, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      return swift_endAccess();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10047CEEC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v36 = a2;
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v35 - v16;
  if (!(a1 >> 62)) {
    return sub_1004BAB54(a1 & 0x101FF);
  }
  if (a1 >> 62 == 1)
  {
    uint64_t v18 = v5 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v5 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v15, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v15, v7);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    char v19 = sub_1005E0EB0();
    os_log_type_t v20 = sub_1005E2580();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v40 = v35;
      *(_DWORD *)uint64_t v21 = 68158210;
      LODWORD(v39) = 2;
      sub_1005E2960();
      *(_WORD *)(v21 + 8) = 256;
      uint64_t v22 = v18 + *(int *)(v11 + 20);
      LOBYTE(v39) = *(unsigned char *)v22;
      sub_1005E2960();
      *(_WORD *)(v21 + 11) = 2082;
      uint64_t v23 = ConnectionID.debugDescription.getter(*(unsigned int *)(v22 + 4));
      uint64_t v39 = sub_100481E54(v23, v24, &v40);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%.*hhx-%{public}s] Finishing push registration.", (uint8_t *)v21, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                  + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_finishPushRegistration))(a1, v36, v37, v38);
  }
  uint64_t v26 = v37 | v36 | v38;
  if (a1 == 0x8000000000000000 && !v26)
  {
    uint64_t v27 = *(void *)(v5 + 16);
    uint64_t v28 = v27 + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
    unsigned int v29 = *(unsigned __int8 *)(v28 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28));
    if (v29 >> 6)
    {
      if (v29 >> 6 != 1)
      {
        char v30 = 1;
        sub_1004EE8F8();
        goto LABEL_23;
      }
      LOBYTE(v29) = v29 & 0x3F;
    }
    sub_1004EE628(v28, v29, v27 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger);
    char v30 = 0;
LABEL_23:
    sub_100484EFC(v27 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v17, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    unint64_t v32 = (*(unsigned __int8 *)(v12 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v33 = swift_allocObject();
    *(unsigned char *)(v33 + 16) = v30;
    sub_1004853A0((uint64_t)v17, v33 + v32, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v34 = swift_retain();
    sub_1004BA81C(v34, (uint64_t)sub_100484B58, v33);
    swift_release();
    return swift_release_n();
  }
  if (a1 != 0x8000000000000001 || v26)
  {
    if (a1 == 0x8000000000000002 && !v26)
    {
      uint64_t v31 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1004BAE58((uint64_t)sub_100484A78, v31);
      return swift_release_n();
    }
    if (a1 != 0x8000000000000003 || v26)
    {
      return sub_1004BB190();
    }
    else
    {
      return sub_10047DEF8();
    }
  }
  else
  {
    return sub_10047DBA4();
  }
}

uint64_t sub_10047D4E0()
{
  uint64_t v1 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v10[-v5];
  uint64_t v7 = (uint64_t)v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  uint64_t v8 = (uint64_t)v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t v11 = sub_100484E1C;
  uint64_t v12 = v0;
  swift_retain();
  sub_1004A50AC((void (*)(void *__return_ptr, uint64_t))sub_100484E74, (uint64_t)v10, (void (*)(char *, uint64_t))sub_100484E38, v0, v7);
  sub_1004AE0E0(v7, v6, (uint64_t)v0);
  sub_100484EFC(v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_100482D54((uint64_t)v6, v8);
  swift_endAccess();
  sub_100469198(v4);
  sub_100484F64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484F64((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  return swift_release();
}

uint64_t sub_10047D6B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  int v4 = sub_10048DC48();
  uint64_t v7 = OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
  if (v6 == 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0x8000000000000000;
  }
  else
  {
    LODWORD(v10) = v4;
    uint64_t v8 = v5;
    uint64_t v9 = v6;
    if (*(char *)(v3 + v7 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28)) >= 0) {
      uint64_t v10 = v10 | 0x4000000000000000;
    }
    else {
      uint64_t v10 = v10;
    }
  }
  uint64_t result = sub_10048D920();
  *a1 = v10;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = result;
  a1[4] = v12;
  a1[5] = v13;
  return result;
}

uint64_t sub_10047D760()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionState();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v35 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v33 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v33 - v8;
  uint64_t v10 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v10);
  uint64_t v36 = (uint64_t)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E1850();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v1 + 24);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  LOBYTE(v16) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v19 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_100484EFC(v19, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = v7;
      sub_1004853A0((uint64_t)v9, v36, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      uint64_t v20 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      sub_100484E7C((uint64_t)v37);
      sub_10044AF04((uint64_t)v37, (uint64_t)v38);
      swift_retain();
      uint64_t v21 = sub_1004F5C5C((uint64_t)v38, v20);
      uint64_t v22 = (char *)v21[2];
      if (v22)
      {
        v33[0] = v21;
        v33[1] = v2;
        uint64_t v23 = (uint64_t *)(v21 + 7);
        do
        {
          unint64_t v24 = *(v23 - 3);
          uint64_t v25 = *(v23 - 2);
          uint64_t v27 = *(v23 - 1);
          uint64_t v26 = *v23;
          sub_100484BD4(v24);
          sub_10047CEEC(v24, v25, v27, v26);
          sub_100484C20(v24);
          v23 += 4;
          --v22;
        }
        while (v22);
      }
      swift_release();
      uint64_t v30 = (uint64_t)v35;
      swift_bridgeObjectRelease();
      uint64_t v31 = v36;
      uint64_t v32 = (uint64_t)v34;
      sub_100484EFC(v36, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      sub_100484EFC(v19, v30, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      swift_beginAccess();
      sub_100482D54(v32, v19);
      swift_endAccess();
      sub_100469198(v30);
      sub_100484F64(v32, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_100484F64(v30, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_10047D4E0();
      uint64_t v28 = type metadata accessor for UnauthenticatedStateWithTasks;
      uint64_t v29 = v31;
    }
    else
    {
      uint64_t v28 = type metadata accessor for ConnectionState;
      uint64_t v29 = (uint64_t)v9;
    }
    return sub_100484F64(v29, (uint64_t (*)(void))v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10047DBA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_100484EFC(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v10 = sub_1005E0EB0();
  os_log_type_t v11 = sub_1005E2580();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 68158210;
    LODWORD(v19) = 2;
    sub_1005E2960();
    *(_WORD *)(v12 + 8) = 256;
    uint64_t v13 = v9 + *(int *)(v6 + 20);
    LOBYTE(v19) = *(unsigned char *)v13;
    sub_1005E2960();
    *(_WORD *)(v12 + 11) = 2082;
    uint64_t v14 = ConnectionID.debugDescription.getter(*(unsigned int *)(v13 + 4));
    uint64_t v19 = sub_100481E54(v14, v15, &v20);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%.*hhx-%{public}s] Requesting credentials.", (uint8_t *)v12, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v16 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(v1
                                                                        + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_makeCredentials);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v16(sub_100484BCC, v17);
  return swift_release_n();
}

uint64_t sub_10047DEF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1680();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E16C0();
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E1690();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_100484EFC(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v42 = v10;
  v18(v13, v16, v10);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v19 = sub_1005E0EB0();
  os_log_type_t v20 = sub_1005E2580();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = v2;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v40 = v3;
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v22 = 68158210;
    LODWORD(v49) = 2;
    sub_1005E2960();
    *(_WORD *)(v22 + 8) = 256;
    uint64_t v24 = v17 + *(int *)(v14 + 20);
    LOBYTE(v49) = *(unsigned char *)v24;
    sub_1005E2960();
    *(_WORD *)(v22 + 11) = 2082;
    uint64_t v25 = ConnectionID.debugDescription.getter(*(unsigned int *)(v24 + 4));
    os_log_type_t v49 = (void *)sub_100481E54(v25, v26, aBlock);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%.*hhx-%{public}s] Requesting push information.", (uint8_t *)v22, 0x15u);
    swift_arrayDestroy();
    uint64_t v3 = v40;
    swift_slowDealloc();
    uint64_t v2 = v41;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v42);
  uint64_t v28 = *(void *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_getPushInformation);
  uint64_t v27 = *(void *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_getPushInformation + 8);
  sub_100467998();
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v9, enum case for DispatchQoS.QoSClass.background(_:), v44);
  uint64_t v31 = (void *)sub_1005E2630();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v29);
  uint64_t v32 = *(void **)(v1 + 24);
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v28;
  v34[3] = v27;
  v34[4] = v32;
  v34[5] = v33;
  aBlock[4] = (uint64_t)sub_100484CB4;
  aBlock[5] = (uint64_t)v34;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100469020;
  aBlock[3] = (uint64_t)&unk_1006F8228;
  uint64_t v35 = _Block_copy(aBlock);
  swift_retain();
  id v36 = v32;
  swift_retain();
  uint64_t v37 = v45;
  sub_1005E16A0();
  os_log_type_t v49 = _swiftEmptyArrayStorage;
  sub_100484968((unint64_t *)&unk_100717760, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000566C(&qword_100715C98);
  sub_100482CF8();
  uint64_t v38 = v48;
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v35);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v38, v2);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v47);
  swift_release();
  return swift_release();
}

uint64_t sub_10047E578@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = sub_10048DC48();
  uint64_t v7 = OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
  if (v6 == 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0x8000000000000000;
  }
  else
  {
    LODWORD(v10) = v4;
    uint64_t v8 = v5;
    uint64_t v9 = v6;
    if (*(char *)(v3 + v7 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28)) >= 0) {
      uint64_t v10 = v10 | 0x4000000000000000;
    }
    else {
      uint64_t v10 = v10;
    }
  }
  uint64_t result = sub_10048D920();
  *a2 = v10;
  a2[1] = v8;
  a2[2] = v9;
  a2[3] = result;
  a2[4] = v12;
  a2[5] = v13;
  return result;
}

uint64_t sub_10047E624()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*v9)
  {
    uint64_t *v9 = 0;
    if (*(void *)(v10 + 16)
      && (uint64_t v11 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate, swift_unknownObjectWeakLoadStrong()))
    {
      uint64_t v12 = *(void *)(v11 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(v10, ObjectType, v12);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v16 = sub_1005E0EB0();
    os_log_type_t v17 = sub_1005E25A0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 68158210;
      LODWORD(v23) = 2;
      sub_1005E2960();
      *(_WORD *)(v18 + 8) = 256;
      uint64_t v19 = v15 + *(int *)(v6 + 20);
      LOBYTE(v23) = *(unsigned char *)v19;
      sub_1005E2960();
      *(_WORD *)(v18 + 11) = 2082;
      uint64_t v20 = ConnectionID.debugDescription.getter(*(unsigned int *)(v19 + 4));
      uint64_t v23 = sub_100481E54(v20, v21, &v24);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%.*hhx-%{public}s] Trying to send nil enqueued events.", (uint8_t *)v18, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_10047E9A8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10047EA08(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10047EA08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v55 = a1;
  uint64_t v3 = type metadata accessor for ConnectionState();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v56 = (uint64_t)&v47 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v54 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v54);
  uint64_t v57 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E1850();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v2 + 24);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  char v18 = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v18)
  {
    uint64_t v20 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_100484EFC(v20, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v52 = v20;
      uint64_t v53 = v3;
      sub_1004853A0((uint64_t)v10, v57, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      uint64_t v21 = *(void *)(v2 + 16);
      unint64_t v22 = sub_10048DC48();
      uint64_t v25 = OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
      uint64_t v50 = v23;
      unint64_t v51 = v22;
      uint64_t v49 = v24;
      if (v24 == 1)
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = 0x8000000000000000;
      }
      else
      {
        unsigned int v31 = v22;
        uint64_t v32 = v23;
        uint64_t v27 = v24;
        if (*(char *)(v21 + v25 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28)) >= 0) {
          uint64_t v28 = v31 | 0x4000000000000000;
        }
        else {
          uint64_t v28 = v31;
        }
        uint64_t v26 = v32;
      }
      uint64_t v33 = sub_10048D920();
      uint64_t v34 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      v58[0] = v55;
      v58[1] = v28;
      v58[2] = v26;
      v58[3] = v27;
      v58[4] = v33;
      v58[5] = v35;
      uint64_t v55 = v35;
      uint64_t v48 = v36;
      v58[6] = v36;
      sub_1002E157C((uint64_t)v58);
      sub_10044AF04((uint64_t)v58, (uint64_t)v59);
      swift_retain();
      uint64_t v37 = sub_1004F5C5C((uint64_t)v59, v34);
      uint64_t v38 = (char *)v37[2];
      if (v38)
      {
        uint64_t v47 = v33;
        uint64_t v54 = (uint64_t)v6;
        uint64_t v39 = (uint64_t *)(v37 + 7);
        do
        {
          unint64_t v41 = *(v39 - 3);
          uint64_t v40 = *(v39 - 2);
          uint64_t v42 = *(v39 - 1);
          uint64_t v43 = *v39;
          sub_100484BD4(v41);
          sub_10047CEEC(v41, v40, v42, v43);
          sub_100484C20(v41);
          v39 += 4;
          --v38;
        }
        while (v38);
        swift_release();
        uint64_t v6 = (char *)v54;
        uint64_t v33 = v47;
      }
      else
      {
        swift_release();
      }
      swift_bridgeObjectRelease();
      sub_1000A9E8C(v51, v50, v49);
      sub_1000A9E8C(v33, v55, v48);
      uint64_t v44 = v56;
      uint64_t v45 = v57;
      sub_100484EFC(v57, v56, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = v52;
      sub_100484EFC(v52, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      swift_beginAccess();
      sub_100482D54(v44, v46);
      swift_endAccess();
      sub_100469198((uint64_t)v6);
      sub_100484F64(v44, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_100484F64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_10047D4E0();
      uint64_t v29 = type metadata accessor for UnauthenticatedStateWithTasks;
      uint64_t v30 = v45;
    }
    else
    {
      uint64_t v29 = type metadata accessor for ConnectionState;
      uint64_t v30 = (uint64_t)v10;
    }
    return sub_100484F64(v30, (uint64_t (*)(void))v29);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10047EF04(void (*a1)(uint64_t (*)(uint64_t *a1), uint64_t), uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  id v8 = a3;
  swift_retain();
  a1(sub_100484D00, v7);
  return swift_release();
}

uint64_t sub_10047EFA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005E1680();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E16C0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  sub_10001FDF0((uint64_t)a1, v13 + 24, &qword_100715F60);
  aBlock[4] = sub_100484D64;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100469020;
  aBlock[3] = &unk_1006F82A0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_100484D70(a1);
  sub_1005E16A0();
  v16[1] = _swiftEmptyArrayStorage;
  sub_100484968((unint64_t *)&unk_100717760, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000566C(&qword_100715C98);
  sub_100482CF8();
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_10047F25C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10047F2BC(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10047F2BC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10001FDF0(a1, (uint64_t)v46, &qword_100715F60);
  uint64_t v3 = v46[1];
  uint64_t v40 = (_UNKNOWN **)v46[2];
  uint64_t v41 = v46[0];
  uint64_t v38 = v46[4];
  uint64_t v39 = v46[3];
  uint64_t v36 = v46[6];
  uint64_t v37 = v46[5];
  uint64_t v35 = v46[7];
  uint64_t v4 = type metadata accessor for ConnectionState();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v43 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v42 = (uint64_t)&v34 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v11);
  uint64_t v44 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E1850();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v17 = *(void **)(v2 + 24);
  void *v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    uint64_t v20 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_100484EFC(v20, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1004853A0((uint64_t)v10, v44, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      uint64_t v21 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
      v45[0] = v41;
      v45[1] = v3;
      v45[2] = v40;
      v45[3] = v39;
      v45[4] = v38;
      v45[5] = v37;
      v45[6] = v36;
      v45[7] = v35;
      sub_100484E10((uint64_t)v45);
      sub_10044AF04((uint64_t)v45, (uint64_t)v47);
      swift_retain();
      unint64_t v22 = sub_1004F5C5C((uint64_t)v47, v21);
      uint64_t v23 = (char *)v22[2];
      if (v23)
      {
        uint64_t v40 = v22;
        uint64_t v41 = v4;
        uint64_t v24 = (uint64_t *)(v22 + 7);
        do
        {
          unint64_t v25 = *(v24 - 3);
          uint64_t v26 = *(v24 - 2);
          uint64_t v28 = *(v24 - 1);
          uint64_t v27 = *v24;
          sub_100484BD4(v25);
          sub_10047CEEC(v25, v26, v28, v27);
          sub_100484C20(v25);
          v24 += 4;
          --v23;
        }
        while (v23);
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v31 = v44;
      uint64_t v32 = v42;
      sub_100484EFC(v44, v42, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = v43;
      sub_100484EFC(v20, v43, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      swift_beginAccess();
      sub_100482D54(v32, v20);
      swift_endAccess();
      sub_100469198(v33);
      sub_100484F64(v32, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_100484F64(v33, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_10047D4E0();
      uint64_t v29 = type metadata accessor for UnauthenticatedStateWithTasks;
      uint64_t v30 = v31;
    }
    else
    {
      uint64_t v29 = type metadata accessor for ConnectionState;
      uint64_t v30 = (uint64_t)v10;
    }
    return sub_100484F64(v30, (uint64_t (*)(void))v29);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10047F768()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100715F70);
  __chkstk_darwin(v2 - 8);
  uint64_t v49 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = type metadata accessor for ConnectionEvent(0);
  __chkstk_darwin(v48);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v47 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v13 = __chkstk_darwin(v47);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)&v44 - v16;
  __uint64_t v18 = static MonotonicTime.now()();
  uint64_t v19 = sub_1004807B4(v18);
  double v20 = *(double *)&v19;
  if ((v21 & 1) == 0)
  {
    uint64_t v22 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v15, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v15, v6);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v23 = sub_1005E0EB0();
    os_log_type_t v24 = sub_1005E25A0();
    if (!os_log_type_enabled(v23, v24))
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      goto LABEL_11;
    }
    uint64_t v45 = v7;
    uint64_t v46 = v6;
    uint64_t v25 = swift_slowAlloc();
    v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 68158466;
    LODWORD(v50) = 2;
    sub_1005E2960();
    *(_WORD *)(v25 + 8) = 256;
    uint64_t v26 = v22 + *(int *)(v47 + 20);
    LOBYTE(v50) = *(unsigned char *)v26;
    sub_1005E2960();
    *(_WORD *)(v25 + 11) = 2082;
    uint64_t v27 = ConnectionID.debugDescription.getter(*(unsigned int *)(v26 + 4));
    uint64_t v50 = sub_100481E54(v27, v28, v51);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 21) = 2048;
    double v29 = round(v20);
    if ((~*(void *)&v29 & 0x7FF0000000000000) != 0)
    {
      if (v29 > -9.22337204e18)
      {
        if (v29 < 9.22337204e18)
        {
          uint64_t v50 = (uint64_t)v29;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%.*hhx-%{public}s] Stuck for %ld seconds trying in unauthenticated state. Closing connection.", (uint8_t *)v25, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v46);
LABEL_11:
          __uint64_t v40 = static MonotonicTime.now()();
          *uint64_t v5 = 2;
          type metadata accessor for ConnectionEvent.FailureReason(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v41 = (void *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
          swift_beginAccess();
          uint64_t v42 = v49;
          sub_100484EFC((uint64_t)v5, (uint64_t)v49, type metadata accessor for ConnectionEvent);
          sub_10047A934(v40, v42);
          sub_100007A48((uint64_t)v42, &qword_100715F70);
          sub_100484F64((uint64_t)v5, type metadata accessor for ConnectionEvent);
          swift_endAccess();
          uint64_t v43 = swift_allocObject();
          *(void *)(v43 + 16) = *v41;
          swift_bridgeObjectRetain();
          *(_DWORD *)(v43 + 24) = *(_DWORD *)ConnectionID.invalid.unsafeMutableAddressor();
          *(void *)(v43 + 32) = &_swiftEmptySetSingleton;
          *(void *)(v43 + 40) = &_swiftEmptySetSingleton;
          sub_10046DE48(v43 | 0x1000000000000000);
          swift_release();
          sub_1005E12F0();
          return;
        }
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  if (v19)
  {
    uint64_t v30 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v17, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v31 = v7;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v33 = v6;
    v32(v12, v17, v6);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v34 = sub_1005E0EB0();
    os_log_type_t v35 = sub_1005E25C0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      v51[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 68158210;
      LODWORD(v50) = 2;
      sub_1005E2960();
      *(_WORD *)(v36 + 8) = 256;
      uint64_t v37 = v30 + *(int *)(v47 + 20);
      LOBYTE(v50) = *(unsigned char *)v37;
      sub_1005E2960();
      *(_WORD *)(v36 + 11) = 2082;
      uint64_t v38 = ConnectionID.debugDescription.getter(*(unsigned int *)(v37 + 4));
      uint64_t v50 = sub_100481E54(v38, v39, v51);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%.*hhx-%{public}s] Checking stuck: waiting", (uint8_t *)v36, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v33);
  }
}

void sub_10047FEFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v53 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  id v17 = (char *)&v53 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v53 - v18;
  __uint64_t v20 = static MonotonicTime.now()();
  uint64_t v21 = sub_1004807B4(v20);
  if ((v22 & 1) == 0 || v21) {
    return;
  }
  uint64_t v23 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands;
  swift_beginAccess();
  if (!*(void *)(*(void *)v23 + 16) || *(unsigned char *)(*(void *)v23 + 56) == 2)
  {
    uint64_t v24 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v14, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v25 = v55;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v5, v14, v2);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v26 = sub_1005E0EB0();
    os_log_type_t v27 = sub_1005E2590();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v54 = v2;
      uint64_t v29 = v25;
      uint64_t v30 = v28;
      uint64_t v57 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 68158210;
      LODWORD(v56) = 2;
      sub_1005E2960();
      *(_WORD *)(v30 + 8) = 256;
      uint64_t v31 = v24 + *(int *)(v11 + 20);
      LOBYTE(v56) = *(unsigned char *)v31;
      sub_1005E2960();
      *(_WORD *)(v30 + 11) = 2082;
      uint64_t v32 = ConnectionID.debugDescription.getter(*(unsigned int *)(v31 + 4));
      uint64_t v56 = sub_100481E54(v32, v33, &v57);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[%.*hhx-%{public}s] Stuck check: no (non-IDLE) commands are currently running.", (uint8_t *)v30, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v54);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v2);
    }
    return;
  }
  int64_t v34 = static MonotonicTime.now()();
  uint64_t v35 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_lastMessageTime);
  BOOL v36 = __OFSUB__(v34, v35);
  uint64_t v37 = v34 - v35;
  if (v34 >= v35)
  {
LABEL_13:
    if (!v36) {
      goto LABEL_14;
    }
LABEL_25:
    __break(1u);
    return;
  }
  if (__OFSUB__(v35, v34))
  {
    __break(1u);
    goto LABEL_25;
  }
  BOOL v36 = __OFSUB__(0, v35 - v34);
  uint64_t v37 = v34 - v35;
  if (v36)
  {
    __break(1u);
    goto LABEL_13;
  }
LABEL_14:
  double v38 = (double)v37 / 1000000000.0;
  uint64_t v39 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  __uint64_t v40 = (void (**)(char *, char *, uint64_t))(v55 + 32);
  if (v38 >= 87.0)
  {
    sub_100484EFC(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v17, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    (*v40)(v8, v17, v2);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v47 = sub_1005E0EB0();
    os_log_type_t v48 = sub_1005E25A0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v57 = v54;
      *(_DWORD *)uint64_t v49 = 68158722;
      LODWORD(v56) = 2;
      sub_1005E2960();
      *(_WORD *)(v49 + 8) = 256;
      uint64_t v50 = v39 + *(int *)(v11 + 20);
      LOBYTE(v56) = *(unsigned char *)v50;
      sub_1005E2960();
      *(_WORD *)(v49 + 11) = 2082;
      uint64_t v51 = ConnectionID.debugDescription.getter(*(unsigned int *)(v50 + 4));
      uint64_t v56 = sub_100481E54(v51, v52, &v57);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 21) = 1040;
      LODWORD(v56) = 1;
      sub_1005E2960();
      *(_WORD *)(v49 + 27) = 2048;
      uint64_t v56 = *(void *)&v38;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "[%.*hhx-%{public}s] Connection appears to have been stuck for %.*f s. Cancelling.", (uint8_t *)v49, 0x25u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v2);
    CommandConnection.cancel()();
  }
  else
  {
    sub_100484EFC(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v19, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    (*v40)(v10, v19, v2);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v41 = sub_1005E0EB0();
    os_log_type_t v42 = sub_1005E25A0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v57 = v54;
      *(_DWORD *)uint64_t v43 = 68158722;
      LODWORD(v56) = 2;
      sub_1005E2960();
      *(_WORD *)(v43 + 8) = 256;
      uint64_t v44 = v39 + *(int *)(v11 + 20);
      LOBYTE(v56) = *(unsigned char *)v44;
      sub_1005E2960();
      *(_WORD *)(v43 + 11) = 2082;
      uint64_t v45 = ConnectionID.debugDescription.getter(*(unsigned int *)(v44 + 4));
      uint64_t v56 = sub_100481E54(v45, v46, &v57);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 21) = 1040;
      LODWORD(v56) = 1;
      sub_1005E2960();
      *(_WORD *)(v43 + 27) = 2048;
      uint64_t v56 = *(void *)&v38;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "[%.*hhx-%{public}s] Connection appears to have been stuck for %.*f s", (uint8_t *)v43, 0x25u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v2);
  }
}

uint64_t sub_1004807B4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 1) {
    goto LABEL_7;
  }
  sub_1004853A0((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
  uint64_t v10 = *((void *)v8 + 1);
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_100484F64((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks));
  if (v10 <= a1)
  {
    uint64_t v12 = a1 - v10;
    if (!__OFSUB__(a1, v10)) {
      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  if (__OFSUB__(v10, a1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v12 = a1 - v10;
  if (__OFSUB__(0, v10 - a1))
  {
    __break(1u);
LABEL_7:
    sub_100484F64((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    *(double *)&uint64_t result = 0.0;
    return result;
  }
LABEL_9:
  if ((double)v12 / 1000000000.0 <= 180.0) {
    return 1;
  }
  *(double *)&uint64_t result = (double)v12 / 1000000000.0;
  return result;
}

uint64_t sub_100480998@<X0>(uint64_t a1@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
  swift_beginAccess();
  uint64_t v4 = *v3;
  int64x2_t v5 = 0uLL;
  if (*(void *)(*v3 + 16) && *(unsigned char *)(v4 + 56) == 2)
  {
    uint64_t v6 = *(void *)(v4 + 64);
    uint64_t v7 = *(void *)(v4 + 32);
    int64x2_t v8 = vdupq_n_s64(2uLL);
    v8.i64[0] = *(void *)(v4 + 48);
    int64x2_t v10 = v8;
    uint64_t result = swift_bridgeObjectRetain();
    int64x2_t v5 = v10;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t result = 0;
    uint64_t v6 = 0;
  }
  a2->i64[0] = v7;
  a2->i64[1] = result;
  a2[1] = v5;
  a2[2].i64[0] = v6;
  return result;
}

uint64_t sub_100480A44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConnectionState();
  uint64_t v3 = __chkstk_darwin(v2);
  int64x2_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  uint64_t v8 = a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v8, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484EFC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100484F64((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_6:
    uint64_t v9 = 0;
    goto LABEL_7;
  }
  memcpy(v11, v5, 0x15AuLL);
  sub_100482DD4((uint64_t)&v11[184], (uint64_t)v12);
  if (sub_100482E30((uint64_t)v12) != 2)
  {
    sub_100482E3C((uint64_t)v11);
    goto LABEL_6;
  }
  sub_100483328((uint64_t)v12);
  sub_100482E3C((uint64_t)v11);
  uint64_t v9 = 1;
LABEL_7:
  sub_100484F64((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  return v9;
}

uint64_t sub_100480BF0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v9 = *(void *)(v7 + 24);
  char v11 = a2 & 1;
  if (!*(unsigned char *)(v7 + 32))
  {
    *(void *)&long long v27 = *(void *)v7;
    *((void *)&v27 + 1) = v8;
    LOBYTE(v28) = v10 & 1;
    *((void *)&v28 + 1) = v9;
    if ((sub_1004CBDF8(a1, v11, a7) & 1) == 0) {
      sub_1004814C4();
    }
    uint64_t v23 = v28;
    uint64_t v24 = *((void *)&v28 + 1);
    *(_OWORD *)uint64_t v7 = v27;
    *(void *)(v7 + 16) = v23;
    *(void *)(v7 + 24) = v24;
    *(unsigned char *)(v7 + 32) = 0;
    if (v23) {
      goto LABEL_6;
    }
LABEL_10:
    swift_retain();
    RestartableTimer.start()();
    return swift_release();
  }
  if (*(unsigned char *)(v7 + 32) == 1)
  {
    *(void *)&long long v27 = *(void *)v7;
    BYTE8(v27) = v8 & 1;
    *(void *)&long long v28 = v10;
    *((void *)&v28 + 1) = v9;
    uint64_t v12 = __chkstk_darwin(a1);
    v26[6] = v13;
    v26[7] = v14;
    uint64_t v15 = __chkstk_darwin(v12);
    v26[2] = v16;
    v26[3] = v17;
    if ((sub_1004CBEF0(v15, v18, (unint64_t)sub_1004849C0, v21, (uint64_t (*)(uint64_t))sub_100483AE4, (uint64_t)v26, v19, v20) & 1) == 0)sub_100480D78(); {
    uint64_t v22 = BYTE8(v27);
    }
    *(void *)uint64_t v7 = v27;
    *(void *)(v7 + 8) = v22;
    *(_OWORD *)(v7 + 16) = v28;
    *(unsigned char *)(v7 + 32) = 1;
    if ((v22 & 1) == 0) {
      goto LABEL_10;
    }
  }
LABEL_6:
  swift_retain();
  RestartableTimer.stop()();
  return swift_release();
}

uint64_t sub_100480D78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0D40();
  uint64_t v41 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  __uint64_t v40 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OutboundContent(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  __chkstk_darwin(v9);
  os_log_type_t v42 = (char *)&v34 - v10;
  uint64_t v43 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v11 = __chkstk_darwin(v43);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_1004834E0(v14, v1, (void (*)(uint64_t))sub_1004E1FF0);
  uint64_t v44 = v7;
  unint64_t v36 = v15;
  uint64_t v37 = v2;
  uint64_t v38 = v4;
  uint64_t v39 = v6;
  swift_release();
  uint64_t v16 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_100484EFC(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v42, v13, v7);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v17 = sub_1005E0EB0();
  os_log_type_t v18 = sub_1005E2590();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = v43;
  uint64_t v21 = (uint64_t)v40;
  if (v19)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v46[0] = v35;
    *(_DWORD *)uint64_t v22 = 68158466;
    LODWORD(v45) = 2;
    sub_1005E2960();
    *(_WORD *)(v22 + 8) = 256;
    uint64_t v23 = v16 + *(int *)(v20 + 20);
    LOBYTE(v45) = *(unsigned char *)v23;
    sub_1005E2960();
    *(_WORD *)(v22 + 11) = 2082;
    uint64_t v24 = ConnectionID.debugDescription.getter(*(unsigned int *)(v23 + 4));
    uint64_t v45 = sub_100481E54(v24, v25, v46);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 21) = 2082;
    unint64_t v26 = v36;
    uint64_t v27 = Tag.debugDescription.getter(v36 & 0xFFFFFFFF000000FFLL);
    uint64_t v45 = sub_100481E54(v27, v28, v46);
    sub_1005E2960();
    uint64_t v20 = v43;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%.*hhx-%{public}s] Sending IDLE as %{public}s", (uint8_t *)v22, 0x1Fu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v42, v44);
    uint64_t v29 = v37;
    uint64_t v30 = v41;
    uint64_t v31 = (uint64_t)v39;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v42, v44);
    uint64_t v29 = v37;
    uint64_t v30 = v41;
    uint64_t v31 = (uint64_t)v39;
    unint64_t v26 = v36;
  }
  uint64_t v32 = *(void *)(v1 + 16);
  swift_storeEnumTagMultiPayload();
  sub_10048D264(v26, v31);
  sub_100484F64(v31, type metadata accessor for OutboundContent);
  OSSignpostID.init(engine:kind:connectionID:)(*(unsigned __int8 *)(v32 + *(int *)(v20 + 20) + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger), 1, *(_DWORD *)(v32 + *(int *)(v20 + 20) + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger + 4));
  sub_1004BA438(v21);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v21, v29);
}

uint64_t sub_1004814C4()
{
  uint64_t v1 = sub_1005E0D40();
  uint64_t v54 = *(void *)(v1 - 8);
  uint64_t v55 = v1;
  __chkstk_darwin(v1);
  uint64_t v53 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for OutboundContent(0);
  __chkstk_darwin(v51);
  unint64_t v52 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v47 - v6;
  uint64_t v8 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v0;
  uint64_t v15 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v15, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2) {
    return sub_100484F64((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  uint64_t v16 = (uint64_t)v11;
  uint64_t v50 = v8;
  uint64_t v18 = v55;
  uint64_t v17 = v56;
  uint64_t v19 = v57;
  memcpy(v61, v14, 0x15AuLL);
  sub_100482E3C((uint64_t)v61);
  uint64_t v20 = v58;
  uint64_t v21 = v58 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(*(void *)v21 + 16))
  {
    uint64_t v23 = swift_retain();
    uint64_t v49 = sub_1004834E0(v23, v20, (void (*)(uint64_t))sub_1004E20E8);
    swift_release();
    uint64_t v24 = v20 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    uint64_t v25 = v16;
    sub_100484EFC(v20 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v26 = v17;
    uint64_t v27 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v7, v25, v19);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v28 = sub_1005E0EB0();
    os_log_type_t v29 = sub_1005E2590();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v31 = v50;
    if (v30)
    {
      uint64_t v32 = swift_slowAlloc();
      os_log_type_t v48 = v27;
      uint64_t v33 = v32;
      uint64_t v47 = swift_slowAlloc();
      v60[0] = v47;
      *(_DWORD *)uint64_t v33 = 68158466;
      LODWORD(v59) = 2;
      sub_1005E2960();
      *(_WORD *)(v33 + 8) = 256;
      uint64_t v34 = v24 + *(int *)(v31 + 20);
      LOBYTE(v59) = *(unsigned char *)v34;
      sub_1005E2960();
      *(_WORD *)(v33 + 11) = 2082;
      uint64_t v35 = ConnectionID.debugDescription.getter(*(unsigned int *)(v34 + 4));
      uint64_t v59 = sub_100481E54(v35, v36, v60);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 21) = 2082;
      unint64_t v37 = v49;
      uint64_t v38 = Tag.debugDescription.getter(v49 & 0xFFFFFFFF000000FFLL);
      uint64_t v59 = sub_100481E54(v38, v39, v60);
      uint64_t v40 = v31;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[%.*hhx-%{public}s] Sending NOOP as %{public}s", (uint8_t *)v33, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v41 = v58;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v48, v57);
      uint64_t v42 = v18;
      uint64_t v44 = (uint64_t)v53;
      uint64_t v43 = v54;
      uint64_t v45 = (uint64_t)v52;
    }
    else
    {

      uint64_t v41 = v58;
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v57);
      uint64_t v40 = v31;
      uint64_t v42 = v18;
      uint64_t v44 = (uint64_t)v53;
      uint64_t v43 = v54;
      uint64_t v45 = (uint64_t)v52;
      unint64_t v37 = v49;
    }
    uint64_t v46 = *(void *)(v41 + 16);
    type metadata accessor for ClientCommand(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_10048D264(v37, v45);
    sub_100484F64(v45, type metadata accessor for OutboundContent);
    OSSignpostID.init(engine:kind:connectionID:)(*(unsigned __int8 *)(v46 + *(int *)(v40 + 20) + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger), 1, *(_DWORD *)(v46 + *(int *)(v40 + 20) + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger + 4));
    sub_1004BA438(v44);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
  }
  return result;
}

uint64_t sub_100481D84()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10047CBD8();
    return swift_release();
  }
  return result;
}

uint64_t sub_100481DDC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_100481E54(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1005E2960();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_100481E54(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100481F28(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000D65AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_100481F28(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1005E2970();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1004820E4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1005E2D30();
  if (!v8)
  {
    sub_1005E2F10();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1004820E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10048217C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10048235C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10048235C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10048217C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1004822F4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1005E2C90();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1005E2F10();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1005E1E80();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_1005E3000();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1005E2F10();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1004822F4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100715960);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10048235C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715960);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004824AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1005E2FB0();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1005E2FB0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1005E2D00();
      swift_bridgeObjectRelease();
      *unint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_1005E2FB0();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  sub_1005E15D0();
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1005E2FB0();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = sub_1005E3000();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1005E2FB0();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v14 = v3;
  return sub_1005E20E0();
}

uint64_t sub_100482798(uint64_t result)
{
  if (result)
  {
    unsigned int v1 = result;
    swift_stdlib_random();
    uint64_t result = 0;
    if (-v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100482828(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1004D0DFC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100482A10@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_1005E1670();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)aBlock - v11;
  *(void *)((char *)aBlock - v11) = 500;
  uint64_t v13 = enum case for DispatchTimeInterval.milliseconds(_:);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v14((char *)aBlock - v11, enum case for DispatchTimeInterval.milliseconds(_:), v6);
  *(void *)uint64_t v10 = 100;
  v14(v10, v13, v6);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100485470;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100469020;
  aBlock[3] = &unk_1006F8368;
  unint64_t v16 = _Block_copy(aBlock);
  type metadata accessor for RestartableTimer();
  swift_allocObject();
  id v17 = a1;
  swift_retain();
  uint64_t v18 = RestartableTimer.init(queue:repeating:leeway:closure:)(v17, (uint64_t)v12, (uint64_t)v10, v16);
  swift_release();
  swift_release();
  uint64_t result = sub_100482798(16777217);
  float v20 = (float)((float)((float)result * 0.000000059605) * 0.17) + 0.83;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(unsigned char *)(a2 + 32) = 2;
  *(void *)(a2 + 40) = v18;
  if (result == 0x1000000) {
    float v20 = 1.0;
  }
  *(double *)(a2 + 48) = a3;
  *(float *)(a2 + 56) = v20;
  return result;
}

uint64_t sub_100482C9C()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100482CD4()
{
  return sub_100469FEC();
}

uint64_t sub_100482CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100482CEC()
{
  return swift_release();
}

unint64_t sub_100482CF8()
{
  unint64_t result = qword_100717770;
  if (!qword_100717770)
  {
    sub_10000744C(&qword_100715C98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717770);
  }
  return result;
}

uint64_t sub_100482D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100482DB8(uint64_t a1)
{
  return sub_10046B2D8(a1);
}

uint64_t sub_100482DD4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100482E30(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 160) >> 14;
}

uint64_t sub_100482E3C(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 184);
  uint64_t v15 = *(void *)(a1 + 208);
  unint64_t v16 = *(void *)(a1 + 200);
  uint64_t v13 = *(void *)(a1 + 224);
  uint64_t v14 = *(void *)(a1 + 216);
  uint64_t v11 = *(void *)(a1 + 240);
  uint64_t v12 = *(void *)(a1 + 232);
  long long v10 = *(_OWORD *)(a1 + 248);
  long long v8 = *(_OWORD *)(a1 + 280);
  long long v9 = *(_OWORD *)(a1 + 264);
  long long v7 = *(_OWORD *)(a1 + 296);
  long long v6 = *(_OWORD *)(a1 + 312);
  uint64_t v2 = *(void *)(a1 + 336);
  uint64_t v5 = *(void *)(a1 + 328);
  unsigned __int16 v3 = *(_WORD *)(a1 + 344);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100482FC8(v18, v17, v16, v15, v14, v13, v12, v11, v10, *((uint64_t *)&v10 + 1), v9, DWORD2(v9), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    v2,
    v3);
  return a1;
}

uint64_t sub_100482FC8(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int16 a21)
{
  int v23 = a21 >> 14;
  switch(v23)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 1:
      swift_bridgeObjectRelease();
      sub_100483244(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
      swift_bridgeObjectRelease();
      break;
    case 0:
      return sub_100483114(result, a2, a3, a4, a5);
    default:
      return result;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_100483114(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_10048316C(a3, a4, a5);
  }
  return result;
}

unint64_t sub_10048316C(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1004831AC(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1004831AC(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1004831C0(result);
  }
  return result;
}

unint64_t sub_1004831C0(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100483244(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int v10 = (a10 >> 21) & 7;
  if (v10 == 3)
  {
    return sub_1004832CC(result, a2, a3, a4);
  }
  else if (v10 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1004832CC(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF) {
    return sub_1004832E0(result, a2, a3, a4);
  }
  return result;
}

unint64_t sub_1004832E0(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_1004831AC(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100483328(uint64_t result)
{
  *(_WORD *)(result + 160) &= 0x3FFFu;
  return result;
}

uint64_t sub_100483338(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  unsigned int v9 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRetain();
  sub_1004833F4(v12, v11, v2, v3, v4, v5, v6, v8, v7, v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1004833F4(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int v10 = (a10 >> 21) & 7;
  if (v10 == 3)
  {
    return sub_100483484(result, a2, a3, a4);
  }
  else if (v10 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_100483484(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 0xFF) {
    return sub_100483498(result, a2, a3, a4);
  }
  return result;
}

unint64_t sub_100483498(unint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    sub_10044AE60(result);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1004834E0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_1005E1850();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unsigned int v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v10 = *(void **)(a1 + 24);
  void *v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v13 = (int *)(a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter);
    swift_beginAccess();
    int v14 = *v13;
    uint64_t v15 = (*v13 + 1) & 0xFFFFFF;
    *uint64_t v13 = v15;
    uint64_t v16 = *(unsigned int *)(a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
    swift_beginAccess();
    uint64_t v17 = v16 | (v15 << 32);
    a3(v17);
    swift_endAccess();
    if (v3)
    {
      *uint64_t v13 = v14;
      swift_willThrow();
    }
    swift_endAccess();
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004836A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004836CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  return sub_100484EFC(v3, a2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
}

uint64_t sub_10048373C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100483794(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100469660(a1, a2, a3, a4, &OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
}

uint64_t sub_1004837B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10048380C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100469660(a1, a2, a3, a4, &OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
}

uint64_t sub_10048382C()
{
  return type metadata accessor for CommandConnection();
}

uint64_t type metadata accessor for CommandConnection()
{
  uint64_t result = qword_100715CC8;
  if (!qword_100715CC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100483880()
{
  uint64_t result = _s14descr1006B94C1C6LoggerVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ConnectionState();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1004839CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004839E4()
{
  return sub_10001B364(*(void *)(v0 + 16));
}

uint64_t sub_1004839EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_1004839FC(unsigned char **result)
{
  unint64_t v2 = *result;
  *unint64_t v2 = *(unsigned char *)(v1 + 16);
  *uint64_t result = v2 + 1;
  return result;
}

uint64_t sub_100483A10()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483A20()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483A30()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483A40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_100483A74()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483A84()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483A94()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100483ABC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_100481DDC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_100483AC4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483AD4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483AE4()
{
  return sub_1004C2208(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100483AEC()
{
  return sub_1004C2234(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100483AF4@<X0>(_DWORD *a1@<X8>)
{
  return sub_1004C225C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100483B00()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483B10()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483B20()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483B30()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483B40()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483B50()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t *sub_100483B60(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_100483B90(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100483BC0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483BD0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483BE0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483BF0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483C00()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483C10()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483C20()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100483C58()
{
  return sub_1005E06E0();
}

uint64_t sub_100483C60()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483C70()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483C80()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483C90()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483CA0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483CB0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483CC0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483CD0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483CE0()
{
  return sub_1004C2128(*(uint64_t (**)(void))(v0 + 16));
}

void sub_100483CE8(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_1004C2150(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_100483CF0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100483D00()
{
  return sub_1004C20EC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100483D08()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483D18()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483D28()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483D38()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483D48()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483D58()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483D68()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483D78()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483D88()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100483D98()
{
  return *(unsigned __int8 *)(v0 + 16) | ((unint64_t)*(unsigned int *)(v0 + 20) << 32);
}

uint64_t sub_100483DA8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483DB8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483DC8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483DD8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483DE8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483DF8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483E08()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483E18()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483E28()
{
  sub_1004832E0(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100483E68()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100483E78()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483E88()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483E98()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483EA8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483EB8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483EC8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483ED8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483EE8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483EF8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100483F08()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483F18()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483F28()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483F38()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483F48()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483F58()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483F68()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483F78()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100483F90()
{
  uint64_t v1 = *(void *)(sub_1005E1650() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_10047CA94(v2);
}

uint64_t sub_100483FF0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484000()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484010()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484020()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484030()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484040()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484050()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484060()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1004840A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004840B4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004840C4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004840D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004840E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100484130()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_100484148()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484158()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484168()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484178()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484188()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484198()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004841A8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004841B8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004841C8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004841D8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004841E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004841F8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484208()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484218()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048422C()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_100484240()
{
  uint64_t v1 = sub_1005E1650();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004842D0()
{
  return sub_1005E1630();
}

uint64_t sub_10048432C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048433C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048434C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048435C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048436C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048437C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048438C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048439C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004843AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004843BC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004843CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004843DC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004843EC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004843FC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10048440C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100484448()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_100484458()
{
  return sub_1005E1040();
}

uint64_t sub_100484460()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484470()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484480()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484490()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004844A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004844B0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004844C0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004844D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004844E0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004844F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484500()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484510()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484520(uint64_t *a1)
{
  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  uint64_t v3 = *a1 + 4;
  uint64_t result = sub_1005E2960();
  *a1 = v3;
  return result;
}

uint64_t sub_100484584()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484594()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004845A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004845B4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004845C4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004845D4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004845E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004845F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484604()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484614()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484628()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484638()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484648()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484658()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484668()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484678()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484688()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484698()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004846A8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004846B8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004846C8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004846D8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004846E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004846F8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484708()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484718()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484728()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484738()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_100484748()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  uint64_t v2 = _s14descr1006B94C1C6LoggerVMa();
  return *(unsigned __int8 *)(v1 + *(int *)(v2 + 20)) | ((unint64_t)*(unsigned int *)(v1 + *(int *)(v2 + 20) + 4) << 32);
}

uint64_t sub_10048478C()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return ConnectionID.debugDescription.getter(v1);
}

uint64_t sub_1004847C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100484808()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484818()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484828()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484838()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484848(uint64_t *a1)
{
  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  uint64_t v3 = *a1 + 1;
  uint64_t result = sub_1005E2960();
  *a1 = v3;
  return result;
}

uint64_t sub_1004848A8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004848B8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004848C8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004848D8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004848E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004848F8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100484908(uint64_t *a1)
{
  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  uint64_t v3 = *a1 + 8;
  uint64_t result = sub_1005E2960();
  *a1 = v3;
  return result;
}

uint64_t sub_100484968(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004849B0@<X0>(int64x2_t *a1@<X8>)
{
  return sub_100480998(v1, a1);
}

uint64_t sub_1004849B8()
{
  return sub_100480A44(v0);
}

uint64_t sub_1004849C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1004CBEAC(*(void (**)(void *__return_ptr))(v1 + 16), a1);
}

unint64_t sub_1004849C8(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100484A20(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100484A78(char a1)
{
  return sub_100498E1C(a1);
}

uint64_t sub_100484A80()
{
  uint64_t v1 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100484B58(uint64_t a1)
{
  uint64_t v3 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  char v4 = *(unsigned char *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_100498910(a1, v4, v5);
}

uint64_t sub_100484BCC(uint64_t a1)
{
  return sub_10047E9A8(a1);
}

unint64_t sub_100484BD4(unint64_t result)
{
  if (result >> 62 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_100484C20(unint64_t result)
{
  if (result >> 62 == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100484C6C()
{
  swift_release();

  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100484CB4()
{
  return sub_10047EF04(*(void (**)(uint64_t (*)(uint64_t *), uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100484CC0()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100484D00(uint64_t *a1)
{
  return sub_10047EFA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100484D08()
{
  swift_release();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100484D64()
{
  return sub_10047F25C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t *sub_100484D70(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100484DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100484E10(uint64_t result)
{
  *(unsigned char *)(result + 176) = 4;
  return result;
}

uint64_t sub_100484E1C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10047E578(v1, a1);
}

uint64_t sub_100484E38(uint64_t a1)
{
  uint64_t v1 = CommandConnection.send(_:)(a1);
  CommandConnection.flush()();
  return v1;
}

double sub_100484E74@<D0>(_OWORD *a1@<X8>)
{
  return sub_1004A5064(*(void (**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

double sub_100484E7C(uint64_t a1)
{
  *(void *)a1 = 3;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = 7;
  return result;
}

uint64_t sub_100484EC0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100484EFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100484F64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100484FC4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_100484A20(result);
  }
  return result;
}

unint64_t sub_100484FD8(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_100485030(a3, a4, a5);
  }
  return result;
}

unint64_t sub_100485030(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_10044AE60(result);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100485070()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    if ((~*(void *)(v0 + 32) & 0xF000000000000007) != 0) {
      sub_1004831C0(*(void *)(v0 + 32));
    }
    swift_bridgeObjectRelease();
  }
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004850D0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v4 = *(_WORD *)(a1 + 160);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    v4);
  return a1;
}

uint64_t sub_100485144(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int16 a21)
{
  int v23 = a21 >> 14;
  switch(v23)
  {
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 1:
      swift_bridgeObjectRetain();
      sub_1004833F4(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
      swift_bridgeObjectRetain();
      break;
    case 0:
      return sub_100484FD8(result, a2, a3, a4, a5);
    default:
      return result;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1004852A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 200, 7);
}

uint64_t sub_100485338(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004853A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100485408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100485470()
{
  return sub_100481D84();
}

IMAP2Connection::CommandID __swiftcall CommandID.init(connection:commandCounter:)(IMAP2Protocol::ConnectionID connection, IMAP2Connection::CommandCounter commandCounter)
{
  return (IMAP2Connection::CommandID)(connection.rawValue | (*(void *)&commandCounter.rawValue << 32));
}

uint64_t CommandCounter.withNext<A>(_:)(uint64_t (*a1)(void))
{
  int v3 = *v1;
  *uint64_t v1 = (*v1 + 1) & 0xFFFFFF;
  uint64_t result = a1();
  if (v2)
  {
    *uint64_t v1 = v3;
    return swift_willThrow();
  }
  return result;
}

uint64_t static ConnectionCommandIDSet.empty.getter()
{
  return *(unsigned int *)ConnectionID.invalid.unsafeMutableAddressor();
}

uint64_t ConnectionCommandIDSet.count.getter(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16);
}

unint64_t CommandID.tag.getter(uint64_t a1)
{
  return a1 & 0xFFFFFFFF000000FFLL;
}

void CommandID.hash(into:)(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = HIDWORD(a2);
  sub_1005E3440(a2);
  sub_1005E3440(v2);
}

Swift::Int CommandID.hashValue.getter(unint64_t a1)
{
  Swift::UInt32 v1 = a1;
  unint64_t v2 = HIDWORD(a1);
  sub_1005E33F0();
  sub_1005E3440(v1);
  sub_1005E3440(v2);
  return sub_1005E3470();
}

Swift::Int sub_100485928()
{
  Swift::UInt32 v1 = *v0;
  Swift::UInt32 v2 = v0[1];
  sub_1005E33F0();
  sub_1005E3440(v1);
  sub_1005E3440(v2);
  return sub_1005E3470();
}

void sub_100485984()
{
  Swift::UInt32 v1 = v0[1];
  sub_1005E3440(*v0);
  sub_1005E3440(v1);
}

Swift::Int sub_1004859C0()
{
  Swift::UInt32 v1 = *v0;
  Swift::UInt32 v2 = v0[1];
  sub_1005E33F0();
  sub_1005E3440(v1);
  sub_1005E3440(v2);
  return sub_1005E3470();
}

uint64_t static CommandID.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == a2 && HIDWORD(a1) < HIDWORD(a2);
  return a1 < a2 || v3;
}

BOOL sub_100485A3C(_DWORD *a1, _DWORD *a2)
{
  if (*a1 < *a2) {
    return 1;
  }
  return *a1 == *a2 && a1[1] < a2[1];
}

BOOL sub_100485A68(_DWORD *a1, _DWORD *a2)
{
  if (*a2 < *a1) {
    return 0;
  }
  return *a2 != *a1 || a2[1] >= a1[1];
}

BOOL sub_100485A94(_DWORD *a1, _DWORD *a2)
{
  if (*a1 < *a2) {
    return 0;
  }
  return *a1 != *a2 || a1[1] >= a2[1];
}

BOOL sub_100485AC0(_DWORD *a1, _DWORD *a2)
{
  if (*a2 < *a1) {
    return 1;
  }
  return *a2 == *a1 && a2[1] < a1[1];
}

uint64_t static ConnectionCommandIDSet.__derived_struct_equals(_:_:)(int a1, Swift::Int a2, Swift::Int a3, int a4, uint64_t a5, uint64_t a6)
{
  if (a1 != a4) {
    return 0;
  }
  if (sub_100013570(a2, a5)) {
    char v8 = sub_100013570(a3, a6);
  }
  else {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_100485B4C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v28 = result;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  if (v6) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v9 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v9 >= v30) {
    return 1;
  }
  unint64_t v10 = *(void *)(v29 + 8 * v9);
  int64_t v11 = v3 + 1;
  if (!v10)
  {
    int64_t v11 = v9 + 1;
    if (v9 + 1 >= v30) {
      return 1;
    }
    unint64_t v10 = *(void *)(v29 + 8 * v11);
    if (!v10)
    {
      int64_t v11 = v9 + 2;
      if (v9 + 2 >= v30) {
        return 1;
      }
      unint64_t v10 = *(void *)(v29 + 8 * v11);
      if (!v10)
      {
        int64_t v12 = v9 + 3;
        if (v12 < v30)
        {
          unint64_t v10 = *(void *)(v29 + 8 * v12);
          if (v10)
          {
            int64_t v11 = v12;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v11 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              break;
            }
            if (v11 >= v30) {
              return 1;
            }
            unint64_t v10 = *(void *)(v29 + 8 * v11);
            ++v12;
            if (v10) {
              goto LABEL_21;
            }
          }
LABEL_45:
          __break(1u);
          return result;
        }
        return 1;
      }
    }
  }
LABEL_21:
  uint64_t v31 = (v10 - 1) & v10;
  int64_t v32 = v11;
  for (unint64_t i = __clz(__rbit64(v10)) + (v11 << 6); ; unint64_t i = __clz(__rbit64(v6)) | (v3 << 6))
  {
    uint64_t v13 = *(void *)(result + 48) + 32 * i;
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *(void *)(v13 + 8);
    unint64_t v16 = *(void *)(v13 + 16);
    int v17 = *(unsigned __int8 *)(v13 + 24);
    sub_1005E33F0();
    swift_bridgeObjectRetain_n();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    if (v17 == 1)
    {
      sub_1005E3420(0);
    }
    else
    {
      sub_1005E3420(1u);
      sub_1005E3450(v16 >> 14);
    }
    Swift::Int v18 = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      break;
    }
    uint64_t v21 = ~v19;
    uint64_t v22 = *(void *)(a2 + 48);
    while (1)
    {
      uint64_t v24 = v22 + 32 * v20;
      uint64_t v25 = *(void *)(v24 + 16);
      char v26 = *(unsigned char *)(v24 + 24);
      BOOL v27 = *(void *)v24 == v15 && *(void *)(v24 + 8) == v14;
      if (!v27 && (sub_1005E3290() & 1) == 0) {
        goto LABEL_31;
      }
      if ((v26 & 1) == 0) {
        break;
      }
      if (v17) {
        goto LABEL_39;
      }
LABEL_31:
      unint64_t v20 = (v20 + 1) & v21;
      if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_42;
      }
    }
    if (((v25 ^ v16) & 0xFFFFFFFFFFFFC000) != 0) {
      char v23 = 1;
    }
    else {
      char v23 = v17;
    }
    if (v23) {
      goto LABEL_31;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    int64_t v3 = v32;
    uint64_t v2 = a2;
    uint64_t result = v28;
    unint64_t v6 = v31;
    if (!v31) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v31 = (v6 - 1) & v6;
    int64_t v32 = v3;
  }
LABEL_42:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100485E18(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v26 = result;
  uint64_t v27 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v28 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v29 = v3;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(*(void *)(result + 48) + 16 * v10 + 8);
    sub_1005E33F0();
    if (v15)
    {
      sub_1005E3410(0);
      sub_1005E1CD0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1005E3410(1uLL);
    }
    Swift::Int v16 = sub_1005E3470();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    {
LABEL_42:
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v19 = ~v17;
    while (1)
    {
      if (!*(void *)(*(void *)(a2 + 48) + 16 * v18 + 8))
      {
        if (!v15) {
          goto LABEL_39;
        }
        goto LABEL_28;
      }
      if (!v15) {
        goto LABEL_28;
      }
      uint64_t v20 = sub_1005E1CD0();
      uint64_t v22 = v21;
      if (v20 == sub_1005E1CD0() && v22 == v23) {
        break;
      }
      char v25 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_38;
      }
LABEL_28:
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_38:
    swift_bridgeObjectRelease();
LABEL_39:
    uint64_t result = v26;
    int64_t v3 = v29;
    if (v7) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v11 >= v28) {
    return 1;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v11);
  int64_t v13 = v3 + 1;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v3 + 2;
  if (v3 + 2 >= v28) {
    return 1;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v13 = v3 + 3;
  if (v3 + 3 >= v28) {
    return 1;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12) {
    goto LABEL_21;
  }
  uint64_t v14 = v3 + 4;
  if (v3 + 4 >= v28) {
    return 1;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v3 + 4;
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    int64_t v29 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      return 1;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100486104(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v62 = a1;
  uint64_t v63 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v64 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v80 = a2 + 56;
  if ((v5 & v3) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  if (v10 >= v64) {
    return 1;
  }
  unint64_t v11 = *(void *)(v63 + 8 * v10);
  ++v2;
  if (!v11)
  {
    int64_t v2 = v10 + 1;
    if (v10 + 1 >= v64) {
      return 1;
    }
    unint64_t v11 = *(void *)(v63 + 8 * v2);
    if (!v11)
    {
      int64_t v2 = v10 + 2;
      if (v10 + 2 >= v64) {
        return 1;
      }
      unint64_t v11 = *(void *)(v63 + 8 * v2);
      if (!v11)
      {
        int64_t v12 = v10 + 3;
        if (v12 < v64)
        {
          unint64_t v11 = *(void *)(v63 + 8 * v12);
          if (v11)
          {
            int64_t v2 = v12;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v2 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              break;
            }
            if (v2 >= v64) {
              return 1;
            }
            unint64_t v11 = *(void *)(v63 + 8 * v2);
            ++v12;
            if (v11) {
              goto LABEL_21;
            }
          }
LABEL_61:
          __break(1u);
          JUMPOUT(0x100486A68);
        }
        return 1;
      }
    }
  }
LABEL_21:
  uint64_t v8 = (v11 - 1) & v11;
  for (unint64_t i = __clz(__rbit64(v11)) + (v2 << 6); ; unint64_t i = v7 | (v2 << 6))
  {
    int64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 80 * i);
    uint64_t v14 = v13[2];
    unint64_t v81 = v13[1];
    uint64_t v82 = *v13;
    unint64_t v15 = v13[3];
    uint64_t v16 = v13[7];
    unint64_t v70 = v13[5];
    uint64_t v71 = v13[6];
    unint64_t v17 = v13[9];
    uint64_t v72 = v13[8];
    uint64_t v73 = v13[4];
    sub_1005E33F0();
    uint64_t v75 = v16;
    unint64_t v76 = v15;
    uint64_t v77 = v14;
    unint64_t v69 = v17;
    unint64_t v65 = v8;
    int64_t v66 = v2;
    if ((v16 & 0x1000000000000000) != 0)
    {
      unint64_t v78 = v16 & 0xEFFFFFFFFFFFFFFFLL;
      sub_1005E3410(1uLL);
      switch((v17 >> 59) & 6 | ((v16 & 0x2000000000000000) != 0))
      {
        case 1uLL:
          sub_1005E3410(1uLL);
          sub_10044CA28(v82, v81, v14, v15, v73, v70, v71, v16, v72, v17);
          sub_10044CA28(v82, v81, v14, v15, v73, v70, v71, v16, v72, v17);
          sub_100008D24(v82, v81);
          sub_100008D24(v14, v15);
          sub_100008D24(v73, v70);
          sub_100008D24(v71, v16 & 0xCFFFFFFFFFFFFFFFLL);
          sub_100008D24(v72, v17 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v71, v16 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1000094D4(v73, v70);
          sub_1000094D4(v14, v15);
          sub_1000094D4(v82, v81);
          sub_1000094D4(v72, v17 & 0xCFFFFFFFFFFFFFFFLL);
          uint64_t v58 = v72;
          unint64_t v59 = v17;
          uint64_t v21 = v82;
          unint64_t v22 = v81;
          uint64_t v23 = v14;
          unint64_t v24 = v15;
          uint64_t v25 = v73;
          unint64_t v26 = v70;
          uint64_t v27 = v71;
          goto LABEL_35;
        case 2uLL:
          sub_1005E3410(2uLL);
          unint64_t v60 = v17;
          unint64_t v28 = v17;
          uint64_t v30 = v72;
          uint64_t v29 = v73;
          unint64_t v32 = v81;
          uint64_t v31 = v82;
          unint64_t v34 = v70;
          uint64_t v33 = v71;
          sub_10044CA28(v82, v81, v14, v15, v73, v70, v71, v75, v72, v60);
          sub_100443318(v82, v81, v14, v15, v73, v70, v71, v78, v72, v28);
          sub_1005E08B0();
          goto LABEL_34;
        case 3uLL:
          Swift::UInt v35 = 3;
          goto LABEL_33;
        case 4uLL:
          sub_1005E3410(4uLL);
          unint64_t v19 = v70;
          uint64_t v18 = v71;
          uint64_t v20 = v16;
          sub_10044CA28(v82, v81, v14, v15, v73, v70, v71, v16, v72, v17);
          sub_10044CA28(v82, v81, v14, v15, v73, v70, v71, v16, v72, v17);
          sub_100008D24(v82, v81);
          sub_100008D24(v14, v15);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v82, v81);
          sub_1000094D4(v14, v15);
          uint64_t v58 = v72;
          unint64_t v59 = v17;
          uint64_t v21 = v82;
          unint64_t v22 = v81;
          uint64_t v23 = v14;
          unint64_t v24 = v15;
          uint64_t v25 = v73;
          goto LABEL_30;
        case 5uLL:
          Swift::UInt v35 = 5;
          goto LABEL_33;
        case 6uLL:
          Swift::UInt v35 = 6;
LABEL_33:
          sub_1005E3410(v35);
          unint64_t v61 = v17;
          unint64_t v28 = v17;
          uint64_t v30 = v72;
          uint64_t v29 = v73;
          unint64_t v32 = v81;
          uint64_t v31 = v82;
          unint64_t v34 = v70;
          uint64_t v33 = v71;
          sub_10044CA28(v82, v81, v14, v15, v73, v70, v71, v75, v72, v61);
          sub_100443318(v82, v81, v14, v15, v73, v70, v71, v78, v72, v28);
          sub_1005E1DB0();
          sub_1005E1DB0();
LABEL_34:
          uint64_t v58 = v30;
          unint64_t v59 = v28;
          uint64_t v21 = v31;
          unint64_t v22 = v32;
          uint64_t v23 = v14;
          unint64_t v24 = v15;
          uint64_t v25 = v29;
          unint64_t v26 = v34;
          uint64_t v27 = v33;
LABEL_35:
          uint64_t v36 = v75;
          break;
        default:
          sub_1005E3410(0);
          unint64_t v19 = v70;
          uint64_t v18 = v71;
          uint64_t v20 = v16;
          sub_10044CA28(v82, v81, v14, v15, v73, v70, v71, v16, v72, v17);
          sub_10044CA28(v82, v81, v14, v15, v73, v70, v71, v16, v72, v17);
          sub_100008D24(v82, v81);
          sub_100008D24(v14, v15);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v82, v81);
          sub_1000094D4(v14, v15);
          uint64_t v58 = v72;
          unint64_t v59 = v17;
          uint64_t v21 = v82;
          unint64_t v22 = v81;
          uint64_t v23 = v14;
          unint64_t v24 = v15;
          uint64_t v25 = v73;
LABEL_30:
          unint64_t v26 = v19;
          uint64_t v27 = v18;
          uint64_t v36 = v20;
          break;
      }
      sub_10044B008(v21, v22, v23, v24, v25, v26, v27, v36, v58, v59);
    }
    else
    {
      sub_1005E3410(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      sub_1005E1DB0();
    }
    Swift::Int v37 = sub_1005E3470();
    uint64_t v39 = a2;
    uint64_t v38 = v75;
    uint64_t v40 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v41 = v37 & ~v40;
    if (((*(void *)(v80 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
      break;
    }
    uint64_t v79 = ~v40;
    while (1)
    {
      uint64_t v42 = (uint64_t *)(*(void *)(v39 + 48) + 80 * v41);
      uint64_t v43 = *v42;
      unint64_t v44 = v42[1];
      uint64_t v45 = v42[2];
      unint64_t v46 = v42[3];
      uint64_t v47 = v42[7];
      if ((v47 & 0x1000000000000000) == 0) {
        break;
      }
      uint64_t v53 = v42[4];
      unint64_t v52 = v42[5];
      uint64_t v54 = v42[6];
      uint64_t v55 = v42[8];
      unint64_t v56 = v42[9];
      v83[0] = *v42;
      v83[1] = v44;
      v83[2] = v45;
      v83[3] = v46;
      v83[4] = v53;
      v83[5] = v52;
      v83[6] = v54;
      v83[7] = v47 & 0xEFFFFFFFFFFFFFFFLL;
      v83[8] = v55;
      v83[9] = v56;
      if ((v38 & 0x1000000000000000) != 0)
      {
        v84[0] = v82;
        v84[1] = v81;
        v84[2] = v77;
        v84[3] = v76;
        v84[4] = v73;
        v84[5] = v70;
        v84[6] = v71;
        v84[7] = v75 & 0xEFFFFFFFFFFFFFFFLL;
        v84[8] = v72;
        v84[9] = v69;
        unint64_t v67 = v52;
        sub_10044CA28(v82, v81, v77, v76, v73, v70, v71, v38, v72, v69);
        sub_10044CA28(v43, v44, v45, v46, v53, v67, v54, v47, v55, v56);
        char v68 = sub_100455D6C((uint64_t)v83, (uint64_t)v84);
        sub_10044B008(v82, v81, v77, v76, v73, v70, v71, v75, v72, v69);
        sub_10044B008(v43, v44, v45, v46, v53, v67, v54, v47, v55, v56);
        uint64_t v39 = a2;
        uint64_t v38 = v75;
        if (v68) {
          goto LABEL_55;
        }
      }
LABEL_39:
      unint64_t v41 = (v41 + 1) & v79;
      if (((*(void *)(v80 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
        goto LABEL_58;
      }
    }
    if ((v38 & 0x1000000000000000) != 0) {
      goto LABEL_39;
    }
    if (v43 != v82 || v44 != v81)
    {
      char v49 = sub_1005E3290();
      uint64_t v39 = a2;
      uint64_t v38 = v75;
      if ((v49 & 1) == 0) {
        goto LABEL_39;
      }
    }
    if (v45 != v77 || v46 != v76)
    {
      char v51 = sub_1005E3290();
      uint64_t v39 = a2;
      uint64_t v38 = v75;
      if ((v51 & 1) == 0) {
        goto LABEL_39;
      }
    }
LABEL_55:
    sub_10044B008(v82, v81, v77, v76, v73, v70, v71, v38, v72, v69);
    a1 = v62;
    unint64_t v6 = v65;
    int64_t v2 = v66;
    if (!v65) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v7 = __clz(__rbit64(v6));
    uint64_t v8 = (v6 - 1) & v6;
  }
LABEL_58:
  sub_10044B008(v82, v81, v77, v76, v73, v70, v71, v38, v72, v69);
  return 0;
}

uint64_t sub_100486A84(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && (uint64_t v2 = *(void *)(a2 + 16),
        Swift::Int v3 = *(void *)(a1 + 16),
        (sub_100013570(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) != 0))
  {
    char v4 = sub_100013570(v3, v2);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

Swift::Bool __swiftcall ConnectionCommandIDSet.contains(_:)(IMAP2Connection::CommandID a1)
{
  return a1.connection.rawValue == v1 && sub_100010AAC(a1.commandCounter.rawValue, v2);
}

Swift::Int ConnectionCommandIDSet.isDisjoint(with:)(int a1, Swift::Int a2, uint64_t a3, int a4, Swift::Int a5)
{
  if (a1 == a4) {
    return sub_100092240(a5, a2);
  }
  else {
    return 1;
  }
}

uint64_t ConnectionCommandIDSet.normalCommandCount.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_100487588(a3);
    uint64_t v5 = (void *)a2;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1004876FC(a3, a2);
  }
  uint64_t v6 = v5[2];
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t ConnectionCommandIDSet.makeIterator()(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = a2 + 56;
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  uint64_t v9 = v6 & *(void *)(a2 + 56);
  uint64_t v10 = ~v7;
  unint64_t v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = v8;
  v11[4] = v10;
  v11[5] = 0;
  v11[6] = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(_DWORD *)(v12 + 24) = a1;
  *(void *)(v12 + 32) = a2;
  *(void *)(v12 + 40) = a3;
  sub_10000566C(&qword_100715F90);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100487B34;
  *(void *)(v13 + 24) = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return v13;
}

uint64_t sub_100486CA0@<X0>(void *a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result = swift_beginAccess();
  int64_t v8 = a1[5];
  unint64_t v7 = a1[6];
  int64_t v9 = v8;
  if (v7)
  {
    uint64_t v10 = (v7 - 1) & v7;
    unint64_t v11 = __clz(__rbit64(v7)) | (v8 << 6);
LABEL_3:
    char v12 = 0;
    uint64_t v13 = *(unsigned int *)(*(void *)(a1[2] + 48) + 4 * v11);
    a1[5] = v9;
    a1[6] = v10;
    unint64_t v14 = a2 | (unint64_t)(v13 << 32);
LABEL_21:
    *(void *)a3 = v14;
    *(unsigned char *)(a3 + 8) = v12;
    return result;
  }
  int64_t v15 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    int64_t v16 = (unint64_t)(a1[4] + 64) >> 6;
    if (v15 < v16)
    {
      uint64_t v17 = a1[3];
      unint64_t v18 = *(void *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        uint64_t v10 = (v18 - 1) & v18;
        unint64_t v11 = __clz(__rbit64(v18)) + (v15 << 6);
        int64_t v9 = v15;
        goto LABEL_3;
      }
      int64_t v9 = v8 + 1;
      if (v8 + 2 < v16)
      {
        unint64_t v18 = *(void *)(v17 + 8 * (v8 + 2));
        if (v18)
        {
          int64_t v15 = v8 + 2;
          goto LABEL_7;
        }
        int64_t v9 = v8 + 2;
        if (v8 + 3 < v16)
        {
          unint64_t v18 = *(void *)(v17 + 8 * (v8 + 3));
          if (v18)
          {
            int64_t v15 = v8 + 3;
            goto LABEL_7;
          }
          int64_t v15 = v8 + 4;
          int64_t v9 = v8 + 3;
          if (v8 + 4 < v16)
          {
            unint64_t v18 = *(void *)(v17 + 8 * v15);
            if (v18) {
              goto LABEL_7;
            }
            int64_t v9 = v16 - 1;
            int64_t v19 = v8 + 5;
            while (v16 != v19)
            {
              unint64_t v18 = *(void *)(v17 + 8 * v19++);
              if (v18)
              {
                int64_t v15 = v19 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
    unint64_t v14 = 0;
    a1[5] = v9;
    a1[6] = 0;
    char v12 = 1;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100486E04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = ConnectionCommandIDSet.makeIterator()(*(_DWORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_100486E58()
{
  return *(void *)(*(void *)(v0 + 8) + 16);
}

uint64_t sub_100486E64()
{
  uint64_t v1 = sub_100486F9C(*(_DWORD *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100486EB4(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_100486EC0(a1, a2, a3, *(_DWORD *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16));
}

uint64_t sub_100486EC0(uint64_t *a1, void *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = ConnectionCommandIDSet.makeIterator()(a4, a5, a6);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = 0;
  if (!a2 || !a3)
  {
LABEL_11:
    *a1 = v9;
    return v11;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1005E3020();
    if (v14)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = v13;
      while (1)
      {
        *a2 = v12;
        if (a3 - 1 == v11) {
          break;
        }
        sub_1005E3020();
        uint64_t v12 = v13;
        ++a2;
        ++v11;
        if (v14) {
          goto LABEL_11;
        }
      }
      uint64_t v11 = a3;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100486F9C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    sub_10000566C(&qword_100715958);
    unint64_t v7 = (void *)swift_allocObject();
    int64_t v8 = j__malloc_size(v7);
    uint64_t v9 = v8 - 32;
    if (v8 < 32) {
      uint64_t v9 = v8 - 25;
    }
    uint64_t v10 = v9 >> 3;
    v7[2] = v6;
    v7[3] = 2 * v10;
    uint64_t v11 = v7 + 4;
    uint64_t v12 = v10 & 0x7FFFFFFFFFFFFFFFLL;
    ConnectionCommandIDSet.makeIterator()(a1, a2, a3);
    uint64_t v13 = v12 - v6;
    while (1)
    {
      uint64_t result = sub_1005E3020();
      if (v31) {
        goto LABEL_36;
      }
      *v11++ = v30;
      if (!--v6) {
        goto LABEL_9;
      }
    }
  }
  unint64_t v7 = _swiftEmptyArrayStorage;
  uint64_t v13 = _swiftEmptyArrayStorage[3] >> 1;
  ConnectionCommandIDSet.makeIterator()(a1, a2, a3);
  uint64_t v11 = &_swiftEmptyArrayStorage[4];
LABEL_9:
  uint64_t result = sub_1005E3020();
  if ((v31 & 1) == 0)
  {
    uint64_t v15 = v30;
    while (1)
    {
      if (!v13)
      {
        unint64_t v16 = v7[3];
        if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_34;
        }
        int64_t v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
        if (v17 <= 1) {
          uint64_t v18 = 1;
        }
        else {
          uint64_t v18 = v17;
        }
        sub_10000566C(&qword_100715958);
        int64_t v19 = (void *)swift_allocObject();
        int64_t v20 = j__malloc_size(v19);
        uint64_t v21 = v20 - 32;
        if (v20 < 32) {
          uint64_t v21 = v20 - 25;
        }
        uint64_t v22 = v21 >> 3;
        v19[2] = v18;
        v19[3] = 2 * (v21 >> 3);
        unint64_t v23 = (unint64_t)(v19 + 4);
        uint64_t v24 = v7[3] >> 1;
        if (v7[2])
        {
          if (v19 != v7 || v23 >= (unint64_t)&v7[v24 + 4]) {
            memmove(v19 + 4, v7 + 4, 8 * v24);
          }
          v7[2] = 0;
        }
        uint64_t v11 = (void *)(v23 + 8 * v24);
        uint64_t v13 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - v24;
        uint64_t result = swift_release();
        unint64_t v7 = v19;
      }
      BOOL v26 = __OFSUB__(v13--, 1);
      if (v26) {
        break;
      }
      *v11++ = v15;
      uint64_t result = sub_1005E3020();
      uint64_t v15 = v30;
      if (v31) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_29:
  uint64_t result = swift_release();
  unint64_t v27 = v7[3];
  if (v27 < 2) {
    return (uint64_t)v7;
  }
  unint64_t v28 = v27 >> 1;
  BOOL v26 = __OFSUB__(v28, v13);
  uint64_t v29 = v28 - v13;
  if (!v26)
  {
    v7[2] = v29;
    return (uint64_t)v7;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1004871B4(void *a1)
{
  uint64_t v3 = sub_1005E1940();
  __chkstk_darwin();
  (*(void (**)(char *, void *, uint64_t))(v5 + 16))((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  sub_1004883A0();
  sub_1005E1F60();
  uint64_t result = sub_10000566C(&qword_100715A20);
  uint64_t v7 = *(void *)((char *)a1 + *(int *)(result + 36));
  uint64_t v8 = v29;
  if (!v7 || (v9 = v30, uint64_t v10 = *(void *)(v29 + 16), v30 == v10))
  {
    uint64_t result = swift_bridgeObjectRelease();
    size_t v1 = 0;
    a1 = _swiftEmptyArrayStorage;
    goto LABEL_27;
  }
  if ((v30 & 0x8000000000000000) == 0)
  {
    if (v30 < *(void *)(v29 + 16))
    {
      size_t v1 = 0;
      a1 = _swiftEmptyArrayStorage;
      uint64_t v11 = v7 - 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      uint64_t v13 = v10 - 1;
      uint64_t v28 = v13;
      while (1)
      {
        char v14 = *(unsigned char *)(v8 + v9 + 32);
        if (!v1)
        {
          unint64_t v15 = a1[3];
          if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_32;
          }
          int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
          if (v16 <= 1) {
            uint64_t v17 = 1;
          }
          else {
            uint64_t v17 = v16;
          }
          sub_10000566C(&qword_100715960);
          uint64_t v18 = (void *)swift_allocObject();
          size_t v19 = 2 * j__malloc_size(v18) - 64;
          v18[2] = v17;
          v18[3] = v19;
          unint64_t v20 = (unint64_t)(v18 + 4);
          size_t v21 = a1[3] >> 1;
          if (a1[2])
          {
            if (v18 != a1 || v20 >= (unint64_t)a1 + v21 + 32) {
              memmove(v18 + 4, a1 + 4, v21);
            }
            a1[2] = 0;
          }
          uint64_t v12 = (unsigned char *)(v20 + v21);
          size_t v1 = (v19 >> 1) - v21;
          uint64_t result = swift_release();
          a1 = v18;
          uint64_t v13 = v28;
        }
        BOOL v23 = __OFSUB__(v1--, 1);
        if (v23) {
          break;
        }
        unsigned char *v12 = v14;
        if (!v11 || v13 == v9) {
          goto LABEL_26;
        }
        ++v9;
        ++v12;
        --v11;
        if (v9 >= *(void *)(v8 + 16)) {
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_27:
    unint64_t v24 = a1[3];
    if (v24 < 2) {
      return (uint64_t)a1;
    }
    unint64_t v25 = v24 >> 1;
    BOOL v23 = __OFSUB__(v25, v1);
    unint64_t v26 = v25 - v1;
    if (!v23)
    {
      a1[2] = v26;
      return (uint64_t)a1;
    }
    goto LABEL_33;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100487428()
{
  swift_retain();
  uint64_t result = sub_1005E3020();
  size_t v1 = _swiftEmptyArrayStorage;
  size_t v2 = 0;
  if ((v18 & 1) == 0)
  {
    char v3 = v17;
    uint64_t v4 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      if (!v2)
      {
        unint64_t v5 = v1[3];
        if ((uint64_t)((v5 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_24;
        }
        int64_t v6 = v5 & 0xFFFFFFFFFFFFFFFELL;
        if (v6 <= 1) {
          uint64_t v7 = 1;
        }
        else {
          uint64_t v7 = v6;
        }
        sub_10000566C(&qword_100715960);
        uint64_t v8 = (void *)swift_allocObject();
        size_t v9 = 2 * j__malloc_size(v8) - 64;
        v8[2] = v7;
        v8[3] = v9;
        unint64_t v10 = (unint64_t)(v8 + 4);
        size_t v11 = v1[3] >> 1;
        if (v1[2])
        {
          if (v8 != v1 || v10 >= (unint64_t)v1 + v11 + 32) {
            memmove(v8 + 4, v1 + 4, v11);
          }
          v1[2] = 0;
        }
        uint64_t v4 = (unsigned char *)(v10 + v11);
        size_t v2 = (v9 >> 1) - v11;
        uint64_t result = swift_release();
        size_t v1 = v8;
      }
      BOOL v13 = __OFSUB__(v2--, 1);
      if (v13) {
        break;
      }
      *v4++ = v3;
      uint64_t result = sub_1005E3020();
      char v3 = v17;
      if (v18) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
LABEL_19:
  uint64_t result = swift_release();
  unint64_t v14 = v1[3];
  if (v14 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v15 = v14 >> 1;
  BOOL v13 = __OFSUB__(v15, v2);
  unint64_t v16 = v15 - v2;
  if (!v13)
  {
    v1[2] = v16;
    return (uint64_t)v1;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100487588(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_100487CA4(*(_DWORD *)(*(void *)(v2 + 48) + 4 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

void *sub_1004876FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v6 = a1 + 56;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v32 = ~v7;
    if (-v7 < 64) {
      uint64_t v8 = ~(-1 << -(char)v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v5;
    int64_t v10 = (unint64_t)(63 - v7) >> 6;
    uint64_t v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          unint64_t v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          unint64_t v13 = v12 | (v4 << 6);
        }
        else
        {
          int64_t v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10) {
            goto LABEL_35;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v14);
          int64_t v16 = v4 + 1;
          if (!v15)
          {
            int64_t v16 = v4 + 2;
            if (v4 + 2 >= v10) {
              goto LABEL_35;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v4 + 3;
              if (v4 + 3 >= v10) {
                goto LABEL_35;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                int64_t v16 = v4 + 4;
                if (v4 + 4 >= v10) {
                  goto LABEL_35;
                }
                unint64_t v15 = *(void *)(v6 + 8 * v16);
                if (!v15)
                {
                  int64_t v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    swift_bridgeObjectRetain();
                    sub_10003BC80();
                    return (void *)v2;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      int64_t v16 = v17 + 1;
                      if (__OFADD__(v17, 1)) {
                        break;
                      }
                      if (v16 >= v10) {
                        goto LABEL_35;
                      }
                      unint64_t v15 = *(void *)(v6 + 8 * v16);
                      ++v17;
                      if (v15) {
                        goto LABEL_23;
                      }
                    }
LABEL_37:
                    __break(1u);
                  }
                  int64_t v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          unint64_t v9 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
          int64_t v4 = v16;
        }
        Swift::UInt32 v18 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v13);
        sub_1005E33F0();
        sub_1005E3440(v18);
        Swift::Int v19 = sub_1005E3470();
        uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v21 = v19 & ~v20;
      }
      while (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      uint64_t v22 = *(void *)(v2 + 48);
      if (*(_DWORD *)(v22 + 4 * v21) == v18) {
        break;
      }
      while (1)
      {
        unint64_t v21 = (v21 + 1) & ~v20;
        if (((*(void *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v22 + 4 * v21) == v18) {
          goto LABEL_28;
        }
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    void v33[2] = v32;
    v33[3] = v4;
    v33[4] = v9;
    unint64_t v23 = (unint64_t)(63 - v20) >> 6;
    size_t v24 = 8 * v23;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      uint64_t v27 = (char *)&v31 - v26;
      memcpy((char *)&v31 - v26, (const void *)(v2 + 56), v24);
      Swift::Int v28 = sub_100487DD4((Swift::Int)v27, v23, v2, v21, v33);
      swift_release();
      sub_10003BC80();
    }
    else
    {
      uint64_t v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      Swift::Int v28 = sub_100487DD4((Swift::Int)v29, v23, v2, v21, v33);
      swift_release();
      sub_10003BC80();
      swift_slowDealloc();
    }
    return (void *)v28;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_100487AAC()
{
  sub_10003BC80();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100487AEC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100487B34@<X0>(uint64_t a1@<X8>)
{
  return sub_100486CA0(*(void **)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

unint64_t sub_100487B48()
{
  unint64_t result = qword_100715F98;
  if (!qword_100715F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715F98);
  }
  return result;
}

unint64_t sub_100487BA0()
{
  unint64_t result = qword_100715FA0;
  if (!qword_100715FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715FA0);
  }
  return result;
}

unint64_t sub_100487BF8()
{
  unint64_t result = qword_100715FA8;
  if (!qword_100715FA8)
  {
    sub_10000744C(&qword_100715FB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715FA8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CommandID(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for CommandID()
{
  return &type metadata for CommandID;
}

ValueMetadata *type metadata accessor for CommandCounter()
{
  return &type metadata for CommandCounter;
}

__n128 initializeWithTake for ConnectionCommandIDSet(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionCommandIDSet()
{
  return &type metadata for ConnectionCommandIDSet;
}

unint64_t sub_100487CA4(Swift::UInt32 a1)
{
  uint64_t v3 = *v1;
  sub_1005E33F0();
  sub_1005E3440(a1);
  Swift::Int v4 = sub_1005E3470();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_9:
    uint64_t v11 = 0;
    unsigned __int8 v12 = 1;
    return v11 | ((unint64_t)v12 << 32);
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(_DWORD *)(v7 + 4 * v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_9;
      }
    }
    while (*(_DWORD *)(v7 + 4 * v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v14 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1004DB5F4();
    uint64_t v10 = v14;
  }
  uint64_t v11 = *(unsigned int *)(*(void *)(v10 + 48) + 4 * v6);
  sub_100094B80(v6);
  *uint64_t v1 = v14;
  swift_bridgeObjectRelease();
  unsigned __int8 v12 = 0;
  return v11 | ((unint64_t)v12 << 32);
}

Swift::Int sub_100487DD4(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = (unint64_t *)result;
  uint64_t v8 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    int64_t v15 = a5[3];
    unint64_t v16 = a5[4];
    if (!v16) {
      break;
    }
    uint64_t v17 = (v16 - 1) & v16;
    unint64_t v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_22:
    Swift::UInt32 v25 = *(_DWORD *)(*(void *)(*a5 + 48) + 4 * v18);
    a5[3] = v15;
    a5[4] = v17;
    sub_1005E33F0();
    sub_1005E3440(v25);
    __n128 result = sub_1005E3470();
    uint64_t v26 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v27 = result & ~v26;
    uint64_t v11 = v27 >> 6;
    uint64_t v12 = 1 << v27;
    if (((1 << v27) & *(void *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      uint64_t v28 = *(void *)(a3 + 48);
      if (*(_DWORD *)(v28 + 4 * v27) == v25)
      {
LABEL_3:
        uint64_t v13 = v11;
        unint64_t v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1)) {
            goto LABEL_34;
          }
          if (!v9) {
            return (Swift::Int)&_swiftEmptySetSingleton;
          }
        }
      }
      else
      {
        for (unint64_t i = v27 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & ~v26;
          if (((*(void *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
            break;
          }
          if (*(_DWORD *)(v28 + 4 * v30) == v25)
          {
            uint64_t v11 = v30 >> 6;
            uint64_t v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  int64_t v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    int64_t v20 = (unint64_t)(a5[2] + 64) >> 6;
    int64_t v21 = a5[3];
    if (v19 >= v20) {
      goto LABEL_31;
    }
    uint64_t v22 = a5[1];
    unint64_t v23 = *(void *)(v22 + 8 * v19);
    if (!v23)
    {
      int64_t v21 = v15 + 1;
      if (v15 + 2 >= v20) {
        goto LABEL_31;
      }
      unint64_t v23 = *(void *)(v22 + 8 * (v15 + 2));
      if (v23)
      {
        int64_t v19 = v15 + 2;
      }
      else
      {
        int64_t v21 = v15 + 2;
        if (v15 + 3 >= v20) {
          goto LABEL_31;
        }
        unint64_t v23 = *(void *)(v22 + 8 * (v15 + 3));
        if (v23)
        {
          int64_t v19 = v15 + 3;
        }
        else
        {
          int64_t v19 = v15 + 4;
          int64_t v21 = v15 + 3;
          if (v15 + 4 >= v20) {
            goto LABEL_31;
          }
          unint64_t v23 = *(void *)(v22 + 8 * v19);
          if (!v23)
          {
            int64_t v21 = v20 - 1;
            int64_t v24 = v15 + 5;
            while (v20 != v24)
            {
              unint64_t v23 = *(void *)(v22 + 8 * v24++);
              if (v23)
              {
                int64_t v19 = v24 - 1;
                goto LABEL_21;
              }
            }
LABEL_31:
            a5[3] = v21;
            a5[4] = 0;
            swift_retain();
            return sub_100488034(v7, a2, v9, a3);
          }
        }
      }
    }
LABEL_21:
    uint64_t v17 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v19 << 6);
    int64_t v15 = v19;
    goto LABEL_22;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100488034(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000566C(&qword_100715FB8);
  uint64_t result = sub_1005E2C30();
  uint64_t v9 = (unsigned char *)result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v4 + 48) + 4 * v14);
    sub_1005E33F0();
    sub_1005E3440(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << v9[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_DWORD *)(*((void *)v9 + 6) + 4 * v22) = v18;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1004882A0(uint64_t a1, uint64_t a2)
{
  unint64_t v10 = &_swiftEmptySetSingleton;
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 32;
    uint64_t v5 = (unsigned int *)(a2 + 36);
    uint64_t v6 = *(void *)(a2 + 16);
    do
    {
      if (*(v5 - 1) == a1) {
        sub_1004D8804(&v9, *v5);
      }
      v5 += 10;
      --v6;
    }
    while (v6);
    unint64_t v10 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    do
    {
      if (*(_DWORD *)v4 == a1 && *(unsigned char *)(v4 + 24) != 0) {
        sub_1004D8804(&v9, *(unsigned int *)(v4 + 4));
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t sub_1004883A0()
{
  unint64_t result = qword_100715FC0;
  if (!qword_100715FC0)
  {
    sub_1005E1940();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715FC0);
  }
  return result;
}

uint64_t _s19CommandOutputBufferVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19CommandOutputBufferVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

__n128 _s19CommandOutputBufferVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s19CommandOutputBufferVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t _s19CommandOutputBufferVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19CommandOutputBufferVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s19CommandOutputBufferVMa()
{
  return &_s19CommandOutputBufferVN;
}

uint64_t sub_1004885A8()
{
  _s19CommandOutputBufferV8IdleDoneVMa(0);
  __chkstk_darwin();
  uint64_t v26 = (uint64_t)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV9HandshakeVMa(0);
  __chkstk_darwin();
  uint64_t v25 = (uint64_t)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV12ContinuationVMa(0);
  __chkstk_darwin();
  uint64_t v24 = (uint64_t)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV7CommandVMa(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV7ElementOMa(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = *(void *)v0;
  uint64_t v12 = *(void *)(*(void *)v0 + 16);
  if (!v12) {
    return 0;
  }
  uint64_t v23 = v0;
  uint64_t v13 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v14 = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  do
  {
    sub_10048A6B8(v13, (uint64_t)v10, _s19CommandOutputBufferV7ElementOMa);
    sub_10048A6B8((uint64_t)v10, (uint64_t)v7, _s19CommandOutputBufferV7ElementOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = v24;
        sub_10048A650((uint64_t)v7, v24, _s19CommandOutputBufferV12ContinuationVMa);
        uint64_t v16 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        unint64_t v20 = _s19CommandOutputBufferV12ContinuationVMa;
        goto LABEL_8;
      case 2u:
        uint64_t v19 = v26;
        sub_10048A650((uint64_t)v7, v26, _s19CommandOutputBufferV8IdleDoneVMa);
        uint64_t v16 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        unint64_t v20 = _s19CommandOutputBufferV8IdleDoneVMa;
        goto LABEL_8;
      case 3u:
        uint64_t v19 = v25;
        sub_10048A650((uint64_t)v7, v25, _s19CommandOutputBufferV9HandshakeVMa);
        uint64_t v16 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        unint64_t v20 = _s19CommandOutputBufferV9HandshakeVMa;
LABEL_8:
        uint64_t v17 = v20;
        uint64_t v18 = v19;
        break;
      default:
        sub_10048A650((uint64_t)v7, (uint64_t)v5, _s19CommandOutputBufferV7CommandVMa);
        uint64_t v16 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        uint64_t v17 = _s19CommandOutputBufferV7CommandVMa;
        uint64_t v18 = (uint64_t)v5;
        break;
    }
    sub_10048A5F0(v18, v17);
    BOOL v21 = __OFADD__(v15, v16);
    v15 += v16;
    if (v21)
    {
      __break(1u);
      JUMPOUT(0x100488994);
    }
    sub_10048A5F0((uint64_t)v10, _s19CommandOutputBufferV7ElementOMa);
    v13 += v14;
    --v12;
  }
  while (v12);
  sub_10001D550(v23);
  return v15;
}

uint64_t sub_1004889A4(unint64_t *a1, uint64_t a2)
{
  uint64_t v66 = _s19CommandOutputBufferV12ContinuationVMa(0);
  __chkstk_darwin();
  char v68 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10000566C(&qword_100715FD0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int64_t v64 = (char *)&v52 - v7;
  __chkstk_darwin();
  uint64_t v63 = (char **)((char *)&v52 - v8);
  uint64_t v9 = _s19CommandOutputBufferV7ElementOMa(0);
  uint64_t v57 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v52 - v12;
  uint64_t v14 = _s19CommandOutputBufferV7CommandVMa(0) - 8;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a2 + *(int *)(type metadata accessor for ConnectionCommand(0) + 20);
  uint64_t v18 = sub_1005E17E0();
  uint64_t v54 = *(void *)(v18 - 8);
  uint64_t v19 = *(void (**)(char *))(v54 + 16);
  uint64_t v60 = v54 + 16;
  uint64_t v61 = v18;
  unint64_t v59 = v19;
  ((void (*)(char *, uint64_t))v19)(v16, v17);
  char v20 = *(unsigned char *)a2;
  uint64_t v67 = a2;
  int v21 = *(_DWORD *)(a2 + 4);
  unint64_t v22 = &v16[*(int *)(v14 + 28)];
  char *v22 = v20;
  *((_DWORD *)v22 + 1) = v21;
  uint64_t v23 = *(int *)(v14 + 32);
  uint64_t v24 = (uint64_t)v13;
  v16[v23] = 0;
  unint64_t v52 = v16;
  sub_10048A6B8((uint64_t)v16, (uint64_t)v13, _s19CommandOutputBufferV7CommandVMa);
  uint64_t v62 = v9;
  swift_storeEnumTagMultiPayload();
  unint64_t v25 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v25 = sub_1004D13C0(0, *(void *)(v25 + 16) + 1, 1, v25);
  }
  unint64_t v27 = *(void *)(v25 + 16);
  unint64_t v26 = *(void *)(v25 + 24);
  if (v27 >= v26 >> 1) {
    unint64_t v25 = sub_1004D13C0(v26 > 1, v27 + 1, 1, v25);
  }
  *(void *)(v25 + 16) = v27 + 1;
  unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v57 = *(void *)(v57 + 72);
  sub_10048A650(v24, v25 + v58 + v57 * v27, _s19CommandOutputBufferV7ElementOMa);
  *a1 = v25;
  uint64_t v28 = *(void *)(v17 + *(int *)(type metadata accessor for ClientCommand.Encoded() + 20));
  uint64_t v29 = *(void *)(v28 + 16);
  uint64_t v53 = v28;
  swift_bridgeObjectRetain();
  uint64_t v30 = (uint64_t)v68;
  uint64_t v56 = v29;
  if (v29)
  {
    uint64_t v31 = 0;
    uint64_t v32 = (char *)(v53 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80)));
    uint64_t v33 = *(void *)(v54 + 72);
    v54 += 32;
    uint64_t v55 = v33;
    unint64_t v69 = a1;
    unint64_t v34 = v59;
    do
    {
      uint64_t v35 = v65;
      uint64_t v36 = &v64[*(int *)(v65 + 48)];
      char v68 = v32;
      uint64_t v37 = v61;
      v34(v36);
      uint64_t v38 = v6;
      uint64_t v39 = v11;
      uint64_t v40 = v63;
      unint64_t v41 = (char *)v63 + *(int *)(v35 + 48);
      *uint64_t v63 = v31;
      (*(void (**)(char *, char *, uint64_t))v54)(v41, v36, v37);
      uint64_t v42 = (uint64_t)v40;
      uint64_t v11 = v39;
      uint64_t v6 = v38;
      sub_10048A720(v42, (uint64_t)v38);
      uint64_t v43 = *(void *)v38;
      ((void (*)(uint64_t, char *, uint64_t))v34)(v30, &v38[*(int *)(v35 + 48)], v37);
      uint64_t v44 = v66;
      int v45 = *(_DWORD *)(v67 + 4);
      uint64_t v46 = v30 + *(int *)(v66 + 20);
      *(unsigned char *)uint64_t v46 = *(unsigned char *)v67;
      *(_DWORD *)(v46 + 4) = v45;
      *(void *)(v30 + *(int *)(v44 + 24)) = v43;
      sub_10048A6B8(v30, (uint64_t)v11, _s19CommandOutputBufferV12ContinuationVMa);
      swift_storeEnumTagMultiPayload();
      unint64_t v47 = *v69;
      uint64_t v48 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v47 = sub_1004D13C0(0, *(void *)(v47 + 16) + 1, 1, v47);
      }
      unint64_t v50 = *(void *)(v47 + 16);
      unint64_t v49 = *(void *)(v47 + 24);
      if (v50 >= v49 >> 1) {
        unint64_t v47 = sub_1004D13C0(v49 > 1, v50 + 1, 1, v47);
      }
      ++v31;
      *(void *)(v47 + 16) = v50 + 1;
      sub_10048A650((uint64_t)v11, v47 + v58 + v50 * v57, _s19CommandOutputBufferV7ElementOMa);
      *unint64_t v69 = v47;
      sub_10048A5F0(v48, _s19CommandOutputBufferV12ContinuationVMa);
      sub_10048A788((uint64_t)v38);
      uint64_t v32 = &v68[v55];
      uint64_t v30 = v48;
    }
    while (v56 != v31);
  }
  swift_bridgeObjectRelease();
  return sub_10048A5F0((uint64_t)v52, _s19CommandOutputBufferV7CommandVMa);
}

BOOL sub_100488F74(void (*a1)(uint64_t))
{
  _s19CommandOutputBufferV7ElementOMa(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(*(void *)v1 + 16);
  if (v6 != 1) {
    goto LABEL_5;
  }
  sub_10048A6B8(*(void *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), _s19CommandOutputBufferV7ElementOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_10048A5F0((uint64_t)v5, _s19CommandOutputBufferV7ElementOMa);
  if (EnumCaseMultiPayload != 2)
  {
    uint64_t v6 = *(void *)(*(void *)v1 + 16);
LABEL_5:
    BOOL v8 = v6 != 0;
    goto LABEL_6;
  }
  BOOL v8 = 0;
LABEL_6:
  a1(v1);
  return v8;
}

uint64_t sub_1004890C0(unint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v4 = _s19CommandOutputBufferV7ElementOMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = _s19CommandOutputBufferV7CommandVMa(0) - 8;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &a2[*(int *)(type metadata accessor for ConnectionCommand(0) + 20)];
  uint64_t v14 = sub_1005E17E0();
  uint64_t v32 = *(void *)(v14 - 8);
  uint64_t v33 = (unint64_t *)v13;
  uint64_t v37 = *(void (**)(char *, unsigned __int8 *))(v32 + 16);
  uint64_t v38 = v14;
  v37(v12, v13);
  int v15 = *a2;
  uint64_t v17 = &v12[*(int *)(v10 + 28)];
  int v35 = *((_DWORD *)a2 + 1);
  int v16 = v35;
  int v36 = v15;
  *uint64_t v17 = v15;
  *((_DWORD *)v17 + 1) = v16;
  v12[*(int *)(v10 + 32)] = 1;
  unint64_t v34 = v12;
  sub_10048A6B8((uint64_t)v12, (uint64_t)v9, _s19CommandOutputBufferV7CommandVMa);
  uint64_t v39 = v4;
  swift_storeEnumTagMultiPayload();
  unint64_t v18 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v18 = sub_1004D13C0(0, *(void *)(v18 + 16) + 1, 1, v18);
  }
  unint64_t v20 = *(void *)(v18 + 16);
  unint64_t v19 = *(void *)(v18 + 24);
  if (v20 >= v19 >> 1) {
    unint64_t v18 = sub_1004D13C0(v19 > 1, v20 + 1, 1, v18);
  }
  *(void *)(v18 + 16) = v20 + 1;
  unint64_t v21 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v22 = *(void *)(v5 + 72);
  sub_10048A650((uint64_t)v9, v18 + v21 + v22 * v20, _s19CommandOutputBufferV7ElementOMa);
  *a1 = v18;
  uint64_t v23 = *(unint64_t *)((char *)v33 + *(int *)(type metadata accessor for ClientCommand.Encoded() + 20));
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = v23 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    uint64_t v26 = *(void *)(v32 + 72);
    uint64_t v32 = v23;
    uint64_t v33 = a1;
    swift_bridgeObjectRetain();
    do
    {
      ((void (*)(char *, uint64_t, uint64_t))v37)(v7, v25, v38);
      unint64_t v27 = &v7[*(int *)(_s19CommandOutputBufferV8IdleDoneVMa(0) + 20)];
      *unint64_t v27 = v36;
      *((_DWORD *)v27 + 1) = v35;
      swift_storeEnumTagMultiPayload();
      unint64_t v29 = *(void *)(v18 + 16);
      unint64_t v28 = *(void *)(v18 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v18 = sub_1004D13C0(v28 > 1, v29 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v29 + 1;
      sub_10048A650((uint64_t)v7, v18 + v21 + v29 * v22, _s19CommandOutputBufferV7ElementOMa);
      v25 += v26;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    *uint64_t v33 = v18;
  }
  return sub_10048A5F0((uint64_t)v34, _s19CommandOutputBufferV7CommandVMa);
}

uint64_t sub_100489468(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(_s19CommandOutputBufferV7ElementOMa(0) - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s19CommandOutputBufferV9HandshakeVMa(0) - 8;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E17E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a2, v10);
  uint64_t v11 = a2 + *(int *)(type metadata accessor for HandshakeReply.Encoded() + 20);
  char v12 = *(unsigned char *)v11;
  LODWORD(v11) = *(_DWORD *)(v11 + 4);
  uint64_t v13 = &v9[*(int *)(v7 + 28)];
  *uint64_t v13 = v12;
  *((_DWORD *)v13 + 1) = v11;
  sub_10048A6B8((uint64_t)v9, (uint64_t)v6, _s19CommandOutputBufferV9HandshakeVMa);
  swift_storeEnumTagMultiPayload();
  unint64_t v14 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v14 = sub_1004D13C0(0, *(void *)(v14 + 16) + 1, 1, v14);
  }
  unint64_t v16 = *(void *)(v14 + 16);
  unint64_t v15 = *(void *)(v14 + 24);
  if (v16 >= v15 >> 1) {
    unint64_t v14 = sub_1004D13C0(v15 > 1, v16 + 1, 1, v14);
  }
  *(void *)(v14 + 16) = v16 + 1;
  sub_10048A650((uint64_t)v6, v14+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v16, _s19CommandOutputBufferV7ElementOMa);
  *a1 = v14;
  return sub_10048A5F0((uint64_t)v9, _s19CommandOutputBufferV9HandshakeVMa);
}

uint64_t sub_1004896B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_1005E17E0();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin();
  uint64_t v42 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = _s19CommandOutputBufferV7CommandVMa(0);
  __chkstk_darwin();
  uint64_t v41 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV7ElementOMa(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v39 - v9;
  __chkstk_darwin();
  char v12 = (char *)&v39 - v11;
  __chkstk_darwin();
  unint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = *v1;
  if (*(void *)(*v1 + 16))
  {
    uint64_t v39 = a1;
    uint64_t v45 = v2;
    sub_10048A6B8(v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)&v39 - v14, _s19CommandOutputBufferV7ElementOMa);
    sub_10048A6B8((uint64_t)v15, (uint64_t)v12, _s19CommandOutputBufferV7ElementOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        goto LABEL_10;
      case 2u:
        if (*(void *)(v16 + 16) < 2uLL) {
          goto LABEL_20;
        }
LABEL_10:
        if (v1[2]) {
          goto LABEL_11;
        }
        unint64_t v21 = v1 + 1;
        uint64_t v22 = v1[1];
        if (v22 > 0)
        {
LABEL_16:
          uint64_t v17 = v39;
          void *v21 = v22 - 1;
          goto LABEL_17;
        }
LABEL_20:
        sub_10048A5F0((uint64_t)v15, _s19CommandOutputBufferV7ElementOMa);
        uint64_t v25 = _s19CommandOutputBufferV8SendDataVMa(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v39, 1, 1, v25);
        goto LABEL_21;
      case 3u:
        if (v1[1]) {
          goto LABEL_13;
        }
        unint64_t v21 = v1 + 2;
        uint64_t v22 = v1[2];
        if (v22 <= 0) {
          goto LABEL_20;
        }
        goto LABEL_16;
      default:
        if (v1[1])
        {
LABEL_13:
          sub_10048A85C();
        }
        else
        {
          if (!v1[2])
          {
            uint64_t v17 = v39;
            if ((*((unsigned char *)v1 + 33) & 1) == 0 && (v1[4] & 1) == 0)
            {
              sub_10048A5F0((uint64_t)v15, _s19CommandOutputBufferV7ElementOMa);
              uint64_t v18 = _s19CommandOutputBufferV8SendDataVMa(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
              return sub_10048A5F0((uint64_t)v12, _s19CommandOutputBufferV7ElementOMa);
            }
LABEL_17:
            sub_10048A5F0((uint64_t)v12, _s19CommandOutputBufferV7ElementOMa);
            sub_1004CF308(0, (uint64_t)v10);
            sub_10048A5F0((uint64_t)v10, _s19CommandOutputBufferV7ElementOMa);
            sub_10048A6B8((uint64_t)v15, (uint64_t)v8, _s19CommandOutputBufferV7ElementOMa);
            if (swift_getEnumCaseMultiPayload())
            {
              uint64_t v23 = _s19CommandOutputBufferV7ElementOMa;
              uint64_t v24 = (uint64_t)v8;
            }
            else
            {
              uint64_t v26 = v41;
              sub_10048A650((uint64_t)v8, v41, _s19CommandOutputBufferV7CommandVMa);
              if (*(unsigned char *)(v26 + *(int *)(v40 + 24)))
              {
                unint64_t v27 = (unsigned __int8 *)(v26 + *(int *)(v40 + 20));
                uint64_t v28 = *v27;
                uint64_t v29 = *((unsigned int *)v27 + 1);
                sub_10048A5F0(v26, _s19CommandOutputBufferV7CommandVMa);
                if ((*((unsigned char *)v1 + 33) & 1) == 0)
                {
                  v1[3] = v28 | (v29 << 32);
                  *((_WORD *)v1 + 16) = 0;
                }
                goto LABEL_27;
              }
              uint64_t v23 = _s19CommandOutputBufferV7CommandVMa;
              uint64_t v24 = v26;
            }
            sub_10048A5F0(v24, v23);
LABEL_27:
            uint64_t v30 = v42;
            sub_100489D30(v42);
            uint64_t v31 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
            uint64_t v33 = v43;
            uint64_t v32 = v44;
            (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v30, v44);
            BOOL v34 = v31 > 5000;
            sub_100489D30(v30);
            unint64_t v35 = sub_10048A084();
            LOBYTE(v31) = v35;
            unint64_t v36 = HIDWORD(v35);
            sub_10048A5F0((uint64_t)v15, _s19CommandOutputBufferV7ElementOMa);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v17, v30, v32);
            uint64_t v37 = _s19CommandOutputBufferV8SendDataVMa(0);
            uint64_t v38 = v17 + *(int *)(v37 + 20);
            *(unsigned char *)uint64_t v38 = v31;
            *(_DWORD *)(v38 + 4) = v36;
            *(unsigned char *)(v17 + *(int *)(v37 + 24)) = v34;
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v17, 0, 1, v37);
          }
LABEL_11:
          sub_10048A808();
        }
        swift_allocError();
        swift_willThrow();
        sub_10048A5F0((uint64_t)v15, _s19CommandOutputBufferV7ElementOMa);
LABEL_21:
        uint64_t result = sub_10048A5F0((uint64_t)v12, _s19CommandOutputBufferV7ElementOMa);
        break;
    }
  }
  else
  {
    uint64_t v20 = _s19CommandOutputBufferV8SendDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
  }
  return result;
}

uint64_t sub_100489D30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  _s19CommandOutputBufferV8IdleDoneVMa(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV9HandshakeVMa(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV12ContinuationVMa(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV7CommandVMa(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV7ElementOMa(0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10048A6B8(v2, (uint64_t)v13, _s19CommandOutputBufferV7ElementOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10048A650((uint64_t)v13, (uint64_t)v9, _s19CommandOutputBufferV12ContinuationVMa);
      uint64_t v18 = sub_1005E17E0();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, v9, v18);
      break;
    case 2u:
      sub_10048A650((uint64_t)v13, (uint64_t)v5, _s19CommandOutputBufferV8IdleDoneVMa);
      uint64_t v16 = sub_1005E17E0();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, v5, v16);
      break;
    case 3u:
      sub_10048A650((uint64_t)v13, (uint64_t)v7, _s19CommandOutputBufferV9HandshakeVMa);
      uint64_t v17 = sub_1005E17E0();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, v7, v17);
      break;
    default:
      sub_10048A650((uint64_t)v13, (uint64_t)v11, _s19CommandOutputBufferV7CommandVMa);
      uint64_t v14 = sub_1005E17E0();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, v11, v14);
      break;
  }
  return result;
}

unint64_t sub_10048A084()
{
  uint64_t v1 = v0;
  uint64_t done = _s19CommandOutputBufferV8IdleDoneVMa(0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s19CommandOutputBufferV9HandshakeVMa(0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s19CommandOutputBufferV12ContinuationVMa(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s19CommandOutputBufferV7CommandVMa(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s19CommandOutputBufferV7ElementOMa(0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10048A6B8(v1, (uint64_t)v14, _s19CommandOutputBufferV7ElementOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10048A650((uint64_t)v14, (uint64_t)v9, _s19CommandOutputBufferV12ContinuationVMa);
      uint64_t v22 = &v9[*(int *)(v7 + 20)];
      unsigned int v16 = *v22;
      uint64_t v17 = *((unsigned int *)v22 + 1);
      uint64_t v18 = _s19CommandOutputBufferV12ContinuationVMa;
      uint64_t v19 = (uint64_t)v9;
      break;
    case 2u:
      sub_10048A650((uint64_t)v14, (uint64_t)v3, _s19CommandOutputBufferV8IdleDoneVMa);
      uint64_t v20 = &v3[*(int *)(done + 20)];
      unsigned int v16 = *v20;
      uint64_t v17 = *((unsigned int *)v20 + 1);
      uint64_t v18 = _s19CommandOutputBufferV8IdleDoneVMa;
      uint64_t v19 = (uint64_t)v3;
      break;
    case 3u:
      sub_10048A650((uint64_t)v14, (uint64_t)v6, _s19CommandOutputBufferV9HandshakeVMa);
      unint64_t v21 = &v6[*(int *)(v4 + 20)];
      unsigned int v16 = *v21;
      uint64_t v17 = *((unsigned int *)v21 + 1);
      uint64_t v18 = _s19CommandOutputBufferV9HandshakeVMa;
      uint64_t v19 = (uint64_t)v6;
      break;
    default:
      sub_10048A650((uint64_t)v14, (uint64_t)v12, _s19CommandOutputBufferV7CommandVMa);
      unint64_t v15 = &v12[*(int *)(v10 + 20)];
      unsigned int v16 = *v15;
      uint64_t v17 = *((unsigned int *)v15 + 1);
      uint64_t v18 = _s19CommandOutputBufferV7CommandVMa;
      uint64_t v19 = (uint64_t)v12;
      break;
  }
  sub_10048A5F0(v19, v18);
  return v16 | (unint64_t)(v17 << 32);
}

uint64_t sub_10048A3E4()
{
  uint64_t v0 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v0 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0()) {
    return 0;
  }
  sub_1005E17E0();
  sub_10048A4F8();
  sub_1005E2390();
  sub_1005E23E0();
  if (v3 == v2) {
    return 1;
  }
  __chkstk_darwin();
  sub_1005E1760();
  return v3;
}

unint64_t sub_10048A4F8()
{
  unint64_t result = qword_100715FC8;
  if (!qword_100715FC8)
  {
    sub_1005E17E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715FC8);
  }
  return result;
}

uint64_t _s19CommandOutputBufferV8IdleDoneVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716200);
}

uint64_t _s19CommandOutputBufferV9HandshakeVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716170);
}

uint64_t _s19CommandOutputBufferV12ContinuationVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_1007160D8);
}

uint64_t _s19CommandOutputBufferV7CommandVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716040);
}

uint64_t _s19CommandOutputBufferV7ElementOMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716340);
}

uint64_t sub_10048A5F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10048A650(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10048A6B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10048A720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10048A788(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100715FD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s19CommandOutputBufferV8SendDataVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716290);
}

unint64_t sub_10048A808()
{
  unint64_t result = qword_100715FD8;
  if (!qword_100715FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715FD8);
  }
  return result;
}

unint64_t sub_10048A85C()
{
  unint64_t result = qword_100715FE0;
  if (!qword_100715FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715FE0);
  }
  return result;
}

ValueMetadata *_s19CommandOutputBufferV25ServerExpectsContinuationVMa()
{
  return &_s19CommandOutputBufferV25ServerExpectsContinuationVN;
}

ValueMetadata *_s19CommandOutputBufferV33ServerDoesNotExpectHandshakeReplyVMa()
{
  return &_s19CommandOutputBufferV33ServerDoesNotExpectHandshakeReplyVN;
}

ValueMetadata *_s19CommandOutputBufferV40CanNotAppendHandshakeUnlessBufferIsEmptyVMa()
{
  return &_s19CommandOutputBufferV40CanNotAppendHandshakeUnlessBufferIsEmptyVN;
}

ValueMetadata *_s19CommandOutputBufferV27ServerExpectsHandshakeReplyVMa()
{
  return &_s19CommandOutputBufferV27ServerExpectsHandshakeReplyVN;
}

uint64_t sub_10048A908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048A91C);
}

uint64_t sub_10048A920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048A934);
}

uint64_t sub_10048A938()
{
  return sub_10048B584();
}

uint64_t *sub_10048A944(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_10048AA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10048AA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10048AB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10048ABB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_10048AC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048AC60);
}

uint64_t sub_10048AC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048AC78);
}

uint64_t sub_10048AC7C()
{
  return sub_10048B584();
}

uint64_t sub_10048ACA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048ACB4);
}

uint64_t sub_10048ACB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048ACCC);
}

uint64_t *initializeBufferWithCopyOfBuffer for HandshakeReply.Encoded(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for HandshakeReply.Encoded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for HandshakeReply.Encoded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  return a1;
}

uint64_t assignWithTake for HandshakeReply.Encoded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  return a1;
}

uint64_t sub_10048AF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048AF48);
}

uint64_t sub_10048AF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_10048AFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048AFCC);
}

uint64_t sub_10048AFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_10048B040()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10048B0D4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_10048B1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_10048B22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10048B2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_10048B348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_10048B3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048B3F0);
}

uint64_t sub_10048B3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10048B4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048B4C4);
}

uint64_t sub_10048B4C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E17E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_10048B584()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s19CommandOutputBufferV8BehaviorOwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_10048B634(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 9) = 1;
  }
  else
  {
    *(unsigned char *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *_s19CommandOutputBufferV8BehaviorOMa()
{
  return &_s19CommandOutputBufferV8BehaviorON;
}

void *sub_10048B668(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = sub_1005E17E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = _s19CommandOutputBufferV12ContinuationVMa(0);
        *(void *)((char *)a1 + *(int *)(v14 + 20)) = *(void *)((char *)a2 + *(int *)(v14 + 20));
        *(void *)((char *)a1 + *(int *)(v14 + 24)) = *(void *)((char *)a2 + *(int *)(v14 + 24));
        break;
      case 2u:
        uint64_t v9 = sub_1005E17E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t done = _s19CommandOutputBufferV8IdleDoneVMa(0);
        *(void *)((char *)a1 + *(int *)(done + 20)) = *(void *)((char *)a2 + *(int *)(done + 20));
        break;
      case 3u:
        uint64_t v11 = sub_1005E17E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = _s19CommandOutputBufferV9HandshakeVMa(0);
        *(void *)((char *)a1 + *(int *)(v12 + 20)) = *(void *)((char *)a2 + *(int *)(v12 + 20));
        break;
      default:
        uint64_t v6 = sub_1005E17E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = _s19CommandOutputBufferV7CommandVMa(0);
        *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
        *((unsigned char *)a1 + *(int *)(v7 + 24)) = *((unsigned char *)a2 + *(int *)(v7 + 24));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10048B8C4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 3)
  {
    uint64_t v3 = sub_1005E17E0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_10048B940(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = _s19CommandOutputBufferV12ContinuationVMa(0);
      *(void *)(a1 + *(int *)(v11 + 20)) = *(void *)(a2 + *(int *)(v11 + 20));
      uint64_t v9 = *(int *)(v11 + 24);
      goto LABEL_7;
    case 2u:
      uint64_t v6 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t done = _s19CommandOutputBufferV8IdleDoneVMa(0);
      goto LABEL_5;
    case 3u:
      uint64_t v8 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t done = _s19CommandOutputBufferV9HandshakeVMa(0);
LABEL_5:
      uint64_t v9 = *(int *)(done + 20);
LABEL_7:
      *(void *)(a1 + v9) = *(void *)(a2 + v9);
      break;
    default:
      uint64_t v4 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = _s19CommandOutputBufferV7CommandVMa(0);
      *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10048BB18(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10048A5F0(a1, _s19CommandOutputBufferV7ElementOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_1005E17E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = _s19CommandOutputBufferV12ContinuationVMa(0);
        *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
        uint64_t v8 = *(int *)(v7 + 24);
        goto LABEL_8;
      case 2u:
        uint64_t v9 = sub_1005E17E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t done = _s19CommandOutputBufferV8IdleDoneVMa(0);
        goto LABEL_7;
      case 3u:
        uint64_t v11 = sub_1005E17E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t done = _s19CommandOutputBufferV9HandshakeVMa(0);
LABEL_7:
        uint64_t v8 = *(int *)(done + 20);
LABEL_8:
        *(void *)(a1 + v8) = *(void *)(a2 + v8);
        break;
      default:
        uint64_t v4 = sub_1005E17E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = _s19CommandOutputBufferV7CommandVMa(0);
        *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
        *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10048BD14(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = _s19CommandOutputBufferV12ContinuationVMa(0);
      *(void *)(a1 + *(int *)(v11 + 20)) = *(void *)(a2 + *(int *)(v11 + 20));
      uint64_t v9 = *(int *)(v11 + 24);
      goto LABEL_7;
    case 2u:
      uint64_t v6 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t done = _s19CommandOutputBufferV8IdleDoneVMa(0);
      goto LABEL_5;
    case 3u:
      uint64_t v8 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t done = _s19CommandOutputBufferV9HandshakeVMa(0);
LABEL_5:
      uint64_t v9 = *(int *)(done + 20);
LABEL_7:
      *(void *)(a1 + v9) = *(void *)(a2 + v9);
      break;
    default:
      uint64_t v4 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = _s19CommandOutputBufferV7CommandVMa(0);
      *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
      *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10048BEEC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10048A5F0(a1, _s19CommandOutputBufferV7ElementOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_1005E17E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = _s19CommandOutputBufferV12ContinuationVMa(0);
        *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
        uint64_t v8 = *(int *)(v7 + 24);
        goto LABEL_8;
      case 2u:
        uint64_t v9 = sub_1005E17E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t done = _s19CommandOutputBufferV8IdleDoneVMa(0);
        goto LABEL_7;
      case 3u:
        uint64_t v11 = sub_1005E17E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t done = _s19CommandOutputBufferV9HandshakeVMa(0);
LABEL_7:
        uint64_t v8 = *(int *)(done + 20);
LABEL_8:
        *(void *)(a1 + v8) = *(void *)(a2 + v8);
        break;
      default:
        uint64_t v4 = sub_1005E17E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = _s19CommandOutputBufferV7CommandVMa(0);
        *(void *)(a1 + *(int *)(v5 + 20)) = *(void *)(a2 + *(int *)(v5 + 20));
        *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10048C0E8()
{
  uint64_t result = _s19CommandOutputBufferV7CommandVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = _s19CommandOutputBufferV12ContinuationVMa(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = _s19CommandOutputBufferV8IdleDoneVMa(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = _s19CommandOutputBufferV9HandshakeVMa(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

unsigned char *_s19CommandOutputBufferV7CommandV4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10048C2F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19CommandOutputBufferV7CommandV4KindOMa()
{
  return &_s19CommandOutputBufferV7CommandV4KindON;
}

uint64_t _s19CommandOutputBufferV8BehaviorO30WorkaroundForOpenwaveMessagingVwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t _s19CommandOutputBufferV8BehaviorO30WorkaroundForOpenwaveMessagingVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *_s19CommandOutputBufferV8BehaviorO30WorkaroundForOpenwaveMessagingVMa()
{
  return &_s19CommandOutputBufferV8BehaviorO30WorkaroundForOpenwaveMessagingVN;
}

unint64_t sub_10048C37C()
{
  unint64_t result = qword_100716378;
  if (!qword_100716378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716378);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Compress(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10048C49CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Compress()
{
  return &type metadata for Compress;
}

double sub_10048C4D4@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 4;
  return result;
}

uint64_t sub_10048C4FC@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  if (a1) {
    sub_10048C568((uint64_t)v4);
  }
  else {
    sub_10048C5AC((uint64_t)v4);
  }
  sub_10044AF04((uint64_t)v4, (uint64_t)v5);
  UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v5);
  sub_100466190((uint64_t)v5, (uint64_t)v6);
  return sub_100466190((uint64_t)v6, a2);
}

double sub_10048C568(uint64_t a1)
{
  *(void *)a1 = 2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = 7;
  return result;
}

double sub_10048C5AC(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = 7;
  return result;
}

uint64_t sub_10048C5F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E10E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E10A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v18 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) != enum case for NWEndpoint.hostPort(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
  uint64_t v12 = &v5[*(int *)(sub_10000566C(&qword_100716638) + 48)];
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v13(v11, v5, v6);
  uint64_t v14 = sub_1005E10D0();
  (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  v13(v9, v11, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != enum case for NWEndpoint.Host.name(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
  uint64_t v15 = *(void *)v9;
  uint64_t v16 = sub_10000566C(&qword_100716640);
  sub_100007A48((uint64_t)&v9[*(int *)(v16 + 48)], &qword_100716648);
  return v15;
}

uint64_t sub_10048C8DC()
{
  uint64_t v1 = sub_1005E1680();
  uint64_t v51 = *(void *)(v1 - 8);
  uint64_t v52 = v1;
  __chkstk_darwin();
  unint64_t v49 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1005E16C0();
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin();
  unint64_t v47 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin();
  uint64_t v53 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v43 = *(void *)(v41 - 8);
  uint64_t v6 = *(void *)(v43 + 64);
  __chkstk_darwin();
  uint64_t v44 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = sub_1005E12C0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v54 = v0;
  sub_1005E12E0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for NWConnection.State.setup(_:), v9);
  char v15 = sub_1005E12B0();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, v9);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v14, v9);
  if (v15)
  {
    sub_10000566C(&qword_100716628);
    uint64_t v18 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v19, 1, 1, v9);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v54;
    swift_weakInit();
    uint64_t v22 = v21 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
    uint64_t v42 = _s14descr1006B94C1C6LoggerVMa;
    sub_10049BD9C(v21 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    unint64_t v23 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v24 = (v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    sub_10049BF08((uint64_t)v8, v25 + v23, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    *(void *)(v25 + v24) = v20;
    *(void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
    swift_retain();
    uint64_t v43 = v18;
    swift_retain();
    sub_1003E4048((uint64_t)sub_10049BF70);
    sub_1005E1230();
    swift_release();
    swift_release();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1003E4048((uint64_t)sub_10049C018);
    sub_1005E11C0();
    swift_release_n();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1003E4048((uint64_t)sub_10049C048);
    sub_1005E1240();
    swift_release_n();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1003E4048((uint64_t)sub_10049C050);
    sub_1005E1250();
    swift_release_n();
    uint64_t v26 = v22;
    uint64_t v27 = v44;
    sub_10049BD9C(v22, v44, (uint64_t (*)(void))v42);
    uint64_t v29 = v45;
    uint64_t v28 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v53, v27, v46);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v30 = sub_1005E0EB0();
    os_log_type_t v31 = sub_1005E25C0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 68158210;
      LODWORD(v55) = 2;
      sub_1005E2960();
      *(_WORD *)(v32 + 8) = 256;
      uint64_t v33 = v26 + *(int *)(v41 + 20);
      LOBYTE(v55) = *(unsigned char *)v33;
      sub_1005E2960();
      *(_WORD *)(v32 + 11) = 2082;
      uint64_t v34 = ConnectionID.debugDescription.getter(*(unsigned int *)(v33 + 4));
      uint64_t v55 = (void *)sub_100481E54(v34, v35, aBlock);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[%.*hhx-%{public}s] Starting", (uint8_t *)v32, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v53, v28);
    sub_1005E12D0();
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = (uint64_t)sub_10049C058;
    aBlock[5] = v36;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100469020;
    aBlock[3] = (uint64_t)&unk_1006F8A50;
    uint64_t v37 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v38 = v47;
    sub_1005E16A0();
    uint64_t v55 = _swiftEmptyArrayStorage;
    sub_100484968((unint64_t *)&unk_100717760, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000566C(&qword_100715C98);
    sub_100007494((unint64_t *)&qword_100717770, &qword_100715C98);
    uint64_t v39 = v49;
    uint64_t v40 = v52;
    sub_1005E2AD0();
    sub_1005E2610();
    _Block_release(v37);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v50);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10048D264(unint64_t a1, uint64_t a2)
{
  unint64_t v57 = a1;
  uint64_t v46 = type metadata accessor for LoggableCommand(0);
  __chkstk_darwin(v46);
  unint64_t v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v49 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for OutboundContent(0);
  __chkstk_darwin(v56);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ClientCommand(0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v52 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v54 = (uint64_t)&v46 - v15;
  uint64_t v16 = sub_1005E0D40();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(int *)(v8 + 28);
  uint64_t v48 = v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  uint64_t v21 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger + v20);
  char v22 = *v21;
  uint64_t v23 = *((unsigned int *)v21 + 1);
  OSSignpostID.init(engine:kind:connectionID:)(*v21, 1, *((_DWORD *)v21 + 1));
  uint64_t v24 = swift_allocObject();
  uint64_t v53 = v2;
  unint64_t v25 = v57;
  swift_weakInit();
  swift_retain();
  sub_1004BA07C(v25, a2, (uint64_t)v19, (uint64_t)sub_10049C208, v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_release();
  sub_10049BD9C(a2, (uint64_t)v11, type metadata accessor for OutboundContent);
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v26 = type metadata accessor for OutboundContent;
    uint64_t v27 = (uint64_t)v11;
  }
  else
  {
    char v28 = v22;
    uint64_t v29 = v23;
    uint64_t v30 = (uint64_t)v11;
    uint64_t v31 = v54;
    sub_10049BF08(v30, v54, type metadata accessor for ClientCommand);
    uint64_t v32 = v49;
    sub_10049BD9C(v48, v49, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v34 = v50;
    uint64_t v33 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v55, v32, v51);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_10049BD9C(v31, v52, type metadata accessor for ClientCommand);
    unint64_t v35 = sub_1005E0EB0();
    os_log_type_t v36 = sub_1005E25C0();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      char v38 = v25;
      uint64_t v56 = HIDWORD(v25);
      uint64_t v39 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 68158466;
      LODWORD(v58) = 2;
      sub_1005E2960();
      *(_WORD *)(v39 + 8) = 256;
      LOBYTE(v58) = v28;
      sub_1005E2960();
      *(_WORD *)(v39 + 11) = 2082;
      uint64_t v40 = ConnectionID.debugDescription.getter(v29);
      LODWORD(v49) = v37;
      uint64_t v58 = sub_100481E54(v40, v41, &v59);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 21) = 2082;
      uint64_t v42 = (uint64_t)v47;
      uint64_t v43 = v52;
      sub_10049BD9C(v52, (uint64_t)&v47[*(int *)(v46 + 20)], type metadata accessor for ClientCommand);
      *(unsigned char *)uint64_t v42 = v38;
      *(_DWORD *)(v42 + 4) = v56;
      Swift::String v44 = LoggableCommand.makeDescriptionWithoutPII()();
      sub_10049BD04(v42, type metadata accessor for LoggableCommand);
      uint64_t v58 = sub_100481E54(v44._countAndFlagsBits, (unint64_t)v44._object, &v59);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04(v43, type metadata accessor for ClientCommand);
      _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v49, "[%.*hhx-%{public}s] Sent 'C: %{public}s'", (uint8_t *)v39, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v34 + 8))(v55, v51);
    }
    else
    {

      sub_10049BD04(v52, type metadata accessor for ClientCommand);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v55, v33);
    }
    uint64_t v27 = v54;
    uint64_t v26 = type metadata accessor for ClientCommand;
  }
  return sub_10049BD04(v27, v26);
}

uint64_t sub_10048D920()
{
  uint64_t v1 = sub_1005E10E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E10A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - v10;
  unsigned int v12 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28));
  if (v12 >> 6)
  {
    if (v12 >> 6 != 1) {
      return 0;
    }
    v12 &= 0x3Fu;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v4, v1) == enum case for NWEndpoint.hostPort(_:))
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v4, v1);
    uint64_t v13 = &v4[*(int *)(sub_10000566C(&qword_100716638) + 48)];
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v11, v4, v5);
    uint64_t v15 = sub_1005E10D0();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
    v14(v9, v11, v5);
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v9, v5) == enum case for NWEndpoint.Host.name(_:))
    {
      (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
      uint64_t v16 = sub_10000566C(&qword_100716640);
      sub_100007A48((uint64_t)&v9[*(int *)(v16 + 48)], &qword_100716648);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v12;
}

unint64_t sub_10048DC48()
{
  sub_1005E1460();
  sub_1005E1400();
  uint64_t v0 = sub_1005E1310();
  swift_release();
  unint64_t result = 0;
  if (v0)
  {
    sub_1005E1450();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    uint64_t v2 = sub_1005E1440();
    unsigned int negotiated_tls_protocol_version = sec_protocol_metadata_get_negotiated_tls_protocol_version(v2);
    unsigned int negotiated_tls_ciphersuite = sec_protocol_metadata_get_negotiated_tls_ciphersuite(v2);
    if (sec_protocol_metadata_get_server_name(v2)) {
      sub_1005E1E50();
    }
    swift_release_n();
    swift_unknownObjectRelease();
    return negotiated_tls_protocol_version | ((unint64_t)negotiated_tls_ciphersuite << 16);
  }
  return result;
}

uint64_t type metadata accessor for ConnectionConfiguration(uint64_t a1)
{
  return sub_10003B314(a1, qword_1007163E0);
}

uint64_t ConnectionConfiguration.init(endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:transportLayerSecurity:sourceApplicationBundleIdentifier:sourceApplicationKind:networkAccountIdentifier:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v15 = a7 & 1;
  uint64_t v16 = (int *)type metadata accessor for ConnectionConfiguration(0);
  uint64_t v17 = v16[6];
  uint64_t v18 = (void *)(a9 + v16[8]);
  uint64_t v19 = (void *)(a9 + v16[10]);
  uint64_t v20 = sub_1005E10E0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  *(unsigned char *)(a9 + v16[5]) = a2;
  *(void *)(a9 + v17) = a3;
  *(unsigned char *)(a9 + v16[7]) = a4;
  *uint64_t v18 = a5;
  v18[1] = a6;
  *(unsigned char *)(a9 + v16[9]) = v15;
  *uint64_t v19 = a8;
  v19[1] = a10;
  return result;
}

uint64_t ConnectionConfiguration.TransportLayerSecurity.init(_:)(uint64_t result)
{
  if (result >> 6 == 1) {
    unsigned int v1 = result & 0x3F | 0x40;
  }
  else {
    unsigned int v1 = 128;
  }
  if (result >> 6) {
    return v1;
  }
  else {
    return result;
  }
}

unint64_t sub_10048E2DC()
{
  unint64_t result = qword_100716380;
  if (!qword_100716380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716380);
  }
  return result;
}

uint64_t sub_10048E850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E10E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10048E930(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E10E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t sub_10048E9EC()
{
  uint64_t result = sub_1005E10E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_10048ECB8(void *a1, void *a2)
{
  return sub_10049ACC0(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

BOOL sub_10048ECD4(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  unint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  unint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v12 = a2[5];
  if (!(v3 >> 62))
  {
    if (v7 >> 62) {
      return 0;
    }
    goto LABEL_6;
  }
  if (v3 >> 62 == 1)
  {
    if (v7 >> 62 != 1) {
      return 0;
    }
LABEL_6:
    if (sub_1004D5DD4(v3, a1[1], a1[2], v7, v8, v9)) {
      goto LABEL_7;
    }
    return 0;
  }
  if (v7 >> 62 != 2 || v7 != 0x8000000000000000 || (v9 | v8) != 0) {
    return 0;
  }
LABEL_7:
  return sub_10049ACC0(v4, v5, v6, v10, v11, v12);
}

uint64_t sub_10048EDB4(uint64_t a1, void *a2, IMAP2Tracing::EngineLoggerID a3, IMAP2Persistence::AccountLoggerID a4)
{
  uint64_t v5 = v4;
  unint64_t v57 = a2;
  uint64_t v65 = a1;
  uint64_t v9 = sub_1005E0D40();
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v60 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  v50[0] = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v61 = (char *)v50 - v12;
  uint64_t v13 = sub_1005E0D80();
  uint64_t v63 = *(void *)(v13 - 8);
  uint64_t v64 = v13;
  __chkstk_darwin(v13);
  uint64_t v62 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = (char *)sub_1005E10E0();
  uint64_t v56 = *((void *)v58 - 1);
  __chkstk_darwin(v58);
  uint64_t v55 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005E1330();
  uint64_t v53 = *(void *)(v16 - 8);
  uint64_t v54 = v16;
  __chkstk_darwin(v16);
  uint64_t v52 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ConnectionConfiguration(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v22 = v21 - 8;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v25 = (char *)v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)v50 - v26;
  *(void *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v28 = OBJC_IVAR____TtC15IMAP2Connection10Connection_receiveTranscoder;
  *(void *)(v5 + v28) = ServerResponseTranscoder.init()();
  *(void *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_pendingHandshakeReplyCount) = 0;
  uint64_t v29 = v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_throttleInfo;
  *(void *)uint64_t v29 = 0;
  *(void *)(v29 + 8) = 0;
  *(unsigned char *)(v29 + 16) = 1;
  uint64_t v30 = OBJC_IVAR____TtC15IMAP2Connection10Connection_lastMessageTime;
  *(void *)(v5 + v30) = static MonotonicTime.now()();
  unint64_t v31 = (unint64_t)EngineAndAccountLoggerID.init(engine:account:)(a3, a4);
  Swift::UInt8 v32 = v31;
  unint64_t v33 = HIDWORD(v31);
  sub_1005E0EC0();
  uint64_t v34 = (Swift::UInt8 *)&v27[*(int *)(v22 + 28)];
  *uint64_t v34 = v32;
  *((_DWORD *)v34 + 1) = v33;
  v50[1] = sub_1005E1320();
  uint64_t v51 = type metadata accessor for ConnectionConfiguration;
  sub_10049BD9C(a1, (uint64_t)v20, type metadata accessor for ConnectionConfiguration);
  sub_10049BD9C((uint64_t)v27, (uint64_t)v25, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  sub_10049C420((uint64_t)v20, (uint64_t)v25);
  sub_1005E1370();
  swift_bridgeObjectRetain();
  sub_1005E1380();
  swift_bridgeObjectRetain();
  sub_1005E1390();
  swift_bridgeObjectRetain();
  sub_1005E13B0();
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, enum case for NWParameters.Attribution.user(_:), v54);
  sub_1005E1340();
  (*(void (**)(char *, char *, char *))(v56 + 16))(v55, v20, v58);
  uint64_t v35 = sub_1005E1280();
  uint64_t v36 = (uint64_t)v25;
  int v37 = v61;
  sub_10049BD04(v36, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  sub_10049BD04((uint64_t)v20, type metadata accessor for ConnectionConfiguration);
  uint64_t v58 = v27;
  sub_10049BD9C((uint64_t)v27, v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  *(void *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_createdAt) = static MonotonicTime.now()();
  sub_10049BD9C(v65, v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration, v51);
  char v38 = v57;
  *(void *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_queue) = v57;
  *(void *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_connection) = v35;
  id v39 = v38;
  swift_retain();
  *(void *)(v5 + OBJC_IVAR____TtC15IMAP2Connection10Connection_underlyingID) = sub_1005E1130();
  uint64_t v40 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v40, v64);
  OSSignpostID.init(engine:kind:connectionID:)(*v34, 1, *((_DWORD *)v34 + 1));
  unint64_t v41 = sub_1005E0D70();
  os_signpost_type_t v42 = sub_1005E26F0();
  if (sub_1005E28A0())
  {
    uint64_t v44 = v59;
    uint64_t v43 = v60;
    uint64_t v45 = (char *)v50[0];
    (*(void (**)(void, char *, uint64_t))(v59 + 16))(v50[0], v37, v60);
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 67109120;
    int v66 = 1;
    sub_1005E2960();
    os_signpost_id_t v47 = sub_1005E0D30();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v41, v42, v47, "Connection.networkStateUpdate", "%u", v46, 8u);
    swift_slowDealloc();
    swift_release();

    sub_10049BD04(v65, type metadata accessor for ConnectionConfiguration);
    uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
    v48(v61, v43);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
    sub_10049BD04((uint64_t)v58, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    v48(v45, v43);
  }
  else
  {
    swift_release();

    sub_10049BD04(v65, type metadata accessor for ConnectionConfiguration);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v60);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
    sub_10049BD04((uint64_t)v58, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  }
  return v5;
}

uint64_t sub_10048F578()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0D40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  unint64_t v25 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1005E0D80();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = v0 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  uint64_t v13 = *(int *)(_s14descr1006B94C1C6LoggerVMa() + 20);
  uint64_t v24 = v12;
  OSSignpostID.init(engine:kind:connectionID:)(*(unsigned __int8 *)(v12 + v13), 1, *(_DWORD *)(v12 + v13 + 4));
  uint64_t v14 = sub_1005E0D70();
  os_signpost_type_t v15 = sub_1005E26F0();
  if (sub_1005E28A0())
  {
    (*(void (**)(void))(v3 + 16))();
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = v2;
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v16 = 67109120;
    int v26 = 2;
    sub_1005E2960();
    os_signpost_id_t v18 = sub_1005E0D30();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "Connection.networkStateUpdate", "%u", v17, 8u);
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v20 = v6;
    uint64_t v21 = v23;
    v19(v20, v23);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v19(v25, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_1005E1150();
  sub_10049BD04(v24, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  sub_10049BD04(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration, type metadata accessor for ConnectionConfiguration);
  sub_1004836A4(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate);
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_10048F908()
{
  sub_10048F578();
  return swift_deallocClassInstance();
}

uint64_t sub_10048F960()
{
  return type metadata accessor for Connection(0);
}

uint64_t type metadata accessor for Connection(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716470);
}

uint64_t sub_10048F988()
{
  uint64_t result = _s14descr1006B94C1C6LoggerVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ConnectionConfiguration(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Connection.ThrottleInfo()
{
  return &type metadata for Connection.ThrottleInfo;
}

char *sub_10048FAA4(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *(void *)a2;
      unint64_t v12 = *(void *)(a2 + 8);
      char v13 = *(unsigned char *)(a2 + 16);
      sub_10044B198(v11, v12, v13);
      *(void *)a1 = v11;
      *((void *)a1 + 1) = v12;
      a1[16] = v13;
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v9;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_26;
        case 1u:
          uint64_t v14 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v14;
          uint64_t v15 = *(void *)(a2 + 16);
          uint64_t v16 = *(void *)(a2 + 24);
          *((void *)a1 + 2) = v15;
          *((void *)a1 + 3) = v16;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 2u:
        case 8u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 3u:
        case 4u:
        case 5u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((void *)a1 + 4) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v17 = sub_10000566C(&qword_100716548);
          uint64_t v18 = *(int *)(v17 + 64);
          uint64_t v19 = &a1[v18];
          uint64_t v20 = (const void *)(a2 + v18);
          uint64_t v21 = sub_1005E0970();
          uint64_t v22 = *(void *)(v21 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          {
            uint64_t v23 = sub_10000566C(&qword_100716550);
            memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
          }
          uint64_t v45 = *(int *)(v17 + 80);
          uint64_t v46 = (uint64_t *)&a1[v45];
          os_signpost_id_t v47 = (uint64_t *)(a2 + v45);
          uint64_t v48 = *v47;
          unint64_t v49 = v47[1];
          sub_100008D24(*v47, v49);
          *uint64_t v46 = v48;
          v46[1] = v49;
          goto LABEL_26;
        case 0xAu:
        case 0xCu:
          unint64_t v24 = *(void *)a2;
          sub_100490278(v24);
          *(void *)a1 = v24;
          goto LABEL_26;
        case 0xBu:
        case 0xDu:
          unint64_t v25 = *(void *)a2;
          sub_100490278(*(void *)a2);
          uint64_t v26 = *(void *)(a2 + 8);
          *(void *)a1 = v25;
          *((void *)a1 + 1) = v26;
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 0xEu:
          uint64_t v27 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
          uint64_t v28 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
          uint64_t v29 = &a1[v28];
          uint64_t v30 = (uint64_t *)(a2 + v28);
          v29[16] = *((unsigned char *)v30 + 16);
          uint64_t v31 = *v30;
          uint64_t v32 = v30[1];
          *(void *)uint64_t v29 = v31;
          *((void *)v29 + 1) = v32;
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 0xFu:
          uint64_t v33 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
          uint64_t v34 = *(int *)(sub_10000566C(&qword_100716560) + 48);
          uint64_t v35 = &a1[v34];
          uint64_t v36 = a2 + v34;
          *(_WORD *)uint64_t v35 = *(_WORD *)v36;
          *((void *)v35 + 1) = *(void *)(v36 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 0x10u:
        case 0x11u:
          uint64_t v37 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
          uint64_t v38 = *(int *)(sub_10000566C(&qword_100716568) + 48);
          id v39 = &a1[v38];
          uint64_t v40 = a2 + v38;
          *(void *)id v39 = *(void *)v40;
          *((_DWORD *)v39 + 2) = *(_DWORD *)(v40 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 0x12u:
          uint64_t v41 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v41;
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_26;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v42 = *(void *)(a2 + 16);
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = v42;
          uint64_t v43 = *(void *)(a2 + 32);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          *((void *)a1 + 4) = v43;
          uint64_t v44 = *(void *)(a2 + 48);
          *((void *)a1 + 5) = *(void *)(a2 + 40);
          *((void *)a1 + 6) = v44;
          *((void *)a1 + 7) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      goto LABEL_27;
    }
    memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
  }
  return a1;
}

unint64_t sub_100490278(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100490330(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1) {
    return sub_1004445F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  }
  if (!result)
  {
    type metadata accessor for ClientCommand(0);
    unint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        swift_bridgeObjectRelease();
        goto LABEL_23;
      case 1:
      case 2:
      case 6:
      case 8:
        swift_bridgeObjectRelease();
        goto LABEL_27;
      case 3:
      case 4:
      case 5:
        goto LABEL_27;
      case 7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      case 9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = sub_10000566C(&qword_100716548);
        uint64_t v7 = a1 + *(int *)(v6 + 64);
        uint64_t v8 = sub_1005E0970();
        uint64_t v9 = *(void *)(v8 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
        }
        unint64_t v10 = (uint64_t *)(a1 + *(int *)(v6 + 80));
        uint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        return sub_1000094D4(v11, v12);
      case 10:
      case 12:
        unint64_t v3 = *(void *)a1;
        return sub_1004906C8(v3);
      case 11:
      case 13:
        sub_1004906C8(*(void *)a1);
        goto LABEL_27;
      case 14:
        uint64_t v13 = sub_10000566C(&qword_100716558);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
        int v5 = &qword_100715AB8;
        goto LABEL_20;
      case 15:
        uint64_t v14 = sub_10000566C(&qword_100716558);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
        sub_10000566C(&qword_100716560);
        goto LABEL_27;
      case 16:
      case 17:
        uint64_t v4 = sub_10000566C(&qword_100716558);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        int v5 = &qword_100716568;
LABEL_20:
        sub_10000566C(v5);
        goto LABEL_27;
      case 18:
        swift_release();
        swift_release();
LABEL_23:
        return swift_release();
      case 19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_27:
        unint64_t result = swift_bridgeObjectRelease();
        break;
      default:
        return result;
    }
  }
  return result;
}

unint64_t sub_1004906C8(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_100490780(char *a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = *(void *)a2;
    unint64_t v10 = *(void *)(a2 + 8);
    char v11 = *(unsigned char *)(a2 + 16);
    sub_10044B198(v9, v10, v11);
    *(void *)a1 = v9;
    *((void *)a1 + 1) = v10;
    a1[16] = v11;
LABEL_25:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v8;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 32);
        *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_24;
      case 1u:
        uint64_t v12 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        uint64_t v13 = *(void *)(a2 + 16);
        uint64_t v14 = *(void *)(a2 + 24);
        *((void *)a1 + 2) = v13;
        *((void *)a1 + 3) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 2u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 3u:
      case 4u:
      case 5u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_10000566C(&qword_100716548);
        uint64_t v16 = *(int *)(v15 + 64);
        uint64_t v17 = &a1[v16];
        uint64_t v18 = (const void *)(a2 + v16);
        uint64_t v19 = sub_1005E0970();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = sub_10000566C(&qword_100716550);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v43 = *(int *)(v15 + 80);
        uint64_t v44 = (uint64_t *)&a1[v43];
        uint64_t v45 = (uint64_t *)(a2 + v43);
        uint64_t v46 = *v45;
        unint64_t v47 = v45[1];
        sub_100008D24(*v45, v47);
        *uint64_t v44 = v46;
        v44[1] = v47;
        goto LABEL_24;
      case 0xAu:
      case 0xCu:
        unint64_t v22 = *(void *)a2;
        sub_100490278(v22);
        *(void *)a1 = v22;
        goto LABEL_24;
      case 0xBu:
      case 0xDu:
        uint64_t v23 = *(void *)a2;
        sub_100490278(*(void *)a2);
        uint64_t v24 = *(void *)(a2 + 8);
        *(void *)a1 = v23;
        *((void *)a1 + 1) = v24;
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 0xEu:
        uint64_t v25 = sub_10000566C(&qword_100716558);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
        uint64_t v27 = &a1[v26];
        uint64_t v28 = (uint64_t *)(a2 + v26);
        v27[16] = *((unsigned char *)v28 + 16);
        uint64_t v29 = *v28;
        uint64_t v30 = v28[1];
        *(void *)uint64_t v27 = v29;
        *((void *)v27 + 1) = v30;
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 0xFu:
        uint64_t v31 = sub_10000566C(&qword_100716558);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
        uint64_t v32 = *(int *)(sub_10000566C(&qword_100716560) + 48);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = a2 + v32;
        *(_WORD *)uint64_t v33 = *(_WORD *)v34;
        *((void *)v33 + 1) = *(void *)(v34 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 0x10u:
      case 0x11u:
        uint64_t v35 = sub_10000566C(&qword_100716558);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        uint64_t v36 = *(int *)(sub_10000566C(&qword_100716568) + 48);
        uint64_t v37 = &a1[v36];
        uint64_t v38 = a2 + v36;
        *(void *)uint64_t v37 = *(void *)v38;
        *((_DWORD *)v37 + 2) = *(_DWORD *)(v38 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 0x12u:
        uint64_t v39 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v39;
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        goto LABEL_24;
      case 0x13u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v40 = *(void *)(a2 + 16);
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = v40;
        uint64_t v41 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v41;
        uint64_t v42 = *(void *)(a2 + 48);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = v42;
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    goto LABEL_25;
  }
  memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100490F10(char *a1, uint64_t a2, uint64_t a3)
{
  if (a1 != (char *)a2)
  {
    sub_10049BD04((uint64_t)a1, type metadata accessor for OutboundContent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = *(void *)a2;
      unint64_t v10 = *(void *)(a2 + 8);
      char v11 = *(unsigned char *)(a2 + 16);
      sub_10044B198(v9, v10, v11);
      *(void *)a1 = v9;
      *((void *)a1 + 1) = v10;
      a1[16] = v11;
LABEL_26:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((_DWORD *)a1 + 7) = *(_DWORD *)(a2 + 28);
          int v8 = *(_DWORD *)(a2 + 32);
          *(_DWORD *)(a1 + 35) = *(_DWORD *)(a2 + 35);
          *((_DWORD *)a1 + 8) = v8;
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_25;
        case 1u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 2u:
        case 8u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 3u:
        case 4u:
        case 5u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((_DWORD *)a1 + 6) = *(_DWORD *)(a2 + 24);
          *((void *)a1 + 4) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *((_DWORD *)a1 + 2) = *(_DWORD *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_10000566C(&qword_100716548);
          uint64_t v13 = *(int *)(v12 + 64);
          uint64_t v14 = &a1[v13];
          uint64_t v15 = (const void *)(a2 + v13);
          uint64_t v16 = sub_1005E0970();
          uint64_t v17 = *(void *)(v16 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
          {
            uint64_t v18 = sub_10000566C(&qword_100716550);
            memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
          }
          uint64_t v34 = *(int *)(v12 + 80);
          uint64_t v35 = (uint64_t *)&a1[v34];
          uint64_t v36 = (uint64_t *)(a2 + v34);
          uint64_t v37 = *v36;
          unint64_t v38 = v36[1];
          sub_100008D24(*v36, v38);
          uint64_t *v35 = v37;
          v35[1] = v38;
          goto LABEL_25;
        case 0xAu:
        case 0xCu:
          unint64_t v19 = *(void *)a2;
          sub_100490278(v19);
          *(void *)a1 = v19;
          goto LABEL_25;
        case 0xBu:
        case 0xDu:
          uint64_t v20 = *(void *)a2;
          sub_100490278(*(void *)a2);
          *(void *)a1 = v20;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 0xEu:
          uint64_t v21 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          uint64_t v22 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
          uint64_t v23 = &a1[v22];
          uint64_t v24 = a2 + v22;
          *(void *)uint64_t v23 = *(void *)v24;
          uint64_t v25 = *(void *)(v24 + 8);
          v23[16] = *(unsigned char *)(v24 + 16);
          *((void *)v23 + 1) = v25;
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 0xFu:
          uint64_t v26 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
          uint64_t v27 = *(int *)(sub_10000566C(&qword_100716560) + 48);
          uint64_t v28 = &a1[v27];
          uint64_t v29 = (char *)(a2 + v27);
          *uint64_t v28 = *v29;
          v28[1] = v29[1];
          *((void *)v28 + 1) = *((void *)v29 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 0x10u:
        case 0x11u:
          uint64_t v30 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
          uint64_t v31 = *(int *)(sub_10000566C(&qword_100716568) + 48);
          uint64_t v32 = &a1[v31];
          uint64_t v33 = a2 + v31;
          *(void *)uint64_t v32 = *(void *)v33;
          *((_DWORD *)v32 + 2) = *(_DWORD *)(v33 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 0x12u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_25;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *((void *)a1 + 1) = *(void *)(a2 + 8);
          *((void *)a1 + 2) = *(void *)(a2 + 16);
          *((void *)a1 + 3) = *(void *)(a2 + 24);
          *((void *)a1 + 4) = *(void *)(a2 + 32);
          *((void *)a1 + 5) = *(void *)(a2 + 40);
          *((void *)a1 + 6) = *(void *)(a2 + 48);
          *((void *)a1 + 7) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_26;
    }
    memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for OutboundContent(uint64_t a1)
{
  return sub_10003B314(a1, qword_1007165E0);
}

void *sub_10049173C(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for ClientCommand(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 9u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[2] = a2[2];
        uint64_t v7 = sub_10000566C(&qword_100716548);
        uint64_t v8 = *(int *)(v7 + 64);
        uint64_t v9 = (char *)a1 + v8;
        unint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1005E0970();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          uint64_t v13 = sub_10000566C(&qword_100716550);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        *(_OWORD *)((char *)a1 + *(int *)(v7 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 80));
        goto LABEL_12;
      case 0xEu:
        uint64_t v14 = sub_10000566C(&qword_100716558);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        v16[16] = v17[16];
        goto LABEL_12;
      case 0xFu:
        uint64_t v18 = sub_10000566C(&qword_100716558);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        uint64_t v19 = sub_10000566C(&qword_100716560);
        *(_OWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v19 + 48));
        goto LABEL_12;
      case 0x10u:
      case 0x11u:
        uint64_t v20 = sub_10000566C(&qword_100716558);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        uint64_t v21 = *(int *)(sub_10000566C(&qword_100716568) + 48);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        *(void *)uint64_t v22 = *(void *)v23;
        *((_DWORD *)v22 + 2) = *((_DWORD *)v23 + 2);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100491B44(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10049BD04((uint64_t)a1, type metadata accessor for OutboundContent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 9u:
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          a1[2] = a2[2];
          uint64_t v7 = sub_10000566C(&qword_100716548);
          uint64_t v8 = *(int *)(v7 + 64);
          uint64_t v9 = (char *)a1 + v8;
          unint64_t v10 = (char *)a2 + v8;
          uint64_t v11 = sub_1005E0970();
          uint64_t v12 = *(void *)(v11 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
          {
            uint64_t v13 = sub_10000566C(&qword_100716550);
            memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
          }
          *(_OWORD *)((char *)a1 + *(int *)(v7 + 80)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 80));
          goto LABEL_13;
        case 0xEu:
          uint64_t v14 = sub_10000566C(&qword_100716558);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          uint64_t v15 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
          v16[16] = v17[16];
          goto LABEL_13;
        case 0xFu:
          uint64_t v18 = sub_10000566C(&qword_100716558);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          uint64_t v19 = sub_10000566C(&qword_100716560);
          *(_OWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v19 + 48));
          goto LABEL_13;
        case 0x10u:
        case 0x11u:
          uint64_t v20 = sub_10000566C(&qword_100716558);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          uint64_t v21 = *(int *)(sub_10000566C(&qword_100716568) + 48);
          uint64_t v22 = (char *)a1 + v21;
          uint64_t v23 = (char *)a2 + v21;
          *(void *)uint64_t v22 = *(void *)v23;
          *((_DWORD *)v22 + 2) = *((_DWORD *)v23 + 2);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100491F70()
{
  uint64_t result = type metadata accessor for ClientCommand(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100492000(uint64_t a1, NSObject *a2, char *a3, char *a4)
{
  int v453 = a3;
  v454 = a4;
  uint64_t v456 = a1;
  sub_10000566C(&qword_100716628);
  __chkstk_darwin();
  v427 = (char *)&v367 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  os_log_t v435 = (char *)&v367 - v6;
  __chkstk_darwin();
  uint64_t v434 = (char *)&v367 - v7;
  uint64_t v432 = type metadata accessor for ConnectionEvent(0);
  uint64_t v433 = *(void *)(v432 - 8);
  __chkstk_darwin();
  uint64_t v441 = (uint64_t)&v367 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v370 = (char *)&v367 - v9;
  __chkstk_darwin();
  uint64_t v420 = (char *)&v367 - v10;
  uint64_t v440 = sub_1005E1650();
  v444 = *(char **)(v440 - 8);
  __chkstk_darwin();
  uint64_t v387 = (char *)&v367 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v384 = (char *)&v367 - v12;
  __chkstk_darwin();
  uint64_t v385 = (char *)&v367 - v13;
  __chkstk_darwin();
  uint64_t v383 = (char *)&v367 - v14;
  __chkstk_darwin();
  uint64_t v401 = (char *)&v367 - v15;
  __chkstk_darwin();
  v399 = (char *)&v367 - v16;
  __chkstk_darwin();
  uint64_t v423 = (char *)&v367 - v17;
  __chkstk_darwin();
  os_log_t v431 = (os_log_t)((char *)&v367 - v18);
  __chkstk_darwin();
  uint64_t v400 = (char *)&v367 - v19;
  __chkstk_darwin();
  uint64_t v398 = (char *)&v367 - v20;
  __chkstk_darwin();
  uint64_t v407 = (char *)&v367 - v21;
  __chkstk_darwin();
  v396 = (char *)&v367 - v22;
  __chkstk_darwin();
  uint64_t v415 = (char *)&v367 - v23;
  __chkstk_darwin();
  uint64_t v419 = (char *)&v367 - v24;
  __chkstk_darwin();
  uint64_t v414 = (char *)&v367 - v25;
  __chkstk_darwin();
  uint64_t v426 = (char **)((char *)&v367 - v26);
  __chkstk_darwin();
  v438 = (char *)&v367 - v27;
  uint64_t v28 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v374 = (uint64_t)&v367 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v372 = (uint64_t)&v367 - v30;
  __chkstk_darwin();
  uint64_t v373 = (uint64_t)&v367 - v31;
  __chkstk_darwin();
  uint64_t v371 = (uint64_t)&v367 - v32;
  __chkstk_darwin();
  uint64_t v382 = (uint64_t)&v367 - v33;
  __chkstk_darwin();
  uint64_t v379 = (uint64_t)&v367 - v34;
  __chkstk_darwin();
  uint64_t v381 = (uint64_t)&v367 - v35;
  __chkstk_darwin();
  uint64_t v378 = (uint64_t)&v367 - v36;
  __chkstk_darwin();
  uint64_t v397 = (uint64_t)&v367 - v37;
  __chkstk_darwin();
  uint64_t v393 = (uint64_t)&v367 - v38;
  __chkstk_darwin();
  uint64_t v413 = (uint64_t)&v367 - v39;
  __chkstk_darwin();
  uint64_t v411 = (uint64_t)&v367 - v40;
  __chkstk_darwin();
  uint64_t v380 = (uint64_t)&v367 - v41;
  __chkstk_darwin();
  uint64_t v377 = (uint64_t)&v367 - v42;
  __chkstk_darwin();
  uint64_t v394 = (uint64_t)&v367 - v43;
  __chkstk_darwin();
  uint64_t v390 = (uint64_t)&v367 - v44;
  __chkstk_darwin();
  uint64_t v405 = (uint64_t)&v367 - v45;
  __chkstk_darwin();
  uint64_t v392 = (uint64_t)&v367 - v46;
  __chkstk_darwin();
  uint64_t v395 = (uint64_t)&v367 - v47;
  __chkstk_darwin();
  uint64_t v391 = (uint64_t)&v367 - v48;
  __chkstk_darwin();
  uint64_t v412 = (uint64_t)&v367 - v49;
  __chkstk_darwin();
  uint64_t v409 = (uint64_t)&v367 - v50;
  __chkstk_darwin();
  uint64_t v422 = (uint64_t)&v367 - v51;
  __chkstk_darwin();
  uint64_t v421 = (uint64_t)&v367 - v52;
  __chkstk_darwin();
  uint64_t v410 = (uint64_t)&v367 - v53;
  __chkstk_darwin();
  uint64_t v408 = (uint64_t)&v367 - v54;
  uint64_t v451 = sub_1005E0ED0();
  uint64_t v443 = *(void *)(v451 - 8);
  __chkstk_darwin();
  uint64_t v376 = (char *)&v367 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v375 = (char *)&v367 - v56;
  __chkstk_darwin();
  uint64_t v389 = (char *)&v367 - v57;
  __chkstk_darwin();
  os_log_t v388 = (char *)&v367 - v58;
  __chkstk_darwin();
  uint64_t v406 = (char *)&v367 - v59;
  __chkstk_darwin();
  uint64_t v417 = (char *)&v367 - v60;
  __chkstk_darwin();
  uint64_t v386 = (char *)&v367 - v61;
  __chkstk_darwin();
  uint64_t v402 = (char *)&v367 - v62;
  __chkstk_darwin();
  int v404 = (char *)&v367 - v63;
  __chkstk_darwin();
  os_log_t v403 = (char *)&v367 - v64;
  __chkstk_darwin();
  os_log_t v418 = (char *)&v367 - v65;
  __chkstk_darwin();
  uint64_t v424 = (char *)&v367 - v66;
  __chkstk_darwin();
  v416 = (char *)&v367 - v67;
  uint64_t v68 = sub_1005E12C0();
  uint64_t v69 = *(void *)(v68 - 8);
  __chkstk_darwin();
  os_log_t v448 = (char *)&v367 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v430 = ((char *)&v367 - v71);
  __chkstk_darwin();
  uint64_t v73 = (char *)&v367 - v72;
  __chkstk_darwin();
  uint64_t v75 = (char *)&v367 - v74;
  uint64_t v76 = sub_1005E0D40();
  uint64_t v446 = *(char **)(v76 - 8);
  uint64_t v447 = (uint64_t (*)(void, void))v76;
  __chkstk_darwin();
  os_log_t v429 = (os_log_t)((char *)&v367 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v79 = (char *)&v367 - v78;
  uint64_t v80 = sub_1005E0D80();
  uint64_t v81 = *(void *)(v80 - 8);
  __chkstk_darwin();
  uint64_t v83 = (char *)&v367 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v445 = (void (*)(char *, uint64_t))(v453 + 16);
  uint64_t v436 = swift_projectBox();
  uint64_t v84 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v83, v84, v80);
  uint64_t v425 = v28;
  uint64_t v85 = *(int *)(v28 + 20);
  os_log_t v437 = a2;
  uint64_t v86 = (unsigned __int8 *)a2 + v85;
  unsigned int v87 = *((_DWORD *)v86 + 1);
  uint64_t v88 = *v86;
  v454 = v79;
  OSSignpostID.init(engine:kind:connectionID:)(v88, 1, v87);
  uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
  v89(v75, v456, v68);
  int v453 = v73;
  v89(v73, (uint64_t)v75, v68);
  uint64_t v455 = v69;
  unsigned int v90 = *(void (**)(char *, uint64_t))(v69 + 8);
  v90(v75, v68);
  uint64_t v91 = sub_1005E0D70();
  LODWORD(v428) = sub_1005E26F0();
  char v92 = sub_1005E28A0();
  uint64_t v449 = v68;
  uint64_t v442 = v69 + 16;
  uint64_t v450 = v89;
  uint64_t v452 = v69 + 8;
  uint64_t v439 = v90;
  if ((v92 & 1) == 0)
  {
    v90(v453, v68);

    (*((void (**)(char *, uint64_t (*)(void, void)))v446 + 1))(v454, v447);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v80);
    uint64_t v102 = v456;
    goto LABEL_18;
  }
  uint64_t v367 = v83;
  uint64_t v368 = v81;
  uint64_t v369 = v80;
  uint64_t v94 = v446;
  uint64_t v93 = v447;
  os_log_t v95 = v429;
  (*((void (**)(os_log_t, char *, uint64_t (*)(void, void)))v446 + 2))(v429, v454, v447);
  uint64_t v96 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v96 = 67109120;
  uint64_t v97 = v430;
  v89((char *)v430, (uint64_t)v453, v68);
  int v98 = (*(uint64_t (**)(NSObject *, uint64_t))(v455 + 88))(v97, v68);
  if (v98 == enum case for NWConnection.State.waiting(_:))
  {
    uint64_t v99 = v97;
    os_log_t v100 = v95;
    int v101 = 4;
  }
  else
  {
    if (v98 != enum case for NWConnection.State.failed(_:))
    {
      if (v98 == enum case for NWConnection.State.setup(_:))
      {
        os_log_t v100 = v95;
        int v101 = 3;
      }
      else if (v98 == enum case for NWConnection.State.preparing(_:))
      {
        os_log_t v100 = v95;
        int v101 = 5;
      }
      else
      {
        os_log_t v100 = v95;
        if (v98 == enum case for NWConnection.State.ready(_:))
        {
          int v101 = 6;
        }
        else
        {
          if (v98 != enum case for NWConnection.State.cancelled(_:))
          {
            uint64_t v99 = v97;
            int v101 = 0;
            goto LABEL_7;
          }
          int v101 = 8;
        }
      }
      uint64_t v68 = v449;
      uint64_t v103 = v439;
      goto LABEL_17;
    }
    uint64_t v99 = v97;
    os_log_t v100 = v95;
    int v101 = 7;
  }
LABEL_7:
  uint64_t v68 = v449;
  uint64_t v103 = v439;
  v439((char *)v99, v449);
LABEL_17:
  v103(v453, v68);
  int v459 = v101;
  sub_1005E2960();
  os_signpost_id_t v104 = sub_1005E0D30();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v91, (os_signpost_type_t)v428, v104, "Connection.networkStateUpdate", "%u", v96, 8u);
  swift_slowDealloc();

  uint64_t v105 = (void (*)(char *, uint64_t (*)(void, void)))*((void *)v94 + 1);
  v105(v454, v93);
  (*(void (**)(char *, uint64_t))(v368 + 8))(v367, v369);
  v105((char *)v100, v93);
  uint64_t v102 = v456;
LABEL_18:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v107 = v455;
  uint64_t v108 = v448;
  if (!result) {
    return result;
  }
  uint64_t v109 = result;
  v450(v448, v102, v68);
  uint64_t v110 = *(uint64_t (**)(char *, uint64_t))(v107 + 88);
  int v111 = v110(v108, v68);
  int v453 = (char *)(v107 + 88);
  v454 = (char *)v109;
  uint64_t v447 = (uint64_t (*)(void, void))v110;
  if (v111 == enum case for NWConnection.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v107 + 96))(v108, v68);
    uint64_t v112 = v108;
    uint64_t v113 = v444;
    uint64_t v114 = v440;
    os_log_t v448 = (char *)*((void *)v444 + 4);
    uint64_t v446 = v444 + 32;
    ((void (*)(char *, char *, uint64_t))v448)(v438, v112, v440);
    v115 = v426;
    uint64_t v116 = (void (*)(void))*((void *)v113 + 2);
    v116();
    int v117 = (*((uint64_t (**)(_DWORD *, uint64_t))v113 + 11))(v115, v114);
    if (v117 == enum case for NWError.posix(_:))
    {
      (*((void (**)(_DWORD *, uint64_t))v113 + 12))(v115, v114);
      LODWORD(v448) = *v115;
      uint64_t v118 = v443;
      os_log_t v119 = v424;
      os_log_t v120 = v437;
      uint64_t v121 = v451;
      (*(void (**)(char *, os_log_t, uint64_t))(v443 + 16))(v424, v437, v451);
      uint64_t v122 = (uint64_t)v120;
      uint64_t v123 = v421;
      sub_10049BD9C(v122, v421, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v124 = v422;
      sub_10049BD9C(v123, v422, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_10049BD04(v123, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v125 = sub_1005E0EB0();
      os_log_type_t v126 = sub_1005E25C0();
      if (os_log_type_enabled(v125, v126))
      {
        uint64_t v127 = swift_slowAlloc();
        os_log_t v458 = (os_log_t)swift_slowAlloc();
        *(_DWORD *)uint64_t v127 = 68158466;
        LODWORD(v457) = 2;
        sub_1005E2960();
        *(_WORD *)(v127 + 8) = 256;
        uint64_t v128 = v124;
        uint64_t v129 = v124 + *(int *)(v425 + 20);
        LOBYTE(v457) = *(unsigned char *)v129;
        sub_1005E2960();
        *(_WORD *)(v127 + 11) = 2082;
        uint64_t v130 = ConnectionID.debugDescription.getter(*(unsigned int *)(v129 + 4));
        uint64_t v457 = sub_100481E54(v130, v131, (uint64_t *)&v458);
        sub_1005E2960();
        uint64_t v68 = v449;
        swift_bridgeObjectRelease();
        sub_10049BD04(v128, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v127 + 21) = 1024;
        LODWORD(v457) = sub_1005E1040();
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v125, v126, "[%.*hhx-%{public}s] state: waiting, POSIX %{darwin.errno}d", (uint8_t *)v127, 0x1Bu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v443 + 8))(v424, v451);
        (*((void (**)(char *, uint64_t))v444 + 1))(v438, v440);
        uint64_t v132 = (uint64_t)v434;
        uint64_t v133 = v456;
LABEL_59:
        uint64_t v157 = (uint64_t)v435;
LABEL_60:
        uint64_t v158 = v436;
        goto LABEL_83;
      }

      sub_10049BD04(v124, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v121);
      (*((void (**)(char *, uint64_t))v113 + 1))(v438, v114);
      uint64_t v132 = (uint64_t)v434;
      uint64_t v133 = v456;
LABEL_46:
      uint64_t v157 = (uint64_t)v435;
      uint64_t v158 = v436;
      uint64_t v68 = v449;
      goto LABEL_83;
    }
    if (v117 == enum case for NWError.dns(_:))
    {
      unint64_t v161 = v418;
      os_log_t v162 = v437;
      (*(void (**)(char *, os_log_t, uint64_t))(v443 + 16))(v418, v437, v451);
      uint64_t v163 = (uint64_t)v162;
      uint64_t v164 = v409;
      sub_10049BD9C(v163, v409, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v165 = v412;
      sub_10049BD9C(v164, v412, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_10049BD04(v164, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      os_log_t v166 = v414;
      uint64_t v167 = v438;
      ((void (*)(char *, char *, uint64_t))v116)(v414, v438, v114);
      unint64_t v168 = v419;
      ((void (*)(char *, char *, uint64_t))v116)(v419, v166, v114);
      uint64_t v445 = (void (*)(char *, uint64_t))*((void *)v444 + 1);
      v445(v166, v114);
      uint64_t v169 = v114;
      uint64_t v170 = sub_1005E0EB0();
      os_log_type_t v171 = sub_1005E25C0();
      int v172 = v171;
      if (!os_log_type_enabled(v170, v171))
      {

        v251 = v445;
        v445(v168, v169);
        sub_10049BD04(v165, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        (*(void (**)(char *, uint64_t))(v443 + 8))(v161, v451);
        v251(v167, v169);
        uint64_t v132 = (uint64_t)v434;
        uint64_t v107 = v455;
        uint64_t v133 = v456;
        goto LABEL_46;
      }
      uint64_t v173 = swift_slowAlloc();
      os_log_t v437 = v170;
      uint64_t v174 = v173;
      os_log_t v431 = (os_log_t)swift_slowAlloc();
      v444 = (char *)swift_slowAlloc();
      os_log_t v458 = (os_log_t)v444;
      *(_DWORD *)uint64_t v174 = 68158466;
      LODWORD(v457) = 2;
      sub_1005E2960();
      *(_WORD *)(v174 + 8) = 256;
      uint64_t v175 = v165 + *(int *)(v425 + 20);
      LOBYTE(v457) = *(unsigned char *)v175;
      sub_1005E2960();
      *(_WORD *)(v174 + 11) = 2082;
      LODWORD(v430) = v172;
      uint64_t v176 = ConnectionID.debugDescription.getter(*(unsigned int *)(v175 + 4));
      uint64_t v457 = sub_100481E54(v176, v177, (uint64_t *)&v458);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04(v165, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v174 + 21) = 2112;
      uint64_t v178 = v415;
      uint64_t v179 = v419;
      ((void (*)(char *, char *, uint64_t))v116)(v415, v419, v169);
      sub_100484968(&qword_100715F50, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      ((void (*)(uint64_t, char *, uint64_t))v448)(v180, v178, v169);
      uint64_t v181 = (objc_class *)sub_1005E06E0();
      uint64_t v68 = v449;
      swift_errorRelease();
      uint64_t v457 = (uint64_t)v181;
      sub_1005E2960();
      v431->isa = v181;
      uint64_t v182 = v445;
      v445(v179, v169);
      os_log_t v183 = v437;
      _os_log_impl((void *)&_mh_execute_header, v437, (os_log_type_t)v430, "[%.*hhx-%{public}s] state: waiting, DNS %@", (uint8_t *)v174, 0x1Fu);
      sub_10000566C(&qword_100717A10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v443 + 8))(v418, v451);
      v182(v438, v169);
    }
    else
    {
      uint64_t v218 = *(void (**)(char *, os_log_t, uint64_t))(v443 + 16);
      uint64_t v219 = (void (**)(char *, uint64_t))(v444 + 8);
      uint64_t v445 = (void (*)(char *, uint64_t))(v444 + 8);
      if (v117 != enum case for NWError.tls(_:))
      {
        os_log_t v274 = v437;
        v218(v404, v437, v451);
        uint64_t v275 = (uint64_t)v274;
        uint64_t v276 = v392;
        sub_10049BD9C(v275, v392, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_10049BD9C(v276, v405, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_10049BD04(v276, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v277 = v398;
        ((void (*)(char *, char *, uint64_t))v116)(v398, v438, v114);
        uint64_t v278 = v400;
        ((void (*)(char *, char *, uint64_t))v116)(v400, v277, v114);
        v444 = (char *)*v219;
        ((void (*)(char *, uint64_t))v444)(v277, v114);
        uint64_t v279 = v114;
        v280 = sub_1005E0EB0();
        os_log_type_t v281 = sub_1005E25C0();
        int v282 = v281;
        BOOL v283 = os_log_type_enabled(v280, v281);
        uint64_t v68 = v449;
        if (v283)
        {
          uint64_t v284 = swift_slowAlloc();
          os_log_t v431 = v280;
          uint64_t v285 = v284;
          uint64_t v430 = swift_slowAlloc();
          os_log_t v437 = (os_log_t)swift_slowAlloc();
          os_log_t v458 = v437;
          *(_DWORD *)uint64_t v285 = 68158466;
          LODWORD(v457) = 2;
          sub_1005E2960();
          *(_WORD *)(v285 + 8) = 256;
          uint64_t v286 = v68;
          uint64_t v287 = v405;
          uint64_t v288 = v405 + *(int *)(v425 + 20);
          LOBYTE(v457) = *(unsigned char *)v288;
          sub_1005E2960();
          *(_WORD *)(v285 + 11) = 2082;
          LODWORD(v429) = v282;
          uint64_t v289 = ConnectionID.debugDescription.getter(*(unsigned int *)(v288 + 4));
          uint64_t v457 = sub_100481E54(v289, v290, (uint64_t *)&v458);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_10049BD04(v287, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          *(_WORD *)(v285 + 21) = 2112;
          uint64_t v291 = v415;
          ((void (*)(char *, char *, uint64_t))v116)(v415, v278, v279);
          sub_100484968(&qword_100715F50, (void (*)(uint64_t))&type metadata accessor for NWError);
          swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v448)(v292, v291, v279);
          uint64_t v293 = sub_1005E06E0();
          uint64_t v68 = v286;
          uint64_t v107 = v455;
          swift_errorRelease();
          uint64_t v457 = v293;
          sub_1005E2960();
          v430->isa = (Class)v293;
          uint64_t v294 = (void (*)(char *, uint64_t))v444;
          ((void (*)(char *, uint64_t))v444)(v278, v279);
          os_log_t v295 = v431;
          _os_log_impl((void *)&_mh_execute_header, v431, (os_log_type_t)v429, "[%.*hhx-%{public}s] state: waiting, %@", (uint8_t *)v285, 0x1Fu);
          sub_10000566C(&qword_100717A10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v294 = (void (*)(char *, uint64_t))v444;
          ((void (*)(char *, uint64_t))v444)(v278, v279);
          sub_10049BD04(v405, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        }
        (*(void (**)(char *, uint64_t))(v443 + 8))(v404, v451);
        v294(v438, v279);
        uint64_t v132 = (uint64_t)v434;
        uint64_t v133 = v456;
        uint64_t v157 = (uint64_t)v435;
        v294((char *)v426, v279);
        goto LABEL_60;
      }
      os_log_t v220 = v437;
      v218(v403, v437, v451);
      uint64_t v221 = v391;
      sub_10049BD9C((uint64_t)v220, v391, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v222 = v395;
      sub_10049BD9C(v221, v395, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_10049BD04(v221, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v223 = v396;
      unint64_t v224 = v438;
      ((void (*)(char *, char *, uint64_t))v116)(v396, v438, v114);
      ((void (*)(char *, char *, uint64_t))v116)(v407, v223, v114);
      v225 = *v219;
      (*v219)(v223, v114);
      uint64_t v226 = v114;
      unint64_t v227 = sub_1005E0EB0();
      os_log_type_t v228 = sub_1005E25C0();
      int v229 = v228;
      BOOL v230 = os_log_type_enabled(v227, v228);
      uint64_t v68 = v449;
      if (v230)
      {
        uint64_t v231 = swift_slowAlloc();
        os_log_t v437 = v227;
        uint64_t v232 = v231;
        os_log_t v431 = (os_log_t)swift_slowAlloc();
        v444 = (char *)swift_slowAlloc();
        os_log_t v458 = (os_log_t)v444;
        *(_DWORD *)uint64_t v232 = 68158466;
        LODWORD(v457) = 2;
        sub_1005E2960();
        *(_WORD *)(v232 + 8) = 256;
        uint64_t v233 = v222 + *(int *)(v425 + 20);
        LOBYTE(v457) = *(unsigned char *)v233;
        sub_1005E2960();
        *(_WORD *)(v232 + 11) = 2082;
        LODWORD(v430) = v229;
        uint64_t v234 = ConnectionID.debugDescription.getter(*(unsigned int *)(v233 + 4));
        uint64_t v457 = sub_100481E54(v234, v235, (uint64_t *)&v458);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10049BD04(v222, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v232 + 21) = 2112;
        uint64_t v236 = v415;
        uint64_t v237 = v407;
        ((void (*)(char *, char *, uint64_t))v116)(v415, v407, v226);
        sub_100484968(&qword_100715F50, (void (*)(uint64_t))&type metadata accessor for NWError);
        swift_allocError();
        ((void (*)(uint64_t, char *, uint64_t))v448)(v238, v236, v226);
        uint64_t v239 = (objc_class *)sub_1005E06E0();
        uint64_t v68 = v449;
        swift_errorRelease();
        uint64_t v457 = (uint64_t)v239;
        sub_1005E2960();
        v431->isa = v239;
        v225(v237, v226);
        os_log_t v240 = v437;
        _os_log_impl((void *)&_mh_execute_header, v437, (os_log_type_t)v430, "[%.*hhx-%{public}s] state: waiting, TLS %@", (uint8_t *)v232, 0x1Fu);
        sub_10000566C(&qword_100717A10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v443 + 8))(v403, v451);
        v225(v438, v226);
      }
      else
      {

        v225(v407, v226);
        sub_10049BD04(v222, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        (*(void (**)(char *, uint64_t))(v443 + 8))(v403, v451);
        v225(v224, v226);
      }
    }
    uint64_t v132 = (uint64_t)v434;
    uint64_t v107 = v455;
    uint64_t v133 = v456;
    goto LABEL_59;
  }
  if (v111 == enum case for NWConnection.State.failed(_:))
  {
    (*(void (**)(char *, uint64_t))(v107 + 96))(v108, v68);
    char v134 = v444;
    os_log_t v135 = v108;
    uint64_t v136 = v444 + 32;
    uint64_t v137 = (void (*)(os_log_t, char *, uint64_t))*((void *)v444 + 4);
    os_log_t v138 = v431;
    uint64_t v139 = v440;
    v137(v431, v135, v440);
    uint64_t v140 = (char *)*((void *)v134 + 2);
    uint64_t v141 = v423;
    os_log_t v448 = v134 + 16;
    uint64_t v446 = v140;
    ((void (*)(char *, os_log_t, uint64_t))v140)(v423, v138, v139);
    int v142 = (*((uint64_t (**)(char *, uint64_t))v134 + 11))(v141, v139);
    uint64_t v143 = v443;
    if (v142 == enum case for NWError.posix(_:))
    {
      (*((void (**)(char *, uint64_t))v134 + 12))(v141, v139);
      uint64_t v144 = v417;
      os_log_t v145 = v437;
      uint64_t v146 = v451;
      (*(void (**)(char *, os_log_t, uint64_t))(v143 + 16))(v417, v437, v451);
      uint64_t v147 = (uint64_t)v145;
      uint64_t v148 = v411;
      sub_10049BD9C(v147, v411, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v149 = v413;
      sub_10049BD9C(v148, v413, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_10049BD04(v148, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v150 = sub_1005E0EB0();
      os_log_type_t v151 = sub_1005E25A0();
      if (os_log_type_enabled(v150, v151))
      {
        uint64_t v152 = swift_slowAlloc();
        os_log_t v458 = (os_log_t)swift_slowAlloc();
        *(_DWORD *)uint64_t v152 = 68158466;
        LODWORD(v457) = 2;
        sub_1005E2960();
        *(_WORD *)(v152 + 8) = 256;
        uint64_t v153 = v149 + *(int *)(v425 + 20);
        LOBYTE(v457) = *(unsigned char *)v153;
        sub_1005E2960();
        *(_WORD *)(v152 + 11) = 2082;
        uint64_t v154 = ConnectionID.debugDescription.getter(*(unsigned int *)(v153 + 4));
        uint64_t v457 = sub_100481E54(v154, v155, (uint64_t *)&v458);
        sub_1005E2960();
        uint64_t v68 = v449;
        swift_bridgeObjectRelease();
        sub_10049BD04(v149, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v152 + 21) = 1024;
        LODWORD(v457) = sub_1005E1040();
        sub_1005E2960();
        _os_log_impl((void *)&_mh_execute_header, v150, v151, "[%.*hhx-%{public}s] state: failed, POSIX %{darwin.errno}d", (uint8_t *)v152, 0x1Bu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v443 + 8))(v417, v451);
        uint64_t v132 = (uint64_t)v434;
        uint64_t v156 = v456;
        uint64_t v157 = (uint64_t)v435;
        uint64_t v158 = v436;
        uint64_t v159 = v440;
        uint64_t v160 = (uint64_t)v420;
      }
      else
      {
        sub_10049BD04(v149, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v146);
        uint64_t v132 = (uint64_t)v434;
        uint64_t v156 = v456;
        uint64_t v157 = (uint64_t)v435;
        uint64_t v158 = v436;
        uint64_t v159 = v440;
        uint64_t v160 = (uint64_t)v420;
        uint64_t v68 = v449;
      }
    }
    else
    {
      v438 = v136;
      uint64_t v445 = (void (*)(char *, uint64_t))v137;
      if (v142 == enum case for NWError.dns(_:))
      {
        os_log_t v197 = v437;
        (*(void (**)(char *, os_log_t, uint64_t))(v443 + 16))(v406, v437, v451);
        uint64_t v198 = (uint64_t)v197;
        uint64_t v199 = v393;
        sub_10049BD9C(v198, v393, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v200 = v397;
        sub_10049BD9C(v199, v397, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_10049BD04(v199, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v201 = v399;
        uint64_t v202 = v139;
        uint64_t v203 = v139;
        uint64_t v204 = (void (*)(char *, char *, uint64_t))v446;
        ((void (*)(char *, os_log_t, uint64_t))v446)(v399, v431, v202);
        uint64_t v205 = v401;
        v204(v401, v201, v203);
        os_log_t v437 = (os_log_t)*((void *)v444 + 1);
        ((void (*)(char *, uint64_t))v437)(v201, v203);
        uint64_t v159 = v203;
        uint64_t v206 = sub_1005E0EB0();
        os_log_type_t v207 = sub_1005E25A0();
        LODWORD(v430) = v207;
        BOOL v208 = os_log_type_enabled(v206, v207);
        uint64_t v68 = v449;
        if (!v208)
        {
          sub_10049BD04(v200, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          ((void (*)(char *, uint64_t))v437)(v205, v159);

          (*(void (**)(char *, uint64_t))(v143 + 8))(v406, v451);
          uint64_t v132 = (uint64_t)v434;
          uint64_t v156 = v456;
          unint64_t v307 = (void (*)(char *, os_log_t, uint64_t))v204;
          uint64_t v157 = (uint64_t)v435;
          uint64_t v158 = v436;
          uint64_t v160 = (uint64_t)v420;
          v307(v420, v431, v159);
LABEL_79:
          type metadata accessor for ConnectionEvent.FailureReason(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_10000566C(&qword_100716630);
          unint64_t v345 = (*(unsigned __int8 *)(v433 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v433 + 80);
          uint64_t v346 = swift_allocObject();
          *(_OWORD *)(v346 + 16) = xmmword_1005F6670;
          sub_10049BD9C(v160, v346 + v345, type metadata accessor for ConnectionEvent);
          if (swift_unknownObjectWeakLoadStrong())
          {
            sub_10047A688(v346);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v347 = v440;
          uint64_t v133 = v156;
          uint64_t v107 = v455;
          sub_10049BD04(v160, type metadata accessor for ConnectionEvent);
          (*((void (**)(os_log_t, uint64_t))v444 + 1))(v431, v347);
          goto LABEL_83;
        }
        uint64_t v209 = swift_slowAlloc();
        os_log_t v428 = v206;
        uint64_t v210 = v209;
        uint64_t v426 = (void *)swift_slowAlloc();
        os_log_t v429 = (os_log_t)swift_slowAlloc();
        os_log_t v458 = v429;
        *(_DWORD *)uint64_t v210 = 68158466;
        LODWORD(v457) = 2;
        sub_1005E2960();
        *(_WORD *)(v210 + 8) = 256;
        uint64_t v211 = v200 + *(int *)(v425 + 20);
        LOBYTE(v457) = *(unsigned char *)v211;
        sub_1005E2960();
        *(_WORD *)(v210 + 11) = 2082;
        uint64_t v212 = ConnectionID.debugDescription.getter(*(unsigned int *)(v211 + 4));
        uint64_t v457 = sub_100481E54(v212, v213, (uint64_t *)&v458);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10049BD04(v200, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v210 + 21) = 2112;
        uint64_t v214 = v415;
        v204(v415, v205, v159);
        sub_100484968(&qword_100715F50, (void (*)(uint64_t))&type metadata accessor for NWError);
        swift_allocError();
        ((void (*)(uint64_t, char *, uint64_t))v445)(v215, v214, v159);
        uint64_t v216 = sub_1005E06E0();
        uint64_t v68 = v449;
        swift_errorRelease();
        uint64_t v457 = v216;
        sub_1005E2960();
        *uint64_t v426 = v216;
        ((void (*)(char *, uint64_t))v437)(v205, v159);
        os_log_t v217 = v428;
        _os_log_impl((void *)&_mh_execute_header, v428, (os_log_type_t)v430, "[%.*hhx-%{public}s] state: failed, DNS %@", (uint8_t *)v210, 0x1Fu);
        sub_10000566C(&qword_100717A10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v143 + 8))(v406, v451);
      }
      else
      {
        char v252 = *(void (**)(char *, os_log_t, uint64_t))(v443 + 16);
        uint64_t v253 = (os_log_t *)(v444 + 8);
        uint64_t v68 = v449;
        if (v142 != enum case for NWError.tls(_:))
        {
          os_log_t v308 = v437;
          uint64_t v309 = v451;
          v252(v389, v437, v451);
          uint64_t v310 = (uint64_t)v308;
          uint64_t v311 = v379;
          sub_10049BD9C(v310, v379, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          uint64_t v312 = v382;
          sub_10049BD9C(v311, v382, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          sub_10049BD04(v311, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v313 = v384;
          uint64_t v314 = (void (*)(char *, char *, uint64_t))v446;
          ((void (*)(char *, os_log_t, uint64_t))v446)(v384, v431, v139);
          uint64_t v315 = v387;
          v314(v387, v313, v139);
          os_log_t v437 = *v253;
          ((void (*)(char *, uint64_t))v437)(v313, v139);
          uint64_t v159 = v139;
          uint64_t v316 = sub_1005E0EB0();
          os_log_type_t v317 = sub_1005E25A0();
          int v318 = v317;
          if (os_log_type_enabled(v316, v317))
          {
            uint64_t v319 = swift_slowAlloc();
            os_log_t v429 = v316;
            uint64_t v320 = v319;
            os_log_t v428 = (os_log_t)swift_slowAlloc();
            uint64_t v430 = swift_slowAlloc();
            os_log_t v458 = v430;
            *(_DWORD *)uint64_t v320 = 68158466;
            LODWORD(v457) = 2;
            sub_1005E2960();
            *(_WORD *)(v320 + 8) = 256;
            uint64_t v321 = v68;
            uint64_t v322 = v312 + *(int *)(v425 + 20);
            LOBYTE(v457) = *(unsigned char *)v322;
            sub_1005E2960();
            *(_WORD *)(v320 + 11) = 2082;
            LODWORD(v426) = v318;
            uint64_t v323 = ConnectionID.debugDescription.getter(*(unsigned int *)(v322 + 4));
            uint64_t v457 = sub_100481E54(v323, v324, (uint64_t *)&v458);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_10049BD04(v312, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            *(_WORD *)(v320 + 21) = 2112;
            os_log_t v325 = v415;
            uint64_t v326 = v387;
            v314(v415, v387, v159);
            sub_100484968(&qword_100715F50, (void (*)(uint64_t))&type metadata accessor for NWError);
            swift_allocError();
            ((void (*)(uint64_t, char *, uint64_t))v445)(v327, v325, v159);
            uint64_t v328 = (objc_class *)sub_1005E06E0();
            uint64_t v68 = v321;
            swift_errorRelease();
            uint64_t v457 = (uint64_t)v328;
            sub_1005E2960();
            v428->isa = v328;
            uint64_t v329 = v326;
            os_log_t v330 = v437;
            ((void (*)(char *, uint64_t))v437)(v329, v159);
            os_log_t v331 = v429;
            _os_log_impl((void *)&_mh_execute_header, v429, (os_log_type_t)v426, "[%.*hhx-%{public}s] state: failed, %@", (uint8_t *)v320, 0x1Fu);
            sub_10000566C(&qword_100717A10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v443 + 8))(v389, v451);
          }
          else
          {
            sub_10049BD04(v312, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            os_log_t v330 = v437;
            ((void (*)(char *, uint64_t))v437)(v315, v159);

            (*(void (**)(char *, uint64_t))(v443 + 8))(v389, v309);
          }
          uint64_t v156 = v456;
          uint64_t v157 = (uint64_t)v435;
          uint64_t v160 = (uint64_t)v420;
          ((void (*)(char *, uint64_t))v330)(v423, v159);
          uint64_t v132 = (uint64_t)v434;
          uint64_t v158 = v436;
          goto LABEL_78;
        }
        os_log_t v254 = v437;
        v252(v388, v437, v451);
        uint64_t v255 = (uint64_t)v254;
        uint64_t v256 = v378;
        sub_10049BD9C(v255, v378, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v257 = v139;
        uint64_t v258 = v381;
        sub_10049BD9C(v256, v381, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_10049BD04(v256, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v259 = v383;
        os_log_t v260 = (void (*)(char *, char *, uint64_t))v446;
        ((void (*)(char *, os_log_t, uint64_t))v446)(v383, v431, v257);
        uint64_t v261 = v385;
        v260(v385, v259, v257);
        os_log_t v262 = *v253;
        ((void (*)(char *, uint64_t))*v253)(v259, v257);
        uint64_t v159 = v257;
        uint64_t v263 = sub_1005E0EB0();
        os_log_type_t v264 = sub_1005E25A0();
        int v265 = v264;
        if (os_log_type_enabled(v263, v264))
        {
          uint64_t v266 = swift_slowAlloc();
          LODWORD(v429) = v265;
          uint64_t v267 = v266;
          uint64_t v430 = swift_slowAlloc();
          os_log_t v437 = (os_log_t)swift_slowAlloc();
          os_log_t v458 = v437;
          *(_DWORD *)uint64_t v267 = 68158466;
          LODWORD(v457) = 2;
          sub_1005E2960();
          *(_WORD *)(v267 + 8) = 256;
          uint64_t v268 = v258 + *(int *)(v425 + 20);
          LOBYTE(v457) = *(unsigned char *)v268;
          sub_1005E2960();
          *(_WORD *)(v267 + 11) = 2082;
          uint64_t v269 = ConnectionID.debugDescription.getter(*(unsigned int *)(v268 + 4));
          uint64_t v457 = sub_100481E54(v269, v270, (uint64_t *)&v458);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_10049BD04(v258, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          *(_WORD *)(v267 + 21) = 2112;
          uint64_t v271 = v415;
          ((void (*)(char *, char *, uint64_t))v446)(v415, v261, v257);
          sub_100484968(&qword_100715F50, (void (*)(uint64_t))&type metadata accessor for NWError);
          swift_allocError();
          ((void (*)(uint64_t, char *, uint64_t))v445)(v272, v271, v257);
          uint64_t v273 = sub_1005E06E0();
          uint64_t v68 = v449;
          swift_errorRelease();
          uint64_t v457 = v273;
          sub_1005E2960();
          v430->isa = (Class)v273;
          ((void (*)(char *, uint64_t))v262)(v261, v257);
          _os_log_impl((void *)&_mh_execute_header, v263, (os_log_type_t)v429, "[%.*hhx-%{public}s] state: failed, TLS %@", (uint8_t *)v267, 0x1Fu);
          sub_10000566C(&qword_100717A10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_10049BD04(v258, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          ((void (*)(char *, uint64_t))v262)(v261, v257);
        }

        (*(void (**)(char *, uint64_t))(v443 + 8))(v388, v451);
      }
      uint64_t v132 = (uint64_t)v434;
      uint64_t v156 = v456;
      uint64_t v157 = (uint64_t)v435;
      uint64_t v158 = v436;
      uint64_t v160 = (uint64_t)v420;
    }
LABEL_78:
    ((void (*)(uint64_t, os_log_t, uint64_t))v446)(v160, v431, v159);
    goto LABEL_79;
  }
  uint64_t v184 = v443;
  uint64_t v185 = v451;
  if (v111 == enum case for NWConnection.State.setup(_:))
  {
    uint64_t v186 = v416;
    os_log_t v187 = v437;
    (*(void (**)(char *, os_log_t, uint64_t))(v443 + 16))(v416, v437, v451);
    uint64_t v188 = (uint64_t)v187;
    uint64_t v189 = v408;
    sub_10049BD9C(v188, v408, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v190 = v410;
    sub_10049BD9C(v189, v410, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10049BD04(v189, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v191 = sub_1005E0EB0();
    os_log_type_t v192 = sub_1005E2590();
    if (os_log_type_enabled(v191, v192))
    {
      uint64_t v193 = swift_slowAlloc();
      os_log_t v458 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v193 = 68158210;
      LODWORD(v457) = 2;
      sub_1005E2960();
      *(_WORD *)(v193 + 8) = 256;
      uint64_t v194 = v190 + *(int *)(v425 + 20);
      LOBYTE(v457) = *(unsigned char *)v194;
      sub_1005E2960();
      *(_WORD *)(v193 + 11) = 2082;
      uint64_t v195 = ConnectionID.debugDescription.getter(*(unsigned int *)(v194 + 4));
      uint64_t v457 = sub_100481E54(v195, v196, (uint64_t *)&v458);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04(v190, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v191, v192, "[%.*hhx-%{public}s] state: setup", (uint8_t *)v193, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v184 + 8))(v416, v451);
    }
    else
    {
      sub_10049BD04(v190, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v184 + 8))(v186, v185);
    }
LABEL_62:
    uint64_t v132 = (uint64_t)v434;
    uint64_t v157 = (uint64_t)v435;
    uint64_t v158 = v436;
LABEL_63:
    uint64_t v107 = v455;
    uint64_t v133 = v456;
    goto LABEL_83;
  }
  if (v111 == enum case for NWConnection.State.preparing(_:))
  {
    os_log_t v241 = v437;
    (*(void (**)(char *, os_log_t, uint64_t))(v443 + 16))(v402, v437, v451);
    uint64_t v242 = (uint64_t)v241;
    uint64_t v243 = v390;
    sub_10049BD9C(v242, v390, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v244 = v394;
    sub_10049BD9C(v243, v394, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10049BD04(v243, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    os_log_t v245 = sub_1005E0EB0();
    os_log_type_t v246 = sub_1005E2590();
    if (os_log_type_enabled(v245, v246))
    {
      uint64_t v247 = swift_slowAlloc();
      os_log_t v458 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v247 = 68158210;
      LODWORD(v457) = 2;
      sub_1005E2960();
      *(_WORD *)(v247 + 8) = 256;
      uint64_t v248 = v244 + *(int *)(v425 + 20);
      LOBYTE(v457) = *(unsigned char *)v248;
      sub_1005E2960();
      *(_WORD *)(v247 + 11) = 2082;
      uint64_t v249 = ConnectionID.debugDescription.getter(*(unsigned int *)(v248 + 4));
      uint64_t v457 = sub_100481E54(v249, v250, (uint64_t *)&v458);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04(v244, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v245, v246, "[%.*hhx-%{public}s] state: preparing", (uint8_t *)v247, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v184 + 8))(v402, v451);
    }
    else
    {
      sub_10049BD04(v244, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v184 + 8))(v402, v185);
    }
    goto LABEL_62;
  }
  if (v111 == enum case for NWConnection.State.ready(_:))
  {
    os_log_t v296 = v386;
    os_log_t v297 = v437;
    (*(void (**)(char *, os_log_t, uint64_t))(v443 + 16))(v386, v437, v451);
    uint64_t v298 = (uint64_t)v297;
    uint64_t v299 = v377;
    sub_10049BD9C(v298, v377, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v300 = v380;
    sub_10049BD9C(v299, v380, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10049BD04(v299, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v301 = sub_1005E0EB0();
    os_log_type_t v302 = sub_1005E25C0();
    if (os_log_type_enabled(v301, v302))
    {
      uint64_t v303 = swift_slowAlloc();
      os_log_t v458 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v303 = 68158210;
      LODWORD(v457) = 2;
      sub_1005E2960();
      *(_WORD *)(v303 + 8) = 256;
      uint64_t v304 = v300 + *(int *)(v425 + 20);
      LOBYTE(v457) = *(unsigned char *)v304;
      sub_1005E2960();
      *(_WORD *)(v303 + 11) = 2082;
      uint64_t v305 = ConnectionID.debugDescription.getter(*(unsigned int *)(v304 + 4));
      uint64_t v457 = sub_100481E54(v305, v306, (uint64_t *)&v458);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04(v300, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v301, v302, "[%.*hhx-%{public}s] state: ready", (uint8_t *)v303, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v184 + 8))(v386, v451);
    }
    else
    {
      sub_10049BD04(v300, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v184 + 8))(v296, v185);
    }
    uint64_t v132 = (uint64_t)v434;
    uint64_t v157 = (uint64_t)v435;
    uint64_t v158 = v436;
    uint64_t v343 = swift_allocObject();
    swift_weakInit();
    uint64_t v344 = swift_allocObject();
    *(void *)(v344 + 16) = sub_10049C120;
    *(void *)(v344 + 24) = v343;
    swift_retain_n();
    sub_1005E11B0();
    swift_release_n();
    swift_release();
    goto LABEL_63;
  }
  uint64_t v332 = *(void (**)(char *, os_log_t, uint64_t))(v443 + 16);
  if (v111 == enum case for NWConnection.State.cancelled(_:))
  {
    os_log_t v333 = v437;
    v332(v375, v437, v451);
    uint64_t v334 = (uint64_t)v333;
    uint64_t v335 = v371;
    sub_10049BD9C(v334, v371, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v336 = v373;
    sub_10049BD9C(v335, v373, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10049BD04(v335, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v337 = sub_1005E0EB0();
    os_log_type_t v338 = sub_1005E2580();
    if (os_log_type_enabled(v337, v338))
    {
      uint64_t v339 = swift_slowAlloc();
      os_log_t v458 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v339 = 68158210;
      LODWORD(v457) = 2;
      sub_1005E2960();
      *(_WORD *)(v339 + 8) = 256;
      uint64_t v340 = v336 + *(int *)(v425 + 20);
      LOBYTE(v457) = *(unsigned char *)v340;
      sub_1005E2960();
      *(_WORD *)(v339 + 11) = 2082;
      uint64_t v341 = ConnectionID.debugDescription.getter(*(unsigned int *)(v340 + 4));
      uint64_t v457 = sub_100481E54(v341, v342, (uint64_t *)&v458);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04(v336, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v337, v338, "[%.*hhx-%{public}s] state: cancelled", (uint8_t *)v339, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v184 + 8))(v375, v451);
    }
    else
    {
      sub_10049BD04(v336, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v184 + 8))(v375, v185);
    }
    uint64_t v132 = (uint64_t)v434;
    uint64_t v157 = (uint64_t)v435;
    uint64_t v158 = v436;
    uint64_t v107 = v455;
    uint64_t v133 = v456;
    uint64_t v364 = (uint64_t)v370;
    type metadata accessor for ConnectionEvent.FailureReason(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_10000566C(&qword_100716630);
    unint64_t v365 = (*(unsigned __int8 *)(v433 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v433 + 80);
    uint64_t v366 = swift_allocObject();
    *(_OWORD *)(v366 + 16) = xmmword_1005F6670;
    sub_10049BD9C(v364, v366 + v365, type metadata accessor for ConnectionEvent);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10047A688(v366);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_10049BD04(v364, type metadata accessor for ConnectionEvent);
  }
  else
  {
    os_log_t v354 = v437;
    v332(v376, v437, v451);
    uint64_t v355 = (uint64_t)v354;
    uint64_t v356 = v372;
    sub_10049BD9C(v355, v372, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v357 = v374;
    sub_10049BD9C(v356, v374, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10049BD04(v356, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v358 = sub_1005E0EB0();
    os_log_type_t v359 = sub_1005E25A0();
    if (os_log_type_enabled(v358, v359))
    {
      uint64_t v360 = swift_slowAlloc();
      os_log_t v458 = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v360 = 68158210;
      LODWORD(v457) = 2;
      sub_1005E2960();
      *(_WORD *)(v360 + 8) = 256;
      uint64_t v361 = v357 + *(int *)(v425 + 20);
      LOBYTE(v457) = *(unsigned char *)v361;
      sub_1005E2960();
      *(_WORD *)(v360 + 11) = 2082;
      uint64_t v362 = ConnectionID.debugDescription.getter(*(unsigned int *)(v361 + 4));
      uint64_t v457 = sub_100481E54(v362, v363, (uint64_t *)&v458);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04(v357, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v358, v359, "[%.*hhx-%{public}s] state: <unknown>", (uint8_t *)v360, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v184 + 8))(v376, v451);
    }
    else
    {
      sub_10049BD04(v357, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v184 + 8))(v376, v185);
    }
    uint64_t v132 = (uint64_t)v434;
    uint64_t v157 = (uint64_t)v435;
    uint64_t v158 = v436;
    uint64_t v107 = v455;
    uint64_t v133 = v456;
    v439(v448, v68);
  }
LABEL_83:
  swift_beginAccess();
  sub_1000079E4(v158, v132, &qword_100716628);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v132, 1, v68) == 1)
  {
LABEL_84:
    uint64_t v348 = v441;
    uint64_t v349 = (void (*)(uint64_t, uint64_t, uint64_t))v450;
    ((void (*)(uint64_t, uint64_t))v450)(v441, v133);
    swift_storeEnumTagMultiPayload();
    sub_10000566C(&qword_100716630);
    unint64_t v350 = (*(unsigned __int8 *)(v433 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v433 + 80);
    uint64_t v351 = swift_allocObject();
    *(_OWORD *)(v351 + 16) = xmmword_1005F6670;
    sub_10049BD9C(v348, v351 + v350, type metadata accessor for ConnectionEvent);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10047A688(v351);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v353 = (uint64_t)v427;
    swift_release();
    sub_10049BD04(v441, type metadata accessor for ConnectionEvent);
    v349(v353, v133, v68);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v353, 0, 1, v68);
    swift_beginAccess();
    sub_10049C098(v353, v158);
    return sub_100007A48(v132, &qword_100716628);
  }
  sub_1000079E4(v132, v157, &qword_100716628);
  int v352 = v447(v157, v68);
  if (v352 == enum case for NWConnection.State.failed(_:))
  {
    swift_release();
    v439((char *)v157, v68);
  }
  else
  {
    if (v352 != enum case for NWConnection.State.cancelled(_:))
    {
      v439((char *)v157, v68);
      goto LABEL_84;
    }
    swift_release();
  }
  return sub_100007A48(v132, &qword_100716628);
}

uint64_t sub_100496768(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v84 = type metadata accessor for ConnectionEvent(0);
  uint64_t v85 = *(void *)(v84 - 8);
  __chkstk_darwin();
  uint64_t v86 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1005E10F0();
  uint64_t v81 = *(void (***)(char *, uint64_t))(v97 - 8);
  __chkstk_darwin();
  uint64_t v96 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1005E1120();
  uint64_t v98 = *(void *)(v102 - 8);
  __chkstk_darwin();
  int v101 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E1620();
  uint64_t v90 = *(void *)(v7 - 8);
  __chkstk_darwin();
  unsigned int v87 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v71 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v71 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v71 - v13;
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_10049BD9C(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v20, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  uint64_t v100 = v16;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v20, v15);
  uint64_t v88 = v2;
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
  os_log_t v95 = v14;
  uint64_t v22 = v14;
  uint64_t v23 = v87;
  v21(v22, a1, v7);
  uint64_t v99 = v12;
  v21(v12, a1, v7);
  v21(v10, a1, v7);
  uint64_t v83 = a1;
  v21(v23, a1, v7);
  uint64_t v24 = v18;
  uint64_t v25 = sub_1005E0EB0();
  int v26 = sub_1005E2580();
  if (os_log_type_enabled(v25, (os_log_type_t)v26))
  {
    int v75 = v26;
    os_log_t v77 = v25;
    uint64_t v78 = v10;
    uint64_t v80 = v24;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    uint64_t v106 = v74;
    *(_DWORD *)uint64_t v27 = 68159234;
    LODWORD(v103) = 2;
    sub_1005E2960();
    *(_WORD *)(v27 + 8) = 256;
    uint64_t v28 = v93 + *(int *)(v94 + 20);
    LOBYTE(v103) = *(unsigned char *)v28;
    sub_1005E2960();
    *(_WORD *)(v27 + 11) = 2082;
    uint64_t v29 = ConnectionID.debugDescription.getter(*(unsigned int *)(v28 + 4));
    uint64_t v103 = (void *)sub_100481E54(v29, v30, &v106);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 21) = 1024;
    uint64_t v31 = v95;
    int v32 = sub_1005E1600() & 1;
    uint64_t v34 = v90 + 8;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v90 + 8);
    uint64_t v79 = v7;
    uint64_t v73 = v33;
    v33(v31, v7);
    LODWORD(v103) = v32;
    sub_1005E2960();
    uint64_t v76 = v27;
    *(_WORD *)(v27 + 27) = 2082;
    uint64_t v35 = v99;
    uint64_t v36 = sub_1005E1610();
    int64_t v37 = *(void *)(v36 + 16);
    uint64_t v38 = v100;
    if (v37)
    {
      uint64_t v90 = v34;
      uint64_t v105 = _swiftEmptyArrayStorage;
      sub_1004B885C(0, v37, 0);
      uint64_t v94 = *(void *)(v98 + 16);
      unint64_t v39 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
      uint64_t v71 = v36;
      unint64_t v40 = v36 + v39;
      uint64_t v93 = *(void *)(v98 + 72);
      uint64_t v41 = (uint64_t (**)(char *, uint64_t))(v81 + 11);
      int v92 = enum case for NWInterface.InterfaceType.other(_:);
      int v91 = enum case for NWInterface.InterfaceType.wifi(_:);
      int v89 = enum case for NWInterface.InterfaceType.cellular(_:);
      int v82 = enum case for NWInterface.InterfaceType.wiredEthernet(_:);
      int v72 = enum case for NWInterface.InterfaceType.loopback(_:);
      ++v81;
      v98 += 16;
      uint64_t v42 = (void (**)(char *, uint64_t))(v98 - 8);
      os_log_t v95 = (char *)v15;
      do
      {
        ((void (*)(char *, unint64_t, uint64_t))v94)(v101, v40, v102);
        uint64_t v43 = v96;
        sub_1005E1110();
        int v44 = (*v41)(v43, v97);
        if (v44 == v92)
        {
          uint64_t v45 = (void *)0xE500000000000000;
          uint64_t v46 = 0x726568746FLL;
        }
        else if (v44 == v91)
        {
          uint64_t v45 = (void *)0xE400000000000000;
          uint64_t v46 = 1768319351;
        }
        else if (v44 == v89)
        {
          uint64_t v45 = (void *)0xE800000000000000;
          uint64_t v46 = 0x72616C756C6C6563;
        }
        else if (v44 == v82)
        {
          uint64_t v45 = (void *)0xE500000000000000;
          uint64_t v46 = 0x6465726977;
        }
        else if (v44 == v72)
        {
          uint64_t v45 = (void *)0xE800000000000000;
          uint64_t v46 = 0x6B636162706F6F6CLL;
        }
        else
        {
          (*v81)(v96, v97);
          uint64_t v45 = (void *)0xE100000000000000;
          uint64_t v46 = 45;
        }
        uint64_t v47 = v101;
        uint64_t v103 = (void *)sub_1005E1100();
        uint64_t v104 = v48;
        v107._countAndFlagsBits = 10272;
        v107._object = (void *)0xE200000000000000;
        sub_1005E1E30(v107);
        v108._countAndFlagsBits = v46;
        v108._object = v45;
        sub_1005E1E30(v108);
        swift_bridgeObjectRelease();
        v109._countAndFlagsBits = 41;
        v109._object = (void *)0xE100000000000000;
        sub_1005E1E30(v109);
        uint64_t v50 = v103;
        uint64_t v49 = v104;
        (*v42)(v47, v102);
        uint64_t v51 = v105;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004B885C(0, v51[2] + 1, 1);
          uint64_t v51 = v105;
        }
        unint64_t v53 = v51[2];
        unint64_t v52 = v51[3];
        if (v53 >= v52 >> 1)
        {
          sub_1004B885C(v52 > 1, v53 + 1, 1);
          uint64_t v51 = v105;
        }
        v51[2] = v53 + 1;
        uint64_t v54 = &v51[2 * v53];
        v54[4] = v50;
        v54[5] = v49;
        v40 += v93;
        --v37;
        uint64_t v15 = (uint64_t)v95;
        uint64_t v35 = v99;
        uint64_t v38 = v100;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v51 = _swiftEmptyArrayStorage;
    }
    uint64_t v56 = v76;
    uint64_t v103 = v51;
    sub_10000566C(&qword_100715740);
    sub_100007494((unint64_t *)&qword_100715748, &qword_100715740);
    uint64_t v57 = sub_1005E1A80();
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    uint64_t v103 = (void *)sub_100481E54(v57, v59, &v106);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    uint64_t v60 = v35;
    uint64_t v61 = v79;
    uint64_t v62 = v73;
    v73(v60, v79);
    *(_WORD *)(v56 + 37) = 1024;
    uint64_t v63 = v78;
    LODWORD(v57) = sub_1005E15E0() & 1;
    v62(v63, v61);
    LODWORD(v103) = v57;
    sub_1005E2960();
    *(_WORD *)(v56 + 43) = 1024;
    uint64_t v64 = v87;
    LODWORD(v57) = sub_1005E15F0() & 1;
    v62(v64, v61);
    LODWORD(v103) = v57;
    sub_1005E2960();
    os_log_t v65 = v77;
    _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v75, "[%.*hhx-%{public}s] Path did change. Constrained: %{BOOL}d, interfaces: %{public}s, IPv4: %{BOOL}d, IPv6: %{BOOL}d", (uint8_t *)v56, 0x31u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v80, v15);
  }
  else
  {
    uint64_t v55 = *(void (**)(char *, uint64_t))(v90 + 8);
    v55(v23, v7);
    v55(v10, v7);
    v55(v95, v7);
    swift_release_n();
    v55(v99, v7);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v24, v15);
  }
  uint64_t v66 = v86;
  uint64_t v67 = &_swiftEmptySetSingleton;
  uint64_t v103 = &_swiftEmptySetSingleton;
  if (sub_1005E1600())
  {
    sub_1004D8EE4();
    uint64_t v67 = v103;
  }
  *uint64_t v66 = v67;
  swift_storeEnumTagMultiPayload();
  sub_10000566C(&qword_100716630);
  unint64_t v68 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_1005F6670;
  sub_10049BD9C((uint64_t)v66, v69 + v68, type metadata accessor for ConnectionEvent);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10047A688(v69);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return sub_10049BD04((uint64_t)v66, type metadata accessor for ConnectionEvent);
}

uint64_t sub_1004973B4(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100497418((a1 & 1) == 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_100497418(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005E0ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_10049BD9C(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v10, v4);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v12 = sub_1005E0EB0();
  os_log_type_t v13 = sub_1005E25C0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v4;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc();
    int v22 = a1;
    uint64_t v25 = v16;
    *(_DWORD *)uint64_t v15 = 68158466;
    LODWORD(v24) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v17 = v11 + *(int *)(v8 + 20);
    LOBYTE(v24) = *(unsigned char *)v17;
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v18 = ConnectionID.debugDescription.getter(*(unsigned int *)(v17 + 4));
    uint64_t v24 = sub_100481E54(v18, v19, &v25);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 21) = 1024;
    LODWORD(v24) = (v22 & 1) == 0;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%.*hhx-%{public}s] Is viable: %{BOOL}d", (uint8_t *)v15, 0x1Bu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v23);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_10049774C(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1004977AC(a1 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1004977AC(char a1)
{
  uint64_t v2 = v1;
  int v33 = a1 & 1;
  uint64_t v32 = type metadata accessor for ConnectionEvent(0);
  uint64_t v3 = *(void *)(v32 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_10049BD9C(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v31 = v6;
  v14(v9, v12, v6);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v15 = sub_1005E0EB0();
  os_log_type_t v16 = sub_1005E2580();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v29 = v3;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v30 = v2;
    uint64_t v35 = v19;
    *(_DWORD *)uint64_t v18 = 68158466;
    LODWORD(v34) = 2;
    sub_1005E2960();
    *(_WORD *)(v18 + 8) = 256;
    uint64_t v20 = v13 + *(int *)(v10 + 20);
    LOBYTE(v34) = *(unsigned char *)v20;
    sub_1005E2960();
    *(_WORD *)(v18 + 11) = 2082;
    uint64_t v21 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20 + 4));
    uint64_t v34 = sub_100481E54(v21, v22, &v35);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 21) = 1024;
    char v23 = v33;
    LODWORD(v34) = v33;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%.*hhx-%{public}s] Better path available: %{BOOL}d", (uint8_t *)v18, 0x1Bu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v29;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
    char v24 = v23;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
    char v24 = v33;
  }
  *uint64_t v5 = v24;
  swift_storeEnumTagMultiPayload();
  sub_10000566C(&qword_100716630);
  unint64_t v25 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1005F6670;
  sub_10049BD9C((uint64_t)v5, v26 + v25, type metadata accessor for ConnectionEvent);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10047A688(v26);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return sub_10049BD04((uint64_t)v5, type metadata accessor for ConnectionEvent);
}

uint64_t sub_100497C38()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + OBJC_IVAR____TtC15IMAP2Connection10Connection_lastMessageTime) = static MonotonicTime.now()();
    return swift_release();
  }
  return result;
}

uint64_t sub_100497C9C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100497D10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v92 = a1;
  uint64_t v3 = type metadata accessor for ConnectionEvent(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  uint64_t v87 = v4;
  __chkstk_darwin(v3);
  uint64_t v88 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v90 = v6;
  uint64_t v91 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  int v89 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v83 = (char *)&v76 - v10;
  uint64_t v11 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v84 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v80 = (uint64_t *)((char *)&v76 - v14);
  uint64_t v15 = sub_10000566C(&qword_100716650);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005E1650();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  int v82 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v85 = (char *)&v76 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v76 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v76 - v28;
  __chkstk_darwin(v27);
  uint64_t v94 = (char *)&v76 - v29;
  uint64_t v30 = sub_1005E1850();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  int v33 = (uint64_t *)((char *)&v76 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = *(void **)&v2[OBJC_IVAR____TtC15IMAP2Connection10Connection_queue];
  *int v33 = v34;
  (*(void (**)(void *, void, uint64_t))(v31 + 104))(v33, enum case for DispatchPredicate.onQueue(_:), v30);
  id v35 = v34;
  LOBYTE(v34) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v31 + 8))(v33, v30);
  if (v34)
  {
    *(void *)&v2[OBJC_IVAR____TtC15IMAP2Connection10Connection_lastMessageTime] = static MonotonicTime.now()();
    sub_1000079E4(v92, (uint64_t)v17, &qword_100716650);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
    {
      return sub_100007A48((uint64_t)v17, &qword_100716650);
    }
    else
    {
      uint64_t v79 = v11;
      int64_t v37 = v2;
      uint64_t v38 = v19;
      unint64_t v39 = v94;
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      v78(v94, v17, v18);
      uint64_t v41 = (char *)(v19 + 16);
      unint64_t v40 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      uint64_t v42 = v93;
      v40(v93, v39, v18);
      uint64_t v92 = v38;
      int v43 = (*(uint64_t (**)(char *, uint64_t))(v38 + 88))(v42, v18);
      uint64_t v81 = v40;
      if (v43 == enum case for NWError.posix(_:)
        && (v40(v26, v93, v18), (*(void (**)(char *, uint64_t))(v92 + 96))(v26, v18), *(_DWORD *)v26 == 89))
      {
        int v89 = v41;
        int v44 = v37;
        uint64_t v45 = &v37[OBJC_IVAR____TtC15IMAP2Connection10Connection_logger];
        uint64_t v46 = v80;
        sub_10049BD9C((uint64_t)&v37[OBJC_IVAR____TtC15IMAP2Connection10Connection_logger], (uint64_t)v80, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v47 = v90;
        uint64_t v48 = v91;
        uint64_t v49 = v83;
        (*(void (**)(char *, void *, uint64_t))(v91 + 32))(v83, v46, v90);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v50 = sub_1005E0EB0();
        os_log_type_t v51 = sub_1005E25C0();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = swift_slowAlloc();
          v96[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v52 = 68158210;
          LODWORD(v95) = 2;
          uint64_t v85 = v44;
          sub_1005E2960();
          *(_WORD *)(v52 + 8) = 256;
          unint64_t v53 = &v45[*(int *)(v79 + 20)];
          LOBYTE(v95) = *v53;
          sub_1005E2960();
          *(_WORD *)(v52 + 11) = 2082;
          uint64_t v54 = ConnectionID.debugDescription.getter(*((unsigned int *)v53 + 1));
          uint64_t v95 = sub_100481E54(v54, v55, v96);
          sub_1005E2960();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "[%.*hhx-%{public}s] Failed to send data (connection is cancelled)", (uint8_t *)v52, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v48 + 8))(v83, v90);
        }
        else
        {

          swift_release_n();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
        }
        uint64_t v69 = v92;
        uint64_t v71 = v81;
      }
      else
      {
        uint64_t v56 = &v37[OBJC_IVAR____TtC15IMAP2Connection10Connection_logger];
        sub_10049BD9C((uint64_t)&v37[OBJC_IVAR____TtC15IMAP2Connection10Connection_logger], v84, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v57 = v90;
        unint64_t v58 = v89;
        (*(void (**)(void))(v91 + 32))();
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        unint64_t v59 = v85;
        v40(v85, v94, v18);
        uint64_t v60 = sub_1005E0EB0();
        os_log_type_t v61 = sub_1005E25A0();
        LODWORD(v84) = v61;
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = swift_slowAlloc();
          uint64_t v80 = (void *)swift_slowAlloc();
          uint64_t v83 = (char *)swift_slowAlloc();
          v96[0] = (uint64_t)v83;
          *(_DWORD *)uint64_t v62 = 68158466;
          LODWORD(v95) = 2;
          os_log_t v77 = v60;
          sub_1005E2960();
          *(_WORD *)(v62 + 8) = 256;
          uint64_t v63 = &v56[*(int *)(v79 + 20)];
          LOBYTE(v95) = *v63;
          sub_1005E2960();
          *(_WORD *)(v62 + 11) = 2082;
          uint64_t v64 = ConnectionID.debugDescription.getter(*((unsigned int *)v63 + 1));
          uint64_t v95 = sub_100481E54(v64, v65, v96);
          sub_1005E2960();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v62 + 21) = 2112;
          uint64_t v66 = v82;
          v81(v82, v59, v18);
          sub_100484968(&qword_100715F50, (void (*)(uint64_t))&type metadata accessor for NWError);
          swift_allocError();
          v78(v67, v66, v18);
          uint64_t v68 = sub_1005E06E0();
          swift_errorRelease();
          uint64_t v95 = v68;
          sub_1005E2960();
          *uint64_t v80 = v68;
          uint64_t v69 = v92;
          (*(void (**)(char *, uint64_t))(v92 + 8))(v59, v18);
          os_log_t v70 = v77;
          _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v84, "[%.*hhx-%{public}s] Failed to send data: %@", (uint8_t *)v62, 0x1Fu);
          sub_10000566C(&qword_100717A10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v91 + 8))(v89, v90);
        }
        else
        {
          swift_release_n();
          uint64_t v69 = v92;
          (*(void (**)(char *, uint64_t))(v92 + 8))(v59, v18);

          (*(void (**)(char *, uint64_t))(v91 + 8))(v58, v57);
        }
        uint64_t v71 = v81;
      }
      int v72 = *(void (**)(char *, uint64_t))(v69 + 8);
      v72(v93, v18);
      uint64_t v73 = (uint64_t)v88;
      v71(v88, v94, v18);
      type metadata accessor for ConnectionEvent.FailureReason(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_10000566C(&qword_100716630);
      unint64_t v74 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = xmmword_1005F6670;
      sub_10049BD9C(v73, v75 + v74, type metadata accessor for ConnectionEvent);
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10047A688(v75);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_10049BD04(v73, type metadata accessor for ConnectionEvent);
      sub_1005E12F0();
      return ((uint64_t (*)(char *, uint64_t))v72)(v94, v18);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100498910(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  if (a2)
  {
    v18((char *)&v32 - v16, a3, v11);
    sub_10049BD9C(a3, (uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v19 = sub_1005E0EB0();
    os_log_type_t v20 = sub_1005E25C0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 68158210;
      LODWORD(v32) = 2;
      sub_1005E2960();
      *(_WORD *)(v21 + 8) = 256;
      uint64_t v22 = &v10[*(int *)(v5 + 20)];
      LOBYTE(v32) = *v22;
      sub_1005E2960();
      *(_WORD *)(v21 + 11) = 2082;
      uint64_t v23 = ConnectionID.debugDescription.getter(*((unsigned int *)v22 + 1));
      uint64_t v32 = sub_100481E54(v23, v24, &v33);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04((uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%.*hhx-%{public}s] Did request opportunistic STARTTLS", (uint8_t *)v21, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10049BD04((uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    v18(v15, a3, v11);
    sub_10049BD9C(a3, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v25 = sub_1005E0EB0();
    os_log_type_t v26 = sub_1005E25C0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 68158210;
      LODWORD(v32) = 2;
      sub_1005E2960();
      *(_WORD *)(v27 + 8) = 256;
      uint64_t v28 = &v8[*(int *)(v5 + 20)];
      LOBYTE(v32) = *v28;
      sub_1005E2960();
      *(_WORD *)(v27 + 11) = 2082;
      uint64_t v29 = ConnectionID.debugDescription.getter(*((unsigned int *)v28 + 1));
      uint64_t v32 = sub_100481E54(v29, v30, &v33);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10049BD04((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%.*hhx-%{public}s] Did request STARTTLS", (uint8_t *)v27, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10049BD04((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_100498E1C(char a1)
{
  uint64_t v2 = type metadata accessor for ConnectionEvent(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      swift_storeEnumTagMultiPayload();
      sub_10000566C(&qword_100716630);
      unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1005F6670;
      sub_10049BD9C((uint64_t)v6, v8 + v7, type metadata accessor for ConnectionEvent);
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10047A688(v8);
        swift_unknownObjectRelease();
      }
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_release();
      return sub_10049BD04((uint64_t)v6, type metadata accessor for ConnectionEvent);
    }
  }
  return result;
}

uint64_t sub_100498FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(type metadata accessor for ConnectionEvent(0) - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100716650);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005E1650();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + OBJC_IVAR____TtC15IMAP2Connection10Connection_lastMessageTime) = static MonotonicTime.now()();
    if (a1 != 1) {
      sub_1004993F8(a1);
    }
    sub_1000079E4(a4, (uint64_t)v10, &qword_100716650);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_100007A48((uint64_t)v10, &qword_100716650);
      uint64_t v16 = swift_allocObject();
      swift_weakInit();
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_10049C120;
      *(void *)(v17 + 24) = v16;
      swift_retain_n();
      sub_1005E11B0();
      swift_release();
      swift_release_n();
      return swift_release();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v14, v11);
      type metadata accessor for ConnectionEvent.FailureReason(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_10000566C(&qword_100716630);
      unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1005F6670;
      sub_10049BD9C((uint64_t)v8, v19 + v18, type metadata accessor for ConnectionEvent);
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10047A688(v19);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_10049BD04((uint64_t)v8, type metadata accessor for ConnectionEvent);
      sub_1005E12F0();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  return result;
}

uint64_t sub_1004993F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConnectionEvent(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v9 = (char *)v25 - v8;
  uint64_t v28 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v11 = (char *)v25 - v10;
  if (a1) {
    return sub_100499C04(a1);
  }
  v25[1] = v2;
  os_log_type_t v26 = v5;
  uint64_t v27 = v3;
  uint64_t v13 = v29 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_10049BD9C(v29 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v25 - v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v11, v6);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v14 = sub_1005E0EB0();
  uint64_t v15 = v6;
  os_log_type_t v16 = sub_1005E25C0();
  if (os_log_type_enabled(v14, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 68158210;
    LODWORD(v31) = 2;
    sub_1005E2960();
    *(_WORD *)(v17 + 8) = 256;
    uint64_t v18 = v13 + *(int *)(v28 + 20);
    LOBYTE(v31) = *(unsigned char *)v18;
    sub_1005E2960();
    *(_WORD *)(v17 + 11) = 2082;
    uint64_t v19 = ConnectionID.debugDescription.getter(*(unsigned int *)(v18 + 4));
    uint64_t v31 = sub_100481E54(v19, v20, v30);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v16, "[%.*hhx-%{public}s] Did complete STARTTLS", (uint8_t *)v17, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  uint64_t v22 = (uint64_t)v26;
  uint64_t v21 = v27;
  swift_storeEnumTagMultiPayload();
  sub_10000566C(&qword_100716630);
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1005F6670;
  sub_10049BD9C(v22, v24 + v23, type metadata accessor for ConnectionEvent);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10047A688(v24);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return sub_10049BD04(v22, type metadata accessor for ConnectionEvent);
}

uint64_t sub_100499C04(uint64_t a1)
{
  type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100716658);
  __chkstk_darwin();
  int v72 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for Response(0);
  uint64_t v67 = *(void *)(v71 - 8);
  __chkstk_darwin();
  os_log_t v70 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v77 = (uint64_t)&v66 - v7;
  uint64_t v78 = type metadata accessor for Response(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v88 = (uint64_t)&v66 - v10;
  uint64_t v80 = type metadata accessor for ConnectionEvent(0);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin();
  unint64_t v74 = (unint64_t *)((char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)&v66 - v12;
  __chkstk_darwin();
  uint64_t v87 = (char **)((char *)&v66 - v13);
  uint64_t v86 = type metadata accessor for ResponseOrContinuationRequest(0);
  uint64_t v14 = *(void *)(v86 - 8);
  uint64_t result = __chkstk_darwin();
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    return result;
  }
  uint64_t v69 = v2;
  uint64_t v89 = sub_1004D1674(0, v18, 0, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v76 = v1;
  uint64_t v81 = v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_receiveTranscoder;
  uint64_t v19 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v85 = *(void *)(v14 + 72);
  uint64_t v68 = a1;
  swift_bridgeObjectRetain();
  int v82 = v9;
  do
  {
    sub_10049BD9C(v19, (uint64_t)v17, type metadata accessor for ResponseOrContinuationRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = v88;
      sub_10049BF08((uint64_t)v17, v88, type metadata accessor for Response);
      sub_10049BD9C(v21, (uint64_t)v9, type metadata accessor for Response);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        unint64_t v22 = *((void *)v9 + 2);
        uint64_t v23 = *((void *)v9 + 3);
        uint64_t v24 = *((void *)v9 + 4);
        unsigned __int8 v25 = v9[40];
        uint64_t v91 = v23;
        uint64_t v92 = v24;
        *(void *)&long long __dst = 0x4C54544F5248545BLL;
        *((void *)&__dst + 1) = 0xEB000000005D4445;
        sub_100483498(v22, v23, v24, v25);
        sub_10049C168();
        swift_bridgeObjectRetain();
        char v26 = sub_1005E29C0();
        sub_1004831AC(v22);
        swift_bridgeObjectRelease_n();
        if (v26) {
          sub_10049A77C();
        }
        swift_bridgeObjectRelease();
        sub_1004832E0(v22, v23, v24, v25);
        uint64_t v9 = v82;
      }
      else
      {
        sub_10049BD04((uint64_t)v9, type metadata accessor for Response);
      }
      swift_beginAccess();
      uint64_t v20 = v88;
      ServerResponseTranscoder.append(_:)(v88);
      swift_endAccess();
      sub_10049BD04(v20, type metadata accessor for Response);
      goto LABEL_5;
    }
    unint64_t v27 = *(void *)v17;
    unint64_t v28 = *((void *)v17 + 1);
    unint64_t v29 = *((void *)v17 + 2);
    char v30 = v17[24];
    unint64_t v83 = v29;
    unint64_t v84 = v27;
    if ((v30 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = v28;
      uint64_t v33 = (char *)v28;
      goto LABEL_18;
    }
    swift_beginAccess();
    uint64_t v31 = *(void *)(v27 + 24) + ((v29 >> 24) & 0xFFFF00 | BYTE6(v29));
    uint64_t v93 = &type metadata for UnsafeRawBufferPointer;
    uint64_t v94 = &protocol witness table for UnsafeRawBufferPointer;
    uint64_t v91 = v31 + v28;
    uint64_t v92 = v31 + HIDWORD(v28);
    uint64_t v32 = (char **)sub_10003BCDC(&v91, (uint64_t)&type metadata for UnsafeRawBufferPointer);
    uint64_t v33 = *v32;
    if (*v32)
    {
      uint64_t v34 = v32[1];
      uint64_t v35 = v34 - v33;
      if (v34 != v33)
      {
        if (v35 <= 14)
        {
          *(void *)((char *)&__dst + 6) = 0;
          *(void *)&long long __dst = 0;
          BYTE14(__dst) = (_BYTE)v34 - (_BYTE)v33;
          memcpy(&__dst, v33, v34 - v33);
          uint64_t v33 = (char *)__dst;
          unint64_t v29 = DWORD2(__dst) | ((unint64_t)BYTE12(__dst) << 32) | ((unint64_t)BYTE13(__dst) << 40) | ((unint64_t)BYTE14(__dst) << 48);
        }
        else
        {
          sub_1005E0590();
          swift_allocObject();
          uint64_t v42 = sub_1005E0540();
          uint64_t v43 = v42;
          if ((unint64_t)v35 >= 0x7FFFFFFF)
          {
            sub_1005E0840();
            uint64_t v33 = (char *)swift_allocObject();
            *((void *)v33 + 2) = 0;
            *((void *)v33 + 3) = v35;
            unint64_t v29 = v43 | 0x8000000000000000;
          }
          else
          {
            uint64_t v33 = (char *)(v35 << 32);
            unint64_t v29 = v42 | 0x4000000000000000;
          }
        }
        goto LABEL_15;
      }
      uint64_t v33 = 0;
    }
    unint64_t v29 = 0xC000000000000000;
LABEL_15:
    uint64_t v36 = v28;
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v91);
LABEL_18:
    int64_t v37 = v87;
    *uint64_t v87 = v33;
    v37[1] = (char *)v29;
    *((unsigned char *)v37 + 16) = v30;
    swift_storeEnumTagMultiPayload();
    sub_10044B198((uint64_t)v33, v29, v30);
    uint64_t v38 = v89;
    unint64_t v40 = *(void *)(v89 + 16);
    unint64_t v39 = *(void *)(v89 + 24);
    if (v40 >= v39 >> 1) {
      uint64_t v38 = sub_1004D1674(v39 > 1, v40 + 1, 1, v89);
    }
    *(void *)(v38 + 16) = v40 + 1;
    unint64_t v41 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    uint64_t v89 = v38;
    sub_10049BF08((uint64_t)v87, v38 + v41 + *(void *)(v79 + 72) * v40, type metadata accessor for ConnectionEvent);
    sub_10049C1BC(v84, v36, v83, v30);
    sub_1004445F8((uint64_t)v33, v29, v30);
    uint64_t v9 = v82;
LABEL_5:
    v19 += v85;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  int v44 = v72;
  uint64_t v45 = v69;
  ServerResponseTranscoder.parseNext()(v72);
  if (v45)
  {
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  uint64_t v46 = (unsigned int (**)(void *, uint64_t, uint64_t))(v67 + 48);
  uint64_t v47 = v71;
  uint64_t v48 = (uint64_t)v70;
  while (1)
  {
    swift_endAccess();
    if ((*v46)(v44, 1, v47) == 1) {
      break;
    }
    uint64_t v60 = v77;
    sub_10049BF08((uint64_t)v44, v77, type metadata accessor for Response);
    sub_10049BD9C(v60, v48, type metadata accessor for Response);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char v49 = *(unsigned char *)v48;
      int v50 = *(_DWORD *)(v48 + 4);
      unint64_t v51 = *(void *)(v48 + 8);
      uint64_t v52 = *(void *)(v48 + 16);
      uint64_t v53 = *(void *)(v48 + 24);
      unsigned __int8 v54 = *(unsigned char *)(v48 + 32);
      unint64_t v55 = v74;
      unint64_t *v74 = v51;
      v55[1] = v52;
      v55[2] = v53;
      *((unsigned char *)v55 + 24) = v54;
      *((unsigned char *)v55 + 28) = v49;
      *((_DWORD *)v55 + 8) = v50;
      swift_storeEnumTagMultiPayload();
      sub_100483498(v51, v52, v53, v54);
      uint64_t v56 = v89;
      unint64_t v58 = *(void *)(v89 + 16);
      unint64_t v57 = *(void *)(v89 + 24);
      if (v58 >= v57 >> 1) {
        uint64_t v56 = sub_1004D1674(v57 > 1, v58 + 1, 1, v89);
      }
      *(void *)(v56 + 16) = v58 + 1;
      unint64_t v59 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
      uint64_t v89 = v56;
      sub_10049BF08((uint64_t)v74, v56 + v59 + *(void *)(v79 + 72) * v58, type metadata accessor for ConnectionEvent);
      sub_1004832E0(v51, v52, v53, v54);
      int v44 = v72;
      uint64_t v47 = v71;
      uint64_t v48 = (uint64_t)v70;
    }
    else
    {
      uint64_t v61 = v75;
      sub_10049BF08(v48, v75, type metadata accessor for UntaggedResponse);
      sub_10049BD9C(v61, v73, type metadata accessor for UntaggedResponse);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = v89;
      unint64_t v64 = *(void *)(v89 + 16);
      unint64_t v63 = *(void *)(v89 + 24);
      if (v64 >= v63 >> 1) {
        uint64_t v62 = sub_1004D1674(v63 > 1, v64 + 1, 1, v89);
      }
      *(void *)(v62 + 16) = v64 + 1;
      unint64_t v65 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
      uint64_t v89 = v62;
      sub_10049BF08(v73, v62 + v65 + *(void *)(v79 + 72) * v64, type metadata accessor for ConnectionEvent);
      sub_10049BD04(v75, type metadata accessor for UntaggedResponse);
    }
    sub_10049BD04(v77, type metadata accessor for Response);
    swift_beginAccess();
    ServerResponseTranscoder.parseNext()(v44);
  }
  sub_100007A48((uint64_t)v44, &qword_100716658);
  if (!*(void *)(v89 + 16) || !swift_unknownObjectWeakLoadStrong()) {
    return swift_bridgeObjectRelease();
  }
  sub_10047A688(v89);
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_10049A77C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E0ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = static MonotonicTime.now()();
  uint64_t v10 = result;
  uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_throttleInfo);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_throttleInfo + 16)) {
    goto LABEL_2;
  }
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  BOOL v14 = __OFSUB__(result, *v11);
  uint64_t v15 = result - *v11;
  if (result >= *v11)
  {
LABEL_8:
    if (!v14) {
      goto LABEL_9;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (__OFSUB__(v12, result))
  {
    __break(1u);
    goto LABEL_21;
  }
  BOOL v14 = __OFSUB__(0, v12 - result);
  uint64_t v15 = result - v12;
  if (v14)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  double v16 = (double)v15 / 1000000000.0;
  if (v16 <= 20.0)
  {
    if (!__OFADD__(v13, 1))
    {
      v11[1] = v13 + 1;
      return result;
    }
    goto LABEL_22;
  }
  if (v16 >= 120.0)
  {
LABEL_2:
    *uint64_t v11 = v10;
    v11[1] = 1;
    *((unsigned char *)v11 + 16) = 0;
    return result;
  }
  uint64_t v28 = v13;
  uint64_t v17 = v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
  sub_10049BD9C(v1 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  int64_t v18 = sub_1005E0EB0();
  int v27 = sub_1005E25A0();
  if (!os_log_type_enabled(v18, (os_log_type_t)v27))
  {

    swift_release_n();
    goto LABEL_19;
  }
  os_log_t v26 = v18;
  uint64_t v19 = swift_slowAlloc();
  uint64_t v25 = swift_slowAlloc();
  uint64_t v30 = v25;
  *(_DWORD *)uint64_t v19 = 68158722;
  LODWORD(v29) = 2;
  sub_1005E2960();
  *(_WORD *)(v19 + 8) = 256;
  uint64_t v20 = v17 + *(int *)(v6 + 20);
  LOBYTE(v29) = *(unsigned char *)v20;
  sub_1005E2960();
  *(_WORD *)(v19 + 11) = 2082;
  uint64_t v21 = ConnectionID.debugDescription.getter(*(unsigned int *)(v20 + 4));
  uint64_t v29 = sub_100481E54(v21, v22, &v30);
  sub_1005E2960();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v19 + 21) = 2048;
  uint64_t v29 = v28;
  uint64_t result = sub_1005E2960();
  *(_WORD *)(v19 + 31) = 2048;
  double v23 = round(v16);
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0) {
    goto LABEL_23;
  }
  if (v23 > -9.22337204e18)
  {
    if (v23 < 9.22337204e18)
    {
      uint64_t v29 = (uint64_t)v23;
      sub_1005E2960();
      os_log_t v24 = v26;
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v27, "[%.*hhx-%{public}s] Connection was throttled by server (%ld commands in %ld seconds).", (uint8_t *)v19, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_19:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      goto LABEL_2;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10049ABB0()
{
  sub_10049AC6C();
  v1._countAndFlagsBits = sub_1005E1F20();
  sub_1005E1E30(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 62;
  v2._object = (void *)0xE100000000000000;
  sub_1005E1E30(v2);
  swift_bridgeObjectRelease();
  return 7876668;
}

uint64_t sub_10049AC48()
{
  return sub_10049ABB0();
}

unint64_t sub_10049AC6C()
{
  unint64_t result = qword_100716618;
  if (!qword_100716618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716618);
  }
  return result;
}

BOOL sub_10049ACC0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (a3 == 1) {
    return a6 == 1;
  }
  BOOL result = 0;
  if (a6 != 1 && a4 == a1)
  {
    if (a3)
    {
      if (a6)
      {
        if (a2 == a5 && a3 == a6) {
          return 1;
        }
        if (sub_1005E3290()) {
          return 1;
        }
      }
    }
    else if (!a6)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_10049AD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E1650();
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConnectionEvent.FailureReason(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (unsigned __int8 *)&v19 - v9;
  sub_10000566C(&qword_100716850);
  uint64_t v11 = __chkstk_darwin();
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v14 = &v13[*(int *)(v11 + 56)];
  sub_10049BD9C(a1, (uint64_t)v13, type metadata accessor for ConnectionEvent.FailureReason);
  sub_10049BD9C(a2, (uint64_t)v14, type metadata accessor for ConnectionEvent.FailureReason);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10049BD9C((uint64_t)v13, (uint64_t)v8, type metadata accessor for ConnectionEvent.FailureReason);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v16 = v20;
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v6, v14, v4);
        char v15 = sub_1005E1640();
        uint64_t v17 = *(void (**)(char *, uint64_t))(v16 + 8);
        v17(v6, v4);
        v17(v8, v4);
        goto LABEL_6;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v4);
      goto LABEL_12;
    case 2u:
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_12;
      }
      goto LABEL_10;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_12;
      }
LABEL_10:
      sub_10049BD04((uint64_t)v13, type metadata accessor for ConnectionEvent.FailureReason);
      char v15 = 1;
      break;
    default:
      sub_10049BD9C((uint64_t)v13, (uint64_t)v10, type metadata accessor for ConnectionEvent.FailureReason);
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_12:
        sub_100007A48((uint64_t)v13, &qword_100716850);
        char v15 = 0;
      }
      else
      {
        char v15 = *v10 == *v14;
LABEL_6:
        sub_10049BD04((uint64_t)v13, type metadata accessor for ConnectionEvent.FailureReason);
      }
      break;
  }
  return v15 & 1;
}

uint64_t sub_10049B0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v65 = a2;
  type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin();
  uint64_t v60 = (unint64_t *)((char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ConnectionEvent.FailureReason(0);
  __chkstk_darwin();
  uint64_t v59 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005E12C0();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin();
  unint64_t v58 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConnectionEvent(0);
  __chkstk_darwin();
  unint64_t v63 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (Swift::Int *)((char *)&v58 - v7);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v58 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v58 - v11;
  __chkstk_darwin();
  BOOL v14 = (char *)&v58 - v13;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v58 - v15;
  __chkstk_darwin();
  int64_t v18 = (char *)&v58 - v17;
  sub_10000566C(&qword_100716858);
  uint64_t v19 = __chkstk_darwin();
  uint64_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_10049BD9C(v64, (uint64_t)v21, type metadata accessor for ConnectionEvent);
  sub_10049BD9C(v65, v22, type metadata accessor for ConnectionEvent);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10049BD9C((uint64_t)v21, (uint64_t)v16, type metadata accessor for ConnectionEvent);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v32 = v22;
        uint64_t v33 = v59;
        sub_10049BF08(v32, v59, type metadata accessor for ConnectionEvent.FailureReason);
        char v24 = sub_10049AD5C((uint64_t)v16, v33);
        uint64_t v34 = (uint64_t)v21;
        sub_10049BD04(v33, type metadata accessor for ConnectionEvent.FailureReason);
        sub_10049BD04((uint64_t)v16, type metadata accessor for ConnectionEvent.FailureReason);
        goto LABEL_36;
      }
      sub_10049BD04((uint64_t)v16, type metadata accessor for ConnectionEvent.FailureReason);
      goto LABEL_32;
    case 2u:
      sub_10049BD9C((uint64_t)v21, (uint64_t)v14, type metadata accessor for ConnectionEvent);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        double v23 = v60;
        sub_10049BF08(v22, (uint64_t)v60, type metadata accessor for UntaggedResponse);
        char v24 = static UntaggedResponse.__derived_enum_equals(_:_:)((uint64_t)v14, v23);
        sub_10049BD04((uint64_t)v23, type metadata accessor for UntaggedResponse);
        sub_10049BD04((uint64_t)v14, type metadata accessor for UntaggedResponse);
        sub_10049BD04((uint64_t)v21, type metadata accessor for ConnectionEvent);
        return v24 & 1;
      }
      sub_10049BD04((uint64_t)v14, type metadata accessor for UntaggedResponse);
      goto LABEL_32;
    case 3u:
      sub_10049BD9C((uint64_t)v21, (uint64_t)v12, type metadata accessor for ConnectionEvent);
      unint64_t v35 = *(void *)v12;
      uint64_t v36 = *((void *)v12 + 1);
      uint64_t v37 = *((void *)v12 + 2);
      uint64_t v38 = v12[24];
      int v39 = v12[28];
      int v40 = *((_DWORD *)v12 + 8);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_1004832E0(v35, v36, v37, v38);
        goto LABEL_32;
      }
      LODWORD(v64) = v40;
      LODWORD(v65) = v39;
      uint64_t v41 = (uint64_t)v21;
      unint64_t v42 = *(void *)v22;
      uint64_t v43 = *(void *)(v22 + 8);
      uint64_t v44 = *(void *)(v22 + 16);
      LODWORD(v63) = *(unsigned __int8 *)(v22 + 28);
      LODWORD(v62) = *(_DWORD *)(v22 + 32);
      uint64_t v45 = *(unsigned __int8 *)(v22 + 24);
      char v46 = static CommandCompletionResponse.__derived_enum_equals(_:_:)(v35, v36, v37, v38, v42, v43, v44, v45);
      sub_1004832E0(v42, v43, v44, v45);
      sub_1004832E0(v35, v36, v37, v38);
      if ((v46 & 1) == 0)
      {
        sub_10049BD04(v41, type metadata accessor for ConnectionEvent);
        goto LABEL_33;
      }
      char v24 = v65 == v63 && v64 == v62;
      sub_10049BD04(v41, type metadata accessor for ConnectionEvent);
      return v24 & 1;
    case 4u:
      sub_10049BD9C((uint64_t)v21, (uint64_t)v10, type metadata accessor for ConnectionEvent);
      uint64_t v25 = *(void *)v10;
      unint64_t v26 = *((void *)v10 + 1);
      uint64_t v27 = v10[16];
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v28 = (uint64_t)v21;
        uint64_t v29 = *(void *)v22;
        unint64_t v30 = *(void *)(v22 + 8);
        uint64_t v31 = *(unsigned __int8 *)(v22 + 16);
        char v24 = sub_1004C95F8(v25, v26, v27, v29, v30, v31);
        sub_1004445F8(v29, v30, v31);
        sub_1004445F8(v25, v26, v27);
        sub_10049BD04(v28, type metadata accessor for ConnectionEvent);
        return v24 & 1;
      }
      sub_1004445F8(v25, v26, v27);
      goto LABEL_32;
    case 5u:
      sub_10049BD9C((uint64_t)v21, (uint64_t)v8, type metadata accessor for ConnectionEvent);
      Swift::Int v48 = *v8;
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        char v24 = sub_100013158(v48, *(void *)v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10049BD04((uint64_t)v21, type metadata accessor for ConnectionEvent);
        return v24 & 1;
      }
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 6u:
      char v49 = v63;
      sub_10049BD9C((uint64_t)v21, (uint64_t)v63, type metadata accessor for ConnectionEvent);
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_32;
      }
      uint64_t v50 = (uint64_t)v21;
      char v51 = *v49 ^ *(unsigned char *)v22;
      sub_10049BD04(v50, type metadata accessor for ConnectionEvent);
      char v24 = v51 ^ 1;
      return v24 & 1;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_32;
      }
      goto LABEL_26;
    case 8u:
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_32;
      }
LABEL_26:
      sub_10049BD04((uint64_t)v21, type metadata accessor for ConnectionEvent);
      char v24 = 1;
      return v24 & 1;
    default:
      sub_10049BD9C((uint64_t)v21, (uint64_t)v18, type metadata accessor for ConnectionEvent);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v61 + 8))(v18, v62);
LABEL_32:
        sub_100007A48((uint64_t)v21, &qword_100716858);
LABEL_33:
        char v24 = 0;
      }
      else
      {
        uint64_t v53 = v61;
        unsigned __int8 v54 = v58;
        uint64_t v55 = v22;
        uint64_t v56 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v58, v55, v62);
        char v24 = sub_1005E12B0();
        uint64_t v34 = (uint64_t)v21;
        unint64_t v57 = *(void (**)(char *, uint64_t))(v53 + 8);
        v57(v54, v56);
        v57(v18, v56);
LABEL_36:
        sub_10049BD04(v34, type metadata accessor for ConnectionEvent);
      }
      return v24 & 1;
  }
}

uint64_t sub_10049B9BC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ClientCommand(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OutboundContent(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v23 - v8;
  sub_10000566C(&qword_100716620);
  uint64_t v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_10049BD9C(a1, (uint64_t)v12, type metadata accessor for OutboundContent);
  sub_10049BD9C(a2, v13, type metadata accessor for OutboundContent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_10049BD9C((uint64_t)v12, (uint64_t)v9, type metadata accessor for OutboundContent);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_10049BF08(v13, (uint64_t)v5, type metadata accessor for ClientCommand);
      char v21 = static ClientCommand.__derived_enum_equals(_:_:)(v9, v5);
      sub_10049BD04((uint64_t)v5, type metadata accessor for ClientCommand);
      sub_10049BD04((uint64_t)v9, type metadata accessor for ClientCommand);
      goto LABEL_12;
    }
    sub_10049BD04((uint64_t)v9, type metadata accessor for ClientCommand);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_10049BD9C((uint64_t)v12, (uint64_t)v7, type metadata accessor for OutboundContent);
    uint64_t v15 = *(void *)v7;
    unint64_t v16 = *((void *)v7 + 1);
    uint64_t v17 = v7[16];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = *(void *)v13;
      unint64_t v19 = *(void *)(v13 + 8);
      uint64_t v20 = *(unsigned __int8 *)(v13 + 16);
      char v21 = sub_1004C95F8(v15, v16, v17, v18, v19, v20);
      sub_1004445F8(v18, v19, v20);
      sub_1004445F8(v15, v16, v17);
LABEL_12:
      sub_10049BD04((uint64_t)v12, type metadata accessor for OutboundContent);
      return v21 & 1;
    }
    sub_1004445F8(v15, v16, v17);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_100007A48((uint64_t)v12, &qword_100716620);
    char v21 = 0;
    return v21 & 1;
  }
  sub_10049BD04((uint64_t)v12, type metadata accessor for OutboundContent);
  char v21 = 1;
  return v21 & 1;
}

uint64_t sub_10049BD04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10049BD64()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10049BD9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10049BE04()
{
  uint64_t v1 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_10049BF08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10049BF70(uint64_t a1)
{
  uint64_t v3 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(char **)(v1 + v5);
  uint64_t v7 = *(char **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_100492000(a1, (v1 + v4), v6, v7);
}

uint64_t sub_10049C018(uint64_t a1)
{
  return sub_100497C9C(a1, v1, (void (*)(uint64_t))sub_100496768);
}

uint64_t sub_10049C048(char a1)
{
  return sub_1004973B4(a1);
}

uint64_t sub_10049C050(char a1)
{
  return sub_10049774C(a1);
}

uint64_t sub_10049C058()
{
  return sub_100497C38();
}

uint64_t sub_10049C060(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10049C070()
{
  return swift_release();
}

uint64_t type metadata accessor for ConnectionEvent(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716788);
}

uint64_t sub_10049C098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100716628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ConnectionEvent.FailureReason(uint64_t a1)
{
  return sub_10003B314(a1, qword_1007166E0);
}

uint64_t sub_10049C120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100498FEC(a1, a2, a3, a4);
}

uint64_t sub_10049C128()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10049C160(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  return sub_1004BCD20(a1, a2, a3, a4, a5, *(void (**)(uint64_t, uint64_t, void, uint64_t))(v5 + 16));
}

unint64_t sub_10049C168()
{
  unint64_t result = qword_100716660;
  if (!qword_100716660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716660);
  }
  return result;
}

uint64_t sub_10049C1BC(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    return swift_release();
  }
  else
  {
    sub_1004831AC(a1);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10049C208(uint64_t a1)
{
  return sub_100497C9C(a1, v1, (void (*)(uint64_t))sub_100497D10);
}

uint64_t sub_10049C238(uint64_t a1, void *a2)
{
  sub_100452B68(a1, (uint64_t)v16);
  sub_100452B68((uint64_t)a2, (uint64_t)v15);
  sub_100452B68((uint64_t)v16, (uint64_t)&v17);
  int v4 = v17;
  if (!(v17 >> 62))
  {
    v17 &= 0x3FFFFFFFFFFFFFFFuLL;
    uint64_t v5 = v18;
    uint64_t v6 = v19;
    sub_100452B68((uint64_t)v15, (uint64_t)&v20);
    if (v20 >> 62 || v4 != v20) {
      return 0;
    }
    uint64_t v8 = *((void *)&v21 + 1);
    if (v6) {
      goto LABEL_6;
    }
LABEL_14:
    if (v8) {
      return 0;
    }
    goto LABEL_19;
  }
  if (v17 >> 62 != 1)
  {
    sub_100452B68((uint64_t)v15, (uint64_t)&v20);
    if (v20 >> 62 != 2) {
      return 0;
    }
    uint64_t result = 0;
    if (v20 != 0x8000000000000000 || v21 != 0) {
      return result;
    }
    goto LABEL_19;
  }
  v17 &= 0x3FFFFFFFFFFFFFFFuLL;
  uint64_t v5 = v18;
  uint64_t v6 = v19;
  sub_100452B68((uint64_t)v15, (uint64_t)&v20);
  int v7 = v20;
  if (v20 >> 62 != 1) {
    return 0;
  }
  v20 &= 0x3FFFFFFFFFFFFFFFuLL;
  if (v4 != v7) {
    return 0;
  }
  uint64_t v8 = *((void *)&v21 + 1);
  if (!v6) {
    goto LABEL_14;
  }
LABEL_6:
  if (!v8) {
    return 0;
  }
  if (v5 == (void)v21 && v6 == v8 || (v9 = sub_1005E3290(), uint64_t result = 0, (v9 & 1) != 0))
  {
LABEL_19:
    sub_100452B0C(a1 + 24, (uint64_t)v14);
    uint64_t v12 = a2[3];
    uint64_t v11 = a2[4];
    uint64_t v13 = a2[5];
    sub_100452B0C((uint64_t)v14, (uint64_t)v22);
    if (v24 == 1)
    {
      if (v13 == 1) {
        return 1;
      }
    }
    else if (v13 != 1 && v22[0] == v12)
    {
      if (v24)
      {
        if (v13 && (v23 == v11 && v24 == v13 || (sub_1005E3290() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v13)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_10049C420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100716668);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  int v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v9 = (char *)&v24 - v8;
  sub_1005E13F0();
  swift_allocObject();
  sub_1005E13E0();
  sub_1005E13D0();
  char v10 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28));
  if ((v10 & 0xC0) == 0x40)
  {
    char v11 = v10 & 0x3F;
    sub_1005E13C0();
    sub_1004EE628(a1, v11, a2);
  }
  else
  {
    sub_1005E13C0();
  }
  swift_retain();
  uint64_t v12 = sub_1005E13A0();
  if (qword_100715638 != -1) {
    swift_once();
  }
  sub_1005E1500();
  swift_allocObject();
  swift_retain();
  uint64_t v13 = sub_1005E14F0();
  BOOL v14 = (unsigned __int8 *)(a2 + *(int *)(_s14descr1006B94C1C6LoggerVMa() + 20));
  unsigned int v15 = *((_DWORD *)v14 + 1);
  uint64_t v16 = *v14;
  *((void *)&v25 + 1) = &type metadata for ConnectionLoggerID;
  LOBYTE(v24) = v16;
  DWORD1(v24) = v15;
  sub_1005E1520();
  OSSignpostID.init(engine:kind:connectionID:)(v16, 1, v15);
  uint64_t v17 = sub_1005E0D40();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
  sub_1000079E4((uint64_t)v9, (uint64_t)v7, &qword_100716668);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
  {
    sub_100007A48((uint64_t)v7, &qword_100716668);
    long long v24 = 0u;
    long long v25 = 0u;
  }
  else
  {
    *((void *)&v25 + 1) = v17;
    uint64_t v19 = sub_100021E04((uint64_t *)&v24);
    (*(void (**)(uint64_t *, char *, uint64_t))(v18 + 32))(v19, v7, v17);
  }
  sub_1005E1520();
  sub_100007A48((uint64_t)v9, &qword_100716668);
  sub_1005E1360();
  swift_retain();
  unint64_t v20 = (void (*)(long long *, void))sub_1005E1350();
  if (*v21 >> 62 && (swift_bridgeObjectRetain(), v23 = sub_1005E2FB0(), uint64_t result = swift_bridgeObjectRelease(), v23 < 0))
  {
    __break(1u);
  }
  else
  {
    sub_1004824AC(0, 0, v13);
    v20(&v24, 0);
    swift_release();
    swift_release();
    swift_release();
    return v12;
  }
  return result;
}

unint64_t destroy for ConnectionConfiguration.TLSRequirement(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s15IMAP2Connection23ConnectionConfigurationV14TLSRequirementOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  if ((int)v4 - 1 < 0)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for ConnectionConfiguration.TLSRequirement(uint64_t a1, long long *a2)
{
  LODWORD(v4) = -1;
  if (*(void *)(a1 + 16) >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = *(void *)(a1 + 16);
  }
  int v6 = v5 - 1;
  if (*((void *)a2 + 2) < 0xFFFFFFFFuLL) {
    uint64_t v4 = *((void *)a2 + 2);
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for ConnectionConfiguration.TLSRequirement(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 16);
    }
    if ((int)v7 - 1 < 0)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionConfiguration.TLSRequirement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionConfiguration.TLSRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_10049CA80(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_10049CAA4(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[2] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionConfiguration.TLSRequirement()
{
  return &type metadata for ConnectionConfiguration.TLSRequirement;
}

uint64_t *sub_10049CAE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1005E1650();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_10049CBE0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1005E1650();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_10049CC5C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1005E1650();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10049CD14(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10049BD04((uint64_t)a1, type metadata accessor for ConnectionEvent.FailureReason);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1005E1650();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_10049CDF0(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1005E1650();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10049CEA8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10049BD04((uint64_t)a1, type metadata accessor for ConnectionEvent.FailureReason);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1005E1650();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10049CF84()
{
  uint64_t result = sub_1005E1650();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_10049D018(uint64_t *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_1005E12C0();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = type metadata accessor for ConnectionEvent.FailureReason(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v11 = sub_1005E1650();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        goto LABEL_17;
      case 2u:
        uint64_t v12 = type metadata accessor for UntaggedResponse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v13 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
            goto LABEL_29;
          case 1u:
            uint64_t v13 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
            goto LABEL_29;
          case 2u:
            uint64_t v13 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
            goto LABEL_29;
          case 3u:
            uint64_t v13 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
            goto LABEL_29;
          case 4u:
            uint64_t v13 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
LABEL_29:
            uint64_t v22 = a2[1];
            uint64_t v21 = a2[2];
            *a1 = v13;
            a1[1] = v22;
            a1[2] = v21;
            swift_bridgeObjectRetain();
            goto LABEL_54;
          case 5u:
          case 6u:
          case 0xBu:
          case 0xDu:
            *a1 = *a2;
            swift_bridgeObjectRetain();
            goto LABEL_54;
          case 7u:
          case 8u:
            uint64_t v23 = a2[1];
            *a1 = *a2;
            a1[1] = v23;
            *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
            *((unsigned char *)a1 + 20) = *((unsigned char *)a2 + 20);
            uint64_t v24 = a2[4];
            a1[3] = a2[3];
            a1[4] = v24;
            a1[5] = a2[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_54;
          case 9u:
            *a1 = *a2;
            *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
            long long v25 = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 6) = v25;
            *(_OWORD *)((char *)a1 + 105) = *(_OWORD *)((char *)a2 + 105);
            long long v26 = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            *((_OWORD *)a1 + 2) = v26;
            long long v27 = *((_OWORD *)a2 + 4);
            *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 4) = v27;
            swift_bridgeObjectRetain();
            goto LABEL_54;
          case 0xAu:
            uint64_t v28 = a2[1];
            *a1 = *a2;
            a1[1] = v28;
            a1[2] = a2[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_54;
          case 0xCu:
            uint64_t v29 = a2[1];
            if (v29)
            {
              *a1 = *a2;
              a1[1] = v29;
              a1[2] = a2[2];
              int v30 = *((_DWORD *)a2 + 7);
              *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
              *((_DWORD *)a1 + 7) = v30;
              *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v43 = *((_OWORD *)a2 + 1);
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *((_OWORD *)a1 + 1) = v43;
              *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            }
            *((unsigned char *)a1 + 33) = *((unsigned char *)a2 + 33);
            a1[5] = a2[5];
            swift_bridgeObjectRetain();
            goto LABEL_54;
          case 0x11u:
          case 0x12u:
            uint64_t v31 = sub_10000566C(&qword_100716558);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
            goto LABEL_54;
          case 0x13u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *((unsigned char *)a1 + 4) = *((unsigned char *)a2 + 4);
            *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
            *((unsigned char *)a1 + 12) = *((unsigned char *)a2 + 12);
            int v32 = *((unsigned __int8 *)a2 + 192);
            if (v32 == 254 || v32 == 255)
            {
              long long v33 = *((_OWORD *)a2 + 10);
              *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
              *((_OWORD *)a1 + 10) = v33;
              *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
              *((unsigned char *)a1 + 192) = *((unsigned char *)a2 + 192);
              long long v34 = *((_OWORD *)a2 + 6);
              *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
              *((_OWORD *)a1 + 6) = v34;
              long long v35 = *((_OWORD *)a2 + 8);
              *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 8) = v35;
              long long v36 = *((_OWORD *)a2 + 2);
              *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
              *((_OWORD *)a1 + 2) = v36;
              long long v37 = *((_OWORD *)a2 + 4);
              *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
              *((_OWORD *)a1 + 4) = v37;
            }
            else
            {
              char v107 = v32 & 1;
              uint64_t v44 = a2[6];
              uint64_t v74 = a2[9];
              uint64_t v76 = a2[7];
              uint64_t v78 = a2[10];
              uint64_t v80 = a2[11];
              uint64_t v82 = a2[12];
              uint64_t v84 = a2[13];
              uint64_t v86 = a2[14];
              uint64_t v88 = a2[15];
              uint64_t v90 = a2[16];
              uint64_t v92 = a2[17];
              uint64_t v94 = a2[18];
              uint64_t v96 = a2[19];
              uint64_t v98 = a2[20];
              uint64_t v100 = a2[21];
              uint64_t v102 = a2[22];
              uint64_t v105 = a2[23];
              uint64_t v45 = a2[2];
              uint64_t v46 = a2[3];
              uint64_t v47 = a2[4];
              uint64_t v48 = a2[5];
              uint64_t v49 = a2[8];
              sub_100136870(v45, v46, v47, v48, v44, v76, v49, v74, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96, v98,
                v100,
                v102,
                v105,
                v32 & 1);
              a1[2] = v45;
              a1[3] = v46;
              a1[4] = v47;
              a1[5] = v48;
              a1[6] = v44;
              a1[7] = v76;
              a1[8] = v49;
              a1[9] = v74;
              a1[10] = v78;
              a1[11] = v80;
              a1[12] = v82;
              a1[13] = v84;
              a1[14] = v86;
              a1[15] = v88;
              a1[16] = v90;
              a1[17] = v92;
              a1[18] = v94;
              a1[19] = v96;
              a1[20] = v98;
              a1[21] = v100;
              a1[22] = v102;
              a1[23] = v105;
              *((unsigned char *)a1 + 192) = v107;
            }
            a1[25] = a2[25];
            int v50 = *((unsigned __int8 *)a2 + 384);
            swift_bridgeObjectRetain();
            if (v50 == 254 || v50 == 255)
            {
              long long v51 = *((_OWORD *)a2 + 22);
              *((_OWORD *)a1 + 21) = *((_OWORD *)a2 + 21);
              *((_OWORD *)a1 + 22) = v51;
              *((_OWORD *)a1 + 23) = *((_OWORD *)a2 + 23);
              *((unsigned char *)a1 + 384) = *((unsigned char *)a2 + 384);
              long long v52 = *((_OWORD *)a2 + 18);
              *((_OWORD *)a1 + 17) = *((_OWORD *)a2 + 17);
              *((_OWORD *)a1 + 18) = v52;
              long long v53 = *((_OWORD *)a2 + 20);
              *((_OWORD *)a1 + 19) = *((_OWORD *)a2 + 19);
              *((_OWORD *)a1 + 20) = v53;
              long long v54 = *((_OWORD *)a2 + 14);
              *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
              *((_OWORD *)a1 + 14) = v54;
              long long v55 = *((_OWORD *)a2 + 16);
              *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
              *((_OWORD *)a1 + 16) = v55;
            }
            else
            {
              char v108 = v50 & 1;
              uint64_t v56 = a2[30];
              uint64_t v75 = a2[33];
              uint64_t v77 = a2[31];
              uint64_t v79 = a2[34];
              uint64_t v81 = a2[35];
              uint64_t v83 = a2[36];
              uint64_t v85 = a2[37];
              uint64_t v87 = a2[38];
              uint64_t v89 = a2[39];
              uint64_t v91 = a2[40];
              uint64_t v93 = a2[41];
              uint64_t v95 = a2[42];
              uint64_t v97 = a2[43];
              uint64_t v99 = a2[44];
              uint64_t v101 = a2[45];
              uint64_t v103 = a2[46];
              uint64_t v106 = a2[47];
              char v73 = v50 & 1;
              uint64_t v57 = a2[26];
              uint64_t v58 = a2[27];
              uint64_t v59 = a2[28];
              uint64_t v60 = a2[29];
              uint64_t v61 = a2[32];
              sub_100136870(v57, v58, v59, v60, v56, v77, v61, v75, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97, v99,
                v101,
                v103,
                v106,
                v73);
              a1[26] = v57;
              a1[27] = v58;
              a1[28] = v59;
              a1[29] = v60;
              a1[30] = v56;
              a1[31] = v77;
              a1[32] = v61;
              a1[33] = v75;
              a1[34] = v79;
              a1[35] = v81;
              a1[36] = v83;
              a1[37] = v85;
              a1[38] = v87;
              a1[39] = v89;
              a1[40] = v91;
              a1[41] = v93;
              a1[42] = v95;
              a1[43] = v97;
              a1[44] = v99;
              a1[45] = v101;
              a1[46] = v103;
              a1[47] = v106;
              *((unsigned char *)a1 + 384) = v108;
            }
            uint64_t v62 = a2[54];
            if (v62)
            {
              uint64_t v63 = a2[50];
              a1[49] = a2[49];
              a1[50] = v63;
              a1[51] = a2[51];
              a1[52] = a2[52];
              *((_DWORD *)a1 + 106) = *((_DWORD *)a2 + 106);
              *(_DWORD *)((char *)a1 + 427) = *(_DWORD *)((char *)a2 + 427);
              uint64_t v64 = a2[55];
              uint64_t v65 = a2[56];
              a1[54] = v62;
              a1[55] = v64;
              uint64_t v66 = a2[57];
              uint64_t v67 = a2[58];
              a1[56] = v65;
              a1[57] = v66;
              uint64_t v69 = a2[59];
              uint64_t v68 = a2[60];
              a1[58] = v67;
              a1[59] = v69;
              uint64_t v104 = a2[61];
              a1[60] = v68;
              a1[61] = v104;
              uint64_t v109 = a2[63];
              a1[62] = a2[62];
              a1[63] = v109;
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v70 = *(_OWORD *)(a2 + 59);
              *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
              *(_OWORD *)(a1 + 59) = v70;
              *(_OWORD *)(a1 + 61) = *(_OWORD *)(a2 + 61);
              a1[63] = a2[63];
              long long v71 = *(_OWORD *)(a2 + 51);
              *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
              *(_OWORD *)(a1 + 51) = v71;
              long long v72 = *(_OWORD *)(a2 + 55);
              *(_OWORD *)(a1 + 53) = *(_OWORD *)(a2 + 53);
              *(_OWORD *)(a1 + 55) = v72;
            }
            a1[64] = a2[64];
            a1[65] = a2[65];
            a1[66] = a2[66];
            *((unsigned char *)a1 + 536) = *((unsigned char *)a2 + 536);
            *((_DWORD *)a1 + 135) = *((_DWORD *)a2 + 135);
            *((unsigned char *)a1 + 544) = *((unsigned char *)a2 + 544);
            a1[69] = a2[69];
            *((unsigned char *)a1 + 560) = *((unsigned char *)a2 + 560);
            a1[71] = a2[71];
            a1[72] = a2[72];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_54;
          case 0x14u:
            uint64_t v38 = a2[1];
            *a1 = *a2;
            a1[1] = v38;
            a1[2] = a2[2];
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_54;
          case 0x15u:
            uint64_t v39 = *a2;
            uint64_t v40 = a2[1];
            uint64_t v41 = a2[2];
            char v42 = *((unsigned char *)a2 + 24);
            sub_1002953E0();
            *a1 = v39;
            a1[1] = v40;
            a1[2] = v41;
            *((unsigned char *)a1 + 24) = v42;
LABEL_54:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
            break;
        }
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v14 = *a2;
        uint64_t v15 = a2[1];
        uint64_t v16 = a2[2];
        unsigned __int8 v17 = *((unsigned char *)a2 + 24);
        sub_100483498(*a2, v15, v16, v17);
        *a1 = v14;
        a1[1] = v15;
        a1[2] = v16;
        *((unsigned char *)a1 + 24) = v17;
        *(uint64_t *)((char *)a1 + 28) = *(void *)((char *)a2 + 28);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v18 = *a2;
        unint64_t v19 = a2[1];
        char v20 = *((unsigned char *)a2 + 16);
        sub_10044B198(v18, v19, v20);
        *a1 = v18;
        a1[1] = v19;
        *((unsigned char *)a1 + 16) = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10049DC34(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_1005E12C0();
      goto LABEL_5;
    case 1:
      type metadata accessor for ConnectionEvent.FailureReason(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 1)
      {
        uint64_t v3 = sub_1005E1650();
LABEL_5:
        int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
        uint64_t result = v4(a1, v3);
      }
      break;
    case 2:
      type metadata accessor for UntaggedResponse(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
          if ((~*(void *)a1 & 0xF000000000000007) != 0) {
            sub_1004831C0(*(void *)a1);
          }
          goto LABEL_11;
        case 5:
        case 6:
        case 9:
        case 11:
        case 13:
          goto LABEL_11;
        case 7:
        case 8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          goto LABEL_25;
        case 10:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_11;
        case 12:
          if (*(void *)(a1 + 8))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_11;
        case 17:
        case 18:
          uint64_t v3 = sub_10000566C(&qword_100716558);
          goto LABEL_5;
        case 19:
          unsigned int v5 = *(unsigned __int8 *)(a1 + 192);
          if (v5 <= 0xFD) {
            sub_100061440(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
          }
              *(void *)(a1 + 168),
              *(void *)(a1 + 176),
              *(void *)(a1 + 184),
              v5 & 1);
          swift_bridgeObjectRelease();
          unsigned int v6 = *(unsigned __int8 *)(a1 + 384);
          if (v6 <= 0xFD) {
            sub_100061440(*(void *)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224), *(void *)(a1 + 232), *(void *)(a1 + 240), *(void *)(a1 + 248), *(void *)(a1 + 256), *(void *)(a1 + 264), *(void *)(a1 + 272), *(void *)(a1 + 280), *(void *)(a1 + 288), *(void *)(a1 + 296), *(void *)(a1 + 304), *(void *)(a1 + 312), *(void *)(a1 + 320), *(void *)(a1 + 328), *(void *)(a1 + 336), *(void *)(a1 + 344), *(void *)(a1 + 352),
          }
              *(void *)(a1 + 360),
              *(void *)(a1 + 368),
              *(void *)(a1 + 376),
              v6 & 1);
          if (*(void *)(a1 + 432))
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_11;
        case 20:
          swift_release();
          swift_release();
LABEL_25:
          uint64_t result = swift_release();
          break;
        case 21:
          uint64_t result = sub_100295400();
          break;
        default:
          return result;
      }
      break;
    case 3:
      uint64_t result = sub_1004832E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
      break;
    case 4:
      uint64_t result = sub_1004445F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
      break;
    case 5:
LABEL_11:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_10049DFE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1005E12C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_50;
    case 1u:
      uint64_t v7 = type metadata accessor for ConnectionEvent.FailureReason(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v8 = sub_1005E1650();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
LABEL_13:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      goto LABEL_50;
    case 2u:
      uint64_t v7 = type metadata accessor for UntaggedResponse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0) {
            sub_10044AE74(*a2);
          }
          goto LABEL_25;
        case 1u:
          uint64_t v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0) {
            sub_10044AE74(*a2);
          }
          goto LABEL_25;
        case 2u:
          uint64_t v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0) {
            sub_10044AE74(*a2);
          }
          goto LABEL_25;
        case 3u:
          uint64_t v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0) {
            sub_10044AE74(*a2);
          }
          goto LABEL_25;
        case 4u:
          uint64_t v9 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0) {
            sub_10044AE74(*a2);
          }
LABEL_25:
          uint64_t v18 = a2[1];
          uint64_t v17 = a2[2];
          *a1 = v9;
          a1[1] = v18;
          a1[2] = v17;
          swift_bridgeObjectRetain();
          break;
        case 5u:
        case 6u:
        case 0xBu:
        case 0xDu:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          break;
        case 7u:
        case 8u:
          uint64_t v19 = a2[1];
          *a1 = *a2;
          a1[1] = v19;
          *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
          *((unsigned char *)a1 + 20) = *((unsigned char *)a2 + 20);
          uint64_t v20 = a2[4];
          a1[3] = a2[3];
          a1[4] = v20;
          a1[5] = a2[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          break;
        case 9u:
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          long long v21 = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          *((_OWORD *)a1 + 6) = v21;
          *(_OWORD *)((char *)a1 + 105) = *(_OWORD *)((char *)a2 + 105);
          long long v22 = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_OWORD *)a1 + 2) = v22;
          long long v23 = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 4) = v23;
          swift_bridgeObjectRetain();
          break;
        case 0xAu:
          uint64_t v24 = a2[1];
          *a1 = *a2;
          a1[1] = v24;
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 0xCu:
          uint64_t v25 = a2[1];
          if (v25)
          {
            *a1 = *a2;
            a1[1] = v25;
            a1[2] = a2[2];
            int v26 = *((_DWORD *)a2 + 7);
            *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
            *((_DWORD *)a1 + 7) = v26;
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v39 = *((_OWORD *)a2 + 1);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_OWORD *)a1 + 1) = v39;
            *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          }
          *((unsigned char *)a1 + 33) = *((unsigned char *)a2 + 33);
          a1[5] = a2[5];
          swift_bridgeObjectRetain();
          break;
        case 0x11u:
        case 0x12u:
          uint64_t v27 = sub_10000566C(&qword_100716558);
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
          break;
        case 0x13u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *((unsigned char *)a1 + 4) = *((unsigned char *)a2 + 4);
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          *((unsigned char *)a1 + 12) = *((unsigned char *)a2 + 12);
          int v28 = *((unsigned __int8 *)a2 + 192);
          if (v28 == 254 || v28 == 255)
          {
            long long v29 = *((_OWORD *)a2 + 10);
            *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
            *((_OWORD *)a1 + 10) = v29;
            *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
            *((unsigned char *)a1 + 192) = *((unsigned char *)a2 + 192);
            long long v30 = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            *((_OWORD *)a1 + 6) = v30;
            long long v31 = *((_OWORD *)a2 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 8) = v31;
            long long v32 = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            *((_OWORD *)a1 + 2) = v32;
            long long v33 = *((_OWORD *)a2 + 4);
            *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 4) = v33;
          }
          else
          {
            char v104 = v28 & 1;
            uint64_t v40 = a2[6];
            uint64_t v71 = a2[9];
            uint64_t v73 = a2[7];
            uint64_t v75 = a2[10];
            uint64_t v77 = a2[11];
            uint64_t v79 = a2[12];
            uint64_t v81 = a2[13];
            uint64_t v83 = a2[14];
            uint64_t v85 = a2[15];
            uint64_t v87 = a2[16];
            uint64_t v89 = a2[17];
            uint64_t v91 = a2[18];
            uint64_t v93 = a2[19];
            uint64_t v95 = a2[20];
            uint64_t v97 = a2[21];
            uint64_t v99 = a2[22];
            uint64_t v102 = a2[23];
            uint64_t v41 = a2[2];
            uint64_t v42 = a2[3];
            uint64_t v43 = a2[4];
            uint64_t v44 = a2[5];
            uint64_t v45 = a2[8];
            sub_100136870(v41, v42, v43, v44, v40, v73, v45, v71, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93, v95,
              v97,
              v99,
              v102,
              v28 & 1);
            a1[2] = v41;
            a1[3] = v42;
            a1[4] = v43;
            a1[5] = v44;
            a1[6] = v40;
            a1[7] = v73;
            a1[8] = v45;
            a1[9] = v71;
            a1[10] = v75;
            a1[11] = v77;
            a1[12] = v79;
            a1[13] = v81;
            a1[14] = v83;
            a1[15] = v85;
            a1[16] = v87;
            a1[17] = v89;
            a1[18] = v91;
            a1[19] = v93;
            a1[20] = v95;
            a1[21] = v97;
            a1[22] = v99;
            a1[23] = v102;
            *((unsigned char *)a1 + 192) = v104;
          }
          a1[25] = a2[25];
          int v46 = *((unsigned __int8 *)a2 + 384);
          swift_bridgeObjectRetain();
          if (v46 == 254 || v46 == 255)
          {
            long long v47 = *((_OWORD *)a2 + 22);
            *((_OWORD *)a1 + 21) = *((_OWORD *)a2 + 21);
            *((_OWORD *)a1 + 22) = v47;
            *((_OWORD *)a1 + 23) = *((_OWORD *)a2 + 23);
            *((unsigned char *)a1 + 384) = *((unsigned char *)a2 + 384);
            long long v48 = *((_OWORD *)a2 + 18);
            *((_OWORD *)a1 + 17) = *((_OWORD *)a2 + 17);
            *((_OWORD *)a1 + 18) = v48;
            long long v49 = *((_OWORD *)a2 + 20);
            *((_OWORD *)a1 + 19) = *((_OWORD *)a2 + 19);
            *((_OWORD *)a1 + 20) = v49;
            long long v50 = *((_OWORD *)a2 + 14);
            *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 14) = v50;
            long long v51 = *((_OWORD *)a2 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
            *((_OWORD *)a1 + 16) = v51;
          }
          else
          {
            char v105 = v46 & 1;
            uint64_t v52 = a2[30];
            uint64_t v72 = a2[33];
            uint64_t v74 = a2[31];
            uint64_t v76 = a2[34];
            uint64_t v78 = a2[35];
            uint64_t v80 = a2[36];
            uint64_t v82 = a2[37];
            uint64_t v84 = a2[38];
            uint64_t v86 = a2[39];
            uint64_t v88 = a2[40];
            uint64_t v90 = a2[41];
            uint64_t v92 = a2[42];
            uint64_t v94 = a2[43];
            uint64_t v96 = a2[44];
            uint64_t v98 = a2[45];
            uint64_t v100 = a2[46];
            uint64_t v103 = a2[47];
            char v70 = v46 & 1;
            uint64_t v53 = a2[26];
            uint64_t v54 = a2[27];
            uint64_t v55 = a2[28];
            uint64_t v56 = a2[29];
            uint64_t v57 = a2[32];
            sub_100136870(v53, v54, v55, v56, v52, v74, v57, v72, v76, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96,
              v98,
              v100,
              v103,
              v70);
            a1[26] = v53;
            a1[27] = v54;
            a1[28] = v55;
            a1[29] = v56;
            a1[30] = v52;
            a1[31] = v74;
            a1[32] = v57;
            a1[33] = v72;
            a1[34] = v76;
            a1[35] = v78;
            a1[36] = v80;
            a1[37] = v82;
            a1[38] = v84;
            a1[39] = v86;
            a1[40] = v88;
            a1[41] = v90;
            a1[42] = v92;
            a1[43] = v94;
            a1[44] = v96;
            a1[45] = v98;
            a1[46] = v100;
            a1[47] = v103;
            *((unsigned char *)a1 + 384) = v105;
          }
          uint64_t v58 = a2[54];
          if (v58)
          {
            uint64_t v59 = a2[50];
            a1[49] = a2[49];
            a1[50] = v59;
            a1[51] = a2[51];
            a1[52] = a2[52];
            *((_DWORD *)a1 + 106) = *((_DWORD *)a2 + 106);
            *(_DWORD *)((char *)a1 + 427) = *(_DWORD *)((char *)a2 + 427);
            uint64_t v60 = a2[55];
            uint64_t v61 = a2[56];
            a1[54] = v58;
            a1[55] = v60;
            uint64_t v62 = a2[57];
            uint64_t v63 = a2[58];
            a1[56] = v61;
            a1[57] = v62;
            uint64_t v65 = a2[59];
            uint64_t v64 = a2[60];
            a1[58] = v63;
            a1[59] = v65;
            uint64_t v101 = a2[61];
            a1[60] = v64;
            a1[61] = v101;
            uint64_t v106 = a2[63];
            a1[62] = a2[62];
            a1[63] = v106;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v66 = *(_OWORD *)(a2 + 59);
            *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
            *(_OWORD *)(a1 + 59) = v66;
            *(_OWORD *)(a1 + 61) = *(_OWORD *)(a2 + 61);
            a1[63] = a2[63];
            long long v67 = *(_OWORD *)(a2 + 51);
            *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
            *(_OWORD *)(a1 + 51) = v67;
            long long v68 = *(_OWORD *)(a2 + 55);
            *(_OWORD *)(a1 + 53) = *(_OWORD *)(a2 + 53);
            *(_OWORD *)(a1 + 55) = v68;
          }
          a1[64] = a2[64];
          a1[65] = a2[65];
          a1[66] = a2[66];
          *((unsigned char *)a1 + 536) = *((unsigned char *)a2 + 536);
          *((_DWORD *)a1 + 135) = *((_DWORD *)a2 + 135);
          *((unsigned char *)a1 + 544) = *((unsigned char *)a2 + 544);
          a1[69] = a2[69];
          *((unsigned char *)a1 + 560) = *((unsigned char *)a2 + 560);
          a1[71] = a2[71];
          a1[72] = a2[72];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 0x14u:
          uint64_t v34 = a2[1];
          *a1 = *a2;
          a1[1] = v34;
          a1[2] = a2[2];
          swift_retain();
          swift_retain();
          swift_retain();
          break;
        case 0x15u:
          uint64_t v35 = *a2;
          uint64_t v36 = a2[1];
          uint64_t v37 = a2[2];
          char v38 = *((unsigned char *)a2 + 24);
          sub_1002953E0();
          *a1 = v35;
          a1[1] = v36;
          a1[2] = v37;
          *((unsigned char *)a1 + 24) = v38;
          break;
        default:
          goto LABEL_13;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    case 3u:
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      uint64_t v12 = a2[2];
      unsigned __int8 v13 = *((unsigned char *)a2 + 24);
      sub_100483498(*a2, v11, v12, v13);
      *a1 = v10;
      a1[1] = v11;
      a1[2] = v12;
      *((unsigned char *)a1 + 24) = v13;
      *(uint64_t *)((char *)a1 + 28) = *(uint64_t *)((char *)a2 + 28);
      goto LABEL_50;
    case 4u:
      uint64_t v14 = *a2;
      unint64_t v15 = a2[1];
      char v16 = *((unsigned char *)a2 + 16);
      sub_10044B198(v14, v15, v16);
      *a1 = v14;
      a1[1] = v15;
      *((unsigned char *)a1 + 16) = v16;
      goto LABEL_50;
    case 5u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_50:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_10049EBAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10049BD04((uint64_t)a1, type metadata accessor for ConnectionEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1005E12C0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_51;
      case 1u:
        uint64_t v7 = type metadata accessor for ConnectionEvent.FailureReason(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v8 = sub_1005E1650();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_14:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        goto LABEL_51;
      case 2u:
        uint64_t v7 = type metadata accessor for UntaggedResponse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v9 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
            goto LABEL_26;
          case 1u:
            uint64_t v9 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
            goto LABEL_26;
          case 2u:
            uint64_t v9 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
            goto LABEL_26;
          case 3u:
            uint64_t v9 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
            goto LABEL_26;
          case 4u:
            uint64_t v9 = *a2;
            if ((~*a2 & 0xF000000000000007) != 0) {
              sub_10044AE74(*a2);
            }
LABEL_26:
            *a1 = v9;
            a1[1] = a2[1];
            a1[2] = a2[2];
            swift_bridgeObjectRetain();
            break;
          case 5u:
          case 6u:
          case 0xBu:
          case 0xDu:
            *a1 = *a2;
            swift_bridgeObjectRetain();
            break;
          case 7u:
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
            *((unsigned char *)a1 + 20) = *((unsigned char *)a2 + 20);
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            break;
          case 9u:
            *a1 = *a2;
            *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
            long long v17 = *((_OWORD *)a2 + 1);
            long long v18 = *((_OWORD *)a2 + 3);
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((_OWORD *)a1 + 3) = v18;
            *((_OWORD *)a1 + 1) = v17;
            long long v19 = *((_OWORD *)a2 + 4);
            long long v20 = *((_OWORD *)a2 + 5);
            long long v21 = *((_OWORD *)a2 + 6);
            *(_OWORD *)((char *)a1 + 105) = *(_OWORD *)((char *)a2 + 105);
            *((_OWORD *)a1 + 5) = v20;
            *((_OWORD *)a1 + 6) = v21;
            *((_OWORD *)a1 + 4) = v19;
            swift_bridgeObjectRetain();
            break;
          case 0xAu:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 0xCu:
            if (a2[1])
            {
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
              int v22 = *((_DWORD *)a2 + 7);
              *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
              *((_DWORD *)a1 + 7) = v22;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v39 = *(_OWORD *)a2;
              long long v40 = *((_OWORD *)a2 + 1);
              *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
              *(_OWORD *)a1 = v39;
              *((_OWORD *)a1 + 1) = v40;
            }
            *((unsigned char *)a1 + 33) = *((unsigned char *)a2 + 33);
            a1[5] = a2[5];
            swift_bridgeObjectRetain();
            break;
          case 0x11u:
          case 0x12u:
            uint64_t v23 = sub_10000566C(&qword_100716558);
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
            break;
          case 0x13u:
            int v24 = *(_DWORD *)a2;
            *((unsigned char *)a1 + 4) = *((unsigned char *)a2 + 4);
            *(_DWORD *)a1 = v24;
            LOBYTE(v24) = *((unsigned char *)a2 + 12);
            *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
            *((unsigned char *)a1 + 12) = v24;
            int v25 = *((unsigned __int8 *)a2 + 192);
            if (v25 == 254 || v25 == 255)
            {
              long long v26 = *((_OWORD *)a2 + 1);
              long long v27 = *((_OWORD *)a2 + 2);
              long long v28 = *((_OWORD *)a2 + 4);
              *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
              *((_OWORD *)a1 + 4) = v28;
              *((_OWORD *)a1 + 1) = v26;
              *((_OWORD *)a1 + 2) = v27;
              long long v29 = *((_OWORD *)a2 + 5);
              long long v30 = *((_OWORD *)a2 + 6);
              long long v31 = *((_OWORD *)a2 + 8);
              *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
              *((_OWORD *)a1 + 8) = v31;
              *((_OWORD *)a1 + 5) = v29;
              *((_OWORD *)a1 + 6) = v30;
              long long v32 = *((_OWORD *)a2 + 9);
              long long v33 = *((_OWORD *)a2 + 10);
              long long v34 = *((_OWORD *)a2 + 11);
              *((unsigned char *)a1 + 192) = *((unsigned char *)a2 + 192);
              *((_OWORD *)a1 + 10) = v33;
              *((_OWORD *)a1 + 11) = v34;
              *((_OWORD *)a1 + 9) = v32;
            }
            else
            {
              char v106 = v25 & 1;
              uint64_t v41 = a2[6];
              uint64_t v74 = a2[9];
              uint64_t v76 = a2[7];
              uint64_t v78 = a2[10];
              uint64_t v80 = a2[11];
              uint64_t v82 = a2[12];
              uint64_t v84 = a2[13];
              uint64_t v86 = a2[14];
              uint64_t v88 = a2[15];
              uint64_t v90 = a2[16];
              uint64_t v92 = a2[17];
              uint64_t v94 = a2[18];
              uint64_t v96 = a2[19];
              uint64_t v98 = a2[20];
              uint64_t v100 = a2[21];
              uint64_t v102 = a2[22];
              uint64_t v104 = a2[23];
              uint64_t v42 = a2[2];
              uint64_t v43 = a2[3];
              uint64_t v44 = a2[4];
              uint64_t v45 = a2[5];
              uint64_t v46 = a2[8];
              sub_100136870(v42, v43, v44, v45, v41, v76, v46, v74, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96, v98,
                v100,
                v102,
                v104,
                v25 & 1);
              a1[2] = v42;
              a1[3] = v43;
              a1[4] = v44;
              a1[5] = v45;
              a1[6] = v41;
              a1[7] = v76;
              a1[8] = v46;
              a1[9] = v74;
              a1[10] = v78;
              a1[11] = v80;
              a1[12] = v82;
              a1[13] = v84;
              a1[14] = v86;
              a1[15] = v88;
              a1[16] = v90;
              a1[17] = v92;
              a1[18] = v94;
              a1[19] = v96;
              a1[20] = v98;
              a1[21] = v100;
              a1[22] = v102;
              a1[23] = v104;
              *((unsigned char *)a1 + 192) = v106;
            }
            a1[25] = a2[25];
            int v47 = *((unsigned __int8 *)a2 + 384);
            swift_bridgeObjectRetain();
            if (v47 == 254 || v47 == 255)
            {
              long long v48 = *((_OWORD *)a2 + 13);
              long long v49 = *((_OWORD *)a2 + 14);
              long long v50 = *((_OWORD *)a2 + 16);
              *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
              *((_OWORD *)a1 + 16) = v50;
              *((_OWORD *)a1 + 13) = v48;
              *((_OWORD *)a1 + 14) = v49;
              long long v51 = *((_OWORD *)a2 + 17);
              long long v52 = *((_OWORD *)a2 + 18);
              long long v53 = *((_OWORD *)a2 + 20);
              *((_OWORD *)a1 + 19) = *((_OWORD *)a2 + 19);
              *((_OWORD *)a1 + 20) = v53;
              *((_OWORD *)a1 + 17) = v51;
              *((_OWORD *)a1 + 18) = v52;
              long long v54 = *((_OWORD *)a2 + 21);
              long long v55 = *((_OWORD *)a2 + 22);
              long long v56 = *((_OWORD *)a2 + 23);
              *((unsigned char *)a1 + 384) = *((unsigned char *)a2 + 384);
              *((_OWORD *)a1 + 22) = v55;
              *((_OWORD *)a1 + 23) = v56;
              *((_OWORD *)a1 + 21) = v54;
            }
            else
            {
              char v107 = v47 & 1;
              uint64_t v57 = a2[30];
              uint64_t v75 = a2[33];
              uint64_t v77 = a2[31];
              uint64_t v79 = a2[34];
              uint64_t v81 = a2[35];
              uint64_t v83 = a2[36];
              uint64_t v85 = a2[37];
              uint64_t v87 = a2[38];
              uint64_t v89 = a2[39];
              uint64_t v91 = a2[40];
              uint64_t v93 = a2[41];
              uint64_t v95 = a2[42];
              uint64_t v97 = a2[43];
              uint64_t v99 = a2[44];
              uint64_t v101 = a2[45];
              uint64_t v103 = a2[46];
              uint64_t v105 = a2[47];
              char v73 = v47 & 1;
              uint64_t v58 = a2[26];
              uint64_t v59 = a2[27];
              uint64_t v60 = a2[28];
              uint64_t v61 = a2[29];
              uint64_t v62 = a2[32];
              sub_100136870(v58, v59, v60, v61, v57, v77, v62, v75, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97, v99,
                v101,
                v103,
                v105,
                v73);
              a1[26] = v58;
              a1[27] = v59;
              a1[28] = v60;
              a1[29] = v61;
              a1[30] = v57;
              a1[31] = v77;
              a1[32] = v62;
              a1[33] = v75;
              a1[34] = v79;
              a1[35] = v81;
              a1[36] = v83;
              a1[37] = v85;
              a1[38] = v87;
              a1[39] = v89;
              a1[40] = v91;
              a1[41] = v93;
              a1[42] = v95;
              a1[43] = v97;
              a1[44] = v99;
              a1[45] = v101;
              a1[46] = v103;
              a1[47] = v105;
              *((unsigned char *)a1 + 384) = v107;
            }
            if (a2[54])
            {
              a1[49] = a2[49];
              a1[50] = a2[50];
              a1[51] = a2[51];
              *((_DWORD *)a1 + 104) = *((_DWORD *)a2 + 104);
              *((_DWORD *)a1 + 105) = *((_DWORD *)a2 + 105);
              int v63 = *((_DWORD *)a2 + 106);
              *(_DWORD *)((char *)a1 + 427) = *(_DWORD *)((char *)a2 + 427);
              *((_DWORD *)a1 + 106) = v63;
              a1[54] = a2[54];
              a1[55] = a2[55];
              a1[56] = a2[56];
              a1[57] = a2[57];
              a1[58] = a2[58];
              a1[59] = a2[59];
              a1[60] = a2[60];
              a1[61] = a2[61];
              a1[62] = a2[62];
              a1[63] = a2[63];
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v64 = *(_OWORD *)(a2 + 49);
              long long v65 = *(_OWORD *)(a2 + 51);
              long long v66 = *(_OWORD *)(a2 + 55);
              *(_OWORD *)(a1 + 53) = *(_OWORD *)(a2 + 53);
              *(_OWORD *)(a1 + 55) = v66;
              *(_OWORD *)(a1 + 49) = v64;
              *(_OWORD *)(a1 + 51) = v65;
              long long v67 = *(_OWORD *)(a2 + 57);
              long long v68 = *(_OWORD *)(a2 + 59);
              long long v69 = *(_OWORD *)(a2 + 61);
              a1[63] = a2[63];
              *(_OWORD *)(a1 + 59) = v68;
              *(_OWORD *)(a1 + 61) = v69;
              *(_OWORD *)(a1 + 57) = v67;
            }
            a1[64] = a2[64];
            a1[65] = a2[65];
            uint64_t v70 = a2[66];
            *((unsigned char *)a1 + 536) = *((unsigned char *)a2 + 536);
            a1[66] = v70;
            LODWORD(v70) = *((_DWORD *)a2 + 135);
            *((unsigned char *)a1 + 544) = *((unsigned char *)a2 + 544);
            *((_DWORD *)a1 + 135) = v70;
            uint64_t v71 = a2[69];
            *((unsigned char *)a1 + 560) = *((unsigned char *)a2 + 560);
            a1[69] = v71;
            a1[71] = a2[71];
            a1[72] = a2[72];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 0x14u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            swift_retain();
            swift_retain();
            swift_retain();
            break;
          case 0x15u:
            uint64_t v35 = *a2;
            uint64_t v36 = a2[1];
            uint64_t v37 = a2[2];
            char v38 = *((unsigned char *)a2 + 24);
            sub_1002953E0();
            *a1 = v35;
            a1[1] = v36;
            a1[2] = v37;
            *((unsigned char *)a1 + 24) = v38;
            break;
          default:
            goto LABEL_14;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      case 3u:
        uint64_t v10 = *a2;
        uint64_t v11 = a2[1];
        uint64_t v12 = a2[2];
        unsigned __int8 v13 = *((unsigned char *)a2 + 24);
        sub_100483498(*a2, v11, v12, v13);
        *a1 = v10;
        a1[1] = v11;
        a1[2] = v12;
        *((unsigned char *)a1 + 24) = v13;
        *(uint64_t *)((char *)a1 + 28) = *(uint64_t *)((char *)a2 + 28);
        goto LABEL_51;
      case 4u:
        uint64_t v14 = *a2;
        unint64_t v15 = a2[1];
        char v16 = *((unsigned char *)a2 + 16);
        sub_10044B198(v14, v15, v16);
        *a1 = v14;
        a1[1] = v15;
        *((unsigned char *)a1 + 16) = v16;
        goto LABEL_51;
      case 5u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
LABEL_51:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_10049F840(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v8 = type metadata accessor for UntaggedResponse(0);
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 18 || v9 == 17)
      {
        uint64_t v10 = sub_10000566C(&qword_100716558);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
LABEL_13:
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      goto LABEL_14;
    case 1:
      uint64_t v8 = type metadata accessor for ConnectionEvent.FailureReason(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_1005E1650();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      goto LABEL_13;
    case 0:
      uint64_t v7 = sub_1005E12C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_10049FAA4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_10049BD04((uint64_t)a1, type metadata accessor for ConnectionEvent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v8 = type metadata accessor for UntaggedResponse(0);
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 18 || v9 == 17)
      {
        uint64_t v10 = sub_10000566C(&qword_100716558);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
LABEL_14:
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      goto LABEL_15;
    case 1:
      uint64_t v8 = type metadata accessor for ConnectionEvent.FailureReason(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_1005E1650();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      goto LABEL_14;
    case 0:
      uint64_t v7 = sub_1005E12C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_10049FD2C()
{
  uint64_t result = sub_1005E12C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ConnectionEvent.FailureReason(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for UntaggedResponse(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_10049FE58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1005E17E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    uint64_t v9 = type metadata accessor for ClientCommand.Encoded();
    *(void *)&v6[*(int *)(v9 + 20)] = *(void *)&v7[*(int *)(v9 + 20)];
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_10049FF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for ClientCommand.Encoded();
  return swift_bridgeObjectRelease();
}

void *sub_10049FFB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005E17E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for ClientCommand.Encoded();
  *(void *)&v5[*(int *)(v8 + 20)] = *(void *)&v6[*(int *)(v8 + 20)];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1004A004C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for ClientCommand.Encoded();
  *(void *)(v5 + *(int *)(v8 + 20)) = *(void *)(v6 + *(int *)(v8 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1004A00F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005E17E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for ClientCommand.Encoded();
  *(void *)&v5[*(int *)(v8 + 20)] = *(void *)&v6[*(int *)(v8 + 20)];
  return a1;
}

uint64_t sub_1004A0184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  uint64_t v8 = type metadata accessor for ClientCommand.Encoded();
  *(void *)(v5 + *(int *)(v8 + 20)) = *(void *)(v6 + *(int *)(v8 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004A0224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A0238);
}

uint64_t sub_1004A0238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for ClientCommand.Encoded();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1004A02A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A02BC);
}

uint64_t sub_1004A02BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for ClientCommand.Encoded();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for ConnectionCommand(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716818);
}

uint64_t sub_1004A0350()
{
  uint64_t result = type metadata accessor for ClientCommand.Encoded();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004A03E8(uint64_t result)
{
  if ((result & 0x8000000000000000) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for TransportLayerSecurity(uint64_t *a1)
{
  sub_100451F2C(*a1);
  uint64_t result = a1[5];
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TransportLayerSecurity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  sub_1004A03E8(*(void *)a2);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
  }
  else
  {
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for TransportLayerSecurity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  sub_1004A03E8(*(void *)a2);
  uint64_t v7 = *(void *)a1;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  sub_100451F2C(v7);
  uint64_t v8 = (long long *)(a1 + 24);
  uint64_t v9 = (long long *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *v9;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *uint64_t v8 = v11;
    }
    else
    {
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_100007A48(a1 + 24, &qword_100716860);
    uint64_t v12 = *(void *)(a2 + 40);
    *uint64_t v8 = *v9;
    *(void *)(a1 + 40) = v12;
  }
  else
  {
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t assignWithTake for TransportLayerSecurity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  sub_100451F2C(v5);
  if (*(void *)(a1 + 40) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    if (v6 != 1)
    {
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_100007A48(a1 + 24, &qword_100716860);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportLayerSecurity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  unsigned int v2 = v3 >> 30;
  if (v2 > 0x80000000) {
    int v4 = ~v2;
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportLayerSecurity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)uint64_t result = (unint64_t)(v3 >> 2) << 32;
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportLayerSecurity()
{
  return &type metadata for TransportLayerSecurity;
}

unint64_t destroy for ConnectionAction(unint64_t *a1)
{
  return sub_100484C20(*a1);
}

unint64_t *initializeWithCopy for ConnectionAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  sub_100484BD4(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

unint64_t *assignWithCopy for ConnectionAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  sub_100484BD4(*a2);
  unint64_t v7 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_100484C20(v7);
  return a1;
}

uint64_t assignWithTake for ConnectionAction(uint64_t a1, _OWORD *a2)
{
  unint64_t v3 = *(void *)a1;
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  sub_100484C20(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionAction(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  unsigned int v2 = v3 >> 30;
  if (v2 > 0x80000000) {
    int v4 = ~v2;
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectionAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(void *)uint64_t result = (unint64_t)(v3 >> 2) << 32;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1004A08F4(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return *a1 + 2;
  }
}

unint64_t *sub_1004A090C(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *uint64_t result = *(unsigned int *)result | (unint64_t)(a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    *uint64_t result = (a2 - 2) | 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionAction()
{
  return &type metadata for ConnectionAction;
}

uint64_t sub_1004A0948(uint64_t a1, uint64_t a2)
{
  return sub_1004A0964(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1004A0964(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 == 1)
    {
      if (a5 >> 62 == 1) {
        return static PushRegistrationResponse.__derived_struct_equals(_:_:)(a1, a2, a3, a4, a5, a6, a7, a8);
      }
    }
    else
    {
      uint64_t v9 = a3 | a2 | a4;
      if (a1 != 0x8000000000000000 || v9)
      {
        if (a1 != 0x8000000000000001 || v9)
        {
          if (a1 != 0x8000000000000002 || v9)
          {
            if (a1 != 0x8000000000000003 || v9)
            {
              if (a5 >> 62 == 2 && a5 == 0x8000000000000004 && !(a7 | a6 | a8)) {
                return 1;
              }
            }
            else if (a5 >> 62 == 2 && a5 == 0x8000000000000003 && !(a7 | a6 | a8))
            {
              return 1;
            }
          }
          else if (a5 >> 62 == 2 && a5 == 0x8000000000000002 && !(a7 | a6 | a8))
          {
            return 1;
          }
        }
        else if (a5 >> 62 == 2 && a5 == 0x8000000000000001 && !(a7 | a6 | a8))
        {
          return 1;
        }
      }
      else if (a5 >> 62 == 2 && a5 == 0x8000000000000000 && !(a7 | a6 | a8))
      {
        return 1;
      }
    }
  }
  else if (!(a5 >> 62))
  {
    return ((a5 ^ a1) & 0x101FFLL) == 0;
  }
  return 0;
}

uint64_t ConnectionState.isClosed.getter()
{
  uint64_t v1 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v1);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 3:
    case 4:
      uint64_t result = 1;
      break;
    case 5:
      return result;
    default:
      sub_1004AE100((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t type metadata accessor for ConnectionState()
{
  uint64_t result = qword_1007168E0;
  if (!qword_1007168E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

BOOL ConnectionState.isReadyForCommands.getter()
{
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v0, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  BOOL v4 = 0;
  if (EnumCaseMultiPayload - 3 >= 3)
  {
    BOOL v4 = EnumCaseMultiPayload >= 2;
    sub_1004AE100((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  return v4;
}

Swift::Bool __swiftcall ConnectionState.selectMailbox(name:)(NIOIMAPCore2::MailboxName name)
{
  Swift::UInt32 value = name._hashValue._value;
  rawValue = name.bytes._rawValue;
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    sub_1004AE100((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return EnumCaseMultiPayload == 2;
  }
  memcpy(v38, v5, 0x15AuLL);
  sub_100482DD4((uint64_t)&v38[23], (uint64_t)v39);
  if (!sub_100482E30((uint64_t)v39))
  {
    sub_100483328((uint64_t)v39);
LABEL_8:
    sub_1004AE100((uint64_t)v1, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    char v15 = 1;
    char v14 = 1;
    char v13 = 1;
    char v12 = 1;
    char v11 = 1;
    uint64_t v10 = v1;
    uint64_t v8 = v38[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100086B44((uint64_t)&v38[1]);
    sub_100482E3C((uint64_t)v38);
    char v16 = rawValue;
    Swift::UInt32 v17 = value;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    uint64_t v22 = 0;
    int v23 = 0x800000;
    uint64_t v25 = 0;
    uint64_t v24 = 0;
    char v26 = v15;
    int v27 = 0;
    char v28 = v14;
    uint64_t v29 = 0;
    int v30 = 0;
    char v31 = v13;
    int v32 = 0;
    char v33 = v12;
    uint64_t v34 = 0;
    char v35 = 0;
    char v36 = v11;
    sub_1004A0FF8((uint64_t)&v16);
    v37[0] = v8;
    *(_OWORD *)&v37[15] = *(_OWORD *)&v38[15];
    *(_OWORD *)&v37[17] = *(_OWORD *)&v38[17];
    *(_OWORD *)&v37[19] = *(_OWORD *)&v38[19];
    *(_OWORD *)&v37[21] = *(_OWORD *)&v38[21];
    *(_OWORD *)&v37[7] = *(_OWORD *)&v38[7];
    *(_OWORD *)&v37[9] = *(_OWORD *)&v38[9];
    *(_OWORD *)&v37[11] = *(_OWORD *)&v38[11];
    *(_OWORD *)&v37[13] = *(_OWORD *)&v38[13];
    *(_OWORD *)&v37[1] = *(_OWORD *)&v38[1];
    *(_OWORD *)&v37[3] = *(_OWORD *)&v38[3];
    *(_OWORD *)&v37[5] = *(_OWORD *)&v38[5];
    sub_100482DD4((uint64_t)&v16, (uint64_t)&v37[23]);
    memcpy(v10, v37, 0x15AuLL);
    swift_storeEnumTagMultiPayload();
    return EnumCaseMultiPayload == 2;
  }
  uint64_t v7 = sub_100483328((uint64_t)v39);
  if ((*(unsigned int *)(v7 + 8) | ((unint64_t)*(unsigned int *)(v7 + 8) << 32)) != (value | ((unint64_t)value << 32))
    || !sub_1000255D4(*(void *)v7, (uint64_t)rawValue))
  {
    goto LABEL_8;
  }
  sub_100482E3C((uint64_t)v38);
  return EnumCaseMultiPayload == 2;
}

int8x16_t sub_1004A0FF8(uint64_t a1)
{
  __int16 v1 = *(_WORD *)(a1 + 160);
  uint64_t v2 = *(void *)(a1 + 72) & 0x1FFFFFFFFLL;
  uint64_t v3 = *(void *)(a1 + 88) & 0x1E101FFLL;
  *(void *)(a1 + 48) &= 0x1FFFFFFFFuLL;
  *(void *)(a1 + 72) = v2;
  *(void *)(a1 + 88) = v3;
  *(int8x16_t *)(a1 + 112) = vandq_s8(*(int8x16_t *)(a1 + 112), (int8x16_t)xmmword_1005F69A0);
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 136), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
  *(int8x16_t *)(a1 + 136) = result;
  *(_WORD *)(a1 + 160) = v1 & 0x1FF | 0x4000;
  return result;
}

uint64_t ConnectionState.mailboxSelectionPayload(old:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ConnectionState();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v31 - v8;
  sub_1004AD164(a1, (uint64_t)v31 - v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004AE100((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_12:
    uint64_t v11 = 0;
    uint64_t v21 = 0;
    uint64_t v17 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    unint64_t v20 = 0;
    goto LABEL_13;
  }
  memcpy(v51, v9, 0x15AuLL);
  sub_100482DD4((uint64_t)&v51[184], (uint64_t)v52);
  if (sub_100482E30((uint64_t)v52) != 2)
  {
    sub_100482E3C((uint64_t)v51);
    goto LABEL_12;
  }
  uint64_t v10 = sub_100483328((uint64_t)v52);
  uint64_t v11 = *(void *)v10;
  uint64_t v44 = *(unsigned int *)(v10 + 8);
  uint64_t v12 = *(void *)(v10 + 24);
  uint64_t v13 = *(unsigned int *)(v10 + 32);
  uint64_t v45 = *(void *)(v10 + 16);
  uint64_t v46 = v13;
  int v14 = *(unsigned __int8 *)(v10 + 36);
  uint64_t v48 = *(void *)(v10 + 40);
  uint64_t v49 = v12;
  uint64_t v40 = *(unsigned int *)(v10 + 48);
  int v15 = *(unsigned __int8 *)(v10 + 52);
  uint64_t v42 = *(unsigned int *)(v10 + 56);
  uint64_t v47 = *(void *)(v10 + 64);
  LODWORD(v43) = *(unsigned __int8 *)(v10 + 72);
  LODWORD(v39) = *(unsigned __int8 *)(v10 + 73);
  int v41 = *(unsigned __int8 *)(v10 + 74);
  sub_100482DD4((uint64_t)&v51[184], (uint64_t)v50);
  sub_100483328((uint64_t)v50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100482E3C((uint64_t)v51);
  BOOL v16 = v14 == 0;
  uint64_t v17 = v45;
  if (v16) {
    long long v18 = 0;
  }
  else {
    long long v18 = &_mh_execute_header;
  }
  v46 |= (unint64_t)v18;
  if (v15) {
    long long v19 = &_mh_execute_header;
  }
  else {
    long long v19 = 0;
  }
  unint64_t v20 = (unint64_t)v19 | v40;
  uint64_t v21 = v44;
LABEL_13:
  sub_1004AD164(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004AE100((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (!v11) {
      return 0xF000000000000007;
    }
LABEL_20:
    sub_10002A7F4(v11);
    return 0x8000000000000000;
  }
  uint64_t v45 = v17;
  uint64_t v22 = v21;
  memcpy(v51, v7, 0x15AuLL);
  sub_100482DD4((uint64_t)&v51[184], (uint64_t)v52);
  if (sub_100482E30((uint64_t)v52) != 2)
  {
    sub_100482E3C((uint64_t)v51);
    if (!v11) {
      return 0xF000000000000007;
    }
    goto LABEL_20;
  }
  v31[1] = v20;
  uint64_t v23 = sub_100483328((uint64_t)v52);
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(unsigned int *)(v23 + 8);
  uint64_t v26 = *(void *)(v23 + 16);
  uint64_t v42 = *(void *)(v23 + 24);
  uint64_t v43 = v26;
  int v41 = *(_DWORD *)(v23 + 32);
  LODWORD(v40) = *(unsigned __int8 *)(v23 + 36);
  uint64_t v39 = *(void *)(v23 + 40);
  LODWORD(v26) = *(_DWORD *)(v23 + 48);
  int v37 = *(unsigned __int8 *)(v23 + 52);
  int v38 = v26;
  LODWORD(v26) = *(_DWORD *)(v23 + 56);
  int v35 = *(unsigned __int8 *)(v23 + 60);
  int v36 = v26;
  uint64_t v34 = *(void *)(v23 + 64);
  LODWORD(v26) = *(unsigned __int8 *)(v23 + 72);
  int v32 = *(unsigned __int8 *)(v23 + 73);
  int v33 = v26;
  LODWORD(v44) = *(unsigned __int8 *)(v23 + 74);
  sub_100482DD4((uint64_t)&v51[184], (uint64_t)v50);
  sub_100483328((uint64_t)v50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100482E3C((uint64_t)v51);
  if (v11)
  {
    if ((v22 | (v22 << 32)) == (v25 | (v25 << 32)))
    {
      BOOL v27 = sub_1000255D4(v11, v24);
      sub_10002A7F4(v11);
      if (v27)
      {
        sub_1004850D0((uint64_t)&v51[184], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
        return 0xF000000000000007;
      }
    }
    else
    {
      sub_10002A7F4(v11);
    }
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v24;
  *(_DWORD *)(v29 + 24) = v25;
  uint64_t v30 = v42;
  *(void *)(v29 + 32) = v43;
  *(void *)(v29 + 40) = v30;
  *(_DWORD *)(v29 + 48) = v41;
  *(unsigned char *)(v29 + 52) = v40;
  *(void *)(v29 + 56) = v39;
  *(_DWORD *)(v29 + 64) = v38;
  *(unsigned char *)(v29 + 68) = v37;
  *(_DWORD *)(v29 + 72) = v36;
  *(unsigned char *)(v29 + 76) = v35;
  *(void *)(v29 + 80) = v34;
  *(unsigned char *)(v29 + 88) = v33;
  *(unsigned char *)(v29 + 89) = v32;
  uint64_t result = v29 | 0x2000000000000000;
  *(unsigned char *)(v29 + 90) = v44;
  return result;
}

uint64_t sub_1004A15A8(uint64_t a1, unint64_t a2, char a3, uint64_t a4, void (*a5)(unint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  unint64_t v39 = a2;
  uint64_t v38 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005E0ED0();
  uint64_t v44 = *(void *)(v14 - 8);
  uint64_t v45 = v14;
  __chkstk_darwin(v14);
  BOOL v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v17);
  long long v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(a7, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1004AE64C((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
    uint64_t v23 = v42;
    uint64_t v24 = sub_1004FF980(a1, v39, a3 & 1, v40, v41, a4);
    if (!v23)
    {
      uint64_t v33 = (uint64_t)v24;
      unint64_t v34 = v25;
      unsigned __int8 v35 = v26;
      sub_1004AE100(a7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_1004AD164((uint64_t)v22, a7, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      swift_storeEnumTagMultiPayload();
      if (v35 != 0xFF)
      {
        sub_1004AD1CC(v33, v34, v35);
        sub_10046FF60(v33, v34, v35 & 1);
        CommandConnection.flush()();
        sub_1004AD1E4(v33, v34, v35);
        sub_1004AD1E4(v33, v34, v35);
      }
    }
    sub_1004AE100((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
  }
  else
  {
    sub_1004AE100((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v16, a4, v45);
    sub_1004AD164(a4, (uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    BOOL v27 = sub_1005E0EB0();
    os_log_type_t v28 = sub_1005E25A0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 68158210;
      LODWORD(v46) = 2;
      sub_1005E2960();
      *(_WORD *)(v29 + 8) = 256;
      uint64_t v30 = &v13[*(int *)(v38 + 20)];
      LOBYTE(v46) = *v30;
      sub_1005E2960();
      *(_WORD *)(v29 + 11) = 2082;
      uint64_t v31 = ConnectionID.debugDescription.getter(*((unsigned int *)v30 + 1));
      uint64_t v46 = sub_100481E54(v31, v32, &v47);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004AE100((uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[%.*hhx-%{public}s] Received HandshakeQuery, but not in unauthenticated state.", (uint8_t *)v29, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004AE100((uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v45);
    sub_1004AD110();
    swift_allocError();
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1004A1AF8(unint64_t *a1, uint64_t a2)
{
  uint64_t v5 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v25 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v14 - 8);
  BOOL v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v2;
  sub_1004AE64C(v2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1004AE64C((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
    sub_1004FFB80(a1, a2);
    sub_1004AE64C((uint64_t)v16, v26, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
  }
  else
  {
    sub_1004AE100((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v10, a2, v8);
    sub_1004AD164(a2, (uint64_t)v7, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v17 = sub_1005E0EB0();
    os_log_type_t v18 = sub_1005E25A0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 68158210;
      LODWORD(v27) = 2;
      sub_1005E2960();
      *(_WORD *)(v19 + 8) = 256;
      uint64_t v20 = &v7[*(int *)(v5 + 20)];
      LOBYTE(v27) = *v20;
      sub_1005E2960();
      *(_WORD *)(v19 + 11) = 2082;
      uint64_t v21 = ConnectionID.debugDescription.getter(*((unsigned int *)v20 + 1));
      uint64_t v27 = sub_100481E54(v21, v22, &v28);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004AE100((uint64_t)v7, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%.*hhx-%{public}s] Received did-start-TLS, but not in unauthenticated state.", (uint8_t *)v19, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004AE100((uint64_t)v7, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1004A1F78(uint64_t a1, char a2)
{
  uint64_t v5 = sub_10000566C(&qword_100716918);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result >= 3)
  {
    if ((result - 3) < 2) {
      return result;
    }
  }
  else
  {
    sub_1004AE100((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  uint64_t v12 = &v7[*(int *)(v5 + 48)];
  sub_1004AD164(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t v13 = sub_1005E12C0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v15(v12, a1, v13);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v12, v13);
  if (v16 == enum case for NWConnection.State.failed(_:)) {
    goto LABEL_5;
  }
  if (v16 == enum case for NWConnection.State.ready(_:))
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      char v17 = a2 & 1;
      sub_1004AE100(v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      __uint64_t v18 = static MonotonicTime.now()();
      *(void *)(v2 + *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 28)) = _swiftEmptyArrayStorage;
      *(unsigned char *)uint64_t v2 = v17;
      *(void *)(v2 + 8) = v18;
      type metadata accessor for UnauthenticatedState();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v19 = (uint64_t)v7;
      goto LABEL_13;
    }
  }
  else if (v16 == enum case for NWConnection.State.cancelled(_:))
  {
LABEL_5:
    sub_1004AE100(v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    return sub_1004AE100((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  if (swift_getEnumCaseMultiPayload()) {
    return sub_100007A48((uint64_t)v7, &qword_100716918);
  }
  sub_1004AE100(v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  v15((char *)v2, a1, v13);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (uint64_t)v7;
LABEL_13:
  sub_1004AE100(v19, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v12, v13);
}

unint64_t sub_1004A2340(unint64_t a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(unint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6, unint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v45 = a5;
  uint64_t v46 = a6;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  unint64_t v47 = a1;
  uint64_t v11 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ConnectionState();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v42 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v39 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  unint64_t v22 = (char *)v39 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v39 - v23;
  sub_1004AD164((uint64_t)v8, (uint64_t)v39 - v23, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1004AE100((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  else
  {
    uint64_t v41 = v14;
    sub_1004AE100((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    sub_1004AE100((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    __uint64_t v25 = static MonotonicTime.now()();
    *(void *)((char *)v8 + *(int *)(v11 + 28)) = _swiftEmptyArrayStorage;
    *(unsigned char *)uint64_t v8 = a2 & 1;
    v8[1] = v25;
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  sub_1004AD164((uint64_t)v8, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1004AE100((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v26 = sub_1004AE64C((uint64_t)v22, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
    __chkstk_darwin(v26);
    uint64_t v28 = v44;
    uint64_t v27 = v45;
    v39[-2] = v43;
    v39[-1] = v28;
    sub_1004FF540(v47, (uint64_t)sub_1004AE9A4, (uint64_t)&v39[-4], v27, v46, a7);
    sub_1004AE64C((uint64_t)v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
    return swift_storeEnumTagMultiPayload();
  }
  sub_1004AE100((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_1004AD164((uint64_t)v8, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004AE100((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_12:
    unint64_t v38 = v47;
    sub_1004849C8(v47);
    sub_1004AD294((uint64_t)v8, v38);
    return sub_100484A20(v38);
  }
  memcpy(v69, v19, 0x15AuLL);
  memcpy(v71, v19, 0x15AuLL);
  sub_100482DD4((uint64_t)&v69[23], (uint64_t)v70);
  if (sub_100482E30((uint64_t)v70) != 1)
  {
    sub_100482E3C((uint64_t)v69);
    goto LABEL_12;
  }
  uint64_t v30 = sub_100483328((uint64_t)v70);
  unint64_t v40 = a7;
  uint64_t v31 = v69[0];
  v39[1] = v69[6];
  v39[2] = v69[10];
  uint64_t v41 = v69[12];
  uint64_t v43 = v69[14];
  uint64_t v44 = v69[16];
  uint64_t v45 = (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v69[18];
  uint64_t v46 = v69[20];
  v39[3] = v69[22];
  sub_1004850D0((uint64_t)&v69[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1004AE100((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  long long v32 = *(_OWORD *)(v30 + 144);
  long long v66 = *(_OWORD *)(v30 + 128);
  long long v67 = v32;
  __int16 v68 = *(_WORD *)(v30 + 160);
  long long v33 = *(_OWORD *)(v30 + 80);
  long long v62 = *(_OWORD *)(v30 + 64);
  long long v63 = v33;
  long long v34 = *(_OWORD *)(v30 + 96);
  long long v65 = *(_OWORD *)(v30 + 112);
  long long v64 = v34;
  long long v35 = *(_OWORD *)(v30 + 16);
  long long v58 = *(_OWORD *)v30;
  long long v59 = v35;
  long long v36 = *(_OWORD *)(v30 + 32);
  long long v61 = *(_OWORD *)(v30 + 48);
  long long v60 = v36;
  sub_1004CCE28(v47, v40);
  v52[8] = v66;
  v52[9] = v67;
  v52[4] = v62;
  v52[5] = v63;
  v52[7] = v65;
  v52[6] = v64;
  v52[0] = v58;
  v52[1] = v59;
  v52[2] = v60;
  v52[3] = v61;
  v54[8] = v66;
  v54[9] = v67;
  v54[4] = v62;
  v54[5] = v63;
  v54[7] = v65;
  v54[6] = v64;
  v54[0] = v58;
  v54[1] = v59;
  __int16 v53 = v68;
  __int16 v55 = v68;
  v54[3] = v61;
  v54[2] = v60;
  sub_1004A0FF8((uint64_t)v54);
  sub_100482DD4((uint64_t)&v71[184], (uint64_t)v56);
  sub_100483338((uint64_t)v52);
  sub_100483338((uint64_t)v52);
  sub_1004850D0((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
  sub_100482DD4((uint64_t)v54, (uint64_t)&v71[184]);
  v57[0] = v31;
  *(_OWORD *)&v57[15] = *(_OWORD *)&v69[15];
  *(_OWORD *)&v57[17] = *(_OWORD *)&v69[17];
  *(_OWORD *)&v57[19] = *(_OWORD *)&v69[19];
  *(_OWORD *)&v57[21] = *(_OWORD *)&v69[21];
  *(_OWORD *)&v57[7] = *(_OWORD *)&v69[7];
  *(_OWORD *)&v57[9] = *(_OWORD *)&v69[9];
  *(_OWORD *)&v57[11] = *(_OWORD *)&v69[11];
  *(_OWORD *)&v57[13] = *(_OWORD *)&v69[13];
  *(_OWORD *)&v57[1] = *(_OWORD *)&v69[1];
  *(_OWORD *)&v57[3] = *(_OWORD *)&v69[3];
  *(_OWORD *)&v57[5] = *(_OWORD *)&v69[5];
  sub_100482DD4((uint64_t)v54, (uint64_t)&v57[23]);
  sub_1004AE75C((uint64_t)v57);
  sub_1004AE8E8((uint64_t)v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v8, v57, 0x15AuLL);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = v42;
  sub_1004AD164((uint64_t)v8, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1004AE100((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    memcpy(v51, v37, 0x15AuLL);
    sub_1004A6D2C((uint64_t)&v51[184], v40);
    memcpy(v8, v51, 0x15AuLL);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1004AE100((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  v48[8] = v66;
  v48[9] = v67;
  __int16 v49 = v68;
  v48[4] = v62;
  v48[5] = v63;
  v48[6] = v64;
  v48[7] = v65;
  v48[0] = v58;
  v48[1] = v59;
  v48[2] = v60;
  v48[3] = v61;
  sub_1004AE8E8((uint64_t)v48);
  memcpy(v50, v71, 0x15AuLL);
  return sub_100482E3C((uint64_t)v50);
}

uint64_t ConnectionState.isClosedOrCancelled.getter()
{
  uint64_t v1 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_1004AD164(v0, (uint64_t)&v10 - v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 3)
  {
    sub_1004AE100((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_5:
    sub_1004AD164(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    BOOL v8 = swift_getEnumCaseMultiPayload() == 5;
    sub_1004AE100((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return v8;
  }
  if (EnumCaseMultiPayload - 3 >= 2) {
    goto LABEL_5;
  }
  return 1;
}

uint64_t ConnectionState.hasMailboxSelected.getter()
{
  uint64_t v1 = v0;
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004AD164(v1, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    memcpy(v6, v3, 0x15AuLL);
    sub_100482DD4((uint64_t)&v6[184], (uint64_t)v7);
    if (sub_100482E30((uint64_t)v7) == 2)
    {
      sub_100483328((uint64_t)v7);
      sub_100482E3C((uint64_t)v6);
      return 1;
    }
    sub_100482E3C((uint64_t)v6);
  }
  else
  {
    sub_1004AE100((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  return 0;
}

uint64_t static AuthenticatedState.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_100485B4C(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  long long v4 = *(_OWORD *)(a1 + 120);
  long long v5 = *(_OWORD *)(a1 + 152);
  v56[8] = *(_OWORD *)(a1 + 136);
  v56[9] = v5;
  v56[10] = *(_OWORD *)(a1 + 168);
  long long v6 = *(_OWORD *)(a1 + 56);
  long long v7 = *(_OWORD *)(a1 + 88);
  v56[4] = *(_OWORD *)(a1 + 72);
  v56[5] = v7;
  v56[6] = *(_OWORD *)(a1 + 104);
  v56[7] = v4;
  long long v8 = *(_OWORD *)(a1 + 24);
  v56[0] = *(_OWORD *)(a1 + 8);
  v56[1] = v8;
  v56[2] = *(_OWORD *)(a1 + 40);
  v56[3] = v6;
  long long v9 = *(_OWORD *)(a2 + 120);
  long long v10 = *(_OWORD *)(a2 + 152);
  v55[8] = *(_OWORD *)(a2 + 136);
  v55[9] = v10;
  v55[10] = *(_OWORD *)(a2 + 168);
  long long v11 = *(_OWORD *)(a2 + 56);
  long long v12 = *(_OWORD *)(a2 + 88);
  v55[4] = *(_OWORD *)(a2 + 72);
  v55[5] = v12;
  v55[6] = *(_OWORD *)(a2 + 104);
  v55[7] = v9;
  long long v13 = *(_OWORD *)(a2 + 24);
  v55[0] = *(_OWORD *)(a2 + 8);
  v55[1] = v13;
  v55[2] = *(_OWORD *)(a2 + 40);
  v55[3] = v11;
  if ((static ServerID.__derived_struct_equals(_:_:)(v56, v55) & 1) == 0) {
    return 0;
  }
  sub_100482DD4(a1 + 184, (uint64_t)v54);
  sub_100482DD4(a2 + 184, (uint64_t)v53);
  sub_100482DD4((uint64_t)v54, (uint64_t)v70);
  int v14 = sub_100482E30((uint64_t)v70);
  if (v14)
  {
    if (v14 != 1)
    {
      uint64_t v31 = (long long *)sub_100483328((uint64_t)v70);
      long long v50 = v31[1];
      long long v51 = v31[2];
      v52[0] = v31[3];
      *(_OWORD *)((char *)v52 + 11) = *(long long *)((char *)v31 + 59);
      long long v49 = *v31;
      sub_100482DD4((uint64_t)v53, (uint64_t)v68);
      if (sub_100482E30((uint64_t)v68) != 2) {
        return 0;
      }
      uint64_t v32 = sub_100483328((uint64_t)v68);
      uint64_t v33 = *(void *)v32;
      int v34 = *(_DWORD *)(v32 + 8);
      uint64_t v35 = *(void *)(v32 + 16);
      uint64_t v36 = *(void *)(v32 + 24);
      int v37 = *(_DWORD *)(v32 + 32);
      char v38 = *(unsigned char *)(v32 + 36);
      uint64_t v39 = *(void *)(v32 + 40);
      int v40 = *(_DWORD *)(v32 + 48);
      char v41 = *(unsigned char *)(v32 + 52);
      int v42 = *(_DWORD *)(v32 + 56);
      char v43 = *(unsigned char *)(v32 + 60);
      uint64_t v44 = *(void *)(v32 + 64);
      char v45 = *(unsigned char *)(v32 + 72);
      char v46 = *(unsigned char *)(v32 + 73);
      LOBYTE(v32) = *(unsigned char *)(v32 + 74);
      *(void *)&long long v57 = v33;
      DWORD2(v57) = v34;
      *(void *)&long long v58 = v35;
      *((void *)&v58 + 1) = v36;
      LODWORD(v59) = v37;
      BYTE4(v59) = v38;
      *((void *)&v59 + 1) = v39;
      LODWORD(v60) = v40;
      BYTE4(v60) = v41;
      DWORD2(v60) = v42;
      BYTE12(v60) = v43;
      *(void *)&long long v61 = v44;
      BYTE8(v61) = v45;
      BYTE9(v61) = v46;
      BYTE10(v61) = v32;
      return (_s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v49, (uint64_t)&v57) & 1) != 0;
    }
    uint64_t v15 = sub_100483328((uint64_t)v70);
    long long v64 = *(_OWORD *)(v15 + 112);
    long long v65 = *(_OWORD *)(v15 + 128);
    long long v66 = *(_OWORD *)(v15 + 144);
    __int16 v67 = *(_WORD *)(v15 + 160);
    long long v60 = *(_OWORD *)(v15 + 48);
    long long v61 = *(_OWORD *)(v15 + 64);
    long long v62 = *(_OWORD *)(v15 + 80);
    long long v63 = *(_OWORD *)(v15 + 96);
    long long v57 = *(_OWORD *)v15;
    long long v58 = *(_OWORD *)(v15 + 16);
    long long v59 = *(_OWORD *)(v15 + 32);
    sub_100482DD4((uint64_t)v53, (uint64_t)&v49);
    if (sub_100482E30((uint64_t)&v49) == 1)
    {
      uint64_t v16 = sub_100483328((uint64_t)&v49);
      v68[7] = *(_OWORD *)(v16 + 112);
      v68[8] = *(_OWORD *)(v16 + 128);
      v68[9] = *(_OWORD *)(v16 + 144);
      __int16 v69 = *(_WORD *)(v16 + 160);
      v68[3] = *(_OWORD *)(v16 + 48);
      v68[4] = *(_OWORD *)(v16 + 64);
      v68[5] = *(_OWORD *)(v16 + 80);
      v68[6] = *(_OWORD *)(v16 + 96);
      v68[0] = *(_OWORD *)v16;
      v68[1] = *(_OWORD *)(v16 + 16);
      v68[2] = *(_OWORD *)(v16 + 32);
      sub_1004850D0((uint64_t)v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
      sub_1004850D0((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
      char v17 = sub_1004CE270((uint64_t)&v57, (uint64_t)v68);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v18 = (unint64_t *)sub_100483328((uint64_t)v70);
    unint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v22 = v18[2];
    uint64_t v21 = v18[3];
    uint64_t v23 = v18[4];
    sub_100482DD4((uint64_t)v53, (uint64_t)v68);
    if (!sub_100482E30((uint64_t)v68))
    {
      uint64_t v24 = (unint64_t *)sub_100483328((uint64_t)v68);
      unint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      unint64_t v28 = v24[2];
      uint64_t v27 = v24[3];
      uint64_t v29 = v24[4];
      if (v20)
      {
        if (v26)
        {
          *(void *)&long long v49 = v20;
          DWORD2(v49) = v19;
          *(void *)&long long v50 = v22;
          *((void *)&v50 + 1) = v21;
          *(void *)&long long v51 = v23;
          *(void *)&long long v57 = v26;
          DWORD2(v57) = v25;
          *(void *)&long long v58 = v28;
          *((void *)&v58 + 1) = v27;
          *(void *)&long long v59 = v29;
          sub_1004850D0((uint64_t)v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
          sub_1004850D0((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
          char v17 = _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v49, (uint64_t)&v57);
LABEL_11:
          char v30 = v17;
          sub_1004850D0((uint64_t)v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
          sub_1004850D0((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
          return (v30 & 1) != 0;
        }
        sub_100482DD4((uint64_t)v53, (uint64_t)&v57);
        uint64_t v48 = sub_100483328((uint64_t)&v57);
        sub_100484FD8(*(void *)v48, *(void *)(v48 + 8), *(void *)(v48 + 16), *(void *)(v48 + 24), *(void *)(v48 + 32));
      }
      else if (!v26)
      {
        return 1;
      }
      sub_1004850D0((uint64_t)v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
      sub_1004850D0((uint64_t)v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
      sub_100483114(v20, v19, v22, v21, v23);
      sub_100483114(v26, v25, v28, v27, v29);
    }
  }
  return 0;
}

uint64_t ConnectionState.kind.getter()
{
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v0, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t v3 = 4;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004AE100((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t v3 = 2;
      break;
    case 2u:
      sub_1004AE100((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t v3 = 3;
      break;
    case 3u:
      uint64_t v3 = 6;
      break;
    case 4u:
      return v3;
    case 5u:
      uint64_t v3 = 5;
      break;
    default:
      uint64_t v4 = sub_1005E12C0();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v3 = (*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v2, v4) == enum case for NWConnection.State.waiting(_:);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
      break;
  }
  return v3;
}

uint64_t ConnectionState.nonSensitiveShortLogDescription.getter()
{
  uint64_t v1 = v0;
  type metadata accessor for UnauthenticatedState();
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin();
  uint64_t v47 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E12C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  long long v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v10 = (char *)&v47 - v9;
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  long long v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unint64_t v13 = 0xD000000000000014;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = (uint64_t)v12;
      uint64_t v16 = v47;
      sub_1004AE64C(v15, v47, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      uint64_t v17 = v48;
      sub_1004AD164(v16 + *(int *)(v3 + 24), v48, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_bridgeObjectRelease();
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD000000000000026;
          break;
        case 2u:
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          sub_1004AE100(v17, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
          unint64_t v13 = 0xD00000000000001FLL;
          break;
        case 3u:
          swift_bridgeObjectRelease();
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD000000000000022;
          break;
        case 4u:
          long long v19 = *(_OWORD *)(v17 + 144);
          v49[8] = *(_OWORD *)(v17 + 128);
          v49[9] = v19;
          v49[10] = *(_OWORD *)(v17 + 160);
          *(void *)&v49[11] = *(void *)(v17 + 176);
          long long v20 = *(_OWORD *)(v17 + 80);
          v49[4] = *(_OWORD *)(v17 + 64);
          v49[5] = v20;
          long long v21 = *(_OWORD *)(v17 + 112);
          v49[6] = *(_OWORD *)(v17 + 96);
          v49[7] = v21;
          long long v22 = *(_OWORD *)(v17 + 16);
          v49[0] = *(_OWORD *)v17;
          v49[1] = v22;
          long long v23 = *(_OWORD *)(v17 + 48);
          v49[2] = *(_OWORD *)(v17 + 32);
          v49[3] = v23;
          sub_1004A8A6C((uint64_t)v49);
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD000000000000026;
          break;
        case 5u:
          long long v24 = *(_OWORD *)(v17 + 144);
          v49[8] = *(_OWORD *)(v17 + 128);
          v49[9] = v24;
          v49[10] = *(_OWORD *)(v17 + 160);
          *(void *)&v49[11] = *(void *)(v17 + 176);
          long long v25 = *(_OWORD *)(v17 + 80);
          v49[4] = *(_OWORD *)(v17 + 64);
          v49[5] = v25;
          long long v26 = *(_OWORD *)(v17 + 112);
          v49[6] = *(_OWORD *)(v17 + 96);
          v49[7] = v26;
          long long v27 = *(_OWORD *)(v17 + 16);
          v49[0] = *(_OWORD *)v17;
          v49[1] = v27;
          long long v28 = *(_OWORD *)(v17 + 48);
          v49[2] = *(_OWORD *)(v17 + 32);
          v49[3] = v28;
          sub_1004A8A6C((uint64_t)v49);
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD000000000000024;
          break;
        case 6u:
          long long v29 = *(_OWORD *)(v17 + 144);
          v49[8] = *(_OWORD *)(v17 + 128);
          v49[9] = v29;
          v49[10] = *(_OWORD *)(v17 + 160);
          *(void *)&v49[11] = *(void *)(v17 + 176);
          long long v30 = *(_OWORD *)(v17 + 80);
          v49[4] = *(_OWORD *)(v17 + 64);
          v49[5] = v30;
          long long v31 = *(_OWORD *)(v17 + 112);
          v49[6] = *(_OWORD *)(v17 + 96);
          v49[7] = v31;
          long long v32 = *(_OWORD *)(v17 + 16);
          v49[0] = *(_OWORD *)v17;
          v49[1] = v32;
          long long v33 = *(_OWORD *)(v17 + 48);
          v49[2] = *(_OWORD *)(v17 + 32);
          v49[3] = v33;
          sub_1004A8A6C((uint64_t)v49);
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD00000000000002FLL;
          break;
        case 7u:
          long long v34 = *(_OWORD *)(v17 + 208);
          v49[12] = *(_OWORD *)(v17 + 192);
          v49[13] = v34;
          v49[14] = *(_OWORD *)(v17 + 224);
          *(void *)&v49[15] = *(void *)(v17 + 240);
          long long v35 = *(_OWORD *)(v17 + 144);
          v49[8] = *(_OWORD *)(v17 + 128);
          v49[9] = v35;
          long long v36 = *(_OWORD *)(v17 + 176);
          v49[10] = *(_OWORD *)(v17 + 160);
          v49[11] = v36;
          long long v37 = *(_OWORD *)(v17 + 80);
          v49[4] = *(_OWORD *)(v17 + 64);
          v49[5] = v37;
          long long v38 = *(_OWORD *)(v17 + 112);
          v49[6] = *(_OWORD *)(v17 + 96);
          v49[7] = v38;
          long long v39 = *(_OWORD *)(v17 + 16);
          v49[0] = *(_OWORD *)v17;
          v49[1] = v39;
          long long v40 = *(_OWORD *)(v17 + 48);
          v49[2] = *(_OWORD *)(v17 + 32);
          v49[3] = v40;
          sub_1004A8B48((uint64_t)v49);
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD000000000000023;
          break;
        case 8u:
          long long v41 = *(_OWORD *)(v17 + 144);
          v49[8] = *(_OWORD *)(v17 + 128);
          v49[9] = v41;
          v49[10] = *(_OWORD *)(v17 + 160);
          *(void *)&v49[11] = *(void *)(v17 + 176);
          long long v42 = *(_OWORD *)(v17 + 80);
          v49[4] = *(_OWORD *)(v17 + 64);
          v49[5] = v42;
          long long v43 = *(_OWORD *)(v17 + 112);
          v49[6] = *(_OWORD *)(v17 + 96);
          v49[7] = v43;
          long long v44 = *(_OWORD *)(v17 + 16);
          v49[0] = *(_OWORD *)v17;
          v49[1] = v44;
          long long v45 = *(_OWORD *)(v17 + 48);
          v49[2] = *(_OWORD *)(v17 + 32);
          v49[3] = v45;
          sub_1004A8A6C((uint64_t)v49);
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          return 0xD000000000000015;
        case 9u:
          sub_10046564C(*(void *)v17, *(void *)(v17 + 8), *(unsigned char *)(v17 + 16));
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD000000000000017;
          break;
        case 0xAu:
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD00000000000001BLL;
          break;
        case 0xBu:
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD00000000000002BLL;
          break;
        case 0xCu:
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD00000000000001CLL;
          break;
        case 0xDu:
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD00000000000001ELL;
          break;
        case 0xEu:
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD00000000000002CLL;
          break;
        default:
          swift_bridgeObjectRelease();
          sub_1004AE100(v16, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          unint64_t v13 = 0xD00000000000002BLL;
          break;
      }
      return v13;
    case 2u:
      memcpy(v49, v12, 0x15AuLL);
      sub_100482DD4((uint64_t)&v49[11] + 8, (uint64_t)v50);
      int v18 = sub_100482E30((uint64_t)v50);
      if (v18)
      {
        if (v18 == 1)
        {
          sub_100483328((uint64_t)v50);
          sub_100482E3C((uint64_t)v49);
          return 0xD000000000000019;
        }
        else
        {
          sub_100483328((uint64_t)v50);
          sub_100482E3C((uint64_t)v49);
          return 0xD000000000000018;
        }
      }
      else
      {
        sub_100483328((uint64_t)v50);
        sub_100482E3C((uint64_t)v49);
        return 0xD000000000000013;
      }
    case 3u:
      return v13;
    case 4u:
      return 0x64656C696166;
    case 5u:
      return 0x656C6C65636E6163;
    default:
      int v14 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v12, v5);
      if (v14 == enum case for NWConnection.State.waiting(_:))
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
        return 0xD000000000000013;
      }
      if (v14 == enum case for NWConnection.State.failed(_:))
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
        return 0xD000000000000012;
      }
      unint64_t v13 = 0xD000000000000011;
      if (v14 == enum case for NWConnection.State.setup(_:)) {
        return v13;
      }
      if (v14 == enum case for NWConnection.State.preparing(_:)) {
        return 0xD000000000000015;
      }
      if (v14 != enum case for NWConnection.State.ready(_:))
      {
        if (v14 == enum case for NWConnection.State.cancelled(_:))
        {
          return 0xD000000000000015;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v12, v5);
          *(void *)&v49[0] = 0x697463656E6E6F63;
          *((void *)&v49[0] + 1) = 0xEB0000000028676ELL;
          (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v10, v5);
          v51._countAndFlagsBits = sub_1005E1CA0();
          sub_1005E1E30(v51);
          swift_bridgeObjectRelease();
          v52._countAndFlagsBits = 41;
          v52._object = (void *)0xE100000000000000;
          sub_1005E1E30(v52);
          unint64_t v13 = *(void *)&v49[0];
          (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
        }
      }
      return v13;
  }
}

uint64_t sub_1004A3F08(uint64_t a1, uint64_t a2)
{
  sub_100482DD4(a1, (uint64_t)v4);
  sub_100482DD4(a2, (uint64_t)v5);
  return sub_1004A7C08((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1004A3F54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  long long v4 = *(_OWORD *)(a1 + 120);
  long long v5 = *(_OWORD *)(a1 + 152);
  v19[8] = *(_OWORD *)(a1 + 136);
  v19[9] = v5;
  v19[10] = *(_OWORD *)(a1 + 168);
  long long v6 = *(_OWORD *)(a1 + 56);
  long long v7 = *(_OWORD *)(a1 + 88);
  v19[4] = *(_OWORD *)(a1 + 72);
  v19[5] = v7;
  v19[6] = *(_OWORD *)(a1 + 104);
  v19[7] = v4;
  long long v8 = *(_OWORD *)(a1 + 24);
  v19[0] = *(_OWORD *)(a1 + 8);
  v19[1] = v8;
  v19[2] = *(_OWORD *)(a1 + 40);
  v19[3] = v6;
  sub_100482DD4(a1 + 184, (uint64_t)v17);
  uint64_t v9 = *(void *)a2;
  long long v10 = *(_OWORD *)(a2 + 120);
  long long v11 = *(_OWORD *)(a2 + 152);
  v20[8] = *(_OWORD *)(a2 + 136);
  v20[9] = v11;
  v20[10] = *(_OWORD *)(a2 + 168);
  long long v12 = *(_OWORD *)(a2 + 56);
  long long v13 = *(_OWORD *)(a2 + 88);
  v20[4] = *(_OWORD *)(a2 + 72);
  v20[5] = v13;
  v20[6] = *(_OWORD *)(a2 + 104);
  v20[7] = v10;
  long long v14 = *(_OWORD *)(a2 + 24);
  v20[0] = *(_OWORD *)(a2 + 8);
  v20[1] = v14;
  v20[2] = *(_OWORD *)(a2 + 40);
  v20[3] = v12;
  sub_100482DD4(a2 + 184, (uint64_t)v18);
  if (sub_100485B4C(v3, v9) & 1) != 0 && (static ServerID.__derived_struct_equals(_:_:)(v19, v20)) {
    char v15 = sub_1004A7C08((uint64_t)v17, (uint64_t)v18);
  }
  else {
    char v15 = 0;
  }
  return v15 & 1;
}

unint64_t MailboxSelectionFailure.response.getter()
{
  unint64_t v1 = v0[2];
  sub_100485030(v1, v0[3], v0[4]);
  return v1;
}

unint64_t MailboxSelectionFailure.response.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = sub_10048316C(*(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  return result;
}

BOOL sub_1004A40F4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v5, (uint64_t)v7);
}

uint64_t AuthenticatedState.mailboxSelection.getter()
{
  sub_100482DD4(v0 + 184, (uint64_t)v2);
  sub_100482DD4((uint64_t)v2, (uint64_t)v3);
  if (sub_100482E30((uint64_t)v3))
  {
    sub_100483328((uint64_t)v3);
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_100483328((uint64_t)v3);
    return 0;
  }
}

BOOL ConnectionState.isConnectingOrAuthenticating.getter()
{
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  long long v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v0, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload - 3 < 3) {
    return 0;
  }
  BOOL v4 = EnumCaseMultiPayload < 2;
  sub_1004AE100((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  return v4;
}

uint64_t ConnectionState.isActivelyConnectingOrAuthenticating.getter()
{
  uint64_t v1 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v1);
  BOOL v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - v5;
  sub_1004AD164(v0, (uint64_t)&v12 - v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload - 3 < 3) {
    return 0;
  }
  if (EnumCaseMultiPayload >= 2)
  {
    sub_1004AE100((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return 0;
  }
  else
  {
    sub_1004AE100((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    sub_1004AD164(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1004AE100((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      return 1;
    }
    else
    {
      uint64_t v9 = sub_1005E12C0();
      uint64_t v10 = *(void *)(v9 - 8);
      BOOL v8 = (*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v4, v9) != enum case for NWConnection.State.waiting(_:);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
    }
  }
  return v8;
}

Swift::Bool __swiftcall ConnectionState.hasMailboxSelectedOrSelectionIsInProgress(_:)(NIOIMAPCore2::MailboxName a1)
{
  uint64_t v2 = v1;
  Swift::UInt32 value = a1._hashValue._value;
  rawValue = a1.bytes._rawValue;
  uint64_t v5 = type metadata accessor for ConnectionState();
  uint64_t v6 = __chkstk_darwin(v5);
  BOOL v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  long long v11 = (char *)&v20 - v10;
  __chkstk_darwin(v9);
  long long v13 = (char *)&v20 - v12;
  sub_1004AD164(v2, (uint64_t)&v20 - v12, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004AE100((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_9:
    sub_1004AD164(v2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_10:
    sub_1004AD164((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      memcpy(v24, v8, 0x15AuLL);
      sub_100482DD4((uint64_t)&v24[184], (uint64_t)v25);
      if (sub_100482E30((uint64_t)v25) == 1)
      {
        uint64_t v18 = sub_100483328((uint64_t)v25);
        if ((*(unsigned int *)(v18 + 8) | ((unint64_t)*(unsigned int *)(v18 + 8) << 32)) == (value | ((unint64_t)value << 32)))
        {
          BOOL v17 = sub_1000255D4(*(void *)v18, (uint64_t)rawValue);
          sub_100482E3C((uint64_t)v24);
          goto LABEL_17;
        }
      }
      sub_100482E3C((uint64_t)v24);
    }
    else
    {
      sub_1004AE100((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    }
    BOOL v17 = 0;
    goto LABEL_17;
  }
  memcpy(v24, v13, 0x15AuLL);
  sub_100482DD4((uint64_t)&v24[184], (uint64_t)v25);
  if (sub_100482E30((uint64_t)v25) != 2)
  {
    sub_100482E3C((uint64_t)v24);
    goto LABEL_9;
  }
  long long v21 = rawValue;
  uint64_t v14 = sub_100483328((uint64_t)v25);
  uint64_t v15 = *(void *)v14;
  uint64_t v22 = *(unsigned int *)(v14 + 8);
  sub_100482DD4((uint64_t)&v24[184], (uint64_t)v23);
  sub_100483328((uint64_t)v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100482E3C((uint64_t)v24);
  swift_bridgeObjectRetain();
  sub_1004850D0((uint64_t)&v24[184], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
  if ((v22 | (v22 << 32)) != (value | ((unint64_t)value << 32)))
  {
    swift_bridgeObjectRelease();
    rawValue = v21;
    goto LABEL_9;
  }
  rawValue = v21;
  BOOL v16 = sub_1000255D4(v15, (uint64_t)v21);
  swift_bridgeObjectRelease();
  sub_1004AD164(v2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (!v16) {
    goto LABEL_10;
  }
  BOOL v17 = 1;
LABEL_17:
  sub_1004AE100((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  return v17;
}

Swift::Bool __swiftcall ConnectionState.hasMailboxSelected(_:)(NIOIMAPCore2::MailboxName a1)
{
  uint64_t v2 = v1;
  Swift::UInt32 value = a1._hashValue._value;
  rawValue = a1.bytes._rawValue;
  uint64_t v5 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v5);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004AD164(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004AE100((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return 0;
  }
  memcpy(v14, v7, 0x15AuLL);
  sub_100482DD4((uint64_t)&v14[184], (uint64_t)v15);
  if (sub_100482E30((uint64_t)v15) != 2)
  {
    sub_100482E3C((uint64_t)v14);
    return 0;
  }
  uint64_t v8 = sub_100483328((uint64_t)v15);
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(unsigned int *)(v8 + 8);
  sub_100482DD4((uint64_t)&v14[184], (uint64_t)v13);
  sub_100483328((uint64_t)v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100482E3C((uint64_t)v14);
  swift_bridgeObjectRetain();
  sub_1004850D0((uint64_t)&v14[184], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
  if ((v10 | (v10 << 32)) != (value | ((unint64_t)value << 32)))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  BOOL v11 = sub_1000255D4(v9, (uint64_t)rawValue);
  swift_bridgeObjectRelease();
  return v11;
}

Swift::Bool __swiftcall ConnectionState.mailboxSelectionIsInProgress(_:)(NIOIMAPCore2::MailboxName a1)
{
  uint64_t v2 = v1;
  Swift::UInt32 value = a1._hashValue._value;
  rawValue = a1.bytes._rawValue;
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004AD164(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004AE100((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return 0;
  }
  memcpy(v11, v6, 0x15AuLL);
  sub_100482DD4((uint64_t)&v11[184], (uint64_t)v12);
  if (sub_100482E30((uint64_t)v12) != 1
    || (uint64_t v7 = sub_100483328((uint64_t)v12),
        (*(unsigned int *)(v7 + 8) | ((unint64_t)*(unsigned int *)(v7 + 8) << 32)) != (value | ((unint64_t)value << 32))))
  {
    sub_100482E3C((uint64_t)v11);
    return 0;
  }
  BOOL v8 = sub_1000255D4(*(void *)v7, (uint64_t)rawValue);
  sub_100482E3C((uint64_t)v11);
  return v8;
}

uint64_t ConnectionState.selectedMailbox.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t result = sub_1004AE100((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_20:
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    unint64_t v19 = 0;
    uint64_t v12 = 0;
    unint64_t v21 = 0;
    unint64_t v22 = 0;
    uint64_t v15 = 0;
    int v26 = 0;
    goto LABEL_21;
  }
  memcpy(v37, v5, 0x15AuLL);
  sub_100482DD4((uint64_t)&v37[184], (uint64_t)v38);
  if (sub_100482E30((uint64_t)v38) != 2)
  {
    uint64_t result = sub_100482E3C((uint64_t)v37);
    goto LABEL_20;
  }
  uint64_t v6 = sub_100483328((uint64_t)v38);
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(unsigned int *)(v6 + 8);
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v34 = *(unsigned int *)(v6 + 32);
  int v11 = *(unsigned __int8 *)(v6 + 36);
  uint64_t v12 = *(void *)(v6 + 40);
  uint64_t v31 = *(unsigned int *)(v6 + 48);
  int v13 = *(unsigned __int8 *)(v6 + 52);
  int v27 = v11;
  int v28 = v13;
  uint64_t v33 = *(unsigned int *)(v6 + 56);
  int v14 = *(unsigned __int8 *)(v6 + 60);
  uint64_t v15 = *(void *)(v6 + 64);
  int v35 = *(unsigned __int8 *)(v6 + 72);
  int v29 = *(unsigned __int8 *)(v6 + 73);
  int v30 = v14;
  int v32 = *(unsigned __int8 *)(v6 + 74);
  sub_100482DD4((uint64_t)&v37[184], (uint64_t)v36);
  sub_100483328((uint64_t)v36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_100482E3C((uint64_t)v37);
  BOOL v17 = &_mh_execute_header;
  if (v27) {
    uint64_t v18 = &_mh_execute_header;
  }
  else {
    uint64_t v18 = 0;
  }
  unint64_t v19 = (unint64_t)v18 | v34;
  if (v28) {
    uint64_t v20 = &_mh_execute_header;
  }
  else {
    uint64_t v20 = 0;
  }
  unint64_t v21 = (unint64_t)v20 | v31;
  if (!v30) {
    BOOL v17 = 0;
  }
  unint64_t v22 = (unint64_t)v17 | v33;
  if (v29) {
    int v23 = 256;
  }
  else {
    int v23 = 0;
  }
  int v24 = v23 | v35;
  if (v32) {
    int v25 = 0x10000;
  }
  else {
    int v25 = 0;
  }
  int v26 = v24 | v25;
LABEL_21:
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v19;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v21;
  *(void *)(a1 + 56) = v22;
  *(void *)(a1 + 64) = v15;
  *(_WORD *)(a1 + 72) = v26;
  *(unsigned char *)(a1 + 74) = BYTE2(v26);
  return result;
}

uint64_t ConnectionState.anyMailboxSelectionIsInProgress.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v2);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004AD164(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    memcpy(v7, v4, 0x15AuLL);
    sub_100482DD4((uint64_t)&v7[184], (uint64_t)v8);
    if (sub_100482E30((uint64_t)v8) == 1)
    {
      sub_100483328((uint64_t)v8);
      sub_100482E3C((uint64_t)v7);
      return 1;
    }
    sub_100482E3C((uint64_t)v7);
  }
  else
  {
    sub_1004AE100((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  return 0;
}

uint64_t ConnectionState.isReadyForCommandsWithoutMailboxSelection.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004AD164(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    memcpy(v9, v4, 0x15AuLL);
    sub_100482DD4((uint64_t)&v9[184], (uint64_t)v10);
    int v5 = sub_100482E30((uint64_t)v10);
    sub_100483328((uint64_t)v10);
    sub_100482E3C((uint64_t)v9);
    if (v5) {
      char v6 = 0;
    }
    else {
      char v6 = -1;
    }
  }
  else
  {
    sub_1004AE100((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    char v6 = 0;
  }
  return v6 & 1;
}

double sub_1004A5064@<D0>(void (*a1)(_OWORD *__return_ptr)@<X0>, _OWORD *a2@<X8>)
{
  a1(v5);
  long long v3 = v5[1];
  *a2 = v5[0];
  a2[1] = v3;
  double result = *(double *)&v6;
  a2[2] = v6;
  return result;
}

uint64_t sub_1004A50AC(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, void (*a3)(char *, uint64_t), NSObject *a4, uint64_t a5)
{
  void (*v119)(void *__return_ptr, uint64_t);
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, uint64_t);
  os_log_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void v132[21];
  uint64_t v133[44];
  unsigned char v134[192];
  unsigned char v135[192];
  unsigned char v136[192];
  unsigned char v137[192];
  void v138[3];
  uint64_t v139;
  unsigned char v140[192];
  unsigned char v141[192];
  unsigned char v142[192];
  unsigned char v143[192];
  uint64_t v144[3];
  long long v145;
  long long v146;
  long long v147;
  long long v148;
  long long v149;
  long long v150;
  long long v151;
  long long v152;
  long long v153;
  long long v154;
  long long v155;
  char v156[8];
  uint64_t v157;
  uint64_t v158;

  uint64_t v6 = v5;
  unint64_t v131 = a5;
  uint64_t v127 = a3;
  uint64_t v128 = a4;
  uint64_t v118 = a2;
  os_log_t v119 = a1;
  uint64_t v121 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v7 = *(void *)(v121 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v121);
  uint64_t v10 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  int v13 = (char *)&v114 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  os_log_t v120 = (char *)&v114 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v125 = (uint64_t)&v114 - v17;
  __chkstk_darwin(v16);
  uint64_t v124 = (char *)&v114 - v18;
  os_log_type_t v126 = sub_1005E0ED0();
  uint64_t v129 = *(void *)(v126 - 8);
  uint64_t v19 = __chkstk_darwin(v126);
  uint64_t v123 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  int v117 = (char *)&v114 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v115 = (char *)&v114 - v24;
  __chkstk_darwin(v23);
  uint64_t v122 = (char *)&v114 - v25;
  uint64_t v26 = type metadata accessor for ConnectionState();
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v116 = (char *)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  int v30 = (char *)&v114 - v29;
  uint64_t v31 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v6, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t v130 = v26;
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_1004AE100((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  uint64_t v114 = (unsigned char *)v6;
  sub_1004AE100(v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_1004AE64C((uint64_t)v30, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
  sub_100464860((uint64_t)v137);
  sub_10001FDF0((uint64_t)v137, (uint64_t)v136, &qword_100715AA0);
  sub_10001FDF0((uint64_t)v137, (uint64_t)v141, &qword_100715AA0);
  uint64_t v34 = (uint64_t)v33;
  if (sub_1004AE278((uint64_t)v141) != 1)
  {
    sub_10001FDF0((uint64_t)v141, (uint64_t)v142, &qword_100715AA8);
    sub_10001FDF0((uint64_t)v142, (uint64_t)v143, &qword_100715AA8);
    if (sub_1004AE614((uint64_t)v143) == 1)
    {
      UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v143);
      sub_10001FDF0((uint64_t)v136, (uint64_t)v133, &qword_100715AA0);
      goto LABEL_12;
    }
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v143);
  }
  if (*(void *)(*(void *)&v33[*(int *)(v31 + 28)] + 16))
  {
    sub_1004AE28C((uint64_t)v137);
LABEL_10:
    uint64_t v36 = v131;
    sub_1004AD164(v131, (uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    unint64_t v37 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v38 = swift_allocObject();
    sub_1004AE64C((uint64_t)v10, v38 + v37, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    long long v39 = (void (**)(char *, uint64_t))(v38 + ((v8 + v37 + 7) & 0xFFFFFFFFFFFFFFF8));
    os_log_t v40 = v128;
    *long long v39 = v127;
    v39[1] = (void (*)(char *, uint64_t))v40;
    sub_100501030(v36, (uint64_t (*)(void *))sub_1004AE574, v38);
    sub_1004AE64C(v34, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
    swift_storeEnumTagMultiPayload();
    return swift_release();
  }
  sub_10001FDF0((uint64_t)v137, (uint64_t)v140, &qword_100715AA0);
  if (sub_1004AE278((uint64_t)v140) == 1) {
    goto LABEL_10;
  }
  sub_10001FDF0((uint64_t)v140, (uint64_t)v133, &qword_100715AA8);
LABEL_12:
  sub_10001FDF0((uint64_t)v133, (uint64_t)v135, &qword_100715AA8);
  sub_10001FDF0((uint64_t)v135, (uint64_t)v134, &qword_100715AA8);
  long long v41 = sub_1004AE614((uint64_t)v134);
  long long v42 = (unsigned __int8 *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v134);
  uint64_t v43 = (uint64_t)v42;
  uint64_t v44 = v125;
  uint64_t v45 = v126;
  uint64_t v46 = v129;
  uint64_t v47 = (uint64_t)v124;
  if (v41 != 1)
  {
    int64_t v57 = static MonotonicTime.now()();
    uint64_t v58 = *((void *)v33 + 1);
    uint64_t v59 = v57 - v58;
    if (v57 >= v58)
    {
      int v13 = v122;
      if (__OFSUB__(v57, v58))
      {
LABEL_63:
        __break(1u);
        JUMPOUT(0x1004A64F0);
      }
    }
    else
    {
      int v13 = v122;
      if (__OFSUB__(v58, v57))
      {
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      uint64_t v59 = v57 - v58;
      if (__OFSUB__(0, v58 - v57))
      {
        __break(1u);
        goto LABEL_21;
      }
    }
    double v61 = (double)v59 / 1000000000.0;
    if ((~*(void *)&v61 & 0x7FF0000000000000) != 0)
    {
      if (v61 > -9.22337204e18)
      {
        if (v61 < 9.22337204e18)
        {
          uint64_t v127 = (void (*)(char *, uint64_t))(uint64_t)v61;
          uint64_t v152 = *(_OWORD *)(v43 + 120);
          uint64_t v153 = *(_OWORD *)(v43 + 136);
          uint64_t v154 = *(_OWORD *)(v43 + 152);
          unint64_t v155 = *(_OWORD *)(v43 + 168);
          uint64_t v148 = *(_OWORD *)(v43 + 56);
          uint64_t v149 = *(_OWORD *)(v43 + 72);
          uint64_t v150 = *(_OWORD *)(v43 + 88);
          os_log_type_t v151 = *(_OWORD *)(v43 + 104);
          os_log_t v145 = *(_OWORD *)(v43 + 8);
          uint64_t v146 = *(_OWORD *)(v43 + 24);
          uint64_t v147 = *(_OWORD *)(v43 + 40);
          uint64_t v62 = ServerID.logDescription.getter();
          uint64_t v128 = (os_log_t)v43;
          if (v63)
          {
            unint64_t v64 = v63;
            uint64_t v125 = v62;
            uint64_t v65 = v131;
            (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v13, v131, v45);
            sub_1004AD164(v65, v47, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            swift_bridgeObjectRetain();
            long long v66 = sub_1005E0EB0();
            os_log_type_t v67 = sub_1005E25C0();
            if (os_log_type_enabled(v66, v67))
            {
              uint64_t v68 = swift_slowAlloc();
              uint64_t v123 = (char *)swift_slowAlloc();
              v133[0] = (uint64_t)v123;
              *(_DWORD *)uint64_t v68 = 68158722;
              LODWORD(v132[0]) = 2;
              sub_1005E2960();
              *(_WORD *)(v68 + 8) = 256;
              uint64_t v69 = v47 + *(int *)(v121 + 20);
              LOBYTE(v132[0]) = *(unsigned char *)v69;
              sub_1005E2960();
              *(_WORD *)(v68 + 11) = 2082;
              uint64_t v70 = ConnectionID.debugDescription.getter(*(unsigned int *)(v69 + 4));
              v132[0] = sub_100481E54(v70, v71, v133);
              sub_1005E2960();
              uint64_t v45 = v126;
              swift_bridgeObjectRelease();
              sub_1004AE100(v47, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
              *(_WORD *)(v68 + 21) = 2082;
              swift_bridgeObjectRetain();
              v132[0] = sub_100481E54(v125, v64, v133);
              uint64_t v46 = v129;
              sub_1005E2960();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v68 + 31) = 2048;
              v132[0] = v127;
              sub_1005E2960();
              _os_log_impl((void *)&_mh_execute_header, v66, v67, "[%.*hhx-%{public}s] Authentication completed with server %{public}s (took %ld s)", (uint8_t *)v68, 0x29u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v72 = *(void (**)(char *, uint64_t))(v46 + 8);
              char v73 = v122;
            }
            else
            {
              sub_1004AE100(v47, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

              swift_bridgeObjectRelease_n();
              uint64_t v72 = *(void (**)(char *, uint64_t))(v46 + 8);
              char v73 = v13;
            }
          }
          else
          {
            uint64_t v74 = v115;
            uint64_t v75 = v131;
            (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v115, v131, v45);
            sub_1004AD164(v75, v44, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v76 = sub_1005E0EB0();
            os_log_type_t v77 = sub_1005E25C0();
            if (os_log_type_enabled(v76, v77))
            {
              uint64_t v78 = swift_slowAlloc();
              uint64_t v124 = (char *)swift_slowAlloc();
              v133[0] = (uint64_t)v124;
              *(_DWORD *)uint64_t v78 = 68158466;
              LODWORD(v132[0]) = 2;
              sub_1005E2960();
              *(_WORD *)(v78 + 8) = 256;
              uint64_t v79 = v44 + *(int *)(v121 + 20);
              LOBYTE(v132[0]) = *(unsigned char *)v79;
              sub_1005E2960();
              *(_WORD *)(v78 + 11) = 2082;
              uint64_t v80 = ConnectionID.debugDescription.getter(*(unsigned int *)(v79 + 4));
              v132[0] = sub_100481E54(v80, v81, v133);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_1004AE100(v44, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
              *(_WORD *)(v78 + 21) = 2048;
              v132[0] = v127;
              uint64_t v46 = v129;
              sub_1005E2960();
              _os_log_impl((void *)&_mh_execute_header, v76, v77, "[%.*hhx-%{public}s] Authentication completed (took %ld s).", (uint8_t *)v78, 0x1Fu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v72 = *(void (**)(char *, uint64_t))(v46 + 8);
              char v73 = v115;
            }
            else
            {
              sub_1004AE100(v44, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

              uint64_t v72 = *(void (**)(char *, uint64_t))(v46 + 8);
              char v73 = v74;
            }
          }
          uint64_t v127 = v72;
          uint64_t v82 = ((uint64_t (*)(char *, uint64_t))v72)(v73, v45);
          uint64_t v83 = (uint64_t)v114;
          uint64_t v84 = (uint64_t)v120;
          v119(v138, v82);
          sub_100452B0C((uint64_t)&v139, (uint64_t)v144);
          unint64_t v85 = v138[0];
          uint64_t v86 = v138[1];
          uint64_t v87 = v138[2];
          sub_100452B0C((uint64_t)v144, (uint64_t)v156);
          if (v158 == 1)
          {
            sub_100451F2C(v85);
LABEL_35:
            os_log_t v88 = v128 + 1;
            uint64_t v89 = swift_bridgeObjectRetain();
            uint64_t v90 = sub_1004AD77C(v89);
            swift_bridgeObjectRelease();
            sub_1004AE100(v34, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
            sub_100086B44((uint64_t)v88);
            sub_1004AE28C((uint64_t)v137);
            memset(v132, 0, 40);
            sub_1004AE1AC((uint64_t)v132);
            v133[0] = v90;
            long long v92 = *(_OWORD *)&v88[2].isa;
            long long v91 = *(_OWORD *)&v88[4].isa;
            *(_OWORD *)&v133[1] = *(_OWORD *)&v88->isa;
            *(_OWORD *)&v133[3] = v92;
            *(_OWORD *)&v133[5] = v91;
            long long v93 = *(_OWORD *)&v88[10].isa;
            long long v94 = *(_OWORD *)&v88[12].isa;
            long long v95 = *(_OWORD *)&v88[8].isa;
            *(_OWORD *)&v133[7] = *(_OWORD *)&v88[6].isa;
            *(_OWORD *)&v133[13] = v94;
            *(_OWORD *)&v133[11] = v93;
            *(_OWORD *)&v133[9] = v95;
            long long v96 = *(_OWORD *)&v88[18].isa;
            long long v97 = *(_OWORD *)&v88[20].isa;
            long long v98 = *(_OWORD *)&v88[16].isa;
            *(_OWORD *)&v133[15] = *(_OWORD *)&v88[14].isa;
            *(_OWORD *)&v133[21] = v97;
            *(_OWORD *)&v133[19] = v96;
            *(_OWORD *)&v133[17] = v98;
            sub_100482DD4((uint64_t)v132, (uint64_t)&v133[23]);
            uint64_t v99 = (uint64_t)v116;
            memcpy(v116, v133, 0x15AuLL);
            swift_storeEnumTagMultiPayload();
            return sub_1004AE64C(v99, v83, (uint64_t (*)(void))type metadata accessor for ConnectionState);
          }
          uint64_t v100 = v117;
          if (v85 >> 62 == 1)
          {
            if (v158)
            {
              if (v156[0] == 1)
              {
                if ((unsigned __int16)v85 != 772) {
                  goto LABEL_55;
                }
              }
              else if ((unsigned __int16)v85 - 773 < 0xFFFFFFFE)
              {
                goto LABEL_55;
              }
              if (!v87 || (v157 != v86 || v158 != v87) && (sub_1005E3290() & 1) == 0) {
                goto LABEL_55;
              }
            }
            else if ((v156[0] == 1 || (unsigned __int16)v85 != 771) && (unsigned __int16)v85 != 772)
            {
              goto LABEL_55;
            }
            sub_100451F2C(v85);
            sub_100483B90(v144);
            goto LABEL_35;
          }
LABEL_55:
          sub_1004AE28C((uint64_t)v137);
          uint64_t v101 = v131;
          (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v100, v131, v45);
          sub_1004AD164(v101, v84, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          sub_1004A03E8(v85);
          sub_1004AE61C(v144);
          uint64_t v102 = sub_1005E0EB0();
          os_log_type_t v103 = sub_1005E25A0();
          LODWORD(v131) = v103;
          if (os_log_type_enabled(v102, v103))
          {
            uint64_t v104 = swift_slowAlloc();
            uint64_t v128 = v102;
            uint64_t v105 = v84;
            uint64_t v106 = v104;
            uint64_t v124 = (char *)swift_slowAlloc();
            v133[0] = (uint64_t)v124;
            *(_DWORD *)uint64_t v106 = 68158466;
            LODWORD(v132[0]) = 2;
            sub_1005E2960();
            *(_WORD *)(v106 + 8) = 256;
            uint64_t v107 = v105 + *(int *)(v121 + 20);
            LOBYTE(v132[0]) = *(unsigned char *)v107;
            sub_1005E2960();
            *(_WORD *)(v106 + 11) = 2082;
            uint64_t v108 = ConnectionID.debugDescription.getter(*(unsigned int *)(v107 + 4));
            uint64_t v125 = v34;
            v132[0] = sub_100481E54(v108, v109, v133);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1004AE100(v105, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            *(_WORD *)(v106 + 21) = 2082;
            sub_1004A03E8(v85);
            uint64_t v110 = sub_1004F950C(v85);
            unint64_t v112 = v111;
            sub_100451F2C(v85);
            v132[0] = sub_100481E54(v110, v112, v133);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_100451F2C(v85);
            sub_100483B90(v144);
            sub_100451F2C(v85);
            sub_100483B90(v144);
            os_log_t v113 = v128;
            _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v131, "[%.*hhx-%{public}s] Did authenticate, but connection (%{public}s) does not fulfil TLS requirements.", (uint8_t *)v106, 0x1Fu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v127(v117, v126);
            sub_1004AE100(v125, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          }
          else
          {

            sub_100451F2C(v85);
            sub_100483B90(v144);
            sub_100451F2C(v85);
            sub_100483B90(v144);
            sub_1004AE100(v84, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            v127(v100, v45);
            sub_1004AE100(v34, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          }
          return swift_storeEnumTagMultiPayload();
        }
        goto LABEL_61;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v43 = *v42;
  uint64_t v33 = v123;
  uint64_t v48 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v123, v131, v126);
  sub_1004AD164(v48, (uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  long long v41 = sub_1005E0EB0();
  os_log_type_t v49 = sub_1005E25A0();
  if (os_log_type_enabled(v41, v49))
  {
    unint64_t v131 = v43;
    uint64_t v50 = v34;
    uint64_t v51 = swift_slowAlloc();
    v133[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 68158466;
    LODWORD(v145) = 2;
    sub_1005E2960();
    *(_WORD *)(v51 + 8) = 256;
    Swift::String v52 = &v13[*(int *)(v121 + 20)];
    LOBYTE(v145) = *v52;
    sub_1005E2960();
    *(_WORD *)(v51 + 11) = 2082;
    uint64_t v53 = ConnectionID.debugDescription.getter(*((unsigned int *)v52 + 1));
    *(void *)&os_log_t v145 = sub_100481E54(v53, v54, v133);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1004AE100((uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    *(_WORD *)(v51 + 21) = 2080;
    unint64_t v55 = 0xEA00000000006174;
    uint64_t v56 = 0x6F7571207265766FLL;
    switch(v131)
    {
      case 1:
        unint64_t v55 = 0xEF736C6169746E65;
        uint64_t v56 = 0x6465726320646162;
        break;
      case 2:
        unint64_t v55 = 0xE500000000000000;
        uint64_t v56 = 0x6B63757473;
        break;
      case 3:
        unint64_t v55 = 0xE500000000000000;
        uint64_t v56 = 0x726568746FLL;
        break;
      default:
        break;
    }
    *(void *)&os_log_t v145 = sub_100481E54(v56, v55, v133);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v49, "[%.*hhx-%{public}s] Authentication failed: %s", (uint8_t *)v51, 0x1Fu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v129 + 8))(v123, v126);
    sub_1004AE100(v50, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
    long long v60 = v114;
    LOBYTE(v43) = v131;
    goto LABEL_44;
  }
LABEL_21:

  sub_1004AE100((uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v45);
  sub_1004AE100(v34, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
  long long v60 = v114;
LABEL_44:
  *long long v60 = v43;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1004A6500(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v36 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005E0ED0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v14 + 16);
  uint64_t v35 = v18;
  v17(v16, a2);
  sub_1004AD164(a2, (uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_100453FC0);
  sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_100453FC0);
  uint64_t v19 = sub_1005E0EB0();
  os_log_type_t v20 = sub_1005E2580();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v33 = a4;
    uint64_t v22 = v21;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v38 = v32;
    *(_DWORD *)uint64_t v22 = 68158466;
    LODWORD(v37) = 2;
    uint64_t v34 = a3;
    sub_1005E2960();
    *(_WORD *)(v22 + 8) = 256;
    uint64_t v23 = &v12[*(int *)(v10 + 20)];
    LOBYTE(v37) = *v23;
    sub_1005E2960();
    *(_WORD *)(v22 + 11) = 2082;
    uint64_t v24 = ConnectionID.debugDescription.getter(*((unsigned int *)v23 + 1));
    uint64_t v37 = sub_100481E54(v24, v25, &v38);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1004AE100((uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    *(_WORD *)(v22 + 21) = 2082;
    unint64_t v26 = sub_1004E9A7C();
    uint64_t v37 = sub_100481E54(v26, v27, &v38);
    a3 = v34;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10044C910);
    sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10044C910);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%.*hhx-%{public}s] Authentication is sending %{public}s.", (uint8_t *)v22, 0x1Fu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1004AE100((uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10044C910);
    sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10044C910);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v35);
  sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_100453FC0);
  uint64_t v28 = v36;
  sub_1004A6984(a1, v36);
  uint64_t v29 = a3(v28);
  sub_1004AE100(v28, type metadata accessor for ClientCommand);
  return v29;
}

uint64_t sub_1004A6984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004546E0(a1, (uint64_t)&v15);
  uint64_t v4 = v15;
  switch(v19)
  {
    case 1:
      uint64_t v7 = *((void *)&v15 + 1);
      long long v8 = v16;
      __int16 v9 = WORD2(v17);
      int v10 = v17;
      char v11 = BYTE6(v17);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10044C910);
      *(void *)a2 = v4;
      *(void *)(a2 + 8) = v7;
      *(_OWORD *)(a2 + 16) = v8;
      *(unsigned char *)(a2 + 38) = v11;
      *(_WORD *)(a2 + 36) = v9;
      *(_DWORD *)(a2 + 32) = v10;
      type metadata accessor for ClientCommand(0);
      break;
    case 2:
      *(_OWORD *)a2 = v15;
      *(void *)(a2 + 16) = v16;
      type metadata accessor for ClientCommand(0);
      break;
    case 3:
      long long v12 = v16;
      *(_OWORD *)a2 = v15;
      *(_OWORD *)(a2 + 16) = v12;
      long long v13 = v18;
      *(_OWORD *)(a2 + 32) = v17;
      *(_OWORD *)(a2 + 48) = v13;
      type metadata accessor for ClientCommand(0);
      break;
    case 4:
      type metadata accessor for ClientCommand(0);
      break;
    default:
      uint64_t v5 = *((void *)&v15 + 1);
      long long v6 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1004AE708(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10044C910);
      *(void *)a2 = v4;
      *(void *)(a2 + 8) = v5;
      *(_OWORD *)(a2 + 16) = v6;
      type metadata accessor for ClientCommand(0);
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

void *sub_1004A6BC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004AE100((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return &_swiftEmptySetSingleton;
  }
  memcpy(v13, v4, 0x15AuLL);
  uint64_t v5 = v13[0];
  long long v6 = Capability.condStore.unsafeMutableAddressor();
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  unint64_t v9 = v6[2];
  char v10 = *((unsigned char *)v6 + 24);
  swift_bridgeObjectRetain();
  LOBYTE(v5) = sub_100010B9C(v7, v8, v9, v10, v5);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    sub_100482E3C((uint64_t)v13);
    return &_swiftEmptySetSingleton;
  }
  Swift::Int v11 = sub_1004AD828((uint64_t)&off_1006F28E8);
  sub_100482E3C((uint64_t)v13);
  return (void *)v11;
}

uint64_t sub_1004A6D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v135 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v4 = __chkstk_darwin(v135);
  long long v6 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v119 - v7;
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  long long v13 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v15 = (char *)&v119 - v14;
  uint64_t v136 = a1;
  sub_100482DD4(a1, (uint64_t)v156);
  sub_100482DD4((uint64_t)v156, (uint64_t)v157);
  uint64_t result = sub_100482E30((uint64_t)v157);
  if (result == 1)
  {
    uint64_t v17 = sub_100483328((uint64_t)v157);
    uint64_t result = *(void *)(v17 + 16);
    uint64_t v18 = *(void *)(v17 + 24);
    uint64_t v19 = *(void *)(v17 + 32);
    uint64_t v20 = *(void *)(v17 + 40);
    uint64_t v21 = *(void *)(v17 + 48);
    uint64_t v23 = *(void *)(v17 + 56);
    uint64_t v22 = *(void *)(v17 + 64);
    uint64_t v25 = *(void *)(v17 + 72);
    uint64_t v24 = *(void *)(v17 + 80);
    unsigned int v26 = *(unsigned __int16 *)(v17 + 88) | (*(unsigned __int8 *)(v17 + 90) << 16);
    switch(*(unsigned __int8 *)(v17 + 90) >> 5)
    {
      case 2:
        uint64_t v27 = *(void *)(v17 + 16);
        int v28 = *(void *)(v17 + 24);
        unint64_t v29 = *(void *)(v17 + 32);
        uint64_t v30 = *(void *)(v17 + 40);
        uint64_t v31 = *(void *)(v17 + 48);
        uint64_t v32 = *(void *)(v17 + 56);
        uint64_t v33 = *(void *)(v17 + 64);
        uint64_t v34 = v25;
        uint64_t v134 = v24;
        sub_1004833F4(result, v18, v19, v20, v21, v23, v22, v25, v24, v26);
        sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
        uint64_t v143 = v27;
        LODWORD(v144) = v28;
        unint64_t v145 = v29;
        uint64_t v146 = v30;
        LODWORD(v147) = v31;
        BYTE4(v147) = BYTE4(v31) & 1;
        uint64_t v148 = v32;
        int v149 = v33;
        char v150 = BYTE4(v33) & 1;
        int v151 = v34;
        char v152 = BYTE4(v34) & 1;
        uint64_t v153 = v134;
        __int16 v154 = v26 & 0x1FF;
        char v155 = BYTE2(v26) & 1;
        sub_1004AE210((uint64_t)&v143);
        uint64_t v35 = &v143;
        goto LABEL_13;
      case 3:
        if ((_BYTE)v20 == 0xFF)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
          sub_1004AD164(a2, (uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          sub_100482DD4((uint64_t)v156, (uint64_t)&v143);
          uint64_t v83 = sub_100483328((uint64_t)&v143);
          sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
          sub_100483338(v83);
          uint64_t v84 = sub_1005E0EB0();
          os_log_type_t v85 = sub_1005E25A0();
          int v86 = v85;
          if (os_log_type_enabled(v84, v85))
          {
            uint64_t v87 = swift_slowAlloc();
            uint64_t v134 = swift_slowAlloc();
            uint64_t v137 = v134;
            *(_DWORD *)uint64_t v87 = 68158723;
            LODWORD(v138) = 2;
            sub_1005E2960();
            *(_WORD *)(v87 + 8) = 256;
            uint64_t v88 = *(int *)(v135 + 20);
            uint64_t v124 = v9;
            uint64_t v89 = &v6[v88];
            LOBYTE(v138) = v6[v88];
            sub_1005E2960();
            *(_WORD *)(v87 + 11) = 2082;
            LODWORD(v135) = v86;
            uint64_t v90 = ConnectionID.debugDescription.getter(*((unsigned int *)v89 + 1));
            uint64_t v138 = sub_100481E54(v90, v91, &v137);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1004AE100((uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            *(_WORD *)(v87 + 21) = 2160;
            uint64_t v138 = 0x786F626C69616DLL;
            sub_1005E2960();
            *(_WORD *)(v87 + 31) = 2085;
            int v92 = *(_DWORD *)(v17 + 8);
            uint64_t v138 = *(void *)v17;
            LODWORD(v139) = v92;
            swift_bridgeObjectRetain();
            uint64_t v93 = sub_1005E1CC0();
            uint64_t v138 = sub_100481E54(v93, v94, &v137);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            _os_log_impl((void *)&_mh_execute_header, v84, (os_log_type_t)v135, "[%.*hhx-%{public}s] Unable to select mailbox '%{sensitive,mask.mailbox}s' because attributes were missing.", (uint8_t *)v87, 0x29u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v124);
          }
          else
          {
            sub_1004AE100((uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);

            (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
          }
          uint64_t v116 = *(void *)v17;
          uint64_t v117 = *(unsigned int *)(v17 + 8);
          swift_bridgeObjectRetain();
          sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
          uint64_t v138 = v116;
          uint64_t v139 = v117;
          uint64_t v141 = 0;
          uint64_t v142 = 0;
          uint64_t v140 = 0;
          sub_1004AE1AC((uint64_t)&v138);
          uint64_t v35 = &v138;
        }
        else
        {
          uint64_t v122 = v10;
          uint64_t v36 = v24;
          uint64_t v134 = v24;
          uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
          unint64_t v38 = result;
          uint64_t v124 = v9;
          uint64_t v125 = v15;
          uint64_t v128 = v18;
          uint64_t v129 = v23;
          uint64_t v131 = v22;
          uint64_t v132 = v19;
          uint64_t v39 = v9;
          uint64_t v130 = v25;
          uint64_t v40 = v21;
          uint64_t v127 = v21;
          uint64_t v41 = v20;
          v37(v15, a2, v39);
          sub_1004AD164(a2, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          uint64_t v118 = v36;
          uint64_t v42 = v38;
          unint64_t v43 = v38;
          unint64_t v133 = v38;
          uint64_t v44 = v128;
          uint64_t v45 = v132;
          uint64_t v46 = v40;
          uint64_t v48 = v129;
          uint64_t v47 = v130;
          sub_1004833F4(v42, v128, v132, v41, v46, v129, v131, v130, v118, v26);
          sub_100483484(v43, v44, v45, v41);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v49 = v134;
          uint64_t v50 = v45;
          uint64_t v51 = v127;
          uint64_t v52 = v48;
          uint64_t v53 = v131;
          sub_1004833F4(v133, v44, v50, v41, v127, v52, v131, v47, v134, v26);
          sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
          unsigned int v121 = v26;
          uint64_t v126 = v41;
          sub_1004833F4(v133, v44, v132, v41, v51, v129, v53, v130, v49, v26);
          sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
          unint64_t v54 = sub_1005E0EB0();
          os_log_type_t v55 = sub_1005E25A0();
          int v56 = v55;
          os_log_t v123 = v54;
          if (os_log_type_enabled(v54, v55))
          {
            uint64_t v57 = swift_slowAlloc();
            uint64_t v120 = swift_slowAlloc();
            uint64_t v138 = v120;
            *(_DWORD *)uint64_t v57 = 68158979;
            LODWORD(v143) = 2;
            sub_1005E2960();
            *(_WORD *)(v57 + 8) = 256;
            uint64_t v58 = &v8[*(int *)(v135 + 20)];
            LOBYTE(v143) = *v58;
            sub_1005E2960();
            *(_WORD *)(v57 + 11) = 2082;
            LODWORD(v135) = v56;
            uint64_t v59 = ConnectionID.debugDescription.getter(*((unsigned int *)v58 + 1));
            uint64_t v143 = sub_100481E54(v59, v60, &v138);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1004AE100((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            *(_WORD *)(v57 + 21) = 2160;
            uint64_t v143 = 0x786F626C69616DLL;
            sub_1005E2960();
            *(_WORD *)(v57 + 31) = 2085;
            int v61 = *(_DWORD *)(v17 + 8);
            uint64_t v143 = *(void *)v17;
            LODWORD(v144) = v61;
            swift_bridgeObjectRetain();
            uint64_t v62 = sub_1005E1CC0();
            uint64_t v143 = sub_100481E54(v62, v63, &v138);
            os_log_t v119 = &v144;
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            *(_WORD *)(v57 + 41) = 2082;
            uint64_t v64 = v128;
            unsigned __int8 v65 = v126;
            unint64_t v66 = CommandCompletionResponse.responseText.getter(v133, v128, v132, v126);
            ResponseText.debugDescription.getter(v66);
            uint64_t v68 = v67;
            unint64_t v70 = v69;
            sub_1004831AC(v66);
            swift_bridgeObjectRelease();
            uint64_t v143 = sub_100481E54(v68, v70, &v138);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            unsigned int v71 = v121;
            uint64_t v72 = v133;
            uint64_t v73 = v64;
            uint64_t v74 = v64;
            uint64_t v76 = v131;
            uint64_t v75 = v132;
            uint64_t v77 = v129;
            sub_100483244(v133, v74, v132, v65, v127, v129, v131, v130, v134, v121);
            uint64_t v78 = v75;
            uint64_t v79 = v127;
            uint64_t v80 = v77;
            uint64_t v81 = v130;
            sub_100483244(v72, v73, v78, v65, v127, v80, v76, v130, v134, v71);
            os_log_t v82 = v123;
            _os_log_impl((void *)&_mh_execute_header, v123, (os_log_type_t)v135, "[%.*hhx-%{public}s] Unable to select mailbox '%{sensitive,mask.mailbox}s': %{public}s", (uint8_t *)v57, 0x33u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            sub_100483244(v133, v128, v132, v65, v79, v129, v131, v81, v134, v71);
            (*(void (**)(char *, uint64_t))(v122 + 8))(v125, v124);
          }
          else
          {
            sub_1004AE100((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            unsigned int v95 = v121;
            uint64_t v96 = v134;
            unint64_t v97 = v133;
            uint64_t v98 = v127;
            uint64_t v99 = v128;
            uint64_t v100 = v129;
            uint64_t v101 = v130;
            uint64_t v102 = v131;
            sub_100483244(v133, v128, v132, v126, v127, v129, v131, v130, v134, v121);
            uint64_t v103 = v97;
            uint64_t v104 = v99;
            uint64_t v105 = v132;
            LOBYTE(v99) = v126;
            sub_100483244(v103, v104, v132, v126, v98, v100, v102, v101, v96, v95);

            sub_100483244(v133, v128, v105, v99, v98, v100, v131, v101, v96, v95);
            (*(void (**)(char *, uint64_t))(v122 + 8))(v125, v124);
            unsigned int v71 = v95;
          }
          uint64_t v106 = *(void *)v17;
          uint64_t v135 = *(unsigned int *)(v17 + 8);
          uint64_t v108 = v132;
          uint64_t v107 = v133;
          uint64_t v109 = v128;
          unsigned __int8 v110 = v126;
          unint64_t v111 = CommandCompletionResponse.responseText.getter(v133, v128, v132, v126);
          uint64_t v113 = v112;
          uint64_t v115 = v114;
          swift_bridgeObjectRetain();
          sub_100483244(v107, v109, v108, v110, v127, v129, v131, v130, v134, v71);
          sub_1004850D0((uint64_t)v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
          uint64_t v143 = v106;
          uint64_t v144 = v135;
          unint64_t v145 = v111;
          uint64_t v146 = v113;
          uint64_t v147 = v115;
          sub_1004AE1AC((uint64_t)&v143);
          uint64_t v35 = &v143;
        }
LABEL_13:
        uint64_t result = sub_100482DD4((uint64_t)v35, v136);
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1004A7A20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 91, 7);
}

BOOL _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
    || !sub_1000255D4(*(void *)a1, *(void *)a2))
  {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  BOOL v6 = (v4 | v5) == 0;
  if (v4 && v5)
  {
    unint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(a1 + 24);
    unint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    unint64_t v11 = v9 & 0xF000000000000007;
    sub_100485030(v7, v8, v4);
    sub_100485030(v7, v8, v4);
    sub_100485030(v9, v10, v5);
    if ((~v7 & 0xF000000000000007) != 0)
    {
      if (v11 == 0xF000000000000007) {
        goto LABEL_15;
      }
      sub_10044AE60(v9);
      sub_10044AE60(v7);
      static ResponseTextCode.__derived_enum_equals(_:_:)();
      char v14 = v13;
      sub_1004831AC(v9);
      sub_1004831AC(v7);
      if (v14)
      {
LABEL_7:
        if (v8 == v10 && v4 == v5)
        {
          sub_1004831AC(v9);
          BOOL v6 = 1;
LABEL_16:
          swift_bridgeObjectRelease();
          sub_1004831AC(v7);
          swift_bridgeObjectRelease();
          sub_10048316C(v7, v8, v4);
          return v6;
        }
        char v15 = sub_1005E3290();
        sub_1004831AC(v9);
        if (v15)
        {
          BOOL v6 = 1;
          goto LABEL_16;
        }
LABEL_15:
        BOOL v6 = 0;
        goto LABEL_16;
      }
    }
    else if (v11 == 0xF000000000000007)
    {
      goto LABEL_7;
    }
    sub_1004831AC(v9);
    goto LABEL_15;
  }
  return v6;
}

uint64_t sub_1004A7C08(uint64_t a1, uint64_t a2)
{
  sub_100482DD4(a2, (uint64_t)v27);
  sub_100482DD4((uint64_t)v27, (uint64_t)v40);
  sub_100482DD4(a1, (uint64_t)v37);
  int v4 = sub_100482E30((uint64_t)v37);
  if (!v4)
  {
    uint64_t v8 = (unint64_t *)sub_100483328((uint64_t)v37);
    unint64_t v10 = *v8;
    uint64_t v9 = v8[1];
    unint64_t v12 = v8[2];
    uint64_t v11 = v8[3];
    uint64_t v13 = v8[4];
    sub_100482DD4(a2, (uint64_t)v38);
    if (sub_100482E30((uint64_t)v38)) {
      goto LABEL_16;
    }
    char v14 = (unint64_t *)sub_100483328((uint64_t)v38);
    unint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v18 = v14[2];
    unint64_t v17 = v14[3];
    uint64_t v19 = v14[4];
    if (v10)
    {
      if (v15)
      {
        *(void *)&long long v28 = v10;
        DWORD2(v28) = v9;
        *(void *)&long long v29 = v12;
        *((void *)&v29 + 1) = v11;
        *(void *)&long long v30 = v13;
        *(void *)&long long v32 = v15;
        DWORD2(v32) = v16;
        *(void *)&long long v33 = v18;
        *((void *)&v33 + 1) = v17;
        *(void *)&long long v34 = v19;
        sub_1004850D0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
        sub_1004850D0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
        BOOL v20 = _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v28, (uint64_t)&v32);
        sub_1004850D0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
        sub_1004850D0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
        if (!v20) {
          goto LABEL_16;
        }
LABEL_13:
        char v7 = 1;
        return v7 & 1;
      }
      unint64_t v25 = v14[2];
      uint64_t v26 = v14[3];
      sub_100482DD4((uint64_t)v40, (uint64_t)&v32);
      uint64_t v23 = sub_100483328((uint64_t)&v32);
      sub_100484FD8(*(void *)v23, *(void *)(v23 + 8), *(void *)(v23 + 16), *(void *)(v23 + 24), *(void *)(v23 + 32));
    }
    else
    {
      unint64_t v25 = v14[2];
      uint64_t v26 = v14[3];
      if (!v15) {
        goto LABEL_13;
      }
    }
    sub_1004850D0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
    sub_1004850D0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
    sub_100483114(v10, v9, v12, v11, v13);
    sub_100483114(v15, v16, v25, v26, v19);
    goto LABEL_16;
  }
  if (v4 != 1)
  {
    uint64_t v21 = (long long *)sub_100483328((uint64_t)v37);
    long long v33 = v21[1];
    long long v34 = v21[2];
    v35[0] = v21[3];
    *(_OWORD *)((char *)v35 + 11) = *(long long *)((char *)v21 + 59);
    long long v32 = *v21;
    sub_100482DD4(a2, (uint64_t)v38);
    if (sub_100482E30((uint64_t)v38) == 2)
    {
      uint64_t v22 = (long long *)sub_100483328((uint64_t)v38);
      long long v29 = v22[1];
      long long v30 = v22[2];
      v31[0] = v22[3];
      *(_OWORD *)((char *)v31 + 11) = *(long long *)((char *)v22 + 59);
      long long v28 = *v22;
      char v7 = _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v32, (uint64_t)&v28);
      return v7 & 1;
    }
LABEL_16:
    char v7 = 0;
    return v7 & 1;
  }
  uint64_t v5 = sub_100483328((uint64_t)v37);
  v38[7] = *(_OWORD *)(v5 + 112);
  v38[8] = *(_OWORD *)(v5 + 128);
  v38[9] = *(_OWORD *)(v5 + 144);
  __int16 v39 = *(_WORD *)(v5 + 160);
  v38[3] = *(_OWORD *)(v5 + 48);
  v38[4] = *(_OWORD *)(v5 + 64);
  v38[5] = *(_OWORD *)(v5 + 80);
  v38[6] = *(_OWORD *)(v5 + 96);
  v38[0] = *(_OWORD *)v5;
  v38[1] = *(_OWORD *)(v5 + 16);
  v38[2] = *(_OWORD *)(v5 + 32);
  sub_100482DD4(a2, (uint64_t)&v28);
  if (sub_100482E30((uint64_t)&v28) != 1) {
    goto LABEL_16;
  }
  uint64_t v6 = sub_100483328((uint64_t)&v28);
  v35[4] = *(_OWORD *)(v6 + 112);
  v35[5] = *(_OWORD *)(v6 + 128);
  v35[6] = *(_OWORD *)(v6 + 144);
  __int16 v36 = *(_WORD *)(v6 + 160);
  v35[0] = *(_OWORD *)(v6 + 48);
  v35[1] = *(_OWORD *)(v6 + 64);
  v35[2] = *(_OWORD *)(v6 + 80);
  v35[3] = *(_OWORD *)(v6 + 96);
  long long v32 = *(_OWORD *)v6;
  long long v33 = *(_OWORD *)(v6 + 16);
  long long v34 = *(_OWORD *)(v6 + 32);
  sub_1004850D0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
  sub_1004850D0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
  char v7 = sub_1004CE270((uint64_t)v38, (uint64_t)&v32);
  sub_1004850D0(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
  sub_1004850D0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
  return v7 & 1;
}

uint64_t _s15IMAP2Connection0B5StateO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  os_log_type_t v85 = (char *)a2;
  uint64_t v3 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v3 - 8);
  unint64_t v82 = (unint64_t)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E12C0();
  uint64_t v83 = *(void *)(v5 - 8);
  uint64_t v84 = v5;
  __chkstk_darwin(v5);
  char v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ConnectionState();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (unsigned __int8 *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  char v14 = (char *)&v80 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (char *)&v80 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v80 - v18;
  uint64_t v20 = sub_10000566C(&qword_100715F78);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (unsigned __int8 *)&v80 + *(int *)(v21 + 56) - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  unint64_t v25 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(v24, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_1004AD164((uint64_t)v85, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004AD164((uint64_t)v25, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v26 = v82;
        sub_1004AE64C((uint64_t)v23, v82, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
        char v27 = _s15IMAP2Connection29UnauthenticatedStateWithTasksV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v26);
        sub_1004AE100(v26, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
        sub_1004AE100((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
        goto LABEL_24;
      }
      sub_1004AE100((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
      goto LABEL_21;
    case 2u:
      sub_1004AD164((uint64_t)v25, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      memcpy(v102, v14, 0x15AuLL);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_100482E3C((uint64_t)v102);
LABEL_21:
        sub_100007A48((uint64_t)v25, &qword_100715F78);
        goto LABEL_22;
      }
      memcpy(v101, v23, 0x15AuLL);
      if ((sub_100485B4C(v102[0], v101[0]) & 1) == 0) {
        goto LABEL_35;
      }
      v116[8] = *(_OWORD *)&v102[17];
      v116[9] = *(_OWORD *)&v102[19];
      v116[10] = *(_OWORD *)&v102[21];
      v116[4] = *(_OWORD *)&v102[9];
      v116[5] = *(_OWORD *)&v102[11];
      v116[7] = *(_OWORD *)&v102[15];
      v116[6] = *(_OWORD *)&v102[13];
      v116[0] = *(_OWORD *)&v102[1];
      v116[1] = *(_OWORD *)&v102[3];
      v116[3] = *(_OWORD *)&v102[7];
      v116[2] = *(_OWORD *)&v102[5];
      v117[8] = *(_OWORD *)&v101[17];
      v117[9] = *(_OWORD *)&v101[19];
      v117[10] = *(_OWORD *)&v101[21];
      v117[4] = *(_OWORD *)&v101[9];
      v117[5] = *(_OWORD *)&v101[11];
      v117[7] = *(_OWORD *)&v101[15];
      v117[6] = *(_OWORD *)&v101[13];
      v117[0] = *(_OWORD *)&v101[1];
      v117[1] = *(_OWORD *)&v101[3];
      v117[3] = *(_OWORD *)&v101[7];
      v117[2] = *(_OWORD *)&v101[5];
      if ((static ServerID.__derived_struct_equals(_:_:)(v116, v117) & 1) == 0) {
        goto LABEL_35;
      }
      sub_100482DD4((uint64_t)&v102[23], (uint64_t)v100);
      int v28 = sub_100482E30((uint64_t)v100);
      if (v28)
      {
        if (v28 == 1)
        {
          uint64_t v29 = sub_100483328((uint64_t)v100);
          long long v110 = *(_OWORD *)(v29 + 112);
          long long v111 = *(_OWORD *)(v29 + 128);
          long long v112 = *(_OWORD *)(v29 + 144);
          __int16 v113 = *(_WORD *)(v29 + 160);
          long long v106 = *(_OWORD *)(v29 + 48);
          long long v107 = *(_OWORD *)(v29 + 64);
          long long v108 = *(_OWORD *)(v29 + 80);
          long long v109 = *(_OWORD *)(v29 + 96);
          long long v103 = *(_OWORD *)v29;
          long long v104 = *(_OWORD *)(v29 + 16);
          long long v105 = *(_OWORD *)(v29 + 32);
          sub_100482DD4((uint64_t)&v101[23], (uint64_t)&v86);
          if (sub_100482E30((uint64_t)&v86) == 1)
          {
            uint64_t v30 = sub_100483328((uint64_t)&v86);
            v114[7] = *(_OWORD *)(v30 + 112);
            v114[8] = *(_OWORD *)(v30 + 128);
            v114[9] = *(_OWORD *)(v30 + 144);
            __int16 v115 = *(_WORD *)(v30 + 160);
            v114[3] = *(_OWORD *)(v30 + 48);
            v114[4] = *(_OWORD *)(v30 + 64);
            v114[5] = *(_OWORD *)(v30 + 80);
            v114[6] = *(_OWORD *)(v30 + 96);
            v114[0] = *(_OWORD *)v30;
            v114[1] = *(_OWORD *)(v30 + 16);
            v114[2] = *(_OWORD *)(v30 + 32);
            sub_1004850D0((uint64_t)&v101[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
            sub_1004850D0((uint64_t)&v102[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
            char v31 = sub_1004CE270((uint64_t)&v103, (uint64_t)v114);
            sub_1004850D0((uint64_t)&v101[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            sub_1004850D0((uint64_t)&v102[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v49 = sub_100483328((uint64_t)v100);
          unint64_t v50 = *(void *)v49;
          int v51 = *(_DWORD *)(v49 + 8);
          unint64_t v52 = *(void *)(v49 + 16);
          uint64_t v53 = *(void *)(v49 + 24);
          int v54 = *(_DWORD *)(v49 + 32);
          char v55 = *(unsigned char *)(v49 + 36);
          uint64_t v56 = *(void *)(v49 + 40);
          int v57 = *(_DWORD *)(v49 + 48);
          char v58 = *(unsigned char *)(v49 + 52);
          int v59 = *(_DWORD *)(v49 + 56);
          char v60 = *(unsigned char *)(v49 + 60);
          uint64_t v61 = *(void *)(v49 + 64);
          char v62 = *(unsigned char *)(v49 + 72);
          char v63 = *(unsigned char *)(v49 + 73);
          LOBYTE(v49) = *(unsigned char *)(v49 + 74);
          unint64_t v86 = v50;
          int v87 = v51;
          unint64_t v88 = v52;
          uint64_t v89 = v53;
          LODWORD(v90) = v54;
          BYTE4(v90) = v55;
          uint64_t v91 = v56;
          int v92 = v57;
          char v93 = v58;
          int v94 = v59;
          char v95 = v60;
          uint64_t v96 = v61;
          char v97 = v62;
          char v98 = v63;
          char v99 = v49;
          sub_100482DD4((uint64_t)&v101[23], (uint64_t)v114);
          if (sub_100482E30((uint64_t)v114) == 2)
          {
            uint64_t v64 = sub_100483328((uint64_t)v114);
            uint64_t v65 = *(void *)v64;
            int v66 = *(_DWORD *)(v64 + 8);
            uint64_t v67 = *(void *)(v64 + 16);
            uint64_t v68 = *(void *)(v64 + 24);
            int v69 = *(_DWORD *)(v64 + 32);
            char v70 = *(unsigned char *)(v64 + 36);
            uint64_t v71 = *(void *)(v64 + 40);
            int v72 = *(_DWORD *)(v64 + 48);
            char v73 = *(unsigned char *)(v64 + 52);
            int v74 = *(_DWORD *)(v64 + 56);
            char v75 = *(unsigned char *)(v64 + 60);
            uint64_t v76 = *(void *)(v64 + 64);
            char v77 = *(unsigned char *)(v64 + 72);
            char v78 = *(unsigned char *)(v64 + 73);
            LOBYTE(v64) = *(unsigned char *)(v64 + 74);
            *(void *)&long long v103 = v65;
            DWORD2(v103) = v66;
            *(void *)&long long v104 = v67;
            *((void *)&v104 + 1) = v68;
            LODWORD(v105) = v69;
            BYTE4(v105) = v70;
            *((void *)&v105 + 1) = v71;
            LODWORD(v106) = v72;
            BYTE4(v106) = v73;
            DWORD2(v106) = v74;
            BYTE12(v106) = v75;
            *(void *)&long long v107 = v76;
            BYTE8(v107) = v77;
            BYTE9(v107) = v78;
            BYTE10(v107) = v64;
            char v31 = _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v86, (uint64_t)&v103);
LABEL_33:
            sub_100482E3C((uint64_t)v101);
            sub_100482E3C((uint64_t)v102);
            if ((v31 & 1) == 0) {
              goto LABEL_36;
            }
LABEL_18:
            sub_1004AE100((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ConnectionState);
            char v27 = 1;
            return v27 & 1;
          }
        }
        goto LABEL_35;
      }
      __int16 v36 = (unint64_t *)sub_100483328((uint64_t)v100);
      unint64_t v38 = *v36;
      uint64_t v37 = v36[1];
      unint64_t v40 = v36[2];
      uint64_t v39 = v36[3];
      uint64_t v41 = v36[4];
      sub_100482DD4((uint64_t)&v101[23], (uint64_t)v114);
      if (sub_100482E30((uint64_t)v114))
      {
LABEL_35:
        sub_100482E3C((uint64_t)v101);
        sub_100482E3C((uint64_t)v102);
        goto LABEL_36;
      }
      os_log_type_t v85 = v25;
      uint64_t v42 = (unint64_t *)sub_100483328((uint64_t)v114);
      unint64_t v44 = *v42;
      uint64_t v43 = v42[1];
      unint64_t v46 = v42[2];
      uint64_t v45 = v42[3];
      uint64_t v47 = v42[4];
      if (!v38)
      {
        unint64_t v82 = v42[2];
        uint64_t v83 = v43;
        uint64_t v84 = v45;
        if (!v44)
        {
          sub_100482E3C((uint64_t)v101);
          sub_100482E3C((uint64_t)v102);
          unint64_t v25 = v85;
          goto LABEL_18;
        }
        goto LABEL_40;
      }
      if (!v44)
      {
        unint64_t v82 = v42[2];
        uint64_t v83 = v43;
        uint64_t v84 = v45;
        sub_100482DD4((uint64_t)&v101[23], (uint64_t)&v103);
        uint64_t v79 = sub_100483328((uint64_t)&v103);
        sub_100484FD8(*(void *)v79, *(void *)(v79 + 8), *(void *)(v79 + 16), *(void *)(v79 + 24), *(void *)(v79 + 32));
LABEL_40:
        uint64_t v81 = v47;
        sub_1004850D0((uint64_t)&v101[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
        sub_1004850D0((uint64_t)&v102[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
        sub_100483114(v38, v37, v40, v39, v41);
        sub_100483114(v44, v83, v82, v84, v81);
        sub_100482E3C((uint64_t)v101);
        sub_100482E3C((uint64_t)v102);
        unint64_t v25 = v85;
        goto LABEL_36;
      }
      unint64_t v86 = v38;
      int v87 = v37;
      unint64_t v88 = v40;
      uint64_t v89 = v39;
      uint64_t v90 = v41;
      *(void *)&long long v103 = v44;
      DWORD2(v103) = v43;
      *(void *)&long long v104 = v46;
      *((void *)&v104 + 1) = v45;
      *(void *)&long long v105 = v47;
      sub_1004850D0((uint64_t)&v101[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
      sub_1004850D0((uint64_t)&v102[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
      BOOL v48 = _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v86, (uint64_t)&v103);
      sub_1004850D0((uint64_t)&v101[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
      sub_1004850D0((uint64_t)&v102[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
      sub_100482E3C((uint64_t)v101);
      sub_100482E3C((uint64_t)v102);
      unint64_t v25 = v85;
      if (v48) {
        goto LABEL_18;
      }
LABEL_36:
      sub_1004AE100((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_22:
      char v27 = 0;
      return v27 & 1;
    case 3u:
      sub_1004AD164((uint64_t)v25, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_21;
      }
      char v27 = *v11 == *v23;
      goto LABEL_24;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_21;
      }
      goto LABEL_18;
    case 5u:
      if (swift_getEnumCaseMultiPayload() == 5) {
        goto LABEL_18;
      }
      goto LABEL_21;
    default:
      sub_1004AD164((uint64_t)v25, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v83 + 8))(v19, v84);
        goto LABEL_21;
      }
      uint64_t v33 = v83;
      uint64_t v32 = v84;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v83 + 32))(v7, v23, v84);
      char v27 = sub_1005E12B0();
      long long v34 = *(void (**)(char *, uint64_t))(v33 + 8);
      v34(v7, v32);
      v34(v19, v32);
LABEL_24:
      sub_1004AE100((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      return v27 & 1;
  }
}

uint64_t sub_1004A8A6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004A8B48(uint64_t a1)
{
  return a1;
}

unint64_t sub_1004A8C5C()
{
  unint64_t result = qword_100716868;
  if (!qword_100716868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716868);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ConnectionState(void *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v10 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v10;
        uint64_t v11 = *((void *)a2 + 3);
        a1[2] = *((void *)a2 + 2);
        a1[3] = v11;
        uint64_t v12 = *((void *)a2 + 5);
        a1[4] = *((void *)a2 + 4);
        a1[5] = v12;
        uint64_t v13 = *((void *)a2 + 7);
        a1[6] = *((void *)a2 + 6);
        a1[7] = v13;
        uint64_t v14 = *((void *)a2 + 9);
        a1[8] = *((void *)a2 + 8);
        a1[9] = v14;
        uint64_t v15 = *((void *)a2 + 11);
        a1[10] = *((void *)a2 + 10);
        a1[11] = v15;
        uint64_t v16 = *((void *)a2 + 13);
        a1[12] = *((void *)a2 + 12);
        a1[13] = v16;
        uint64_t v17 = *((void *)a2 + 15);
        a1[14] = *((void *)a2 + 14);
        a1[15] = v17;
        uint64_t v18 = *((void *)a2 + 17);
        a1[16] = *((void *)a2 + 16);
        a1[17] = v18;
        uint64_t v19 = *((void *)a2 + 19);
        a1[18] = *((void *)a2 + 18);
        a1[19] = v19;
        uint64_t v20 = *((void *)a2 + 21);
        a1[20] = *((void *)a2 + 20);
        a1[21] = v20;
        uint64_t v21 = *((void *)a2 + 23);
        a1[22] = *((void *)a2 + 22);
        uint64_t v80 = *((void *)a2 + 24);
        uint64_t v82 = v21;
        uint64_t v76 = *((void *)a2 + 26);
        unint64_t v78 = *((void *)a2 + 25);
        uint64_t v73 = *((void *)a2 + 28);
        uint64_t v74 = *((void *)a2 + 27);
        uint64_t v71 = *((void *)a2 + 30);
        uint64_t v72 = *((void *)a2 + 29);
        uint64_t v70 = *((void *)a2 + 31);
        uint64_t v92 = *((void *)a2 + 33);
        uint64_t v95 = *((void *)a2 + 32);
        uint64_t v87 = *((void *)a2 + 35);
        uint64_t v90 = *((void *)a2 + 34);
        uint64_t v22 = *((void *)a2 + 37);
        uint64_t v85 = *((void *)a2 + 36);
        uint64_t v23 = *((void *)a2 + 38);
        uint64_t v24 = *((void *)a2 + 39);
        uint64_t v25 = *((void *)a2 + 40);
        uint64_t v26 = *((void *)a2 + 41);
        uint64_t v27 = *((void *)a2 + 42);
        unsigned __int16 v69 = *((_WORD *)a2 + 172);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100485144(v82, v80, v78, v76, v74, v73, v72, v71, v70, v95, v92, v90, v87, v85, v22, v23, v24, v25, v26,
          v27,
          v69);
        a1[23] = v82;
        a1[24] = v80;
        a1[25] = v78;
        a1[26] = v76;
        a1[27] = v74;
        a1[28] = v73;
        a1[29] = v72;
        a1[30] = v71;
        a1[31] = v70;
        a1[32] = v95;
        a1[33] = v92;
        a1[34] = v90;
        a1[35] = v87;
        a1[36] = v85;
        a1[37] = v22;
        a1[38] = v23;
        a1[39] = v24;
        a1[40] = v25;
        a1[41] = v26;
        a1[42] = v27;
        *((_WORD *)a1 + 172) = v69;
        goto LABEL_21;
      case 1:
        *(unsigned char *)a1 = *a2;
        a1[1] = *((void *)a2 + 1);
        uint64_t v28 = type metadata accessor for UnauthenticatedStateWithTasks();
        uint64_t v29 = *(int *)(v28 + 24);
        uint64_t v30 = (char *)a1 + v29;
        char v31 = &a2[v29];
        uint64_t v32 = type metadata accessor for UnauthenticatedState();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
            *(void *)uint64_t v30 = *(void *)v31;
            swift_bridgeObjectRetain();
            goto LABEL_19;
          case 2u:
            uint64_t v96 = v28;
            *(void *)uint64_t v30 = *(void *)v31;
            v30[8] = v31[8];
            uint64_t v33 = *((void *)v31 + 3);
            *((void *)v30 + 2) = *((void *)v31 + 2);
            *((void *)v30 + 3) = v33;
            uint64_t v34 = *(int *)(type metadata accessor for Authenticator() + 32);
            char v93 = &v30[v34];
            uint64_t v35 = &v31[v34];
            __int16 v36 = (int *)type metadata accessor for AuthenticationTask();
            uint64_t v88 = *((void *)v36 - 1);
            uint64_t v37 = *(unsigned int (**)(char *, uint64_t, int *))(v88 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v37(v35, 1, v36))
            {
              uint64_t v38 = sub_10000566C(&qword_100715848);
              memcpy(v93, v35, *(void *)(*(void *)(v38 - 8) + 64));
            }
            else
            {
              long long v59 = *(_OWORD *)(v35 + 24);
              *(_OWORD *)(v93 + 24) = v59;
              (**(void (***)(char *, char *))(v59 - 8))(v93, v35);
              uint64_t v60 = *((void *)v35 + 5);
              unint64_t v61 = *((void *)v35 + 6);
              sub_10044461C(v60, v61);
              *((void *)v93 + 5) = v60;
              *((void *)v93 + 6) = v61;
              uint64_t v62 = v36[5];
              char v63 = &v93[v62];
              uint64_t v64 = &v35[v62];
              uint64_t v65 = sub_1005E0ED0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
              uint64_t v66 = _s14descr1006B94C1C6LoggerVMa();
              *(void *)&v63[*(int *)(v66 + 20)] = *(void *)&v64[*(int *)(v66 + 20)];
              v93[v36[6]] = v35[v36[6]];
              *(void *)&v93[v36[7]] = *(void *)&v35[v36[7]];
              v93[v36[8]] = v35[v36[8]];
              uint64_t v67 = *(void (**)(char *, void, uint64_t, int *))(v88 + 56);
              swift_bridgeObjectRetain();
              v67(v93, 0, 1, v36);
            }
            uint64_t v28 = v96;
            goto LABEL_19;
          case 4u:
          case 5u:
          case 6u:
          case 8u:
            uint64_t v39 = *((void *)v31 + 1);
            *(void *)uint64_t v30 = *(void *)v31;
            *((void *)v30 + 1) = v39;
            uint64_t v40 = *((void *)v31 + 3);
            *((void *)v30 + 2) = *((void *)v31 + 2);
            *((void *)v30 + 3) = v40;
            uint64_t v41 = *((void *)v31 + 5);
            *((void *)v30 + 4) = *((void *)v31 + 4);
            *((void *)v30 + 5) = v41;
            uint64_t v42 = *((void *)v31 + 7);
            *((void *)v30 + 6) = *((void *)v31 + 6);
            *((void *)v30 + 7) = v42;
            uint64_t v43 = *((void *)v31 + 9);
            *((void *)v30 + 8) = *((void *)v31 + 8);
            *((void *)v30 + 9) = v43;
            uint64_t v44 = *((void *)v31 + 11);
            *((void *)v30 + 10) = *((void *)v31 + 10);
            *((void *)v30 + 11) = v44;
            uint64_t v45 = *((void *)v31 + 13);
            *((void *)v30 + 12) = *((void *)v31 + 12);
            *((void *)v30 + 13) = v45;
            uint64_t v46 = *((void *)v31 + 15);
            *((void *)v30 + 14) = *((void *)v31 + 14);
            *((void *)v30 + 15) = v46;
            uint64_t v47 = *((void *)v31 + 17);
            *((void *)v30 + 16) = *((void *)v31 + 16);
            *((void *)v30 + 17) = v47;
            uint64_t v48 = *((void *)v31 + 19);
            *((void *)v30 + 18) = *((void *)v31 + 18);
            *((void *)v30 + 19) = v48;
            uint64_t v49 = *((void *)v31 + 21);
            *((void *)v30 + 20) = *((void *)v31 + 20);
            *((void *)v30 + 21) = v49;
            *((void *)v30 + 22) = *((void *)v31 + 22);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_19;
          case 7u:
            *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
            uint64_t v50 = *((void *)v31 + 2);
            *((void *)v30 + 1) = *((void *)v31 + 1);
            *((void *)v30 + 2) = v50;
            uint64_t v51 = *((void *)v31 + 4);
            *((void *)v30 + 3) = *((void *)v31 + 3);
            *((void *)v30 + 4) = v51;
            uint64_t v97 = v28;
            uint64_t v52 = *((void *)v31 + 6);
            *((void *)v30 + 5) = *((void *)v31 + 5);
            *((void *)v30 + 6) = v52;
            uint64_t v94 = *((void *)v31 + 8);
            *((void *)v30 + 7) = *((void *)v31 + 7);
            *((void *)v30 + 8) = v94;
            uint64_t v91 = *((void *)v31 + 10);
            *((void *)v30 + 9) = *((void *)v31 + 9);
            *((void *)v30 + 10) = v91;
            uint64_t v89 = *((void *)v31 + 12);
            *((void *)v30 + 11) = *((void *)v31 + 11);
            *((void *)v30 + 12) = v89;
            uint64_t v53 = *((void *)v31 + 14);
            *((void *)v30 + 13) = *((void *)v31 + 13);
            *((void *)v30 + 14) = v53;
            uint64_t v86 = *((void *)v31 + 16);
            *((void *)v30 + 15) = *((void *)v31 + 15);
            *((void *)v30 + 16) = v86;
            uint64_t v84 = *((void *)v31 + 18);
            *((void *)v30 + 17) = *((void *)v31 + 17);
            *((void *)v30 + 18) = v84;
            uint64_t v83 = *((void *)v31 + 20);
            *((void *)v30 + 19) = *((void *)v31 + 19);
            *((void *)v30 + 20) = v83;
            uint64_t v81 = *((void *)v31 + 22);
            *((void *)v30 + 21) = *((void *)v31 + 21);
            *((void *)v30 + 22) = v81;
            uint64_t v79 = *((void *)v31 + 24);
            *((void *)v30 + 23) = *((void *)v31 + 23);
            *((void *)v30 + 24) = v79;
            uint64_t v77 = *((void *)v31 + 26);
            *((void *)v30 + 25) = *((void *)v31 + 25);
            *((void *)v30 + 26) = v77;
            uint64_t v75 = *((void *)v31 + 28);
            *((void *)v30 + 27) = *((void *)v31 + 27);
            *((void *)v30 + 28) = v75;
            uint64_t v54 = *((void *)v31 + 29);
            uint64_t v55 = *((void *)v31 + 30);
            *((void *)v30 + 29) = v54;
            *((void *)v30 + 30) = v55;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v28 = v97;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_19;
          case 9u:
            uint64_t v56 = *(void *)v31;
            uint64_t v57 = *((void *)v31 + 1);
            char v58 = v31[16];
            sub_1004A9860(v56, v57, v58);
            *(void *)uint64_t v30 = v56;
            *((void *)v30 + 1) = v57;
            v30[16] = v58;
LABEL_19:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
            break;
        }
        *(void *)((char *)a1 + *(int *)(v28 + 28)) = *(void *)&a2[*(int *)(v28 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 0:
        uint64_t v8 = sub_1005E12C0();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_1004A9860(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ConnectionState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a1 + 184);
      uint64_t v6 = *(void *)(a1 + 192);
      uint64_t v7 = a1 + 184;
      return sub_100482FC8(v5, v6, *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(void *)(v7 + 72), *(void *)(v7 + 80), *(void *)(v7 + 88), *(void *)(v7 + 96), *(void *)(v7 + 104), *(void *)(v7 + 112), *(void *)(v7 + 120), *(void *)(v7 + 128), *(void *)(v7 + 136), *(void *)(v7 + 144),
               *(void *)(v7 + 152),
               *(_WORD *)(v7 + 160));
    case 1:
      uint64_t v8 = a1 + *(int *)(type metadata accessor for UnauthenticatedStateWithTasks() + 24);
      type metadata accessor for UnauthenticatedState();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
          swift_bridgeObjectRelease();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = v8 + *(int *)(type metadata accessor for Authenticator() + 32);
          uint64_t v10 = type metadata accessor for AuthenticationTask();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
          {
            _s13IMAP2Behavior4TaskOwxx_0(v9);
            sub_100444674(*(void *)(v9 + 40), *(void *)(v9 + 48));
            uint64_t v11 = v9 + *(int *)(v10 + 20);
            uint64_t v12 = sub_1005E0ED0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
            swift_bridgeObjectRelease();
          }
          break;
        case 4u:
        case 5u:
        case 6u:
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 9u:
          sub_10046564C(*(void *)v8, *(void *)(v8 + 8), *(unsigned char *)(v8 + 16));
          break;
        default:
          break;
      }
      return swift_bridgeObjectRelease();
    case 0:
      uint64_t v3 = sub_1005E12C0();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for ConnectionState(void *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v8 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v8;
      uint64_t v9 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v9;
      uint64_t v10 = *((void *)a2 + 5);
      a1[4] = *((void *)a2 + 4);
      a1[5] = v10;
      uint64_t v11 = *((void *)a2 + 7);
      a1[6] = *((void *)a2 + 6);
      a1[7] = v11;
      uint64_t v12 = *((void *)a2 + 9);
      a1[8] = *((void *)a2 + 8);
      a1[9] = v12;
      uint64_t v13 = *((void *)a2 + 11);
      a1[10] = *((void *)a2 + 10);
      a1[11] = v13;
      uint64_t v14 = *((void *)a2 + 13);
      a1[12] = *((void *)a2 + 12);
      a1[13] = v14;
      uint64_t v15 = *((void *)a2 + 15);
      a1[14] = *((void *)a2 + 14);
      a1[15] = v15;
      uint64_t v16 = *((void *)a2 + 17);
      a1[16] = *((void *)a2 + 16);
      a1[17] = v16;
      uint64_t v17 = *((void *)a2 + 19);
      a1[18] = *((void *)a2 + 18);
      a1[19] = v17;
      uint64_t v18 = *((void *)a2 + 21);
      a1[20] = *((void *)a2 + 20);
      a1[21] = v18;
      uint64_t v19 = *((void *)a2 + 23);
      a1[22] = *((void *)a2 + 22);
      uint64_t v78 = *((void *)a2 + 24);
      uint64_t v80 = v19;
      uint64_t v74 = *((void *)a2 + 26);
      unint64_t v76 = *((void *)a2 + 25);
      uint64_t v71 = *((void *)a2 + 28);
      uint64_t v72 = *((void *)a2 + 27);
      uint64_t v69 = *((void *)a2 + 30);
      uint64_t v70 = *((void *)a2 + 29);
      uint64_t v68 = *((void *)a2 + 31);
      uint64_t v90 = *((void *)a2 + 33);
      uint64_t v93 = *((void *)a2 + 32);
      uint64_t v85 = *((void *)a2 + 35);
      uint64_t v88 = *((void *)a2 + 34);
      uint64_t v20 = *((void *)a2 + 37);
      uint64_t v83 = *((void *)a2 + 36);
      uint64_t v21 = *((void *)a2 + 38);
      uint64_t v22 = *((void *)a2 + 39);
      uint64_t v23 = *((void *)a2 + 40);
      uint64_t v24 = *((void *)a2 + 41);
      uint64_t v25 = *((void *)a2 + 42);
      unsigned __int16 v67 = *((_WORD *)a2 + 172);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100485144(v80, v78, v76, v74, v72, v71, v70, v69, v68, v93, v90, v88, v85, v83, v20, v21, v22, v23, v24,
        v25,
        v67);
      a1[23] = v80;
      a1[24] = v78;
      a1[25] = v76;
      a1[26] = v74;
      a1[27] = v72;
      a1[28] = v71;
      a1[29] = v70;
      a1[30] = v69;
      a1[31] = v68;
      a1[32] = v93;
      a1[33] = v90;
      a1[34] = v88;
      a1[35] = v85;
      a1[36] = v83;
      a1[37] = v20;
      a1[38] = v21;
      a1[39] = v22;
      a1[40] = v23;
      a1[41] = v24;
      a1[42] = v25;
      *((_WORD *)a1 + 172) = v67;
      goto LABEL_19;
    case 1:
      *(unsigned char *)a1 = *a2;
      a1[1] = *((void *)a2 + 1);
      uint64_t v26 = type metadata accessor for UnauthenticatedStateWithTasks();
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = &a2[v27];
      uint64_t v30 = type metadata accessor for UnauthenticatedState();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
          *(void *)uint64_t v28 = *(void *)v29;
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 2u:
          uint64_t v94 = v26;
          *(void *)uint64_t v28 = *(void *)v29;
          v28[8] = v29[8];
          uint64_t v31 = *((void *)v29 + 3);
          *((void *)v28 + 2) = *((void *)v29 + 2);
          *((void *)v28 + 3) = v31;
          uint64_t v32 = *(int *)(type metadata accessor for Authenticator() + 32);
          uint64_t v91 = &v28[v32];
          uint64_t v33 = &v29[v32];
          uint64_t v34 = (int *)type metadata accessor for AuthenticationTask();
          uint64_t v86 = *((void *)v34 - 1);
          uint64_t v35 = *(unsigned int (**)(char *, uint64_t, int *))(v86 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v35(v33, 1, v34))
          {
            uint64_t v36 = sub_10000566C(&qword_100715848);
            memcpy(v91, v33, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            long long v57 = *(_OWORD *)(v33 + 24);
            *(_OWORD *)(v91 + 24) = v57;
            (**(void (***)(char *, char *))(v57 - 8))(v91, v33);
            uint64_t v58 = *((void *)v33 + 5);
            unint64_t v59 = *((void *)v33 + 6);
            sub_10044461C(v58, v59);
            *((void *)v91 + 5) = v58;
            *((void *)v91 + 6) = v59;
            uint64_t v60 = v34[5];
            unint64_t v61 = &v91[v60];
            uint64_t v62 = &v33[v60];
            uint64_t v63 = sub_1005E0ED0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
            uint64_t v64 = _s14descr1006B94C1C6LoggerVMa();
            *(void *)&v61[*(int *)(v64 + 20)] = *(void *)&v62[*(int *)(v64 + 20)];
            v91[v34[6]] = v33[v34[6]];
            *(void *)&v91[v34[7]] = *(void *)&v33[v34[7]];
            v91[v34[8]] = v33[v34[8]];
            uint64_t v65 = *(void (**)(char *, void, uint64_t, int *))(v86 + 56);
            swift_bridgeObjectRetain();
            v65(v91, 0, 1, v34);
          }
          uint64_t v26 = v94;
          goto LABEL_17;
        case 4u:
        case 5u:
        case 6u:
        case 8u:
          uint64_t v37 = *((void *)v29 + 1);
          *(void *)uint64_t v28 = *(void *)v29;
          *((void *)v28 + 1) = v37;
          uint64_t v38 = *((void *)v29 + 3);
          *((void *)v28 + 2) = *((void *)v29 + 2);
          *((void *)v28 + 3) = v38;
          uint64_t v39 = *((void *)v29 + 5);
          *((void *)v28 + 4) = *((void *)v29 + 4);
          *((void *)v28 + 5) = v39;
          uint64_t v40 = *((void *)v29 + 7);
          *((void *)v28 + 6) = *((void *)v29 + 6);
          *((void *)v28 + 7) = v40;
          uint64_t v41 = *((void *)v29 + 9);
          *((void *)v28 + 8) = *((void *)v29 + 8);
          *((void *)v28 + 9) = v41;
          uint64_t v42 = *((void *)v29 + 11);
          *((void *)v28 + 10) = *((void *)v29 + 10);
          *((void *)v28 + 11) = v42;
          uint64_t v43 = *((void *)v29 + 13);
          *((void *)v28 + 12) = *((void *)v29 + 12);
          *((void *)v28 + 13) = v43;
          uint64_t v44 = *((void *)v29 + 15);
          *((void *)v28 + 14) = *((void *)v29 + 14);
          *((void *)v28 + 15) = v44;
          uint64_t v45 = *((void *)v29 + 17);
          *((void *)v28 + 16) = *((void *)v29 + 16);
          *((void *)v28 + 17) = v45;
          uint64_t v46 = *((void *)v29 + 19);
          *((void *)v28 + 18) = *((void *)v29 + 18);
          *((void *)v28 + 19) = v46;
          uint64_t v47 = *((void *)v29 + 21);
          *((void *)v28 + 20) = *((void *)v29 + 20);
          *((void *)v28 + 21) = v47;
          *((void *)v28 + 22) = *((void *)v29 + 22);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 7u:
          *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
          uint64_t v48 = *((void *)v29 + 2);
          *((void *)v28 + 1) = *((void *)v29 + 1);
          *((void *)v28 + 2) = v48;
          uint64_t v49 = *((void *)v29 + 4);
          *((void *)v28 + 3) = *((void *)v29 + 3);
          *((void *)v28 + 4) = v49;
          uint64_t v95 = v26;
          uint64_t v50 = *((void *)v29 + 6);
          *((void *)v28 + 5) = *((void *)v29 + 5);
          *((void *)v28 + 6) = v50;
          uint64_t v92 = *((void *)v29 + 8);
          *((void *)v28 + 7) = *((void *)v29 + 7);
          *((void *)v28 + 8) = v92;
          uint64_t v89 = *((void *)v29 + 10);
          *((void *)v28 + 9) = *((void *)v29 + 9);
          *((void *)v28 + 10) = v89;
          uint64_t v87 = *((void *)v29 + 12);
          *((void *)v28 + 11) = *((void *)v29 + 11);
          *((void *)v28 + 12) = v87;
          uint64_t v51 = *((void *)v29 + 14);
          *((void *)v28 + 13) = *((void *)v29 + 13);
          *((void *)v28 + 14) = v51;
          uint64_t v84 = *((void *)v29 + 16);
          *((void *)v28 + 15) = *((void *)v29 + 15);
          *((void *)v28 + 16) = v84;
          uint64_t v82 = *((void *)v29 + 18);
          *((void *)v28 + 17) = *((void *)v29 + 17);
          *((void *)v28 + 18) = v82;
          uint64_t v81 = *((void *)v29 + 20);
          *((void *)v28 + 19) = *((void *)v29 + 19);
          *((void *)v28 + 20) = v81;
          uint64_t v79 = *((void *)v29 + 22);
          *((void *)v28 + 21) = *((void *)v29 + 21);
          *((void *)v28 + 22) = v79;
          uint64_t v77 = *((void *)v29 + 24);
          *((void *)v28 + 23) = *((void *)v29 + 23);
          *((void *)v28 + 24) = v77;
          uint64_t v75 = *((void *)v29 + 26);
          *((void *)v28 + 25) = *((void *)v29 + 25);
          *((void *)v28 + 26) = v75;
          uint64_t v73 = *((void *)v29 + 28);
          *((void *)v28 + 27) = *((void *)v29 + 27);
          *((void *)v28 + 28) = v73;
          uint64_t v52 = *((void *)v29 + 29);
          uint64_t v53 = *((void *)v29 + 30);
          *((void *)v28 + 29) = v52;
          *((void *)v28 + 30) = v53;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v26 = v95;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 9u:
          uint64_t v54 = *(void *)v29;
          uint64_t v55 = *((void *)v29 + 1);
          char v56 = v29[16];
          sub_1004A9860(v54, v55, v56);
          *(void *)uint64_t v28 = v54;
          *((void *)v28 + 1) = v55;
          v28[16] = v56;
LABEL_17:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
          break;
      }
      *(void *)((char *)a1 + *(int *)(v26 + 28)) = *(void *)&a2[*(int *)(v26 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 0:
      uint64_t v7 = sub_1005E12C0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for ConnectionState(void *a1, char *a2, uint64_t a3)
{
  if (a1 != (void *)a2)
  {
    sub_1004AE100((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        a1[2] = *((void *)a2 + 2);
        a1[3] = *((void *)a2 + 3);
        a1[4] = *((void *)a2 + 4);
        a1[5] = *((void *)a2 + 5);
        a1[6] = *((void *)a2 + 6);
        a1[7] = *((void *)a2 + 7);
        a1[8] = *((void *)a2 + 8);
        a1[9] = *((void *)a2 + 9);
        a1[10] = *((void *)a2 + 10);
        a1[11] = *((void *)a2 + 11);
        a1[12] = *((void *)a2 + 12);
        a1[13] = *((void *)a2 + 13);
        a1[14] = *((void *)a2 + 14);
        a1[15] = *((void *)a2 + 15);
        a1[16] = *((void *)a2 + 16);
        a1[17] = *((void *)a2 + 17);
        a1[18] = *((void *)a2 + 18);
        a1[19] = *((void *)a2 + 19);
        a1[20] = *((void *)a2 + 20);
        a1[21] = *((void *)a2 + 21);
        a1[22] = *((void *)a2 + 22);
        uint64_t v45 = *((void *)a2 + 24);
        uint64_t v46 = *((void *)a2 + 23);
        uint64_t v43 = *((void *)a2 + 26);
        unint64_t v44 = *((void *)a2 + 25);
        uint64_t v41 = *((void *)a2 + 28);
        uint64_t v42 = *((void *)a2 + 27);
        uint64_t v39 = *((void *)a2 + 30);
        uint64_t v40 = *((void *)a2 + 29);
        uint64_t v38 = *((void *)a2 + 31);
        uint64_t v51 = *((void *)a2 + 33);
        uint64_t v53 = *((void *)a2 + 32);
        uint64_t v48 = *((void *)a2 + 35);
        uint64_t v50 = *((void *)a2 + 34);
        uint64_t v8 = *((void *)a2 + 37);
        uint64_t v47 = *((void *)a2 + 36);
        uint64_t v9 = *((void *)a2 + 38);
        uint64_t v10 = *((void *)a2 + 39);
        uint64_t v11 = *((void *)a2 + 40);
        uint64_t v12 = *((void *)a2 + 41);
        uint64_t v13 = *((void *)a2 + 42);
        unsigned __int16 v37 = *((_WORD *)a2 + 172);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100485144(v46, v45, v44, v43, v42, v41, v40, v39, v38, v53, v51, v50, v48, v47, v8, v9, v10, v11, v12,
          v13,
          v37);
        a1[23] = v46;
        a1[24] = v45;
        a1[25] = v44;
        a1[26] = v43;
        a1[27] = v42;
        a1[28] = v41;
        a1[29] = v40;
        a1[30] = v39;
        a1[31] = v38;
        a1[32] = v53;
        a1[33] = v51;
        a1[34] = v50;
        a1[35] = v48;
        a1[36] = v47;
        a1[37] = v8;
        a1[38] = v9;
        a1[39] = v10;
        a1[40] = v11;
        a1[41] = v12;
        a1[42] = v13;
        *((_WORD *)a1 + 172) = v37;
        goto LABEL_20;
      case 1:
        *(unsigned char *)a1 = *a2;
        a1[1] = *((void *)a2 + 1);
        uint64_t v14 = type metadata accessor for UnauthenticatedStateWithTasks();
        uint64_t v15 = *(int *)(v14 + 24);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = &a2[v15];
        uint64_t v18 = type metadata accessor for UnauthenticatedState();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
            *(void *)uint64_t v16 = *(void *)v17;
            swift_bridgeObjectRetain();
            goto LABEL_18;
          case 2u:
            uint64_t v54 = v14;
            *(void *)uint64_t v16 = *(void *)v17;
            v16[8] = v17[8];
            *((void *)v16 + 2) = *((void *)v17 + 2);
            *((void *)v16 + 3) = *((void *)v17 + 3);
            uint64_t v19 = *(int *)(type metadata accessor for Authenticator() + 32);
            uint64_t v52 = &v16[v19];
            uint64_t v20 = &v17[v19];
            uint64_t v21 = (int *)type metadata accessor for AuthenticationTask();
            uint64_t v49 = *((void *)v21 - 1);
            uint64_t v22 = *(unsigned int (**)(char *, uint64_t, int *))(v49 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v22(v20, 1, v21))
            {
              uint64_t v23 = sub_10000566C(&qword_100715848);
              memcpy(v52, v20, *(void *)(*(void *)(v23 - 8) + 64));
            }
            else
            {
              uint64_t v27 = *((void *)v20 + 3);
              *((void *)v52 + 3) = v27;
              *((void *)v52 + 4) = *((void *)v20 + 4);
              (**(void (***)(char *, char *))(v27 - 8))(v52, v20);
              uint64_t v28 = *((void *)v20 + 5);
              unint64_t v29 = *((void *)v20 + 6);
              sub_10044461C(v28, v29);
              *((void *)v52 + 5) = v28;
              *((void *)v52 + 6) = v29;
              uint64_t v30 = v21[5];
              uint64_t v31 = &v52[v30];
              uint64_t v32 = &v20[v30];
              uint64_t v33 = sub_1005E0ED0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
              uint64_t v34 = _s14descr1006B94C1C6LoggerVMa();
              *(void *)&v31[*(int *)(v34 + 20)] = *(void *)&v32[*(int *)(v34 + 20)];
              v52[v21[6]] = v20[v21[6]];
              *(void *)&v52[v21[7]] = *(void *)&v20[v21[7]];
              v52[v21[8]] = v20[v21[8]];
              uint64_t v35 = *(void (**)(char *, void, uint64_t, int *))(v49 + 56);
              swift_bridgeObjectRetain();
              v35(v52, 0, 1, v21);
            }
            uint64_t v14 = v54;
            goto LABEL_18;
          case 4u:
          case 5u:
          case 6u:
          case 8u:
            *(void *)uint64_t v16 = *(void *)v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            *((void *)v16 + 3) = *((void *)v17 + 3);
            *((void *)v16 + 4) = *((void *)v17 + 4);
            *((void *)v16 + 5) = *((void *)v17 + 5);
            *((void *)v16 + 6) = *((void *)v17 + 6);
            *((void *)v16 + 7) = *((void *)v17 + 7);
            *((void *)v16 + 8) = *((void *)v17 + 8);
            *((void *)v16 + 9) = *((void *)v17 + 9);
            *((void *)v16 + 10) = *((void *)v17 + 10);
            *((void *)v16 + 11) = *((void *)v17 + 11);
            *((void *)v16 + 12) = *((void *)v17 + 12);
            *((void *)v16 + 13) = *((void *)v17 + 13);
            *((void *)v16 + 14) = *((void *)v17 + 14);
            *((void *)v16 + 15) = *((void *)v17 + 15);
            *((void *)v16 + 16) = *((void *)v17 + 16);
            *((void *)v16 + 17) = *((void *)v17 + 17);
            *((void *)v16 + 18) = *((void *)v17 + 18);
            *((void *)v16 + 19) = *((void *)v17 + 19);
            *((void *)v16 + 20) = *((void *)v17 + 20);
            *((void *)v16 + 21) = *((void *)v17 + 21);
            *((void *)v16 + 22) = *((void *)v17 + 22);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_18;
          case 7u:
            *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            *((void *)v16 + 3) = *((void *)v17 + 3);
            *((void *)v16 + 4) = *((void *)v17 + 4);
            *((void *)v16 + 5) = *((void *)v17 + 5);
            *((void *)v16 + 6) = *((void *)v17 + 6);
            *((void *)v16 + 7) = *((void *)v17 + 7);
            *((void *)v16 + 8) = *((void *)v17 + 8);
            *((void *)v16 + 9) = *((void *)v17 + 9);
            *((void *)v16 + 10) = *((void *)v17 + 10);
            *((void *)v16 + 11) = *((void *)v17 + 11);
            *((void *)v16 + 12) = *((void *)v17 + 12);
            *((void *)v16 + 13) = *((void *)v17 + 13);
            *((void *)v16 + 14) = *((void *)v17 + 14);
            *((void *)v16 + 15) = *((void *)v17 + 15);
            *((void *)v16 + 16) = *((void *)v17 + 16);
            *((void *)v16 + 17) = *((void *)v17 + 17);
            *((void *)v16 + 18) = *((void *)v17 + 18);
            *((void *)v16 + 19) = *((void *)v17 + 19);
            *((void *)v16 + 20) = *((void *)v17 + 20);
            *((void *)v16 + 21) = *((void *)v17 + 21);
            *((void *)v16 + 22) = *((void *)v17 + 22);
            *((void *)v16 + 23) = *((void *)v17 + 23);
            *((void *)v16 + 24) = *((void *)v17 + 24);
            *((void *)v16 + 25) = *((void *)v17 + 25);
            *((void *)v16 + 26) = *((void *)v17 + 26);
            *((void *)v16 + 27) = *((void *)v17 + 27);
            *((void *)v16 + 28) = *((void *)v17 + 28);
            *((void *)v16 + 29) = *((void *)v17 + 29);
            *((void *)v16 + 30) = *((void *)v17 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_18;
          case 9u:
            uint64_t v24 = *(void *)v17;
            uint64_t v25 = *((void *)v17 + 1);
            char v26 = v17[16];
            sub_1004A9860(v24, v25, v26);
            *(void *)uint64_t v16 = v24;
            *((void *)v16 + 1) = v25;
            v16[16] = v26;
LABEL_18:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
            break;
        }
        *(void *)((char *)a1 + *(int *)(v14 + 28)) = *(void *)&a2[*(int *)(v14 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 0:
        uint64_t v7 = sub_1005E12C0();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for ConnectionState(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v8 = type metadata accessor for UnauthenticatedStateWithTasks();
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UnauthenticatedState();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)uint64_t v10 = *(void *)v11;
      v10[8] = v11[8];
      *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
      uint64_t v13 = *(int *)(type metadata accessor for Authenticator() + 32);
      uint64_t v14 = &v10[v13];
      uint64_t v15 = &v11[v13];
      uint64_t v16 = (int *)type metadata accessor for AuthenticationTask();
      uint64_t v17 = *((void *)v16 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_10000566C(&qword_100715848);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        long long v19 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v19;
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((void *)v14 + 6) = *((void *)v15 + 6);
        uint64_t v20 = v16[5];
        uint64_t v24 = &v15[v20];
        uint64_t v25 = &v14[v20];
        uint64_t v21 = sub_1005E0ED0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v25, v24, v21);
        uint64_t v22 = _s14descr1006B94C1C6LoggerVMa();
        *(void *)&v25[*(int *)(v22 + 20)] = *(void *)&v24[*(int *)(v22 + 20)];
        v14[v16[6]] = v15[v16[6]];
        *(void *)&v14[v16[7]] = *(void *)&v15[v16[7]];
        v14[v16[8]] = v15[v16[8]];
        (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    *(void *)((char *)a1 + *(int *)(v8 + 28)) = *(void *)((char *)a2 + *(int *)(v8 + 28));
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_1005E12C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithTake for ConnectionState(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004AE100((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      uint64_t v8 = type metadata accessor for UnauthenticatedStateWithTasks();
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for UnauthenticatedState();
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(void *)uint64_t v10 = *(void *)v11;
        v10[8] = v11[8];
        *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
        uint64_t v13 = *(int *)(type metadata accessor for Authenticator() + 32);
        uint64_t v14 = &v10[v13];
        uint64_t v15 = &v11[v13];
        uint64_t v16 = (int *)type metadata accessor for AuthenticationTask();
        uint64_t v17 = *((void *)v16 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
        {
          uint64_t v18 = sub_10000566C(&qword_100715848);
          memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          long long v19 = *((_OWORD *)v15 + 1);
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          *((_OWORD *)v14 + 1) = v19;
          *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
          *((void *)v14 + 6) = *((void *)v15 + 6);
          uint64_t v20 = v16[5];
          uint64_t v24 = &v15[v20];
          uint64_t v25 = &v14[v20];
          uint64_t v21 = sub_1005E0ED0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v25, v24, v21);
          uint64_t v22 = _s14descr1006B94C1C6LoggerVMa();
          *(void *)&v25[*(int *)(v22 + 20)] = *(void *)&v24[*(int *)(v22 + 20)];
          v14[v16[6]] = v15[v16[6]];
          *(void *)&v14[v16[7]] = *(void *)&v15[v16[7]];
          v14[v16[8]] = v15[v16[8]];
          (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      *(void *)((char *)a1 + *(int *)(v8 + 28)) = *(void *)((char *)a2 + *(int *)(v8 + 28));
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_1005E12C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1004ABB68()
{
  uint64_t result = sub_1005E12C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UnauthenticatedStateWithTasks();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConnectionState.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004ABD0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionState.Kind()
{
  return &type metadata for ConnectionState.Kind;
}

uint64_t destroy for AuthenticatedState(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 192);
  a1 += 184;
  return sub_100482FC8(v2, v3, *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(_WORD *)(a1 + 160));
}

uint64_t initializeWithCopy for AuthenticatedState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v30 = *(void *)(a2 + 192);
  uint64_t v31 = v14;
  uint64_t v28 = *(void *)(a2 + 208);
  unint64_t v29 = *(void *)(a2 + 200);
  uint64_t v26 = *(void *)(a2 + 224);
  uint64_t v27 = *(void *)(a2 + 216);
  uint64_t v24 = *(void *)(a2 + 240);
  uint64_t v25 = *(void *)(a2 + 232);
  uint64_t v23 = *(void *)(a2 + 248);
  uint64_t v35 = *(void *)(a2 + 264);
  uint64_t v36 = *(void *)(a2 + 256);
  uint64_t v33 = *(void *)(a2 + 280);
  uint64_t v34 = *(void *)(a2 + 272);
  uint64_t v15 = *(void *)(a2 + 296);
  uint64_t v32 = *(void *)(a2 + 288);
  uint64_t v16 = *(void *)(a2 + 304);
  uint64_t v17 = *(void *)(a2 + 312);
  uint64_t v18 = *(void *)(a2 + 320);
  uint64_t v19 = *(void *)(a2 + 328);
  uint64_t v20 = *(void *)(a2 + 336);
  unsigned __int16 v21 = *(_WORD *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100485144(v31, v30, v29, v28, v27, v26, v25, v24, v23, v36, v35, v34, v33, v32, v15, v16, v17, v18, v19, v20, v21);
  *(void *)(a1 + 184) = v31;
  *(void *)(a1 + 192) = v30;
  *(void *)(a1 + 200) = v29;
  *(void *)(a1 + 208) = v28;
  *(void *)(a1 + 216) = v27;
  *(void *)(a1 + 224) = v26;
  *(void *)(a1 + 232) = v25;
  *(void *)(a1 + 240) = v24;
  *(void *)(a1 + 248) = v23;
  *(void *)(a1 + 256) = v36;
  *(void *)(a1 + 264) = v35;
  *(void *)(a1 + 272) = v34;
  *(void *)(a1 + 280) = v33;
  *(void *)(a1 + 288) = v32;
  *(void *)(a1 + 296) = v15;
  *(void *)(a1 + 304) = v16;
  *(void *)(a1 + 312) = v17;
  *(void *)(a1 + 320) = v18;
  *(void *)(a1 + 328) = v19;
  *(void *)(a1 + 336) = v20;
  *(_WORD *)(a1 + 344) = v21;
  return a1;
}

uint64_t assignWithCopy for AuthenticatedState(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  *(void *)(a1 + 16) = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = v2[3];
  *(void *)(a1 + 32) = v2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = v2[5];
  *(void *)(a1 + 48) = v2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = v2[7];
  *(void *)(a1 + 64) = v2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = v2[9];
  *(void *)(a1 + 80) = v2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = v2[11];
  *(void *)(a1 + 96) = v2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = v2[13];
  *(void *)(a1 + 112) = v2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = v2[15];
  *(void *)(a1 + 128) = v2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = v2[17];
  *(void *)(a1 + 144) = v2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = v2[19];
  *(void *)(a1 + 160) = v2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = v2[21];
  *(void *)(a1 + 176) = v2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[23];
  uint64_t v5 = v2[24];
  unint64_t v6 = v2[25];
  uint64_t v7 = v2[26];
  uint64_t v8 = v2[27];
  uint64_t v9 = v2[28];
  uint64_t v10 = v2[29];
  uint64_t v11 = v2[30];
  uint64_t v29 = v2[31];
  uint64_t v30 = v2[32];
  uint64_t v31 = v2[33];
  uint64_t v32 = v2[34];
  uint64_t v33 = v2[35];
  uint64_t v34 = v2[36];
  uint64_t v35 = v2[37];
  uint64_t v36 = v2[38];
  uint64_t v37 = v2[39];
  uint64_t v38 = v2[40];
  uint64_t v39 = v2[41];
  uint64_t v40 = v2[42];
  LOWORD(v2) = *((_WORD *)v2 + 172);
  sub_100485144(v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    (unsigned __int16)v2);
  uint64_t v12 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = v4;
  uint64_t v13 = *(void *)(a1 + 192);
  unint64_t v14 = *(void *)(a1 + 200);
  *(void *)(a1 + 192) = v5;
  *(void *)(a1 + 200) = v6;
  uint64_t v15 = *(void *)(a1 + 208);
  uint64_t v16 = *(void *)(a1 + 216);
  *(void *)(a1 + 208) = v7;
  *(void *)(a1 + 216) = v8;
  uint64_t v17 = *(void *)(a1 + 224);
  uint64_t v18 = *(void *)(a1 + 232);
  *(void *)(a1 + 224) = v9;
  *(void *)(a1 + 232) = v10;
  uint64_t v19 = *(void *)(a1 + 240);
  long long v20 = *(_OWORD *)(a1 + 248);
  *(void *)(a1 + 240) = v11;
  *(void *)(a1 + 248) = v29;
  *(void *)(a1 + 256) = v30;
  long long v21 = *(_OWORD *)(a1 + 264);
  long long v22 = *(_OWORD *)(a1 + 280);
  *(void *)(a1 + 264) = v31;
  *(void *)(a1 + 272) = v32;
  *(void *)(a1 + 280) = v33;
  *(void *)(a1 + 288) = v34;
  long long v23 = *(_OWORD *)(a1 + 296);
  long long v24 = *(_OWORD *)(a1 + 312);
  *(void *)(a1 + 296) = v35;
  *(void *)(a1 + 304) = v36;
  *(void *)(a1 + 312) = v37;
  uint64_t v25 = *(void *)(a1 + 328);
  uint64_t v26 = *(void *)(a1 + 336);
  *(void *)(a1 + 320) = v38;
  *(void *)(a1 + 328) = v39;
  *(void *)(a1 + 336) = v40;
  unsigned __int16 v27 = *(_WORD *)(a1 + 344);
  *(_WORD *)(a1 + 344) = (_WORD)v2;
  sub_100482FC8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, DWORD2(v21), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    v26,
    v27);
  return a1;
}

void *initializeWithTake for AuthenticatedState(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x15AuLL);
}

uint64_t assignWithTake for AuthenticatedState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (long long *)(a1 + 264);
  uint64_t v5 = (long long *)(a2 + 264);
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  __int16 v17 = *(_WORD *)(a2 + 344);
  uint64_t v18 = *(void *)(a1 + 184);
  uint64_t v19 = *(void *)(a1 + 192);
  unint64_t v20 = *(void *)(a1 + 200);
  uint64_t v21 = *(void *)(a1 + 208);
  uint64_t v22 = *(void *)(a1 + 216);
  uint64_t v23 = *(void *)(a1 + 224);
  uint64_t v24 = *(void *)(a1 + 232);
  uint64_t v25 = *(void *)(a1 + 240);
  long long v26 = *(_OWORD *)(a1 + 248);
  long long v27 = *v4;
  long long v28 = v4[1];
  long long v29 = v4[2];
  long long v30 = v4[3];
  uint64_t v31 = *((void *)v4 + 8);
  uint64_t v32 = *(void *)(a1 + 336);
  unsigned __int16 v33 = *(_WORD *)(a1 + 344);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  long long v34 = v5[1];
  *uint64_t v4 = *v5;
  v4[1] = v34;
  long long v35 = v5[3];
  v4[2] = v5[2];
  v4[3] = v35;
  v4[4] = v5[4];
  *(_WORD *)(a1 + 344) = v17;
  sub_100482FC8(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, DWORD2(v27), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
    v32,
    v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 346)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticatedState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 344) = 0;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 346) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 346) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticatedState()
{
  return &type metadata for AuthenticatedState;
}

uint64_t destroy for MailboxSelectionFailure(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    unint64_t v3 = *(void *)(a1 + 16);
    if ((~v3 & 0xF000000000000007) != 0) {
      sub_1004831C0(v3);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MailboxSelectionFailure(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = (unint64_t *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5)
  {
    unint64_t v6 = *v4;
    if ((~v6 & 0xF000000000000007) != 0) {
      sub_10044AE74(v6);
    }
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    *(void *)(a1 + 32) = v4[2];
  }
  return a1;
}

uint64_t assignWithCopy for MailboxSelectionFailure(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = (unint64_t *)(a1 + 16);
  uint64_t v5 = (unint64_t *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      unint64_t v7 = *v5;
      unint64_t v8 = *v5 & 0xF000000000000007;
      if ((~*v4 & 0xF000000000000007) != 0)
      {
        if (v8 == 0xF000000000000007)
        {
          sub_1002A4DA0(a1 + 16);
          *uint64_t v4 = *v5;
        }
        else
        {
          sub_10044AE74(*v5);
          unint64_t v12 = *v4;
          *uint64_t v4 = v7;
          sub_1004831C0(v12);
        }
      }
      else
      {
        if (v8 != 0xF000000000000007) {
          sub_10044AE74(*v5);
        }
        *uint64_t v4 = v7;
      }
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004AC84C(a1 + 16);
      uint64_t v10 = *(void *)(a2 + 32);
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
      *(void *)(a1 + 32) = v10;
    }
  }
  else if (v6)
  {
    unint64_t v9 = *v5;
    if ((~*v5 & 0xF000000000000007) != 0) {
      sub_10044AE74(*v5);
    }
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)uint64_t v4 = v11;
  }
  return a1;
}

uint64_t sub_1004AC84C(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for MailboxSelectionFailure(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MailboxSelectionFailure(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = (unint64_t *)(a1 + 16);
  uint64_t v5 = (unint64_t *)(a2 + 16);
  if (*(void *)(a1 + 32))
  {
    uint64_t v6 = *(void *)(a2 + 32);
    if (v6)
    {
      unint64_t v7 = *v4;
      unint64_t v8 = *v5;
      if ((~*v4 & 0xF000000000000007) != 0)
      {
        if ((~v8 & 0xF000000000000007) != 0)
        {
          *uint64_t v4 = v8;
          sub_1004831C0(v7);
          goto LABEL_10;
        }
        sub_1002A4DA0(a1 + 16);
      }
      *uint64_t v4 = v8;
LABEL_10:
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1004AC84C(a1 + 16);
  }
  *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for MailboxSelectionFailure()
{
  return &type metadata for MailboxSelectionFailure;
}

uint64_t sub_1004AC990(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AuthenticatedState.MailboxSelection(uint64_t a1)
{
  return sub_1004AC9B8(*(void *)a1, *(unsigned int *)(a1 + 8), *(unsigned char *)(a1 + 12));
}

uint64_t sub_1004AC9B8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s15IMAP2Connection18AuthenticatedStateV16MailboxSelectionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned int v4 = *(_DWORD *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 12);
  sub_1004AC990(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 12) = v5;
  return a1;
}

uint64_t assignWithCopy for AuthenticatedState.MailboxSelection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned int v4 = *(_DWORD *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 12);
  sub_1004AC990(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(unsigned int *)(a1 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 12);
  *(unsigned char *)(a1 + 12) = v5;
  sub_1004AC9B8(v6, v7, v8);
  return a1;
}

void *initializeWithTake for AuthenticatedState.MailboxSelection(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for AuthenticatedState.MailboxSelection(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  int v4 = *((_DWORD *)a2 + 2);
  char v5 = *((unsigned char *)a2 + 12);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(unsigned int *)(a1 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 12);
  *(unsigned char *)(a1 + 12) = v5;
  sub_1004AC9B8(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedState.MailboxSelection(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 13)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticatedState.MailboxSelection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 13) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 13) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 12) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1004ACB74(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 12) <= 1u) {
    return *(unsigned __int8 *)(a1 + 12);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1004ACB8C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(_DWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 12) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticatedState.MailboxSelection()
{
  return &type metadata for AuthenticatedState.MailboxSelection;
}

uint64_t destroy for AuthenticatedState.Selection(uint64_t a1)
{
  return sub_100482FC8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(_WORD *)(a1 + 160));
}

uint64_t initializeWithCopy for AuthenticatedState.Selection(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  unsigned __int16 v24 = *(_WORD *)(a2 + 160);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  sub_100485144(*(void *)a2, v11, v3, v4, v5, v6, v7, v8, v9, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24);
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(_WORD *)(a1 + 160) = v24;
  return a1;
}

uint64_t assignWithCopy for AuthenticatedState.Selection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v29 = *(void *)(a2 + 72);
  uint64_t v30 = *(void *)(a2 + 80);
  uint64_t v31 = *(void *)(a2 + 88);
  uint64_t v32 = *(void *)(a2 + 96);
  uint64_t v33 = *(void *)(a2 + 104);
  uint64_t v34 = *(void *)(a2 + 112);
  uint64_t v35 = *(void *)(a2 + 120);
  uint64_t v36 = *(void *)(a2 + 128);
  uint64_t v37 = *(void *)(a2 + 136);
  uint64_t v38 = *(void *)(a2 + 144);
  uint64_t v39 = *(void *)(a2 + 152);
  unsigned __int16 v40 = *(_WORD *)(a2 + 160);
  sub_100485144(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
    v39,
    v40);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v29;
  *(void *)(a1 + 80) = v30;
  *(void *)(a1 + 88) = v31;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v32;
  *(void *)(a1 + 104) = v33;
  *(void *)(a1 + 112) = v34;
  *(void *)(a1 + 120) = v35;
  long long v24 = *(_OWORD *)(a1 + 128);
  *(void *)(a1 + 128) = v36;
  *(void *)(a1 + 136) = v37;
  uint64_t v25 = *(void *)(a1 + 144);
  uint64_t v26 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = v38;
  *(void *)(a1 + 152) = v39;
  unsigned __int16 v27 = *(_WORD *)(a1 + 160);
  *(_WORD *)(a1 + 160) = v40;
  sub_100482FC8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, DWORD2(v21), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    v26,
    v27);
  return a1;
}

__n128 initializeWithTake for MailboxSelectionState(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_WORD *)(a1 + 160) = *((_WORD *)a2 + 80);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for AuthenticatedState.Selection(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 160);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  unsigned __int16 v19 = *(_WORD *)(a1 + 160);
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  long long v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  long long v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v22;
  long long v23 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v23;
  long long v24 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v24;
  *(_WORD *)(a1 + 160) = v3;
  sub_100482FC8(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, DWORD2(v13), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    v18,
    v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticatedState.Selection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 162)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 72) >> 2) & 0x80000000 | (*(void *)(a1 + 48) >> 33);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for AuthenticatedState.Selection(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 152) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 160) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 162) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 48) = (unint64_t)-a2 << 33;
      *(void *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = 0x200000000;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_WORD *)(a1 + 160) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 162) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

int8x16_t sub_1004AD098(uint64_t a1, __int16 a2)
{
  uint64_t v2 = *(void *)(a1 + 72) & 0x1FFFFFFFFLL;
  uint64_t v3 = *(void *)(a1 + 88) & 0x1E101FFLL;
  __int16 v4 = *(_WORD *)(a1 + 160) & 0x1FF | (a2 << 14);
  *(void *)(a1 + 48) &= 0x1FFFFFFFFuLL;
  *(void *)(a1 + 72) = v2;
  *(void *)(a1 + 88) = v3;
  *(int8x16_t *)(a1 + 112) = vandq_s8(*(int8x16_t *)(a1 + 112), (int8x16_t)xmmword_1005F69A0);
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 136), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
  *(int8x16_t *)(a1 + 136) = result;
  *(_WORD *)(a1 + 160) = v4;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticatedState.Selection()
{
  return &type metadata for AuthenticatedState.Selection;
}

unint64_t sub_1004AD110()
{
  unint64_t result = qword_100716920;
  if (!qword_100716920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716920);
  }
  return result;
}

uint64_t sub_1004AD164(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004AD1CC(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_10044B198(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1004AD1E4(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1004445F8(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1004AD1FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1004AE9EC();
  uint64_t result = sub_1005E2280();
  uint64_t v8 = result;
  if (v2)
  {
    __int16 v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1004D8924(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1004AD294(uint64_t a1, unint64_t a2)
{
  unint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v3);
  Swift::Int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004AD164(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2) {
    return sub_1004AE100((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  memcpy(v71, v5, 0x15AuLL);
  sub_100482DD4((uint64_t)&v71[23], (uint64_t)v72);
  if (sub_100482E30((uint64_t)v72) == 2)
  {
    uint64_t v6 = sub_100483328((uint64_t)v72);
    uint64_t v27 = *(void *)v6;
    int v26 = *(_DWORD *)(v6 + 8);
    uint64_t v7 = *(void *)(v6 + 16);
    uint64_t v24 = *(void *)(v6 + 24);
    uint64_t v25 = v7;
    LODWORD(v7) = *(_DWORD *)(v6 + 32);
    int v22 = *(unsigned __int8 *)(v6 + 36);
    int v23 = v7;
    uint64_t v21 = *(void *)(v6 + 40);
    LODWORD(v7) = *(_DWORD *)(v6 + 48);
    int v19 = *(unsigned __int8 *)(v6 + 52);
    int v20 = v7;
    LODWORD(v7) = *(_DWORD *)(v6 + 56);
    int v17 = *(unsigned __int8 *)(v6 + 60);
    int v18 = v7;
    uint64_t v16 = *(void *)(v6 + 64);
    LODWORD(v7) = *(unsigned __int8 *)(v6 + 72);
    int v14 = *(unsigned __int8 *)(v6 + 73);
    int v15 = v7;
    int v13 = *(unsigned __int8 *)(v6 + 74);
    uint64_t v28 = v71[0];
    uint64_t v30 = v71[2];
    uint64_t v31 = v71[4];
    uint64_t v34 = v3;
    uint64_t v32 = v71[6];
    uint64_t v33 = v71[8];
    long long v12 = (void *)a1;
    uint64_t v36 = v71[16];
    uint64_t v37 = v71[18];
    uint64_t v38 = v71[20];
    uint64_t v29 = &v71[23];
    uint64_t v35 = v71[22];
    sub_1004850D0((uint64_t)&v71[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = v12;
    sub_1004AE100((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v56 = v27;
    int v57 = v26;
    uint64_t v58 = v25;
    uint64_t v59 = v24;
    int v60 = v23;
    char v61 = v22;
    uint64_t v62 = v21;
    int v63 = v20;
    char v64 = v19;
    int v65 = v18;
    char v66 = v17;
    uint64_t v67 = v16;
    char v68 = v15;
    char v69 = v14;
    char v70 = v13;
    sub_1004E2E20(v39);
    uint64_t v40 = v56;
    int v41 = v57;
    uint64_t v42 = v58;
    uint64_t v43 = v59;
    int v44 = v60;
    char v45 = v61;
    uint64_t v46 = v62;
    int v47 = v63;
    char v48 = v64;
    int v49 = v65;
    char v50 = v66;
    uint64_t v51 = v67;
    char v52 = v68;
    char v53 = v69;
    char v54 = v70;
    sub_1004AE210((uint64_t)&v40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1004850D0((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
    v55[0] = v28;
    *(_OWORD *)&v55[15] = *(_OWORD *)&v71[15];
    *(_OWORD *)&v55[17] = *(_OWORD *)&v71[17];
    *(_OWORD *)&v55[19] = *(_OWORD *)&v71[19];
    *(_OWORD *)&v55[21] = *(_OWORD *)&v71[21];
    *(_OWORD *)&v55[7] = *(_OWORD *)&v71[7];
    *(_OWORD *)&v55[9] = *(_OWORD *)&v71[9];
    *(_OWORD *)&_OWORD v55[11] = *(_OWORD *)&v71[11];
    *(_OWORD *)&v55[13] = *(_OWORD *)&v71[13];
    *(_OWORD *)&v55[1] = *(_OWORD *)&v71[1];
    *(_OWORD *)&v55[3] = *(_OWORD *)&v71[3];
    *(_OWORD *)&v55[5] = *(_OWORD *)&v71[5];
    sub_100482DD4((uint64_t)&v40, (uint64_t)&v55[23]);
    sub_1004AE75C((uint64_t)v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v8, v55, 0x15AuLL);
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = v55;
  }
  else
  {
    uint64_t v9 = v71;
  }
  return sub_100482E3C((uint64_t)v9);
}

uint64_t sub_1004AD77C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1004AE6B4();
  uint64_t result = sub_1005E2280();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (char *)(a1 + 56);
    do
    {
      Swift::Int v5 = *((void *)v4 - 3);
      uint64_t v6 = *((void *)v4 - 2);
      unint64_t v7 = *((void *)v4 - 1);
      char v8 = *v4;
      v4 += 32;
      swift_bridgeObjectRetain();
      sub_1004D8B50((uint64_t)v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

Swift::Int sub_1004AD828(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(&qword_100716928);
    uint64_t v2 = sub_1005E2C30();
    uint64_t v3 = v2 + 56;
    while (1)
    {
      sub_1005E33F0();
      sub_1005E3410(0);
      Swift::Int result = sub_1005E3470();
      unint64_t v5 = result & ~(-1 << *(unsigned char *)(v2 + 32));
      unint64_t v6 = v5 >> 6;
      uint64_t v7 = *(void *)(v3 + 8 * (v5 >> 6));
      uint64_t v8 = 1 << v5;
      if ((v8 & v7) == 0)
      {
        *(void *)(v3 + 8 * v6) = v8 | v7;
        uint64_t v9 = *(void *)(v2 + 16);
        BOOL v10 = __OFADD__(v9, 1);
        uint64_t v11 = v9 + 1;
        if (v10)
        {
          __break(1u);
          return result;
        }
        *(void *)(v2 + 16) = v11;
      }
      if (!--v1) {
        return v2;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_1004AD904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v59 = a6;
  uint64_t v54 = a5;
  uint64_t v58 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v58);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v13 = __chkstk_darwin(v12);
  int v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v51 - v16;
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  int v26 = (char *)&v51 - v23;
  uint64_t v56 = v22;
  uint64_t v57 = a2;
  uint64_t v55 = v25;
  if (a2 < 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v21, a4, v24);
    sub_1004AD164(a4, (uint64_t)v15, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    uint64_t v38 = sub_1005E0EB0();
    os_log_type_t v39 = sub_1005E25C0();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v54 = a3;
      int v53 = v40;
      uint64_t v42 = v41;
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 68158723;
      LODWORD(v60) = 2;
      sub_1005E2960();
      *(_WORD *)(v42 + 8) = 256;
      uint64_t v43 = &v15[*(int *)(v12 + 20)];
      LOBYTE(v60) = *v43;
      sub_1005E2960();
      *(_WORD *)(v42 + 11) = 2082;
      uint64_t v44 = ConnectionID.debugDescription.getter(*((unsigned int *)v43 + 1));
      uint64_t v60 = sub_100481E54(v44, v45, &v62);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004AE100((uint64_t)v15, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v42 + 21) = 2160;
      uint64_t v60 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v42 + 31) = 2085;
      uint64_t v60 = a1;
      int v46 = v57;
      int v61 = v57;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1005E1CC0();
      uint64_t v60 = sub_100481E54(v47, v48, &v62);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v53, "[%.*hhx-%{public}s] Mailbox selection: Requesting mailbox status '%{sensitive,mask.mailbox}s'.", (uint8_t *)v42, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a3 = v54;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v56);
    }
    else
    {
      sub_1004AE100((uint64_t)v15, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v56);
      int v46 = v57;
    }
    *(void *)uint64_t v11 = a1;
    *((_DWORD *)v11 + 2) = v46;
    *((void *)v11 + 2) = a3;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)&v51 - v23, a4, v24);
    sub_1004AD164(a4, (uint64_t)v17, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_1005E0EB0();
    os_log_type_t v28 = sub_1005E25C0();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      int v53 = v29;
      uint64_t v31 = v30;
      uint64_t v52 = swift_slowAlloc();
      uint64_t v62 = v52;
      *(_DWORD *)uint64_t v31 = 68158723;
      LODWORD(v60) = 2;
      sub_1005E2960();
      *(_WORD *)(v31 + 8) = 256;
      uint64_t v32 = &v17[*(int *)(v12 + 20)];
      LOBYTE(v60) = *v32;
      sub_1005E2960();
      *(_WORD *)(v31 + 11) = 2082;
      uint64_t v33 = ConnectionID.debugDescription.getter(*((unsigned int *)v32 + 1));
      uint64_t v60 = sub_100481E54(v33, v34, &v62);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004AE100((uint64_t)v17, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v31 + 21) = 2160;
      uint64_t v60 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v31 + 31) = 2085;
      uint64_t v60 = a1;
      uint64_t v35 = v57;
      int v61 = v57;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1005E1CC0();
      uint64_t v60 = sub_100481E54(v36, v37, &v62);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004AE160(a1, v35);
      sub_1004AE160(a1, v35);
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v53, "[%.*hhx-%{public}s] Selecting mailbox '%{sensitive,mask.mailbox}s'.", (uint8_t *)v31, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004AE100((uint64_t)v17, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v35 = v57;
      sub_1004AE160(a1, v57);
      sub_1004AE160(a1, v35);
    }

    (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v56);
    *(void *)uint64_t v11 = a1;
    *((_DWORD *)v11 + 2) = v35;
    *((void *)v11 + 2) = v54;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  uint64_t v49 = CommandConnection.send(_:)((uint64_t)v11);
  CommandConnection.flush()();
  sub_1004AE100((uint64_t)v11, type metadata accessor for ClientCommand);
  return v49;
}

uint64_t sub_1004AE0E0(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1004AF390(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t))sub_1004AD904, (uint64_t)&off_1006F2910);
}

uint64_t sub_1004AE100(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004AE160(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a2 < 0)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

int8x16_t sub_1004AE1AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 72) & 0x1FFFFFFFFLL;
  uint64_t v2 = *(void *)(a1 + 88) & 0x1E101FFLL;
  __int16 v3 = *(_WORD *)(a1 + 160) & 0x1FF;
  *(void *)(a1 + 48) &= 0x1FFFFFFFFuLL;
  *(void *)(a1 + 72) = v1;
  *(void *)(a1 + 88) = v2;
  *(int8x16_t *)(a1 + 112) = vandq_s8(*(int8x16_t *)(a1 + 112), (int8x16_t)xmmword_1005F69A0);
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 136), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
  *(int8x16_t *)(a1 + 136) = result;
  *(_WORD *)(a1 + 160) = v3;
  return result;
}

int8x16_t sub_1004AE210(uint64_t a1)
{
  __int16 v1 = *(_WORD *)(a1 + 160);
  uint64_t v2 = *(void *)(a1 + 72) & 0x1FFFFFFFFLL;
  uint64_t v3 = *(void *)(a1 + 88) & 0x1E101FFLL;
  *(void *)(a1 + 48) &= 0x1FFFFFFFFuLL;
  *(void *)(a1 + 72) = v2;
  *(void *)(a1 + 88) = v3;
  *(int8x16_t *)(a1 + 112) = vandq_s8(*(int8x16_t *)(a1 + 112), (int8x16_t)xmmword_1005F69A0);
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 136), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
  *(int8x16_t *)(a1 + 136) = result;
  *(_WORD *)(a1 + 160) = v1 & 0x1FF | 0x8000;
  return result;
}

uint64_t sub_1004AE278(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 184);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1004AE28C(uint64_t a1)
{
  sub_1004AE300(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(unsigned char *)(a1 + 184));
  return a1;
}

uint64_t sub_1004AE300(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned __int8 a24)
{
  if (a24 != 255)
  {
    return sub_1004AE38C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24 & 1);
  }
  return result;
}

uint64_t sub_1004AE38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  if ((a24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004AE490()
{
  uint64_t v1 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1004AE574(uint64_t a1)
{
  uint64_t v3 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(uint64_t (**)(void))v6;
  uint64_t v8 = *(void *)(v6 + 8);
  return sub_1004A6500(a1, v5, v7, v8);
}

uint64_t sub_1004AE614(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 184);
}

uint64_t *sub_1004AE61C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1004AE64C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1004AE6B4()
{
  unint64_t result = qword_100716930;
  if (!qword_100716930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716930);
  }
  return result;
}

uint64_t sub_1004AE708(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 64);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
  return a1;
}

uint64_t sub_1004AE75C(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 184);
  uint64_t v15 = *(void *)(a1 + 208);
  unint64_t v16 = *(void *)(a1 + 200);
  uint64_t v13 = *(void *)(a1 + 224);
  uint64_t v14 = *(void *)(a1 + 216);
  uint64_t v11 = *(void *)(a1 + 240);
  uint64_t v12 = *(void *)(a1 + 232);
  long long v10 = *(_OWORD *)(a1 + 248);
  long long v9 = *(_OWORD *)(a1 + 264);
  long long v7 = *(_OWORD *)(a1 + 296);
  long long v8 = *(_OWORD *)(a1 + 280);
  long long v6 = *(_OWORD *)(a1 + 312);
  uint64_t v2 = *(void *)(a1 + 336);
  uint64_t v5 = *(void *)(a1 + 328);
  unsigned __int16 v3 = *(_WORD *)(a1 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100485144(v18, v17, v16, v15, v14, v13, v12, v11, v10, *((uint64_t *)&v10 + 1), v9, DWORD2(v9), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5,
    v2,
    v3);
  return a1;
}

uint64_t sub_1004AE8E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  unsigned int v9 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRelease();
  sub_100483244(v12, v11, v2, v3, v4, v5, v6, v8, v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

double sub_1004AE9A4@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  long long v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  double result = *(double *)&v6;
  a1[2] = v6;
  return result;
}

unint64_t sub_1004AE9EC()
{
  unint64_t result = qword_100716938;
  if (!qword_100716938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716938);
  }
  return result;
}

Swift::Int sub_1004AEA40(uint64_t a1)
{
  return sub_1004AEA58(a1, &qword_100716948);
}

Swift::Int sub_1004AEA4C(uint64_t a1)
{
  return sub_1004AEA58(a1, &qword_100716940);
}

Swift::Int sub_1004AEA58(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_10000566C(a2);
    uint64_t v4 = sub_1005E2C30();
    uint64_t v5 = 0;
    uint64_t v6 = v4 + 56;
    uint64_t v7 = a1 + 32;
    while (1)
    {
      Swift::UInt v8 = *(unsigned __int8 *)(v7 + v5);
      sub_1005E33F0();
      sub_1005E3410(v8);
      Swift::Int result = sub_1005E3470();
      uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      uint64_t v15 = *(void *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(unsigned __int8 *)(v15 + v11) == v8) {
          goto LABEL_3;
        }
        uint64_t v16 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v16;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v15 + v11) == v8) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v6 + 8 * v12) = v14 | v13;
      *(unsigned char *)(v15 + v11) = v8;
      uint64_t v17 = *(void *)(v4 + 16);
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(void *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2) {
        return v4;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_1004AEB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v56 = a6;
  uint64_t v51 = a5;
  uint64_t v55 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin();
  unint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v48 - v15;
  sub_1005E0ED0();
  __chkstk_darwin();
  BOOL v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin();
  uint64_t v23 = (char *)&v48 - v20;
  uint64_t v53 = v19;
  uint64_t v54 = a2;
  uint64_t v52 = v22;
  if (a2 < 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v18, a4, v21);
    sub_1004AD164(a4, (uint64_t)v14, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    uint64_t v35 = sub_1005E0EB0();
    os_log_type_t v36 = sub_1005E25C0();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v51 = a3;
      int v50 = v37;
      uint64_t v39 = v38;
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 68158723;
      LODWORD(v57) = 2;
      sub_1005E2960();
      *(_WORD *)(v39 + 8) = 256;
      int v40 = &v14[*(int *)(v12 + 20)];
      LOBYTE(v57) = *v40;
      sub_1005E2960();
      *(_WORD *)(v39 + 11) = 2082;
      uint64_t v41 = ConnectionID.debugDescription.getter(*((unsigned int *)v40 + 1));
      uint64_t v57 = sub_100481E54(v41, v42, &v59);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004AE100((uint64_t)v14, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v39 + 21) = 2160;
      uint64_t v57 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v39 + 31) = 2085;
      uint64_t v57 = a1;
      int v43 = v54;
      int v58 = v54;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1005E1CC0();
      uint64_t v57 = sub_100481E54(v44, v45, &v59);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v50, "[%.*hhx-%{public}s] Mailbox selection: Requesting mailbox status '%{sensitive,mask.mailbox}s'.", (uint8_t *)v39, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a3 = v51;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v53);
    }
    else
    {
      sub_1004AE100((uint64_t)v14, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v53);
      int v43 = v54;
    }
    *(void *)unint64_t v11 = a1;
    *((_DWORD *)v11 + 2) = v43;
    *((void *)v11 + 2) = a3;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)&v48 - v20, a4, v21);
    sub_1004AD164(a4, (uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_1005E0EB0();
    os_log_type_t v25 = sub_1005E25C0();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      int v50 = v26;
      uint64_t v28 = v27;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v59 = v49;
      *(_DWORD *)uint64_t v28 = 68158723;
      LODWORD(v57) = 2;
      sub_1005E2960();
      *(_WORD *)(v28 + 8) = 256;
      int v29 = &v16[*(int *)(v12 + 20)];
      LOBYTE(v57) = *v29;
      sub_1005E2960();
      *(_WORD *)(v28 + 11) = 2082;
      uint64_t v30 = ConnectionID.debugDescription.getter(*((unsigned int *)v29 + 1));
      uint64_t v57 = sub_100481E54(v30, v31, &v59);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004AE100((uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v28 + 21) = 2160;
      uint64_t v57 = 0x786F626C69616DLL;
      sub_1005E2960();
      *(_WORD *)(v28 + 31) = 2085;
      uint64_t v57 = a1;
      uint64_t v32 = v54;
      int v58 = v54;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1005E1CC0();
      uint64_t v57 = sub_100481E54(v33, v34, &v59);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004AE160(a1, v32);
      sub_1004AE160(a1, v32);
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v50, "[%.*hhx-%{public}s] Selecting mailbox '%{sensitive,mask.mailbox}s'.", (uint8_t *)v28, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004AE100((uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v32 = v54;
      sub_1004AE160(a1, v54);
      sub_1004AE160(a1, v32);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v53);
    *(void *)unint64_t v11 = a1;
    *((_DWORD *)v11 + 2) = v32;
    *((void *)v11 + 2) = v51;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  uint64_t v46 = CommandConnection.send(_:)((uint64_t)v11);
  sub_1004AE100((uint64_t)v11, type metadata accessor for ClientCommand);
  return v46;
}

uint64_t sub_1004AF370(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1004AF390(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t))sub_1004AEB98, (uint64_t)&off_1006F2BB8);
}

uint64_t sub_1004AF390(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t), uint64_t a5)
{
  uint64_t v10 = type metadata accessor for ConnectionState();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - v14;
  swift_retain_n();
  uint64_t v16 = sub_1004A6BC4();
  sub_1004AD164((uint64_t)a2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004AE100((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  char v69 = v16;
  uint64_t v70 = a1;
  sub_1004AE100((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t v68 = *(void *)v15;
  long long v17 = *(_OWORD *)(v15 + 120);
  long long v18 = *(_OWORD *)(v15 + 152);
  long long v85 = *(_OWORD *)(v15 + 136);
  long long v86 = v18;
  long long v87 = *(_OWORD *)(v15 + 168);
  long long v19 = *(_OWORD *)(v15 + 56);
  long long v20 = *(_OWORD *)(v15 + 88);
  long long v81 = *(_OWORD *)(v15 + 72);
  long long v82 = v20;
  long long v83 = *(_OWORD *)(v15 + 104);
  long long v84 = v17;
  long long v21 = *(_OWORD *)(v15 + 24);
  long long v77 = *(_OWORD *)(v15 + 8);
  long long v78 = v21;
  long long v79 = *(_OWORD *)(v15 + 40);
  long long v80 = v19;
  sub_100482DD4((uint64_t)(v15 + 184), (uint64_t)v88);
  sub_100482DD4((uint64_t)v88, (uint64_t)v89);
  if (sub_100482E30((uint64_t)v89) == 1)
  {
    int v63 = a4;
    uint64_t v22 = sub_100483328((uint64_t)v89);
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *(unsigned int *)(v22 + 8);
    unint64_t v26 = *(void *)(v22 + 16);
    uint64_t v25 = *(void *)(v22 + 24);
    uint64_t v27 = *(void *)(v22 + 32);
    uint64_t v28 = *(void *)(v22 + 40);
    uint64_t v29 = *(void *)(v22 + 48);
    uint64_t v30 = *(void *)(v22 + 56);
    uint64_t v31 = *(void *)(v22 + 64);
    uint64_t v32 = *(void *)(v22 + 72);
    uint64_t v33 = *(void *)(v22 + 80);
    int v34 = *(unsigned __int16 *)(v22 + 88) | (*(unsigned __int8 *)(v22 + 90) << 16);
    uint64_t v66 = v32;
    uint64_t v67 = v31;
    uint64_t v65 = v33;
    if ((v34 & 0xE00000) == 0x800000)
    {
      uint64_t v35 = v29 | v30 | v31;
      if (!(v27 | v25 | v26 | v28 | v35 | v32 | v33) && v34 == 0x800000)
      {
        unint64_t v64 = v26;
        uint64_t v56 = v30;
        uint64_t v57 = v29;
        uint64_t v58 = v28;
        uint64_t v59 = v27;
        uint64_t v60 = v25;
        uint64_t v36 = v24;
        swift_retain();
        uint64_t v61 = v23;
        uint64_t v62 = v36;
        uint64_t v37 = v63(v23, v36, 0, v70, v69, a3);
        char v39 = v38;
        swift_release();
        if ((v39 & 1) == 0)
        {
          uint64_t v25 = 0;
          uint64_t v27 = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v66 = 0;
          uint64_t v67 = 0;
          unint64_t v64 = v37;
          uint64_t v65 = 0;
          int v34 = 0;
LABEL_15:
          uint64_t v23 = v61;
          LODWORD(v24) = v62;
LABEL_20:
          uint64_t v44 = *(void *)(v22 + 152);
          char v45 = *(unsigned char *)(v22 + 160);
          char v46 = *(unsigned char *)(v22 + 161);
          int v47 = *(_DWORD *)(v22 + 144);
          char v48 = *(unsigned char *)(v22 + 148);
          int v49 = *(_DWORD *)(v22 + 136);
          char v50 = *(unsigned char *)(v22 + 140);
          uint64_t v51 = *(void *)(v22 + 128);
          int v52 = *(_DWORD *)(v22 + 116);
          char v53 = *(unsigned char *)(v22 + 120);
          char v54 = *(unsigned char *)(v22 + 91);
          char v75 = *(unsigned char *)(v22 + 112);
          char v74 = v53;
          char v73 = v50;
          char v72 = v48;
          char v71 = v46;
          *(void *)&v90[0] = v23;
          DWORD2(v90[0]) = v24;
          *(void *)&v90[1] = v64;
          *((void *)&v90[1] + 1) = v25;
          *(void *)&v90[2] = v27;
          *((void *)&v90[2] + 1) = v28;
          *(void *)&v90[3] = v29;
          *((void *)&v90[3] + 1) = v30;
          *(void *)&v90[4] = v67;
          *((void *)&v90[4] + 1) = v66;
          *(void *)&v90[5] = v65;
          BYTE10(v90[5]) = BYTE2(v34);
          WORD4(v90[5]) = v34;
          BYTE11(v90[5]) = v54;
          v90[6] = *(_OWORD *)(v22 + 96);
          LOBYTE(v90[7]) = v75;
          DWORD1(v90[7]) = v52;
          BYTE8(v90[7]) = v53;
          *(void *)&v90[8] = v51;
          DWORD2(v90[8]) = v49;
          BYTE12(v90[8]) = v50;
          LODWORD(v90[9]) = v47;
          BYTE4(v90[9]) = v48;
          *((void *)&v90[9] + 1) = v44;
          LOBYTE(v90[10]) = v45;
          BYTE1(v90[10]) = v46;
          sub_1004A0FF8((uint64_t)v90);
          int v40 = v90;
          goto LABEL_21;
        }
        int v34 = 0x800000;
        goto LABEL_19;
      }
      if (v34 == 0x800000 && v26 == 1 && !(v27 | v25 | v28 | v35 | v32 | v33))
      {
        uint64_t v56 = v30;
        uint64_t v57 = v29;
        uint64_t v58 = v28;
        uint64_t v59 = v27;
        uint64_t v60 = v25;
        uint64_t v62 = v24;
        unint64_t v64 = v24 | 0x8000000000000000;
        swift_retain();
        uint64_t v41 = swift_bridgeObjectRetain();
        unint64_t v64 = v63(v41, v64, a5, v70, v69, a3);
        char v43 = v42;
        uint64_t v61 = v23;
        swift_bridgeObjectRelease();
        swift_release();
        if ((v43 & 1) == 0)
        {
          uint64_t v25 = 0;
          uint64_t v27 = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v66 = 0;
          uint64_t v67 = 0;
          uint64_t v65 = 0;
          int v34 = 0x200000;
          goto LABEL_15;
        }
        int v34 = 0x800000;
        unint64_t v64 = 1;
LABEL_19:
        uint64_t v23 = v61;
        LODWORD(v24) = v62;
        uint64_t v27 = v59;
        uint64_t v25 = v60;
        uint64_t v29 = v57;
        uint64_t v28 = v58;
        uint64_t v30 = v56;
        goto LABEL_20;
      }
    }
    unint64_t v64 = v26;
    goto LABEL_20;
  }
  int v40 = v88;
LABEL_21:
  sub_100482DD4((uint64_t)v40, (uint64_t)v76);
  *(_OWORD *)((char *)&v90[7] + 8) = v84;
  *(_OWORD *)((char *)&v90[8] + 8) = v85;
  *(_OWORD *)((char *)&v90[9] + 8) = v86;
  *(_OWORD *)((char *)&v90[10] + 8) = v87;
  *(_OWORD *)((char *)&v90[3] + 8) = v80;
  *(_OWORD *)((char *)&v90[4] + 8) = v81;
  *(_OWORD *)((char *)&v90[5] + 8) = v82;
  *(_OWORD *)((char *)&v90[6] + 8) = v83;
  *(_OWORD *)((char *)v90 + 8) = v77;
  *(_OWORD *)((char *)&v90[1] + 8) = v78;
  *(void *)&v90[0] = v68;
  *(_OWORD *)((char *)&v90[2] + 8) = v79;
  sub_100482DD4((uint64_t)v76, (uint64_t)&v90[11] + 8);
  memcpy(a2, v90, 0x15AuLL);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  a1 = v70;
LABEL_22:
  sub_1004AD164((uint64_t)a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1004AE100((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    memcpy(v90, v13, 0x15AuLL);
    sub_1004A6D2C((uint64_t)&v90[11] + 8, a1);
    memcpy(a2, v90, 0x15AuLL);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1004AE100((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  }
  return swift_release_n();
}

ValueMetadata *type metadata accessor for ConnectionState.AlreadyAuthenticatedWhenReceivingHandshakeQuery()
{
  return &type metadata for ConnectionState.AlreadyAuthenticatedWhenReceivingHandshakeQuery;
}

unint64_t ConnectionUsage.nonMailboxUsage.getter(uint64_t a1, unint64_t a2)
{
  return a2;
}

unint64_t ConnectionUsage.nonMailboxUsage.setter(uint64_t a1)
{
  unint64_t result = sub_10000CFDC(*(void *)(v1 + 8));
  *(void *)(v1 + 8) = a1;
  return result;
}

BOOL static ConnectionUsage.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((_s15IMAP2Connection23MailboxesSelectionUsageV23__derived_struct_equalsySbAC_ACtFZ_0(a1, a3) & 1) == 0) {
    return 0;
  }
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 != 1) {
        return 0;
      }
    }
    else if (a4 < 2 || (sub_100485E14(a2, a4) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return !a4;
}

uint64_t static ConnectionUsage.NonMailboxUsage.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2)
{
  if (!a1) {
    return !a2;
  }
  if (a1 == 1) {
    return a2 == 1;
  }
  if (a2 < 2) {
    return 0;
  }
  return sub_100485E14();
}

BOOL sub_1004AFA78(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = a2[1];
  if ((_s15IMAP2Connection23MailboxesSelectionUsageV23__derived_struct_equalsySbAC_ACtFZ_0(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v2)
  {
    if (v2 == 1)
    {
      if (v3 != 1) {
        return 0;
      }
    }
    else if (v3 < 2 || (sub_100485E14(v2, v3) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return !v3;
}

void *ConnectionUsage.init()()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1004AFB00(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!v2) {
    return !v3;
  }
  if (v2 == 1) {
    return v3 == 1;
  }
  if (v3 < 2) {
    return 0;
  }
  return sub_100485E14();
}

uint64_t ConnectionUsage.usage(_:)(uint64_t result, uint64_t a2, unint64_t a3)
{
  int v4 = result;
  if (a3 >= 2)
  {
    unint64_t result = sub_1004857F8(result, a3);
    if (result) {
      return 1;
    }
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == v4)
  {
    uint64_t v6 = a2 + 56;
    return *(void *)v6;
  }
  else if (v5 == 1)
  {
    return 0;
  }
  else
  {
    uint64_t v7 = a2 + 104;
    for (uint64_t i = 1; ; ++i)
    {
      uint64_t v9 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (*(_DWORD *)(v7 - 32) == v4)
      {
        uint64_t v6 = v7 - 8;
        return *(void *)v6;
      }
      v7 += 40;
      if (v9 == v5) {
        return 0;
      }
    }
    __break(1u);
  }
  return result;
}

BOOL ConnectionUsage.needsToHoldOntoSingleConnection.getter(uint64_t a1, uint64_t a2)
{
  return a2 != 0;
}

uint64_t _s15IMAP2Connection07CommandB0C12RecentErrorsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  __chkstk_darwin();
  uint64_t v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v18 - v8);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v14 = 0;
    return v14 & 1;
  }
  if (v10 && a1 != a2)
  {
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = *(void *)(v7 + 72);
    uint64_t v13 = v10 - 1;
    while (1)
    {
      sub_1004B0624(a1 + v11, (uint64_t)v9);
      sub_1004B0624(a2 + v11, (uint64_t)v6);
      if (*v9 != *v6) {
        break;
      }
      char v14 = _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0((uint64_t)v9 + *(int *)(v4 + 20), (uint64_t)v6 + *(int *)(v4 + 20));
      sub_1004B0688((uint64_t)v6);
      sub_1004B0688((uint64_t)v9);
      BOOL v16 = v13-- != 0;
      if (v14)
      {
        v11 += v12;
        if (v16) {
          continue;
        }
      }
      return v14 & 1;
    }
    sub_1004B0688((uint64_t)v6);
    sub_1004B0688((uint64_t)v9);
    goto LABEL_14;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_1004AFDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        sub_1004526AC(v3, (uint64_t)v10);
        sub_1004526AC(v4, (uint64_t)v11);
        sub_100416298(v10, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100452708);
        sub_100416298(v11, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100452708);
        char v6 = static Credentials.__derived_enum_equals(_:_:)(v10, v11);
        sub_100416298(v11, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100452844);
        sub_100416298(v10, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100452844);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 80;
        v4 += 80;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1004AFEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a2 + 48);
    uint64_t v4 = (unsigned __int8 *)(a1 + 48);
    while (2)
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v7 = *((void *)v4 - 1);
      uint64_t v8 = *((void *)v3 - 2);
      uint64_t v9 = *((void *)v3 - 1);
      int v11 = *v3;
      v3 += 24;
      int v10 = v11;
      int v12 = *v4;
      v4 += 24;
      switch(v12)
      {
        case 1:
          if (v10 != 1) {
            return 0;
          }
          goto LABEL_23;
        case 2:
          if (v10 != 2) {
            return 0;
          }
          goto LABEL_23;
        case 3:
          if (v10 != 3) {
            return 0;
          }
          goto LABEL_23;
        case 4:
          if (v10 != 4) {
            return 0;
          }
          goto LABEL_23;
        case 5:
          if (v10 == 5) {
            goto LABEL_23;
          }
          return 0;
        case 6:
          switch(v6)
          {
            case 1:
              if (v10 != 6) {
                return 0;
              }
              if (v8 != 1 || v9 != 0) {
                return 0;
              }
              goto LABEL_10;
            case 2:
              if (v10 != 6) {
                return 0;
              }
              if (v8 != 2 || v9 != 0) {
                return 0;
              }
              goto LABEL_10;
            case 3:
              if (v10 != 6) {
                return 0;
              }
              if (v8 != 3 || v9 != 0) {
                return 0;
              }
              goto LABEL_10;
            default:
              if (v10 != 6 || (v9 | v8) != 0) {
                return 0;
              }
              goto LABEL_10;
          }
        default:
          if (v10) {
            return 0;
          }
LABEL_23:
          BOOL v13 = v6 == v8 && v7 == v9;
          if (!v13 && (sub_1005E3290() & 1) == 0) {
            return 0;
          }
LABEL_10:
          if (--v2) {
            continue;
          }
          return 1;
      }
    }
  }
  return 1;
}

uint64_t _s15IMAP2Connection23MailboxesSelectionUsageV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
      && (*(unsigned int *)(a1 + 48) | ((unint64_t)*(unsigned int *)(a1 + 48) << 32)) == (*(unsigned int *)(a2 + 48) | ((unint64_t)*(unsigned int *)(a2 + 48) << 32)))
    {
      uint64_t v5 = *(void *)(a1 + 56);
      char v6 = *(unsigned char *)(a1 + 64);
      unint64_t v7 = *(void *)(a2 + 56);
      int v8 = *(unsigned __int8 *)(a2 + 64);
      if (sub_1000255D4(*(void *)(a1 + 40), *(void *)(a2 + 40)))
      {
        uint64_t v9 = 0;
        while (1)
        {
          if ((v6 & 1) == 0)
          {
            if (v8 & 1 | (v5 != v7)) {
              return 0;
            }
            goto LABEL_21;
          }
          if (v5)
          {
            if (v5 != 1)
            {
              if ((v8 & (v7 > 1)) != 1) {
                return 0;
              }
              goto LABEL_21;
            }
            BOOL v10 = v7 == 1;
          }
          else
          {
            BOOL v10 = v7 == 0;
          }
          int v11 = v10;
          if ((v8 & v11 & 1) == 0) {
            return 0;
          }
LABEL_21:
          if (!--v2) {
            return 1;
          }
          uint64_t v12 = a1 + v9;
          uint64_t v13 = a2 + v9;
          if (*(_DWORD *)(a1 + v9 + 72) != *(_DWORD *)(a2 + v9 + 72)
            || (*(unsigned int *)(v12 + 88) | ((unint64_t)*(unsigned int *)(v12 + 88) << 32)) != (*(unsigned int *)(v13 + 88) | ((unint64_t)*(unsigned int *)(v13 + 88) << 32)))
          {
            return 0;
          }
          v9 += 40;
          uint64_t v5 = *(void *)(v12 + 96);
          char v6 = *(unsigned char *)(v12 + 104);
          unint64_t v7 = *(void *)(v13 + 96);
          int v8 = *(unsigned __int8 *)(v13 + 104);
          BOOL v14 = sub_1000255D4(*(void *)(v12 + 80), *(void *)(v13 + 80));
          uint64_t result = 0;
          if (!v14) {
            return result;
          }
        }
      }
    }
    return 0;
  }
  return 1;
}

unint64_t destroy for ConnectionUsage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s15IMAP2Connection15ConnectionUsageVwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  if (v3 >= 2) {
    swift_bridgeObjectRetain();
  }
  a1[1] = v3;
  return a1;
}

void *assignWithCopy for ConnectionUsage(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 1;
  unint64_t v5 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *uint64_t v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004B0300((uint64_t)(a1 + 1));
      *uint64_t v4 = a2[1];
    }
  }
  else
  {
    *uint64_t v4 = v5;
    if (v5 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1004B0300(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100716950);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for ConnectionUsage(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 1;
  unint64_t v5 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *uint64_t v4 = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1004B0300((uint64_t)(a1 + 1));
  }
  *uint64_t v4 = v5;
  return a1;
}

ValueMetadata *type metadata accessor for ConnectionUsage()
{
  return &type metadata for ConnectionUsage;
}

void *initializeWithTake for ConnectionUsage.NonMailboxUsage(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ConnectionUsage.NonMailboxUsage()
{
  return &type metadata for ConnectionUsage.NonMailboxUsage;
}

uint64_t sub_1004B0400(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (unint64_t *)(a2 + 56);
    uint64_t v4 = (unint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      unint64_t v6 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      uint64_t v9 = v4[4];
      uint64_t v10 = *(v3 - 3);
      unint64_t v11 = *(v3 - 2);
      uint64_t v12 = *(v3 - 1);
      unint64_t v13 = *v3;
      uint64_t v14 = v3[4];
      if ((v9 & 0x1000000000000000) != 0)
      {
        uint64_t v20 = v4[1];
        unint64_t v19 = v4[2];
        uint64_t v21 = v4[3];
        uint64_t v23 = v4[5];
        unint64_t v22 = v4[6];
        uint64_t v24 = v3[1];
        unint64_t v25 = v3[2];
        uint64_t v26 = v3[3];
        uint64_t v27 = v3[5];
        unint64_t v28 = v3[6];
        v50[0] = *(v4 - 3);
        v50[1] = v6;
        void v50[2] = v8;
        v50[3] = v7;
        v50[4] = v20;
        v50[5] = v19;
        v50[6] = v21;
        v50[7] = v9 & 0xEFFFFFFFFFFFFFFFLL;
        v50[8] = v23;
        v50[9] = v22;
        if ((v14 & 0x1000000000000000) == 0) {
          return 0;
        }
        v51[0] = v10;
        v51[1] = v11;
        v51[2] = v12;
        uint64_t v51[3] = v13;
        v51[4] = v24;
        v51[5] = v25;
        v51[6] = v26;
        v51[7] = v14 & 0xEFFFFFFFFFFFFFFFLL;
        v51[8] = v27;
        v51[9] = v28;
        uint64_t v34 = v27;
        uint64_t v48 = v14;
        uint64_t v49 = v2;
        uint64_t v29 = v5;
        uint64_t v45 = v12;
        uint64_t v46 = v27;
        uint64_t v30 = v14;
        unint64_t v31 = v6;
        unint64_t v47 = v6;
        unint64_t v36 = v19;
        unint64_t v37 = v7;
        uint64_t v43 = v24;
        unint64_t v44 = v13;
        uint64_t v41 = v26;
        unint64_t v42 = v25;
        uint64_t v35 = v9;
        uint64_t v38 = v10;
        unint64_t v39 = v11;
        sub_10044CA28(v10, v11, v12, v13, v24, v25, v26, v30, v34, v28);
        sub_10044CA28(v29, v31, v8, v37, v20, v36, v21, v35, v23, v22);
        char v40 = sub_100455D6C((uint64_t)v50, (uint64_t)v51);
        sub_10044B008(v38, v39, v45, v44, v43, v42, v41, v48, v46, v28);
        uint64_t v32 = v29;
        uint64_t v2 = v49;
        sub_10044B008(v32, v47, v8, v37, v20, v36, v21, v35, v23, v22);
        if ((v40 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if ((v14 & 0x1000000000000000) != 0) {
          return 0;
        }
        if (v5 != v10 || v6 != v11)
        {
          uint64_t v15 = *(v3 - 1);
          unint64_t v16 = *v4;
          unint64_t v17 = *v3;
          char v18 = sub_1005E3290();
          unint64_t v13 = v17;
          uint64_t v12 = v15;
          unint64_t v7 = v16;
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        if ((v8 != v12 || v7 != v13) && (sub_1005E3290() & 1) == 0) {
          return 0;
        }
      }
      v3 += 10;
      v4 += 10;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1004B0624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B0688(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004B06E8()
{
  unint64_t result = qword_100716958;
  if (!qword_100716958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716958);
  }
  return result;
}

unsigned char *_s10ConstraintOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004B0808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.Constraint()
{
  return &type metadata for CommandConnection.Constraint;
}

uint64_t sub_1004B0840()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E12C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E1850();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)v1[4];
  void *v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1[9]) {
    return result;
  }
  sub_1005E12E0();
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  int v14 = enum case for NWConnection.State.setup(_:);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v13 != v14)
  {
LABEL_7:
    uint64_t result = sub_1005E2F20();
    __break(1u);
    return result;
  }
  uint64_t v15 = sub_1005E1260();
  v1[8] = static MonotonicTime.now()();
  v1[9] = v15;
  return swift_release();
}

uint64_t sub_1004B0A9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v0 + 32);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  char v8 = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    uint64_t v10 = *(void *)(v1 + 72);
    if (v10)
    {
      uint64_t v11 = *(void *)(v1 + 64);
      int v12 = *(_DWORD *)(v1 + 24);
      uint64_t v14 = *(void *)(v1 + 40);
      uint64_t v13 = *(void *)(v1 + 48);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v11;
      *(void *)(v15 + 24) = v10;
      *(void *)(v15 + 32) = v14;
      *(void *)(v15 + 40) = v13;
      *(_DWORD *)(v15 + 48) = v12;
      swift_retain_n();
      swift_retain();
      sub_1005E1270();
      swift_release_n();
      swift_release();
    }
    uint64_t v16 = sub_1005E1260();
    *(void *)(v1 + 64) = static MonotonicTime.now()();
    *(void *)(v1 + 72) = v16;
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004B0C58(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v10 = sub_1005E12C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  *(unsigned char *)(v6 + 56) = 0;
  *(void *)(v6 + 64) = 0;
  *(void *)(v6 + 72) = 0;
  sub_1005E12E0();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for NWConnection.State.setup(_:), v10);
  char v17 = sub_1005E12B0();
  char v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v16, v10);
  if (v17)
  {
    *(void *)(v6 + 16) = a1;
    *(_DWORD *)(v6 + 24) = a2;
    uint64_t v20 = v21;
    *(void *)(v6 + 32) = a3;
    *(void *)(v6 + 40) = v20;
    *(void *)(v6 + 48) = v22;
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004B0DE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 64);
    int v4 = *(_DWORD *)(v1 + 24);
    uint64_t v6 = *(void *)(v1 + 40);
    uint64_t v5 = *(void *)(v1 + 48);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v3;
    *(void *)(v7 + 24) = v2;
    *(void *)(v7 + 32) = v6;
    *(void *)(v7 + 40) = v5;
    *(_DWORD *)(v7 + 48) = v4;
    swift_retain_n();
    swift_retain();
    sub_1005E1270();
    swift_release_n();
    swift_release();
  }
  swift_release();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1004B0ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(int *), uint64_t a5, int a6)
{
  int v26 = a6;
  uint64_t v27 = a5;
  unint64_t v28 = a4;
  uint64_t v8 = sub_1005E1200();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v13 = &v25[-v12];
  uint64_t v14 = sub_1005E1220();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  char v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  sub_1005E1210();
  uint64_t v19 = v18;
  sub_1005E11D0();
  uint64_t v20 = sub_1005E11F0();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v21(v13, v8);
  uint64_t v22 = v20 & ~(v20 >> 63);
  sub_1005E11D0();
  uint64_t v23 = sub_1005E11E0();
  v21(v11, v8);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
  int v29 = v26;
  uint64_t v30 = a2;
  uint64_t v31 = v19;
  uint64_t v32 = v22;
  uint64_t v33 = v23 & ~(v23 >> 63);
  return v28(&v29);
}

double DataTransferReport.duration.getter()
{
  return *(double *)(v0 + 16);
}

void DataTransferReport.duration.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t DataTransferReport.sentTransportByteCount.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

void __swiftcall DataTransferReport.init(connection:start:duration:receivedTransportByteCount:sentTransportByteCount:)(IMAP2Connection::DataTransferReport *__return_ptr retstr, IMAP2Protocol::ConnectionID connection, IMAP2Helpers::MonotonicTime start, Swift::Double duration, Swift::Int receivedTransportByteCount, Swift::Int sentTransportByteCount)
{
  retstr->connection = connection;
  retstr->start = start;
  retstr->duration = duration;
  retstr->receivedTransportByteCount = receivedTransportByteCount;
  retstr->sentTransportByteCount = sentTransportByteCount;
}

BOOL static DataTransferReport.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      && *(void *)(a1 + 32) == *(void *)(a2 + 32);
}

BOOL sub_1004B1194(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      && *(void *)(a1 + 32) == *(void *)(a2 + 32);
}

unint64_t DataTransferReport.receivedApplicationBitrate.getter()
{
  double v1 = *(double *)(v0 + 16);
  if (v1 <= 0.0) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + 24);
  if ((unint64_t)(v2 - 0x1000000000000000) >> 61 == 7)
  {
    double v3 = (double)(8 * v2) / v1;
    double v4 = round(v3);
    BOOL v6 = v4 >= 9.22337204e18 || v4 <= -9.22337204e18;
    unint64_t v7 = llround(v3);
    if (v6) {
      return 0;
    }
    else {
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t DataTransferReport.sentApplicationBitrate.getter()
{
  double v1 = *(double *)(v0 + 16);
  if (v1 <= 0.0) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + 32);
  if ((unint64_t)(v2 - 0x1000000000000000) >> 61 == 7)
  {
    double v3 = (double)(8 * v2) / v1;
    double v4 = round(v3);
    BOOL v6 = v4 >= 9.22337204e18 || v4 <= -9.22337204e18;
    unint64_t v7 = llround(v3);
    if (v6) {
      return 0;
    }
    else {
      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s14descr1006B9401C27DataTransferReportCollectorCMa()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DataTransferReport(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DataTransferReport(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

void *_s14descr1006B9401C27DataTransferReportCollectorC7PendingVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *_s14descr1006B9401C27DataTransferReportCollectorC7PendingVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *_s14descr1006B9401C27DataTransferReportCollectorC7PendingVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *_s14descr1006B9401C27DataTransferReportCollectorC7PendingVMa()
{
  return &_s14descr1006B9401C27DataTransferReportCollectorC7PendingVN;
}

uint64_t sub_1004B1408()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 52, 7);
}

uint64_t sub_1004B1448(uint64_t a1)
{
  return sub_1004B0ED8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(int *))(v1 + 32), *(void *)(v1 + 40), *(_DWORD *)(v1 + 48));
}

uint64_t sub_1004B145C()
{
  type metadata accessor for Deflate.Stream();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_DWORD *)(v1 + 104) = 0;
  *(void *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = 0;
  *(unsigned char *)(v1 + 128) = 0;
  swift_beginAccess();
  int v2 = deflateInit2_((z_streamp)(v1 + 16), 1, 8, -15, 8, 4, "1.2.12", 112);
  swift_endAccess();
  if (v2)
  {
    sub_1004B4F04();
    swift_allocError();
    *(void *)uint64_t v4 = "deflateInit2";
    *(void *)(v4 + 8) = 12;
    *(unsigned char *)(v4 + 16) = 2;
    *(_DWORD *)(v4 + 20) = v2;
    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 16) = v1;
    *(unsigned char *)(v0 + 24) = 0;
    return v0;
  }
  return result;
}

int *sub_1004B158C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  LODWORD(v120) = a2;
  uint64_t v118 = sub_10000566C(&qword_100716C30);
  __chkstk_darwin();
  long long v107 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  os_log_t v119 = (char *)&v92 - v10;
  uint64_t v112 = type metadata accessor for Deflate.PartialResult(0);
  __chkstk_darwin();
  uint64_t v106 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v111 = (char *)&v92 - v12;
  uint64_t v13 = type metadata accessor for Deflate.InputBuffer(0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v105 = (uint64_t *)((char *)&v92 - v16);
  __chkstk_darwin();
  char v98 = (char *)&v92 - v17;
  __chkstk_darwin();
  long long v108 = (char *)&v92 - v18;
  __chkstk_darwin();
  long long v109 = (uint64_t *)((char *)&v92 - v19);
  __chkstk_darwin();
  long long v110 = (char *)&v92 - v20;
  __chkstk_darwin();
  uint64_t v22 = (char *)&v92 - v21;
  uint64_t v121 = sub_1005E17E0();
  uint64_t v23 = *(void *)(v121 - 8);
  __chkstk_darwin();
  uint64_t v95 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v92 - v25;
  __chkstk_darwin();
  uint64_t v27 = (char *)&v92 - v26;
  uint64_t v96 = a1;
  if (sub_1004B21B8())
  {
    sub_1005E1790();
    uint64_t v28 = *(void *)(v6 + 16);
    swift_beginAccess();
    uint64_t v29 = *(void *)(v28 + 32);
    if (v29 < 0)
    {
LABEL_59:
      __break(1u);
    }
    else
    {
      uint64_t v30 = *(void *)(v28 + 56);
      if ((v30 & 0x8000000000000000) == 0)
      {
        uint64_t result = (int *)type metadata accessor for Deflate.Result(0);
        uint64_t v32 = 0;
        uint64_t v33 = (void *)(a3 + result[5]);
        *uint64_t v33 = 0;
        v33[1] = 0;
LABEL_5:
        uint64_t v34 = (void *)(a3 + result[6]);
        *uint64_t v34 = v29;
        v34[1] = v30;
        *(void *)(a3 + result[7]) = v32;
        return result;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v94 = a3;
  uint64_t result = (int *)sub_1004B2364(v120 & 1, (uint64_t)v27);
  if (v4) {
    return result;
  }
  long long v104 = v27;
  uint64_t v93 = v15;
  sub_1004B4114(v96, (uint64_t)v22);
  uint64_t v120 = (void (**)(char *, char *, uint64_t))(v23 + 32);
  __int16 v113 = (uint64_t (**)(char *, uint64_t))(v23 + 8);
  long long v103 = (void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v35 = 1;
  uint64_t v97 = v22;
  unint64_t v36 = v110;
  uint64_t v102 = v6;
  uint64_t v101 = v13;
  while (1)
  {
    sub_1004B4114((uint64_t)v22, (uint64_t)v36);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v116 = v35;
    if (EnumCaseMultiPayload == 1)
    {
      if (!*(void *)v36)
      {
        uLong v39 = 0;
        goto LABEL_16;
      }
      uLong v39 = *((void *)v36 + 1) - *(void *)v36;
    }
    else
    {
      uint64_t v40 = v121;
      uint64_t v41 = v117;
      (*v120)(v117, v36, v121);
      uLong v39 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*v113)(v41, v40);
    }
    if ((v39 & 0x8000000000000000) != 0) {
      goto LABEL_63;
    }
LABEL_16:
    uint64_t v42 = *(void *)(v6 + 16);
    swift_beginAccess();
    swift_retain();
    uLong v43 = deflateBound((z_streamp)(v42 + 16), v39);
    swift_endAccess();
    swift_release();
    if ((v43 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    BOOL v44 = __OFADD__(v43, 20);
    uint64_t v45 = v43 + 20;
    if (v44) {
      goto LABEL_54;
    }
    if (qword_100715628 != -1) {
      swift_once();
    }
    if (qword_100716A28 >= 0) {
      uint64_t v46 = qword_100716A28;
    }
    else {
      uint64_t v46 = qword_100716A28 + 1;
    }
    uint64_t v47 = (uint64_t)v119;
    if (v45 >= v46 >> 1)
    {
      if (!qword_100716A28) {
        goto LABEL_57;
      }
      uint64_t v48 = (uint64_t)((unint64_t)v45 >> 1) / qword_100716A28 + 1;
      uint64_t v45 = qword_100716A28 * v48;
      if ((unsigned __int128)(qword_100716A28 * (__int128)v48) >> 64 != (qword_100716A28 * v48) >> 63) {
        goto LABEL_58;
      }
    }
    uint64_t v49 = *(void *)(v6 + 16);
    v122[0] = 0;
    __chkstk_darwin();
    *(&v92 - 6) = (uint64_t)v22;
    *(&v92 - 5) = v49;
    uint64_t v89 = sub_1004B4AF4;
    uint64_t v90 = v6;
    uint64_t v91 = v122;
    swift_retain_n();
    char v50 = sub_1004B44E8(v47, v45, v49, (uint64_t (*)(uint64_t))sub_1004B4B10);
    if (v5)
    {
      swift_release();
      sub_1004B4BF0((uint64_t)v22, type metadata accessor for Deflate.InputBuffer);
      return (int *)(*v113)(v104, v121);
    }
    char v51 = v50 & 1;
    *(unsigned char *)(v47 + *(int *)(v118 + 48)) = v50 & 1;
    uint64_t v52 = v122[0];
    char v53 = v108;
    sub_1004B4114((uint64_t)v22, (uint64_t)v108);
    int v54 = swift_getEnumCaseMultiPayload();
    uint64_t v114 = 0;
    uint64_t v115 = v49;
    if (v54 == 1)
    {
      uint64_t v55 = v121;
      if (*(void *)v53)
      {
        if (v52 == *((void *)v53 + 1) - *(void *)v53) {
          goto LABEL_34;
        }
      }
      else if (!v52)
      {
LABEL_34:
        uint64_t v60 = v109;
        sub_1005E1790();
        swift_storeEnumTagMultiPayload();
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v55 = v121;
      uint64_t v58 = v117;
      (*v120)(v117, v53, v121);
      uint64_t v59 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*v113)(v58, v55);
      if (v52 == v59) {
        goto LABEL_34;
      }
    }
    uint64_t v56 = v98;
    sub_1004B4114((uint64_t)v22, (uint64_t)v98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (*(void *)v56) {
        uint64_t v57 = *((void *)v56 + 1) - *(void *)v56;
      }
      else {
        uint64_t v57 = 0;
      }
    }
    else
    {
      uint64_t v61 = v117;
      (*v120)(v117, v56, v55);
      uint64_t v57 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*v113)(v61, v55);
    }
    if (v57 < v52) {
      goto LABEL_56;
    }
    uint64_t v60 = v109;
    uint64_t v22 = v97;
    sub_1004B3D48(v52, v57, v109);
LABEL_42:
    uint64_t v62 = (uint64_t)v119;
    uint64_t v63 = *(int *)(v118 + 48);
    unint64_t v64 = v107;
    uint64_t v100 = *v103;
    v100(v107, v119, v55);
    v64[v63] = v51;
    sub_1004B4B28(v62);
    uint64_t v65 = *v120;
    uint64_t v66 = v55;
    uint64_t v67 = (uint64_t)v111;
    (*v120)(v111, v64, v66);
    uint64_t v68 = v112;
    uint64_t v69 = v67 + *(int *)(v112 + 20);
    sub_1004B4B88((uint64_t)v60, v69, type metadata accessor for Deflate.InputBuffer);
    swift_release();
    *(unsigned char *)(v67 + *(int *)(v68 + 24)) = v51;
    sub_1005E17A0();
    sub_1004B4BF0((uint64_t)v22, type metadata accessor for Deflate.InputBuffer);
    sub_1004B4114(v69, (uint64_t)v22);
    uint64_t v70 = v105;
    sub_1004B4114((uint64_t)v22, (uint64_t)v105);
    int v71 = swift_getEnumCaseMultiPayload();
    char v99 = (void (*)(uint64_t, char *, uint64_t))v65;
    if (v71 == 1)
    {
      uint64_t v72 = *v70;
      uint64_t v6 = v102;
      uint64_t v73 = v106;
      if (*v70)
      {
        uint64_t v74 = v70[1];
        sub_1004B4B88((uint64_t)v111, v106, type metadata accessor for Deflate.PartialResult);
        if (v74 != v72) {
          goto LABEL_47;
        }
      }
      else
      {
        sub_1004B4B88((uint64_t)v111, v106, type metadata accessor for Deflate.PartialResult);
      }
    }
    else
    {
      char v75 = v117;
      uint64_t v76 = v121;
      v65(v117, (char *)v70, v121);
      sub_10048A4F8();
      sub_1005E2390();
      sub_1005E23E0();
      uint64_t v77 = v122[0];
      uint64_t v78 = v122[5];
      (*v113)(v75, v76);
      uint64_t v73 = v106;
      sub_1004B4B88(v67, v106, type metadata accessor for Deflate.PartialResult);
      uint64_t v6 = v102;
      if (v77 != v78)
      {
LABEL_47:
        sub_1004B4BF0(v73, type metadata accessor for Deflate.PartialResult);
        unint64_t v36 = v110;
        goto LABEL_10;
      }
    }
    char v37 = *(unsigned char *)(v73 + *(int *)(v112 + 24));
    sub_1004B4BF0(v73, type metadata accessor for Deflate.PartialResult);
    unint64_t v36 = v110;
    if ((v37 & 1) == 0) {
      break;
    }
LABEL_10:
    uint64_t v35 = v116 + 1;
    uint64_t v5 = v114;
    if (__OFADD__(v116, 1)) {
      goto LABEL_55;
    }
  }
  long long v79 = v104;
  uint64_t v80 = v121;
  long long v81 = v100;
  v100(v117, v104, v121);
  uint64_t v82 = (uint64_t)v93;
  sub_1004B4114(v96, (uint64_t)v93);
  long long v83 = v95;
  v81(v95, v79, v80);
  os_log_t v119 = (char *)sub_1004B27CC();
  uint64_t v118 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  uint64_t v84 = v6;
  long long v85 = *v113;
  (*v113)(v83, v80);
  sub_1004B4BF0(v82, type metadata accessor for Deflate.InputBuffer);
  sub_1004B4BF0((uint64_t)v22, type metadata accessor for Deflate.InputBuffer);
  v85(v79, v80);
  uint64_t v86 = *(void *)(v84 + 16);
  swift_beginAccess();
  uint64_t v29 = *(void *)(v86 + 32);
  if (v29 < 0) {
    goto LABEL_61;
  }
  uint64_t v30 = *(void *)(v86 + 56);
  a3 = v94;
  if ((v30 & 0x8000000000000000) == 0)
  {
    v99(v94, v117, v121);
    uint64_t result = (int *)type metadata accessor for Deflate.Result(0);
    long long v87 = (void *)(a3 + result[5]);
    uint64_t v88 = v118;
    *long long v87 = v119;
    v87[1] = v88;
    uint64_t v32 = v116;
    goto LABEL_5;
  }
LABEL_62:
  __break(1u);
LABEL_63:
  LODWORD(v91) = 0;
  uint64_t v90 = 3451;
  LOBYTE(v89) = 2;
  uint64_t result = (int *)sub_1005E2F10();
  __break(1u);
  return result;
}

BOOL sub_1004B21B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E17E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Deflate.InputBuffer(0);
  __chkstk_darwin();
  unint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004B4114(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return !*v7 || v7[1] == *v7;
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v3 + 32))(v5, v7, v2);
    sub_10048A4F8();
    sub_1005E2390();
    sub_1005E23E0();
    BOOL v8 = v10[1] == v10[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v8;
}

uint64_t sub_1004B2364@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v37 = sub_1005E1720();
  uint64_t v7 = *(void *)(v37 - 8);
  __chkstk_darwin();
  unint64_t v36 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = sub_10000566C(&qword_100716C30);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E17E0();
  uint64_t v11 = __chkstk_darwin();
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v4 + 24))) {
    return sub_1005E1790();
  }
  uint64_t v30 = v12;
  uint64_t v31 = v11;
  uint64_t v29 = a2;
  *(unsigned char *)(v4 + 24) = a1 & 1;
  sub_1005E1790();
  uint64_t v34 = v40;
  unsigned int v33 = enum case for DispatchData.Deallocator.custom(_:);
  uint64_t v32 = (void (**)(void *, void, uint64_t))(v7 + 104);
  uint64_t v16 = v4;
  while (1)
  {
    uint64_t v17 = *(void *)(v16 + 16);
    unsigned int pending = 0;
    swift_beginAccess();
    swift_retain();
    int v18 = deflatePending((z_streamp)(v17 + 16), &pending, 0);
    swift_endAccess();
    swift_release();
    if (v18) {
      uint64_t v19 = 1044;
    }
    else {
      uint64_t v19 = pending + 21;
    }
    uint64_t v20 = *(void *)(v16 + 16);
    swift_retain();
    swift_retain();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = sub_1004B42A8((BOOL *)&pending, v21, v21 + v19, v20, v16);
    if (v3)
    {
      swift_slowDealloc();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v31);
      return swift_release();
    }
    if (v22 < 0 || v19 < v22) {
      break;
    }
    uint64_t v23 = *(int *)(v35 + 48);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v21;
    *(void *)(v24 + 24) = v21 + v19;
    v40[2] = sub_1004B6530;
    v40[3] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    v40[0] = sub_100469020;
    v40[1] = &unk_1006F9448;
    uint64_t v25 = _Block_copy(aBlock);
    uint64_t v27 = v36;
    uint64_t v26 = v37;
    *unint64_t v36 = 0;
    v27[1] = v25;
    (*v32)(v27, v33, v26);
    sub_1005E1730();
    swift_release();
    swift_release();
    LOBYTE(v27) = pending;
    v10[v23] = pending;
    sub_1005E17A0();
    sub_1004B4B28((uint64_t)v10);
    if ((v27 & 1) == 0) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v29, v14, v31);
    }
  }
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

uint64_t sub_1004B27CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E17E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Deflate.InputBuffer(0);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004B4114(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (*v7) {
      return v7[1] - *v7;
    }
    else {
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v3 + 32))(v5, v7, v2);
    uint64_t v8 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v8;
}

uint64_t sub_1004B2944(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  int v3 = a1 & 1;
  swift_beginAccess();
  swift_retain();
  int v4 = deflate((z_streamp)(v2 + 16), v3);
  swift_endAccess();
  if (v4 && v4 != -5)
  {
    sub_1004B4F04();
    swift_allocError();
    *(void *)uint64_t v5 = "deflate";
    *(void *)(v5 + 8) = 7;
    *(unsigned char *)(v5 + 16) = 2;
    *(_DWORD *)(v5 + 20) = v4;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1004B2A10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  swift_beginAccess();
  swift_retain();
  int v3 = deflate((z_streamp)(v2 + 16), 5);
  swift_endAccess();
  if (v3) {
    BOOL v4 = v3 == -5;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    sub_1004B4F04();
    swift_allocError();
    *(void *)uint64_t v8 = "deflate";
    uint64_t v9 = 7;
LABEL_14:
    *(void *)(v8 + 8) = v9;
    *(unsigned char *)(v8 + 16) = 2;
    *(_DWORD *)(v8 + 20) = v3;
    swift_willThrow();
    return swift_release();
  }
  swift_release();
  uint64_t v5 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a1 + 24)) {
    int v6 = 5;
  }
  else {
    int v6 = 1;
  }
  if (*(unsigned char *)(a1 + 24)) {
    int v7 = 0;
  }
  else {
    int v7 = 4;
  }
  swift_beginAccess();
  swift_retain();
  int v3 = deflateParams((z_streamp)(v5 + 16), v6, v7);
  swift_endAccess();
  if (v3)
  {
    sub_1004B4F04();
    swift_allocError();
    *(void *)uint64_t v8 = "deflateParams";
    uint64_t v9 = 13;
    goto LABEL_14;
  }
  return swift_release();
}

uint64_t sub_1004B2B80()
{
  return sub_1004B394C();
}

uint64_t type metadata accessor for Deflate.Compressor()
{
  return self;
}

uint64_t sub_1004B2BAC()
{
  type metadata accessor for Deflate.Stream();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_DWORD *)(v1 + 104) = 0;
  *(void *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = 0;
  *(unsigned char *)(v1 + 128) = 1;
  swift_beginAccess();
  int v2 = inflateInit2_((z_streamp)(v1 + 16), -15, "1.2.12", 112);
  swift_endAccess();
  if (v2)
  {
    sub_1004B4F04();
    swift_allocError();
    *(void *)uint64_t v4 = "inflateInit2";
    *(void *)(v4 + 8) = 12;
    *(unsigned char *)(v4 + 16) = 2;
    *(_DWORD *)(v4 + 20) = v2;
    swift_willThrow();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 16) = v1;
    return v0;
  }
  return result;
}

int *sub_1004B2CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v117 = sub_10000566C(&qword_100716C30);
  __chkstk_darwin();
  uint64_t v106 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v91 - v9;
  uint64_t v110 = type metadata accessor for Deflate.PartialResult(0);
  __chkstk_darwin();
  uint64_t v103 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v105 = (char *)&v91 - v12;
  uint64_t v120 = type metadata accessor for Deflate.InputBuffer(0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v104 = (uint64_t *)((char *)&v91 - v15);
  __chkstk_darwin();
  uint64_t v97 = (uint64_t *)((char *)&v91 - v16);
  __chkstk_darwin();
  long long v107 = (uint64_t *)((char *)&v91 - v17);
  __chkstk_darwin();
  long long v108 = (uint64_t *)((char *)&v91 - v18);
  __chkstk_darwin();
  long long v109 = (uint64_t *)((char *)&v91 - v19);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v91 - v20;
  uint64_t v118 = sub_1005E17E0();
  uint64_t v22 = *(void *)(v118 - 8);
  __chkstk_darwin();
  uint64_t v95 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v112 = (char *)&v91 - v24;
  __chkstk_darwin();
  uint64_t v26 = (char *)&v91 - v25;
  if (sub_1004B21B8())
  {
    sub_1005E1790();
    uint64_t v27 = *(void *)(v5 + 16);
    uint64_t result = (int *)swift_beginAccess();
    uint64_t v29 = *(void *)(v27 + 32);
    if (v29 < 0)
    {
LABEL_66:
      __break(1u);
    }
    else
    {
      uint64_t v30 = *(void *)(v27 + 56);
      if ((v30 & 0x8000000000000000) == 0)
      {
        uint64_t result = (int *)type metadata accessor for Deflate.Result(0);
        uint64_t v31 = 0;
        uint64_t v32 = (void *)(a2 + result[5]);
        void *v32 = 0;
        v32[1] = 0;
LABEL_57:
        uint64_t v90 = (void *)(a2 + result[6]);
        *uint64_t v90 = v29;
        v90[1] = v30;
        *(void *)(a2 + result[7]) = v31;
        return result;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v93 = v14;
  uint64_t v92 = a2;
  uint64_t v102 = v26;
  sub_1005E1790();
  uint64_t v94 = a1;
  sub_1004B4114(a1, (uint64_t)v21);
  os_log_t v119 = (void (**)(uint64_t, char *, uint64_t))(v22 + 32);
  long long v111 = (uint64_t (**)(char *, uint64_t))(v22 + 8);
  uint64_t v101 = (void (**)(char *, char *, uint64_t))(v22 + 16);
  uint64_t v33 = 1;
  uint64_t v100 = v5;
  uint64_t v96 = v21;
  uint64_t v116 = v10;
  while (1)
  {
    uint64_t v38 = (char *)v109;
    sub_1004B4114((uint64_t)v21, (uint64_t)v109);
    uint64_t result = (int *)swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      if (*(void *)v38) {
        uint64_t v39 = *((void *)v38 + 1) - *(void *)v38;
      }
      else {
        uint64_t v39 = 0;
      }
    }
    else
    {
      uint64_t v40 = v118;
      uint64_t v41 = v112;
      (*v119)((uint64_t)v112, v38, v118);
      uint64_t v39 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      uint64_t result = (int *)(*v111)(v41, v40);
    }
    uint64_t v42 = (unsigned __int128)(v39 * (__int128)3) >> 64;
    uint64_t v43 = 3 * v39;
    if (v42 != v43 >> 63)
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (qword_100715628 != -1) {
      uint64_t result = (int *)swift_once();
    }
    uint64_t v44 = qword_100716A28 >= 0 ? qword_100716A28 : qword_100716A28 + 1;
    if (v43 >= v44 >> 1)
    {
      uint64_t v46 = v43 + qword_100716A28;
      if (__OFADD__(v43, qword_100716A28)) {
        goto LABEL_61;
      }
      BOOL v37 = __OFSUB__(v46, 1);
      uint64_t v47 = v46 - 1;
      if (v37) {
        goto LABEL_62;
      }
      if (!qword_100716A28) {
        goto LABEL_63;
      }
      if (qword_100716A28 == -1 && v47 == 0x8000000000000000) {
        goto LABEL_65;
      }
      uint64_t v48 = v47 / qword_100716A28;
      if (v48 >= 4) {
        uint64_t v48 = 4;
      }
      uint64_t v45 = v48 * qword_100716A28;
      if ((unsigned __int128)(v48 * (__int128)qword_100716A28) >> 64 != (v48 * qword_100716A28) >> 63) {
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v45 = v43 <= 20 ? 20 : v43;
    }
    uint64_t v49 = *(void *)(v5 + 16);
    v121[0] = 0;
    __chkstk_darwin();
    *(&v91 - 6) = (uint64_t)v21;
    *(&v91 - 5) = v49;
    *(&v91 - 4) = (uint64_t)sub_1004B4F68;
    *(&v91 - 3) = v5;
    *(&v91 - 2) = (uint64_t)v121;
    swift_retain_n();
    char v50 = sub_1004B44E8((uint64_t)v10, v45, v49, (uint64_t (*)(uint64_t))sub_1004B4B10);
    if (v4)
    {
      swift_release();
      sub_1004B4BF0((uint64_t)v21, type metadata accessor for Deflate.InputBuffer);
      return (int *)(*v111)(v102, v118);
    }
    uint64_t v114 = v33;
    char v51 = v50 & 1;
    v10[*(int *)(v117 + 48)] = v50 & 1;
    uint64_t v52 = v121[0];
    char v53 = (char *)v107;
    sub_1004B4114((uint64_t)v21, (uint64_t)v107);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v55 = v118;
    uint64_t v113 = 0;
    uint64_t v115 = v49;
    if (EnumCaseMultiPayload == 1)
    {
      if (*(void *)v53)
      {
        if (v52 == *((void *)v53 + 1) - *(void *)v53) {
          goto LABEL_40;
        }
      }
      else if (!v52)
      {
LABEL_40:
        char v60 = v51;
        uint64_t v61 = v108;
        sub_1005E1790();
        swift_storeEnumTagMultiPayload();
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v58 = v112;
      (*v119)((uint64_t)v112, v53, v118);
      uint64_t v59 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      (*v111)(v58, v55);
      if (v52 == v59) {
        goto LABEL_40;
      }
    }
    uint64_t v56 = (char *)v97;
    sub_1004B4114((uint64_t)v21, (uint64_t)v97);
    uint64_t result = (int *)swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      if (*(void *)v56) {
        uint64_t v57 = *((void *)v56 + 1) - *(void *)v56;
      }
      else {
        uint64_t v57 = 0;
      }
    }
    else
    {
      uint64_t v62 = v112;
      (*v119)((uint64_t)v112, v56, v55);
      uint64_t v57 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      uint64_t result = (int *)(*v111)(v62, v55);
    }
    if (v57 < v52) {
      goto LABEL_60;
    }
    char v60 = v51;
    uint64_t v61 = v108;
    uint64_t v21 = v96;
    sub_1004B3D48(v52, v57, v108);
LABEL_47:
    uint64_t v63 = (uint64_t)v116;
    uint64_t v64 = *(int *)(v117 + 48);
    uint64_t v65 = v106;
    char v99 = *v101;
    v99(v106, v116, v55);
    v65[v64] = v60;
    sub_1004B4B28(v63);
    uint64_t v66 = *v119;
    uint64_t v67 = v105;
    (*v119)((uint64_t)v105, v65, v55);
    uint64_t v68 = v110;
    uint64_t v69 = (uint64_t)&v67[*(int *)(v110 + 20)];
    sub_1004B4B88((uint64_t)v61, v69, type metadata accessor for Deflate.InputBuffer);
    swift_release();
    v67[*(int *)(v68 + 24)] = v60;
    sub_1005E17A0();
    sub_1004B4BF0((uint64_t)v21, type metadata accessor for Deflate.InputBuffer);
    sub_1004B4114(v69, (uint64_t)v21);
    uint64_t v70 = v104;
    sub_1004B4114((uint64_t)v21, (uint64_t)v104);
    int v71 = swift_getEnumCaseMultiPayload();
    char v98 = v66;
    if (v71 == 1)
    {
      uint64_t v72 = *v70;
      uint64_t v5 = v100;
      if (!*v70)
      {
        uint64_t v34 = (uint64_t)v67;
        uint64_t v35 = v103;
        sub_1004B4B88(v34, v103, type metadata accessor for Deflate.PartialResult);
        uint64_t v10 = v116;
        uint64_t v31 = v114;
        goto LABEL_7;
      }
      uint64_t v73 = v70[1];
      uint64_t v74 = (uint64_t)v67;
      uint64_t v35 = v103;
      sub_1004B4B88(v74, v103, type metadata accessor for Deflate.PartialResult);
      BOOL v75 = v73 == v72;
    }
    else
    {
      uint64_t v76 = v112;
      uint64_t v77 = v118;
      v66((uint64_t)v112, (char *)v70, v118);
      sub_10048A4F8();
      sub_1005E2390();
      sub_1005E23E0();
      uint64_t v78 = v121[0];
      uint64_t v79 = v121[5];
      (*v111)(v76, v77);
      uint64_t v80 = (uint64_t)v67;
      uint64_t v35 = v103;
      sub_1004B4B88(v80, v103, type metadata accessor for Deflate.PartialResult);
      BOOL v75 = v78 == v79;
      uint64_t v5 = v100;
    }
    uint64_t v10 = v116;
    uint64_t v31 = v114;
    if (!v75)
    {
      uint64_t result = (int *)sub_1004B4BF0(v35, type metadata accessor for Deflate.PartialResult);
      goto LABEL_8;
    }
LABEL_7:
    char v36 = *(unsigned char *)(v35 + *(int *)(v110 + 24));
    uint64_t result = (int *)sub_1004B4BF0(v35, type metadata accessor for Deflate.PartialResult);
    if ((v36 & 1) == 0) {
      break;
    }
LABEL_8:
    BOOL v37 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    uint64_t v4 = v113;
    if (v37) {
      goto LABEL_59;
    }
  }
  long long v81 = v102;
  uint64_t v82 = v118;
  long long v83 = v99;
  v99(v112, v102, v118);
  uint64_t v84 = (uint64_t)v93;
  sub_1004B4114(v94, (uint64_t)v93);
  long long v85 = v95;
  v83(v95, v81, v82);
  uint64_t v117 = sub_1004B27CC();
  uint64_t v120 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  uint64_t v86 = *v111;
  (*v111)(v85, v82);
  sub_1004B4BF0(v84, type metadata accessor for Deflate.InputBuffer);
  sub_1004B4BF0((uint64_t)v21, type metadata accessor for Deflate.InputBuffer);
  v86(v81, v82);
  uint64_t v87 = *(void *)(v5 + 16);
  uint64_t result = (int *)swift_beginAccess();
  uint64_t v29 = *(void *)(v87 + 32);
  if (v29 < 0) {
    goto LABEL_68;
  }
  uint64_t v30 = *(void *)(v87 + 56);
  if ((v30 & 0x8000000000000000) == 0)
  {
    a2 = v92;
    v98(v92, v112, v118);
    uint64_t result = (int *)type metadata accessor for Deflate.Result(0);
    uint64_t v88 = (uint64_t *)(a2 + result[5]);
    uint64_t v89 = v120;
    *uint64_t v88 = v117;
    v88[1] = v89;
    goto LABEL_57;
  }
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_1004B387C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  swift_beginAccess();
  swift_retain();
  int v3 = inflate((z_streamp)(v2 + 16), 2);
  swift_endAccess();
  if (v3 && v3 != -5)
  {
    sub_1004B4F04();
    swift_allocError();
    *(void *)uint64_t v4 = "inflate";
    *(void *)(v4 + 8) = 7;
    *(unsigned char *)(v4 + 16) = 2;
    *(_DWORD *)(v4 + 20) = v3;
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1004B3944()
{
  return sub_1004B394C();
}

uint64_t sub_1004B394C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Deflate.Decompressor()
{
  return self;
}

uint64_t sub_1004B39B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, void *a5)
{
  uint64_t v38 = a5;
  uint64_t v9 = sub_1005E17E0();
  uint64_t v39 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v35 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v32 - v11;
  type metadata accessor for Deflate.InputBuffer(0);
  __chkstk_darwin();
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v16 = (uint64_t *)((char *)&v32 - v15);
  uint64_t v37 = a2;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v43 = a4;
  uint64_t v44 = v38;
  uint64_t v17 = v38;
  sub_1004B4114(a1, (uint64_t)&v32 - v15);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v22 = v39;
    (*(void (**)(char *, uint64_t *, uint64_t))(v39 + 32))(v12, v16, v9);
    uint64_t v46 = 0;
    __chkstk_darwin();
    *(&v32 - 4) = (uint64_t)v12;
    *(&v32 - 3) = (uint64_t)sub_1004B4CB0;
    *(&v32 - 2) = (uint64_t)&v40;
    *(&v32 - 1) = (uint64_t)&v46;
    sub_1005E1750();
    if (v46) {
      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
    return swift_release();
  }
  uint64_t v18 = v39;
  uint64_t v19 = *v16;
  uint64_t v32 = v16[1];
  sub_1004B4114(a1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!*v14) {
      return swift_release();
    }
    uint64_t v21 = v36;
    uint64_t v20 = v37;
    if (v14[1] == *v14) {
      return swift_release();
    }
  }
  else
  {
    uint64_t v23 = v35;
    (*(void (**)(char *, void *, uint64_t))(v18 + 32))(v35, v14, v9);
    sub_10048A4F8();
    sub_1005E2390();
    sub_1005E23E0();
    uint64_t v24 = v46;
    uint64_t v25 = v45;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v9);
    BOOL v26 = v24 == v25;
    uint64_t v21 = v36;
    uint64_t v20 = v37;
    if (v26) {
      return swift_release();
    }
  }
  uint64_t v27 = v32;
  uint64_t result = sub_1004B4E04(v19, v32, v20, v33, v34, 1);
  if (v21) {
    return swift_release();
  }
  uint64_t v29 = v27 - v19;
  if (!v19) {
    uint64_t v29 = 0;
  }
  BOOL v30 = __OFSUB__(v29, result);
  uint64_t v31 = v29 - result;
  if (!v30)
  {
    *uint64_t v17 = v31;
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B3D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_1005E17E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Deflate.InputBuffer(0);
  uint64_t result = __chkstk_darwin();
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = (uint64_t *)((char *)&v18 - v13);
  uint64_t v15 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v15 < 1)
    {
      sub_1005E1790();
    }
    else
    {
      sub_1004B4114(v3, (uint64_t)&v18 - v13);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v16 = *v14 + a1;
        if (*v14) {
          uint64_t v17 = v16 + v15;
        }
        else {
          uint64_t v17 = 0;
        }
        if (!*v14) {
          uint64_t v16 = 0;
        }
        *a3 = v16;
        a3[1] = v17;
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v8 + 32))(v10, v14, v7);
        sub_1005E17B0();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1004B3F58()
{
  if (*(unsigned char *)(v0 + 128))
  {
    swift_beginAccess();
    inflateEnd((z_streamp)(v0 + 16));
  }
  else
  {
    swift_beginAccess();
    deflateEnd((z_streamp)(v0 + 16));
  }
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Deflate.Stream()
{
  return self;
}

ValueMetadata *type metadata accessor for Deflate.Stream.Kind()
{
  return &type metadata for Deflate.Stream.Kind;
}

ValueMetadata *type metadata accessor for Deflate.InputKind()
{
  return &type metadata for Deflate.InputKind;
}

ValueMetadata *type metadata accessor for Deflate()
{
  return &type metadata for Deflate;
}

unint64_t sub_1004B4028()
{
  unint64_t result = qword_100716C20;
  if (!qword_100716C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716C20);
  }
  return result;
}

unint64_t sub_1004B4080()
{
  unint64_t result = qword_100716C28;
  if (!qword_100716C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716C28);
  }
  return result;
}

uint64_t type metadata accessor for Deflate.PartialResult(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716C98);
}

uint64_t type metadata accessor for Deflate.InputBuffer(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716DE0);
}

uint64_t sub_1004B4114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Deflate.InputBuffer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B4178(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void *a5)
{
  if (sub_1004B21B8())
  {
    swift_beginAccess();
    *(void *)(a2 + 16) = 0;
    *(_DWORD *)(a2 + 24) = 0;
    return a3(1);
  }
  else
  {
    swift_retain();
    return sub_1004B39B4(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_1004B4224(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t (*a6)(void), uint64_t a7, void *a8)
{
  uint64_t result = sub_1004B4E04(a1, a2, a5, a6, a7, a4);
  if (v8) {
    return v14;
  }
  uint64_t v15 = a2 - a1;
  if (!a1) {
    uint64_t v15 = 0;
  }
  BOOL v16 = __OFADD__(a3, v15);
  uint64_t v17 = a3 + v15;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    BOOL v16 = __OFSUB__(v17, result);
    uint64_t v18 = v17 - result;
    if (!v16)
    {
      *a8 = v18;
      return result != 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B42A8(BOOL *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  *(void *)(a4 + 40) = a2;
  if (a2)
  {
    int v12 = a3 - a2;
    if (a3 - a2 < (uint64_t)&_mh_execute_header) {
      goto LABEL_5;
    }
    swift_release();
    sub_1005E2F10();
    __break(1u);
  }
  int v12 = 0;
LABEL_5:
  *(_DWORD *)(a4 + 48) = v12;
  uint64_t result = sub_1004B2A10(a5);
  if (v5)
  {
LABEL_11:
    *(void *)(a4 + 40) = 0;
    *(_DWORD *)(a4 + 48) = 0;
    swift_release();
    return v6;
  }
  if (a2) {
    uint64_t v14 = a3 - a2;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(unsigned int *)(a4 + 48);
  uint64_t v6 = v14 - v15;
  if (!__OFSUB__(v14, v15))
  {
    *a1 = v15 == 0;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B43D4(BOOL *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v11 = swift_beginAccess();
  *(void *)(a4 + 40) = a2;
  if (a2)
  {
    int v12 = a3 - a2;
    if (a3 - a2 < (uint64_t)&_mh_execute_header) {
      goto LABEL_5;
    }
    uint64_t v11 = sub_1005E2F10();
    __break(1u);
  }
  int v12 = 0;
LABEL_5:
  *(_DWORD *)(a4 + 48) = v12;
  uint64_t result = a5(v11);
  if (v5)
  {
LABEL_11:
    *(void *)(a4 + 40) = 0;
    *(_DWORD *)(a4 + 48) = 0;
    return result;
  }
  if (a2) {
    uint64_t v14 = a3 - a2;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(unsigned int *)(a4 + 48);
  uint64_t result = v14 - v15;
  if (!__OFSUB__(v14, v15))
  {
    *a1 = v15 == 0;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B44E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v19 = a1;
  uint64_t v8 = sub_1005E1720();
  uint64_t v18 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (void *)((char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = swift_slowAlloc();
  uint64_t v12 = sub_1004B43D4(&v21, v11, v11 + a2, a3, a4);
  if (v4)
  {
    swift_slowDealloc();
    swift_willThrow();
    return swift_release();
  }
  v17[1] = a3;
  uint64_t v14 = v18;
  if (a2 < 0)
  {
    __break(1u);
  }
  else if ((v12 & 0x8000000000000000) == 0 && v12 <= a2)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v11;
    *(void *)(v15 + 24) = v11 + a2;
    aBlock[4] = sub_1004B4C80;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100469020;
    aBlock[3] = &unk_1006F93F8;
    BOOL v16 = _Block_copy(aBlock);
    *uint64_t v10 = 0;
    v10[1] = v16;
    (*(void (**)(void *, void, uint64_t))(v14 + 104))(v10, enum case for DispatchData.Deallocator.custom(_:), v8);
    sub_1005E1730();
    swift_release();
    swift_release();
    return v21;
  }
  swift_release();
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

unint64_t sub_1004B475C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005E2C80(33);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = sub_1005E2CB0();
  sub_1005E1E30(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 46;
  v8._object = (void *)0xE100000000000000;
  sub_1005E1E30(v8);
  v9._countAndFlagsBits = sub_1004B4884(a1, a2, a3 & 0xFFFFFFFF000000FFLL);
  sub_1005E1E30(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 10272;
  v10._object = (void *)0xE200000000000000;
  sub_1005E1E30(v10);
  v11._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  sub_1005E1E30(v12);
  return 0xD000000000000017;
}

uint64_t sub_1004B4884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 1263492954;
  switch(HIDWORD(a3))
  {
    case 0xFFFFFFFA:
      uint64_t result = 0x4F49535245565F5ALL;
      break;
    case 0xFFFFFFFB:
      uint64_t v4 = 0x5F4655425F5ALL;
      goto LABEL_6;
    case 0xFFFFFFFC:
      uint64_t v4 = 0x5F4D454D5F5ALL;
LABEL_6:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x5245000000000000;
      break;
    case 0xFFFFFFFD:
      uint64_t result = 0x455F415441445F5ALL;
      break;
    case 0xFFFFFFFE:
    case 1:
      uint64_t result = 0x4D41455254535F5ALL;
      break;
    case 0xFFFFFFFF:
      uint64_t result = 0x4F4E5252455F5ALL;
      break;
    case 0:
      return result;
    case 2:
      uint64_t result = 0x445F4445454E5F5ALL;
      break;
    default:
      uint64_t result = sub_1005E3230();
      break;
  }
  return result;
}

unint64_t sub_1004B4A08()
{
  return sub_1004B475C(*(void *)v0, *(void *)(v0 + 8), *(unsigned __int8 *)(v0 + 16) | ((unint64_t)*(unsigned int *)(v0 + 20) << 32));
}

uint64_t sub_1004B4A1C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, BOOL))
{
  uint64_t result = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (__OFADD__(a2, a3))
  {
    __break(1u);
  }
  else
  {
    if (a1) {
      uint64_t v12 = a1 + a2;
    }
    else {
      uint64_t v12 = 0;
    }
    uint64_t result = a6(a1, v12, a3, a2 + a3 >= result);
    if (result) {
      *a4 = 1;
    }
  }
  return result;
}

uint64_t sub_1004B4AD4()
{
  uint64_t result = sub_1004B4CD0();
  qword_100716A28 = result;
  return result;
}

uint64_t sub_1004B4AF4(char a1)
{
  return sub_1004B2944(a1, v1);
}

uint64_t sub_1004B4B10()
{
  return sub_1004B4F84();
}

uint64_t sub_1004B4B28(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100716C30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004B4B88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004B4BF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for Deflate.Result(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716D30);
}

uint64_t sub_1004B4C70()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B4C80()
{
  uint64_t result = *(void *)(v0 + 16);
  if (result) {
    return swift_slowDealloc();
  }
  return result;
}

uint64_t sub_1004B4C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004B4CA8()
{
  return swift_release();
}

uint64_t sub_1004B4CB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1004B4224(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t (**)(void))(v4 + 24), *(void *)(v4 + 32), *(void **)(v4 + 40));
}

uint64_t sub_1004B4CD0()
{
  uint64_t v3 = 0x700000006;
  int v2 = 0;
  size_t v1 = 4;
  if (!sysctl((int *)&v3, 2u, &v2, &v1, 0, 0)) {
    return v2;
  }
  sub_1005E2C80(20);
  swift_bridgeObjectRelease();
  sub_1005E1050();
  v4._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v4);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

uint64_t sub_1004B4E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, char a6)
{
  swift_beginAccess();
  *(void *)(a3 + 16) = a1;
  if (a1)
  {
    int v12 = a2 - a1;
    if (a2 - a1 < (uint64_t)&_mh_execute_header) {
      goto LABEL_5;
    }
    sub_1005E2F10();
    __break(1u);
  }
  int v12 = 0;
LABEL_5:
  *(_DWORD *)(a3 + 24) = v12;
  uint64_t result = a4(a6 & 1);
  if (!v6) {
    uint64_t result = *(unsigned int *)(a3 + 24);
  }
  *(void *)(a3 + 16) = 0;
  *(_DWORD *)(a3 + 24) = 0;
  return result;
}

uint64_t sub_1004B4EF8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  return sub_1004B4A1C(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, BOOL))(v4 + 24));
}

unint64_t sub_1004B4F04()
{
  unint64_t result = qword_100716C38;
  if (!qword_100716C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716C38);
  }
  return result;
}

uint64_t sub_1004B4F58()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B4F68(uint64_t a1)
{
  return sub_1004B387C(a1, v1);
}

uint64_t sub_1004B4F84()
{
  return sub_1004B4178(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

ValueMetadata *type metadata accessor for Deflate.Error()
{
  return &type metadata for Deflate.Error;
}

char *sub_1004B4FB8(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    Swift::String v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    Swift::String v10 = &a1[v9];
    Swift::String v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Deflate.InputBuffer(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      swift_storeEnumTagMultiPayload();
    }
    a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  }
  return a1;
}

uint64_t sub_1004B5114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v7(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Deflate.InputBuffer(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
  }
  return result;
}

char *sub_1004B51E0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  Swift::String v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Deflate.InputBuffer(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1004B52EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    Swift::String v10 = (const void *)(a2 + v8);
    sub_1004B4BF0(a1 + v8, type metadata accessor for Deflate.InputBuffer);
    uint64_t v11 = type metadata accessor for Deflate.InputBuffer(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_1004B5444(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  Swift::String v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Deflate.InputBuffer(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1004B5550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    Swift::String v10 = (const void *)(a2 + v8);
    sub_1004B4BF0(a1 + v8, type metadata accessor for Deflate.InputBuffer);
    uint64_t v11 = type metadata accessor for Deflate.InputBuffer(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1004B56A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B56BC);
}

uint64_t sub_1004B56BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for Deflate.InputBuffer(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return v14 - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1004B57CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B57E0);
}

uint64_t sub_1004B57E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1005E17E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for Deflate.InputBuffer(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1004B58F0()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Deflate.InputBuffer(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *_s15IMAP2Connection7DeflateO9InputKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004B5A8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Deflate.Stream.OutputStatus()
{
  return &type metadata for Deflate.Stream.OutputStatus;
}

uint64_t *sub_1004B5AC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1004B5BA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1004B5C34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1004B5CE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1004B5D78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1004B5E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B5E1C);
}

uint64_t sub_1004B5E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1004B5E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B5E9C);
}

uint64_t sub_1004B5E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1004B5F0C()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1004B5FB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1005E17E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1004B60A8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_1005E17E0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1004B6120(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1005E17E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1004B61D4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004B4BF0((uint64_t)a1, type metadata accessor for Deflate.InputBuffer);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1005E17E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1004B62AC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1005E17E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1004B6360(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004B4BF0((uint64_t)a1, type metadata accessor for Deflate.InputBuffer);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1005E17E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1004B6438()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1004B64CC()
{
  unint64_t result = qword_100716E18;
  if (!qword_100716E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716E18);
  }
  return result;
}

ValueMetadata *type metadata accessor for Deflate.Statistics()
{
  return &type metadata for Deflate.Statistics;
}

uint64_t sub_1004B653C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  v19[1] = type metadata accessor for Deflate.InputBuffer(0);
  __chkstk_darwin();
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Deflate.Result(0);
  __chkstk_darwin();
  uint64_t v20 = (uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100716E20);
  __chkstk_darwin();
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s12OutputHelperV5ChunkVMa(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s12OutputHelperVMa(0);
  uint64_t v12 = v1 + *(int *)(v11 + 24);
  sub_1004B6938(v12, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004B69A0((uint64_t)v6);
  }
  else
  {
    sub_1004B6A00((uint64_t)v6, (uint64_t)v10);
    uint64_t v13 = sub_1005E17E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v3, v10, v13);
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = v22;
    sub_1004B158C((uint64_t)v3, v10[*(int *)(v7 + 20)], v20);
    if (v14)
    {
      sub_1004B6A64((uint64_t)v3, type metadata accessor for Deflate.InputBuffer);
      sub_1004B69A0(v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v12, 1, 1, v7);
      return sub_1004B6A64((uint64_t)v10, _s12OutputHelperV5ChunkVMa);
    }
    uint64_t v22 = 0;
    sub_1004B6A64((uint64_t)v3, type metadata accessor for Deflate.InputBuffer);
    uint64_t v16 = v20;
    sub_1005E17A0();
    sub_1004B6A64(v16, type metadata accessor for Deflate.Result);
    sub_1004B69A0(v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v12, 1, 1, v7);
    sub_1004B6A64((uint64_t)v10, _s12OutputHelperV5ChunkVMa);
  }
  uint64_t v17 = v1 + *(int *)(v11 + 20);
  uint64_t v18 = sub_1005E17E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v17, v18);
}

uint64_t _s12OutputHelperV5ChunkVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100716F20);
}

uint64_t _s12OutputHelperVMa(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_100716E80);
}

uint64_t sub_1004B6938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100716E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B69A0(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100716E20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004B6A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12OutputHelperV5ChunkVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B6A64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1004B6AC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1005E17E0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = _s12OutputHelperV5ChunkVMa(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10000566C(&qword_100716E20);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v10);
      v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1004B6C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1005E17E0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = _s12OutputHelperV5ChunkVMa(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8)) {
    v6(v7, v5);
  }
  return swift_release();
}

void *sub_1004B6D88(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005E17E0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = _s12OutputHelperV5ChunkVMa(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000566C(&qword_100716E20);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v12[*(int *)(v14 + 20)] = v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  return a1;
}

void *sub_1004B6F14(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005E17E0();
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v21 + 24);
  v10(v7, v8, v9);
  uint64_t v23 = a2;
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = _s12OutputHelperV5ChunkVMa(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v22 = (uint64_t)v12;
  LODWORD(v12) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (v12)
  {
    if (!v17)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v22, v13, v9);
      *(unsigned char *)(v22 + *(int *)(v14 + 20)) = v13[*(int *)(v14 + 20)];
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v22, 0, 1, v14);
      goto LABEL_9;
    }
    size_t v18 = *(void *)(*(void *)(sub_10000566C(&qword_100716E20) - 8) + 64);
    uint64_t v19 = (void *)v22;
  }
  else
  {
    if (!v17)
    {
      v10((char *)v22, v13, v9);
      *(unsigned char *)(v22 + *(int *)(v14 + 20)) = v13[*(int *)(v14 + 20)];
      goto LABEL_9;
    }
    sub_1004B6A64(v22, _s12OutputHelperV5ChunkVMa);
    size_t v18 = *(void *)(*(void *)(sub_10000566C(&qword_100716E20) - 8) + 64);
    uint64_t v19 = (void *)v22;
  }
  memcpy(v19, v13, v18);
LABEL_9:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)v23 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1004B7180(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005E17E0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = _s12OutputHelperV5ChunkVMa(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10000566C(&qword_100716E20);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v12[*(int *)(v14 + 20)] = v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *sub_1004B7308(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005E17E0();
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v21 + 40);
  v10(v7, v8, v9);
  uint64_t v23 = a2;
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = _s12OutputHelperV5ChunkVMa(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v22 = (uint64_t)v12;
  LODWORD(v12) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (v12)
  {
    if (!v17)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v22, v13, v9);
      *(unsigned char *)(v22 + *(int *)(v14 + 20)) = v13[*(int *)(v14 + 20)];
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v22, 0, 1, v14);
      goto LABEL_9;
    }
    size_t v18 = *(void *)(*(void *)(sub_10000566C(&qword_100716E20) - 8) + 64);
    uint64_t v19 = (void *)v22;
  }
  else
  {
    if (!v17)
    {
      v10((char *)v22, v13, v9);
      *(unsigned char *)(v22 + *(int *)(v14 + 20)) = v13[*(int *)(v14 + 20)];
      goto LABEL_9;
    }
    sub_1004B6A64(v22, _s12OutputHelperV5ChunkVMa);
    size_t v18 = *(void *)(*(void *)(sub_10000566C(&qword_100716E20) - 8) + 64);
    uint64_t v19 = (void *)v22;
  }
  memcpy(v19, v13, v18);
LABEL_9:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)v23 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_1004B756C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B7580);
}

uint64_t sub_1004B7580(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_10000566C(&qword_100716E20);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1004B7694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B76A8);
}

uint64_t sub_1004B76A8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005E17E0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_10000566C(&qword_100716E20);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v13(a1 + v11, a2, a2, v9);
}

void sub_1004B77B8()
{
  sub_1005E17E0();
  if (v0 <= 0x3F)
  {
    sub_1004B789C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1004B789C()
{
  if (!qword_100716E90)
  {
    _s12OutputHelperV5ChunkVMa(255);
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100716E90);
    }
  }
}

void *sub_1004B78F4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1004B79C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004B7A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004B7AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004B7B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004B7BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B7BC4);
}

uint64_t sub_1004B7BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1004B7C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B7C94);
}

uint64_t sub_1004B7C94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E17E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1004B7D50()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t Event.Payload.shortLogIdentifier.getter(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = 0xD00000000000001ALL;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v28 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v29 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v30 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v31 = *(void *)(v28 + 32);
      uint64_t v32 = *(void *)(v28 + 40);
      int64_t v33 = *(void *)(v31 + 16);
      uint64_t v96 = _swiftEmptyArrayStorage;
      sub_1004B885C(0, v33, 0);
      uint64_t v34 = v96;
      ConnectionCommandIDSet.makeIterator()(v30, v31, v32);
      if (!v33) {
        goto LABEL_33;
      }
      do
      {
        sub_1005E3020();
        if (v82) {
          goto LABEL_52;
        }
        uint64_t v35 = sub_1005E1CA0();
        uint64_t v37 = v36;
        uint64_t v96 = v34;
        unint64_t v39 = v34[2];
        unint64_t v38 = v34[3];
        if (v39 >= v38 >> 1)
        {
          sub_1004B885C(v38 > 1, v39 + 1, 1);
          uint64_t v34 = v96;
        }
        v34[2] = v39 + 1;
        char v40 = &v34[2 * v39];
        void v40[4] = v35;
        v40[5] = v37;
        --v33;
      }
      while (v33);
LABEL_33:
      sub_1005E3020();
      if ((v82 & 1) == 0)
      {
        unint64_t v66 = v81;
        do
        {
          LOBYTE(v81) = v66;
          HIDWORD(v81) = HIDWORD(v66);
          uint64_t v67 = sub_1005E1CA0();
          uint64_t v69 = v68;
          uint64_t v96 = v34;
          unint64_t v71 = v34[2];
          unint64_t v70 = v34[3];
          if (v71 >= v70 >> 1)
          {
            sub_1004B885C(v70 > 1, v71 + 1, 1);
            uint64_t v34 = v96;
          }
          v34[2] = v71 + 1;
          uint64_t v72 = &v34[2 * v71];
          v72[4] = v67;
          v72[5] = v69;
          sub_1005E3020();
          unint64_t v66 = v81;
        }
        while (v82 != 1);
      }
      swift_release();
      unint64_t v81 = (unint64_t)v34;
      sub_10000566C(&qword_100715740);
      sub_10044B13C();
      uint64_t v60 = sub_1005E1A80();
      uint64_t v62 = v61;
      swift_release();
      unint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_1005E2C80(29);
      v103._countAndFlagsBits = 0xD000000000000015;
      v103._object = (void *)0x80000001005EB3F0;
      sub_1005E1E30(v103);
      uint64_t v96 = v29;
      sub_1005E2E90();
      v104._countAndFlagsBits = 8069161;
      v104._object = (void *)0xE300000000000000;
      sub_1005E1E30(v104);
      v105._countAndFlagsBits = v60;
      v105._object = v62;
      sub_1005E1E30(v105);
      goto LABEL_36;
    case 2uLL:
      uint64_t v41 = a1 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      int v43 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v44 = *(void *)(v41 + 32);
      uint64_t v45 = *(void *)(v41 + 40);
      int v46 = *(_DWORD *)(v41 + 48);
      char v47 = *(unsigned char *)(v41 + 52);
      uint64_t v48 = *(void *)(v41 + 56);
      int v49 = *(_DWORD *)(v41 + 64);
      char v50 = *(unsigned char *)(v41 + 68);
      LODWORD(v80) = *(_DWORD *)(v41 + 72);
      LODWORD(v79) = *(unsigned __int8 *)(v41 + 76);
      uint64_t v78 = *(void *)(v41 + 80);
      int v51 = *(unsigned __int8 *)(v41 + 88);
      int v76 = *(unsigned __int8 *)(v41 + 89);
      int v77 = v51;
      int v75 = *(unsigned __int8 *)(v41 + 90);
      uint64_t v96 = 0;
      unint64_t v97 = 0xE000000000000000;
      v98._countAndFlagsBits = 0x656C657320646944;
      v98._object = (void *)0xEC00000027207463;
      sub_1005E1E30(v98);
      unint64_t v81 = v42;
      LODWORD(v82) = v43;
      uint64_t v83 = v44;
      uint64_t v84 = v45;
      int v85 = v46;
      char v86 = v47;
      uint64_t v87 = v48;
      int v88 = v49;
      char v89 = v50;
      int v90 = v80;
      char v91 = v79;
      uint64_t v92 = v78;
      char v93 = v77;
      char v94 = v76;
      char v95 = v75;
      sub_1005E2E90();
      v99._countAndFlagsBits = 39;
      v99._object = (void *)0xE100000000000000;
      sub_1005E1E30(v99);
      return (unint64_t)v96;
    case 3uLL:
      uint64_t v52 = swift_projectBox();
      sub_100086AE0(v52, (uint64_t)v4);
      unint64_t v81 = 8234;
      unint64_t v82 = 0xE200000000000000;
      v100._countAndFlagsBits = UntaggedResponse.name.getter();
      sub_1005E1E30(v100);
      swift_bridgeObjectRelease();
      unint64_t v5 = v81;
      sub_1001D6E50((uint64_t)v4);
      return v5;
    case 4uLL:
      uint64_t v53 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v54 = *(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
      if (!*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30))
      {
        unint64_t v81 = 0;
        unint64_t v82 = 0xE000000000000000;
        v107._countAndFlagsBits = Tag.debugDescription.getter(v53 | (v54 << 32));
        sub_1005E1E30(v107);
        swift_bridgeObjectRelease();
        v55._countAndFlagsBits = 4935456;
        goto LABEL_45;
      }
      if (*(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30) == 1)
      {
        unint64_t v81 = 0;
        unint64_t v82 = 0xE000000000000000;
        v101._countAndFlagsBits = Tag.debugDescription.getter(v53 | (unint64_t)(v54 << 32));
        sub_1005E1E30(v101);
        swift_bridgeObjectRelease();
        v55._countAndFlagsBits = 5197344;
LABEL_45:
        v55._object = (void *)0xE300000000000000;
        goto LABEL_47;
      }
      unint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      v108._countAndFlagsBits = Tag.debugDescription.getter(v53 | (unint64_t)(v54 << 32));
      sub_1005E1E30(v108);
      swift_bridgeObjectRelease();
      v55._countAndFlagsBits = 1145127456;
      v55._object = (void *)0xE400000000000000;
LABEL_47:
      sub_1005E1E30(v55);
      return v81;
    case 5uLL:
      uint64_t v56 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      if (!v56) {
        return 0xD000000000000018;
      }
      unint64_t v58 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v57 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      unint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_100485030(v58, v57, v56);
      sub_100485030(v58, v57, v56);
      swift_bridgeObjectRetain();
      sub_1005E2C80(27);
      swift_bridgeObjectRelease();
      uint64_t v96 = (void *)0xD000000000000019;
      unint64_t v97 = 0x80000001005EB3D0;
      unint64_t v81 = v58;
      unint64_t v82 = v57;
      uint64_t v83 = v56;
      sub_10044AE60(v58);
      swift_bridgeObjectRetain();
      v102._countAndFlagsBits = sub_1005E1CC0();
      sub_1005E1E30(v102);
      swift_bridgeObjectRelease();
      sub_1004831AC(v58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10048316C(v58, v57, v56);
      return (unint64_t)v96;
    case 6uLL:
      return v5;
    case 7uLL:
      return 0xD000000000000020;
    case 8uLL:
      if (a1 == 0x8000000000000008) {
        unint64_t v59 = 0x3E7974706D653CLL;
      }
      else {
        unint64_t v59 = 0xD000000000000010;
      }
      if (a1 == 0x8000000000000000) {
        return 0xD000000000000014;
      }
      else {
        return v59;
      }
    default:
      uint64_t v6 = *(void *)(a1 + 16);
      int64_t v7 = *(void *)(v6 + 16);
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (!v7) {
        goto LABEL_35;
      }
      uint64_t v96 = _swiftEmptyArrayStorage;
      uint64_t v79 = v6;
      sub_1004B885C(0, v7, 0);
      uint64_t v9 = v79;
      uint64_t v8 = v96;
      int64_t v10 = sub_1000D38D0(v79);
      int v12 = v11;
      char v14 = v13 & 1;
      uint64_t v80 = v9 + 56;
      do
      {
        if (v10 < 0 || v10 >= 1 << *(unsigned char *)(v9 + 32))
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          JUMPOUT(0x1004B8664);
        }
        if (((*(void *)(v80 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_50;
        }
        if (*(_DWORD *)(v9 + 36) != v12) {
          goto LABEL_51;
        }
        uint64_t v15 = *(void *)(v9 + 48) + 32 * v10;
        unint64_t v17 = *(void *)v15;
        unint64_t v16 = *(void *)(v15 + 8);
        uint64_t v18 = *(void *)(v15 + 16);
        LOBYTE(v15) = *(unsigned char *)(v15 + 24);
        unint64_t v81 = v17;
        unint64_t v82 = v16;
        uint64_t v83 = v18;
        LOBYTE(v84) = v15;
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1005E1CA0();
        uint64_t v21 = v20;
        uint64_t v96 = v8;
        unint64_t v23 = v8[2];
        unint64_t v22 = v8[3];
        if (v23 >= v22 >> 1)
        {
          sub_1004B885C(v22 > 1, v23 + 1, 1);
          uint64_t v9 = v79;
          uint64_t v8 = v96;
        }
        v8[2] = v23 + 1;
        uint64_t v24 = &v8[2 * v23];
        v24[4] = v19;
        v24[5] = v21;
        int64_t v25 = sub_1000D3974(v10, v12, v14 & 1, v9);
        int64_t v10 = v25;
        int v12 = v26;
        char v14 = v27 & 1;
        --v7;
      }
      while (v7);
      sub_100060FF0(v25, v26, v27 & 1);
LABEL_35:
      unint64_t v81 = (unint64_t)v8;
      sub_10000566C(&qword_100715740);
      sub_10044B13C();
      uint64_t v63 = sub_1005E1A80();
      uint64_t v65 = v64;
      swift_bridgeObjectRelease();
      unint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_1005E2C80(33);
      swift_bridgeObjectRelease();
      unint64_t v81 = 0xD00000000000001ELL;
      unint64_t v82 = 0x80000001005EB410;
      v106._countAndFlagsBits = v63;
      v106._object = v65;
      sub_1005E1E30(v106);
LABEL_36:
      swift_bridgeObjectRelease();
      v55._countAndFlagsBits = 125;
      v55._object = (void *)0xE100000000000000;
      goto LABEL_47;
  }
}

unint64_t Event.payload.getter()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_1004849C8(v1);
  return v1;
}

unint64_t Event.payload.setter(uint64_t a1)
{
  unint64_t result = sub_100484A20(*(void *)(v1 + 8));
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t Event.runningCommandIDs.getter()
{
  uint64_t v1 = *(unsigned int *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Event.runningCommandIDs.setter(int a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(_DWORD *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  return result;
}

Swift::Int sub_1004B8774(unint64_t *a1, unint64_t *a2)
{
  return _s15IMAP2Connection5EventV7PayloadO21__derived_enum_equalsySbAE_AEtFZ_0(*a1, *a2);
}

unint64_t Event.Payload.forEachCommand(_:)(unint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 60 == 4)
  {
    uint64_t v4 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))result;
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
    unint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    uint64_t v8 = *(void *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
    uint64_t v9 = *(unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
    sub_100483498(v6, v7, v8, v9);
    v4(v5, v6, v7, v8, v9);
    return sub_1004832E0(v6, v7, v8, v9);
  }
  return result;
}

BOOL Event.Payload.didFail.getter(unint64_t a1)
{
  return a1 >> 60 == 1;
}

uint64_t sub_1004B883C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044F558(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1004B885C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044F6B8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1004B887C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044F824(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1004B889C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044F9A8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1004B88BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044FAF8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1004B88DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044FC48(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1004B88FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044FDD4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1004B891C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10044FF34(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1004B893C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100450090(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

Swift::Int _s15IMAP2Connection5EventV7PayloadO21__derived_enum_equalsySbAE_AEtFZ_0(unint64_t a1, unint64_t a2)
{
  type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin();
  uint64_t v5 = (unint64_t *)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v7 = (char *)&v51 - v6;
  switch(a1 >> 60)
  {
    case 1uLL:
      if (a2 >> 60 == 1)
      {
        uint64_t v38 = a1 & 0xFFFFFFFFFFFFFFFLL;
        int v39 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v40 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        uint64_t v42 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        int v43 = *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v45 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v44 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        if (_s15IMAP2Connection07CommandB0C12RecentErrorsV23__derived_struct_equalsySbAE_AEtFZ_0(*(void *)(v38 + 16), v42) & 1) != 0&& v39 == v43&& (sub_100485E14(v41, v45) & 1) != 0&& (sub_100485E14(v40, v44))
        {
          goto LABEL_33;
        }
      }
      goto LABEL_35;
    case 2uLL:
      long long v21 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      long long v52 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v53 = v21;
      v54[0] = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      *(_OWORD *)((char *)v54 + 11) = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x4B);
      long long v51 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      if (a2 >> 60 != 2) {
        goto LABEL_35;
      }
      long long v22 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      long long v56 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v57 = v22;
      v58[0] = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x40);
      *(_OWORD *)((char *)v58 + 11) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x4B);
      long long v55 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      char v20 = _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v51, (uint64_t)&v55);
      return v20 & 1;
    case 3uLL:
      if (a2 >> 60 != 3) {
        goto LABEL_35;
      }
      uint64_t v23 = swift_projectBox();
      uint64_t v24 = swift_projectBox();
      sub_100086AE0(v23, (uint64_t)v7);
      sub_100086AE0(v24, (uint64_t)v5);
      char v20 = static UntaggedResponse.__derived_enum_equals(_:_:)((uint64_t)v7, v5);
      sub_1001D6E50((uint64_t)v5);
      sub_1001D6E50((uint64_t)v7);
      return v20 & 1;
    case 4uLL:
      if (a2 >> 60 != 4) {
        goto LABEL_35;
      }
      uint64_t v25 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v26 = a2 & 0xFFFFFFFFFFFFFFFLL;
      if (*(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        || *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x14) != *(_DWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x14))
      {
        goto LABEL_35;
      }
      unint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v30 = *(void *)(v25 + 40);
      uint64_t v31 = *(unsigned __int8 *)(v25 + 48);
      uint64_t v33 = *(void *)(v26 + 32);
      uint64_t v32 = *(void *)(v26 + 40);
      unint64_t v34 = *(void *)(v26 + 24);
      uint64_t v35 = *(unsigned __int8 *)(v26 + 48);
      sub_100483498(*(void *)(v25 + 24), *(void *)(v25 + 32), v30, *(unsigned char *)(v25 + 48));
      sub_100483498(v34, v33, v32, v35);
      char v36 = static CommandCompletionResponse.__derived_enum_equals(_:_:)(v28, v29, v30, v31, v34, v33, v32, v35);
      sub_1004832E0(v34, v33, v32, v35);
      sub_1004832E0(v28, v29, v30, v31);
      return v36 & 1;
    case 5uLL:
      long long v46 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v51 = *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v52 = v46;
      *(void *)&long long v53 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      if (a2 >> 60 != 5) {
        goto LABEL_35;
      }
      long long v47 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v55 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v56 = v47;
      *(void *)&long long v57 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v62 = v51;
      int v63 = DWORD2(v51);
      sub_1004B91BC((uint64_t)&v52, (uint64_t)v64);
      uint64_t v59 = v55;
      int v60 = DWORD2(v55);
      sub_1004B91BC((uint64_t)&v56, (uint64_t)v61);
      sub_10002292C((uint64_t)&v62);
      sub_1004B9224((uint64_t)v64);
      sub_10002292C((uint64_t)&v59);
      sub_1004B9224((uint64_t)v61);
      char v20 = _s15IMAP2Connection23MailboxSelectionFailureV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)&v51, (uint64_t)&v55);
      sub_10001D550((uint64_t)&v59);
      sub_1004B9254((uint64_t)v61);
      sub_10001D550((uint64_t)&v62);
      sub_1004B9254((uint64_t)v64);
      return v20 & 1;
    case 6uLL:
      if (a2 >> 60 != 6) {
        goto LABEL_35;
      }
      Swift::Int v48 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      return sub_100013158(v48, v49);
    case 7uLL:
      if (a2 >> 60 != 7) {
        goto LABEL_35;
      }
      char v20 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) ^ *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10) ^ 1;
      return v20 & 1;
    case 8uLL:
      unint64_t v50 = 0x8000000000000000;
      if (a1 == 0x8000000000000000 || (unint64_t v50 = 0x8000000000000008, a1 == 0x8000000000000008))
      {
        if (a2 == v50)
        {
LABEL_33:
          char v20 = 1;
          return v20 & 1;
        }
      }
      else if (a2 == 0x8000000000000010)
      {
        goto LABEL_33;
      }
LABEL_35:
      char v20 = 0;
      return v20 & 1;
    default:
      uint64_t v8 = *(void *)(a1 + 16);
      long long v9 = *(_OWORD *)(a1 + 152);
      v54[4] = *(_OWORD *)(a1 + 136);
      v54[5] = v9;
      long long v10 = *(_OWORD *)(a1 + 184);
      v54[6] = *(_OWORD *)(a1 + 168);
      v54[7] = v10;
      long long v11 = *(_OWORD *)(a1 + 88);
      v54[0] = *(_OWORD *)(a1 + 72);
      v54[1] = v11;
      long long v12 = *(_OWORD *)(a1 + 120);
      v54[2] = *(_OWORD *)(a1 + 104);
      v54[3] = v12;
      long long v13 = *(_OWORD *)(a1 + 40);
      long long v51 = *(_OWORD *)(a1 + 24);
      long long v52 = v13;
      long long v53 = *(_OWORD *)(a1 + 56);
      if (a2 >> 60) {
        goto LABEL_35;
      }
      uint64_t v14 = *(void *)(a2 + 16);
      long long v15 = *(_OWORD *)(a2 + 152);
      v58[4] = *(_OWORD *)(a2 + 136);
      v58[5] = v15;
      long long v16 = *(_OWORD *)(a2 + 184);
      v58[6] = *(_OWORD *)(a2 + 168);
      v58[7] = v16;
      long long v17 = *(_OWORD *)(a2 + 88);
      v58[0] = *(_OWORD *)(a2 + 72);
      v58[1] = v17;
      long long v18 = *(_OWORD *)(a2 + 120);
      v58[2] = *(_OWORD *)(a2 + 104);
      v58[3] = v18;
      long long v19 = *(_OWORD *)(a2 + 40);
      long long v55 = *(_OWORD *)(a2 + 24);
      long long v56 = v19;
      long long v57 = *(_OWORD *)(a2 + 56);
      if ((sub_100485B4C(v8, v14) & 1) == 0) {
        goto LABEL_35;
      }
      char v20 = static ServerID.__derived_struct_equals(_:_:)(&v51, &v55);
      return v20 & 1;
  }
}

uint64_t initializeWithCopy for Event(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  sub_1004849C8(v4);
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for Event(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  unint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_100484A20(v4);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t *initializeBufferWithCopyOfBuffer for Event.Payload(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1004849C8(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for Event.Payload(unint64_t *a1)
{
  return sub_100484A20(*a1);
}

unint64_t *assignWithCopy for Event.Payload(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1004849C8(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_100484A20(v4);
  return a1;
}

unint64_t *assignWithTake for Event.Payload(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_100484A20(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for Event.Payload(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x78 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 120);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x77) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Event.Payload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x77)
  {
    *(void *)uint64_t result = a2 - 120;
    if (a3 >= 0x78) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x78) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1004B9164(void *a1)
{
  uint64_t v1 = *a1 >> 60;
  if (v1 <= 7) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 8;
  }
}

unint64_t *sub_1004B9180(unint64_t *result, uint64_t a2)
{
  if (a2 < 8)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 60;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 8);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for Event.Payload()
{
  return &type metadata for Event.Payload;
}

uint64_t sub_1004B91BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100716F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004B9224(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004B9254(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004B9288(__int16 a1)
{
  swift_retain();
  sub_10000566C(&qword_100717158);
  sub_10000566C(&qword_100717078);
  if (swift_dynamicCast())
  {
    sub_100021BFC(v6, (uint64_t)&v8);
    sub_10003BCDC(&v8, v9);
    sub_1005E0640();
    swift_release();
    uint64_t v1 = *(void *)&v6[0];
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v8);
  }
  else
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_100007A48((uint64_t)v6, &qword_100717080);
    long long v8 = xmmword_100622570;
    swift_retain();
    *(void *)((char *)v6 + 7) = 0;
    *(void *)&v6[0] = 0;
    sub_1005E3020();
    if ((a1 & 0x100) == 0)
    {
      LOBYTE(v2) = 0;
      char v3 = a1;
      do
      {
        *((unsigned char *)v6 + v2) = v3;
        unsigned int v2 = v2 + 1;
        if ((v2 >> 8)) {
          __break(1u);
        }
        if (v2 == 14)
        {
          a1 = v6[0];
          sub_1005E0870();
          LOBYTE(v2) = 0;
        }
        sub_1005E3020();
        char v3 = a1;
      }
      while ((a1 & 0x100) == 0);
      if ((_BYTE)v2) {
        sub_1005E0870();
      }
    }
    swift_release();
    swift_release();
    return v8;
  }
  return v1;
}

uint64_t sub_1004B94C4(unint64_t a1, unint64_t a2)
{
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_10000566C(&qword_100717078);
  if (swift_dynamicCast())
  {
    sub_100021BFC(v38, (uint64_t)&v41);
    sub_10003BCDC(&v41, v43);
    sub_1005E0640();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_100007A48((uint64_t)v38, &qword_100717080);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1005E2D30();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    long long v8 = sub_1004C3274(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    Swift::Int v11 = sub_1005E1E80();
    goto LABEL_17;
  }
LABEL_69:
  long long v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    Swift::Int v11 = HIBYTE(v3) & 0xF;
  }
  else {
    Swift::Int v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_1004C32D8(v11);
  *((void *)&v38[0] + 1) = v12;
  __chkstk_darwin(*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_1004C2534((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1004C48F4);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_1005E0850();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_1000C6E1C(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_1005E1EC0();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_1005E2D30();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_1000C6E1C(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_1005E1E90();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_1005E0870();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  long long v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_1005E0870();
    sub_100057EFC(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_100057EFC((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_1004B99F4(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100717098);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E1660();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E17E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  sub_10000566C(&qword_100717078);
  if (!swift_dynamicCast())
  {
    uint64_t v32 = v5;
    uint64_t v33 = v6;
    uint64_t v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_100007A48((uint64_t)v35, &qword_100717080);
    sub_1004C49D8(&qword_1007170A0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchData);
    sub_1005E1F90();
    long long v12 = v37;
    if (*((void *)&v37 + 1) >> 60 != 15)
    {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
      v35[0] = v12;
      return *(void *)&v35[0];
    }
    unint64_t v31 = *((void *)&v37 + 1);
    uint64_t v13 = sub_1005E1F80();
    *(void *)&v35[0] = sub_1004C32D8(v13);
    *((void *)&v35[0] + 1) = v14;
    __chkstk_darwin(*(void *)&v35[0]);
    uint64_t v30 = a1;
    *(&v29 - 2) = a1;
    sub_1004C2838((void (*)(uint64_t, uint64_t))sub_1004C49BC);
    uint64_t v15 = *(void *)&v4[*(int *)(v2 + 48)];
    uint64_t v16 = v32;
    uint64_t v17 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v8, v4, v32);
    uint64_t v18 = *((void *)&v35[0] + 1) >> 62;
    unint64_t v19 = v31;
    switch(*((void *)&v35[0] + 1) >> 62)
    {
      case 1:
        LODWORD(v20) = DWORD1(v35[0]) - LODWORD(v35[0]);
        if (__OFSUB__(DWORD1(v35[0]), v35[0])) {
          goto LABEL_35;
        }
        uint64_t v20 = (int)v20;
LABEL_10:
        if (v15 != v20)
        {
          if (v18)
          {
            uint64_t v24 = v30;
            if (v18 == 1)
            {
              if (*(uint64_t *)&v35[0] >> 32 < v15) {
                goto LABEL_33;
              }
            }
            else if (*(void *)(*(void *)&v35[0] + 24) < v15)
            {
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
            }
          }
          else
          {
            uint64_t v25 = BYTE14(v35[0]);
LABEL_29:
            uint64_t v24 = v30;
            if (v25 < v15) {
              goto LABEL_33;
            }
          }
          sub_1005E0850();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
          (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v24, v9);
          return *(void *)&v35[0];
        }
LABEL_17:
        sub_1004C49D8(&qword_1007170A8, 255, (void (*)(uint64_t))&type metadata accessor for DispatchDataIterator);
        *(void *)&long long v37 = 0;
        *(void *)((char *)&v37 + 7) = 0;
        sub_1005E2950();
        if (BYTE1(v34) == 1)
        {
          uint64_t v26 = v12;
        }
        else
        {
          LOBYTE(v27) = 0;
          do
          {
            *((unsigned char *)&v37 + v27) = v34;
            unsigned int v27 = v27 + 1;
            if ((v27 >> 8)) {
              goto LABEL_34;
            }
            BYTE14(v37) = v27;
            if (v27 == 14)
            {
              *(void *)&long long v34 = v37;
              DWORD2(v34) = DWORD2(v37);
              WORD6(v34) = WORD6(v37);
              sub_1005E0870();
              LOBYTE(v27) = 0;
              BYTE14(v37) = 0;
            }
            sub_1005E2950();
          }
          while ((BYTE1(v34) & 1) == 0);
          uint64_t v26 = v12;
          unint64_t v19 = v31;
          if ((_BYTE)v27)
          {
            *(void *)&long long v34 = v37;
            DWORD2(v34) = DWORD2(v37);
            WORD6(v34) = WORD6(v37);
            sub_1005E0870();
            sub_100057EFC(v12, v19);
            BYTE14(v37) = 0;
            (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v16);
LABEL_27:
            (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v30, v9);
            return *(void *)&v35[0];
          }
        }
        (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v16);
        sub_100057EFC(v26, v19);
        goto LABEL_27;
      case 2:
        uint64_t v22 = *(void *)(*(void *)&v35[0] + 16);
        uint64_t v21 = *(void *)(*(void *)&v35[0] + 24);
        BOOL v23 = __OFSUB__(v21, v22);
        uint64_t v20 = v21 - v22;
        if (!v23) {
          goto LABEL_10;
        }
        goto LABEL_36;
      case 3:
        if (!v15) {
          goto LABEL_17;
        }
        uint64_t v25 = 0;
        goto LABEL_29;
      default:
        uint64_t v20 = BYTE14(v35[0]);
        goto LABEL_10;
    }
  }
  sub_100021BFC(v35, (uint64_t)&v37);
  sub_10003BCDC(&v37, v38);
  sub_1005E0640();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  v35[0] = v34;
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v37);
  return *(void *)&v35[0];
}

uint64_t sub_1004BA07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a5;
  uint64_t v33 = a4;
  uint64_t v31 = a3;
  uint64_t v30 = sub_1005E0D40();
  uint64_t v7 = *(void *)(v30 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v30);
  uint64_t v29 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1005E11A0();
  uint64_t v9 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v11 = (uint64_t (**)(uint64_t))((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10000566C(&qword_100717088);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1004C3378(a1, a2);
  v28[1] = v15;
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  char v35 = a1;
  int v36 = HIDWORD(a1);
  sub_1005E2E90();
  sub_10000566C(&qword_100717090);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1005F6740;
  *(void *)(v16 + 32) = v15;
  uint64_t v37 = v16;
  sub_1005E20E0();
  sub_1005E1190();
  swift_allocObject();
  swift_retain();
  uint64_t v17 = sub_1005E1160();
  sub_1005E1790();
  uint64_t v18 = sub_1005E17E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 0, 1, v18);
  uint64_t v20 = v29;
  uint64_t v19 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v29, v31, v30);
  unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23 + v21, v20, v19);
  uint64_t v24 = (void *)(v23 + v22);
  uint64_t v25 = v34;
  void *v24 = v33;
  v24[1] = v25;
  *uint64_t v11 = sub_1004C4C50;
  v11[1] = (uint64_t (*)(uint64_t))v23;
  uint64_t v26 = v32;
  (*(void (**)(uint64_t (**)(uint64_t), void, uint64_t))(v9 + 104))(v11, enum case for NWConnection.SendCompletion.contentProcessed(_:), v32);
  swift_retain();
  sub_1004BC790((uint64_t)v14, v17, 1, (uint64_t)v11);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v9 + 8))(v11, v26);
  return sub_100007A48((uint64_t)v14, &qword_100717088);
}

uint64_t sub_1004BA438(uint64_t a1)
{
  uint64_t v2 = sub_1005E0D40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  v21[1] = v4;
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005E11A0();
  uint64_t v6 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v8 = (uint64_t (**)(uint64_t))((char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10000566C(&qword_100717088);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100715638 != -1) {
    swift_once();
  }
  sub_1005E14C0();
  swift_allocObject();
  swift_retain();
  uint64_t v12 = sub_1005E14A0();
  uint64_t v24 = &type metadata for Bool;
  LOBYTE(v23) = 1;
  sub_1005E14E0();
  sub_10000566C(&qword_100717090);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005F6740;
  *(void *)(v13 + 32) = v12;
  uint64_t v23 = v13;
  sub_1005E20E0();
  sub_1005E1190();
  swift_allocObject();
  swift_retain();
  uint64_t v14 = sub_1005E1160();
  sub_1005E1790();
  uint64_t v15 = sub_1005E17E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 0, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v16 = v2;
  unint64_t v17 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v18 + v17, v5, v16);
  *uint64_t v8 = sub_1004C4B38;
  v8[1] = (uint64_t (*)(uint64_t))v18;
  uint64_t v19 = v22;
  (*(void (**)(uint64_t (**)(uint64_t), void, uint64_t))(v6 + 104))(v8, enum case for NWConnection.SendCompletion.contentProcessed(_:), v22);
  sub_1004BC790((uint64_t)v11, v14, 1, (uint64_t)v8);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v6 + 8))(v8, v19);
  return sub_100007A48((uint64_t)v11, &qword_100717088);
}

uint64_t sub_1004BA81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E11A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10000566C(&qword_100717088);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100715638 != -1) {
    swift_once();
  }
  sub_1005E14C0();
  swift_allocObject();
  swift_retain();
  uint64_t v13 = sub_1005E14A0();
  v19[3] = sub_1005E15D0();
  v19[0] = a1;
  swift_retain();
  sub_1005E14E0();
  sub_10000566C(&qword_100717090);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1005F6740;
  *(void *)(v14 + 32) = v13;
  v19[0] = v14;
  sub_1005E20E0();
  sub_1005E1190();
  swift_allocObject();
  swift_retain();
  uint64_t v15 = sub_1005E1160();
  sub_1005E1790();
  uint64_t v16 = sub_1005E17E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 0, 1, v16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  void *v9 = sub_1004C49B8;
  v9[1] = v17;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for NWConnection.SendCompletion.contentProcessed(_:), v6);
  swift_retain();
  sub_1004BC790((uint64_t)v12, v15, 1, (uint64_t)v9);
  swift_release();
  swift_release();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  return sub_100007A48((uint64_t)v12, &qword_100717088);
}

uint64_t sub_1004BAB54(int a1)
{
  uint64_t v2 = sub_1005E11A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_100717088);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100715638 != -1) {
    swift_once();
  }
  sub_1005E14C0();
  swift_allocObject();
  swift_retain();
  uint64_t v9 = sub_1005E14A0();
  v14[3] = &type metadata for ClientCommand.EncodingOptions;
  LOWORD(v14[0]) = a1 & 0x1FF;
  BYTE2(v14[0]) = BYTE2(a1) & 1;
  sub_1005E14E0();
  sub_10000566C(&qword_100717090);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005F6740;
  *(void *)(v10 + 32) = v9;
  v14[0] = v10;
  sub_1005E20E0();
  sub_1005E1190();
  swift_allocObject();
  swift_retain();
  uint64_t v11 = sub_1005E1160();
  sub_1005E1790();
  uint64_t v12 = sub_1005E17E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for NWConnection.SendCompletion.idempotent(_:), v2);
  sub_1004BC790((uint64_t)v8, v11, 1, (uint64_t)v5);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_100007A48((uint64_t)v8, &qword_100717088);
}

uint64_t sub_1004BAE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E11A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000566C(&qword_100717088);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100715638 != -1) {
    swift_once();
  }
  sub_1005E14C0();
  swift_allocObject();
  swift_retain();
  uint64_t v11 = sub_1005E14A0();
  v17[3] = &type metadata for Bool;
  LOBYTE(v17[0]) = 1;
  sub_1005E14E0();
  sub_10000566C(&qword_100717090);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005F6740;
  *(void *)(v12 + 32) = v11;
  v17[0] = v12;
  sub_1005E20E0();
  sub_1005E1190();
  swift_allocObject();
  swift_retain();
  uint64_t v13 = sub_1005E1160();
  sub_1005E1790();
  uint64_t v14 = sub_1005E17E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  void *v7 = sub_1004C49B8;
  v7[1] = v15;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for NWConnection.SendCompletion.contentProcessed(_:), v4);
  swift_retain();
  sub_1004BC790((uint64_t)v10, v13, 1, (uint64_t)v7);
  swift_release();
  swift_release();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  return sub_100007A48((uint64_t)v10, &qword_100717088);
}

uint64_t sub_1004BB190()
{
  uint64_t v0 = sub_1005E11A0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000566C(&qword_100717088);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100715638 != -1) {
    swift_once();
  }
  sub_1005E14C0();
  swift_allocObject();
  swift_retain();
  uint64_t v7 = sub_1005E14A0();
  uint64_t v12[3] = &_s14descr1006B9599C10WorkaroundON;
  sub_1005E14E0();
  sub_10000566C(&qword_100717090);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1005F6740;
  *(void *)(v8 + 32) = v7;
  v12[0] = v8;
  sub_1005E20E0();
  sub_1005E1190();
  swift_allocObject();
  swift_retain();
  uint64_t v9 = sub_1005E1160();
  sub_1005E1790();
  uint64_t v10 = sub_1005E17E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for NWConnection.SendCompletion.idempotent(_:), v0);
  sub_1004BC790((uint64_t)v6, v9, 1, (uint64_t)v3);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_100007A48((uint64_t)v6, &qword_100717088);
}

uint64_t sub_1004BB47C()
{
  uint64_t v0 = sub_1005E0ED0();
  sub_10034E5B4(v0, qword_100716F60);
  sub_1003461B0(v0, (uint64_t)qword_100716F60);
  return sub_1005E0EC0();
}

uint64_t sub_1004BB4F8()
{
  type metadata accessor for Framer();
  sub_1004C49D8(&qword_100717050, v0, (void (*)(uint64_t))type metadata accessor for Framer);
  sub_1005E1480();
  swift_allocObject();
  uint64_t result = sub_1005E1470();
  qword_1007622B8 = result;
  return result;
}

uint64_t sub_1004BB584()
{
  ServerResponseFramingParser.init()((uint64_t)v24);
  long long v1 = v24[9];
  *(_OWORD *)(v0 + 144) = v24[8];
  *(_OWORD *)(v0 + 160) = v1;
  long long v2 = v24[11];
  *(_OWORD *)(v0 + 176) = v24[10];
  *(_OWORD *)(v0 + 192) = v2;
  long long v3 = v24[5];
  *(_OWORD *)(v0 + 80) = v24[4];
  *(_OWORD *)(v0 + 96) = v3;
  long long v4 = v24[7];
  *(_OWORD *)(v0 + 112) = v24[6];
  *(_OWORD *)(v0 + 128) = v4;
  long long v5 = v24[1];
  *(_OWORD *)(v0 + 16) = v24[0];
  *(_OWORD *)(v0 + 32) = v5;
  long long v6 = v24[3];
  *(_OWORD *)(v0 + 48) = v24[2];
  *(_OWORD *)(v0 + 64) = v6;
  *(void *)(v0 + 208) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 216) = 0;
  *(void *)(v0 + 224) = 0;
  *(void *)(v0 + 232) = 0;
  *(_WORD *)(v0 + 240) = 256;
  uint64_t v7 = ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor();
  char v8 = v7[1];
  char v9 = v7[2];
  *(unsigned char *)(v0 + 242) = *v7;
  *(unsigned char *)(v0 + 243) = v8;
  *(unsigned char *)(v0 + 244) = v9;
  *(void *)(v0 + 248) = 0;
  *(void *)(v0 + 256) = 0;
  if (qword_100715630 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1005E0ED0();
  sub_1003461B0(v10, (uint64_t)qword_100716F60);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v11 = sub_1005E0EB0();
  os_log_type_t v12 = sub_1005E2580();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 68158210;
    LODWORD(v21[0]) = 2;
    sub_1005E2960();
    *(_WORD *)(v13 + 8) = 256;
    sub_1005E15B0();
    sub_1005E1510();
    if (v22)
    {
      if (swift_dynamicCast())
      {
        char v14 = v19;
        swift_release();
        goto LABEL_10;
      }
    }
    else
    {
      sub_100007A48((uint64_t)v21, &qword_100717048);
    }
    swift_release();
    char v14 = *ConnectionLoggerID.invalid.unsafeMutableAddressor();
LABEL_10:
    LOBYTE(v21[0]) = v14;
    sub_1005E2960();
    *(_WORD *)(v13 + 11) = 2082;
    sub_1005E15B0();
    sub_1005E1510();
    if (v22)
    {
      if (swift_dynamicCast())
      {
        uint64_t v15 = v20;
        swift_release();
LABEL_15:
        uint64_t v16 = ConnectionID.debugDescription.getter(v15);
        v21[0] = sub_100481E54(v16, v17, &v23);
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%.*hhx-%{public}s] New IMAP framer", (uint8_t *)v13, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
        return v0;
      }
    }
    else
    {
      sub_100007A48((uint64_t)v21, &qword_100717048);
    }
    swift_release();
    uint64_t v15 = *((unsigned int *)ConnectionLoggerID.invalid.unsafeMutableAddressor() + 1);
    goto LABEL_15;
  }

  swift_release_n();
  return v0;
}

unint64_t sub_1004BB90C()
{
  sub_1005E15B0();
  sub_1005E1510();
  if (!v7)
  {
    sub_100007A48((uint64_t)v6, &qword_100717048);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    swift_release();
    long long v2 = ConnectionLoggerID.invalid.unsafeMutableAddressor();
    unsigned int v0 = *v2;
    uint64_t v1 = *((unsigned int *)v2 + 1);
    return v0 | (unint64_t)(v1 << 32);
  }
  unsigned int v0 = v4;
  uint64_t v1 = v5;
  swift_release();
  return v0 | (unint64_t)(v1 << 32);
}

uint64_t sub_1004BB9D0@<X0>(uint64_t a1@<X8>)
{
  sub_1005E15B0();
  sub_1005E1510();
  long long v2 = v21;
  sub_100007A48((uint64_t)v20, &qword_100717048);
  swift_release();
  if (v2)
  {
    if (qword_100715630 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1005E0ED0();
    sub_1003461B0(v3, (uint64_t)qword_100716F60);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unsigned __int8 v4 = sub_1005E0EB0();
    os_log_type_t v5 = sub_1005E2580();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      v20[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 68158210;
      sub_1005E2960();
      *(_WORD *)(v6 + 8) = 256;
      sub_1004BB90C();
      sub_1005E2960();
      *(_WORD *)(v6 + 11) = 2082;
      unint64_t v7 = sub_1004BB90C();
      uint64_t v8 = ConnectionID.debugDescription.getter(HIDWORD(v7));
      sub_100481E54(v8, v9, v20);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[%.*hhx-%{public}s] (post STARTTLS) IMAP framer loaded.", (uint8_t *)v6, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    sub_1005E14C0();
    swift_retain();
    sub_1005E14B0();
    unint64_t v21 = &type metadata for Bool;
    LOBYTE(v20[0]) = 1;
    sub_1005E14E0();
    sub_1005E1590();
    swift_release();
  }
  else
  {
    if (qword_100715630 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1005E0ED0();
    sub_1003461B0(v10, (uint64_t)qword_100716F60);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v11 = sub_1005E0EB0();
    os_log_type_t v12 = sub_1005E2580();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      v20[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 68158210;
      sub_1005E2960();
      *(_WORD *)(v13 + 8) = 256;
      sub_1004BB90C();
      sub_1005E2960();
      *(_WORD *)(v13 + 11) = 2082;
      unint64_t v14 = sub_1004BB90C();
      uint64_t v15 = ConnectionID.debugDescription.getter(HIDWORD(v14));
      sub_100481E54(v15, v16, v20);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%.*hhx-%{public}s] IMAP framer loaded.", (uint8_t *)v13, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  uint64_t v17 = enum case for NWProtocolFramer.StartResult.ready(_:);
  uint64_t v18 = sub_1005E1490();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(a1, v17, v18);
}

uint64_t sub_1004BBE9C()
{
  long long v1 = *(_OWORD *)(v0 + 160);
  v8[8] = *(_OWORD *)(v0 + 144);
  v8[9] = v1;
  long long v2 = *(_OWORD *)(v0 + 192);
  v8[10] = *(_OWORD *)(v0 + 176);
  v8[11] = v2;
  long long v3 = *(_OWORD *)(v0 + 96);
  v8[4] = *(_OWORD *)(v0 + 80);
  v8[5] = v3;
  long long v4 = *(_OWORD *)(v0 + 128);
  v8[6] = *(_OWORD *)(v0 + 112);
  v8[7] = v4;
  long long v5 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v5;
  long long v6 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  v8[3] = v6;
  sub_1004C44F8((uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_1004C44B8(*(void *)(v0 + 248));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Framer()
{
  return self;
}

uint64_t sub_1004BBF34()
{
  return 0x347650414D49;
}

uint64_t sub_1004BBF48()
{
  uint64_t v0 = swift_allocObject();
  sub_1004BB584();
  return v0;
}

uint64_t sub_1004BBF88@<X0>(uint64_t a1@<X8>)
{
  return sub_1004BB9D0(a1);
}

uint64_t sub_1004BBFA4(uint64_t a1)
{
  sub_10000566C(&qword_100716650);
  __chkstk_darwin();
  while (!sub_1004BCDC8())
    ;
  sub_1004BD030(a1);
  sub_1004BDAAC(a1);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 192)) {
    return 0;
  }
  else {
    return *(void *)(v1 + 184);
  }
}

uint64_t sub_1004BC150(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v53 = a4;
  uint64_t v54 = a3;
  uint64_t v47 = a2;
  uint64_t v5 = sub_1005E0D40();
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  __chkstk_darwin(v5);
  Swift::Int v48 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1005E0D80();
  uint64_t v7 = *(void *)(v55 - 8);
  uint64_t v8 = __chkstk_darwin(v55);
  long long v51 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = sub_10000566C(&qword_100716650);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005E1650();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  char v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v44 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v52 = a1;
  sub_1000079E4(a1, (uint64_t)v14, &qword_100716650);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_100716650);
    uint64_t v25 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, v25, v55);
    uint64_t v26 = sub_1005E0D70();
    os_signpost_type_t v27 = sub_1005E26F0();
    if (sub_1005E28A0())
    {
      uint64_t v28 = v48;
      uint64_t v29 = v49;
      uint64_t v30 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v47, v50);
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      os_signpost_id_t v32 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v26, v27, v32, "Connection.didEnqueue", "", v31, 2u);
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v55);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v55);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v24, v14, v15);
    uint64_t v33 = tracingSignposter.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v51, v33, v55);
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v34(v22, v24, v15);
    char v35 = sub_1005E0D70();
    int v46 = sub_1005E26F0();
    if (sub_1005E28A0())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v47, v50);
      int v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v57 = v47;
      uint64_t v45 = v36;
      *(_DWORD *)int v36 = 136315138;
      uint64_t v44 = v36 + 4;
      v34(v19, v22, v15);
      uint64_t v37 = sub_1005E1CC0();
      uint64_t v56 = sub_100481E54(v37, v38, &v57);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v16 + 8);
      v39(v22, v15);
      long long v40 = v48;
      os_signpost_id_t v41 = sub_1005E0D30();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v35, (os_signpost_type_t)v46, v41, "Connection.didFailToSendData", "%s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v51, v55);
      v39(v24, v15);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v40, v50);
    }
    else
    {

      uint64_t v42 = *(void (**)(char *, uint64_t))(v16 + 8);
      v42(v22, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v51, v55);
      v42(v24, v15);
    }
  }
  return v54(v52);
}

uint64_t sub_1004BC790(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v39 = a4;
  int v37 = a3;
  uint64_t v38 = a2;
  uint64_t v5 = sub_10000566C(&qword_100717088);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v36 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = sub_1005E17E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v35 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v35 - v21;
  uint64_t v23 = a1;
  sub_1000079E4(a1, (uint64_t)v9, &qword_100717088);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v24((uint64_t)v9, 1, v10) == 1)
  {
    char v35 = v14;
    uint64_t v25 = v17;
    sub_100007A48((uint64_t)v9, &qword_100717088);
    uint64_t v26 = v23;
    uint64_t v27 = v36;
    sub_1000079E4(v26, v36, &qword_100717088);
    if (v24(v27, 1, v10) == 1)
    {
      sub_100007A48(v27, &qword_100717088);
      return sub_1005E12A0();
    }
    else
    {
      uint64_t v30 = v17;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v17, v27, v10);
      uint64_t v31 = (uint64_t)v35;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v35, v25, v10);
      uint64_t v32 = sub_1004B99F4(v31);
      unint64_t v34 = v33;
      sub_1005E12A0();
      sub_1000094D4(v32, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v30, v10);
    }
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v29(v20, v9, v10);
    v29(v22, v20, v10);
    sub_1005E1290();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v22, v10);
  }
}

uint64_t sub_1004BCAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1005E0D40();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E0D80();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = tracingSignposter.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = sub_1005E0D70();
  os_signpost_type_t v13 = sub_1005E26F0();
  if (sub_1005E28A0())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    unint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v14 = 0;
    os_signpost_id_t v15 = sub_1005E0D30();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, v13, v15, "Connection.didFlush", "", v14, 2u);
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1004BCD20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, void, uint64_t))
{
  if (a3)
  {
    swift_retain();
    uint64_t v9 = sub_1004C4698();
    uint64_t v10 = sub_1005E1180();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 1;
  }
  a6(v9, v10, a4 & 1, a5);
  swift_bridgeObjectRelease();
  return sub_1004C4A98(v9);
}

BOOL sub_1004BCDC8()
{
  char v0 = sub_1005E1540();
  if (qword_100715630 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005E0ED0();
  sub_1003461B0(v1, (uint64_t)qword_100716F60);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  long long v2 = sub_1005E0EB0();
  os_log_type_t v3 = sub_1005E2590();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 68158466;
    sub_1005E2960();
    *(_WORD *)(v4 + 8) = 256;
    sub_1004BB90C();
    sub_1005E2960();
    *(_WORD *)(v4 + 11) = 2082;
    unint64_t v5 = sub_1004BB90C();
    uint64_t v6 = ConnectionID.debugDescription.getter(HIDWORD(v5));
    sub_100481E54(v6, v7, &v9);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 21) = 1024;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%.*hhx-%{public}s] parseInput() returned %{BOOL}d", (uint8_t *)v4, 0x1Bu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return (v0 & 1) == 0;
}

uint64_t sub_1004BD030(uint64_t a1)
{
  uint64_t v64 = _s19CommandOutputBufferV7ElementOMa(0);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin();
  uint64_t v66 = (uint64_t)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Response(0);
  __chkstk_darwin();
  unint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v76 = (char *)&v57 - v6;
  sub_10000566C(&qword_100717068);
  __chkstk_darwin();
  uint64_t v74 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = *(void *)(type metadata accessor for ServerResponseFramingParser.Frame(0) - 8);
  __chkstk_darwin();
  uint64_t v79 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for ResponseOrContinuationRequest(0);
  uint64_t v9 = *(void *)(v81 - 8);
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v57 - v11;
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)&v57 - v13;
  __chkstk_darwin();
  uint64_t v72 = (uint64_t)&v57 - v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v57 - v15;
  swift_beginAccess();
  uint64_t v17 = ServerResponseFramingParser.popAllFrames()();
  swift_endAccess();
  uint64_t v18 = sub_1004D16A8(0, *(void *)(v17 + 16), 0, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v19 = v17;
  unint64_t v20 = v18;
  uint64_t v21 = *(void *)(v17 + 16);
  if (!v21)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    sub_1005E14C0();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1005E14B0();
    uint64_t v83 = sub_10000566C(&qword_100717070);
    v82[0] = v20;
    swift_bridgeObjectRetain();
    sub_1005E14E0();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1005E1590();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v61 = v5;
  uint64_t v78 = v1 + 208;
  uint64_t v22 = v19;
  unint64_t v23 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  uint64_t v57 = v22;
  uint64_t v24 = v22 + v23;
  uint64_t v67 = v9;
  unint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  unint64_t v71 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v69 = *(void *)(v77 + 72);
  uint64_t v68 = (char *)&type metadata for Any + 8;
  uint64_t v77 = v1;
  uint64_t v59 = a1;
  while (1)
  {
    sub_1004C4624(v24, v79, type metadata accessor for ServerResponseFramingParser.Frame);
    sub_1005E15B0();
    sub_1005E1510();
    if (v83)
    {
      if (swift_dynamicCast())
      {
        uint64_t v25 = v84;
        uint64_t v26 = v85;
        swift_release();
        goto LABEL_10;
      }
    }
    else
    {
      sub_100007A48((uint64_t)v82, &qword_100717048);
    }
    swift_release();
    uint64_t v27 = ConnectionLoggerID.invalid.unsafeMutableAddressor();
    uint64_t v25 = *v27;
    uint64_t v26 = *((unsigned int *)v27 + 1);
LABEL_10:
    uint64_t v28 = (uint64_t)v76;
    uint64_t v29 = v80;
    sub_1004BECAC(v79, v25 | (v26 << 32), (uint64_t)v16);
    uint64_t v80 = v29;
    if (v29)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v30 = v77;
    uint64_t v31 = v75;
    if ((*(unsigned char *)(v77 + 241) & 1) == 0)
    {
      sub_1004C4624((uint64_t)v16, v75, type metadata accessor for ResponseOrContinuationRequest);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        unint64_t v65 = v20;
        sub_1004C45BC(v31, v28, type metadata accessor for Response);
        uint64_t v32 = (uint64_t)v61;
        sub_1004C4624(v28, (uint64_t)v61, type metadata accessor for Response);
        uint64_t v33 = v28;
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          Swift::String v34 = *(Swift::String *)v32;
          unint64_t v35 = *(void *)(v32 + 16);
          uint64_t v36 = *(void *)(v32 + 24);
          uint64_t v37 = *(void *)(v32 + 32);
          unsigned __int8 v38 = *(unsigned char *)(v32 + 40);
          *(IMAP2Protocol::Tag_optional *)&long long v39 = Tag.init(_:)(v34);
          uint64_t v58 = v39;
          int v60 = DWORD2(v39);
          *((void *)&v39 + 1) = v36;
          uint64_t v30 = v77;
          sub_1004832E0(v35, *((uint64_t *)&v39 + 1), v37, v38);
          sub_1004C6A5C(v33, type metadata accessor for Response);
          unint64_t v20 = v65;
          if ((v60 & 1) == 0 && (*(unsigned char *)(v30 + 241) & 1) == 0 && (*(unsigned char *)(v30 + 240) & 1) == 0)
          {
            uint64_t v40 = *(void *)(v30 + 232);
            if (__PAIR64__(HIDWORD(v40), v40) == __PAIR64__(HIDWORD(v58), v58))
            {
              *(void *)(v30 + 232) = 0;
              *(_WORD *)(v30 + 240) = 1;
            }
          }
        }
        else
        {
          sub_1004C6A5C(v28, type metadata accessor for Response);
          sub_1004C6A5C(v32, type metadata accessor for Response);
          unint64_t v20 = v65;
        }
      }
      else
      {
        sub_1004C6A5C(v31, type metadata accessor for ResponseOrContinuationRequest);
      }
    }
    sub_1004C4624((uint64_t)v16, (uint64_t)v12, type metadata accessor for ResponseOrContinuationRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1004C6A5C((uint64_t)v12, type metadata accessor for ResponseOrContinuationRequest);
LABEL_31:
      uint64_t v48 = v74;
      sub_1004C4624((uint64_t)v16, v74, type metadata accessor for ResponseOrContinuationRequest);
      uint64_t v47 = 0;
      goto LABEL_32;
    }
    uint64_t result = sub_10049C1BC(*(void *)v12, *((void *)v12 + 1), *((void *)v12 + 2), v12[24]);
    if (!*(void *)(*(void *)v78 + 16)) {
      goto LABEL_29;
    }
    uint64_t v42 = v66;
    sub_1004C4624(*(void *)v78 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80)), v66, _s19CommandOutputBufferV7ElementOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2) {
      break;
    }
    uint64_t result = sub_1004C6A5C(v42, _s19CommandOutputBufferV7ElementOMa);
    uint64_t v44 = *(void *)(v30 + 216);
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_42;
    }
    *(void *)(v30 + 216) = v46;
    uint64_t v47 = 1;
    uint64_t v48 = v74;
LABEL_32:
    uint64_t v51 = v81;
    (*v71)(v48, v47, 1, v81);
    swift_endAccess();
    if ((*v70)(v48, 1, v51) == 1)
    {
      sub_1004C6A5C((uint64_t)v16, type metadata accessor for ResponseOrContinuationRequest);
      sub_100007A48(v48, &qword_100717068);
    }
    else
    {
      uint64_t v52 = v48;
      uint64_t v53 = v72;
      sub_1004C45BC(v52, v72, type metadata accessor for ResponseOrContinuationRequest);
      sub_1004C4624(v53, v73, type metadata accessor for ResponseOrContinuationRequest);
      unint64_t v55 = *(void *)(v20 + 16);
      unint64_t v54 = *(void *)(v20 + 24);
      if (v55 >= v54 >> 1) {
        unint64_t v20 = sub_1004D16A8(v54 > 1, v55 + 1, 1, v20);
      }
      uint64_t v56 = v67;
      *(void *)(v20 + 16) = v55 + 1;
      sub_1004C45BC(v73, v20+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v55, type metadata accessor for ResponseOrContinuationRequest);
      sub_1004C6A5C(v72, type metadata accessor for ResponseOrContinuationRequest);
      sub_1004C6A5C((uint64_t)v16, type metadata accessor for ResponseOrContinuationRequest);
    }
    v24 += v69;
    if (!--v21) {
      goto LABEL_39;
    }
  }
  if (EnumCaseMultiPayload != 3)
  {
    sub_10048A85C();
    uint64_t v80 = swift_allocError();
    swift_willThrow();
    sub_1004C6A5C(v66, _s19CommandOutputBufferV7ElementOMa);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1004C6A5C((uint64_t)v16, type metadata accessor for ResponseOrContinuationRequest);
    return swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1004C6A5C(v66, _s19CommandOutputBufferV7ElementOMa);
LABEL_29:
  uint64_t v49 = *(void *)(v30 + 224);
  BOOL v45 = __OFADD__(v49, 1);
  uint64_t v50 = v49 + 1;
  if (!v45)
  {
    *(void *)(v30 + 224) = v50;
    goto LABEL_31;
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1004BDAAC(uint64_t a1)
{
  _s11CompressionO12OutgoingDataVMa();
  __chkstk_darwin();
  unint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)(v1 + 208);
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 208) + 16))
  {
    sub_1004C0DBC(a1, (uint64_t)v5);
    if (v2)
    {
      if (qword_100715630 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1005E0ED0();
      sub_1003461B0(v8, (uint64_t)qword_100716F60);
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v9 = sub_1005E0EB0();
      os_log_type_t v10 = sub_1005E25A0();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = (void *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v38 = v31;
        *(_DWORD *)uint64_t v11 = 68158466;
        LODWORD(v32) = 2;
        sub_1005E2960();
        *(_WORD *)(v11 + 8) = 256;
        LOBYTE(v32) = sub_1004BB90C();
        sub_1005E2960();
        *(_WORD *)(v11 + 11) = 2082;
        unint64_t v13 = sub_1004BB90C();
        uint64_t v14 = ConnectionID.debugDescription.getter(HIDWORD(v13));
        uint64_t v32 = sub_100481E54(v14, v15, &v38);
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 21) = 2112;
        uint64_t v16 = sub_1005E06E0();
        uint64_t v32 = v16;
        sub_1005E2960();
        void *v12 = v16;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%.*hhx-%{public}s] Protocol error while sending. %@", (uint8_t *)v11, 0x1Fu);
        sub_10000566C(&qword_100717A10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_errorRelease();
        swift_errorRelease();
      }

      return swift_willThrow();
    }
    else
    {
      sub_1004C34AC((uint64_t)v5);
      if (*(void *)(*v6 + 16))
      {
        uint64_t v17 = *(void *)(v1 + 232);
        char v18 = *(unsigned char *)(v1 + 240);
        char v19 = *(unsigned char *)(v1 + 241);
        uint64_t v33 = *v6;
        long long v34 = *(_OWORD *)(v1 + 216);
        uint64_t v35 = v17;
        char v36 = v18;
        char v37 = v19;
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1004885A8();
        swift_bridgeObjectRelease();
        if (qword_100715630 != -1) {
          swift_once();
        }
        uint64_t v21 = sub_1005E0ED0();
        sub_1003461B0(v21, (uint64_t)qword_100716F60);
        swift_retain_n();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v22 = sub_1005E0EB0();
        os_log_type_t v23 = sub_1005E2590();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v30 = v20;
          uint64_t v25 = v24;
          uint64_t v31 = swift_slowAlloc();
          uint64_t v38 = v31;
          *(_DWORD *)uint64_t v25 = 68158466;
          LODWORD(v32) = 2;
          sub_1005E2960();
          *(_WORD *)(v25 + 8) = 256;
          LOBYTE(v32) = sub_1004BB90C();
          sub_1005E2960();
          *(_WORD *)(v25 + 11) = 2082;
          unint64_t v26 = sub_1004BB90C();
          uint64_t v27 = ConnectionID.debugDescription.getter(HIDWORD(v26));
          uint64_t v32 = sub_100481E54(v27, v28, &v38);
          sub_1005E2960();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 21) = 2048;
          uint64_t v32 = v30;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "[%.*hhx-%{public}s] Output buffer still holds %{iec-bytes}ld. Waiting for server response.", (uint8_t *)v25, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();
        }
      }
      return sub_1004C6A5C((uint64_t)v5, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
    }
  }
  return result;
}

uint64_t sub_1004BE050(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10000566C(&qword_100716650);
  __chkstk_darwin();
  uint64_t v10 = 0;
  if ((a3 & 1) == 0)
  {
    if (a1)
    {
      uint64_t v10 = a2 - a1;
      if (a2 != a1) {
        sub_1004BE3AC(a1, a2, a6);
      }
    }
  }
  return v10;
}

void sub_1004BE3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v54 = sub_1005E0D80();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v57 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100716668);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1005E0D40();
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v48 - v11;
  if (a1) {
    uint64_t v13 = a2 - a1;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v15 = *(void *)(v3 + 248);
  uint64_t v14 = *(void *)(v3 + 256);
  if (!a1) {
    a2 = 0;
  }
  swift_retain();
  sub_1004C4478(v15);
  uint64_t v16 = v74;
  uint64_t v17 = sub_1004C89D8(a1, a2, v15, v14, v3);
  swift_release();
  sub_1004C44B8(v15);
  if (!v16)
  {
    uint64_t v50 = v13;
    uint64_t v51 = v10;
    uint64_t v74 = v3;
    char v18 = v57;
    uint64_t v19 = v53;
    uint64_t v20 = v54;
    uint64_t v52 = v17;
    sub_1004BEB98((uint64_t)v8);
    uint64_t v21 = v56;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v8, 1, v58) == 1)
    {
      sub_100007A48((uint64_t)v8, &qword_100716668);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v12, v8, v58);
      tracingSignposter.unsafeMutableAddressor();
      uint64_t v22 = v18;
      uint64_t v23 = v20;
      uint64_t v24 = v22;
      (*(void (**)(void))(v19 + 16))();
      uint64_t v25 = sub_1005E0D70();
      int v49 = sub_1005E26F0();
      if (sub_1005E28A0())
      {
        unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
        uint64_t v27 = v12;
        uint64_t v48 = v12;
        unint64_t v28 = v51;
        v26(v51, v27, v58);
        uint64_t v29 = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 134218240;
        uint64_t v60 = v50;
        sub_1005E2960();
        *(_WORD *)(v29 + 12) = 2048;
        uint64_t v60 = (uint64_t)v52;
        sub_1005E2960();
        os_signpost_id_t v30 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, (os_signpost_type_t)v49, v30, "Connection.didReceiveData", "%ld,%ld", (uint8_t *)v29, 0x16u);
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v19 + 8))(v57, v23);
        uint64_t v31 = *(void (**)(char *, uint64_t))(v21 + 8);
        uint64_t v32 = v58;
        v31(v48, v58);
        v31(v28, v32);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v23);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v58);
      }
    }
    uint64_t v33 = (_OWORD *)v74;
    if (qword_100715630 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1005E0ED0();
    sub_1003461B0(v34, (uint64_t)qword_100716F60);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_retain_n();
    uint64_t v35 = sub_1005E0EB0();
    os_log_type_t v36 = sub_1005E2590();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v61 = v74;
      *(_DWORD *)uint64_t v37 = 68158722;
      LODWORD(v60) = 2;
      sub_1005E2960();
      *(_WORD *)(v37 + 8) = 256;
      LOBYTE(v60) = sub_1004BB90C();
      sub_1005E2960();
      *(_WORD *)(v37 + 11) = 2082;
      unint64_t v38 = sub_1004BB90C();
      uint64_t v39 = ConnectionID.debugDescription.getter(HIDWORD(v38));
      uint64_t v60 = sub_100481E54(v39, v40, &v61);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 21) = 2048;
      uint64_t v60 = (uint64_t)v52;
      sub_1005E2960();
      *(_WORD *)(v37 + 31) = 2048;
      swift_beginAccess();
      long long v41 = v33[10];
      long long v70 = v33[9];
      long long v71 = v41;
      long long v42 = v33[12];
      long long v72 = v33[11];
      long long v73 = v42;
      long long v43 = v33[6];
      long long v66 = v33[5];
      long long v67 = v43;
      long long v44 = v33[8];
      long long v68 = v33[7];
      long long v69 = v44;
      long long v45 = v33[2];
      long long v62 = v33[1];
      long long v63 = v45;
      long long v46 = v33[4];
      long long v64 = v33[3];
      long long v65 = v46;
      uint64_t v47 = ServerResponseFramingParser.count.getter();
      swift_release();
      uint64_t v59 = v47;
      sub_1005E2960();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[%.*hhx-%{public}s] Appending %{iec-bytes}ld to receive buffer. Now has %{iec-bytes}ld.", (uint8_t *)v37, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
  }
}

uint64_t sub_1004BEB34(uint64_t a1, uint64_t a2)
{
  return swift_endAccess();
}

uint64_t sub_1004BEB98@<X0>(uint64_t a1@<X8>)
{
  sub_1005E15B0();
  sub_1005E1510();
  if (v6[3])
  {
    uint64_t v2 = sub_1005E0D40();
    int v3 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, v3 ^ 1u, 1, v2);
  }
  else
  {
    sub_100007A48((uint64_t)v6, &qword_100717048);
    uint64_t v4 = sub_1005E0D40();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  return swift_release();
}

uint64_t sub_1004BECAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for ServerResponseFramingParser.Frame(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004C4624(a1, (uint64_t)v7, type metadata accessor for ServerResponseFramingParser.Frame);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1004C6A5C(a1, type metadata accessor for ServerResponseFramingParser.Frame);
    return sub_1004C45BC((uint64_t)v7, a3, type metadata accessor for ResponseOrContinuationRequest);
  }
  unint64_t v9 = HIDWORD(a2);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v24 = *((void *)v7 + 1);
    unint64_t v46 = *((unsigned int *)v7 + 4);
    uint64_t v47 = HIDWORD(a2);
    unint64_t v45 = *((unsigned int *)v7 + 5);
    uint64_t v25 = *((unsigned __int16 *)v7 + 14);
    uint64_t v26 = v7[30];
    if (qword_100715630 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1005E0ED0();
    sub_1003461B0(v27, (uint64_t)qword_100716F60);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_retain_n();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    uint64_t v14 = sub_1005E0EB0();
    unint64_t v9 = sub_1005E25B0();
    if (!os_log_type_enabled(v14, (os_log_type_t)v9))
    {
      swift_errorRelease();
      swift_errorRelease();
LABEL_18:

      swift_release_n();
      goto LABEL_19;
    }
    uint64_t v43 = v26;
    uint64_t v44 = v25;
    uint64_t v48 = a1;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v51 = v42;
    *(_DWORD *)uint64_t v28 = 68158979;
    LODWORD(v50[0]) = 2;
    sub_1005E2960();
    *(_WORD *)(v28 + 8) = 256;
    LOBYTE(v50[0]) = a2;
    sub_1005E2960();
    *(_WORD *)(v28 + 11) = 2082;
    uint64_t v30 = ConnectionID.debugDescription.getter(v47);
    v50[0] = sub_100481E54(v30, v31, &v51);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 21) = 2112;
    a1 = sub_1005E06E0();
    v50[0] = a1;
    sub_1005E2960();
    *uint64_t v29 = a1;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v28 + 31) = 1040;
    a2 = v46;
    if ((uint64_t)(v45 - v46) < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else
    {
      a1 = v48;
      if ((uint64_t)(v45 - v46) <= 0x7FFFFFFF)
      {
        LODWORD(v50[0]) = v45 - v46;
        sub_1005E2960();
        *(_WORD *)(v28 + 37) = 2101;
        swift_beginAccess();
        uint64_t v49 = *(void *)(v24 + 24) + (v43 | (v44 << 8)) + a2;
        sub_1005E2960();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v9, "[%.*hhx-%{public}s]: Failed to parse: %@. Buffer: %{sensitive}.*P", (uint8_t *)v28, 0x2Fu);
        sub_10000566C(&qword_100717A10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v10 = *((void *)v7 + 1);
  if (!v10)
  {
    if (qword_100715630 == -1)
    {
LABEL_22:
      uint64_t v32 = sub_1005E0ED0();
      sub_1003461B0(v32, (uint64_t)qword_100716F60);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v33 = sub_1005E0EB0();
      os_log_type_t v34 = sub_1005E25B0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v48 = a1;
        uint64_t v37 = (void *)v36;
        uint64_t v47 = swift_slowAlloc();
        v50[0] = v47;
        *(_DWORD *)uint64_t v35 = 68158466;
        LODWORD(v51) = 2;
        sub_1005E2960();
        *(_WORD *)(v35 + 8) = 256;
        LOBYTE(v51) = a2;
        sub_1005E2960();
        *(_WORD *)(v35 + 11) = 2082;
        uint64_t v38 = ConnectionID.debugDescription.getter(v9);
        uint64_t v51 = sub_100481E54(v38, v39, v50);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 21) = 2112;
        uint64_t v40 = sub_1005E06E0();
        uint64_t v51 = v40;
        sub_1005E2960();
        *uint64_t v37 = v40;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "[%.*hhx-%{public}s]: Framing error: %@", (uint8_t *)v35, 0x1Fu);
        sub_10000566C(&qword_100717A10);
        swift_arrayDestroy();
        a1 = v48;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_willThrow();
      return sub_1004C6A5C(a1, type metadata accessor for ServerResponseFramingParser.Frame);
    }
LABEL_28:
    swift_once();
    goto LABEL_22;
  }
  LODWORD(v47) = v7[30];
  LODWORD(v46) = *((unsigned __int16 *)v7 + 14);
  uint64_t v11 = *((unsigned int *)v7 + 6);
  unint64_t v12 = *((void *)v7 + 2);
  if (qword_100715630 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1005E0ED0();
  sub_1003461B0(v13, (uint64_t)qword_100716F60);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_retain_n();
  uint64_t v14 = sub_1005E0EB0();
  os_log_type_t v15 = sub_1005E25B0();
  if (!os_log_type_enabled(v14, v15)) {
    goto LABEL_18;
  }
  uint64_t v48 = a1;
  uint64_t v44 = v12;
  unint64_t v45 = HIDWORD(v12);
  uint64_t v16 = swift_slowAlloc();
  uint64_t v43 = swift_slowAlloc();
  uint64_t v51 = v43;
  *(_DWORD *)uint64_t v16 = 68158723;
  LODWORD(v50[0]) = 2;
  sub_1005E2960();
  *(_WORD *)(v16 + 8) = 256;
  LOBYTE(v50[0]) = a2;
  sub_1005E2960();
  *(_WORD *)(v16 + 11) = 2082;
  uint64_t v17 = ConnectionID.debugDescription.getter(HIDWORD(a2));
  v50[0] = sub_100481E54(v17, v18, &v51);
  sub_1005E2960();
  uint64_t v19 = v44;
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 21) = 1040;
  if ((uint64_t)(v45 - v19) < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if ((uint64_t)(v45 - v19) > 0x7FFFFFFF) {
    goto LABEL_30;
  }
  int v20 = v46 | (v47 << 16);
  unint64_t v21 = v11 & 0xFF000000FFFFFFFFLL | ((*(void *)&v20 & 0xFFFFFFLL) << 32);
  uint64_t v22 = HIWORD(v20);
  LODWORD(v50[0]) = v45 - v19;
  sub_1005E2960();
  *(_WORD *)(v16 + 27) = 2101;
  swift_beginAccess();
  uint64_t v49 = *(void *)(v10 + 24) + v19 + ((v21 >> 24) & 0xFFFF00 | v22);
  sub_1005E2960();
  swift_release_n();
  _os_log_impl((void *)&_mh_execute_header, v14, v15, "[%.*hhx-%{public}s]: Framing error. Buffer: %{sensitive}.*P", (uint8_t *)v16, 0x25u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a1 = v48;
LABEL_19:
  swift_willThrow();
  swift_release();
  return sub_1004C6A5C(a1, type metadata accessor for ServerResponseFramingParser.Frame);
}

uint64_t sub_1004BF61C@<X0>(uint64_t a1@<X8>)
{
  sub_10000566C(&qword_100717058);
  __chkstk_darwin();
  int v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OutboundContent(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E14D0();
  if (!v23)
  {
    uint64_t v11 = &qword_100717048;
    unint64_t v12 = v22;
LABEL_9:
    sub_100007A48((uint64_t)v12, v11);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v8 = v21;
    sub_1005E14D0();
    if (v23)
    {
      int v9 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        swift_release();
        sub_1004C45BC((uint64_t)v3, (uint64_t)v7, type metadata accessor for OutboundContent);
        uint64_t v10 = a1 + *(int *)(sub_10000566C(&qword_100717030) + 48);
        *(void *)a1 = v8;
        sub_1004C45BC((uint64_t)v7, v10, type metadata accessor for OutboundContent);
        type metadata accessor for Framer.OutboundMessage();
        return swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      sub_100007A48((uint64_t)v22, &qword_100717048);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    }
    uint64_t v11 = &qword_100717058;
    unint64_t v12 = v3;
    goto LABEL_9;
  }
LABEL_10:
  sub_1005E14D0();
  if (v23) {
    goto LABEL_11;
  }
  sub_100007A48((uint64_t)v22, &qword_100717048);
  sub_1005E14D0();
  if (v23)
  {
    sub_1005E15D0();
    if (swift_dynamicCast())
    {
      swift_release();
      *(void *)a1 = v21;
      type metadata accessor for Framer.OutboundMessage();
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_100007A48((uint64_t)v22, &qword_100717048);
  }
  sub_1005E14D0();
  if (v23)
  {
    if (swift_dynamicCast())
    {
      swift_release();
      char v14 = BYTE1(v21);
      char v15 = BYTE2(v21);
      *(unsigned char *)a1 = v21;
      *(unsigned char *)(a1 + 1) = v14;
      *(unsigned char *)(a1 + 2) = v15;
      type metadata accessor for Framer.OutboundMessage();
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_100007A48((uint64_t)v22, &qword_100717048);
  }
  sub_1005E14D0();
  if (v23)
  {
LABEL_11:
    swift_release();
    sub_100007A48((uint64_t)v22, &qword_100717048);
    type metadata accessor for Framer.OutboundMessage();
    return swift_storeEnumTagMultiPayload();
  }
  sub_100007A48((uint64_t)v22, &qword_100717048);
  sub_1005E14D0();
  if (v23)
  {
    if (swift_dynamicCast())
    {
      swift_release();
      type metadata accessor for Framer.OutboundMessage();
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_100007A48((uint64_t)v22, &qword_100717048);
  }
  if (qword_100715630 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1005E0ED0();
  sub_1003461B0(v16, (uint64_t)qword_100716F60);
  uint64_t v17 = sub_1005E0EB0();
  os_log_type_t v18 = sub_1005E25A0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Message has no outbound content.", v19, 2u);
    swift_slowDealloc();
  }

  sub_1004C4568();
  swift_allocError();
  swift_willThrow();
  return swift_release();
}

uint64_t sub_1004BFC58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v40 = a2;
  sub_10000566C(&qword_100716668);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v41 = (char *)&v38 - v6;
  if (qword_100715630 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1005E0ED0();
  sub_1003461B0(v7, (uint64_t)qword_100716F60);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v8 = sub_1005E0EB0();
  os_log_type_t v9 = sub_1005E25C0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v39 = v2;
    uint64_t v11 = v10;
    *(void *)&long long v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 68158210;
    LODWORD(v42) = 2;
    sub_1005E2960();
    *(_WORD *)(v11 + 8) = 256;
    LOBYTE(v42) = sub_1004BB90C();
    sub_1005E2960();
    *(_WORD *)(v11 + 11) = 2082;
    unint64_t v12 = sub_1004BB90C();
    uint64_t v13 = ConnectionID.debugDescription.getter(HIDWORD(v12));
    uint64_t v42 = sub_100481E54(v13, v14, (uint64_t *)&v43);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%.*hhx-%{public}s] Adding TLS to the protocol stack.", (uint8_t *)v11, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v39;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v15 = (uint64_t)v41;
  if (qword_100715638 != -1) {
    swift_once();
  }
  sub_1005E1500();
  swift_allocObject();
  swift_retain();
  sub_1005E14F0();
  *((void *)&v44 + 1) = &type metadata for Bool;
  LOBYTE(v43) = 1;
  sub_1005E1520();
  sub_1004BEB98(v15);
  sub_1000079E4(v15, (uint64_t)v5, &qword_100716668);
  uint64_t v16 = sub_1005E0D40();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
  {
    sub_100007A48((uint64_t)v5, &qword_100716668);
    long long v43 = 0u;
    long long v44 = 0u;
  }
  else
  {
    *((void *)&v44 + 1) = v16;
    os_log_type_t v18 = sub_100021E04((uint64_t *)&v43);
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))(v18, v5, v16);
  }
  sub_1005E1520();
  sub_100007A48(v15, &qword_100716668);
  unint64_t v19 = sub_1004BB90C();
  *((void *)&v44 + 1) = &type metadata for ConnectionLoggerID;
  LOBYTE(v43) = v19;
  DWORD1(v43) = HIDWORD(v19);
  sub_1005E1520();
  uint64_t v20 = v56;
  sub_1005E15A0();
  if (v20) {
    return swift_release();
  }
  sub_1005E15A0();
  sub_1005E1560();
  sub_1005E1570();
  sub_1005E15C0();
  ServerResponseFramingParser.init()((uint64_t)v55);
  swift_beginAccess();
  long long v21 = *(_OWORD *)(v3 + 160);
  long long v51 = *(_OWORD *)(v3 + 144);
  long long v52 = v21;
  long long v22 = *(_OWORD *)(v3 + 192);
  long long v53 = *(_OWORD *)(v3 + 176);
  long long v54 = v22;
  long long v23 = *(_OWORD *)(v3 + 96);
  long long v47 = *(_OWORD *)(v3 + 80);
  long long v48 = v23;
  long long v24 = *(_OWORD *)(v3 + 128);
  long long v49 = *(_OWORD *)(v3 + 112);
  long long v50 = v24;
  long long v25 = *(_OWORD *)(v3 + 32);
  long long v43 = *(_OWORD *)(v3 + 16);
  long long v44 = v25;
  long long v26 = *(_OWORD *)(v3 + 64);
  long long v45 = *(_OWORD *)(v3 + 48);
  long long v46 = v26;
  long long v27 = v55[9];
  *(_OWORD *)(v3 + 144) = v55[8];
  *(_OWORD *)(v3 + 160) = v27;
  long long v28 = v55[11];
  *(_OWORD *)(v3 + 176) = v55[10];
  *(_OWORD *)(v3 + 192) = v28;
  long long v29 = v55[5];
  *(_OWORD *)(v3 + 80) = v55[4];
  *(_OWORD *)(v3 + 96) = v29;
  long long v30 = v55[7];
  *(_OWORD *)(v3 + 112) = v55[6];
  *(_OWORD *)(v3 + 128) = v30;
  long long v31 = v55[1];
  *(_OWORD *)(v3 + 16) = v55[0];
  *(_OWORD *)(v3 + 32) = v31;
  long long v32 = v55[3];
  *(_OWORD *)(v3 + 48) = v55[2];
  *(_OWORD *)(v3 + 64) = v32;
  sub_1004C44F8((uint64_t)&v43);
  swift_beginAccess();
  *(void *)(v3 + 208) = _swiftEmptyArrayStorage;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 232) = 0;
  *(_WORD *)(v3 + 240) = 256;
  swift_bridgeObjectRelease();
  uint64_t v33 = (char *)ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor();
  char v34 = *v33;
  char v35 = v33[1];
  char v36 = v33[2];
  uint64_t result = swift_release();
  *(unsigned char *)(v3 + 242) = v34;
  *(unsigned char *)(v3 + 243) = v35;
  *(unsigned char *)(v3 + 244) = v36;
  return result;
}

uint64_t sub_1004C0238()
{
  if (qword_100715630 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005E0ED0();
  sub_1003461B0(v1, (uint64_t)qword_100716F60);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v2 = sub_1005E0EB0();
  os_log_type_t v3 = sub_1005E25C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 68158210;
    sub_1005E2960();
    *(_WORD *)(v4 + 8) = 256;
    sub_1004BB90C();
    sub_1005E2960();
    *(_WORD *)(v4 + 11) = 2082;
    unint64_t v5 = sub_1004BB90C();
    uint64_t v6 = ConnectionID.debugDescription.getter(HIDWORD(v5));
    sub_100481E54(v6, v7, &v12);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%.*hhx-%{public}s] Enabling RFC 4978 compression.", (uint8_t *)v4, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  type metadata accessor for Deflate.Compressor();
  swift_allocObject();
  uint64_t v8 = sub_1004B145C();
  type metadata accessor for Deflate.Decompressor();
  swift_allocObject();
  uint64_t v9 = sub_1004B2BAC();
  uint64_t v10 = *(void *)(v0 + 248);
  *(void *)(v0 + 248) = v8;
  *(void *)(v0 + 256) = v9;
  return sub_1004C44B8(v10);
}

uint64_t sub_1004C0490(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a3;
  uint64_t v4 = v3;
  unint64_t v53 = HIDWORD(a1);
  type metadata accessor for HandshakeReply.Encoded();
  __chkstk_darwin();
  long long v51 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClientCommand.Encoded();
  __chkstk_darwin();
  uint64_t v9 = (void (*)(void))((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = type metadata accessor for ConnectionCommand(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v50 = (uint64_t)&v49 - v12;
  type metadata accessor for ClientCommand(0);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v49 - v15;
  type metadata accessor for OutboundContent(0);
  __chkstk_darwin();
  os_log_type_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004C4624(a2, (uint64_t)v18, type metadata accessor for OutboundContent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1004C45BC((uint64_t)v18, (uint64_t)v16, type metadata accessor for ClientCommand);
    sub_1004C4624((uint64_t)v16, (uint64_t)v14, type metadata accessor for ClientCommand);
    int v25 = *(unsigned __int8 *)(v4 + 242);
    int v26 = *(unsigned __int8 *)(v4 + 243);
    int v27 = *(unsigned __int8 *)(v4 + 244);
    *uint64_t v11 = a1;
    *((_DWORD *)v11 + 1) = v53;
    if (v27) {
      int v28 = 0x10000;
    }
    else {
      int v28 = 0;
    }
    if (v26) {
      int v29 = 256;
    }
    else {
      int v29 = 0;
    }
    ClientCommand.encode(tag:options:)(v29 | v25 | v28, v9);
    sub_1004C6A5C((uint64_t)v14, type metadata accessor for ClientCommand);
    sub_1004C45BC((uint64_t)v9, (uint64_t)&v11[*(int *)(v52 + 20)], (uint64_t (*)(void))type metadata accessor for ClientCommand.Encoded);
    uint64_t v30 = v50;
    sub_1004C45BC((uint64_t)v11, v50, type metadata accessor for ConnectionCommand);
    swift_beginAccess();
    if (!*(void *)(v4 + 224))
    {
      __chkstk_darwin();
      *(&v49 - 2) = v30;
      BOOL v43 = sub_100488F74((void (*)(uint64_t))sub_1004C4414);
      swift_endAccess();
      sub_1004C6A5C(v30, type metadata accessor for ConnectionCommand);
      sub_1004C6A5C((uint64_t)v16, type metadata accessor for ClientCommand);
      return v43;
    }
    sub_10048A808();
    swift_allocError();
    swift_willThrow();
    swift_endAccess();
    sub_1004C6A5C(v30, type metadata accessor for ConnectionCommand);
    long long v31 = type metadata accessor for ClientCommand;
    uint64_t v32 = (uint64_t)v16;
LABEL_18:
    sub_1004C6A5C(v32, v31);
    goto LABEL_19;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = *(void *)v18;
    unint64_t v21 = *((void *)v18 + 1);
    char v22 = v18[16];
    sub_10044B198(v20, v21, v22);
    unint64_t v23 = a1 & 0xFFFFFFFF000000FFLL;
    long long v24 = v51;
    sub_1004C1AF4(v20, v21, v22, v23, v51);
    swift_beginAccess();
    if (*(void *)(v4 + 224))
    {
      if (!*(void *)(*(void *)(v4 + 208) + 16))
      {
        __chkstk_darwin();
        *(&v49 - 2) = (uint64_t)v24;
        BOOL v48 = sub_100488F74((void (*)(uint64_t))sub_1004C43B8);
        swift_endAccess();
        sub_1004445F8(v20, v21, v22);
        sub_1004C6A5C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for HandshakeReply.Encoded);
        return v48;
      }
      sub_1004C4364();
    }
    else
    {
      sub_1004C43C0();
    }
    swift_allocError();
    swift_willThrow();
    swift_endAccess();
    sub_1004445F8(v20, v21, v22);
    long long v31 = (uint64_t (*)(void))type metadata accessor for HandshakeReply.Encoded;
    uint64_t v32 = (uint64_t)v24;
    goto LABEL_18;
  }
  swift_beginAccess();
  if (!*(void *)(v4 + 224))
  {
    long long v44 = (unsigned __int8 *)ClientCommand.EncodingOptions.rfc3501.unsafeMutableAddressor();
    if (v44[2]) {
      int v45 = 0x10000;
    }
    else {
      int v45 = 0;
    }
    if (v44[1]) {
      int v46 = 256;
    }
    else {
      int v46 = 0;
    }
    ClientCommandEncoder.idle(tag:)(a1 & 0xFFFFFFFF000000FFLL, v46 | *v44 | v45, (unint64_t)&v11[*(int *)(v52 + 20)]);
    *uint64_t v11 = a1;
    *((_DWORD *)v11 + 1) = v53;
    __chkstk_darwin();
    *(&v49 - 2) = (uint64_t)v11;
    BOOL v47 = sub_100488F74((void (*)(uint64_t))sub_1004C435C);
    sub_1004C6A5C((uint64_t)v11, type metadata accessor for ConnectionCommand);
    swift_endAccess();
    return v47;
  }
  sub_10048A808();
  swift_allocError();
  swift_willThrow();
  swift_endAccess();
LABEL_19:
  if (qword_100715630 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1005E0ED0();
  sub_1003461B0(v33, (uint64_t)qword_100716F60);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_errorRetain();
  swift_errorRetain();
  char v34 = sub_1005E0EB0();
  os_log_type_t v35 = sub_1005E25A0();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = (void *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    v56[0] = v55;
    *(_DWORD *)uint64_t v36 = 68158466;
    LODWORD(v57) = 2;
    sub_1005E2960();
    *(_WORD *)(v36 + 8) = 256;
    LOBYTE(v57) = sub_1004BB90C();
    sub_1005E2960();
    *(_WORD *)(v36 + 11) = 2082;
    unint64_t v38 = sub_1004BB90C();
    uint64_t v39 = ConnectionID.debugDescription.getter(HIDWORD(v38));
    uint64_t v57 = sub_100481E54(v39, v40, v56);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 21) = 2112;
    uint64_t v41 = sub_1005E06E0();
    uint64_t v57 = v41;
    sub_1005E2960();
    *uint64_t v37 = v41;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%.*hhx-%{public}s] Unable to append command to output buffer. Invalid state. %@", (uint8_t *)v36, 0x1Fu);
    sub_10000566C(&qword_100717A10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

void sub_1004C0DBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v77 = a1;
  uint64_t v78 = (int *)_s11CompressionO12OutgoingDataVMa();
  __chkstk_darwin();
  uint64_t v6 = &v71[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v8 = &v71[-v7];
  __chkstk_darwin();
  uint64_t v10 = &v71[-v9];
  __chkstk_darwin();
  uint64_t v12 = &v71[-v11];
  swift_beginAccess();
  long long v13 = *(_OWORD *)(v2 + 224);
  v81[0] = *(_OWORD *)(v2 + 208);
  v81[1] = v13;
  __int16 v82 = *(_WORD *)(v2 + 240);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1004885A8();
  sub_10001D550((uint64_t)v81);
  uint64_t v15 = *(void *)(v2 + 248);
  uint64_t v16 = *(void *)(v3 + 256);
  swift_retain();
  sub_1004C4478(v15);
  uint64_t v17 = v79;
  sub_1004C76A8(v15, v16, v3, a2);
  sub_1004C44B8(v15);
  if (!v17)
  {
    uint64_t v74 = v12;
    uint64_t v75 = v10;
    uint64_t v79 = 0;
    uint64_t v76 = (uint64_t)v8;
    sub_1005E17E0();
    sub_1004C49D8((unint64_t *)&qword_100715FC8, 255, (void (*)(uint64_t))&type metadata accessor for DispatchData);
    sub_1005E2390();
    sub_1005E23E0();
    if (v83 != (unsigned char *)v80)
    {
      uint64_t v18 = a2 + v78[7];
      if ((*(unsigned char *)(v18 + 8) & 1) == 0)
      {
        uint64_t v73 = *(void *)v18;
        uint64_t v19 = a2 + v78[8];
        if (*(void *)(a2 + v78[5]) == v14)
        {
          if (*(unsigned char *)(v19 + 8))
          {
            if (qword_100715630 != -1) {
              swift_once();
            }
            uint64_t v20 = sub_1005E0ED0();
            sub_1003461B0(v20, (uint64_t)qword_100716F60);
            swift_retain_n();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v21 = (uint64_t)v74;
            sub_1004C4624(a2, (uint64_t)v74, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
            char v22 = sub_1005E0EB0();
            os_log_type_t v23 = sub_1005E2590();
            int v24 = v23;
            if (os_log_type_enabled(v22, v23))
            {
              uint64_t v25 = swift_slowAlloc();
              uint64_t v76 = swift_slowAlloc();
              uint64_t v83 = (unsigned char *)v76;
              *(_DWORD *)uint64_t v25 = 68158978;
              LODWORD(v80) = 2;
              sub_1005E2960();
              *(_WORD *)(v25 + 8) = 256;
              LODWORD(v75) = v24;
              LOBYTE(v80) = sub_1004BB90C();
              sub_1005E2960();
              *(_WORD *)(v25 + 11) = 2082;
              unint64_t v26 = sub_1004BB90C();
              uint64_t v27 = ConnectionID.debugDescription.getter(HIDWORD(v26));
              uint64_t v80 = sub_100481E54(v27, v28, (uint64_t *)&v83);
              sub_1005E2960();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v25 + 21) = 2048;
              uint64_t v29 = *(void *)(v21 + v78[5]);
              sub_1004C6A5C(v21, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
              uint64_t v80 = v29;
              sub_1005E2960();
              *(_WORD *)(v25 + 31) = 2048;
              uint64_t v80 = v14;
              sub_1005E2960();
              *(_WORD *)(v25 + 41) = 2082;
              uint64_t v30 = Tag.debugDescription.getter(v73 & 0xFFFFFFFF000000FFLL);
              uint64_t v80 = sub_100481E54(v30, v31, (uint64_t *)&v83);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v75, "[%.*hhx-%{public}s] Flushing %{iec-bytes}ld (of total %{iec-bytes}ld) from output buffer to network (tag %{public}s).", (uint8_t *)v25, 0x33u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              return;
            }
            sub_1004C6A5C(v21, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);

            goto LABEL_27;
          }
          uint64_t v76 = *(void *)v19;
          if (qword_100715630 != -1) {
            swift_once();
          }
          uint64_t v43 = sub_1005E0ED0();
          sub_1003461B0(v43, (uint64_t)qword_100716F60);
          swift_retain_n();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v33 = (uint64_t)v75;
          sub_1004C4624(a2, (uint64_t)v75, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
          char v34 = sub_1005E0EB0();
          os_log_type_t v44 = sub_1005E2590();
          int v45 = v44;
          if (os_log_type_enabled(v34, v44))
          {
            uint64_t v46 = swift_slowAlloc();
            uint64_t v74 = (unsigned char *)swift_slowAlloc();
            uint64_t v83 = v74;
            *(_DWORD *)uint64_t v46 = 68159234;
            LODWORD(v80) = 2;
            sub_1005E2960();
            *(_WORD *)(v46 + 8) = 256;
            int v72 = v45;
            LOBYTE(v80) = sub_1004BB90C();
            sub_1005E2960();
            *(_WORD *)(v46 + 11) = 2082;
            unint64_t v47 = sub_1004BB90C();
            uint64_t v48 = ConnectionID.debugDescription.getter(HIDWORD(v47));
            uint64_t v80 = sub_100481E54(v48, v49, (uint64_t *)&v83);
            sub_1005E2960();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v46 + 21) = 2048;
            uint64_t v50 = *(void *)(v33 + v78[5]);
            sub_1004C6A5C(v33, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
            uint64_t v80 = v50;
            sub_1005E2960();
            *(_WORD *)(v46 + 31) = 2048;
            uint64_t v80 = v14;
            sub_1005E2960();
            *(_WORD *)(v46 + 41) = 2082;
            uint64_t v51 = Tag.debugDescription.getter(v73 & 0xFFFFFFFF000000FFLL);
            uint64_t v80 = sub_100481E54(v51, v52, (uint64_t *)&v83);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            *(_WORD *)(v46 + 51) = 2082;
            uint64_t v53 = Tag.debugDescription.getter(v76 & 0xFFFFFFFF000000FFLL);
            uint64_t v80 = sub_100481E54(v53, v54, (uint64_t *)&v83);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v72, "[%.*hhx-%{public}s] Flushing %{iec-bytes}ld (of total %{iec-bytes}ld) from output buffer to network (tags %{public}s - %{public}s).", (uint8_t *)v46, 0x3Du);
            swift_arrayDestroy();
            swift_slowDealloc();
            goto LABEL_19;
          }
        }
        else
        {
          if ((*(unsigned char *)(v19 + 8) & 1) == 0)
          {
            uint64_t v76 = *(void *)v19;
            uint64_t v55 = v78;
            if (qword_100715630 != -1) {
              swift_once();
            }
            uint64_t v56 = sub_1005E0ED0();
            sub_1003461B0(v56, (uint64_t)qword_100716F60);
            swift_retain_n();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            variable initialization expression of Engine.isProcessingUpdates();
            uint64_t v57 = (uint64_t)v6;
            sub_1004C4624(a2, (uint64_t)v6, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
            uint64_t v58 = sub_1005E0EB0();
            os_log_type_t v59 = sub_1005E2590();
            int v60 = v59;
            if (os_log_type_enabled(v58, v59))
            {
              uint64_t v61 = swift_slowAlloc();
              LODWORD(v74) = v60;
              uint64_t v62 = v61;
              uint64_t v75 = (unsigned char *)swift_slowAlloc();
              uint64_t v83 = v75;
              *(_DWORD *)uint64_t v62 = 68158978;
              LODWORD(v80) = 2;
              sub_1005E2960();
              *(_WORD *)(v62 + 8) = 256;
              LOBYTE(v80) = sub_1004BB90C();
              sub_1005E2960();
              *(_WORD *)(v62 + 11) = 2082;
              unint64_t v63 = sub_1004BB90C();
              uint64_t v64 = ConnectionID.debugDescription.getter(HIDWORD(v63));
              uint64_t v80 = sub_100481E54(v64, v65, (uint64_t *)&v83);
              sub_1005E2960();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v62 + 21) = 2048;
              uint64_t v66 = *(void *)(v57 + v55[5]);
              sub_1004C6A5C(v57, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
              uint64_t v80 = v66;
              sub_1005E2960();
              *(_WORD *)(v62 + 31) = 2082;
              uint64_t v67 = Tag.debugDescription.getter(v73 & 0xFFFFFFFF000000FFLL);
              uint64_t v80 = sub_100481E54(v67, v68, (uint64_t *)&v83);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              *(_WORD *)(v62 + 41) = 2082;
              uint64_t v69 = Tag.debugDescription.getter(v76 & 0xFFFFFFFF000000FFLL);
              uint64_t v80 = sub_100481E54(v69, v70, (uint64_t *)&v83);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v74, "[%.*hhx-%{public}s] Flushing %{iec-bytes}ld from output buffer to network (tags %{public}s - %{public}s).", (uint8_t *)v62, 0x33u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              return;
            }
            sub_1004C6A5C(v57, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);

            goto LABEL_27;
          }
          if (qword_100715630 != -1) {
            swift_once();
          }
          uint64_t v32 = sub_1005E0ED0();
          sub_1003461B0(v32, (uint64_t)qword_100716F60);
          swift_retain_n();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v33 = v76;
          sub_1004C4624(a2, v76, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
          char v34 = sub_1005E0EB0();
          os_log_type_t v35 = sub_1005E2590();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = swift_slowAlloc();
            uint64_t v83 = (unsigned char *)swift_slowAlloc();
            *(_DWORD *)uint64_t v36 = 68158722;
            LODWORD(v80) = 2;
            sub_1005E2960();
            *(_WORD *)(v36 + 8) = 256;
            LOBYTE(v80) = sub_1004BB90C();
            sub_1005E2960();
            *(_WORD *)(v36 + 11) = 2082;
            unint64_t v37 = sub_1004BB90C();
            uint64_t v38 = ConnectionID.debugDescription.getter(HIDWORD(v37));
            uint64_t v80 = sub_100481E54(v38, v39, (uint64_t *)&v83);
            sub_1005E2960();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v36 + 21) = 2048;
            uint64_t v40 = *(void *)(v33 + v78[5]);
            sub_1004C6A5C(v33, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
            uint64_t v80 = v40;
            sub_1005E2960();
            *(_WORD *)(v36 + 31) = 2082;
            uint64_t v41 = Tag.debugDescription.getter(v73 & 0xFFFFFFFF000000FFLL);
            uint64_t v80 = sub_100481E54(v41, v42, (uint64_t *)&v83);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%.*hhx-%{public}s] Flushing %{iec-bytes}ld from output buffer to network (tag %{public}s).", (uint8_t *)v36, 0x29u);
            swift_arrayDestroy();
            swift_slowDealloc();
LABEL_19:
            swift_slowDealloc();

            return;
          }
        }
        sub_1004C6A5C(v33, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);

LABEL_27:
        swift_release_n();
      }
    }
  }
}

uint64_t sub_1004C1AF4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  os_log_type_t v44 = a5;
  uint64_t v43 = sub_1005E17E0();
  uint64_t v9 = *(void *)(v43 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v13 = (char *)&v40 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v40 - v14;
  if (a3)
  {
    sub_100008D24(a1, a2);
    uint64_t v46 = sub_1005E0800();
    unint64_t v47 = v28;
    uint64_t v29 = sub_1004C31D8((uint64_t)&off_1006F2BE0);
    unint64_t v31 = v30;
    sub_1004C2D64(v29, v30);
    sub_1000094D4(v29, v31);
    uint64_t v33 = v46;
    unint64_t v32 = v47;
    switch(v47 >> 62)
    {
      case 1uLL:
        uint64_t v42 = a4;
        uint64_t v41 = (v46 >> 32) - (int)v46;
        if (v46 >> 32 < (int)v46) {
          goto LABEL_38;
        }
        swift_retain();
        if (sub_1005E0550() && __OFSUB__((int)v33, sub_1005E0580())) {
          goto LABEL_40;
        }
        a4 = v42;
        sub_1005E0570();
LABEL_34:
        sub_1005E1770();
        sub_1000094D4(v33, v32);
        sub_1004445F8(a1, a2, 1);
        sub_1004445F8(a1, a2, 1);
        sub_1000094D4(v33, v32);
        break;
      case 2uLL:
        uint64_t v42 = a4;
        uint64_t v36 = *(void *)(v46 + 16);
        uint64_t v41 = *(void *)(v46 + 24);
        sub_100008D24(v46, v47);
        swift_retain();
        swift_retain();
        if (sub_1005E0550() && __OFSUB__(v36, sub_1005E0580())) {
          goto LABEL_41;
        }
        if (__OFSUB__(v41, v36)) {
          goto LABEL_39;
        }
        sub_1005E0570();
        sub_1005E1770();
        swift_release();
        swift_release();
        sub_1000094D4(v33, v32);
        sub_1004445F8(a1, a2, 1);
        sub_1004445F8(a1, a2, 1);
        sub_1000094D4(v33, v32);
        a4 = v42;
        break;
      case 3uLL:
        memset(v45, 0, 14);
        goto LABEL_34;
      default:
        v45[0] = v46;
        LODWORD(v45[1]) = v47;
        WORD2(v45[1]) = WORD2(v47);
        goto LABEL_34;
    }
    char v34 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v35 = v43;
    v34(v15, v11, v43);
  }
  else
  {
    uint64_t v42 = a4;
    uint64_t v16 = HIBYTE(a2) & 0xF;
    uint64_t v46 = a1;
    unint64_t v47 = a2;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v48 = 0;
    uint64_t v49 = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1005E1E70();
    if (v18)
    {
      unint64_t v19 = v17;
      unint64_t v20 = v18;
      uint64_t v21 = _swiftEmptyArrayStorage;
      do
      {
        if (v19 == 2573 && v20 == 0xE200000000000000 || (sub_1005E3290() & 1) != 0 || (sub_1005E1A00() & 1) == 0) {
          goto LABEL_6;
        }
        unint64_t v23 = sub_100374D14(v19, v20);
        if ((v23 & 0x100000000) != 0) {
          goto LABEL_42;
        }
        if ((v23 & 0xFFFFFF80) != 0)
        {
LABEL_6:
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v24 = sub_100374D14(v19, v20);
          if ((v24 & 0x100000000) != 0) {
            goto LABEL_43;
          }
          int v25 = v24;
          swift_bridgeObjectRelease();
          if ((v25 & 0xFFFFFF00) != 0)
          {
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
          }
          if (v25 - 127 >= 0xFFFFFFA1)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v21 = sub_1004D09A8(0, v21[2] + 1, 1, v21);
            }
            unint64_t v27 = v21[2];
            unint64_t v26 = v21[3];
            if (v27 >= v26 >> 1) {
              uint64_t v21 = sub_1004D09A8((void *)(v26 > 1), v27 + 1, 1, v21);
            }
            void v21[2] = v27 + 1;
            *((unsigned char *)v21 + v27 + 32) = v25;
          }
        }
        unint64_t v19 = sub_1005E1E70();
        unint64_t v20 = v22;
      }
      while (v22);
    }
    swift_bridgeObjectRelease();
    sub_1005E1770();
    sub_1004445F8(a1, a2, 0);
    swift_bridgeObjectRelease();
    char v34 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v35 = v43;
    v34(v15, v13, v43);
    a4 = v42;
  }
  unint64_t v37 = v44;
  v34(v44, v15, v35);
  uint64_t result = type metadata accessor for HandshakeReply.Encoded();
  unint64_t v39 = &v37[*(int *)(result + 20)];
  *unint64_t v39 = a4;
  *((_DWORD *)v39 + 1) = HIDWORD(a4);
  return result;
}

uint64_t sub_1004C20EC(uint64_t (*a1)(void))
{
  unint64_t v1 = a1() & 0xFFFFFFFF000000FFLL;
  return Tag.debugDescription.getter(v1);
}

uint64_t sub_1004C2128(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1004C2150(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1005E2960();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1004C2208(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1004C2234(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1004C225C@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1004C228C@<X0>(uint64_t __src@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (!__src) {
    goto LABEL_7;
  }
  if (!a2)
  {
    __src = 0;
LABEL_7:
    unint64_t v6 = 0xC000000000000000;
    goto LABEL_10;
  }
  if (a2 <= 14)
  {
    __src = sub_1004C3014((unsigned char *)__src, (unsigned char *)(__src + a2));
    unint64_t v6 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else
  {
    sub_1005E0590();
    swift_allocObject();
    uint64_t v5 = sub_1005E0540();
    if ((unint64_t)a2 >= 0x7FFFFFFF)
    {
      sub_1005E0840();
      __src = swift_allocObject();
      *(void *)(__src + 16) = 0;
      *(void *)(__src + 24) = a2;
      unint64_t v6 = v5 | 0x8000000000000000;
    }
    else
    {
      __src = a2 << 32;
      unint64_t v6 = v5 | 0x4000000000000000;
    }
  }
LABEL_10:
  *a3 = __src;
  a3[1] = v6;
  return __src;
}

uint64_t sub_1004C2358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v10 = *(int *)(sub_10000566C(&qword_100717098) + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_1004C49D8(&qword_1007170A0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchData);
    uint64_t result = sub_1005E1F70();
    *(void *)(a3 + v10) = result;
  }
  else
  {
    uint64_t v12 = *(int *)(sub_10000566C(&qword_100717098) + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_1004C49D8(&qword_1007170A0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchData);
    uint64_t result = sub_1005E1F70();
    *(void *)(a3 + v12) = result;
  }
  return result;
}

char *sub_1004C2534(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)unint64_t v1 = xmmword_100622570;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_1005E0550() && __OFSUB__((int)v4, sub_1005E0580())) {
        goto LABEL_24;
      }
      sub_1005E0590();
      swift_allocObject();
      uint64_t v13 = sub_1005E0530();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_1004C2C1C((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1005E0810();
      uint64_t result = sub_1004C2C1C(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *unint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *unint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *unint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

void sub_1004C2838(void (*a1)(uint64_t, uint64_t))
{
  unint64_t v2 = v1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v17 = *v1;
      *((void *)&v17 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1004C2B6C(a1);
      uint64_t v3 = v17;
      unint64_t v4 = *((void *)&v17 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v17 = *v1;
      *((void *)&v17 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1005E0810();
      uint64_t v5 = *((void *)&v17 + 1);
      uint64_t v6 = *(void *)(v17 + 16);
      uint64_t v16 = *(void *)(v17 + 24);
      uint64_t v7 = sub_1005E0550();
      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x1004C2A74);
      }
      uint64_t v8 = v7;
      uint64_t v9 = sub_1005E0580();
      uint64_t v10 = v6 - v9;
      if (__OFSUB__(v6, v9))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v11 = __OFSUB__(v16, v6);
      uint64_t v12 = v16 - v6;
      if (v11) {
        goto LABEL_15;
      }
      uint64_t v13 = sub_1005E0570();
      if (v13 >= v12) {
        uint64_t v14 = v12;
      }
      else {
        uint64_t v14 = v13;
      }
      a1(v8 + v10, v8 + v10 + v14);
      *unint64_t v1 = v17;
      v1[1] = v5 | 0x8000000000000000;
      return;
    case 3uLL:
      *(void *)((char *)&v17 + 7) = 0;
      *(void *)&long long v17 = 0;
      a1((uint64_t)&v17, (uint64_t)&v17);
      return;
    default:
      *(void *)&long long v17 = *v1;
      WORD4(v17) = v2;
      BYTE10(v17) = BYTE2(v2);
      BYTE11(v17) = BYTE3(v2);
      BYTE12(v17) = BYTE4(v2);
      BYTE13(v17) = BYTE5(v2);
      BYTE14(v17) = BYTE6(v2);
      a1((uint64_t)&v17, (uint64_t)&v17 + BYTE6(v2));
      uint64_t v3 = v17;
      unint64_t v4 = DWORD2(v17) | ((unint64_t)BYTE12(v17) << 32) | ((unint64_t)BYTE13(v17) << 40) | ((unint64_t)BYTE14(v17) << 48);
LABEL_4:
      *unint64_t v1 = v3;
      v1[1] = v4;
      return;
  }
}

unsigned char *sub_1004C2A84@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1004C3014(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1004C30D8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1004C3154((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_1004C2AFC(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

void sub_1004C2B6C(void (*a1)(uint64_t, uint64_t))
{
  sub_1005E0820();
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  if ((int)v4 < (int)v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = sub_1005E0550();
  if (!v5)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_1005E0580();
  uint64_t v8 = v3 - v7;
  if (__OFSUB__(v3, v7))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = v4 - v3;
  uint64_t v10 = sub_1005E0570();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  a1(v6 + v8, v6 + v8 + v11);
}

char *sub_1004C2C1C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_1005E0550();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_1005E0580();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_1005E0570();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_1004C2CD0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1005E0550();
  if (!result || (uint64_t result = sub_1005E0580(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1005E0570();
      return sub_1005E0870();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004C2D64(uint64_t a1, unint64_t a2)
{
  v10[3] = &type metadata for Data;
  v10[4] = &protocol witness table for Data;
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = sub_10003BCDC(v10, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_100008D24(a1, a2);
      sub_100008D24(v5, v6);
      sub_1004C2CD0((int)v5, v5 >> 32);
      sub_1000094D4(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_100008D24(a1, a2);
      swift_retain();
      swift_retain();
      sub_1004C2CD0(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_100008D24(a1, a2);
      sub_1005E0870();
      break;
  }
  return _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v10);
}

uint64_t sub_1004C2F88@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1005E2C90();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004C3014(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1004C30D8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1005E0590();
  swift_allocObject();
  uint64_t result = sub_1005E0540();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1005E0840();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1004C3154(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1005E0590();
  swift_allocObject();
  uint64_t result = sub_1005E0540();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1004C31D8(uint64_t a1)
{
  uint64_t v9 = sub_10000566C(&qword_100715758);
  unint64_t v10 = sub_1004C441C();
  v8[0] = a1;
  uint64_t v2 = sub_10003BCDC(v8, v9);
  char v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1004C2A84(v3, v4, &v7);
  uint64_t v5 = v7;
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v8);
  return v5;
}

unsigned char *sub_1004C3274(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_1004C3014(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_1004C30D8((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_1004C3154((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1004C32D8(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_1005E0590();
      swift_allocObject();
      sub_1005E0560();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1005E0840();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1004C3378(uint64_t a1, uint64_t a2)
{
  if (qword_100715638 != -1) {
    swift_once();
  }
  sub_1005E14C0();
  swift_allocObject();
  swift_retain();
  uint64_t v4 = sub_1005E14A0();
  v7[0] = a1;
  sub_1005E14E0();
  v7[3] = type metadata accessor for OutboundContent(0);
  uint64_t v5 = sub_100021E04(v7);
  sub_1004C4624(a2, (uint64_t)v5, type metadata accessor for OutboundContent);
  sub_1005E14E0();
  return v4;
}

uint64_t sub_1004C34AC(uint64_t a1)
{
  uint64_t v36 = _s11CompressionO12OutgoingDataVMa();
  __chkstk_darwin();
  unint64_t v39 = &v34[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  unint64_t v37 = &v34[-v3];
  uint64_t v43 = sub_1005E0D80();
  uint64_t v40 = *(void *)(v43 - 8);
  __chkstk_darwin();
  uint64_t v42 = &v34[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000566C(&qword_100716668);
  __chkstk_darwin();
  unint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005E0D40();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v38 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v41 = &v34[-v10];
  uint64_t v11 = sub_1005E17E0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004C49D8((unint64_t *)&qword_100715FC8, 255, (void (*)(uint64_t))&type metadata accessor for DispatchData);
  sub_1005E2390();
  uint64_t result = sub_1005E23E0();
  if (v45 != v44)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
    sub_1005E1550();
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1004BEB98((uint64_t)v6);
    uint64_t v16 = v8;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      return sub_100007A48((uint64_t)v6, &qword_100716668);
    }
    else
    {
      long long v17 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32);
      unint64_t v18 = v41;
      v17(v41, v6, v7);
      uint64_t v19 = tracingSignposter.unsafeMutableAddressor();
      uint64_t v20 = v40;
      unint64_t v22 = v42;
      uint64_t v21 = v43;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v40 + 16))(v42, v19, v43);
      unint64_t v23 = v37;
      sub_1004C4624(a1, (uint64_t)v37, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
      uint64_t v24 = a1;
      int v25 = v39;
      sub_1004C4624(v24, (uint64_t)v39, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
      unint64_t v26 = sub_1005E0D70();
      int v35 = sub_1005E26F0();
      if (sub_1005E28A0())
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(v38, v18, v7);
        uint64_t v27 = v16;
        uint64_t v28 = swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 134218240;
        uint64_t v29 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        sub_1004C6A5C((uint64_t)v23, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
        uint64_t v45 = v29;
        sub_1005E2960();
        *(_WORD *)(v28 + 12) = 2048;
        uint64_t v30 = *(void *)&v25[*(int *)(v36 + 20)];
        sub_1004C6A5C((uint64_t)v25, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
        uint64_t v45 = v30;
        sub_1005E2960();
        unint64_t v31 = v38;
        os_signpost_id_t v32 = sub_1005E0D30();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v26, (os_signpost_type_t)v35, v32, "Connection.didSendData", "%ld,%ld", (uint8_t *)v28, 0x16u);
        swift_slowDealloc();

        (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v42, v43);
        uint64_t v33 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
        v33(v41, v7);
        return ((uint64_t (*)(unsigned char *, uint64_t))v33)(v31, v7);
      }
      else
      {
        sub_1004C6A5C((uint64_t)v25, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);
        sub_1004C6A5C((uint64_t)v23, (uint64_t (*)(void))_s11CompressionO12OutgoingDataVMa);

        (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v22, v21);
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v7);
      }
    }
  }
  return result;
}

uint64_t sub_1004C3AB0()
{
  if (qword_100715630 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005E0ED0();
  sub_1003461B0(v1, (uint64_t)qword_100716F60);
  swift_retain_n();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v2 = sub_1005E0EB0();
  os_log_type_t v3 = sub_1005E25C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v9[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 68158210;
    sub_1005E2960();
    *(_WORD *)(v4 + 8) = 256;
    sub_1004BB90C();
    sub_1005E2960();
    *(_WORD *)(v4 + 11) = 2082;
    unint64_t v5 = sub_1004BB90C();
    uint64_t v6 = ConnectionID.debugDescription.getter(HIDWORD(v5));
    sub_100481E54(v6, v7, v9);
    sub_1005E2960();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[%.*hhx-%{public}s] Enabling Openwave Messaging workaround.", (uint8_t *)v4, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v0 + 241) == 1)
  {
    *(void *)(v0 + 232) = 0;
    *(_WORD *)(v0 + 240) = 1;
  }
  return result;
}

void sub_1004C3CE8(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10000566C(&qword_100716650);
  __chkstk_darwin();
  type metadata accessor for OutboundContent(0);
  __chkstk_darwin();
  unint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 48;
  type metadata accessor for Framer.OutboundMessage();
  __chkstk_darwin();
  unint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 48;
  swift_retain();
  sub_1004BF61C((uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004BFC58(a1, *(void *)v7);
      swift_release();
      break;
    case 2u:
      char v11 = v7[1];
      char v12 = v7[2];
      v1[242] = *v7;
      v1[243] = v11;
      v1[244] = v12;
      break;
    case 3u:
      sub_1004BDAAC(a1);
      break;
    case 4u:
      sub_1004C0238();
      break;
    case 5u:
      sub_1004C3AB0();
      break;
    default:
      unint64_t v8 = *(void *)v7;
      uint64_t v9 = sub_10000566C(&qword_100717030);
      sub_1004C45BC((uint64_t)&v7[*(int *)(v9 + 48)], (uint64_t)v5, type metadata accessor for OutboundContent);
      char v10 = sub_1004C0490(v8, (uint64_t)v5, a1);
      if ((v10 & 1) == 0)
      {
        swift_beginAccess();
        long long v13 = *((_OWORD *)v2 + 14);
        v16[0] = *((_OWORD *)v2 + 13);
        v16[1] = v13;
        __int16 v17 = *((_WORD *)v2 + 120);
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_1004885A8();
        sub_10001D550((uint64_t)v16);
        if (v14 >= 10000) {
          sub_1004BDAAC(a1);
        }
      }
      sub_1004C6A5C((uint64_t)v5, type metadata accessor for OutboundContent);
      break;
  }
  sub_1005E1580(0);
}

uint64_t type metadata accessor for Framer.OutboundMessage()
{
  uint64_t result = qword_100717120;
  if (!qword_100717120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004C435C(unint64_t *a1)
{
  return sub_1004890C0(a1, *(unsigned __int8 **)(v1 + 16));
}

unint64_t sub_1004C4364()
{
  unint64_t result = qword_100717038;
  if (!qword_100717038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717038);
  }
  return result;
}

uint64_t sub_1004C43B8(unint64_t *a1)
{
  return sub_100489468(a1, *(void *)(v1 + 16));
}

unint64_t sub_1004C43C0()
{
  unint64_t result = qword_100717040;
  if (!qword_100717040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717040);
  }
  return result;
}

uint64_t sub_1004C4414(unint64_t *a1)
{
  return sub_1004889A4(a1, *(void *)(v1 + 16));
}

unint64_t sub_1004C441C()
{
  unint64_t result = qword_100715760;
  if (!qword_100715760)
  {
    sub_10000744C(&qword_100715758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715760);
  }
  return result;
}

uint64_t sub_1004C4478(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1004C44B8(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1004C44F8(uint64_t a1)
{
  return a1;
}

unint64_t sub_1004C4568()
{
  unint64_t result = qword_100717060;
  if (!qword_100717060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717060);
  }
  return result;
}

uint64_t sub_1004C45BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004C4624(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004C468C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1004BE050(a1, a2, a3 & 1, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1004C4698()
{
  if (qword_100715638 != -1) {
    swift_once();
  }
  if (!sub_1005E1170()) {
    goto LABEL_9;
  }
  sub_1005E14C0();
  if (!swift_dynamicCastClass())
  {
    swift_release();
LABEL_9:
    swift_release();
    return 1;
  }
  sub_1005E14D0();
  if (v7)
  {
    sub_10000566C(&qword_100717070);
    if (swift_dynamicCast())
    {
      swift_release();
      swift_release();
      return v5;
    }
  }
  else
  {
    sub_100007A48((uint64_t)v6, &qword_100717048);
  }
  sub_1005E14D0();
  if (!v7)
  {
    sub_100007A48((uint64_t)v6, &qword_100717048);
    if (qword_100715630 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1005E0ED0();
    sub_1003461B0(v1, (uint64_t)qword_100716F60);
    uint64_t v2 = sub_1005E0EB0();
    os_log_type_t v3 = sub_1005E25B0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received invalid message.", v4, 2u);
      swift_slowDealloc();
    }

    swift_release();
    goto LABEL_9;
  }
  swift_release();
  swift_release();
  sub_100007A48((uint64_t)v6, &qword_100717048);
  return 0;
}

void *sub_1004C48F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  unint64_t result = sub_1004C2AFC((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1004C4960, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1004C4960@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1004C2F88(a1, a2);
}

uint64_t sub_1004C4980()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004C49BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004C2358(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1004C49D8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004C4A20(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(BOOL))(v1 + 16);
  uint64_t v4 = sub_1005E1650();
  BOOL v5 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4) == 1;
  return v3(v5);
}

uint64_t sub_1004C4A98(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004C4AA8()
{
  uint64_t v1 = sub_1005E0D40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004C4B38(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1005E0D40() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1004BCAD8(a1, v4);
}

uint64_t sub_1004C4BA8()
{
  uint64_t v1 = sub_1005E0D40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1004C4C50(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1005E0D40() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(uint64_t (**)(uint64_t))v6;
  uint64_t v8 = *(void *)(v6 + 8);
  return sub_1004BC150(a1, v5, v7, v8);
}

ValueMetadata *type metadata accessor for Framer.OutboundMessage.NoContent()
{
  return &type metadata for Framer.OutboundMessage.NoContent;
}

uint64_t *sub_1004C4D00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
      goto LABEL_32;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      uint64_t v8 = *(int *)(sub_10000566C(&qword_100717030) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for OutboundContent(0);
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 1)
      {
        uint64_t v16 = *(void *)v10;
        unint64_t v17 = *((void *)v10 + 1);
        char v18 = v10[16];
        sub_10044B198(v16, v17, v18);
        *(void *)uint64_t v9 = v16;
        *((void *)v9 + 1) = v17;
        v9[16] = v18;
LABEL_31:
        swift_storeEnumTagMultiPayload();
        goto LABEL_32;
      }
      if (!v12)
      {
        uint64_t v13 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v14 = *((void *)v10 + 1);
            *(void *)uint64_t v9 = *(void *)v10;
            *((void *)v9 + 1) = v14;
            *((void *)v9 + 2) = *((void *)v10 + 2);
            *((void *)v9 + 3) = *((void *)v10 + 3);
            *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
            *(_DWORD *)(v9 + 35) = *(_DWORD *)(v10 + 35);
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_30;
          case 1u:
            uint64_t v19 = *((void *)v10 + 1);
            *(void *)uint64_t v9 = *(void *)v10;
            *((void *)v9 + 1) = v19;
            uint64_t v20 = *((void *)v10 + 2);
            uint64_t v21 = *((void *)v10 + 3);
            *((void *)v9 + 2) = v20;
            *((void *)v9 + 3) = v21;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 2u:
          case 8u:
            *(void *)uint64_t v9 = *(void *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            *((void *)v9 + 2) = *((void *)v10 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 3u:
          case 4u:
          case 5u:
            *(void *)uint64_t v9 = *(void *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 6u:
            *(void *)uint64_t v9 = *(void *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            *((void *)v9 + 2) = *((void *)v10 + 2);
            *((_DWORD *)v9 + 6) = *((_DWORD *)v10 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 7u:
            *(void *)uint64_t v9 = *(void *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            *((void *)v9 + 2) = *((void *)v10 + 2);
            *((_DWORD *)v9 + 6) = *((_DWORD *)v10 + 6);
            *((void *)v9 + 4) = *((void *)v10 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 9u:
            *(void *)uint64_t v9 = *(void *)v10;
            *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
            *((void *)v9 + 2) = *((void *)v10 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v22 = sub_10000566C(&qword_100716548);
            uint64_t v23 = *(int *)(v22 + 64);
            long long __dst = &v9[v23];
            uint64_t v24 = &v10[v23];
            uint64_t v25 = sub_1005E0970();
            uint64_t v26 = *(void *)(v25 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
            {
              uint64_t v27 = sub_10000566C(&qword_100716550);
              memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
            }
            uint64_t v49 = *(int *)(v22 + 80);
            uint64_t v50 = (uint64_t *)&v9[v49];
            uint64_t v51 = (uint64_t *)&v10[v49];
            uint64_t v52 = *v51;
            unint64_t v53 = v51[1];
            sub_100008D24(*v51, v53);
            *uint64_t v50 = v52;
            v50[1] = v53;
            goto LABEL_30;
          case 0xAu:
          case 0xCu:
            unint64_t v28 = *(void *)v10;
            sub_100490278(v28);
            *(void *)uint64_t v9 = v28;
            goto LABEL_30;
          case 0xBu:
          case 0xDu:
            uint64_t v29 = *(void *)v10;
            sub_100490278(*(void *)v10);
            uint64_t v30 = *((void *)v10 + 1);
            *(void *)uint64_t v9 = v29;
            *((void *)v9 + 1) = v30;
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 0xEu:
            uint64_t v31 = sub_10000566C(&qword_100716558);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v9, v10, v31);
            uint64_t v32 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
            uint64_t v33 = &v9[v32];
            char v34 = &v10[v32];
            v33[16] = v34[16];
            uint64_t v35 = *(void *)v34;
            uint64_t v36 = *((void *)v34 + 1);
            *(void *)uint64_t v33 = v35;
            *((void *)v33 + 1) = v36;
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 0xFu:
            uint64_t v37 = sub_10000566C(&qword_100716558);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v9, v10, v37);
            uint64_t v38 = *(int *)(sub_10000566C(&qword_100716560) + 48);
            unint64_t v39 = &v9[v38];
            uint64_t v40 = &v10[v38];
            *(_WORD *)unint64_t v39 = *(_WORD *)v40;
            *((void *)v39 + 1) = *((void *)v40 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 0x10u:
          case 0x11u:
            uint64_t v41 = sub_10000566C(&qword_100716558);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v9, v10, v41);
            uint64_t v42 = *(int *)(sub_10000566C(&qword_100716568) + 48);
            uint64_t v43 = &v9[v42];
            uint64_t v44 = &v10[v42];
            *(void *)uint64_t v43 = *(void *)v44;
            *((_DWORD *)v43 + 2) = *((_DWORD *)v44 + 2);
            swift_bridgeObjectRetain();
            goto LABEL_30;
          case 0x12u:
            uint64_t v45 = *((void *)v10 + 1);
            *(void *)uint64_t v9 = *(void *)v10;
            *((void *)v9 + 1) = v45;
            *((void *)v9 + 2) = *((void *)v10 + 2);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_30;
          case 0x13u:
            *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
            uint64_t v46 = *((void *)v10 + 2);
            *((void *)v9 + 1) = *((void *)v10 + 1);
            *((void *)v9 + 2) = v46;
            uint64_t v47 = *((void *)v10 + 4);
            *((void *)v9 + 3) = *((void *)v10 + 3);
            *((void *)v9 + 4) = v47;
            uint64_t v48 = *((void *)v10 + 6);
            *((void *)v9 + 5) = *((void *)v10 + 5);
            *((void *)v9 + 6) = v48;
            *((void *)v9 + 7) = *((void *)v10 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_30:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        goto LABEL_31;
      }
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_32:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

unint64_t sub_1004C5580(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
LABEL_8:
    return swift_release();
  }
  else if (!result)
  {
    uint64_t v3 = a1 + *(int *)(sub_10000566C(&qword_100717030) + 48);
    type metadata accessor for OutboundContent(0);
    unint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v4 = *(void *)v3;
      unint64_t v5 = *(void *)(v3 + 8);
      char v6 = *(unsigned char *)(v3 + 16);
      return sub_1004445F8(v4, v5, v6);
    }
    else if (!result)
    {
      type metadata accessor for ClientCommand(0);
      unint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          swift_bridgeObjectRelease();
          goto LABEL_8;
        case 1:
        case 2:
        case 6:
        case 8:
          swift_bridgeObjectRelease();
          goto LABEL_32;
        case 3:
        case 4:
        case 5:
          goto LABEL_32;
        case 7:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_32;
        case 9:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = sub_10000566C(&qword_100716548);
          uint64_t v11 = v3 + *(int *)(v10 + 64);
          uint64_t v12 = sub_1005E0970();
          uint64_t v13 = *(void *)(v12 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
            (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
          }
          uint64_t v14 = (uint64_t *)(v3 + *(int *)(v10 + 80));
          uint64_t v15 = *v14;
          unint64_t v16 = v14[1];
          return sub_1000094D4(v15, v16);
        case 10:
        case 12:
          unint64_t v7 = *(void *)v3;
          return sub_1004906C8(v7);
        case 11:
        case 13:
          sub_1004906C8(*(void *)v3);
          goto LABEL_32;
        case 14:
          uint64_t v17 = sub_10000566C(&qword_100716558);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v3, v17);
          uint64_t v9 = &qword_100715AB8;
          goto LABEL_27;
        case 15:
          uint64_t v18 = sub_10000566C(&qword_100716558);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v3, v18);
          sub_10000566C(&qword_100716560);
          goto LABEL_32;
        case 16:
        case 17:
          uint64_t v8 = sub_10000566C(&qword_100716558);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v3, v8);
          uint64_t v9 = &qword_100716568;
LABEL_27:
          sub_10000566C(v9);
          goto LABEL_32;
        case 18:
          swift_release();
          swift_release();
          goto LABEL_8;
        case 19:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_32:
          unint64_t result = swift_bridgeObjectRelease();
          break;
        default:
          return result;
      }
    }
  }
  return result;
}

void *sub_1004C5974(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    goto LABEL_30;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(sub_10000566C(&qword_100717030) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for OutboundContent(0);
    int v11 = swift_getEnumCaseMultiPayload();
    if (v11 == 1)
    {
      uint64_t v14 = *(void *)v9;
      unint64_t v15 = *((void *)v9 + 1);
      char v16 = v9[16];
      sub_10044B198(v14, v15, v16);
      *(void *)uint64_t v8 = v14;
      *((void *)v8 + 1) = v15;
      v8[16] = v16;
LABEL_29:
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
    }
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v13 = *((void *)v9 + 1);
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = v13;
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
          *(_DWORD *)(v8 + 35) = *(_DWORD *)(v9 + 35);
          swift_bridgeObjectRetain();
          swift_retain();
          goto LABEL_28;
        case 1u:
          uint64_t v17 = *((void *)v9 + 1);
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = v17;
          uint64_t v18 = *((void *)v9 + 2);
          uint64_t v19 = *((void *)v9 + 3);
          *((void *)v8 + 2) = v18;
          *((void *)v8 + 3) = v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 2u:
        case 8u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 3u:
        case 4u:
        case 5u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 6u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 7u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
          *((void *)v8 + 4) = *((void *)v9 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 9u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
          *((void *)v8 + 2) = *((void *)v9 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_10000566C(&qword_100716548);
          uint64_t v21 = *(int *)(v20 + 64);
          long long __dst = &v8[v21];
          uint64_t v22 = &v9[v21];
          uint64_t v23 = sub_1005E0970();
          uint64_t v24 = *(void *)(v23 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
          {
            uint64_t v25 = sub_10000566C(&qword_100716550);
            memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
          }
          uint64_t v47 = *(int *)(v20 + 80);
          uint64_t v48 = (uint64_t *)&v8[v47];
          uint64_t v49 = (uint64_t *)&v9[v47];
          uint64_t v50 = *v49;
          unint64_t v51 = v49[1];
          sub_100008D24(*v49, v51);
          *uint64_t v48 = v50;
          v48[1] = v51;
          goto LABEL_28;
        case 0xAu:
        case 0xCu:
          unint64_t v26 = *(void *)v9;
          sub_100490278(v26);
          *(void *)uint64_t v8 = v26;
          goto LABEL_28;
        case 0xBu:
        case 0xDu:
          uint64_t v27 = *(void *)v9;
          sub_100490278(*(void *)v9);
          uint64_t v28 = *((void *)v9 + 1);
          *(void *)uint64_t v8 = v27;
          *((void *)v8 + 1) = v28;
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 0xEu:
          uint64_t v29 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v8, v9, v29);
          uint64_t v30 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
          uint64_t v31 = &v8[v30];
          uint64_t v32 = &v9[v30];
          v31[16] = v32[16];
          uint64_t v33 = *(void *)v32;
          uint64_t v34 = *((void *)v32 + 1);
          *(void *)uint64_t v31 = v33;
          *((void *)v31 + 1) = v34;
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 0xFu:
          uint64_t v35 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v8, v9, v35);
          uint64_t v36 = *(int *)(sub_10000566C(&qword_100716560) + 48);
          uint64_t v37 = &v8[v36];
          uint64_t v38 = &v9[v36];
          *(_WORD *)uint64_t v37 = *(_WORD *)v38;
          *((void *)v37 + 1) = *((void *)v38 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 0x10u:
        case 0x11u:
          uint64_t v39 = sub_10000566C(&qword_100716558);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v8, v9, v39);
          uint64_t v40 = *(int *)(sub_10000566C(&qword_100716568) + 48);
          uint64_t v41 = &v8[v40];
          uint64_t v42 = &v9[v40];
          *(void *)uint64_t v41 = *(void *)v42;
          *((_DWORD *)v41 + 2) = *((_DWORD *)v42 + 2);
          swift_bridgeObjectRetain();
          goto LABEL_28;
        case 0x12u:
          uint64_t v43 = *((void *)v9 + 1);
          *(void *)uint64_t v8 = *(void *)v9;
          *((void *)v8 + 1) = v43;
          *((void *)v8 + 2) = *((void *)v9 + 2);
          swift_retain();
          swift_retain();
          swift_retain();
          goto LABEL_28;
        case 0x13u:
          *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
          uint64_t v44 = *((void *)v9 + 2);
          *((void *)v8 + 1) = *((void *)v9 + 1);
          *((void *)v8 + 2) = v44;
          uint64_t v45 = *((void *)v9 + 4);
          *((void *)v8 + 3) = *((void *)v9 + 3);
          *((void *)v8 + 4) = v45;
          uint64_t v46 = *((void *)v9 + 6);
          *((void *)v8 + 5) = *((void *)v9 + 5);
          *((void *)v8 + 6) = v46;
          *((void *)v8 + 7) = *((void *)v9 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_28:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      goto LABEL_29;
    }
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_30:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1004C61B0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004C6A5C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for Framer.OutboundMessage);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
      goto LABEL_31;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(sub_10000566C(&qword_100717030) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for OutboundContent(0);
      int v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 1)
      {
        uint64_t v14 = *(void *)v9;
        unint64_t v15 = *((void *)v9 + 1);
        char v16 = v9[16];
        sub_10044B198(v14, v15, v16);
        *(void *)uint64_t v8 = v14;
        *((void *)v8 + 1) = v15;
        v8[16] = v16;
LABEL_30:
        swift_storeEnumTagMultiPayload();
        goto LABEL_31;
      }
      if (!v11)
      {
        uint64_t v12 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *(void *)uint64_t v8 = *(void *)v9;
            *((void *)v8 + 1) = *((void *)v9 + 1);
            *((void *)v8 + 2) = *((void *)v9 + 2);
            *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
            *((_DWORD *)v8 + 7) = *((_DWORD *)v9 + 7);
            int v13 = *((_DWORD *)v9 + 8);
            *(_DWORD *)(v8 + 35) = *(_DWORD *)(v9 + 35);
            *((_DWORD *)v8 + 8) = v13;
            swift_bridgeObjectRetain();
            swift_retain();
            goto LABEL_29;
          case 1u:
            *(void *)uint64_t v8 = *(void *)v9;
            *((void *)v8 + 1) = *((void *)v9 + 1);
            *((void *)v8 + 2) = *((void *)v9 + 2);
            *((void *)v8 + 3) = *((void *)v9 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 2u:
          case 8u:
            *(void *)uint64_t v8 = *(void *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            *((void *)v8 + 2) = *((void *)v9 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 3u:
          case 4u:
          case 5u:
            *(void *)uint64_t v8 = *(void *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 6u:
            *(void *)uint64_t v8 = *(void *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            *((void *)v8 + 2) = *((void *)v9 + 2);
            *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 7u:
            *(void *)uint64_t v8 = *(void *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            *((void *)v8 + 2) = *((void *)v9 + 2);
            *((_DWORD *)v8 + 6) = *((_DWORD *)v9 + 6);
            *((void *)v8 + 4) = *((void *)v9 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 9u:
            *(void *)uint64_t v8 = *(void *)v9;
            *((_DWORD *)v8 + 2) = *((_DWORD *)v9 + 2);
            *((void *)v8 + 2) = *((void *)v9 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v17 = sub_10000566C(&qword_100716548);
            uint64_t v18 = *(int *)(v17 + 64);
            long long __dst = &v8[v18];
            uint64_t v19 = &v9[v18];
            uint64_t v20 = sub_1005E0970();
            uint64_t v21 = *(void *)(v20 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
            {
              uint64_t v22 = sub_10000566C(&qword_100716550);
              memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v19, v20);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
            }
            uint64_t v38 = *(int *)(v17 + 80);
            uint64_t v39 = (uint64_t *)&v8[v38];
            uint64_t v40 = (uint64_t *)&v9[v38];
            uint64_t v41 = *v40;
            unint64_t v42 = v40[1];
            sub_100008D24(*v40, v42);
            *uint64_t v39 = v41;
            v39[1] = v42;
            goto LABEL_29;
          case 0xAu:
          case 0xCu:
            unint64_t v23 = *(void *)v9;
            sub_100490278(v23);
            *(void *)uint64_t v8 = v23;
            goto LABEL_29;
          case 0xBu:
          case 0xDu:
            uint64_t v24 = *(void *)v9;
            sub_100490278(*(void *)v9);
            *(void *)uint64_t v8 = v24;
            *((void *)v8 + 1) = *((void *)v9 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 0xEu:
            uint64_t v25 = sub_10000566C(&qword_100716558);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v8, v9, v25);
            uint64_t v26 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
            uint64_t v27 = &v8[v26];
            uint64_t v28 = &v9[v26];
            *(void *)uint64_t v27 = *(void *)v28;
            uint64_t v29 = *((void *)v28 + 1);
            v27[16] = v28[16];
            *((void *)v27 + 1) = v29;
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 0xFu:
            uint64_t v30 = sub_10000566C(&qword_100716558);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v8, v9, v30);
            uint64_t v31 = *(int *)(sub_10000566C(&qword_100716560) + 48);
            uint64_t v32 = &v8[v31];
            uint64_t v33 = &v9[v31];
            char *v32 = *v33;
            v32[1] = v33[1];
            *((void *)v32 + 1) = *((void *)v33 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 0x10u:
          case 0x11u:
            uint64_t v34 = sub_10000566C(&qword_100716558);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v8, v9, v34);
            uint64_t v35 = *(int *)(sub_10000566C(&qword_100716568) + 48);
            uint64_t v36 = &v8[v35];
            uint64_t v37 = &v9[v35];
            *(void *)uint64_t v36 = *(void *)v37;
            *((_DWORD *)v36 + 2) = *((_DWORD *)v37 + 2);
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 0x12u:
            *(void *)uint64_t v8 = *(void *)v9;
            *((void *)v8 + 1) = *((void *)v9 + 1);
            *((void *)v8 + 2) = *((void *)v9 + 2);
            swift_retain();
            swift_retain();
            swift_retain();
            goto LABEL_29;
          case 0x13u:
            *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
            *((void *)v8 + 1) = *((void *)v9 + 1);
            *((void *)v8 + 2) = *((void *)v9 + 2);
            *((void *)v8 + 3) = *((void *)v9 + 3);
            *((void *)v8 + 4) = *((void *)v9 + 4);
            *((void *)v8 + 5) = *((void *)v9 + 5);
            *((void *)v8 + 6) = *((void *)v9 + 6);
            *((void *)v8 + 7) = *((void *)v9 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_29:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
            break;
        }
        goto LABEL_30;
      }
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_31:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1004C6A5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1004C6ABC(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_10000566C(&qword_100717030) + 48);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for OutboundContent(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for ClientCommand(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 9u:
          void *v7 = *v8;
          *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
          _OWORD v7[2] = v8[2];
          uint64_t v11 = sub_10000566C(&qword_100716548);
          uint64_t v12 = *(int *)(v11 + 64);
          long long __dst = (char *)v7 + v12;
          int v13 = (char *)v8 + v12;
          uint64_t v14 = sub_1005E0970();
          uint64_t v15 = *(void *)(v14 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
          {
            uint64_t v16 = sub_10000566C(&qword_100716550);
            memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
          }
          *(_OWORD *)((char *)v7 + *(int *)(v11 + 80)) = *(_OWORD *)((char *)v8 + *(int *)(v11 + 80));
          goto LABEL_14;
        case 0xEu:
          uint64_t v17 = sub_10000566C(&qword_100716558);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v7, v8, v17);
          uint64_t v18 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
          uint64_t v19 = (char *)v7 + v18;
          uint64_t v20 = (char *)v8 + v18;
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          v19[16] = v20[16];
          goto LABEL_14;
        case 0xFu:
          uint64_t v21 = sub_10000566C(&qword_100716558);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32))(v7, v8, v21);
          uint64_t v22 = sub_10000566C(&qword_100716560);
          *(_OWORD *)((char *)v7 + *(int *)(v22 + 48)) = *(_OWORD *)((char *)v8 + *(int *)(v22 + 48));
          goto LABEL_14;
        case 0x10u:
        case 0x11u:
          uint64_t v23 = sub_10000566C(&qword_100716558);
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 32))(v7, v8, v23);
          uint64_t v24 = *(int *)(sub_10000566C(&qword_100716568) + 48);
          uint64_t v25 = (char *)v7 + v24;
          uint64_t v26 = (char *)v8 + v24;
          *(void *)uint64_t v25 = *(void *)v26;
          *((_DWORD *)v25 + 2) = *((_DWORD *)v26 + 2);
LABEL_14:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1004C6F4C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004C6A5C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for Framer.OutboundMessage);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_10000566C(&qword_100717030) + 48);
      uint64_t v7 = (void *)((char *)a1 + v6);
      uint64_t v8 = (void *)((char *)a2 + v6);
      uint64_t v9 = type metadata accessor for OutboundContent(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v10 = type metadata accessor for ClientCommand(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 9u:
            void *v7 = *v8;
            *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
            _OWORD v7[2] = v8[2];
            uint64_t v11 = sub_10000566C(&qword_100716548);
            uint64_t v12 = *(int *)(v11 + 64);
            long long __dst = (char *)v7 + v12;
            int v13 = (char *)v8 + v12;
            uint64_t v14 = sub_1005E0970();
            uint64_t v15 = *(void *)(v14 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
            {
              uint64_t v16 = sub_10000566C(&qword_100716550);
              memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v15 + 32))(__dst, v13, v14);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
            }
            *(_OWORD *)((char *)v7 + *(int *)(v11 + 80)) = *(_OWORD *)((char *)v8 + *(int *)(v11 + 80));
            goto LABEL_15;
          case 0xEu:
            uint64_t v17 = sub_10000566C(&qword_100716558);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v7, v8, v17);
            uint64_t v18 = *(int *)(sub_10000566C(&qword_100715AB8) + 48);
            uint64_t v19 = (char *)v7 + v18;
            uint64_t v20 = (char *)v8 + v18;
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
            v19[16] = v20[16];
            goto LABEL_15;
          case 0xFu:
            uint64_t v21 = sub_10000566C(&qword_100716558);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32))(v7, v8, v21);
            uint64_t v22 = sub_10000566C(&qword_100716560);
            *(_OWORD *)((char *)v7 + *(int *)(v22 + 48)) = *(_OWORD *)((char *)v8 + *(int *)(v22 + 48));
            goto LABEL_15;
          case 0x10u:
          case 0x11u:
            uint64_t v23 = sub_10000566C(&qword_100716558);
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 32))(v7, v8, v23);
            uint64_t v24 = *(int *)(sub_10000566C(&qword_100716568) + 48);
            uint64_t v25 = (char *)v7 + v24;
            uint64_t v26 = (char *)v8 + v24;
            *(void *)uint64_t v25 = *(void *)v26;
            *((_DWORD *)v25 + 2) = *((_DWORD *)v26 + 2);
LABEL_15:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1004C7400()
{
  uint64_t result = type metadata accessor for OutboundContent(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v2;
    uint64_t v4 = (char *)&value witness table for Builtin.NativeObject + 64;
    unint64_t v5 = &unk_100628018;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t _s11CompressionOwxx(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t _s11CompressionOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
    swift_retain();
  }
  return a1;
}

unint64_t *_s11CompressionOwca(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    swift_release();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *_s11CompressionOwta(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void *)a2;
  swift_release();
  a1[1] = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *_s11CompressionOMa()
{
  return &_s11CompressionON;
}

int *sub_1004C76A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v112 = a4;
  uint64_t v116 = type metadata accessor for Deflate.InputBuffer(0);
  __chkstk_darwin();
  uint64_t v115 = (char *)v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Deflate.Result(0);
  __chkstk_darwin();
  uint64_t v114 = (char *)v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100716E20);
  __chkstk_darwin();
  uint64_t v120 = (uint64_t)v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_10000566C(&qword_100717160);
  __chkstk_darwin();
  uint64_t v118 = (char *)v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = _s12OutputHelperV5ChunkVMa(0);
  uint64_t v136 = *(void *)(v144 - 8);
  __chkstk_darwin();
  uint64_t v113 = (uint64_t)v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v125 = (uint64_t)v106 - v11;
  __chkstk_darwin();
  uint64_t v123 = (uint64_t)v106 - v12;
  sub_10000566C(&qword_100717168);
  __chkstk_darwin();
  uint64_t v14 = (char *)v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)v106 - v15;
  uint64_t v134 = _s19CommandOutputBufferV8SendDataVMa(0);
  uint64_t v129 = *(void (***)(uint64_t, uint64_t, uint64_t))(v134 - 8);
  __chkstk_darwin();
  uint64_t v132 = (uint64_t)v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v131 = (uint64_t)v106 - v18;
  __chkstk_darwin();
  unint64_t v133 = (char *)v106 - v19;
  __chkstk_darwin();
  uint64_t v21 = (char *)v106 - v20;
  __chkstk_darwin();
  uint64_t v23 = (char *)v106 - v22;
  __chkstk_darwin();
  uint64_t v25 = (char *)v106 - v24;
  uint64_t v26 = (int *)_s12OutputHelperVMa(0);
  __chkstk_darwin();
  uint64_t v28 = (void *)((char *)v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v135 = sub_1005E17E0();
  uint64_t v117 = *(void *)(v135 - 8);
  __chkstk_darwin();
  __chkstk_darwin();
  long long v111 = (char *)v106 - v29;
  __chkstk_darwin();
  unint64_t v141 = 0;
  uint64_t v127 = &v142;
  char v142 = 1;
  uint64_t v139 = 0;
  uint64_t v121 = &v140;
  char v140 = 1;
  if (a1)
  {
    uint64_t v107 = v31;
    *uint64_t v28 = 0;
    uint64_t v32 = (char *)v28 + v26[5];
    uint64_t v33 = a1;
    swift_retain_n();
    swift_retain();
    uint64_t v110 = v32;
    sub_1005E1790();
    uint64_t v35 = v136 + 56;
    uint64_t v34 = *(void (**)(void))(v136 + 56);
    uint64_t v137 = (uint64_t)v28 + v26[6];
    uint64_t v124 = v34;
    v34();
    uint64_t v36 = v26[7];
    *(void *)((char *)v28 + v36) = a1;
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v128 = a3 + 208;
    uint64_t v37 = v138;
    sub_1004896B4((uint64_t)v14);
    uint64_t v38 = v37;
    if (!v37)
    {
      v106[1] = v36;
      uint64_t v122 = v35;
      long long v109 = v28;
      v106[0] = v33;
      uint64_t v108 = a3;
      uint64_t v39 = 0;
      uint64_t v126 = (unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 6);
      uint64_t v129 = (void (**)(uint64_t, uint64_t, uint64_t))(v117 + 16);
      v136 += 48;
      uint64_t v41 = (uint64_t)v133;
      uint64_t v40 = v134;
      uint64_t v42 = (uint64_t)v118;
      uint64_t v43 = v123;
      while (1)
      {
        swift_endAccess();
        if ((*v126)(v14, 1, v40) == 1)
        {
          sub_100007A48((uint64_t)v14, &qword_100717168);
          uint64_t v87 = v107;
          uint64_t v88 = (uint64_t)v109;
          sub_1004B653C(v107);
          uint64_t v93 = v117;
          char v94 = v111;
          uint64_t v95 = v135;
          (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v111, v87, v135);
          uint64_t v144 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
          swift_release();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v87, v95);
          sub_1004C8978(v88, _s12OutputHelperVMa);
          uint64_t v138 = v141;
          char v96 = v142;
          uint64_t v97 = v139;
          char v98 = v140;
          uint64_t v99 = v112;
          (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v112, v94, v95);
          swift_release();
          unint64_t result = (int *)_s11CompressionO12OutgoingDataVMa();
          char v100 = v98;
          unint64_t v101 = v138;
          char v102 = 0;
          *(void *)(v99 + result[5]) = v39;
          uint64_t v103 = v99 + result[6];
          *(void *)uint64_t v103 = v144;
          goto LABEL_43;
        }
        uint64_t v44 = v132;
        sub_1004C8910((uint64_t)v14, v132, _s19CommandOutputBufferV8SendDataVMa);
        if (v142) {
          break;
        }
        uint64_t v47 = (unsigned __int8 *)(v44 + *(int *)(v40 + 20));
        uint64_t v48 = *v47;
        uint64_t v49 = *((unsigned int *)v47 + 1);
        BOOL v50 = v48 == v141 && v49 == HIDWORD(v141);
        uint64_t v46 = v44;
        if (!v50)
        {
          uint64_t v139 = v48 | (v49 << 32);
          uint64_t v45 = v121;
          goto LABEL_15;
        }
LABEL_16:
        uint64_t v51 = v131;
        sub_1004C8910(v46, v131, _s19CommandOutputBufferV8SendDataVMa);
        sub_1004C8910(v51, v41, _s19CommandOutputBufferV8SendDataVMa);
        unint64_t result = (int *)_s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
        BOOL v53 = __OFADD__(v39, result);
        unint64_t v54 = (char *)result + v39;
        if (v53)
        {
          __break(1u);
          return result;
        }
        uint64_t v138 = (uint64_t)v54;
        uint64_t v55 = v38;
        int v56 = *(unsigned __int8 *)(v41 + *(int *)(v40 + 24));
        uint64_t v57 = v41;
        uint64_t v58 = *v129;
        (*v129)(v43, v57, v135);
        uint64_t v59 = v144;
        *(unsigned char *)(v43 + *(int *)(v144 + 20)) = v56;
        uint64_t v60 = *(int *)(v130 + 48);
        uint64_t v61 = v137;
        sub_1004B6938(v137, v42);
        *(unsigned char *)(v42 + v60) = v56;
        uint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v136;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v136)(v42, 1, v59) == 1)
        {
          sub_100007A48(v61, &qword_100716E20);
          sub_1004C88AC(v43, v61);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v124)(v61, 0, 1, v144);
          uint64_t v41 = (uint64_t)v133;
          uint64_t v40 = v134;
          uint64_t v38 = v55;
LABEL_5:
          uint64_t v39 = v138;
          goto LABEL_6;
        }
        uint64_t v63 = v125;
        sub_1004C88AC(v42, v125);
        if (v56 == *(unsigned __int8 *)(v63 + *(int *)(v144 + 20)))
        {
          unsigned int v69 = v62(v137, 1, v144);
          uint64_t v40 = v134;
          uint64_t v43 = v123;
          uint64_t v38 = v55;
          if (!v69) {
            sub_1005E17A0();
          }
          sub_1004C8978(v125, _s12OutputHelperV5ChunkVMa);
          sub_1004C8978(v42, _s12OutputHelperV5ChunkVMa);
          uint64_t v41 = (uint64_t)v133;
          goto LABEL_5;
        }
        sub_1004C8978(v63, _s12OutputHelperV5ChunkVMa);
        uint64_t v64 = v144;
        uint64_t v65 = v120;
        sub_1004B6938(v137, v120);
        unsigned int v66 = v62(v65, 1, v64);
        uint64_t v40 = v134;
        uint64_t v38 = v55;
        if (v66 == 1)
        {
          sub_100007A48(v65, &qword_100716E20);
          uint64_t v67 = v124;
          uint64_t v68 = v137;
          uint64_t v39 = v138;
        }
        else
        {
          uint64_t v70 = v65;
          uint64_t v71 = v113;
          sub_1004C8910(v70, v113, _s12OutputHelperV5ChunkVMa);
          int v72 = v115;
          v58((uint64_t)v115, v71, v135);
          uint64_t v73 = v64;
          uint64_t v74 = (uint64_t)v72;
          uint64_t v75 = (uint64_t)v114;
          swift_storeEnumTagMultiPayload();
          sub_1004B158C(v74, *(unsigned __int8 *)(v71 + *(int *)(v73 + 20)), v75);
          uint64_t v39 = v138;
          sub_1004C8978(v74, type metadata accessor for Deflate.InputBuffer);
          sub_1005E17A0();
          sub_1004C8978(v75, type metadata accessor for Deflate.Result);
          uint64_t v68 = v137;
          sub_100007A48(v137, &qword_100716E20);
          uint64_t v76 = v71;
          uint64_t v67 = v124;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v124)(v68, 1, 1, v144);
          sub_1004C8978(v76, _s12OutputHelperV5ChunkVMa);
          uint64_t v42 = (uint64_t)v118;
        }
        sub_100007A48(v68, &qword_100716E20);
        uint64_t v43 = v123;
        sub_1004C88AC(v123, v68);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v67)(v68, 0, 1, v144);
        sub_1004C8978(v42, _s12OutputHelperV5ChunkVMa);
        uint64_t v41 = (uint64_t)v133;
LABEL_6:
        sub_1004C8978(v43, _s12OutputHelperV5ChunkVMa);
        sub_1004C8978(v41, _s19CommandOutputBufferV8SendDataVMa);
        swift_beginAccess();
        sub_1004896B4((uint64_t)v14);
      }
      unint64_t v141 = *(unsigned __int8 *)(v44 + *(int *)(v40 + 20)) | ((unint64_t)*(unsigned int *)(v44
                                                                                                 + *(int *)(v40 + 20)
                                                                                                 + 4) << 32);
      uint64_t v45 = v127;
      uint64_t v46 = v44;
LABEL_15:
      *uint64_t v45 = 0;
      goto LABEL_16;
    }
    swift_endAccess();
    sub_1004C8978((uint64_t)v28, _s12OutputHelperVMa);
    swift_release();
    swift_release();
    return (int *)swift_release();
  }
  uint64_t v77 = (uint64_t)v23;
  uint64_t v78 = (char *)v106 - v30;
  sub_1005E1790();
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v79 = v138;
  sub_1004896B4((uint64_t)v16);
  if (v79)
  {
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v78, v135);
    return (int *)swift_release();
  }
  uint64_t v144 = (uint64_t)v78;
  uint64_t v108 = a3;
  uint64_t v80 = (unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 6);
  uint64_t v81 = v134;
  while (1)
  {
    swift_endAccess();
    if ((*v80)(v16, 1, v81) == 1) {
      break;
    }
    sub_1004C8910((uint64_t)v16, (uint64_t)v21, _s19CommandOutputBufferV8SendDataVMa);
    if (v142)
    {
      unint64_t v141 = v21[*(int *)(v81 + 20)] | ((unint64_t)*(unsigned int *)&v21[*(int *)(v81 + 20) + 4] << 32);
      __int16 v82 = &v145;
LABEL_29:
      *(unsigned char *)*(v82 - 32) = 0;
      goto LABEL_30;
    }
    uint64_t v83 = &v21[*(int *)(v81 + 20)];
    uint64_t v84 = *v83;
    uint64_t v85 = *((unsigned int *)v83 + 1);
    if (v84 != v141 || v85 != HIDWORD(v141))
    {
      uint64_t v139 = v84 | (v85 << 32);
      __int16 v82 = &v143;
      goto LABEL_29;
    }
LABEL_30:
    sub_1004C8910((uint64_t)v21, v77, _s19CommandOutputBufferV8SendDataVMa);
    sub_1004C8910(v77, (uint64_t)v25, _s19CommandOutputBufferV8SendDataVMa);
    sub_1005E17A0();
    sub_1004C8978((uint64_t)v25, _s19CommandOutputBufferV8SendDataVMa);
    swift_beginAccess();
    sub_1004896B4((uint64_t)v16);
  }
  sub_100007A48((uint64_t)v16, &qword_100717168);
  uint64_t v89 = v117;
  int v90 = v111;
  uint64_t v91 = v144;
  uint64_t v92 = v135;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v111, v144, v135);
  uint64_t v138 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v91, v92);
  unint64_t v101 = v141;
  char v96 = v142;
  uint64_t v97 = v139;
  char v100 = v140;
  uint64_t v99 = v112;
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 32))(v112, v90, v92);
  swift_release();
  unint64_t result = (int *)_s11CompressionO12OutgoingDataVMa();
  *(void *)(v99 + result[5]) = v138;
  uint64_t v103 = v99 + result[6];
  *(void *)uint64_t v103 = 0;
  char v102 = 1;
LABEL_43:
  *(unsigned char *)(v103 + 8) = v102;
  uint64_t v104 = v99 + result[7];
  *(void *)uint64_t v104 = v101;
  *(unsigned char *)(v104 + 8) = v96;
  uint64_t v105 = v99 + result[8];
  *(void *)uint64_t v105 = v97;
  *(unsigned char *)(v105 + 8) = v100;
  return result;
}

uint64_t _s11CompressionO12OutgoingDataVMa()
{
  uint64_t result = qword_1007171C8;
  if (!qword_1007171C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004C88AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12OutputHelperV5ChunkVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004C8910(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004C8978(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1004C89D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1005E17E0();
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Deflate.InputBuffer(0);
  __chkstk_darwin();
  uint64_t v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Deflate.Result(0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v21 = a5;
    *uint64_t v13 = a1;
    v13[1] = a2;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    uint64_t v16 = v24;
    sub_1004B2CCC((uint64_t)v13, (uint64_t)v15);
    if (v16)
    {
      swift_release();
      swift_release();
      sub_1004C8978((uint64_t)v13, type metadata accessor for Deflate.InputBuffer);
    }
    else
    {
      sub_1004C8978((uint64_t)v13, type metadata accessor for Deflate.InputBuffer);
      uint64_t v17 = v22;
      uint64_t v18 = v23;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v11, v15, v23);
      __chkstk_darwin();
      uint64_t v19 = v21;
      *(&v21 - 2) = (uint64_t)sub_1004C8CE4;
      *(&v21 - 1) = v19;
      sub_1005E1750();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v18);
      uint64_t v13 = (void *)_s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
      swift_release();
      swift_release();
      sub_1004C8978((uint64_t)v15, type metadata accessor for Deflate.Result);
    }
  }
  else
  {
    swift_beginAccess();
    ServerResponseFramingParser.append(_:)(a1, a2);
    swift_endAccess();
    if (a1) {
      return (void *)(a2 - a1);
    }
    else {
      return 0;
    }
  }
  return v13;
}

uint64_t sub_1004C8CE4(uint64_t a1, uint64_t a2)
{
  return sub_1004BEB34(a1, a2);
}

uint64_t *sub_1004C8CEC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unsigned char v9[8] = v10[8];
    *(void *)uint64_t v9 = *(void *)v10;
    uint64_t v11 = a3[7];
    uint64_t v12 = a3[8];
    uint64_t v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    v13[8] = v14[8];
    *(void *)uint64_t v13 = *(void *)v14;
    uint64_t v15 = (char *)a1 + v12;
    uint64_t v16 = (char *)a2 + v12;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
  }
  return a1;
}

uint64_t sub_1004C8E04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t sub_1004C8ECC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = v18;
  return a1;
}

uint64_t sub_1004C8F9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t sub_1004C9064(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t sub_1004C912C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004C9140);
}

uint64_t sub_1004C9140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1004C91AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004C91C0);
}

uint64_t sub_1004C91C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1004C9230()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s11CompressionO18DeflateCompressionVwxx()
{
  swift_release();
  return swift_release();
}

void *_s11CompressionO18DeflateCompressionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *_s11CompressionO18DeflateCompressionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s11CompressionO18DeflateCompressionVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *_s11CompressionO18DeflateCompressionVMa()
{
  return &_s11CompressionO18DeflateCompressionVN;
}

uint64_t HandshakeReply.Encoded.init(content:tag:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = a2;
  unint64_t v6 = HIDWORD(a2);
  uint64_t v7 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  uint64_t result = type metadata accessor for HandshakeReply.Encoded();
  uint64_t v9 = a3 + *(int *)(result + 20);
  *(unsigned char *)uint64_t v9 = v3;
  *(_DWORD *)(v9 + 4) = v6;
  return result;
}

uint64_t type metadata accessor for HandshakeReply.Encoded()
{
  uint64_t result = qword_100717268;
  if (!qword_100717268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static HandshakeQuery.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  return sub_1004C95FC(a1, a2, a3 & 1, a4, a5, a6 & 1) & 1;
}

uint64_t sub_1004C9504(uint64_t a1, uint64_t a2)
{
  return sub_1004C95FC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)) & 1;
}

unint64_t HandshakeReply.Encoded.tag.getter()
{
  uint64_t v1 = type metadata accessor for HandshakeReply.Encoded();
  return *(unsigned __int8 *)(v0 + *(int *)(v1 + 20)) | ((unint64_t)*(unsigned int *)(v0 + *(int *)(v1 + 20) + 4) << 32);
}

uint64_t HandshakeReply.Encoded.tag.setter(unint64_t a1)
{
  char v2 = a1;
  unint64_t v3 = HIDWORD(a1);
  uint64_t result = type metadata accessor for HandshakeReply.Encoded();
  uint64_t v5 = v1 + *(int *)(result + 20);
  *(unsigned char *)uint64_t v5 = v2;
  *(_DWORD *)(v5 + 4) = v3;
  return result;
}

Swift::UInt32 (__swiftcall *HandshakeReply.Encoded.tag.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t sub_1004C95FC(uint64_t a1, unint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  if (a3)
  {
    if (a6)
    {
      uint64_t v11 = 0;
      switch(a2 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(a1), a1))
          {
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
            JUMPOUT(0x1004C97E0);
          }
          uint64_t v11 = HIDWORD(a1) - (int)a1;
LABEL_15:
          sub_100008D24(a1, a2);
LABEL_16:
          switch(a5 >> 62)
          {
            case 1uLL:
              LODWORD(v15) = HIDWORD(a4) - a4;
              if (__OFSUB__(HIDWORD(a4), a4)) {
                goto LABEL_32;
              }
              uint64_t v15 = (int)v15;
LABEL_21:
              if (v11 != v15)
              {
LABEL_26:
                sub_1004445F8(a1, a2, 1);
                return 0;
              }
              if (v11 < 1)
              {
LABEL_29:
                uint64_t v10 = 1;
                sub_1004445F8(a1, a2, 1);
              }
              else
              {
                sub_100008D24(a4, a5);
                char v19 = sub_10044B7E4(a1, a2, a4, a5);
                uint64_t v10 = 1;
                sub_1004445F8(a1, a2, 1);
                if ((v19 & 1) == 0) {
                  return 0;
                }
              }
              break;
            case 2uLL:
              uint64_t v17 = *(void *)(a4 + 16);
              uint64_t v16 = *(void *)(a4 + 24);
              BOOL v18 = __OFSUB__(v16, v17);
              uint64_t v15 = v16 - v17;
              if (!v18) {
                goto LABEL_21;
              }
              goto LABEL_33;
            case 3uLL:
              if (v11) {
                goto LABEL_26;
              }
              goto LABEL_29;
            default:
              uint64_t v15 = BYTE6(a5);
              goto LABEL_21;
          }
          break;
        case 2uLL:
          uint64_t v14 = *(void *)(a1 + 16);
          uint64_t v13 = *(void *)(a1 + 24);
          uint64_t v11 = v13 - v14;
          if (!__OFSUB__(v13, v14)) {
            goto LABEL_15;
          }
          goto LABEL_31;
        case 3uLL:
          goto LABEL_16;
        default:
          uint64_t v11 = BYTE6(a2);
          goto LABEL_16;
      }
      return v10;
    }
    return 0;
  }
  if (a6) {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  return sub_1005E3290();
}

uint64_t _s15IMAP2Connection14HandshakeReplyO7EncodedV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)v23 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for HandshakeReply.Encoded() + 20);
  int v11 = *(unsigned __int8 *)(a1 + v10);
  int v12 = *(_DWORD *)(a1 + v10 + 4);
  uint64_t v13 = (unsigned __int8 *)(a2 + v10);
  int v14 = *v13;
  int v15 = *((_DWORD *)v13 + 1);
  if (v11 != v14 || v12 != v15) {
    return 0;
  }
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v17(v9, a1, v4);
  v17(v7, a2, v4);
  uint64_t v18 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  if (v18 != _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0())
  {
    uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
    v21(v7, v4);
    v21(v9, v4);
    return 0;
  }
  sub_10048A4F8();
  sub_1005E2390();
  sub_1005E23E0();
  if (v24 == v23[2])
  {
    char v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v7, v4);
    v19(v9, v4);
    return 1;
  }
  else
  {
    __chkstk_darwin();
    v23[-2] = v7;
    v23[-1] = v9;
    sub_1005E1760();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
    v22(v7, v4);
    v22(v9, v4);
    return v24;
  }
}

uint64_t sub_1004C9A94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10044B198(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for HandshakeReply()
{
  return &type metadata for HandshakeReply;
}

uint64_t destroy for HandshakeQuery(uint64_t a1)
{
  return sub_1004445F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s15IMAP2Connection14HandshakeReplyOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10044B198(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1004445F8(v6, v7, v8);
  return a1;
}

uint64_t _s15IMAP2Connection14HandshakeReplyOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1004445F8(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for HandshakeQuery()
{
  return &type metadata for HandshakeQuery;
}

uint64_t getEnumTagSinglePayload for HandshakeReply.Encoded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004C9BE0);
}

uint64_t sub_1004C9BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HandshakeReply.Encoded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004C9C60);
}

uint64_t sub_1004C9C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1004C9CD0()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004C9D6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 2;
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_1004C9DD0(uint64_t a1)
{
  type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100086AE0(a1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() != 20) {
    return sub_1001D6E50((uint64_t)v4);
  }
  long long v7 = *(_OWORD *)v4;
  uint64_t v5 = *((void *)v4 + 2);
  uint64_t result = sub_1000A6FC4(v1[4], v1[5]);
  *((_OWORD *)v1 + 2) = v7;
  v1[6] = v5;
  return result;
}

uint64_t sub_1004C9E9C@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  if (a1 || (uint64_t v4 = (void *)v2[5]) == 0)
  {
    long long v8 = xmmword_100625790;
    char v9 = 2;
    sub_100466184((uint64_t)&v8);
  }
  else
  {
    uint64_t v5 = v2[6];
    uint64_t v6 = v2[4];
    swift_retain();
    swift_retain();
    swift_retain();
    ServerID.init(_:)(v6, v4, v5, (uint64_t)&v8);
    sub_1004CBA74((uint64_t)&v8);
  }
  sub_10044AF04((uint64_t)&v8, (uint64_t)v10);
  UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v10);
  sub_100466190((uint64_t)v10, (uint64_t)v11);
  return sub_100466190((uint64_t)v11, a2);
}

uint64_t sub_1004C9F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  uint64_t v10 = (void *)v4[1];
  swift_retain();
  swift_retain();
  unint64_t v11 = sub_100383808(a3, a4, v9, v10);
  char v13 = v12;
  unint64_t v15 = v14;
  swift_release();
  swift_release();
  if (v13)
  {
    if (a2 != 1)
    {
      swift_bridgeObjectRetain();
      sub_1004CA7A8(a3, a4);
      uint64_t v22 = v4[2];
      v4 += 2;
      uint64_t v21 = v22;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v4 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1004B88DC(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = *v4;
      }
      unint64_t v15 = *(void *)(v21 + 16);
      unint64_t v19 = *(void *)(v21 + 24);
      uint64_t v17 = (void *)(v15 + 1);
      if (v15 < v19 >> 1) {
        goto LABEL_18;
      }
      goto LABEL_21;
    }
  }
  else
  {
    if (a2 != 1)
    {
      uint64_t v17 = (void *)v4[2];
      swift_bridgeObjectRetain();
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      if ((v18 & 1) == 0) {
        uint64_t v17 = (void *)sub_1004518D8(v17);
      }
      if ((v11 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v19 = v17[2];
        if (v11 < v19)
        {
          uint64_t v20 = &v17[2 * v11];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v20[4] = a1;
          v20[5] = a2;
          swift_bridgeObjectRelease();
          sub_1001F3278(a1, a2);
          uint64_t result = sub_1001F3278(a1, a2);
          v4[2] = (uint64_t)v17;
          return result;
        }
      }
      __break(1u);
LABEL_21:
      sub_1004B88DC(v19 > 1, (int64_t)v17, 1);
      uint64_t v21 = *v4;
LABEL_18:
      *(void *)(v21 + 16) = v17;
      unint64_t v24 = v21 + 16 * v15;
      *(void *)(v24 + 32) = a1;
      *(void *)(v24 + 40) = a2;
      swift_bridgeObjectRelease();
      sub_1001F3278(a1, a2);
      uint64_t result = sub_1001F3278(a1, a2);
      *uint64_t v4 = v21;
      return result;
    }
    sub_1004CA924(v11, v15);
    swift_bridgeObjectRelease();
    sub_1004CAAA4(v11);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004CA198(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  if (!a2)
  {
    if (!a4) {
      return a3;
    }
    uint64_t v8 = 40;
LABEL_11:
    v10._countAndFlagsBits = a3;
    v10._object = a4;
    sub_1005E1E30(v10);
    v11._countAndFlagsBits = 41;
    v11._object = (void *)0xE100000000000000;
    sub_1005E1E30(v11);
    return v8;
  }
  uint64_t v6 = a1;
  if (a4 && (a1 != a3 || a2 != a4) && (sub_1005E3290() & 1) == 0)
  {
    uint64_t v8 = v6;
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = 10272;
    v9._object = (void *)0xE200000000000000;
    sub_1005E1E30(v9);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1004CA27C@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1005E1C90();
  __chkstk_darwin(v4 - 8);
  sub_1005E0590();
  swift_allocObject();
  uint64_t v13 = 0xC800000000;
  unint64_t v14 = sub_1005E0560();
  sub_1004CAE88((int *)&v13, 0);
  v14 |= 0x4000000000000000uLL;
  uint64_t v5 = sub_1004CA3D4(&v13, a1);
  if ((v6 & 1) != 0 || v5 < 1)
  {
    uint64_t result = sub_1000094D4(v13, v14);
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_1005E0860();
    uint64_t v7 = v13;
    unint64_t v8 = v14;
    sub_100008D24(v13, v14);
    sub_1005E1C70();
    uint64_t v9 = sub_1005E1C20();
    uint64_t v11 = v10;
    sub_1000094D4(v7, v8);
    uint64_t result = sub_1000094D4(v7, v8);
  }
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1004CA3D4(uint64_t *a1, char *a2)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v8 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_100622570;
      uint64_t v9 = v3 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_16;
      }
      if (v9 < (int)v3) {
        goto LABEL_19;
      }
      if (sub_1005E0550() && __OFSUB__((int)v3, sub_1005E0580())) {
        goto LABEL_20;
      }
      sub_1005E0590();
      swift_allocObject();
      uint64_t v11 = sub_1005E0530();
      swift_release();
      uint64_t v8 = v11;
LABEL_16:
      if (v9 < (int)v3)
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
      }
      uint64_t result = sub_1004CA6C4((int)v3, v3 >> 32, v8, a2);
      *a1 = v3;
      a1[1] = v8 | 0x4000000000000000;
      return result;
    case 2uLL:
      *(void *)&long long v13 = *a1;
      *((void *)&v13 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1005E0810();
      uint64_t v10 = *((void *)&v13 + 1);
      uint64_t result = sub_1004CA6C4(*(void *)(v13 + 16), *(void *)(v13 + 24), *((uint64_t *)&v13 + 1), a2);
      *a1 = v13;
      a1[1] = v10 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v13 + 7) = 0;
      size_t v12 = 0;
      *(void *)&long long v13 = 0;
      if (sysctlbyname(a2, &v13, &v12, 0, 0)) {
        return 0;
      }
      else {
        return v12;
      }
    default:
      *(void *)&long long v13 = *a1;
      WORD4(v13) = v2;
      BYTE10(v13) = BYTE2(v2);
      BYTE11(v13) = BYTE3(v2);
      BYTE12(v13) = BYTE4(v2);
      BYTE13(v13) = BYTE5(v2);
      BYTE14(v13) = BYTE6(v2);
      size_t v12 = BYTE6(v2);
      if (sysctlbyname(a2, &v13, &v12, 0, 0)) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = v12;
      }
      unint64_t v7 = DWORD2(v13) | ((unint64_t)BYTE12(v13) << 32) | ((unint64_t)BYTE13(v13) << 40) | ((unint64_t)BYTE14(v13) << 48);
      *a1 = v13;
      a1[1] = v7;
      return result;
  }
}

size_t sub_1004CA6C4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7 = sub_1005E0550();
  if (!v7) {
LABEL_13:
  }
    __break(1u);
  uint64_t v8 = v7;
  uint64_t v9 = sub_1005E0580();
  uint64_t v10 = a1 - v9;
  if (__OFSUB__(a1, v9))
  {
    __break(1u);
    goto LABEL_12;
  }
  BOOL v11 = __OFSUB__(a2, a1);
  int64_t v12 = a2 - a1;
  if (v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v13 = sub_1005E0570();
  if (v13 >= v12) {
    size_t v14 = v12;
  }
  else {
    size_t v14 = v13;
  }
  size_t v16 = v14;
  if (sysctlbyname(a4, (void *)(v8 + v10), &v16, 0, 0)) {
    return 0;
  }
  else {
    return v16;
  }
}

uint64_t sub_1004CA7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v8 = v2[1];
  char v6 = v2 + 1;
  uint64_t v7 = v8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *char v6 = v8;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1004B885C(0, *(void *)(v7 + 16) + 1, 1);
    uint64_t v7 = *v6;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  unint64_t v10 = *(void *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    uint64_t result = sub_1004B885C(v10 > 1, v11 + 1, 1);
    uint64_t v7 = *v6;
  }
  *(void *)(v7 + 16) = v11 + 1;
  unint64_t v12 = v7 + 16 * v11;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  v3[1] = v7;
  uint64_t v13 = *(void *)(v7 + 16);
  if (*v3)
  {
    swift_beginAccess();
    if (sub_1005E0BA0() >= v13)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v14 = *v3;
      if (!result)
      {
        if (!v14)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v14 = sub_1005E0BC0();
        uint64_t result = swift_release();
        *uint64_t v3 = v14;
      }
      if (v14) {
        return sub_1005E0B60();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v13 < 0x10)
  {
    return result;
  }
  return sub_100383BA8();
}

unint64_t sub_1004CA924(int64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2[1] + 16);
  uint64_t v5 = *v2;
  if (!*v2)
  {
    if (v4) {
      return sub_1004CAB80(a1);
    }
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(void *)(v5 + 16) & 0x3FLL) == (*(void *)(v5 + 24) & 0x3FLL))
  {
    if (!v4) {
      goto LABEL_15;
    }
  }
  else if (v4 <= sub_1005E0BB0())
  {
LABEL_15:
    uint64_t v10 = sub_1004CAB80(a1);
    sub_100383BA8();
    return v10;
  }
  unint64_t result = swift_isUniquelyReferenced_native();
  uint64_t v8 = *v2;
  if (!result)
  {
    if (!v8) {
      goto LABEL_20;
    }
    uint64_t v8 = sub_1005E0BC0();
    unint64_t result = swift_release();
    *unint64_t v2 = v8;
  }
  if (v8)
  {
    swift_retain();
    unint64_t result = sub_1003A7328(a2, (void *)(v8 + 16), v8 + 32, (uint64_t)v2);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      uint64_t v9 = v2[1];
      swift_retain();
      sub_1003A750C(a1, a1 + 1, v9, (void *)(v8 + 16));
      swift_release();
      swift_release();
      return sub_1004CAB80(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1004CAAA4(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1004518D8(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *unint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004CAB80(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1004518C4(v3);
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = v3 + 16 * a1;
      uint64_t v8 = *(void *)(v7 + 32);
      memmove((void *)(v7 + 32), (const void *)(v7 + 48), 16 * v6);
      *(void *)(v3 + 16) = v5;
      *unint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004CAC5C(uint64_t result, char a2)
{
  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = v2;
  int64_t v5 = result;
  Swift::Int v8 = v2[1];
  uint64_t v6 = v2 + 1;
  Swift::Int v7 = v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(void *)(v7 + 24) >> 1)
  {
    uint64_t v10 = *v3;
    if (*v3) {
      goto LABEL_5;
    }
  }
  else
  {
    if (*(void *)(v7 + 16) <= v5) {
      int64_t v15 = v5;
    }
    else {
      int64_t v15 = *(void *)(v7 + 16);
    }
    sub_1004B885C(isUniquelyReferenced_nonNull_native, v15, 0);
    Swift::Int v7 = *v6;
    uint64_t v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16) & 0x3FLL;
      uint64_t v12 = sub_1005E0BD0();
      uint64_t v13 = v12;
      if (a2)
      {
        uint64_t v14 = v12;
        if (v11 >= v12) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v14 = *(void *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13) {
          goto LABEL_20;
        }
      }
LABEL_16:
      if (v14 <= v13) {
        uint64_t v17 = v13;
      }
      else {
        uint64_t v17 = v14;
      }
      goto LABEL_30;
    }
  }
  uint64_t v16 = sub_1005E0BD0();
  uint64_t v13 = v16;
  uint64_t v11 = 0;
  if (a2) {
    uint64_t v14 = v16;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v16 > 0) {
    goto LABEL_16;
  }
LABEL_20:
  if (v14 <= v13) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v14;
  }
  uint64_t result = sub_1005E0BD0();
  if (result <= v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = result;
  }
  if (v19 < v11)
  {
    if (v14 <= v19) {
      uint64_t v17 = v19;
    }
    else {
      uint64_t v17 = v14;
    }
LABEL_30:
    uint64_t v20 = sub_100383C4C(v7, v17, 0, v14);
    uint64_t result = swift_release();
    *uint64_t v3 = v20;
    return result;
  }
  if (!v10 || (uint64_t result = swift_isUniquelyReferenced_native(), result))
  {
    uint64_t v21 = *v3;
    if (*v3) {
      goto LABEL_35;
    }
LABEL_39:
    if (!v14) {
      return result;
    }
    __break(1u);
    goto LABEL_41;
  }
  uint64_t result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  uint64_t v21 = sub_1005E0BC0();
  uint64_t result = swift_release();
  *uint64_t v3 = v21;
  if (!v21) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t result = swift_beginAccess();
  if ((*(void *)(v21 + 24) & 0x3FLL) != v14) {
    *(void *)(v21 + 24) = *(void *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  }
  return result;
}

uint64_t sub_1004CAE40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (!v3) {
    return v5;
  }
  return result;
}

void sub_1004CAE88(int *a1, int a2)
{
  sub_1005E0820();
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = sub_1005E0550();
  if (!v6)
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_1005E0580();
  uint64_t v9 = v4 - v8;
  if (__OFSUB__(v4, v8))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v10 = v5 - v4;
  uint64_t v11 = sub_1005E0570();
  if (v11 >= v10) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v11;
  }
  memset((void *)(v7 + v9), a2, v12);
}

uint64_t sub_1004CAF1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1004CAC5C(v2, 0);
  sub_1004B88DC(0, v2, 0);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v3 - 3);
    uint64_t v4 = *(v3 - 2);
    uint64_t v7 = *(v3 - 1);
    uint64_t v6 = *v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_100383808(v5, v4, 0, _swiftEmptyArrayStorage);
    if ((v9 & 1) == 0) {
      break;
    }
    sub_1004CA7A8(v5, v4);
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    unint64_t v10 = _swiftEmptyArrayStorage[3];
    if (v11 >= v10 >> 1) {
      sub_1004B88DC(v10 > 1, v11 + 1, 1);
    }
    v3 += 4;
    _swiftEmptyArrayStorage[2] = v11 + 1;
    size_t v12 = &_swiftEmptyArrayStorage[2 * v11];
    void v12[4] = v7;
    v12[5] = v6;
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

CFStringRef sub_1004CB060()
{
  id v0 = [self mainBundle];
  id v1 = [v0 infoDictionary];

  if (!v1) {
    return (CFStringRef)sub_1004CAF1C((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v2 = sub_1005E1970();

  uint64_t v31 = 0;
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v33 = _swiftEmptyArrayStorage;
  CFStringRef result = kCFBundleIdentifierKey;
  if (!kCFBundleIdentifierKey)
  {
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v4 = sub_1005E1C00();
  if (!*(void *)(v2 + 16) || (unint64_t v6 = sub_100024668(v4, v5), (v7 & 1) == 0))
  {
    long long v29 = 0u;
    long long v30 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1000D65AC(*(void *)(v2 + 56) + 32 * v6, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  if (!*((void *)&v30 + 1))
  {
LABEL_9:
    sub_100007A48((uint64_t)&v29, &qword_100717048);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
LABEL_17:
    sub_1004C9F6C(v27, v28, 1701667182, 0xE400000000000000);
LABEL_18:
    if (!*(void *)(v2 + 16)) {
      goto LABEL_29;
    }
    goto LABEL_22;
  }
LABEL_10:
  CFStringRef result = kCFBundleNameKey;
  if (!kCFBundleNameKey)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v8 = sub_1005E1C00();
  if (*(void *)(v2 + 16) && (unint64_t v10 = sub_100024668(v8, v9), (v11 & 1) != 0))
  {
    sub_1000D65AC(*(void *)(v2 + 56) + 32 * v10, (uint64_t)&v29);
  }
  else
  {
    long long v29 = 0u;
    long long v30 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v30 + 1))
  {
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  sub_100007A48((uint64_t)&v29, &qword_100717048);
  if (!*(void *)(v2 + 16))
  {
LABEL_29:
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    goto LABEL_30;
  }
LABEL_22:
  unint64_t v12 = sub_100024668(0xD00000000000001ALL, 0x80000001005EB630);
  if ((v13 & 1) == 0) {
    goto LABEL_29;
  }
  sub_1000D65AC(*(void *)(v2 + 56) + 32 * v12, (uint64_t)&v29);
  int v14 = swift_dynamicCast();
  if (v14) {
    uint64_t v15 = v27;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v14) {
    uint64_t v16 = (void *)v28;
  }
  else {
    uint64_t v16 = 0;
  }
LABEL_30:
  CFStringRef result = kCFBundleVersionKey;
  if (!kCFBundleVersionKey)
  {
LABEL_49:
    __break(1u);
    return result;
  }
  uint64_t v17 = sub_1005E1C00();
  if (*(void *)(v2 + 16) && (unint64_t v19 = sub_100024668(v17, v18), (v20 & 1) != 0))
  {
    sub_1000D65AC(*(void *)(v2 + 56) + 32 * v19, (uint64_t)&v29);
  }
  else
  {
    long long v29 = 0u;
    long long v30 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v30 + 1))
  {
    int v21 = swift_dynamicCast();
    if (v21) {
      uint64_t v22 = v27;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v21) {
      uint64_t v23 = (void *)v28;
    }
    else {
      uint64_t v23 = 0;
    }
  }
  else
  {
    sub_100007A48((uint64_t)&v29, &qword_100717048);
    uint64_t v22 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v24 = sub_1004CA198(v15, v16, v22, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v26) {
    sub_1004C9F6C(v24, v26, 0x6E6F6973726576, 0xE700000000000000);
  }
  return (CFStringRef)v31;
}

CFStringRef sub_1004CB3EC(char a1)
{
  CFStringRef v20 = sub_1004CB060();
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  NSString v4 = sub_1005E1BD0();
  uint64_t v5 = (void *)MGGetStringAnswer();

  if (v5)
  {
    uint64_t v7 = sub_1005E1C00();
    uint64_t v9 = v8;

    uint64_t v6 = sub_1004C9F6C(v7, v9, 29551, 0xE200000000000000);
  }
  if (((unint64_t)"MarketingProductName" & 0x1000000000000000) != 0)
  {
    sub_10000566C(&qword_100715918);
    sub_1005E2C50();
    unint64_t v12 = (void *)*((void *)&v19 + 1);
    uint64_t v10 = v19;
  }
  else
  {
    __chkstk_darwin(v6);
    if (((unint64_t)"MarketingProductName" & 0x2000000000000000) != 0)
    {
      *(void *)&long long v19 = 0xD000000000000015;
      *((void *)&v19 + 1) = (unint64_t)"MarketingProductName" & 0xFFFFFFFFFFFFFFLL;
      sub_1004CA27C((char *)&v19, &v17);
      uint64_t v10 = v17;
      unint64_t v12 = v18;
    }
    else
    {
      uint64_t v10 = sub_1004CAE40(((unint64_t)"MarketingProductName" & 0xFFFFFFFFFFFFFFFLL) + 32, 21, (uint64_t (*)(void))sub_1004CB64C);
      unint64_t v12 = v11;
    }
  }
  long long v19 = xmmword_1006257B0;
  sub_1004CA27C((char *)&v19, &v17);
  uint64_t v13 = sub_1004CA198(v10, v12, v17, v18);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15) {
    sub_1004C9F6C(v13, v15, 0x69737265762D736FLL, 0xEA00000000006E6FLL);
  }
  sub_1004C9F6C(0x6E4920656C707041, 0xE900000000000063, 0x726F646E6576, 0xE600000000000000);
  if (a1) {
    sub_1004C9F6C(49, 0xE100000000000000, 0x72657865646E69, 0xE700000000000000);
  }
  return v20;
}

double sub_1004CB64C@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

uint64_t destroy for IdentifyServer(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for IdentifyServer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v5)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v5;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for IdentifyServer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_retain();
      swift_release();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_retain();
      swift_release();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100007A48(a1 + 32, &qword_1007172A0);
      uint64_t v7 = *(void *)(a2 + 48);
      *uint64_t v4 = *v5;
      *(void *)(a1 + 48) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v8 = *v5;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *uint64_t v4 = v8;
  }
  return a1;
}

uint64_t assignWithTake for IdentifyServer(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 40);
  if (!v4)
  {
    sub_100007A48(a1 + 32, &qword_1007172A0);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = v4;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentifyServer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentifyServer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentifyServer()
{
  return &type metadata for IdentifyServer;
}

uint64_t sub_1004CBA74(uint64_t result)
{
  *(unsigned char *)(result + 176) = 3;
  return result;
}

uint64_t destroy for IdleTimer()
{
  return swift_release();
}

uint64_t initializeWithCopy for IdleTimer(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for IdleTimer(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
  return a1;
}

__n128 initializeWithTake for IdleTimer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for IdleTimer(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdleTimer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 60)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdleTimer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 60) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 60) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdleTimer()
{
  return &type metadata for IdleTimer;
}

__uint64_t sub_1004CBC54(__uint64_t result)
{
  if ((_BYTE)result)
  {
    if (result == 1)
    {
      double v2 = *(float *)(v1 + 56) * 17.0;
      __n128 result = static MonotonicTime.now()();
      *(double *)uint64_t v1 = v2;
      *(_OWORD *)(v1 + 8) = xmmword_1005F6750;
      *(void *)(v1 + 24) = result;
      *(unsigned char *)(v1 + 32) = 0;
      return result;
    }
    double v4 = *(double *)(v1 + 48) * *(float *)(v1 + 56);
    __n128 result = static MonotonicTime.now()();
    *(_OWORD *)uint64_t v1 = xmmword_1005F6750;
    *(void *)(v1 + 16) = result;
    *(double *)(v1 + 24) = v4;
    char v3 = 1;
  }
  else
  {
    *(_OWORD *)uint64_t v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
    char v3 = 2;
  }
  *(unsigned char *)(v1 + 32) = v3;
  return result;
}

BOOL sub_1004CBCF0(long long *a1, long long *a2)
{
  sub_1003DC26C(a1, (uint64_t)v4);
  sub_1003DC26C(a2, (uint64_t)v5);
  return sub_1004CC790(v4, v5);
}

BOOL sub_1004CBD3C(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return *(void *)(a1 + 24) == *(void *)(a2 + 24);
}

BOOL sub_1004CBD94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a1 + 8))
  {
    if (v2 == v3) {
      char v4 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v4 = 0;
    }
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 8)) {
      return 0;
    }
    if (*(void *)a1 != *(void *)a2 || v2 != v3) {
      return 0;
    }
  }
  return *(double *)(a1 + 24) == *(double *)(a2 + 24);
}

uint64_t sub_1004CBDF8(uint64_t result, char a2, uint64_t a3)
{
  *(void *)(v3 + 8) = result;
  *(unsigned char *)(v3 + 16) = a2 & 1;
  if (a2) {
    return 1;
  }
  double v4 = *(double *)v3;
  BOOL v5 = __OFSUB__(a3, result);
  uint64_t v6 = a3 - result;
  if (a3 >= result)
  {
LABEL_7:
    if (!v5) {
      goto LABEL_8;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (__OFSUB__(result, a3))
  {
    __break(1u);
    goto LABEL_19;
  }
  BOOL v5 = __OFSUB__(0, result - a3);
  uint64_t v6 = a3 - result;
  if (v5)
  {
    __break(1u);
    goto LABEL_7;
  }
LABEL_8:
  if (v4 >= (double)v6 / 1000000000.0) {
    return 1;
  }
  uint64_t v7 = *(void *)(v3 + 24);
  if (v7 > a3)
  {
    if (!__OFSUB__(v7, a3))
    {
      uint64_t v8 = a3 - v7;
      if (!__OFSUB__(0, v7 - a3))
      {
LABEL_15:
        if (v4 < (double)v8 / 1000000000.0)
        {
          __n128 result = 0;
          *(void *)(v3 + 24) = a3;
          return result;
        }
        return 1;
      }
      __break(1u);
      goto LABEL_14;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_14:
  uint64_t v8 = a3 - v7;
  if (!__OFSUB__(a3, v7)) {
    goto LABEL_15;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1004CBEAC@<X0>(void (*a1)(void *__return_ptr)@<X0>, uint64_t a2@<X8>)
{
  a1(v4);
  return sub_1004CC640((uint64_t)v4, a2);
}

uint64_t sub_1004CBEF0(uint64_t a1, char a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v66 = a8;
  char v14 = a2 & 1;
  uint64_t v64 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v15 = __chkstk_darwin(v64);
  uint64_t v65 = &v60[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v63 = &v60[-v17];
  uint64_t v18 = sub_1005E0ED0();
  uint64_t v19 = __chkstk_darwin(v18);
  unint64_t v21 = (unint64_t)&v60[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __chkstk_darwin(v19);
  *(void *)uint64_t v8 = a1;
  *(unsigned char *)(v8 + 8) = v14;
  if (a2) {
    return 1;
  }
  uint64_t v62 = &v60[-v23];
  uint64_t v27 = v24;
  uint64_t v28 = v22;
  ((void (*)(uint64_t *__return_ptr))a3)(&v69);
  uint64_t result = sub_1004CC640((uint64_t)&v69, (uint64_t)v70);
  if (v72)
  {
    unint64_t v21 = v70[0];
    a3 = v71;
    uint64_t v29 = v73;
    if (v73 <= a7)
    {
LABEL_16:
      uint64_t v30 = a7 - v29;
      if (!__OFSUB__(a7, v29))
      {
LABEL_17:
        double v32 = (double)v30 / 1000000000.0;
        double v33 = *(double *)(v8 + 24);
        if (v33 < v32)
        {
          sub_10002A77C((uint64_t)&v69);
          return 0;
        }
        uint64_t v34 = *(void *)(v8 + 16);
        if (v34 <= a7)
        {
          uint64_t v35 = a7 - v34;
          if (!__OFSUB__(a7, v34)) {
            goto LABEL_27;
          }
          goto LABEL_38;
        }
        if (!__OFSUB__(v34, a7))
        {
          uint64_t v35 = a7 - v34;
          if (!__OFSUB__(0, v34 - a7))
          {
LABEL_27:
            if ((double)v35 / 1000000000.0 <= 25.0)
            {
              sub_10002A77C((uint64_t)&v69);
            }
            else
            {
              *(void *)(v8 + 16) = a7;
              uint64_t v46 = v62;
              uint64_t v47 = v66;
              uint64_t v48 = v27;
              (*(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 16))(v62, v66, v28);
              uint64_t v49 = v63;
              sub_100447F0C(v47, (uint64_t)v63);
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              swift_bridgeObjectRetain();
              BOOL v50 = sub_1005E0EB0();
              os_log_type_t v51 = sub_1005E2590();
              int v52 = v51;
              if (os_log_type_enabled(v50, v51))
              {
                uint64_t v53 = swift_slowAlloc();
                uint64_t v66 = v28;
                uint64_t v54 = v53;
                uint64_t v65 = (unsigned char *)swift_slowAlloc();
                uint64_t v68 = v65;
                *(_DWORD *)uint64_t v54 = 68158978;
                LODWORD(v67) = 2;
                int v61 = v52;
                sub_1005E2960();
                *(_WORD *)(v54 + 8) = 256;
                uint64_t v55 = &v49[*(int *)(v64 + 20)];
                LOBYTE(v67) = *v55;
                sub_1005E2960();
                *(_WORD *)(v54 + 11) = 2082;
                uint64_t v56 = ConnectionID.debugDescription.getter(*((unsigned int *)v55 + 1));
                uint64_t v67 = sub_100481E54(v56, v57, (uint64_t *)&v68);
                sub_1005E2960();
                swift_bridgeObjectRelease();
                sub_100448118((uint64_t)v49);
                *(_WORD *)(v54 + 21) = 2082;
                uint64_t v58 = Tag.debugDescription.getter(v21 | (a3 << 32));
                uint64_t v67 = sub_100481E54(v58, v59, (uint64_t *)&v68);
                sub_1005E2960();
                swift_bridgeObjectRelease();
                sub_10002A77C((uint64_t)&v69);
                sub_10002A77C((uint64_t)&v69);
                *(_WORD *)(v54 + 31) = 2048;
                uint64_t v67 = *(void *)&v32;
                sub_1005E2960();
                *(_WORD *)(v54 + 41) = 2048;
                uint64_t v67 = *(void *)&v33;
                sub_1005E2960();
                _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v61, "[%.*hhx-%{public}s] %{public}s IDLE is %f seconds old (< %f). Not refreshing.", (uint8_t *)v54, 0x33u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v46, v66);
              }
              else
              {
                sub_100448118((uint64_t)v49);
                sub_10002A77C((uint64_t)&v69);
                sub_10002A77C((uint64_t)&v69);

                (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v46, v28);
              }
            }
            return 1;
          }
          __break(1u);
LABEL_24:
          uint64_t v36 = v27;
          uint64_t v37 = v66;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 16))(v21, v66, v28);
          uint64_t v38 = v37;
          uint64_t v39 = v65;
          sub_100447F0C(v38, (uint64_t)v65);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v40 = sub_1005E0EB0();
          os_log_type_t v41 = sub_1005E2590();
          if (os_log_type_enabled(v40, v41))
          {
            uint64_t v42 = swift_slowAlloc();
            uint64_t v68 = (unsigned char *)swift_slowAlloc();
            *(_DWORD *)uint64_t v42 = 68158210;
            LODWORD(v67) = 2;
            sub_1005E2960();
            *(_WORD *)(v42 + 8) = 256;
            uint64_t v43 = &v39[*(int *)(v64 + 20)];
            LOBYTE(v67) = *v43;
            sub_1005E2960();
            *(_WORD *)(v42 + 11) = 2082;
            uint64_t v44 = ConnectionID.debugDescription.getter(*((unsigned int *)v43 + 1));
            uint64_t v67 = sub_100481E54(v44, v45, (uint64_t *)&v68);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_100448118((uint64_t)v39);
            _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%.*hhx-%{public}s] Not sending IDLE. No mailbox selected.", (uint8_t *)v42, 0x15u);
            uint64_t v25 = 1;
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(unint64_t, uint64_t))(v36 + 8))(v21, v28);
            return v25;
          }
          sub_100448118((uint64_t)v39);

          (*(void (**)(unint64_t, uint64_t))(v36 + 8))(v21, v28);
          return 1;
        }
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (__OFSUB__(v73, a7))
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v30 = a7 - v73;
    if (!__OFSUB__(0, v73 - a7)) {
      goto LABEL_17;
    }
    __break(1u);
  }
  uint64_t result = a5(result);
  if ((result & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v31 = a7 - a1;
  if (a7 < a1)
  {
    if (__OFSUB__(a1, a7))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v31 = a7 - a1;
    if (!__OFSUB__(0, a1 - a7)) {
      return (double)v31 / 1000000000.0 <= 0.8;
    }
    __break(1u);
    goto LABEL_16;
  }
  if (!__OFSUB__(a7, a1)) {
    return (double)v31 / 1000000000.0 <= 0.8;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1004CC640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007172A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 initializeWithTake for MailboxesSelectionUsage.Element(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for IdleTimer.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdleTimer.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1004CC74C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1004CC764(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IdleTimer.State()
{
  return &type metadata for IdleTimer.State;
}

BOOL sub_1004CC790(long long *a1, long long *a2)
{
  sub_1003DC26C(a1, (uint64_t)&v18);
  if (!v22)
  {
    double v7 = v18;
    uint64_t v8 = v19;
    char v9 = v20;
    double v10 = v21;
    sub_1003DC26C(a2, (uint64_t)&v15);
    if (v17 || v7 != *(double *)v15.i64) {
      return 0;
    }
    if (v9)
    {
      if ((v16.i8[0] & 1) == 0) {
        return 0;
      }
    }
    else if ((v16.i8[0] & 1) != 0 || v8 != v15.i64[1])
    {
      return 0;
    }
    return *(void *)&v10 == v16.i64[1];
  }
  if (v22 != 1)
  {
    sub_1003DC26C(a2, (uint64_t)&v15);
    int8x16_t v11 = vorrq_s8(v15, v16);
    int8x8_t v12 = vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL));
    return v17 == 2 && *(void *)&v12 == 0;
  }
  double v3 = v18;
  char v4 = v19;
  uint64_t v5 = v20;
  double v6 = v21;
  sub_1003DC26C(a2, (uint64_t)&v15);
  if (v17 != 1) {
    return 0;
  }
  if (v4)
  {
    if (v15.i8[8]) {
      return v5 == v16.i64[0] && v6 == *(double *)&v16.i64[1];
    }
    return 0;
  }
  if ((v15.i8[8] & 1) != 0 || *(void *)&v3 != v15.i64[0]) {
    return 0;
  }
  return v5 == v16.i64[0] && v6 == *(double *)&v16.i64[1];
}

ValueMetadata *type metadata accessor for IdleTimer.IdleState()
{
  return &type metadata for IdleTimer.IdleState;
}

ValueMetadata *type metadata accessor for IdleTimer.NoOpState()
{
  return &type metadata for IdleTimer.NoOpState;
}

uint64_t *sub_1004CC904(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E0ED0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for Engine.Logger(uint64_t a1)
{
  uint64_t v2 = sub_1005E0ED0();
  double v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1004CCA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004CCAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  return a1;
}

uint64_t sub_1004CCB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1004CCBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  return a1;
}

uint64_t sub_1004CCC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004CCC58);
}

uint64_t sub_1004CCC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0ED0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1004CCCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004CCCD8);
}

uint64_t sub_1004CCCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E0ED0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t _s14descr1006B94C1C6LoggerVMa()
{
  uint64_t result = qword_100717308;
  if (!qword_100717308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004CCD94()
{
  uint64_t result = sub_1005E0ED0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1004CCE28(unint64_t a1, uint64_t a2)
{
  uint64_t v65 = a2;
  uint64_t v64 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v64);
  int v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v66 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UntaggedResponse(0);
  uint64_t v10 = __chkstk_darwin(v9);
  int8x8_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  int8x16_t v15 = (char *)&v62 - v14;
  unint64_t result = __chkstk_darwin(v13);
  double v18 = (char *)&v62 - v17;
  uint64_t v67 = v2;
  uint64_t v19 = *(void *)(v2 + 16);
  unsigned int v20 = *(unsigned __int16 *)(v2 + 88) | (*(unsigned __int8 *)(v2 + 90) << 16);
  if (((1 << (a1 >> 60)) & 0x1E7) != 0) {
    return result;
  }
  if (a1 >> 60 == 3)
  {
    unint64_t result = swift_projectBox();
    int v21 = (v20 >> 21) & 7;
    if (v21)
    {
      if (v21 == 1)
      {
        sub_1004CDD6C(result, (uint64_t)v15, type metadata accessor for UntaggedResponse);
        sub_1004CDD6C((uint64_t)v15, (uint64_t)v12, type metadata accessor for UntaggedResponse);
        if (swift_getEnumCaseMultiPayload() == 9)
        {
          uint64_t v22 = v67;
          if ((*(unsigned int *)(v22 + 8) | ((unint64_t)*(unsigned int *)(v22 + 8) << 32)) == (*((unsigned int *)v12 + 2) | ((unint64_t)*((unsigned int *)v12 + 2) << 32)))
          {
            uint64_t v23 = *((void *)v12 + 2);
            char v24 = v12[24];
            BOOL v25 = sub_1000255D4(*(void *)v67, *(void *)v12);
            swift_bridgeObjectRelease();
            if (v25 && (v24 & 1) == 0)
            {
              *(void *)(v22 + 104) = v23;
              *(unsigned char *)(v22 + 112) = 0;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          sub_1004CDDD4((uint64_t)v12, type metadata accessor for UntaggedResponse);
        }
        return sub_1004CDDD4((uint64_t)v15, type metadata accessor for UntaggedResponse);
      }
    }
    else
    {
      sub_1004CDD6C(result, (uint64_t)v18, type metadata accessor for UntaggedResponse);
      sub_1004CD74C((uint64_t)v18);
      return sub_1004CDDD4((uint64_t)v18, type metadata accessor for UntaggedResponse);
    }
    return result;
  }
  uint64_t v26 = a1 & 0xFFFFFFFFFFFFFFFLL;
  unsigned int v28 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v27 = *(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x14);
  int v29 = (v20 >> 21) & 7;
  if (v29)
  {
    uint64_t v30 = v6;
    if (v29 == 1 && __PAIR64__(v27, v28) == v19)
    {
      uint64_t v31 = v67;
      uint64_t v32 = *(void *)(v67 + 96);
      if (v32 && (*(unsigned char *)(v67 + 112) & 1) == 0)
      {
        uint64_t v49 = *(void *)(v67 + 104);
        uint64_t v50 = *(unsigned int *)(v67 + 8);
        uint64_t v51 = *(void *)(v67 + 128);
        uint64_t v52 = *(void *)(v67 + 152);
        __int16 v53 = *(unsigned __int8 *)(v67 + 160);
        uint64_t v54 = &_mh_execute_header;
        if (*(unsigned char *)(v67 + 120)) {
          uint64_t v55 = &_mh_execute_header;
        }
        else {
          uint64_t v55 = 0;
        }
        unint64_t v56 = (unint64_t)v55 | *(unsigned int *)(v67 + 116);
        if (*(unsigned char *)(v67 + 140)) {
          unint64_t v57 = &_mh_execute_header;
        }
        else {
          unint64_t v57 = 0;
        }
        unint64_t v58 = (unint64_t)v57 | *(unsigned int *)(v67 + 136);
        if (!*(unsigned char *)(v67 + 148)) {
          uint64_t v54 = 0;
        }
        unint64_t v59 = (unint64_t)v54 | *(unsigned int *)(v67 + 144);
        if (*(unsigned char *)(v67 + 161)) {
          __int16 v60 = 256;
        }
        else {
          __int16 v60 = 0;
        }
        if (*(unsigned char *)(v67 + 91)) {
          char v61 = 65;
        }
        else {
          char v61 = 64;
        }
        *(void *)(v67 + 16) = *(void *)v67;
        *(void *)(v31 + 24) = v50;
        *(void *)(v31 + 32) = v32;
        *(void *)(v31 + 40) = v49;
        *(void *)(v31 + 48) = v56;
        *(void *)(v31 + 56) = v51;
        *(void *)(v31 + 64) = v58;
        *(void *)(v31 + 72) = v59;
        *(void *)(v31 + 80) = v52;
        *(unsigned char *)(v31 + 90) = v61;
        *(_WORD *)(v31 + 88) = v53 | v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return swift_bridgeObjectRetain();
      }
      else
      {
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
        *(void *)(v2 + 32) = 0;
        *(void *)(v31 + 40) = 255;
        *(_OWORD *)(v2 + 48) = 0u;
        *(_OWORD *)(v2 + 64) = 0u;
        *(void *)(v2 + 80) = 0;
        *(unsigned char *)(v31 + 90) = 96;
        *(_WORD *)(v31 + 88) = 0;
      }
      return result;
    }
LABEL_22:
    uint64_t v37 = v65;
    uint64_t v38 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v8, v65, v30);
    sub_1004CDD6C(v37, (uint64_t)v5, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v39 = sub_1005E0EB0();
    os_log_type_t v40 = sub_1005E25C0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v63 = v27;
      uint64_t v42 = (uint64_t)v5;
      uint64_t v43 = v41;
      uint64_t v67 = swift_slowAlloc();
      uint64_t v69 = v67;
      *(_DWORD *)uint64_t v43 = 68158466;
      LODWORD(v68) = 2;
      sub_1005E2960();
      *(_WORD *)(v43 + 8) = 256;
      uint64_t v44 = &v5[*(int *)(v64 + 20)];
      LOBYTE(v68) = *v44;
      sub_1005E2960();
      *(_WORD *)(v43 + 11) = 2082;
      uint64_t v65 = v30;
      uint64_t v45 = ConnectionID.debugDescription.getter(*((unsigned int *)v44 + 1));
      uint64_t v68 = sub_100481E54(v45, v46, &v69);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004CDDD4(v42, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v43 + 21) = 2082;
      uint64_t v47 = Tag.debugDescription.getter(v28 | (unint64_t)(v63 << 32));
      uint64_t v68 = sub_100481E54(v47, v48, &v69);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%.*hhx-%{public}s] Received command completion for command '%{public}s' unrelated to mailbox selection.", (uint8_t *)v43, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v8, v65);
    }
    else
    {
      sub_1004CDDD4((uint64_t)v5, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v8, v30);
    }
  }
  uint64_t v30 = v6;
  if (__PAIR64__(v27, v28) != v19) {
    goto LABEL_22;
  }
  unint64_t v33 = *(void *)(v26 + 24);
  uint64_t v34 = *(void *)(v26 + 32);
  uint64_t v35 = *(void *)(v26 + 40);
  unsigned __int8 v36 = *(unsigned char *)(v26 + 48);
  sub_100483498(v33, v34, v35, v36);
  sub_1004CDA5C(v33, v34, v35, v36);
  return sub_1004832E0(v33, v34, v35, v36);
}

uint64_t sub_1004CD578(_OWORD *a1, _OWORD *a2)
{
  sub_1004CE48C(a1, v4);
  sub_1004CE48C(a2, v5);
  return sub_1004CDE34(v4, v5) & 1;
}

BOOL sub_1004CD5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v3 = *(unsigned __int8 *)(a2 + 24);
  if (v2 == 255 || v3 == 255) {
    return (v2 & v3) == 255;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)a2;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)a1;
  sub_100483484(*(void *)a1, v8, v7, v2);
  sub_100483484(v6, v5, v4, v3);
  char v10 = static CommandCompletionResponse.__derived_enum_equals(_:_:)(v9, v8, v7, v2, v6, v5, v4, v3);
  sub_1004832CC(v6, v5, v4, v3);
  sub_1004832CC(v9, v8, v7, v2);
  return v10 & 1;
}

uint64_t sub_1004CD6B8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  __int16 v14 = *(_WORD *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  void v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v7;
  __int16 v16 = *(_WORD *)(a2 + 160);
  long long v8 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v11;
  return sub_1004CE270((uint64_t)v13, (uint64_t)v15) & 1;
}

uint64_t sub_1004CD74C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin(v3);
  long long v5 = (unint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004CDD6C(a1, (uint64_t)v5, type metadata accessor for UntaggedResponse);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      unint64_t v7 = *v5;
      if ((~*v5 & 0xF000000000000007) != 0)
      {
        switch((v7 >> 59) & 0x1E | (v7 >> 2) & 1)
        {
          case 2uLL:
            uint64_t v9 = swift_bridgeObjectRetain();
            uint64_t v10 = sub_1004AD1FC(v9);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1004831AC(v7);
            uint64_t result = swift_bridgeObjectRelease();
            *(void *)(v1 + 128) = v10;
            break;
          case 3uLL:
            int v12 = *(_DWORD *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
            sub_1004831AC(v7);
            uint64_t result = swift_bridgeObjectRelease();
            *(_DWORD *)(v1 + 136) = v12;
            *(unsigned char *)(v1 + 140) = 0;
            break;
          case 4uLL:
            int v11 = *(_DWORD *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
            sub_1004831AC(v7);
            uint64_t result = swift_bridgeObjectRelease();
            *(_DWORD *)(v1 + 144) = v11;
            *(unsigned char *)(v1 + 148) = 0;
            break;
          case 5uLL:
            int v13 = *(_DWORD *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
            sub_1004831AC(v7);
            uint64_t result = swift_bridgeObjectRelease();
            *(_DWORD *)(v1 + 116) = v13;
            *(unsigned char *)(v1 + 120) = 0;
            break;
          case 0xBuLL:
            uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
            sub_1004831AC(v7);
            uint64_t result = swift_bridgeObjectRelease();
            *(void *)(v1 + 152) = v14;
            *(_WORD *)(v1 + 160) = 0;
            break;
          case 0x10uLL:
            if (v7 != 0x8000000000000050) {
              goto LABEL_13;
            }
            sub_1004831AC(0x8000000000000050);
            uint64_t result = swift_bridgeObjectRelease();
            *(void *)(v1 + 152) = 0;
            *(_WORD *)(v1 + 160) = 1;
            break;
          default:
LABEL_13:
            sub_1004831AC(v7);
            goto LABEL_3;
        }
      }
      else
      {
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      break;
    case 13:
      unint64_t v8 = *v5;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v1 + 96) = v8;
      break;
    case 14:
      *(void *)(v1 + 104) = *(unsigned int *)v5;
      *(unsigned char *)(v1 + 112) = 0;
      break;
    case 15:
      return result;
    default:
      uint64_t result = sub_1004CDDD4((uint64_t)v5, type metadata accessor for UntaggedResponse);
      break;
  }
  return result;
}

uint64_t sub_1004CDA5C(unint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4)
  {
    int v9 = *((unsigned __int16 *)v4 + 44);
    unint64_t v8 = v4 + 11;
    uint64_t v51 = a4;
    uint64_t v10 = *(v8 - 7);
    uint64_t v47 = *(v8 - 8);
    uint64_t v49 = *(v8 - 9);
    uint64_t v11 = *(v8 - 6);
    uint64_t v12 = *(v8 - 5);
    uint64_t v13 = *(v8 - 4);
    uint64_t v14 = *(v8 - 1);
    uint64_t v43 = *(v8 - 2);
    uint64_t v45 = *(v8 - 3);
    unsigned int v15 = v9 | (*((unsigned __int8 *)v8 + 2) << 16);
    sub_100483498(a1, a2, a3, a4);
    uint64_t result = sub_100483244(v49, v47, v10, v11, v12, v13, v45, v43, v14, v15);
    *(v8 - 9) = a1;
    *(v8 - 8) = a2;
    *(v8 - 7) = a3;
    uint64_t v17 = v51;
LABEL_3:
    *(v8 - 6) = v17;
    *(_OWORD *)(v8 - 5) = 0u;
    *(_OWORD *)(v8 - 3) = 0u;
    *(v8 - 1) = 0;
    char v18 = 96;
LABEL_4:
    *((unsigned char *)v8 + 2) = v18;
    *(_WORD *)unint64_t v8 = 0;
    return result;
  }
  if ((~a1 & 0xF000000000000007) != 0 && ((a1 >> 59) & 0x1E | (a1 >> 2) & 1) == 0x10)
  {
    if (a1 == 0x8000000000000018)
    {
      char v19 = 1;
    }
    else
    {
      if (a1 != 0x8000000000000020) {
        goto LABEL_12;
      }
      char v19 = 0;
    }
    *((unsigned char *)v4 + 91) = v19;
  }
LABEL_12:
  uint64_t v20 = v4[12];
  if (!v20)
  {
    int v22 = *((unsigned __int16 *)v4 + 44);
    unint64_t v8 = v4 + 11;
    uint64_t result = sub_100483244(*(v8 - 9), *(v8 - 8), *(v8 - 7), *(v8 - 6), *(v8 - 5), *(v8 - 4), *(v8 - 3), *(v8 - 2), *(v8 - 1), v22 | (*((unsigned __int8 *)v8 + 2) << 16));
    *(v8 - 9) = 0;
    *(v8 - 8) = 0;
    uint64_t v17 = 255;
    *(v8 - 7) = 0;
    goto LABEL_3;
  }
  if (v4[14])
  {
    int v21 = *((unsigned __int16 *)v4 + 44);
    unint64_t v8 = v4 + 11;
    uint64_t result = sub_100483244(*(v8 - 9), *(v8 - 8), *(v8 - 7), *(v8 - 6), *(v8 - 5), *(v8 - 4), *(v8 - 3), *(v8 - 2), *(v8 - 1), v21 | (*((unsigned __int8 *)v8 + 2) << 16));
    *(v8 - 9) = 1;
    *((_OWORD *)v8 - 4) = 0u;
    *((_OWORD *)v8 - 3) = 0u;
    *((_OWORD *)v8 - 2) = 0u;
    *((_OWORD *)v8 - 1) = 0u;
    char v18 = 0x80;
    goto LABEL_4;
  }
  uint64_t v52 = v4[13];
  uint64_t v23 = *v4;
  uint64_t v50 = *((unsigned int *)v4 + 2);
  uint64_t v39 = v4[16];
  uint64_t v48 = v4[19];
  if (*((unsigned char *)v4 + 120)) {
    char v24 = &_mh_execute_header;
  }
  else {
    char v24 = 0;
  }
  unint64_t v46 = (unint64_t)v24 | *((unsigned int *)v4 + 29);
  if (*((unsigned char *)v4 + 140)) {
    BOOL v25 = &_mh_execute_header;
  }
  else {
    BOOL v25 = 0;
  }
  unint64_t v44 = (unint64_t)v25 | *((unsigned int *)v4 + 34);
  if (*((unsigned char *)v4 + 148)) {
    uint64_t v26 = &_mh_execute_header;
  }
  else {
    uint64_t v26 = 0;
  }
  unint64_t v42 = (unint64_t)v26 | *((unsigned int *)v4 + 36);
  if (*((unsigned char *)v4 + 161)) {
    __int16 v27 = 256;
  }
  else {
    __int16 v27 = 0;
  }
  if (*((unsigned char *)v4 + 91)) {
    char v28 = 65;
  }
  else {
    char v28 = 64;
  }
  char v40 = v28;
  __int16 v41 = *((unsigned __int8 *)v4 + 160) | v27;
  uint64_t v29 = v4[4];
  uint64_t v37 = v4[3];
  uint64_t v38 = v4[2];
  uint64_t v30 = v4[5];
  uint64_t v31 = v4[6];
  uint64_t v32 = v4[7];
  uint64_t v33 = v4[10];
  uint64_t v35 = v4[9];
  uint64_t v36 = v4[8];
  unsigned int v34 = *((unsigned __int16 *)v4 + 44) | (*((unsigned __int8 *)v4 + 90) << 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_100483244(v38, v37, v29, v30, v31, v32, v36, v35, v33, v34);
  long long v4[2] = v23;
  v4[3] = v50;
  v4[4] = v20;
  _OWORD v4[5] = v52;
  v4[6] = v46;
  v4[7] = v39;
  v4[8] = v44;
  v4[9] = v42;
  v4[10] = v48;
  *((unsigned char *)v4 + 90) = v40;
  *((_WORD *)v4 + 44) = v41;
  return result;
}

uint64_t sub_1004CDD6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004CDDD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004CDE34(_OWORD *a1, _OWORD *a2)
{
  sub_1004CE48C(a2, &v28);
  long long v4 = v28;
  uint64_t v5 = v29;
  unsigned __int8 v6 = v30;
  sub_1004CE48C(a1, &v43);
  int v7 = *(unsigned __int16 *)&v44[56] | (v44[58] << 16);
  int v8 = v43;
  unint64_t v9 = DWORD1(v43);
  switch(v44[58] >> 5)
  {
    case 1:
      v44[58] = BYTE2(v7) & 0x1F;
      sub_1004CE48C(a2, v45);
      if (((v45[74] << 16) & 0xE00000) != 0x200000) {
        goto LABEL_31;
      }
      goto LABEL_5;
    case 2:
      v44[58] = BYTE2(v7) & 0x1F;
      *(_OWORD *)&v45[32] = *(_OWORD *)&v44[16];
      *(_OWORD *)&v45[48] = *(_OWORD *)&v44[32];
      *(_OWORD *)uint64_t v45 = v43;
      *(_OWORD *)&v45[16] = *(_OWORD *)v44;
      *(_OWORD *)&v45[59] = *(_OWORD *)&v44[43];
      sub_1004CE48C(a2, v31);
      int v12 = *(unsigned __int16 *)&v32[24] | (v32[26] << 16);
      if ((v12 & 0xE00000) != 0x400000) {
        goto LABEL_31;
      }
      v32[26] = BYTE2(v12) & 0x1F;
      long long v35 = v31[2];
      v36[0] = *(_OWORD *)v32;
      long long v33 = v31[0];
      long long v34 = v31[1];
      *(_OWORD *)((char *)v36 + 11) = *(_OWORD *)&v32[11];
      char v11 = _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v45, (uint64_t)&v33);
      return v11 & 1;
    case 3:
      v44[58] = BYTE2(v7) & 0x1F;
      sub_100055A48(&v43, v31);
      sub_1004CE48C(a2, v45);
      int v13 = *(unsigned __int16 *)&v45[72] | (v45[74] << 16);
      if ((v13 & 0xE00000) != 0x600000) {
        goto LABEL_31;
      }
      v45[74] = BYTE2(v13) & 0x1F;
      sub_100055A48((long long *)v45, v37);
      sub_100055A48(v31, &v33);
      uint64_t v14 = BYTE8(v34);
      if (BYTE8(v34) == 255)
      {
        sub_100055A48(v37, &v38);
        if (v39 != 255)
        {
          sub_1004CE4B4((uint64_t)&v38, (uint64_t)&v40);
          sub_1004CE510((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_100483244);
          goto LABEL_31;
        }
        sub_100483484(v4, *((uint64_t *)&v4 + 1), v5, v6);
        char v11 = 1;
        return v11 & 1;
      }
      long long v15 = v33;
      uint64_t v16 = v34;
      sub_100055A48(v37, &v40);
      uint64_t v17 = v42;
      if (v42 != 255)
      {
        uint64_t v18 = *((void *)&v40 + 1);
        uint64_t v27 = v40;
        uint64_t v19 = v41;
        sub_1004CE510((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_1004833F4);
        sub_1004CE510((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_1004833F4);
        char v20 = static CommandCompletionResponse.__derived_enum_equals(_:_:)(v15, *((void *)&v15 + 1), v16, v14, v27, v18, v19, v17);
        sub_1004CE510((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_100483244);
        sub_1004CE510((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_100483244);
        if (v20) {
          goto LABEL_28;
        }
      }
      goto LABEL_31;
    case 4:
      if (v7 != 0x800000
        || (int8x16_t v21 = vorrq_s8(*(int8x16_t *)&v44[8], *(int8x16_t *)&v44[24]),
            *(void *)&v44[40] | *(void *)&v44[48] | *(void *)&vorr_s8(*(int8x8_t *)v21.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)) | *((void *)&v43 + 1) | *(void *)v44 | (unint64_t)v43))
      {
        sub_1004CE48C(a2, v45);
        int v24 = *(unsigned __int16 *)&v45[72] | (v45[74] << 16);
        if ((v24 & 0xE00000) != 0x800000) {
          goto LABEL_31;
        }
        if (v24 != 0x800000) {
          goto LABEL_31;
        }
        if (*(void *)v45 != 1) {
          goto LABEL_31;
        }
        int8x16_t v25 = vorrq_s8(vorrq_s8(*(int8x16_t *)&v45[8], *(int8x16_t *)&v45[40]), vorrq_s8(*(int8x16_t *)&v45[24], *(int8x16_t *)&v45[56]));
        if (vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL))) {
          goto LABEL_31;
        }
LABEL_28:
        char v11 = 1;
        return v11 & 1;
      }
      sub_1004CE48C(a2, v45);
      int v22 = *(unsigned __int16 *)&v45[72] | (v45[74] << 16);
      if ((v22 & 0xE00000) == 0x800000 && v22 == 0x800000)
      {
        int8x16_t v23 = vorrq_s8(vorrq_s8(*(int8x16_t *)&v45[8], *(int8x16_t *)&v45[40]), vorrq_s8(*(int8x16_t *)&v45[24], *(int8x16_t *)&v45[56]));
        if (!(*(void *)&vorr_s8(*(int8x8_t *)v23.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL)) | *(void *)v45)) {
          goto LABEL_28;
        }
      }
LABEL_31:
      char v11 = 0;
      return v11 & 1;
    default:
      v44[58] = BYTE2(v7) & 0x1F;
      sub_1004CE48C(a2, v45);
      if (((v45[74] << 16) & 0xE00000) != 0) {
        goto LABEL_31;
      }
LABEL_5:
      char v11 = *(_DWORD *)v45 == v8 && *(_DWORD *)&v45[4] == v9;
      return v11 & 1;
  }
}

uint64_t sub_1004CE270(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))) {
    return 0;
  }
  if (!sub_1000255D4(*(void *)a1, *(void *)a2)) {
    return 0;
  }
  sub_1004CE48C((_OWORD *)(a1 + 16), v19);
  sub_1004CE48C((_OWORD *)(a2 + 16), v18);
  uint64_t result = sub_1004CDE34(v19, v18);
  if (result & 1) == 0 || ((*(unsigned __int8 *)(a1 + 91) ^ *(unsigned __int8 *)(a2 + 91))) {
    return 0;
  }
  uint64_t v5 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (!v5) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    char v7 = sub_100013AB4(v6, v5);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  char v8 = *(unsigned char *)(a2 + 112);
  if (*(unsigned char *)(a1 + 112))
  {
    if (!*(unsigned char *)(a2 + 112)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 104) != *(void *)(a2 + 104)) {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  char v9 = *(unsigned char *)(a2 + 120);
  if (*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a2 + 120)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 116) != *(_DWORD *)(a1 + 116)) {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  uint64_t v10 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128))
  {
    if (!v10) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    char v12 = sub_100485E18(v11, v10);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  char v13 = *(unsigned char *)(a2 + 140);
  if (*(unsigned char *)(a1 + 140))
  {
    if (!*(unsigned char *)(a2 + 140)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 136) != *(_DWORD *)(a1 + 136)) {
      char v13 = 1;
    }
    if (v13) {
      return 0;
    }
  }
  char v14 = *(unsigned char *)(a2 + 148);
  if (*(unsigned char *)(a1 + 148))
  {
    if (!*(unsigned char *)(a2 + 148)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 144) != *(_DWORD *)(a2 + 144)) {
      char v14 = 1;
    }
    if (v14) {
      return 0;
    }
  }
  char v15 = *(unsigned char *)(a2 + 161);
  if (*(unsigned char *)(a1 + 161)) {
    return (v15 & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 161)) {
    return 0;
  }
  char v15 = *(unsigned char *)(a2 + 160);
  if (*(unsigned char *)(a1 + 160)) {
    return (v15 & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 160)) {
    return 0;
  }
  uint64_t v16 = *(void *)(a1 + 152);
  uint64_t v17 = *(void *)(a2 + 152);
  if (((v17 | v16) & 0x8000000000000000) == 0) {
    return v17 == v16;
  }
  __break(1u);
  return result;
}

_OWORD *sub_1004CE48C(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[3];
  *(_OWORD *)((char *)a2 + 59) = *(_OWORD *)((char *)a1 + 59);
  a2[2] = v3;
  a2[3] = v4;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1004CE4B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004CE510(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, int))
{
  return a1;
}

unint64_t destroy for MailboxSelectionState.Error(unint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 24);
  if (v1 <= 2) {
    return sub_1004832E0(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), v1);
  }
  return result;
}

uint64_t initializeWithCopy for MailboxSelectionState.Error(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 24);
  if (v3 > 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    uint64_t v6 = a2[2];
    sub_100483498(*a2, v5, v6, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for MailboxSelectionState.Error(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  unsigned int v5 = *((unsigned __int8 *)a2 + 24);
  if (v4 > 2)
  {
    if (v5 <= 2)
    {
      unint64_t v13 = *(void *)a2;
      uint64_t v14 = *((void *)a2 + 1);
      uint64_t v15 = *((void *)a2 + 2);
      sub_100483498(*(void *)a2, v14, v15, v5);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v15;
      *(unsigned char *)(a1 + 24) = v5;
      return a1;
    }
LABEL_7:
    long long v16 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v16;
    return a1;
  }
  if (v5 > 2)
  {
    sub_1004832E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v4);
    goto LABEL_7;
  }
  unint64_t v6 = *(void *)a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v8 = *((void *)a2 + 2);
  sub_100483498(*(void *)a2, v7, v8, v5);
  unint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  sub_1004832E0(v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for MailboxSelectionState.Error(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MailboxSelectionState.Error(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 2) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 2)
  {
    sub_1004832E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1004832E0(v7, v8, v9, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxSelectionState.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 + 1 >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MailboxSelectionState.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = ~(_BYTE)a2;
    }
  }
  return result;
}

uint64_t sub_1004CE810(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24);
  if (v1 > 2) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1004CE824(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSelectionState.Error()
{
  return &type metadata for MailboxSelectionState.Error;
}

uint64_t destroy for MailboxSelectionState.State(uint64_t a1)
{
  return sub_100483244(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16));
}

uint64_t initializeWithCopy for MailboxSelectionState.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  int v13 = *(unsigned __int8 *)(a2 + 74);
  int v14 = *(unsigned __int16 *)(a2 + 72);
  sub_1004833F4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v14 | (v13 << 16));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 74) = v13;
  *(_WORD *)(a1 + 72) = v14;
  return a1;
}

uint64_t assignWithCopy for MailboxSelectionState.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v23 = *(void *)(a2 + 64);
  int v24 = *(unsigned __int8 *)(a2 + 74);
  int v11 = *(unsigned __int16 *)(a2 + 72);
  sub_1004833F4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v23, v11 | (v24 << 16));
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  unsigned int v21 = *(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v23;
  *(_WORD *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 74) = v24;
  sub_100483244(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 initializeWithTake for SelectedMailbox(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 59) = *(_OWORD *)(a2 + 59);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MailboxSelectionState.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  __int16 v4 = *(_WORD *)(a2 + 72);
  char v5 = *(unsigned char *)(a2 + 74);
  uint64_t v6 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  unsigned int v15 = *(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(void *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 74) = v5;
  *(_WORD *)(a1 + 72) = v4;
  sub_100483244(v6, v8, v7, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxSelectionState.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 75)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 48) >> 2) & 0x80000000 | (*(void *)(a1 + 32) >> 33);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for MailboxSelectionState.State(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 74) = 0;
    *(_WORD *)(a1 + 72) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 75) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = (unint64_t)-a2 << 33;
      double result = 0.0;
      *(_OWORD *)(a1 + 40) = xmmword_1006257C0;
      *(void *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = 0;
      *(_DWORD *)(a1 + 71) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 75) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1004CEBE4(uint64_t a1)
{
  if ((*(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16)) << 8 >> 8 >= 0) {
    return *(unsigned __int8 *)(a1 + 74) >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1004CEC0C(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 72);
  uint64_t result = a1 + 72;
  *(unsigned char *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x1F;
  *(_WORD *)uint64_t result = v2;
  return result;
}

int8x16_t sub_1004CEC28(uint64_t a1, unsigned int a2)
{
  if (a2 < 4)
  {
    int v4 = *(unsigned __int16 *)(a1 + 72);
    uint64_t v3 = a1 + 72;
    int v5 = (v4 | (*(unsigned __int8 *)(v3 + 2) << 16)) & 0x101FF;
    *(void *)(v3 - 40) &= 0x1FFFFFFFFuLL;
    int8x16_t result = vandq_s8(*(int8x16_t *)(v3 - 24), (int8x16_t)vdupq_n_s64(0x1FFFFFFFFuLL));
    *(int8x16_t *)(v3 - 24) = result;
    *(_WORD *)uint64_t v3 = v5;
    *(unsigned char *)(v3 + 2) = (v5 | (a2 << 21)) >> 16;
  }
  else
  {
    *(void *)a1 = a2 - 4;
    result.i64[0] = 0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(unsigned char *)(a1 + 74) = 0x80;
    *(_WORD *)(a1 + 72) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSelectionState.State()
{
  return &type metadata for MailboxSelectionState.State;
}

uint64_t destroy for MailboxSelectionState(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_100483244(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailboxSelectionState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 24);
  int v15 = *(unsigned __int8 *)(a2 + 90);
  int v16 = *(unsigned __int16 *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  sub_1004833F4(v4, v14, v5, v6, v7, v8, v9, v13, v10, v16 | (v15 << 16));
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 90) = v15;
  *(_WORD *)(a1 + 88) = v16;
  *(unsigned char *)(a1 + 91) = *(unsigned char *)(a2 + 91);
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  LODWORD(v11) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_DWORD *)(a1 + 116) = v11;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailboxSelectionState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 16);
  uint64_t v28 = *(void *)(a2 + 80);
  int v29 = *(unsigned __int8 *)(a2 + 90);
  int v11 = *(unsigned __int16 *)(a2 + 88);
  sub_1004833F4(v27, v4, v5, v6, v7, v8, v9, v10, v28, v11 | (v29 << 16));
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  unsigned int v21 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  *(void *)(a1 + 16) = v27;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v28;
  *(_WORD *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 90) = v29;
  sub_100483244(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(unsigned char *)(a1 + 91) = *(unsigned char *)(a2 + 91);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v22;
  LOBYTE(v22) = *(unsigned char *)(a2 + 120);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 120) = v22;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v23 = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v23;
  int v24 = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v24;
  uint64_t v25 = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(void *)(a1 + 152) = v25;
  return a1;
}

uint64_t assignWithTake for MailboxSelectionState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 80);
  __int16 v5 = *(_WORD *)(a2 + 88);
  char v6 = *(unsigned char *)(a2 + 90);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  unsigned int v16 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  long long v17 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v17;
  long long v18 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v18;
  *(void *)(a1 + 80) = v4;
  *(unsigned char *)(a1 + 90) = v6;
  *(_WORD *)(a1 + 88) = v5;
  sub_100483244(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  *(unsigned char *)(a1 + 91) = *(unsigned char *)(a2 + 91);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxSelectionState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 162)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxSelectionState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 160) = 0;
    *(void *)int8x16_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 162) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)int8x16_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 162) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSelectionState()
{
  return &type metadata for MailboxSelectionState;
}

uint64_t sub_1004CF1F8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int16 v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    __int16 v5 = sub_1004D32BC(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = &v5[5 * a1];
      uint64_t v10 = v9[4];
      v9 += 4;
      uint64_t v11 = v9[4];
      char v12 = *((unsigned char *)v9 + 24);
      uint64_t v14 = v9[1];
      uint64_t v13 = v9[2];
      uint64_t result = (uint64_t)memmove(v9, v9 + 5, 40 * v8);
      long long v5[2] = v7;
      *uint64_t v2 = v5;
      *(void *)a2 = v10;
      *(void *)(a2 + 8) = v14;
      *(void *)(a2 + 16) = v13;
      *(unsigned char *)(a2 + 24) = v12;
      *(void *)(a2 + 32) = v11;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004CF308@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1004D32D0(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(_s19CommandOutputBufferV7ElementOMa(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_1004D41F0(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1005E3000();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1004CF47C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1004D3328(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = &v5[5 * a1];
      int v10 = *((_DWORD *)v9 + 8);
      v9 += 4;
      char v11 = *((unsigned char *)v9 + 32);
      uint64_t v12 = v9[3];
      int v13 = *((_DWORD *)v9 + 4);
      uint64_t v14 = v9[1];
      uint64_t result = (uint64_t)memmove(v9, v9 + 5, 40 * v8);
      long long v5[2] = v7;
      *uint64_t v2 = v5;
      *(_DWORD *)a2 = v10;
      *(void *)(a2 + 8) = v14;
      *(_DWORD *)(a2 + 16) = v13;
      *(void *)(a2 + 24) = v12;
      *(unsigned char *)(a2 + 32) = v11;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004CF594@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1004D32A8(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = &v5[6 * a1];
    long long v9 = v8[3];
    *a2 = v8[2];
    a2[1] = v9;
    a2[2] = v8[4];
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(v8 + 2, v8 + 5, 48 * (v7 - a1));
      long long v5[2] = v7;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t MailboxesSelectionUsage.subscript.getter(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return swift_bridgeObjectRetain();
  }
  if (v2 == 1) {
    return 0;
  }
  uint64_t v3 = a2 + 104;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v5 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    if (*(_DWORD *)(v3 - 32) == result) {
      return swift_bridgeObjectRetain();
    }
    v3 += 40;
    if (v5 == v2) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

void *MailboxesSelectionUsage.sortedIdleConnections(_:)()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  unsigned int v1 = sub_1004D3CE0(v0, (uint64_t (*)(uint64_t, void))sub_1004D0040);
  swift_bridgeObjectRelease();
  uint64_t v2 = v1[2];
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(v1 + 7);
    do
    {
      uint64_t v8 = *((void *)v4 - 1);
      int v9 = *v4;
      if (v9 != 1 || v8 == 0)
      {
        uint64_t v11 = *((void *)v4 - 3);
        int v12 = *((_DWORD *)v4 - 4);
        unsigned int v21 = v3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004B891C(0, v3[2] + 1, 1);
          uint64_t v3 = v21;
        }
        unint64_t v6 = v3[2];
        unint64_t v5 = v3[3];
        if (v6 >= v5 >> 1)
        {
          sub_1004B891C(v5 > 1, v6 + 1, 1);
          uint64_t v3 = v21;
        }
        v3[2] = v6 + 1;
        unint64_t v7 = &v3[4 * v6];
        uint64_t v7[4] = v11;
        *((_DWORD *)v7 + 10) = v12;
        v7[6] = v8;
        *((unsigned char *)v7 + 56) = v9;
      }
      v4 += 32;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  unsigned int v21 = v3;
  swift_retain();
  sub_1004D0314((uint64_t *)&v21, sub_1004518EC, sub_1004D190C);
  swift_release();
  int v13 = v21;
  int64_t v14 = v21[2];
  if (v14)
  {
    unsigned int v21 = _swiftEmptyArrayStorage;
    sub_1004B88FC(0, v14, 0);
    uint64_t v15 = v21;
    unint64_t v16 = v21[2];
    uint64_t v17 = 5;
    do
    {
      int v18 = v13[v17];
      unsigned int v21 = v15;
      unint64_t v19 = v15[3];
      if (v16 >= v19 >> 1)
      {
        sub_1004B88FC(v19 > 1, v16 + 1, 1);
        uint64_t v15 = v21;
      }
      v15[2] = v16 + 1;
      *((_DWORD *)v15 + v16 + 8) = v18;
      v17 += 4;
      ++v16;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  return v15;
}

void *MailboxSelectionUsage.Priority.max.unsafeMutableAddressor()
{
  return &static MailboxSelectionUsage.Priority.max;
}

uint64_t MailboxSelectionUsage.isActive.getter(uint64_t a1, unsigned __int8 a2)
{
  return a2 & (a1 != 0);
}

BOOL static MailboxSelectionUsage.__derived_enum_less_than(_:_:)(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0) {
      return a1 < (uint64_t)a3;
    }
    unint64_t v5 = 1;
LABEL_18:
    unint64_t v6 = 2;
    if (a3 != 1) {
      unint64_t v6 = 3;
    }
    if (!a3) {
      unint64_t v6 = 0;
    }
    return v5 < v6;
  }
  if (a1)
  {
    if (a1 == 1)
    {
      unint64_t v5 = 2;
      if ((a4 & 1) != 0 && a3 == 1) {
        return 0;
      }
    }
    else
    {
      unint64_t v5 = 3;
      if ((a4 & 1) != 0 && a3 > 1) {
        return 0;
      }
    }
  }
  else
  {
    unint64_t v5 = 0;
    if ((a4 & 1) != 0 && !a3) {
      return 0;
    }
  }
  if (a4) {
    goto LABEL_18;
  }
  unint64_t v6 = 1;
  return v5 < v6;
}

BOOL static MailboxSelectionUsage.__derived_enum_equals(_:_:)(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if (a2)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        if ((a4 & 1) != 0 && a3 == 1) {
          return 1;
        }
      }
      else if ((a4 & 1) != 0 && a3 > 1)
      {
        return 1;
      }
    }
    else if ((a4 & 1) != 0 && !a3)
    {
      return 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    return a1 == a3;
  }
  return 0;
}

BOOL sub_1004CFABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  unint64_t v3 = *(void *)a2;
  if (*(unsigned char *)(a1 + 8) != 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 < (uint64_t)v3;
    }
    unint64_t v5 = 1;
    goto LABEL_25;
  }
  if (!v2)
  {
    if (v3) {
      char v7 = 0;
    }
    else {
      char v7 = *(unsigned char *)(a2 + 8);
    }
    if (v7) {
      return 0;
    }
    unint64_t v5 = 0;
    if (!*(unsigned char *)(a2 + 8)) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v2 != 1)
  {
    if (v3 > 1) {
      int v8 = *(unsigned __int8 *)(a2 + 8);
    }
    else {
      int v8 = 0;
    }
    if (v8 == 1) {
      return 0;
    }
    unint64_t v5 = 3;
    if (!*(unsigned char *)(a2 + 8)) {
      goto LABEL_18;
    }
LABEL_25:
    uint64_t v9 = 2;
    if (v3 != 1) {
      uint64_t v9 = 3;
    }
    if (v3) {
      unint64_t v3 = v9;
    }
    return v5 < v3;
  }
  if (v3 == 1) {
    char v4 = *(unsigned char *)(a2 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v4) {
    return 0;
  }
  unint64_t v5 = 2;
  if (*(unsigned char *)(a2 + 8)) {
    goto LABEL_25;
  }
LABEL_18:
  unint64_t v3 = 1;
  return v5 < v3;
}

BOOL sub_1004CFB70(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)a2;
  if (*(unsigned char *)(a2 + 8) != 1)
  {
    if ((*(unsigned char *)(a1 + 8) & 1) == 0) {
      return v3 >= (uint64_t)v2;
    }
    unint64_t v5 = 1;
    goto LABEL_25;
  }
  if (!v3)
  {
    if (v2) {
      char v7 = 0;
    }
    else {
      char v7 = *(unsigned char *)(a1 + 8);
    }
    if (v7) {
      return 1;
    }
    unint64_t v5 = 0;
    if (!*(unsigned char *)(a1 + 8)) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v3 != 1)
  {
    if (v2 > 1) {
      int v8 = *(unsigned __int8 *)(a1 + 8);
    }
    else {
      int v8 = 0;
    }
    if (v8 == 1) {
      return 1;
    }
    unint64_t v5 = 3;
    if (!*(unsigned char *)(a1 + 8)) {
      goto LABEL_18;
    }
LABEL_25:
    uint64_t v9 = 2;
    if (v2 != 1) {
      uint64_t v9 = 3;
    }
    if (v2) {
      unint64_t v2 = v9;
    }
    return v5 >= v2;
  }
  if (v2 == 1) {
    char v4 = *(unsigned char *)(a1 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v4) {
    return 1;
  }
  unint64_t v5 = 2;
  if (*(unsigned char *)(a1 + 8)) {
    goto LABEL_25;
  }
LABEL_18:
  unint64_t v2 = 1;
  return v5 >= v2;
}

BOOL sub_1004CFC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  unint64_t v3 = *(void *)a2;
  if (*(unsigned char *)(a1 + 8) != 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 >= (uint64_t)v3;
    }
    unint64_t v5 = 1;
    goto LABEL_25;
  }
  if (!v2)
  {
    if (v3) {
      char v7 = 0;
    }
    else {
      char v7 = *(unsigned char *)(a2 + 8);
    }
    if (v7) {
      return 1;
    }
    unint64_t v5 = 0;
    if (!*(unsigned char *)(a2 + 8)) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v2 != 1)
  {
    if (v3 > 1) {
      int v8 = *(unsigned __int8 *)(a2 + 8);
    }
    else {
      int v8 = 0;
    }
    if (v8 == 1) {
      return 1;
    }
    unint64_t v5 = 3;
    if (!*(unsigned char *)(a2 + 8)) {
      goto LABEL_18;
    }
LABEL_25:
    uint64_t v9 = 2;
    if (v3 != 1) {
      uint64_t v9 = 3;
    }
    if (v3) {
      unint64_t v3 = v9;
    }
    return v5 >= v3;
  }
  if (v3 == 1) {
    char v4 = *(unsigned char *)(a2 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v4) {
    return 1;
  }
  unint64_t v5 = 2;
  if (*(unsigned char *)(a2 + 8)) {
    goto LABEL_25;
  }
LABEL_18:
  unint64_t v3 = 1;
  return v5 >= v3;
}

BOOL sub_1004CFCE8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)a2;
  if (*(unsigned char *)(a2 + 8) != 1)
  {
    if ((*(unsigned char *)(a1 + 8) & 1) == 0) {
      return v3 < (uint64_t)v2;
    }
    unint64_t v5 = 1;
    goto LABEL_25;
  }
  if (!v3)
  {
    if (v2) {
      char v7 = 0;
    }
    else {
      char v7 = *(unsigned char *)(a1 + 8);
    }
    if (v7) {
      return 0;
    }
    unint64_t v5 = 0;
    if (!*(unsigned char *)(a1 + 8)) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v3 != 1)
  {
    if (v2 > 1) {
      int v8 = *(unsigned __int8 *)(a1 + 8);
    }
    else {
      int v8 = 0;
    }
    if (v8 == 1) {
      return 0;
    }
    unint64_t v5 = 3;
    if (!*(unsigned char *)(a1 + 8)) {
      goto LABEL_18;
    }
LABEL_25:
    uint64_t v9 = 2;
    if (v2 != 1) {
      uint64_t v9 = 3;
    }
    if (v2) {
      unint64_t v2 = v9;
    }
    return v5 < v2;
  }
  if (v2 == 1) {
    char v4 = *(unsigned char *)(a1 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v4) {
    return 0;
  }
  unint64_t v5 = 2;
  if (*(unsigned char *)(a1 + 8)) {
    goto LABEL_25;
  }
LABEL_18:
  unint64_t v2 = 1;
  return v5 < v2;
}

BOOL sub_1004CFD9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  if (*((unsigned char *)a1 + 8) != 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 == v3;
    }
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1) {
        int v7 = *(unsigned __int8 *)(a2 + 8);
      }
      else {
        int v7 = 0;
      }
      return v7 == 1;
    }
    BOOL v4 = v3 == 1;
  }
  else
  {
    BOOL v4 = v3 == 0;
  }
  if (v4) {
    char v6 = *(unsigned char *)(a2 + 8);
  }
  else {
    char v6 = 0;
  }
  return (v6 & 1) != 0;
}

BOOL sub_1004CFE04(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  char v8 = *(unsigned char *)(a2 + 32);
  return sub_1004D33E4((uint64_t)v5, (uint64_t)v7);
}

BOOL static MailboxesSelectionUsage.Value.__derived_struct_equals(_:_:)(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, int a6, unint64_t a7, char a8)
{
  return sub_1004D333C(a1, a2, a3, a4 & 1, a5, a6, a7, a8 & 1);
}

BOOL sub_1004CFE64(uint64_t a1, uint64_t a2)
{
  return sub_1004D333C(*(void *)a1, *(_DWORD *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(_DWORD *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1004CFE90(uint64_t *a1, uint64_t *a2)
{
  return _s15IMAP2Connection23MailboxesSelectionUsageV23__derived_struct_equalsySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t MailboxesSelectionUsage.min.getter(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    unsigned int v1 = (unsigned char *)(a1 + 64);
    char v2 = 1;
    uint64_t v3 = *(void *)(a1 + 16);
    unint64_t result = 2;
    while (1)
    {
      uint64_t v8 = *((void *)v1 - 1);
      if (*v1 == 1)
      {
        if (v8)
        {
          if (v8 == 1)
          {
            if ((v2 & (result == 1)) == 0)
            {
              unint64_t v5 = 2;
LABEL_27:
              if (v2) {
                goto LABEL_4;
              }
LABEL_30:
              unint64_t v6 = 1;
              goto LABEL_9;
            }
            unint64_t result = 1;
            char v2 = 1;
          }
          else
          {
            if ((v2 & (result > 1)) != 1)
            {
              unint64_t v5 = 3;
              if ((v2 & 1) == 0) {
                goto LABEL_30;
              }
LABEL_4:
              if (result == 1) {
                unint64_t v6 = 2;
              }
              else {
                unint64_t v6 = 3;
              }
              if (!result) {
                unint64_t v6 = 0;
              }
LABEL_9:
              BOOL v7 = v5 < v6;
              goto LABEL_10;
            }
            char v2 = 1;
            unint64_t result = 2;
          }
        }
        else
        {
          unint64_t v5 = 0;
          if ((v2 & (result == 0)) == 0) {
            goto LABEL_27;
          }
          char v2 = 1;
          unint64_t result = 0;
        }
      }
      else
      {
        if (v2)
        {
          unint64_t v5 = 1;
          goto LABEL_4;
        }
        if (v8 != result)
        {
          BOOL v7 = v8 < (uint64_t)result;
LABEL_10:
          if (v7)
          {
            unint64_t result = *((void *)v1 - 1);
            char v2 = *v1;
          }
          goto LABEL_12;
        }
        char v2 = 0;
      }
LABEL_12:
      v1 += 40;
      if (!--v3) {
        return result;
      }
    }
  }
  return 0;
}

void sub_1004CFFCC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3 && *(_DWORD *)(a3 + 32) != a2 && v3 != 1)
  {
    uint64_t v4 = a3 + 104;
    uint64_t v5 = 1;
    while (1)
    {
      uint64_t v6 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (*(_DWORD *)(v4 - 32) != a2)
      {
        ++v5;
        v4 += 40;
        if (v6 != v3) {
          continue;
        }
      }
      return;
    }
    __break(1u);
  }
}

void sub_1004D0040(uint64_t a1, int a2)
{
  sub_1004CFFCC(a1, a2, *(void *)(v2 + 16));
}

void *MailboxesSelectionUsage.allConnections.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 40;
  uint64_t v3 = _swiftEmptyArrayStorage;
  do
  {
    int v4 = *(_DWORD *)(v2 - 8);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1004D16DC(0, v3[2] + 1, 1, v3);
    }
    unint64_t v6 = v3[2];
    unint64_t v5 = v3[3];
    if (v6 >= v5 >> 1) {
      uint64_t v3 = sub_1004D16DC((void *)(v5 > 1), v6 + 1, 1, v3);
    }
    v2 += 40;
    v3[2] = v6 + 1;
    *((_DWORD *)v3 + v6 + 8) = v4;
    swift_bridgeObjectRelease();
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t MailboxesSelectionUsage.subscript.setter(uint64_t result, int a2, uint64_t a3, char a4, int a5)
{
  uint64_t v9 = result;
  uint64_t v11 = (void *)*v5;
  uint64_t v12 = *(void *)(*v5 + 16);
  if (!v12) {
    goto LABEL_14;
  }
  if (*((_DWORD *)v11 + 8) != a5)
  {
    if (v12 != 1)
    {
      uint64_t v15 = (int *)(v11 + 9);
      unint64_t v13 = 1;
      do
      {
        int v16 = *v15;
        v15 += 10;
        if (v16 == a5) {
          goto LABEL_4;
        }
        unint64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
          goto LABEL_22;
        }
        ++v13;
      }
      while (v17 != v12);
    }
LABEL_14:
    if (result)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_22:
      }
        uint64_t v11 = sub_1004D17EC(0, v12 + 1, 1, v11);
      unint64_t v19 = v11[2];
      unint64_t v18 = v11[3];
      if (v19 >= v18 >> 1) {
        uint64_t v11 = sub_1004D17EC((void *)(v18 > 1), v19 + 1, 1, v11);
      }
      v11[2] = v19 + 1;
      uint64_t v20 = &v11[5 * v19];
      *((_DWORD *)v20 + 8) = a5;
      v20[5] = v9;
      *((_DWORD *)v20 + 12) = a2;
      v20[7] = a3;
      *((unsigned char *)v20 + 64) = a4 & 1;
      *unint64_t v5 = (uint64_t)v11;
      return sub_1004D0314(v5, (uint64_t (*)(uint64_t))sub_1004D3328, sub_1004D229C);
    }
    return result;
  }
  unint64_t v13 = 0;
LABEL_4:
  if (result)
  {
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      if ((v13 & 0x8000000000000000) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      unint64_t result = (uint64_t)sub_1004D3328(v11);
      uint64_t v11 = (void *)result;
      if ((v13 & 0x8000000000000000) == 0)
      {
LABEL_7:
        if (v13 < v11[2])
        {
          int64_t v14 = &v11[5 * v13];
          v14[7] = a3;
          *((unsigned char *)v14 + 64) = a4 & 1;
          unint64_t result = swift_bridgeObjectRelease();
          *unint64_t v5 = (uint64_t)v11;
          return result;
        }
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  sub_1004CF47C(v13, (uint64_t)v21);
  return sub_10002A77C((uint64_t)v21);
}

uint64_t sub_1004D0314(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

void (*MailboxesSelectionUsage.subscript.modify(void (**a1)(uint64_t **a1, char a2), int a2))(uint64_t **a1, char a2)
{
  uint64_t result = (void (*)(uint64_t **, char))malloc(0x28uLL);
  uint64_t v6 = result;
  *a1 = result;
  *((void *)result + 4) = v2;
  *((_DWORD *)result + 7) = a2;
  uint64_t v7 = *v2;
  uint64_t v8 = *(void *)(*v2 + 16);
  if (!v8) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(v7 + 32) == a2)
  {
    uint64_t v9 = (unsigned char *)(v7 + 64);
    int v10 = (uint64_t *)(v7 + 56);
    uint64_t v11 = (unsigned int *)(v7 + 48);
LABEL_11:
    char v17 = *v9;
    uint64_t v16 = *v10;
    uint64_t v15 = *v11;
    uint64_t v14 = swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  if (v8 == 1)
  {
LABEL_9:
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 0;
LABEL_12:
    *(void *)uint64_t v6 = v14;
    *((void *)v6 + 1) = v15;
    *((void *)v6 + 2) = v16;
    *((unsigned char *)v6 + 24) = v17;
    return sub_1004D04A4;
  }
  uint64_t v9 = (unsigned char *)(v7 + 104);
  uint64_t v12 = 1;
  while (1)
  {
    uint64_t v13 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (*((_DWORD *)v9 - 8) == a2)
    {
      uint64_t v11 = (unsigned int *)(v9 - 16);
      int v10 = (uint64_t *)(v9 - 8);
      goto LABEL_11;
    }
    ++v12;
    v9 += 40;
    if (v13 == v8) {
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

void sub_1004D04A4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  char v6 = *((unsigned char *)v2 + 24);
  int v7 = *((_DWORD *)v2 + 7);
  if (a2)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    MailboxesSelectionUsage.subscript.setter(v8, v4, v5, v6, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    MailboxesSelectionUsage.subscript.setter(v3, v2[1], v2[2], *((unsigned char *)v2 + 24), *((_DWORD *)v2 + 7));
  }
  free(v2);
}

uint64_t MailboxesSelectionUsage.subscript.getter(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = 0;
  unint64_t v5 = a2 | ((unint64_t)a2 << 32);
  while (1)
  {
    uint64_t v6 = a3 + 32 + 40 * v4;
    if ((*(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned int *)(v6 + 16) << 32)) == v5)
    {
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8 == *(void *)(a1 + 16))
      {
        if (v8) {
          BOOL v9 = v7 == a1;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9) {
          return *(void *)(v6 + 24);
        }
        if (*(unsigned __int8 *)(v7 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v8 == 1) {
            return *(void *)(v6 + 24);
          }
          if (*(unsigned __int8 *)(v7 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v8 == 2) {
              return *(void *)(v6 + 24);
            }
            if (*(unsigned __int8 *)(v7 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    if (++v4 == v3) {
      return 0;
    }
  }
  int v10 = (unsigned __int8 *)(v7 + 35);
  uint64_t v11 = v8 - 3;
  uint64_t v12 = (unsigned __int8 *)(a1 + 35);
  while (v11)
  {
    int v14 = *v10++;
    int v13 = v14;
    int v15 = *v12++;
    --v11;
    if (v13 != v15) {
      goto LABEL_3;
    }
  }
  return *(void *)(v6 + 24);
}

uint64_t MailboxesSelectionUsage.removing<A>(notContainedIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v12 = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = MailboxesSelectionUsage.allConnections.getter(v4);
  uint64_t v7 = v6[2];
  if (v7)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      int v9 = *((_DWORD *)v6 + i + 8);
      int v11 = v9;
      sub_1004D06F0((uint64_t)&v11, (uint64_t)&v12, a1, a3);
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1004D06F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a4 - 8);
  unint64_t result = __chkstk_darwin(a1);
  int v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v14;
  uint64_t v16 = *(void *)(*v14 + 16);
  if (!v16) {
    return result;
  }
  int v17 = *(_DWORD *)result;
  if (*(_DWORD *)(v15 + 32) == *(_DWORD *)result)
  {
    uint64_t v35 = v11;
    uint64_t v38 = v5;
    unint64_t v18 = (unsigned __int8 *)(v15 + 64);
    unint64_t v19 = (unint64_t *)(v15 + 56);
    uint64_t v20 = (unsigned __int8 *)(v15 + 48);
    unsigned int v21 = (unsigned __int8 *)(v15 + 40);
  }
  else
  {
    if (v16 == 1) {
      return result;
    }
    if (*(_DWORD *)(v15 + 72) != v17)
    {
      if (v16 != 2)
      {
        unint64_t v18 = (unsigned __int8 *)(v15 + 144);
        for (uint64_t i = 2; ; ++i)
        {
          uint64_t v23 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (*((_DWORD *)v18 - 8) == v17)
          {
            uint64_t v35 = v11;
            uint64_t v38 = v5;
            unsigned int v21 = v18 - 24;
            uint64_t v20 = v18 - 16;
            unint64_t v19 = (unint64_t *)(v18 - 8);
            goto LABEL_14;
          }
          v18 += 40;
          if (v23 == v16) {
            return result;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
      }
      return result;
    }
    uint64_t v35 = v11;
    uint64_t v38 = v5;
    unint64_t v18 = (unsigned __int8 *)(v15 + 104);
    unint64_t v19 = (unint64_t *)(v15 + 96);
    uint64_t v20 = (unsigned __int8 *)(v15 + 88);
    unsigned int v21 = (unsigned __int8 *)(v15 + 80);
  }
LABEL_14:
  int v24 = *v18;
  unint64_t v25 = *v19;
  int v26 = *(_DWORD *)v20;
  uint64_t v27 = *(void *)v21;
  swift_bridgeObjectRetain();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, a3, a4);
  if (v24 == 1 && v25 > 1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a4);
  }
  else
  {
    uint64_t v36 = v27;
    int v37 = v26;
    sub_1004D43C8();
    char v29 = sub_1005E2050();
    swift_bridgeObjectRelease();
    unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, a4);
    if ((v29 & 1) == 0)
    {
      uint64_t v30 = *(_DWORD **)a2;
      uint64_t v31 = *(void *)(*(void *)a2 + 16);
      if (v31)
      {
        if (v30[8] == v17)
        {
          unint64_t result = 0;
LABEL_22:
          sub_1004CF47C(result, (uint64_t)&v36);
          return sub_10002A77C((uint64_t)&v36);
        }
        if (v31 != 1)
        {
          if (v30[18] == v17)
          {
            unint64_t result = 1;
            goto LABEL_22;
          }
          if (v31 != 2)
          {
            uint64_t v32 = v30 + 28;
            unint64_t result = 2;
            while (1)
            {
              int v33 = *v32;
              v32 += 10;
              if (v33 == v17) {
                goto LABEL_22;
              }
              unint64_t v34 = result + 1;
              if (__OFADD__(result, 1)) {
                goto LABEL_35;
              }
              ++result;
              if (v34 == v31) {
                return result;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void *sub_1004D09A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100715960);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10001F688(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1004D0AA4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100715908);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1004D3608(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1004D0BC8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100717398);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1004D3510(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1004D0CEC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100715930);
      int v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      int v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001C898(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004D0DFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004D13F4(a1, a2, a3, a4, &qword_100717380, type metadata accessor for CommandConnection.RecentErrors.Error, type metadata accessor for CommandConnection.RecentErrors.Error);
}

void *sub_1004D0E30(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100715F58);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1004D37F4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1004D0F54(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_1007173A0);
      int v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      int v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004D39FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1004D1064(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100717370);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1004D38EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1004D118C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100717360);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1004D3AF0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1004D12B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100717368);
      int v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      int v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004D3700(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004D13C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004D13F4(a1, a2, a3, a4, &qword_100717350, _s19CommandOutputBufferV7ElementOMa, _s19CommandOutputBufferV7ElementOMa);
}

uint64_t sub_1004D13F4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000566C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1005E2F10();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1004D4254(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1004D1674(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004D13F4(a1, a2, a3, a4, &qword_100716630, type metadata accessor for ConnectionEvent, type metadata accessor for ConnectionEvent);
}

uint64_t sub_1004D16A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1004D13F4(a1, a2, a3, a4, &qword_100717358, type metadata accessor for ResponseOrContinuationRequest, type metadata accessor for ResponseOrContinuationRequest);
}

void *sub_1004D16DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100715950);
      int v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (void *)((char *)a4 + 4 * v8 + 32)) {
          memmove(v13, a4 + 4, 4 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10001EE8C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1004D17EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000566C(&qword_100715940);
      int v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1004D3BE8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

Swift::Int sub_1004D190C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_270;
    }
    if (v3) {
      return sub_1004D29FC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1)
  {
LABEL_278:
    Swift::Int result = sub_1005E2F10();
    __break(1u);
    return result;
  }
  Swift::Int v6 = result;
  uint64_t v138 = v1;
  uint64_t v131 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    long long __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_236;
    }
    unint64_t v133 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_10000566C(&qword_100717390);
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    unint64_t v133 = (void *)v8;
    long long __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v132 = *a1 + 24;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v134 = v6;
  Swift::Int v135 = v3;
  uint64_t v136 = v11;
  while (2)
  {
    Swift::Int v14 = v10++;
    if (v10 >= v3) {
      goto LABEL_122;
    }
    uint64_t v15 = v11 + 32 * v10;
    uint64_t v16 = *(void *)v15;
    int64_t v17 = *(void *)(v15 + 16);
    int v18 = *(unsigned __int8 *)(v15 + 24);
    uint64_t v19 = v11 + 32 * v14;
    uint64_t v20 = *(void *)v19;
    unint64_t v21 = *(void *)(v19 + 16);
    int v22 = *(unsigned __int8 *)(v19 + 24);
    if (v18 == 1)
    {
      if (v17)
      {
        if (v17 == 1)
        {
          if (v21 == 1) {
            char v23 = v22;
          }
          else {
            char v23 = 0;
          }
          if (v23) {
            goto LABEL_52;
          }
          unint64_t v24 = 2;
          if ((v22 & 1) == 0) {
            goto LABEL_47;
          }
        }
        else
        {
          if (v21 > 1) {
            int v28 = v22;
          }
          else {
            int v28 = 0;
          }
          if (v28 == 1) {
            goto LABEL_52;
          }
          unint64_t v24 = 3;
          if ((v22 & 1) == 0) {
            goto LABEL_47;
          }
        }
      }
      else
      {
        if (v21) {
          char v25 = 0;
        }
        else {
          char v25 = v22;
        }
        if (v25) {
          goto LABEL_52;
        }
        if (!v22) {
          goto LABEL_40;
        }
        unint64_t v24 = 0;
      }
    }
    else
    {
      if ((v22 & 1) == 0)
      {
        if (v17 == v21) {
          goto LABEL_52;
        }
        if (v17 >= (uint64_t)v21) {
          goto LABEL_57;
        }
LABEL_40:
        Swift::Int v26 = v14 + 2;
        if (v14 + 2 >= v3) {
          goto LABEL_111;
        }
        BOOL v27 = 1;
        goto LABEL_59;
      }
      unint64_t v24 = 1;
    }
    if (v24 < qword_100628578[v21]) {
      goto LABEL_40;
    }
    if (!v18) {
      goto LABEL_57;
    }
LABEL_47:
    if (v17)
    {
      if (v17 == 1)
      {
        if (v21 != 1) {
          LOBYTE(v22) = 0;
        }
        if (v22) {
          goto LABEL_52;
        }
        goto LABEL_57;
      }
      if (v21 <= 1) {
        LOBYTE(v22) = 0;
      }
      if ((v22 & 1) == 0)
      {
LABEL_57:
        Swift::Int v26 = v14 + 2;
        if (v14 + 2 >= v3)
        {
LABEL_121:
          Swift::Int v10 = v26;
          goto LABEL_122;
        }
        BOOL v27 = 0;
LABEL_59:
        if (v3 <= v26 + 1) {
          Swift::Int v29 = v26 + 1;
        }
        else {
          Swift::Int v29 = v3;
        }
        uint64_t v30 = (unsigned char *)(v132 + 32 * v26);
        while (1)
        {
          int64_t v31 = *((void *)v30 - 1);
          uint64_t v32 = v11 + 32 * v10;
          uint64_t v33 = *(void *)v32;
          unint64_t v34 = *(void *)(v32 + 16);
          int v35 = *(unsigned __int8 *)(v32 + 24);
          if (*v30 == 1)
          {
            if (v31)
            {
              if (v31 == 1)
              {
                if (v34 == 1) {
                  char v36 = v35;
                }
                else {
                  char v36 = 0;
                }
                if (v36) {
                  goto LABEL_63;
                }
                unint64_t v37 = 2;
                if ((v35 & 1) == 0) {
                  goto LABEL_95;
                }
              }
              else
              {
                if (v34 > 1) {
                  int v39 = v35;
                }
                else {
                  int v39 = 0;
                }
                if (v39 == 1) {
                  goto LABEL_63;
                }
                unint64_t v37 = 3;
                if ((v35 & 1) == 0) {
                  goto LABEL_95;
                }
              }
            }
            else
            {
              if (v34) {
                char v38 = 0;
              }
              else {
                char v38 = v35;
              }
              if (v38) {
                goto LABEL_63;
              }
              if (!v35) {
                goto LABEL_88;
              }
              unint64_t v37 = 0;
            }
          }
          else
          {
            if ((v35 & 1) == 0)
            {
              if (v31 != v34)
              {
                if (v31 >= (uint64_t)v34) {
                  goto LABEL_106;
                }
LABEL_88:
                if (!v27) {
                  goto LABEL_121;
                }
                goto LABEL_64;
              }
              goto LABEL_63;
            }
            unint64_t v37 = 1;
          }
          if (v37 < qword_100628578[v34]) {
            goto LABEL_88;
          }
          if (!*v30) {
            goto LABEL_106;
          }
LABEL_95:
          if (v31)
          {
            if (v31 != 1)
            {
              if (v34 <= 1) {
                LOBYTE(v35) = 0;
              }
              if ((v35 & 1) == 0)
              {
LABEL_106:
                if (v27) {
                  goto LABEL_110;
                }
                goto LABEL_64;
              }
              goto LABEL_63;
            }
            BOOL v40 = v34 == 1;
          }
          else
          {
            BOOL v40 = v34 == 0;
          }
          if (!v40) {
            LOBYTE(v35) = 0;
          }
          if ((v35 & 1) == 0) {
            goto LABEL_106;
          }
LABEL_63:
          if (((v27 ^ (*((void *)v30 - 3) >= v33)) & 1) == 0) {
            goto LABEL_109;
          }
LABEL_64:
          Swift::Int v10 = v26;
          v30 += 32;
          if (++v26 >= v3)
          {
            Swift::Int v26 = v29;
            goto LABEL_109;
          }
        }
      }
    }
    else
    {
      if (v21) {
        LOBYTE(v22) = 0;
      }
      if ((v22 & 1) == 0) {
        goto LABEL_57;
      }
    }
LABEL_52:
    BOOL v27 = v16 < v20;
    Swift::Int v26 = v14 + 2;
    if (v14 + 2 < v3) {
      goto LABEL_59;
    }
LABEL_109:
    Swift::Int v10 = v26;
    if (v27)
    {
LABEL_110:
      if (v26 < v14) {
        goto LABEL_271;
      }
LABEL_111:
      if (v14 < v26)
      {
        uint64_t v41 = 32 * v26 - 32;
        uint64_t v42 = 32 * v14;
        Swift::Int v43 = v26;
        Swift::Int v44 = v14;
        while (1)
        {
          if (v44 != --v43)
          {
            if (!v11) {
              goto LABEL_276;
            }
            uint64_t v47 = (_OWORD *)(v11 + v42);
            uint64_t v48 = (_OWORD *)(v11 + v41);
            uint64_t v49 = *(void *)(v11 + v42);
            int v50 = *(_DWORD *)(v11 + v42 + 8);
            uint64_t v51 = *(void *)(v11 + v42 + 16);
            char v52 = *(unsigned char *)(v11 + v42 + 24);
            if (v42 != v41 || v47 >= v48 + 2)
            {
              long long v45 = v48[1];
              *uint64_t v47 = *v48;
              v47[1] = v45;
            }
            uint64_t v46 = v11 + v41;
            *(void *)uint64_t v46 = v49;
            *(_DWORD *)(v46 + 8) = v50;
            *(void *)(v46 + 16) = v51;
            *(unsigned char *)(v46 + 24) = v52;
          }
          ++v44;
          v41 -= 32;
          v42 += 32;
          if (v44 >= v43) {
            goto LABEL_121;
          }
        }
      }
      goto LABEL_121;
    }
LABEL_122:
    if (v10 >= v3) {
      goto LABEL_182;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_269;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_182;
    }
    Swift::Int v53 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_272;
    }
    if (v53 >= v3) {
      Swift::Int v53 = v3;
    }
    if (v53 < v14)
    {
LABEL_273:
      __break(1u);
LABEL_274:
      __break(1u);
LABEL_275:
      __break(1u);
LABEL_276:
      __break(1u);
LABEL_277:
      __break(1u);
      goto LABEL_278;
    }
    if (v10 == v53) {
      goto LABEL_182;
    }
    uint64_t v54 = (unsigned __int8 *)(v132 + 32 * v10);
    while (2)
    {
      Swift::Int v55 = v14;
      unint64_t v56 = v54;
      do
      {
        unint64_t v57 = v56 - 24;
        uint64_t v58 = *((void *)v56 - 3);
        int64_t v59 = *((void *)v56 - 1);
        int v60 = *v56;
        uint64_t v61 = *((void *)v56 - 7);
        unint64_t v62 = *((void *)v56 - 5);
        int v63 = *(v56 - 32);
        if (v60 == 1)
        {
          if (v59)
          {
            if (v59 == 1)
            {
              if (v62 == 1) {
                char v64 = *(v56 - 32);
              }
              else {
                char v64 = 0;
              }
              if (v64) {
                goto LABEL_177;
              }
              unint64_t v65 = 2;
              if ((v63 & 1) == 0) {
                goto LABEL_146;
              }
            }
            else
            {
              if (v62 > 1) {
                int v68 = *(v56 - 32);
              }
              else {
                int v68 = 0;
              }
              if (v68 == 1) {
                goto LABEL_177;
              }
              unint64_t v65 = 3;
              if ((v63 & 1) == 0) {
                goto LABEL_146;
              }
            }
          }
          else
          {
            if (v62) {
              char v67 = 0;
            }
            else {
              char v67 = *(v56 - 32);
            }
            if (v67) {
              goto LABEL_177;
            }
            if (!*(v56 - 32)) {
              goto LABEL_178;
            }
            unint64_t v65 = 0;
          }
        }
        else
        {
          if ((v63 & 1) == 0)
          {
            BOOL v66 = v59 == v62;
            if (v59 < (uint64_t)v62) {
              goto LABEL_178;
            }
            goto LABEL_169;
          }
          unint64_t v65 = 1;
        }
        if (v65 < qword_100628578[v62]) {
          goto LABEL_178;
        }
        if (!*v56) {
          break;
        }
LABEL_146:
        if (v59)
        {
          if (v59 == 1)
          {
            if (v62 != 1) {
              int v63 = 0;
            }
            if (v63 != 1) {
              break;
            }
          }
          else
          {
            if (v62 <= 1) {
              int v63 = 0;
            }
            if (v63 != 1) {
              break;
            }
          }
LABEL_177:
          if (v58 >= v61) {
            break;
          }
          goto LABEL_178;
        }
        if (v62) {
          int v63 = 0;
        }
        BOOL v66 = v63 == 1;
LABEL_169:
        if (!v66 || v58 >= v61) {
          break;
        }
LABEL_178:
        if (!v11) {
          goto LABEL_274;
        }
        long long v71 = *(_OWORD *)(v56 - 56);
        long long v70 = *(_OWORD *)(v56 - 40);
        *(v56 - 32) = v60;
        v56 -= 32;
        int v72 = *((_DWORD *)v56 + 4);
        *(_OWORD *)unint64_t v57 = v71;
        *((_OWORD *)v57 + 1) = v70;
        *((void *)v56 - 3) = v58;
        *((_DWORD *)v56 - 4) = v72;
        *((void *)v56 - 1) = v59;
        ++v55;
      }
      while (v10 != v55);
      ++v10;
      v54 += 32;
      if (v10 != v53) {
        continue;
      }
      break;
    }
    Swift::Int v10 = v53;
LABEL_182:
    if (v10 < v14) {
      goto LABEL_264;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_100451554(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v74 = *((void *)v12 + 2);
    unint64_t v73 = *((void *)v12 + 3);
    unint64_t v13 = v74 + 1;
    uint64_t v11 = v136;
    if (v74 >= v73 >> 1)
    {
      uint64_t v122 = sub_100451554((char *)(v73 > 1), v74 + 1, 1, v12);
      uint64_t v11 = v136;
      uint64_t v12 = v122;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v75 = v12 + 32;
    uint64_t v76 = &v12[16 * v74 + 32];
    *(void *)uint64_t v76 = v14;
    *((void *)v76 + 1) = v10;
    if (v74)
    {
      while (2)
      {
        unint64_t v77 = v13 - 1;
        if (v13 >= 4)
        {
          __int16 v82 = &v75[16 * v13];
          uint64_t v83 = *((void *)v82 - 8);
          uint64_t v84 = *((void *)v82 - 7);
          BOOL v88 = __OFSUB__(v84, v83);
          uint64_t v85 = v84 - v83;
          if (v88) {
            goto LABEL_253;
          }
          uint64_t v87 = *((void *)v82 - 6);
          uint64_t v86 = *((void *)v82 - 5);
          BOOL v88 = __OFSUB__(v86, v87);
          uint64_t v80 = v86 - v87;
          char v81 = v88;
          if (v88) {
            goto LABEL_254;
          }
          unint64_t v89 = v13 - 2;
          int v90 = &v75[16 * v13 - 32];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *((void *)v90 + 1);
          BOOL v88 = __OFSUB__(v91, v92);
          uint64_t v93 = v91 - v92;
          if (v88) {
            goto LABEL_256;
          }
          BOOL v88 = __OFADD__(v80, v93);
          uint64_t v94 = v80 + v93;
          if (v88) {
            goto LABEL_259;
          }
          if (v94 >= v85)
          {
            uint64_t v112 = &v75[16 * v77];
            uint64_t v114 = *(void *)v112;
            uint64_t v113 = *((void *)v112 + 1);
            BOOL v88 = __OFSUB__(v113, v114);
            uint64_t v115 = v113 - v114;
            if (v88) {
              goto LABEL_263;
            }
            BOOL v105 = v80 < v115;
          }
          else
          {
LABEL_201:
            if (v81) {
              goto LABEL_255;
            }
            unint64_t v89 = v13 - 2;
            uint64_t v95 = &v75[16 * v13 - 32];
            uint64_t v97 = *(void *)v95;
            uint64_t v96 = *((void *)v95 + 1);
            BOOL v98 = __OFSUB__(v96, v97);
            uint64_t v99 = v96 - v97;
            char v100 = v98;
            if (v98) {
              goto LABEL_258;
            }
            unint64_t v101 = &v75[16 * v77];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v88 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v88) {
              goto LABEL_261;
            }
            if (__OFADD__(v99, v104)) {
              goto LABEL_262;
            }
            if (v99 + v104 < v80) {
              goto LABEL_213;
            }
            BOOL v105 = v80 < v104;
          }
          if (v105) {
            unint64_t v77 = v89;
          }
        }
        else
        {
          if (v13 == 3)
          {
            uint64_t v79 = *((void *)v12 + 4);
            uint64_t v78 = *((void *)v12 + 5);
            BOOL v88 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            char v81 = v88;
            goto LABEL_201;
          }
          uint64_t v106 = *((void *)v12 + 4);
          uint64_t v107 = *((void *)v12 + 5);
          BOOL v88 = __OFSUB__(v107, v106);
          uint64_t v99 = v107 - v106;
          char v100 = v88;
LABEL_213:
          if (v100) {
            goto LABEL_257;
          }
          uint64_t v108 = &v75[16 * v77];
          uint64_t v110 = *(void *)v108;
          uint64_t v109 = *((void *)v108 + 1);
          BOOL v88 = __OFSUB__(v109, v110);
          uint64_t v111 = v109 - v110;
          if (v88) {
            goto LABEL_260;
          }
          if (v111 < v99) {
            goto LABEL_15;
          }
        }
        unint64_t v116 = v77 - 1;
        if (v77 - 1 >= v13)
        {
          __break(1u);
LABEL_250:
          __break(1u);
LABEL_251:
          __break(1u);
LABEL_252:
          __break(1u);
LABEL_253:
          __break(1u);
LABEL_254:
          __break(1u);
LABEL_255:
          __break(1u);
LABEL_256:
          __break(1u);
LABEL_257:
          __break(1u);
LABEL_258:
          __break(1u);
LABEL_259:
          __break(1u);
LABEL_260:
          __break(1u);
LABEL_261:
          __break(1u);
LABEL_262:
          __break(1u);
LABEL_263:
          __break(1u);
LABEL_264:
          __break(1u);
LABEL_265:
          __break(1u);
LABEL_266:
          __break(1u);
LABEL_267:
          __break(1u);
LABEL_268:
          __break(1u);
LABEL_269:
          __break(1u);
LABEL_270:
          __break(1u);
LABEL_271:
          __break(1u);
LABEL_272:
          __break(1u);
          goto LABEL_273;
        }
        if (!v11) {
          goto LABEL_275;
        }
        uint64_t v117 = &v75[16 * v116];
        uint64_t v118 = *(void *)v117;
        uint64_t v119 = &v75[16 * v77];
        uint64_t v120 = *((void *)v119 + 1);
        sub_1004D2B60((char *)(v11 + 32 * *(void *)v117), (char *)(v11 + 32 * *(void *)v119), v11 + 32 * v120, __dst);
        if (v138) {
          goto LABEL_233;
        }
        if (v120 < v118) {
          goto LABEL_250;
        }
        if (v77 > *((void *)v12 + 2)) {
          goto LABEL_251;
        }
        *(void *)uint64_t v117 = v118;
        *(void *)&v75[16 * v116 + 8] = v120;
        unint64_t v121 = *((void *)v12 + 2);
        if (v77 >= v121) {
          goto LABEL_252;
        }
        unint64_t v13 = v121 - 1;
        memmove(&v75[16 * v77], v119 + 16, 16 * (v121 - 1 - v77));
        *((void *)v12 + 2) = v121 - 1;
        uint64_t v11 = v136;
        if (v121 <= 2) {
          goto LABEL_15;
        }
        continue;
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v134;
    Swift::Int v3 = v135;
    if (v10 < v135) {
      continue;
    }
    break;
  }
  uint64_t v9 = v133;
LABEL_236:
  uint64_t v123 = v12;
  unint64_t v133 = v9;
  if (v13 >= 2)
  {
    uint64_t v124 = *v131;
    do
    {
      unint64_t v125 = v13 - 2;
      if (v13 < 2) {
        goto LABEL_265;
      }
      if (!v124) {
        goto LABEL_277;
      }
      uint64_t v126 = v123;
      uint64_t v127 = *(void *)&v123[16 * v125 + 32];
      uint64_t v128 = *(void *)&v123[16 * v13 + 24];
      sub_1004D2B60((char *)(v124 + 32 * v127), (char *)(v124 + 32 * *(void *)&v123[16 * v13 + 16]), v124 + 32 * v128, __dst);
      if (v138) {
        break;
      }
      if (v128 < v127) {
        goto LABEL_266;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v126 = sub_10045189C((uint64_t)v126);
      }
      if (v125 >= *((void *)v126 + 2)) {
        goto LABEL_267;
      }
      uint64_t v129 = &v126[16 * v125 + 32];
      *(void *)uint64_t v129 = v127;
      *((void *)v129 + 1) = v128;
      unint64_t v130 = *((void *)v126 + 2);
      if (v13 > v130) {
        goto LABEL_268;
      }
      memmove(&v126[16 * v13 + 16], &v126[16 * v13 + 32], 16 * (v130 - v13));
      uint64_t v123 = v126;
      *((void *)v126 + 2) = v130 - 1;
      unint64_t v13 = v130 - 1;
    }
    while (v130 > 2);
  }
LABEL_233:
  swift_bridgeObjectRelease();
  v133[2] = 0;
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004D229C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v96 = *a1;
      uint64_t v97 = -1;
      uint64_t v98 = 1;
      uint64_t v99 = *a1;
      do
      {
        uint64_t v100 = v97;
        uint64_t v101 = v99;
        do
        {
          uint64_t v102 = v101 + 40;
          unsigned int v103 = *(_DWORD *)(v101 + 40);
          if (v103 >= *(_DWORD *)v101) {
            break;
          }
          if (!v96) {
            goto LABEL_141;
          }
          uint64_t v104 = *(void *)(v101 + 48);
          int v105 = *(_DWORD *)(v101 + 56);
          uint64_t v106 = *(void *)(v101 + 64);
          Swift::Int result = *(unsigned __int8 *)(v101 + 72);
          long long v107 = *(_OWORD *)(v101 + 16);
          *(_OWORD *)uint64_t v102 = *(_OWORD *)v101;
          *(_OWORD *)(v101 + 56) = v107;
          uint64_t v108 = *(void *)(v101 + 32);
          *(_DWORD *)uint64_t v101 = v103;
          *(void *)(v101 + 8) = v104;
          *(_DWORD *)(v101 + 16) = v105;
          *(void *)(v101 + 24) = v106;
          *(unsigned char *)(v101 + 32) = result;
          v101 -= 40;
          *(void *)(v102 + 32) = v108;
        }
        while (!__CFADD__(v100++, 1));
        ++v98;
        v99 += 40;
        --v97;
      }
      while (v98 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v126 = v1;
  uint64_t v119 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    long long __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v110 = v12;
      unint64_t v121 = v9;
      if (v13 >= 2)
      {
        uint64_t v111 = *v119;
        do
        {
          unint64_t v112 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v111) {
            goto LABEL_145;
          }
          uint64_t v113 = v110;
          uint64_t v114 = *(void *)&v110[16 * v112 + 32];
          uint64_t v115 = *(void *)&v110[16 * v13 + 24];
          sub_1004D2F9C((char *)(v111 + 40 * v114), (char *)(v111 + 40 * *(void *)&v110[16 * v13 + 16]), v111 + 40 * v115, __dst);
          if (v126) {
            break;
          }
          if (v115 < v114) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_10045189C((uint64_t)v113);
          }
          if (v112 >= *((void *)v113 + 2)) {
            goto LABEL_134;
          }
          unint64_t v116 = &v113[16 * v112 + 32];
          *(void *)unint64_t v116 = v114;
          *((void *)v116 + 1) = v115;
          unint64_t v117 = *((void *)v113 + 2);
          if (v13 > v117) {
            goto LABEL_135;
          }
          memmove(&v113[16 * v13 + 16], &v113[16 * v13 + 32], 16 * (v117 - v13));
          uint64_t v110 = v113;
          *((void *)v113 + 2) = v117 - 1;
          unint64_t v13 = v117 - 1;
        }
        while (v117 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v121[2] = 0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v121 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1005E2150();
    *(void *)(v8 + 16) = v7;
    unint64_t v121 = (void *)v8;
    long long __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v120 = *a1 + 40;
  uint64_t v118 = *a1 - 40;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v122 = v6;
  Swift::Int v123 = v3;
  uint64_t v124 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(_DWORD *)(v11 + 40 * v10);
      unsigned int v16 = *(_DWORD *)(v11 + 40 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        int64_t v17 = (unsigned int *)(v120 + 40 * v14);
        int v18 = v17;
        while (1)
        {
          unsigned int v19 = v18[10];
          v18 += 10;
          if (v15 < v16 == v19 >= *v17) {
            break;
          }
          ++v10;
          int64_t v17 = v18;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 40 * v10;
          uint64_t v21 = 40 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              int v25 = *(_DWORD *)(v11 + v21);
              uint64_t v26 = v11 + v20;
              uint64_t v27 = *(void *)(v11 + v21 + 8);
              int v28 = *(_DWORD *)(v11 + v21 + 16);
              uint64_t v29 = *(void *)(v11 + v21 + 24);
              char v30 = *(unsigned char *)(v11 + v21 + 32);
              uint64_t v31 = *(void *)(v11 + v20 - 8);
              long long v32 = *(_OWORD *)(v11 + v20 - 24);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 40);
              *(_OWORD *)(v24 + 16) = v32;
              *(void *)(v24 + 32) = v31;
              *(_DWORD *)(v26 - 40) = v25;
              *(void *)(v26 - 32) = v27;
              *(_DWORD *)(v26 - 24) = v28;
              *(void *)(v26 - 16) = v29;
              *(unsigned char *)(v26 - 8) = v30;
            }
            ++v23;
            v20 -= 40;
            v21 += 40;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v33 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v33 >= v3) {
      Swift::Int v33 = v3;
    }
    if (v33 < v14) {
      break;
    }
    if (v10 != v33)
    {
      uint64_t v34 = v118 + 40 * v10;
      do
      {
        Swift::Int v35 = v14;
        uint64_t v36 = v34;
        do
        {
          uint64_t v37 = v36 + 40;
          unsigned int v38 = *(_DWORD *)(v36 + 40);
          if (v38 >= *(_DWORD *)v36) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v39 = *(void *)(v36 + 48);
          int v40 = *(_DWORD *)(v36 + 56);
          uint64_t v41 = *(void *)(v36 + 64);
          char v42 = *(unsigned char *)(v36 + 72);
          long long v43 = *(_OWORD *)(v36 + 16);
          *(_OWORD *)uint64_t v37 = *(_OWORD *)v36;
          *(_OWORD *)(v36 + 56) = v43;
          uint64_t v44 = *(void *)(v36 + 32);
          *(_DWORD *)uint64_t v36 = v38;
          *(void *)(v36 + 8) = v39;
          *(_DWORD *)(v36 + 16) = v40;
          *(void *)(v36 + 24) = v41;
          *(unsigned char *)(v36 + 32) = v42;
          v36 -= 40;
          ++v35;
          *(void *)(v37 + 32) = v44;
        }
        while (v10 != v35);
        ++v10;
        v34 += 40;
      }
      while (v10 != v33);
      Swift::Int v10 = v33;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_100451554(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v46 = *((void *)v12 + 2);
    unint64_t v45 = *((void *)v12 + 3);
    unint64_t v13 = v46 + 1;
    uint64_t v11 = v124;
    if (v46 >= v45 >> 1)
    {
      uint64_t v95 = sub_100451554((char *)(v45 > 1), v46 + 1, 1, v12);
      uint64_t v11 = v124;
      uint64_t v12 = v95;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v47 = v12 + 32;
    uint64_t v48 = &v12[16 * v46 + 32];
    *(void *)uint64_t v48 = v14;
    *((void *)v48 + 1) = v10;
    if (v46)
    {
      while (1)
      {
        unint64_t v49 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v54 = &v47[16 * v13];
          uint64_t v55 = *((void *)v54 - 8);
          uint64_t v56 = *((void *)v54 - 7);
          BOOL v60 = __OFSUB__(v56, v55);
          uint64_t v57 = v56 - v55;
          if (v60) {
            goto LABEL_120;
          }
          uint64_t v59 = *((void *)v54 - 6);
          uint64_t v58 = *((void *)v54 - 5);
          BOOL v60 = __OFSUB__(v58, v59);
          uint64_t v52 = v58 - v59;
          char v53 = v60;
          if (v60) {
            goto LABEL_121;
          }
          unint64_t v61 = v13 - 2;
          unint64_t v62 = &v47[16 * v13 - 32];
          uint64_t v64 = *(void *)v62;
          uint64_t v63 = *((void *)v62 + 1);
          BOOL v60 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          if (v60) {
            goto LABEL_123;
          }
          BOOL v60 = __OFADD__(v52, v65);
          uint64_t v66 = v52 + v65;
          if (v60) {
            goto LABEL_126;
          }
          if (v66 >= v57)
          {
            uint64_t v84 = &v47[16 * v49];
            uint64_t v86 = *(void *)v84;
            uint64_t v85 = *((void *)v84 + 1);
            BOOL v60 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            if (v60) {
              goto LABEL_130;
            }
            BOOL v77 = v52 < v87;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v78 = *((void *)v12 + 4);
            uint64_t v79 = *((void *)v12 + 5);
            BOOL v60 = __OFSUB__(v79, v78);
            uint64_t v71 = v79 - v78;
            char v72 = v60;
            goto LABEL_77;
          }
          uint64_t v51 = *((void *)v12 + 4);
          uint64_t v50 = *((void *)v12 + 5);
          BOOL v60 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          char v53 = v60;
        }
        if (v53) {
          goto LABEL_122;
        }
        unint64_t v61 = v13 - 2;
        char v67 = &v47[16 * v13 - 32];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v70 = __OFSUB__(v68, v69);
        uint64_t v71 = v68 - v69;
        char v72 = v70;
        if (v70) {
          goto LABEL_125;
        }
        unint64_t v73 = &v47[16 * v49];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v60 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v60) {
          goto LABEL_128;
        }
        if (__OFADD__(v71, v76)) {
          goto LABEL_129;
        }
        if (v71 + v76 >= v52)
        {
          BOOL v77 = v52 < v76;
LABEL_83:
          if (v77) {
            unint64_t v49 = v61;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v72) {
          goto LABEL_124;
        }
        uint64_t v80 = &v47[16 * v49];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v60 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v60) {
          goto LABEL_127;
        }
        if (v83 < v71) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v88 = v49 - 1;
        if (v49 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        unint64_t v89 = v12;
        int v90 = &v47[16 * v88];
        uint64_t v91 = *(void *)v90;
        uint64_t v92 = &v47[16 * v49];
        uint64_t v93 = *((void *)v92 + 1);
        sub_1004D2F9C((char *)(v11 + 40 * *(void *)v90), (char *)(v11 + 40 * *(void *)v92), v11 + 40 * v93, __dst);
        if (v126) {
          goto LABEL_93;
        }
        if (v93 < v91) {
          goto LABEL_117;
        }
        if (v49 > *((void *)v89 + 2)) {
          goto LABEL_118;
        }
        *(void *)int v90 = v91;
        *(void *)&v47[16 * v88 + 8] = v93;
        unint64_t v94 = *((void *)v89 + 2);
        if (v49 >= v94) {
          goto LABEL_119;
        }
        uint64_t v12 = v89;
        unint64_t v13 = v94 - 1;
        memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
        *((void *)v89 + 2) = v94 - 1;
        uint64_t v11 = v124;
        if (v94 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v122;
    Swift::Int v3 = v123;
    if (v10 >= v123)
    {
      uint64_t v9 = v121;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1004D29FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 32 * a3 + 24;
LABEL_5:
    uint64_t v6 = result;
    uint64_t v7 = (unsigned __int8 *)v5;
    while (1)
    {
      uint64_t v8 = v7 - 24;
      uint64_t v9 = *((void *)v7 - 3);
      int64_t v10 = *((void *)v7 - 1);
      int v11 = *v7;
      uint64_t v12 = *((void *)v7 - 7);
      unint64_t v13 = *((void *)v7 - 5);
      int v14 = *(v7 - 32);
      if (v11 == 1)
      {
        if (v10)
        {
          if (v10 == 1)
          {
            if (v13 == 1) {
              char v15 = *(v7 - 32);
            }
            else {
              char v15 = 0;
            }
            if (v15) {
              goto LABEL_52;
            }
            unint64_t v16 = 2;
            if ((v14 & 1) == 0) {
              goto LABEL_19;
            }
          }
          else
          {
            if (v13 > 1) {
              int v19 = *(v7 - 32);
            }
            else {
              int v19 = 0;
            }
            if (v19 == 1) {
              goto LABEL_52;
            }
            unint64_t v16 = 3;
            if ((v14 & 1) == 0) {
              goto LABEL_19;
            }
          }
        }
        else
        {
          if (v13) {
            char v18 = 0;
          }
          else {
            char v18 = *(v7 - 32);
          }
          if (v18) {
            goto LABEL_52;
          }
          if (!*(v7 - 32)) {
            goto LABEL_53;
          }
          unint64_t v16 = 0;
        }
      }
      else
      {
        if ((v14 & 1) == 0)
        {
          if (v10 >= (uint64_t)v13 && (v10 != v13 || v9 >= v12)) {
            goto LABEL_4;
          }
          goto LABEL_53;
        }
        unint64_t v16 = 1;
      }
      if (v16 < qword_100628578[v13]) {
        goto LABEL_53;
      }
      if (!*v7) {
        goto LABEL_4;
      }
LABEL_19:
      if (v10)
      {
        if (v10 == 1)
        {
          if (v13 != 1) {
            int v14 = 0;
          }
        }
        else if (v13 <= 1)
        {
          int v14 = 0;
        }
        if (v14 != 1) {
          goto LABEL_4;
        }
LABEL_52:
        if (v9 >= v12) {
          goto LABEL_4;
        }
        goto LABEL_53;
      }
      if (v13) {
        int v14 = 0;
      }
      if (v14 != 1 || v9 >= v12)
      {
LABEL_4:
        ++a3;
        v5 += 32;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
LABEL_53:
      if (!v4)
      {
        __break(1u);
        return result;
      }
      long long v22 = *(_OWORD *)(v7 - 56);
      long long v21 = *(_OWORD *)(v7 - 40);
      *(v7 - 32) = v11;
      v7 -= 32;
      int v23 = *((_DWORD *)v7 + 4);
      *(_OWORD *)uint64_t v8 = v22;
      *((_OWORD *)v8 + 1) = v21;
      *((void *)v7 - 3) = v9;
      *((_DWORD *)v7 - 4) = v23;
      *((void *)v7 - 1) = v10;
      if (a3 == ++v6) {
        goto LABEL_4;
      }
    }
  }
  return result;
}

uint64_t sub_1004D2B60(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  uint64_t v52 = __dst;
  char v53 = __src;
  if (v10 >= v13)
  {
    if (v11 < -31) {
      goto LABEL_133;
    }
    uint64_t v30 = 32 * v13;
    if (__dst != a2 || &a2[v30] <= __dst) {
      memmove(__dst, a2, 32 * v13);
    }
    uint64_t v31 = &v4[v30];
    uint64_t v51 = &v4[v30];
    char v53 = v6;
    if (v7 >= v6 || (unint64_t)(v11 - 32) > 0xFFFFFFFFFFFFFFC0)
    {
LABEL_132:
      sub_10045171C((void **)&v53, (const void **)&v52, &v51);
      return 1;
    }
    long long v32 = (char *)(a3 - 32);
    Swift::Int v33 = v6;
    while (1)
    {
      uint64_t v34 = v32 + 32;
      uint64_t v35 = *((void *)v31 - 4);
      int64_t v36 = *((void *)v31 - 2);
      uint64_t v38 = *((void *)v33 - 4);
      v33 -= 32;
      uint64_t v37 = v38;
      unint64_t v39 = *((void *)v33 + 2);
      int v40 = v33[24];
      if (*(v31 - 8) == 1) {
        break;
      }
      if (v40)
      {
        unint64_t v42 = 1;
        goto LABEL_87;
      }
      if (v36 >= (uint64_t)v39 && (v36 != v39 || v35 >= v37))
      {
LABEL_126:
        uint64_t v51 = v31 - 32;
        if (v34 < v31 || v32 >= v31 || v34 != v31)
        {
          long long v49 = *((_OWORD *)v31 - 1);
          *(_OWORD *)long long v32 = *((_OWORD *)v31 - 2);
          *((_OWORD *)v32 + 1) = v49;
        }
        Swift::Int v33 = v6;
        v31 -= 32;
        if (v6 <= v7) {
          goto LABEL_132;
        }
        goto LABEL_131;
      }
LABEL_107:
      if (v34 != v6 || v32 >= v6)
      {
        long long v46 = *((_OWORD *)v33 + 1);
        *(_OWORD *)long long v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v46;
      }
      char v53 = v33;
      if (v33 <= v7) {
        goto LABEL_132;
      }
LABEL_131:
      v32 -= 32;
      uint64_t v6 = v33;
      if (v31 <= v4) {
        goto LABEL_132;
      }
    }
    if (v36)
    {
      if (v36 == 1)
      {
        if (v39 == 1) {
          char v41 = v33[24];
        }
        else {
          char v41 = 0;
        }
        if (v41) {
          goto LABEL_106;
        }
        unint64_t v42 = 2;
        if ((v40 & 1) == 0) {
          goto LABEL_113;
        }
      }
      else
      {
        if (v39 > 1) {
          int v45 = v33[24];
        }
        else {
          int v45 = 0;
        }
        if (v45 == 1) {
          goto LABEL_106;
        }
        unint64_t v42 = 3;
        if ((v40 & 1) == 0)
        {
LABEL_113:
          if (v36)
          {
            if (v36 != 1)
            {
              if (v39 <= 1) {
                int v40 = 0;
              }
LABEL_122:
              if (v40 != 1 || v35 >= v37) {
                goto LABEL_126;
              }
              goto LABEL_107;
            }
            BOOL v47 = v39 == 1;
          }
          else
          {
            BOOL v47 = v39 == 0;
          }
          if (!v47) {
            int v40 = 0;
          }
          goto LABEL_122;
        }
      }
    }
    else
    {
      if (v39) {
        char v44 = 0;
      }
      else {
        char v44 = v33[24];
      }
      if (v44)
      {
LABEL_106:
        if (v35 >= v37) {
          goto LABEL_126;
        }
        goto LABEL_107;
      }
      if (!v33[24]) {
        goto LABEL_107;
      }
      unint64_t v42 = 0;
    }
LABEL_87:
    if (v42 < qword_100628578[v39]) {
      goto LABEL_107;
    }
    if (!*(v31 - 8)) {
      goto LABEL_126;
    }
    goto LABEL_113;
  }
  if (v8 >= -31)
  {
    size_t v14 = 32 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14);
    }
    char v15 = &v4[v14];
    uint64_t v51 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 32) <= 0xFFFFFFFFFFFFFFC0)
    {
      while (1)
      {
        uint64_t v16 = *(void *)v6;
        int64_t v17 = *((void *)v6 + 2);
        uint64_t v18 = *(void *)v4;
        unint64_t v19 = *((void *)v4 + 2);
        int v20 = v4[24];
        if (v6[24] == 1)
        {
          if (v17)
          {
            if (v17 == 1)
            {
              if (v19 == 1) {
                char v21 = v4[24];
              }
              else {
                char v21 = 0;
              }
              if (v21) {
                goto LABEL_58;
              }
              unint64_t v22 = 2;
              if ((v20 & 1) == 0) {
                goto LABEL_43;
              }
            }
            else
            {
              if (v19 > 1) {
                int v25 = v4[24];
              }
              else {
                int v25 = 0;
              }
              if (v25 == 1) {
                goto LABEL_58;
              }
              unint64_t v22 = 3;
              if ((v20 & 1) == 0) {
                goto LABEL_43;
              }
            }
          }
          else
          {
            if (v19) {
              char v24 = 0;
            }
            else {
              char v24 = v4[24];
            }
            if (v24) {
              goto LABEL_58;
            }
            if (!v4[24]) {
              goto LABEL_59;
            }
            unint64_t v22 = 0;
          }
        }
        else
        {
          if ((v20 & 1) == 0)
          {
            if (v17 >= (uint64_t)v19 && (v17 != v19 || v16 >= v18)) {
              goto LABEL_63;
            }
            goto LABEL_59;
          }
          unint64_t v22 = 1;
        }
        if (v22 < qword_100628578[v19]) {
          goto LABEL_59;
        }
        if (!v6[24]) {
          goto LABEL_63;
        }
LABEL_43:
        if (v17)
        {
          if (v17 == 1)
          {
            if (v19 != 1) {
              int v20 = 0;
            }
          }
          else if (v19 <= 1)
          {
            int v20 = 0;
          }
          if (v20 != 1) {
            goto LABEL_63;
          }
LABEL_58:
          if (v16 >= v18) {
            goto LABEL_63;
          }
          goto LABEL_59;
        }
        if (v19) {
          int v20 = 0;
        }
        if (v20 != 1 || v16 >= v18)
        {
LABEL_63:
          if (v7 != v4)
          {
            long long v29 = *((_OWORD *)v4 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v29;
          }
          v4 += 32;
          uint64_t v52 = v4;
          uint64_t v27 = v6;
          goto LABEL_66;
        }
LABEL_59:
        uint64_t v27 = v6 + 32;
        if (v7 < v6 || v7 >= v27 || v7 != v6)
        {
          long long v28 = *((_OWORD *)v6 + 1);
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          *((_OWORD *)v7 + 1) = v28;
        }
LABEL_66:
        v7 += 32;
        if (v4 < v15)
        {
          uint64_t v6 = v27;
          if ((unint64_t)v27 < a3) {
            continue;
          }
        }
        char v53 = v7;
        goto LABEL_132;
      }
    }
    goto LABEL_132;
  }
LABEL_133:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D2F9C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v31 = __dst;
  long long v32 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      uint64_t v19 = 40 * v11;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      int v20 = &v4[v19];
      uint64_t v30 = &v4[v19];
      long long v32 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v21 = a3 - 40;
        unint64_t v22 = v6;
        while (1)
        {
          int v23 = (char *)(v21 + 40);
          unsigned int v24 = *((_DWORD *)v22 - 10);
          v22 -= 40;
          if (*((_DWORD *)v20 - 10) >= v24)
          {
            uint64_t v30 = v20 - 40;
            if (v23 < v20 || v21 >= (unint64_t)v20 || v23 != v20)
            {
              long long v27 = *(_OWORD *)(v20 - 40);
              long long v28 = *(_OWORD *)(v20 - 24);
              *(void *)(v21 + 32) = *((void *)v20 - 1);
              *(_OWORD *)unint64_t v21 = v27;
              *(_OWORD *)(v21 + 16) = v28;
            }
            unint64_t v22 = v6;
            v20 -= 40;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v23 != v6 || v21 >= (unint64_t)v6)
            {
              long long v25 = *(_OWORD *)v22;
              long long v26 = *((_OWORD *)v22 + 1);
              *(void *)(v21 + 32) = *((void *)v22 + 4);
              *(_OWORD *)unint64_t v21 = v25;
              *(_OWORD *)(v21 + 16) = v26;
            }
            long long v32 = v22;
            if (v22 <= v7) {
              goto LABEL_38;
            }
          }
          v21 -= 40;
          uint64_t v6 = v22;
          if (v20 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -39)
  {
    size_t v12 = 40 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    uint64_t v13 = &v4[v12];
    uint64_t v30 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4)
          {
            long long v17 = *(_OWORD *)v4;
            long long v18 = *((_OWORD *)v4 + 1);
            *((void *)v7 + 4) = *((void *)v4 + 4);
            *(_OWORD *)uint64_t v7 = v17;
            *((_OWORD *)v7 + 1) = v18;
          }
          v4 += 40;
          uint64_t v31 = v4;
          size_t v14 = v6;
        }
        else
        {
          size_t v14 = v6 + 40;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            long long v15 = *(_OWORD *)v6;
            long long v16 = *((_OWORD *)v6 + 1);
            *((void *)v7 + 4) = *((void *)v6 + 4);
            *(_OWORD *)uint64_t v7 = v15;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 40;
        if (v4 >= v13) {
          break;
        }
        uint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      long long v32 = v7;
    }
LABEL_38:
    sub_1004517D4((void **)&v32, (const void **)&v31, &v30);
    return 1;
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void *sub_1004D323C(void *a1)
{
  return sub_1004D09A8(0, a1[2], 0, a1);
}

uint64_t sub_1004D3250(unint64_t a1)
{
  return sub_1004D13F4(0, *(void *)(a1 + 16), 0, a1, &qword_100717380, type metadata accessor for CommandConnection.RecentErrors.Error, type metadata accessor for CommandConnection.RecentErrors.Error);
}

void *sub_1004D32A8(void *a1)
{
  return sub_1004D1064(0, a1[2], 0, a1);
}

void *sub_1004D32BC(void *a1)
{
  return sub_1004D118C(0, a1[2], 0, a1);
}

uint64_t sub_1004D32D0(unint64_t a1)
{
  return sub_1004D13F4(0, *(void *)(a1 + 16), 0, a1, &qword_100717350, _s19CommandOutputBufferV7ElementOMa, _s19CommandOutputBufferV7ElementOMa);
}

void *sub_1004D3328(void *a1)
{
  return sub_1004D17EC(0, a1[2], 0, a1);
}

BOOL sub_1004D333C(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, int a6, unint64_t a7, char a8)
{
  if (a2 != a6) {
    return 0;
  }
  if (!sub_1000255D4(a1, a5)) {
    return 0;
  }
  if (a4)
  {
    if (a3)
    {
      if (a3 == 1)
      {
        if ((a8 & 1) == 0 || a7 != 1) {
          return 0;
        }
      }
      else if ((a8 & 1) == 0 || a7 <= 1)
      {
        return 0;
      }
    }
    else if ((a8 & 1) == 0 || a7)
    {
      return 0;
    }
    return 1;
  }
  return (a8 & 1) == 0 && a3 == a7;
}

BOOL sub_1004D33E4(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2
    || (*(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned int *)(a1 + 16) << 32)) != (*(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned int *)(a2 + 16) << 32))
    || !sub_1000255D4(*(void *)(a1 + 8), *(void *)(a2 + 8)))
  {
    return 0;
  }
  sub_1004D43B0((uint64_t *)(a1 + 24), (uint64_t)v7);
  sub_1004D43B0((uint64_t *)(a2 + 24), (uint64_t)v6);
  sub_1004D43B0(v7, (uint64_t)&v8);
  uint64_t v4 = v8;
  if (v9 != 1)
  {
    sub_1004D43B0(v6, (uint64_t)&v10);
    return (v11 & 1) == 0 && v4 == v10;
  }
  if (!v8)
  {
    sub_1004D43B0(v6, (uint64_t)&v10);
    return v11 == 1 && !v10;
  }
  if (v8 != 1)
  {
    sub_1004D43B0(v6, (uint64_t)&v10);
    return v11 == 1 && v10 > 1;
  }
  sub_1004D43B0(v6, (uint64_t)&v10);
  return v11 == 1 && v10 == 1;
}

uint64_t sub_1004D3510(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D3608(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D3700(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D37F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D38EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_10000566C(&qword_100717378);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D39FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D3AF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D3BE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

void *sub_1004D3CE0(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  sub_1004B891C(0, 0, 0);
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v16 = a1 + 32;
    do
    {
      uint64_t v5 = a2(v4, *(unsigned int *)(v16 + 4 * v4));
      int v7 = v6;
      uint64_t v9 = v8;
      char v11 = v10;
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_1004B891C(v12 > 1, v13 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      size_t v14 = &_swiftEmptyArrayStorage[4 * v13];
      void v14[4] = v5;
      *((_DWORD *)v14 + 10) = v7;
      v14[6] = v9;
      *((unsigned char *)v14 + 56) = v11 & 1;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1004D3E18()
{
  unint64_t result = qword_100717340;
  if (!qword_100717340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717340);
  }
  return result;
}

unint64_t sub_1004D3E70()
{
  unint64_t result = qword_100717348;
  if (!qword_100717348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717348);
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxSelectionUsage()
{
  return &type metadata for MailboxSelectionUsage;
}

ValueMetadata *type metadata accessor for MailboxSelectionUsage.Priority()
{
  return &type metadata for MailboxSelectionUsage.Priority;
}

ValueMetadata *type metadata accessor for MailboxesSelectionUsage()
{
  return &type metadata for MailboxesSelectionUsage;
}

uint64_t initializeWithCopy for MailboxesSelectionUsage.Value(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailboxesSelectionUsage.Value(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for MailboxesSelectionUsage.Value(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxesSelectionUsage.Value(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxesSelectionUsage.Value(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxesSelectionUsage.Value()
{
  return &type metadata for MailboxesSelectionUsage.Value;
}

uint64_t initializeWithCopy for MailboxesSelectionUsage.Element(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailboxesSelectionUsage.Element(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for MailboxesSelectionUsage.Element(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxesSelectionUsage.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for MailboxesSelectionUsage.Element()
{
  return &type metadata for MailboxesSelectionUsage.Element;
}

uint64_t sub_1004D41F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19CommandOutputBufferV7ElementOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D4254(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004D43B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

unint64_t sub_1004D43C8()
{
  unint64_t result = qword_100717388;
  if (!qword_100717388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717388);
  }
  return result;
}

unint64_t sub_1004D4420()
{
  unint64_t result = qword_1007173A8;
  if (!qword_1007173A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007173A8);
  }
  return result;
}

unint64_t sub_1004D4478()
{
  unint64_t result = qword_1007173B0;
  if (!qword_1007173B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007173B0);
  }
  return result;
}

unint64_t sub_1004D44D0()
{
  unint64_t result = qword_1007173B8;
  if (!qword_1007173B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007173B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PathAttribute(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1004D45C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PathAttribute()
{
  return &type metadata for PathAttribute;
}

ValueMetadata *type metadata accessor for BetterPathAvailability()
{
  return &type metadata for BetterPathAvailability;
}

unsigned char *_s15IMAP2Connection22BetterPathAvailabilityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D46DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PathViability()
{
  return &type metadata for PathViability;
}

void sub_1004D4714(void *a1@<X8>)
{
  *a1 = &off_1006F2C08;
}

Swift::Int sub_1004D4724()
{
  uint64_t v1 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v1);
  int v3 = (unint64_t *)((char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100465DFC(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      return sub_1004AEA40((uint64_t)&off_1006F2938);
    case 0xAu:
      unint64_t v5 = *v3;
      long long v15 = sub_1004D4984(v5);
      Swift::Int v6 = 5;
      goto LABEL_8;
    case 0xBu:
      unint64_t v7 = *v3;
      swift_bridgeObjectRelease();
      unsigned int v4 = sub_1004D4984(v7);
      sub_1004906C8(v7);
      return (Swift::Int)v4;
    case 0xCu:
      unint64_t v5 = *v3;
      long long v15 = sub_1004D4984(v5);
      sub_1004D8D84((unsigned char *)&v14 + 7, 5);
      Swift::Int v6 = 1;
LABEL_8:
      sub_1004D8D84((unsigned char *)&v14 + 7, v6);
      unint64_t v8 = v5;
      goto LABEL_10;
    case 0xDu:
      unint64_t v9 = *v3;
      swift_bridgeObjectRelease();
      long long v15 = sub_1004D4984(v9);
      sub_1004D8D84((unsigned char *)&v14 + 7, 1);
      unint64_t v8 = v9;
LABEL_10:
      sub_1004906C8(v8);
      return (Swift::Int)v15;
    case 0xEu:
      uint64_t v10 = sub_10000566C(&qword_100715AB8);
      unsigned int v4 = sub_1004D4B5C(*(unint64_t *)((char *)v3 + *(int *)(v10 + 48)));
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 0xFu:
      int v11 = *((unsigned __int8 *)v3 + *(int *)(sub_10000566C(&qword_100716560) + 48) + 1);
      swift_bridgeObjectRelease();
      if (v11) {
        unint64_t v12 = &off_1006F2960;
      }
      else {
        unint64_t v12 = &off_1006F2988;
      }
      unsigned int v4 = (void *)sub_1004AEA40((uint64_t)v12);
LABEL_16:
      sub_100007A48((uint64_t)v3, &qword_100715AB0);
      break;
    default:
      sub_1000F898C((uint64_t)v3);
      unsigned int v4 = &_swiftEmptySetSingleton;
      break;
  }
  return (Swift::Int)v4;
}

void *sub_1004D4984(unint64_t a1)
{
  Swift::Int v6 = &_swiftEmptySetSingleton;
  if (sub_1004D543C(a1))
  {
    sub_1004D8D84(&v4, 1);
    sub_1004D8D84(&v3, 2);
  }
  if (sub_1004D5624(a1)) {
    sub_1004D8D84(&v5, 3);
  }
  return v6;
}

uint64_t sub_1004D4A00(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    unint64_t result = sub_1004D8D98(&v14, *(unsigned __int8 *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1004D4B5C(uint64_t a1)
{
  uint64_t v1 = &_swiftEmptySetSingleton;
  uint64_t v19 = &_swiftEmptySetSingleton;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = swift_bridgeObjectRetain() + 64;
    while (2)
    {
      uint64_t v5 = *(void *)(v3 - 32);
      uint64_t v6 = *(void *)(v3 - 24);
      uint64_t v7 = *(void *)(v3 - 16);
      uint64_t v8 = *(void *)(v3 - 8);
      unsigned int v9 = *(unsigned __int8 *)(v3 + 4);
      unsigned int v10 = *(_DWORD *)v3;
      v3 += 40;
      unint64_t v11 = v10 | ((unint64_t)v9 << 32);
      long long v18 = &_swiftEmptySetSingleton;
      uint64_t v4 = &_swiftEmptySetSingleton;
      switch(v9 >> 5)
      {
        case 1u:
          swift_bridgeObjectRetain();
          sub_10013B5CC(v7, v8);
          goto LABEL_4;
        case 3u:
        case 4u:
          swift_bridgeObjectRetain();
          goto LABEL_4;
        case 6u:
          if (v7 | v6 | v5 | v8) {
            BOOL v12 = 0;
          }
          else {
            BOOL v12 = v11 == 0xC000000000;
          }
          uint64_t v4 = &_swiftEmptySetSingleton;
          if (v12) {
            goto LABEL_5;
          }
          uint64_t v13 = v7 | v6 | v8;
          if (v11 == 0xC000000000 && v5 == 1 && v13 == 0)
          {
            sub_1004D8D84(&v17, 3);
            uint64_t v4 = v18;
          }
          else if (v11 != 0xC000000000 || v5 != 2 || (uint64_t v4 = &_swiftEmptySetSingleton, v13))
          {
            if (v11 != 0xC000000000 || v5 != 3 || (uint64_t v4 = &_swiftEmptySetSingleton, v13))
            {
              if (v11 != 0xC000000000 || v5 != 4 || (uint64_t v4 = &_swiftEmptySetSingleton, v13))
              {
                if (v11 != 0xC000000000 || v5 != 5 || (uint64_t v4 = &_swiftEmptySetSingleton, v13))
                {
                  if (v11 != 0xC000000000 || v5 != 6 || (uint64_t v4 = &_swiftEmptySetSingleton, v13))
                  {
                    if (v11 != 0xC000000000 || v5 != 7 || (uint64_t v4 = &_swiftEmptySetSingleton, v13))
                    {
                      if (v11 != 0xC000000000 || v5 != 8 || (uint64_t v4 = &_swiftEmptySetSingleton, v13))
                      {
                        if (v11 != 0xC000000000 || v5 != 9 || (uint64_t v4 = &_swiftEmptySetSingleton, v13)) {
LABEL_4:
                        }
                          uint64_t v4 = &_swiftEmptySetSingleton;
                      }
                    }
                  }
                }
              }
            }
          }
LABEL_5:
          sub_1004D52E0((uint64_t)v4);
          sub_1001F385C(v5, v6, v7, v8, v11);
          if (--v2) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v1 = v19;
          break;
        default:
          goto LABEL_5;
      }
      break;
    }
  }
  return v1;
}

Swift::Int sub_1004D4D9C()
{
  uint64_t v1 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (unint64_t *)((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100465DFC(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 6u:
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = &off_1006F29B0;
      return sub_1004AEA4C((uint64_t)v4);
    case 3u:
    case 4u:
    case 5u:
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = sub_10000566C(&qword_100716548);
      uint64_t v6 = (uint64_t)v3 + *(int *)(v5 + 64);
      sub_1000094D4(*(unint64_t *)((char *)v3 + *(int *)(v5 + 80)), *(unint64_t *)((char *)v3 + *(int *)(v5 + 80) + 8));
      sub_100007A48(v6, &qword_100716550);
      goto LABEL_44;
    case 0xAu:
      unint64_t v7 = *v3;
      uint64_t v8 = &off_1006F2A78;
      goto LABEL_13;
    case 0xBu:
      unint64_t v9 = *v3;
      swift_bridgeObjectRelease();
      unsigned int v10 = &off_1006F2AC8;
      goto LABEL_19;
    case 0xCu:
      unint64_t v7 = *v3;
      uint64_t v8 = &off_1006F2AA0;
LABEL_13:
      Swift::Int v11 = sub_1004AEA4C((uint64_t)v8);
      uint64_t v30 = &_swiftEmptySetSingleton;
      if (sub_1004D5624(v7)) {
        sub_1004D8D98((unsigned char *)&v29 + 7, 5);
      }
      if (sub_1004D5844(v7)) {
        sub_1004D8D98((unsigned char *)&v29 + 7, 3);
      }
      uint64_t v12 = sub_1004D4A00((uint64_t)v30, v11);
      sub_1004906C8(v7);
      return v12;
    case 0xDu:
      unint64_t v9 = *v3;
      swift_bridgeObjectRelease();
      unsigned int v10 = &off_1006F2AF0;
LABEL_19:
      Swift::Int v13 = sub_1004AEA4C((uint64_t)v10);
      uint64_t v30 = &_swiftEmptySetSingleton;
      if (sub_1004D5624(v9)) {
        sub_1004D8D98((unsigned char *)&v29 + 7, 5);
      }
      if (sub_1004D5844(v9)) {
        sub_1004D8D98((unsigned char *)&v29 + 7, 3);
      }
      uint64_t v12 = sub_1004D4A00((uint64_t)v30, v13);
      sub_1004906C8(v9);
      return v12;
    case 0xEu:
      uint64_t v14 = *(unint64_t *)((char *)v3 + *(int *)(sub_10000566C(&qword_100715AB8) + 48));
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v16 = (unsigned int *)(v14 + 64);
        char v17 = &off_1006F2A00;
        while (1)
        {
          if (*((unsigned __int8 *)v16 + 4) >> 5 >= 6u)
          {
            unint64_t v18 = *v16 | ((unint64_t)*((unsigned __int8 *)v16 + 4) << 32);
            uint64_t v19 = *((void *)v16 - 1);
            uint64_t v20 = *((void *)v16 - 4);
            uint64_t v21 = *((void *)v16 - 2) | *((void *)v16 - 3);
            if (v21 | v20 | v19 || v18 != 0xC000000000)
            {
              uint64_t v23 = v21 | v19;
              BOOL v24 = v18 == 0xC000000000 && v20 == 1;
              if (v24 && v23 == 0) {
                break;
              }
            }
          }
          v16 += 10;
          if (!--v15)
          {
            char v17 = &off_1006F2A28;
            break;
          }
        }
      }
      else
      {
        char v17 = &off_1006F2A28;
      }
      swift_bridgeObjectRelease();
      long long v27 = v17;
LABEL_52:
      uint64_t v12 = sub_1004AEA4C((uint64_t)v27);
      sub_100007A48((uint64_t)v3, &qword_100715AB0);
      return v12;
    case 0xFu:
      int v26 = *((unsigned __int8 *)v3 + *(int *)(sub_10000566C(&qword_100716560) + 48) + 1);
      swift_bridgeObjectRelease();
      if (v26) {
        long long v27 = &off_1006F2B18;
      }
      else {
        long long v27 = &off_1006F2B40;
      }
      goto LABEL_52;
    case 0x10u:
    case 0x11u:
      sub_10000566C(&qword_100716568);
      swift_bridgeObjectRelease();
      sub_100007A48((uint64_t)v3, &qword_100715AB0);
      uint64_t v4 = &off_1006F2A50;
      return sub_1004AEA4C((uint64_t)v4);
    case 0x12u:
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_44;
    case 0x13u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    case 0x14u:
    case 0x15u:
    case 0x17u:
    case 0x19u:
LABEL_44:
      uint64_t v4 = &off_1006F2B90;
      return sub_1004AEA4C((uint64_t)v4);
    case 0x16u:
    case 0x1Bu:
      goto LABEL_46;
    case 0x18u:
    case 0x1Au:
      uint64_t v4 = &off_1006F29D8;
      return sub_1004AEA4C((uint64_t)v4);
    default:
      swift_bridgeObjectRelease();
      swift_release();
LABEL_46:
      uint64_t v4 = &off_1006F2B68;
      return sub_1004AEA4C((uint64_t)v4);
  }
}

uint64_t sub_1004D52E0(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    unint64_t result = sub_1004D8D84(&v13, *(unsigned __int8 *)(*(void *)(v1 + 48) + v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_1004D543C(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  uint64_t result = 0;
  switch(v2)
  {
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_100490278(v4);
      char v5 = sub_1004D543C(v4);
      sub_1004906C8(v4);
      uint64_t result = v5 & 1;
      break;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_100490278(v8);
      sub_100490278(v7);
      if (sub_1004D543C(v8))
      {
        sub_1004906C8(v8);
        sub_1004906C8(v7);
        uint64_t result = 1;
      }
      else
      {
        char v14 = sub_1004D543C(v7);
        sub_1004906C8(v8);
        sub_1004906C8(v7);
        uint64_t result = v14 & 1;
      }
      break;
    case 0x17uLL:
    case 0x1BuLL:
      uint64_t result = 1;
      break;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
          sub_100490278(v12);
          char v13 = sub_1004D543C(v12);
          sub_1004906C8(v12);
          if (v13) {
            break;
          }
          if (v10 == ++v11)
          {
            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t result = 1;
      }
      else
      {
LABEL_12:
        uint64_t result = 0;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004D5624(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  uint64_t result = 0;
  switch(v2)
  {
    case 5uLL:
    case 0xBuLL:
    case 0x1BuLL:
      uint64_t result = 1;
      break;
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_100490278(v4);
      char v5 = sub_1004D5624(v4);
      sub_1004906C8(v4);
      uint64_t result = v5 & 1;
      break;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_100490278(v8);
      sub_100490278(v7);
      if (sub_1004D5624(v8))
      {
        sub_1004906C8(v8);
        sub_1004906C8(v7);
        uint64_t result = 1;
      }
      else
      {
        char v14 = sub_1004D5624(v7);
        sub_1004906C8(v8);
        sub_1004906C8(v7);
        uint64_t result = v14 & 1;
      }
      break;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
          sub_100490278(v12);
          char v13 = sub_1004D5624(v12);
          sub_1004906C8(v12);
          if (v13) {
            break;
          }
          if (v10 == ++v11)
          {
            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t result = 1;
      }
      else
      {
LABEL_12:
        uint64_t result = 0;
      }
      break;
    case 0x1CuLL:
      uint64_t result = *(void *)(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20) + 16) != 0;
      break;
    case 0x1DuLL:
      uint64_t result = (0x3F8Eu >> ((a1 + 131068) >> 3)) & 1;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004D5844(unint64_t a1)
{
  unint64_t v2 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  uint64_t result = 0;
  switch(v2)
  {
    case 0xEuLL:
      unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_100490278(v4);
      char v5 = sub_1004D5844(v4);
      sub_1004906C8(v4);
      uint64_t result = v5 & 1;
      break;
    case 0xFuLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v8 = *(void *)(v6 + 16);
      unint64_t v7 = *(void *)(v6 + 24);
      sub_100490278(v8);
      sub_100490278(v7);
      if (sub_1004D5844(v8))
      {
        sub_1004906C8(v8);
        sub_1004906C8(v7);
        uint64_t result = 1;
      }
      else
      {
        char v14 = sub_1004D5844(v7);
        sub_1004906C8(v8);
        sub_1004906C8(v7);
        uint64_t result = v14 & 1;
      }
      break;
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x1BuLL:
      uint64_t result = 1;
      break;
    case 0x18uLL:
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
          sub_100490278(v12);
          char v13 = sub_1004D5844(v12);
          sub_1004906C8(v12);
          if (v13) {
            break;
          }
          if (v10 == ++v11)
          {
            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t result = 1;
      }
      else
      {
LABEL_12:
        uint64_t result = 0;
      }
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *_s21PipeliningRequirementOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D5AF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s21PipeliningRequirementOMa()
{
  return &_s21PipeliningRequirementON;
}

unsigned char *_s18PipeliningBehaviorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D5BFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s18PipeliningBehaviorOMa()
{
  return &_s18PipeliningBehaviorON;
}

unint64_t sub_1004D5C38()
{
  unint64_t result = qword_1007173C0;
  if (!qword_1007173C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007173C0);
  }
  return result;
}

unint64_t sub_1004D5C90()
{
  unint64_t result = qword_1007173C8;
  if (!qword_1007173C8)
  {
    sub_10000744C(&qword_1007173D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007173C8);
  }
  return result;
}

unint64_t sub_1004D5CF0()
{
  unint64_t result = qword_1007173D8;
  if (!qword_1007173D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007173D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtocolMetadata()
{
  return &type metadata for ProtocolMetadata;
}

uint64_t assignWithCopy for ProtocolMetadata.TLS(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ProtocolMetadata.TLS()
{
  return &type metadata for ProtocolMetadata.TLS;
}

uint64_t sub_1004D5DB8(uint64_t a1, uint64_t a2)
{
  return sub_1004D5DD4(*(_DWORD *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_DWORD *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t sub_1004D5DD4(unsigned int a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  if ((unsigned __int16)a1 == (unsigned __int16)a4 && HIWORD(a1) == HIWORD(a4))
  {
    if (a3)
    {
      if (a6)
      {
        if (a2 == a5 && a3 == a6) {
          return 1;
        }
        if (sub_1005E3290()) {
          return 1;
        }
      }
    }
    else if (!a6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1004D5E58(uint64_t a1)
{
  uint64_t result = sub_1000D38CC(a1);
  if (v4) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 4;
  }
  return sub_1004DD7F0(result, v3, 0, a1);
}

uint64_t sub_1004D5ED4(uint64_t *a1, uint64_t *a2)
{
  return _s15IMAP2Connection07CommandB0C12RecentErrorsV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, *a2);
}

BOOL CommandConnection.RecentErrors.isEmpty.getter(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

uint64_t CommandConnection.RecentErrors.Error.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  return sub_1004DE0A8(v1 + *(int *)(v3 + 20), a1, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
}

uint64_t type metadata accessor for CommandConnection.RecentErrors.Error(uint64_t a1)
{
  return sub_10003B314(a1, qword_100717440);
}

uint64_t type metadata accessor for CommandConnection.RecentErrors.Error.Kind(uint64_t a1)
{
  return sub_10003B314(a1, qword_1007174E8);
}

uint64_t CommandConnection.RecentErrors.Error.kind.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  return sub_1004E12FC(a1, v1 + *(int *)(v3 + 20), type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
}

Swift::UInt32 (__swiftcall *CommandConnection.RecentErrors.Error.kind.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t CommandConnection.RecentErrors.Error.init(time:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin(v6);
  unint64_t v8 = (_DWORD *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004DE0A8(a2, (uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_1004DE110((uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    goto LABEL_8;
  }
  uint64_t v13 = sub_1005E1650();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t))(v14 + 88))(v8, v13) != enum case for NWError.posix(_:))
  {
    (*(void (**)(_DWORD *, uint64_t))(v14 + 8))(v8, v13);
    goto LABEL_8;
  }
  (*(void (**)(_DWORD *, uint64_t))(v14 + 96))(v8, v13);
  if (*v8 == 94)
  {
    sub_1004DE110(a2, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    void *v12 = a1;
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  if (*v8 != 89)
  {
LABEL_8:
    void *v12 = a1;
    sub_1004DE020(a2, (uint64_t)v12 + *(int *)(v9 + 20), type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
LABEL_9:
    sub_1004DE020((uint64_t)v12, a3, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v15 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v15, 1, v9);
  }
  sub_1004DE110(a2, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  uint64_t v15 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v15, 1, v9);
}

uint64_t static CommandConnection.RecentErrors.Error.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) + 20);
  return _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0((uint64_t)a1 + v4, (uint64_t)a2 + v4);
}

uint64_t sub_1004D6364(void *a1, void *a2, uint64_t a3)
{
  if (*a1 == *a2) {
    return _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0((uint64_t)a1 + *(int *)(a3 + 20), (uint64_t)a2 + *(int *)(a3 + 20));
  }
  else {
    return 0;
  }
}

uint64_t CommandConnection.RecentErrors.statistics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  return CommandConnection.RecentErrors.Statistics.init(_:)(v2, a1);
}

uint64_t CommandConnection.RecentErrors.Statistics.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005E1650();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v9 = (unint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t v51 = *(void *)(v10 - 8);
  __chkstk_darwin();
  unint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CommandConnection.RecentErrors.Statistics(0);
  *(_OWORD *)(a2 + 8) = 0u;
  long long v43 = (void *)(a2 + 8);
  *(_DWORD *)a2 = 0;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  uint64_t v14 = *(int *)(v13 + 48);
  long long v46 = (void (**)(char *, unint64_t *, uint64_t))v5;
  uint64_t v15 = *(void (**)(void))(v5 + 56);
  uint64_t v42 = a2 + v14;
  v15();
  uint64_t v41 = a2 + *(int *)(v13 + 52);
  uint64_t v48 = v5 + 56;
  long long v49 = v15;
  v15();
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v17 = (uint64_t)&v12[*(int *)(v10 + 20)];
    uint64_t v18 = *(unsigned __int8 *)(v51 + 80);
    uint64_t v40 = a1;
    uint64_t v19 = a1 + ((v18 + 32) & ~v18);
    uint64_t v51 = *(void *)(v51 + 72);
    v46 += 4;
    uint64_t v47 = v4;
    uint64_t v45 = v17;
    do
    {
      sub_1004DE0A8(v19, (uint64_t)v12, type metadata accessor for CommandConnection.RecentErrors.Error);
      sub_1004DE0A8(v17, (uint64_t)v9, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      sub_1004DE110((uint64_t)v12, type metadata accessor for CommandConnection.RecentErrors.Error);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v20 = *v43 + 1;
          if (__OFADD__(*v43, 1))
          {
            __break(1u);
LABEL_20:
            __break(1u);
LABEL_21:
            __break(1u);
            JUMPOUT(0x1004D689CLL);
          }
          unint64_t v21 = v9[2];
          long long v44 = *(_OWORD *)v9;
          *(void *)(a2 + 8) = v20;
          sub_10048316C(*(void *)(a2 + 32), *(void *)(a2 + 40), *(void *)(a2 + 48));
          *(_OWORD *)(a2 + 32) = v44;
          *(void *)(a2 + 48) = v21;
          break;
        case 2u:
          swift_bridgeObjectRelease();
          *(unsigned char *)(a2 + 2) = 1;
          break;
        case 3u:
          sub_1004831AC(*v9);
          swift_bridgeObjectRelease();
          *(unsigned char *)(a2 + 3) = 1;
          break;
        case 4u:
          unint64_t v22 = *v46;
          uint64_t v23 = v7;
          BOOL v24 = v7;
          uint64_t v25 = v47;
          (*v46)(v23, v9, v47);
          uint64_t v26 = *(void *)(a2 + 16);
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27) {
            goto LABEL_20;
          }
          *(void *)(a2 + 16) = v28;
          uint64_t v29 = v42;
          sub_100007A48(v42, &qword_100716650);
          v22((char *)v29, (unint64_t *)v24, v25);
          uint64_t v30 = v29;
          uint64_t v17 = v45;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v49)(v30, 0, 1, v25);
          uint64_t v7 = v24;
          break;
        case 5u:
          uint64_t v31 = *v46;
          long long v32 = v7;
          Swift::Int v33 = v7;
          uint64_t v34 = v47;
          (*v46)(v32, v9, v47);
          uint64_t v35 = *(void *)(a2 + 24);
          BOOL v27 = __OFADD__(v35, 1);
          uint64_t v36 = v35 + 1;
          if (v27) {
            goto LABEL_21;
          }
          *(void *)(a2 + 24) = v36;
          uint64_t v37 = v41;
          sub_100007A48(v41, &qword_100716650);
          v31((char *)v37, (unint64_t *)v33, v34);
          uint64_t v38 = v37;
          uint64_t v17 = v45;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v49)(v38, 0, 1, v34);
          uint64_t v7 = v33;
          break;
        case 6u:
          *(unsigned char *)a2 = 1;
          break;
        default:
          *(unsigned char *)(a2 + 1) = 1;
          break;
      }
      v19 += v51;
      --v16;
    }
    while (v16);
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_bridgeObjectRelease();
}

uint64_t CommandConnection.RecentErrors.Statistics.failedToAuthenticate.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t CommandConnection.RecentErrors.Statistics.serverUnavailable.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t CommandConnection.RecentErrors.Statistics.serverSentBye.getter()
{
  return *(unsigned __int8 *)(v0 + 3);
}

unint64_t CommandConnection.RecentErrors.Statistics.lastResponseText.getter()
{
  unint64_t v1 = v0[4];
  sub_100485030(v1, v0[5], v0[6]);
  return v1;
}

unint64_t CommandConnection.RecentErrors.Statistics.lastResponseText.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = sub_10048316C(*(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a2;
  *(void *)(v3 + 48) = a3;
  return result;
}

uint64_t CommandConnection.RecentErrors.Statistics.lastNetworkError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Statistics(0) + 48);
  return sub_1004DE170(v3, a1);
}

uint64_t CommandConnection.RecentErrors.Statistics.lastNetworkError.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Statistics(0) + 48);
  return sub_1004DE1D8(a1, v3);
}

Swift::UInt32 (__swiftcall *CommandConnection.RecentErrors.Statistics.lastNetworkError.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t CommandConnection.RecentErrors.Statistics.lastNoViableNetworkError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Statistics(0) + 52);
  return sub_1004DE170(v3, a1);
}

uint64_t CommandConnection.RecentErrors.Statistics.lastNoViableNetworkError.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CommandConnection.RecentErrors.Statistics(0) + 52);
  return sub_1004DE1D8(a1, v3);
}

Swift::UInt32 (__swiftcall *CommandConnection.RecentErrors.Statistics.lastNoViableNetworkError.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t sub_1004D6B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v107 = a1;
  uint64_t v108 = a3;
  uint64_t v92 = sub_1005E04E0();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  int v90 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin(v105);
  uint64_t v106 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_100715F68);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v98 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v101 = (char *)&v89 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v99 = (uint64_t)&v89 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v93 = (uint64_t)&v89 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v97 = (uint64_t)&v89 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v95 = (char *)&v89 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v94 = (char *)&v89 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v100 = (uint64_t)&v89 - v22;
  __chkstk_darwin(v21);
  uint64_t v96 = (uint64_t)&v89 - v23;
  uint64_t v24 = sub_1005E1650();
  uint64_t v102 = *(void *)(v24 - 8);
  uint64_t v103 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  BOOL v27 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v89 - v29;
  __chkstk_darwin(v28);
  long long v32 = (char *)&v89 - v31;
  uint64_t v33 = sub_1005E12C0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v89 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  unint64_t v39 = (char *)&v89 - v38;
  uint64_t v40 = type metadata accessor for ConnectionEvent(0);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v89 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t v110 = *(void *)(v43 - 8);
  uint64_t v111 = v43;
  __chkstk_darwin(v43);
  uint64_t v104 = (uint64_t)&v89 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = a2;
  sub_1004DE0A8(a2, (uint64_t)v42, type metadata accessor for ConnectionEvent);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      type metadata accessor for ConnectionEvent.FailureReason(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v75 = v102;
          uint64_t v74 = v103;
          (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v27, v42, v103);
          uint64_t v76 = (uint64_t)v106;
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v106, v27, v74);
          swift_storeEnumTagMultiPayload();
          uint64_t v77 = v97;
          CommandConnection.RecentErrors.Error.init(time:kind:)(v107, v76, v97);
          sub_1004DE110(v109, type metadata accessor for ConnectionEvent);
          (*(void (**)(char *, uint64_t))(v75 + 8))(v27, v74);
          uint64_t v61 = v110;
          uint64_t v60 = v111;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v77, 1, v111))
          {
            uint64_t v73 = v77;
            goto LABEL_38;
          }
          uint64_t v54 = v77;
          break;
        case 2u:
          goto LABEL_2;
        case 3u:
          uint64_t v53 = (uint64_t)v106;
          swift_storeEnumTagMultiPayload();
          uint64_t v54 = (uint64_t)v95;
          goto LABEL_36;
        default:
          uint64_t v53 = (uint64_t)v106;
          *uint64_t v106 = *v42;
          swift_storeEnumTagMultiPayload();
          uint64_t v54 = (uint64_t)v94;
          goto LABEL_36;
      }
      goto LABEL_49;
    case 2u:
      type metadata accessor for UntaggedResponse(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 4)
      {
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          long long v56 = *(_OWORD *)v42;
          uint64_t v57 = *((void *)v42 + 2);
          uint64_t v58 = v108;
          uint64_t v59 = v109;
          uint64_t v61 = v110;
          uint64_t v60 = v111;
          goto LABEL_19;
        }
        sub_1004DE110(v109, type metadata accessor for ConnectionEvent);
        uint64_t v45 = type metadata accessor for UntaggedResponse;
        uint64_t v46 = (uint64_t)v42;
        goto LABEL_3;
      }
      uint64_t v80 = *((void *)v42 + 2);
      uint64_t v53 = (uint64_t)v106;
      *(_OWORD *)uint64_t v106 = *(_OWORD *)v42;
      *(void *)(v53 + 16) = v80;
      swift_storeEnumTagMultiPayload();
      uint64_t v54 = (uint64_t)v98;
LABEL_36:
      CommandConnection.RecentErrors.Error.init(time:kind:)(v107, v53, v54);
      sub_1004DE110(v109, type metadata accessor for ConnectionEvent);
      uint64_t v61 = v110;
      uint64_t v60 = v111;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v54, 1, v111))
      {
        uint64_t v73 = v54;
        goto LABEL_38;
      }
      goto LABEL_49;
    case 3u:
      long long v56 = *(_OWORD *)v42;
      uint64_t v57 = *((void *)v42 + 2);
      if (v42[24])
      {
        uint64_t v58 = v108;
        uint64_t v59 = v109;
        uint64_t v61 = v110;
        uint64_t v60 = v111;
        if (v42[24] == 1)
        {
          uint64_t v62 = v107;
          if ((~(void)v56 & 0xF000000000000007) != 0 && (void)v56 == 0x8000000000000068)
          {
            uint64_t v112 = *((void *)&v56 + 1);
            uint64_t v113 = v57;
            sub_10044AE60(0x8000000000000068);
            swift_bridgeObjectRetain();
            uint64_t v81 = v90;
            sub_1005E0490();
            sub_10049C168();
            uint64_t v82 = sub_1005E29A0();
            unint64_t v84 = v83;
            (*(void (**)(char *, uint64_t))(v91 + 8))(v81, v92);
            swift_bridgeObjectRelease();
            uint64_t v85 = HIBYTE(v84) & 0xF;
            if ((v84 & 0x2000000000000000) == 0) {
              uint64_t v85 = v82 & 0xFFFFFFFFFFFFLL;
            }
            if (!v85)
            {
              swift_bridgeObjectRelease();
              uint64_t v82 = 0;
              unint64_t v84 = 0;
            }
            uint64_t v86 = (uint64_t)v106;
            *(void *)uint64_t v106 = v82;
            *(void *)(v86 + 8) = v84;
            swift_storeEnumTagMultiPayload();
            uint64_t v54 = v93;
            CommandConnection.RecentErrors.Error.init(time:kind:)(v62, v86, v93);
            sub_1004831AC(0x8000000000000068);
            swift_bridgeObjectRelease();
            sub_1004DE110(v59, type metadata accessor for ConnectionEvent);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v54, 1, v60))
            {
              uint64_t v65 = v54;
              goto LABEL_21;
            }
            goto LABEL_50;
          }
          uint64_t v63 = (uint64_t)v106;
          *(_OWORD *)uint64_t v106 = v56;
          *(void *)(v63 + 16) = v57;
          swift_storeEnumTagMultiPayload();
          uint64_t v64 = v99;
          CommandConnection.RecentErrors.Error.init(time:kind:)(v62, v63, v99);
          sub_1004DE110(v59, type metadata accessor for ConnectionEvent);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v64, 1, v60))
          {
            uint64_t v65 = v64;
LABEL_21:
            sub_100007A48(v65, &qword_100715F68);
            uint64_t v69 = 1;
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v58, v69, 1, v60);
          }
          uint64_t v54 = v64;
        }
        else
        {
LABEL_19:
          uint64_t v67 = (uint64_t)v106;
          uint64_t v66 = v107;
          uint64_t v68 = (uint64_t)v101;
          *(_OWORD *)uint64_t v106 = v56;
          *(void *)(v67 + 16) = v57;
          swift_storeEnumTagMultiPayload();
          CommandConnection.RecentErrors.Error.init(time:kind:)(v66, v67, v68);
          sub_1004DE110(v59, type metadata accessor for ConnectionEvent);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v68, 1, v60))
          {
            uint64_t v65 = v68;
            goto LABEL_21;
          }
          uint64_t v54 = v68;
        }
LABEL_50:
        uint64_t v87 = v54;
        uint64_t v88 = v104;
        sub_1004DE020(v87, v104, type metadata accessor for CommandConnection.RecentErrors.Error);
        sub_1004DE020(v88, v58, type metadata accessor for CommandConnection.RecentErrors.Error);
        uint64_t v69 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v58, v69, 1, v60);
      }
      sub_1004831AC(*(void *)v42);
      swift_bridgeObjectRelease();
LABEL_2:
      uint64_t v45 = type metadata accessor for ConnectionEvent;
      uint64_t v46 = v109;
LABEL_3:
      sub_1004DE110(v46, v45);
LABEL_33:
      uint64_t v69 = 1;
      uint64_t v58 = v108;
      uint64_t v61 = v110;
      uint64_t v60 = v111;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v58, v69, 1, v60);
    case 4u:
      sub_1004DE110(v109, type metadata accessor for ConnectionEvent);
      sub_1004445F8(*(void *)v42, *((void *)v42 + 1), v42[16]);
      goto LABEL_33;
    case 5u:
      sub_1004DE110(v109, type metadata accessor for ConnectionEvent);
      swift_bridgeObjectRelease();
      goto LABEL_33;
    case 6u:
    case 7u:
    case 8u:
      goto LABEL_2;
    default:
      uint64_t v47 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v39, v42, v33);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v37, v39, v33);
      int v48 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v37, v33);
      if (v48 == enum case for NWConnection.State.waiting(_:))
      {
        (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
        uint64_t v50 = v102;
        uint64_t v49 = v103;
        (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v30, v37, v103);
        uint64_t v51 = (uint64_t)v106;
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v106, v30, v49);
        swift_storeEnumTagMultiPayload();
        uint64_t v52 = v100;
        CommandConnection.RecentErrors.Error.init(time:kind:)(v107, v51, v100);
        sub_1004DE110(v109, type metadata accessor for ConnectionEvent);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v49);
      }
      else
      {
        if (v48 != enum case for NWConnection.State.failed(_:))
        {
          sub_1004DE110(v109, type metadata accessor for ConnectionEvent);
          uint64_t v78 = *(void (**)(char *, uint64_t))(v34 + 8);
          v78(v39, v33);
          v78(v37, v33);
          goto LABEL_33;
        }
        (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
        uint64_t v71 = v102;
        uint64_t v70 = v103;
        (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v32, v37, v103);
        uint64_t v72 = (uint64_t)v106;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v106, v32, v70);
        swift_storeEnumTagMultiPayload();
        uint64_t v52 = v96;
        CommandConnection.RecentErrors.Error.init(time:kind:)(v107, v72, v96);
        sub_1004DE110(v109, type metadata accessor for ConnectionEvent);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v32, v70);
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v33);
      uint64_t v61 = v110;
      uint64_t v60 = v111;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v52, 1, v111))
      {
        uint64_t v73 = v52;
LABEL_38:
        sub_100007A48(v73, &qword_100715F68);
        uint64_t v69 = 1;
        uint64_t v58 = v108;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v58, v69, 1, v60);
      }
      uint64_t v54 = v52;
LABEL_49:
      uint64_t v58 = v108;
      goto LABEL_50;
  }
}

uint64_t sub_1004D78A4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CommandConnection.RecentErrors.Error(0) - 8;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v34 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v35 = (uint64_t)&v32 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (uint64_t *)((char *)&v32 - v9);
  __chkstk_darwin(v8);
  uint64_t v13 = (uint64_t *)((char *)&v32 - v12);
  unint64_t v14 = *v1;
  uint64_t v15 = *(void *)(*v1 + 16);
  if (!v15)
  {
    int64_t v22 = 0;
    return sub_100482828(v15, v22);
  }
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  unint64_t v33 = v16;
  while (1)
  {
    uint64_t result = sub_1004DE0A8(v14 + v16, (uint64_t)v13, type metadata accessor for CommandConnection.RecentErrors.Error);
    uint64_t v20 = *v13;
    if (*v13 <= a1)
    {
      uint64_t v21 = a1 - v20;
      if (__OFSUB__(a1, v20)) {
        goto LABEL_42;
      }
    }
    else
    {
      if (__OFSUB__(*v13, a1))
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      uint64_t v21 = a1 - *v13;
      if (__OFSUB__(0, *v13 - a1)) {
        goto LABEL_41;
      }
    }
    sub_1004DE110((uint64_t)v13, type metadata accessor for CommandConnection.RecentErrors.Error);
    if (v21 > 0) {
      break;
    }
    ++v18;
    v16 += v17;
    if (v15 == v18)
    {
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v22 = *(void *)(*v1 + 16);
      goto LABEL_16;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v22 = v18 + 1;
  if (__OFADD__(v18, 1)) {
    goto LABEL_55;
  }
  unint64_t v23 = *v1;
  unint64_t v24 = *(void *)(*v1 + 16);
  if (v22 != v24)
  {
    uint64_t v25 = v17 + v16;
    unint64_t v26 = v18 + 1;
    while (v26 < v24)
    {
      uint64_t result = sub_1004DE0A8(v23 + v25, (uint64_t)v10, type metadata accessor for CommandConnection.RecentErrors.Error);
      uint64_t v27 = *v10;
      if (*v10 <= a1)
      {
        uint64_t v28 = a1 - v27;
        if (__OFSUB__(a1, v27)) {
          goto LABEL_47;
        }
      }
      else
      {
        if (__OFSUB__(*v10, a1)) {
          goto LABEL_45;
        }
        uint64_t v28 = a1 - *v10;
        if (__OFSUB__(0, *v10 - a1)) {
          goto LABEL_46;
        }
      }
      uint64_t result = sub_1004DE110((uint64_t)v10, type metadata accessor for CommandConnection.RecentErrors.Error);
      if (v28 <= 0)
      {
        if (v26 != v18)
        {
          if ((v18 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          unint64_t v29 = *v1;
          unint64_t v30 = *(void *)(*v1 + 16);
          if (v18 >= v30) {
            goto LABEL_51;
          }
          uint64_t result = sub_1004DE0A8(v29 + v33 + v18 * v17, v35, type metadata accessor for CommandConnection.RecentErrors.Error);
          if (v26 >= v30) {
            goto LABEL_52;
          }
          sub_1004DE0A8(v29 + v25, v34, type metadata accessor for CommandConnection.RecentErrors.Error);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v1 = v29;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1004D3250(v29);
            unint64_t v29 = result;
            *uint64_t v1 = result;
          }
          if (v18 >= *(void *)(v29 + 16)) {
            goto LABEL_53;
          }
          uint64_t result = sub_1004E12FC(v34, v29 + v33 + v18 * v17, type metadata accessor for CommandConnection.RecentErrors.Error);
          if (v26 >= *(void *)(*v1 + 16)) {
            goto LABEL_54;
          }
          uint64_t result = sub_1004E12FC(v35, *v1 + v25, type metadata accessor for CommandConnection.RecentErrors.Error);
        }
        if (__OFADD__(v18++, 1)) {
          goto LABEL_48;
        }
      }
      int64_t v22 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        goto LABEL_44;
      }
      unint64_t v23 = *v1;
      unint64_t v24 = *(void *)(*v1 + 16);
      ++v26;
      v25 += v17;
      if (v22 == v24) {
        goto LABEL_15;
      }
    }
    goto LABEL_43;
  }
LABEL_15:
  uint64_t v15 = v18;
LABEL_16:
  if (v22 >= v15) {
    return sub_100482828(v15, v22);
  }
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t CommandConnection.RecentErrors.backOffBehavior.getter(uint64_t a1)
{
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  uint64_t v51 = (unint64_t *)((char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v52 = (char *)&v49 - v3;
  __chkstk_darwin();
  uint64_t v58 = (char *)&v49 - v4;
  __chkstk_darwin();
  uint64_t v6 = (unint64_t *)((char *)&v49 - v5);
  __chkstk_darwin();
  uint64_t v8 = (unsigned __int8 *)&v49 - v7;
  uint64_t v9 = type metadata accessor for CommandConnection.RecentErrors.Error(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v50 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v49 - v12;
  __chkstk_darwin();
  uint64_t v57 = (char *)&v49 - v13;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v49 - v14;
  unint64_t v16 = &_swiftEmptySetSingleton;
  uint64_t v60 = &_swiftEmptySetSingleton;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v18 = *(void *)(a1 + 16);
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v54 = v10;
    uint64_t v55 = a1;
    uint64_t v20 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    uint64_t v56 = v18;
    do
    {
      sub_1004DE0A8(v19, (uint64_t)v15, type metadata accessor for CommandConnection.RecentErrors.Error);
      sub_1004DE0A8((uint64_t)&v15[*(int *)(v9 + 20)], (uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      if (swift_getEnumCaseMultiPayload()) {
        sub_1004DE110((uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      }
      else {
        sub_1004D8DAC(&v59, *v8, &qword_100717600);
      }
      sub_1004DE110((uint64_t)v15, type metadata accessor for CommandConnection.RecentErrors.Error);
      v19 += v20;
      --v18;
    }
    while (v18);
    a1 = v55;
    swift_bridgeObjectRelease();
    unint64_t v16 = v60;
    uint64_t v17 = v56;
    uint64_t v10 = v54;
  }
  uint64_t v21 = v16[2];
  if (!v21)
  {
    swift_bridgeObjectRelease();
    if (!v17) {
      return 3;
    }
    uint64_t v24 = v10;
    uint64_t v25 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v26 = *(void *)(v24 + 72);
    swift_bridgeObjectRetain();
    uint64_t v27 = v25;
    uint64_t v56 = v17;
    do
    {
      sub_1004DE0A8(v27 + *(int *)(v9 + 20), (uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        unint64_t v28 = *v6;
        if ((~*v6 & 0xF000000000000007) != 0)
        {
          *((void *)&v30 + 1) = *v6;
          *(void *)&long long v30 = v28 + 0x7FFFFFFFFFFFFF98;
          unint64_t v29 = v30 >> 3;
          BOOL v31 = ((v28 >> 59) & 0x1E | (v28 >> 2) & 1) != 0x10 || v29 > 0xE;
          uint64_t v32 = (1 << v29) & 0x6E27;
          if (!v31 && v32 != 0)
          {
            sub_1004831AC(v28);
            swift_bridgeObjectRelease();
            goto LABEL_48;
          }
          sub_1004831AC(v28);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1004DE110((uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      }
      v27 += v26;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    uint64_t v55 = a1;
    swift_bridgeObjectRetain();
    uint64_t v54 = v25;
    uint64_t v35 = v25;
    uint64_t v36 = v56;
    uint64_t v37 = (uint64_t)v57;
    uint64_t v38 = v56;
    uint64_t v39 = (uint64_t)v53;
    uint64_t v40 = (uint64_t)v58;
    while (1)
    {
      sub_1004DE0A8(v35, v37, type metadata accessor for CommandConnection.RecentErrors.Error);
      uint64_t v41 = v37 + *(int *)(v9 + 20);
      swift_storeEnumTagMultiPayload();
      LOBYTE(v41) = _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0(v41, v40);
      sub_1004DE110(v40, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      sub_1004DE110(v37, type metadata accessor for CommandConnection.RecentErrors.Error);
      if (v41) {
        goto LABEL_48;
      }
      v35 += v26;
      if (!--v38)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v42 = v54;
        uint64_t v43 = v54;
        uint64_t v44 = v36;
        uint64_t v45 = (uint64_t)v52;
        do
        {
          sub_1004DE0A8(v43, v39, type metadata accessor for CommandConnection.RecentErrors.Error);
          sub_1004DE0A8(v39 + *(int *)(v9 + 20), v45, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            swift_bridgeObjectRelease();
            uint64_t v48 = v39;
            goto LABEL_47;
          }
          sub_1004DE110(v45, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          sub_1004DE110(v39, type metadata accessor for CommandConnection.RecentErrors.Error);
          v43 += v26;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v47 = (uint64_t)v50;
        uint64_t v46 = v51;
        while (1)
        {
          sub_1004DE0A8(v42, v47, type metadata accessor for CommandConnection.RecentErrors.Error);
          sub_1004DE0A8(v47 + *(int *)(v9 + 20), (uint64_t)v46, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          if (swift_getEnumCaseMultiPayload() == 3) {
            break;
          }
          sub_1004DE110((uint64_t)v46, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          sub_1004DE110(v47, type metadata accessor for CommandConnection.RecentErrors.Error);
          v42 += v26;
          if (!--v36)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
        }
        sub_1004831AC(*v46);
        swift_bridgeObjectRelease();
        uint64_t v48 = v47;
LABEL_47:
        sub_1004DE110(v48, type metadata accessor for CommandConnection.RecentErrors.Error);
        goto LABEL_48;
      }
    }
  }
  if (v21 != 1)
  {
    swift_bridgeObjectRetain();
    char v34 = sub_1004DD680((uint64_t)&off_1006F2C30, (uint64_t)v16);
    swift_bridgeObjectRelease_n();
    if (v34) {
      return 1;
    }
    return 2;
  }
  uint64_t result = sub_1004D5E58((uint64_t)v16);
  if (result != 4)
  {
    char v23 = result;
    if (!(_BYTE)result)
    {
LABEL_48:
      swift_bridgeObjectRelease();
      return 1;
    }
    swift_bridgeObjectRelease();
    if (v23 == 2) {
      return 1;
    }
    return 2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004D83F4(unsigned char *a1, Swift::Int a2)
{
  return sub_1004D8DAC(a1, a2, &qword_100717600);
}

uint64_t sub_1004D8408(uint64_t *a1, void *a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_10044AF60((uint64_t)a2, (uint64_t)&v55);
  uint64_t v6 = v56;
  v56 &= ~0x1000000000000000uLL;
  uint64_t v47 = a2;
  uint64_t v40 = v2;
  uint64_t v41 = a1;
  if ((v6 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)&v55, (uint64_t)v57);
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
    sub_1004E12A8(a2, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
    sub_100454ED0();
    sub_1004E12A8(a2, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
  }
  else
  {
    sub_1005E3410(0);
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    sub_1005E1DB0();
  }
  Swift::Int v7 = sub_1005E3470();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v46 = v5 + 56;
  if ((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v44 = ~v8;
    uint64_t v45 = v5;
    do
    {
      uint64_t v10 = (uint64_t *)(*(void *)(v5 + 48) + 80 * v9);
      uint64_t v11 = *v10;
      unint64_t v12 = v10[1];
      uint64_t v13 = v10[2];
      unint64_t v14 = v10[3];
      uint64_t v15 = v10[7];
      if ((v15 & 0x1000000000000000) != 0)
      {
        uint64_t v21 = v10[4];
        unint64_t v22 = v10[5];
        uint64_t v23 = v10[6];
        uint64_t v25 = v10[8];
        unint64_t v24 = v10[9];
        v58[0] = *v10;
        v58[1] = v12;
        v58[2] = v13;
        v58[3] = v14;
        uint64_t v43 = v21;
        v58[4] = v21;
        v58[5] = v22;
        v58[6] = v23;
        v58[7] = v15 & 0xEFFFFFFFFFFFFFFFLL;
        _OWORD v58[8] = v25;
        v58[9] = v24;
        sub_10044AF60((uint64_t)v47, (uint64_t)v52);
        uint64_t v26 = v53;
        v53 &= ~0x1000000000000000uLL;
        if ((v26 & 0x1000000000000000) != 0)
        {
          sub_100443AD4((uint64_t)v52, (uint64_t)v54);
          sub_1004E12A8(v47, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_10044CA28(v11, v12, v13, v14, v43, v22, v23, v15, v25, v24);
          char v42 = sub_100455D6C((uint64_t)v58, (uint64_t)v54);
          sub_1004E12A8(v47, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
          sub_10044B008(v11, v12, v13, v14, v43, v22, v23, v15, v25, v24);
          if (v42) {
            goto LABEL_23;
          }
        }
      }
      else
      {
        sub_10044AF60((uint64_t)v47, (uint64_t)v49);
        uint64_t v16 = v50;
        v50 &= ~0x1000000000000000uLL;
        if ((v16 & 0x1000000000000000) != 0)
        {
          sub_100443AD4((uint64_t)v49, (uint64_t)v51);
        }
        else
        {
          uint64_t v17 = v49[2];
          uint64_t v18 = v49[3];
          BOOL v19 = v11 == v49[0] && v12 == v49[1];
          if (v19 || (sub_1005E3290() & 1) != 0)
          {
            BOOL v20 = v13 == v17 && v14 == v18;
            if (v20 || (sub_1005E3290() & 1) != 0)
            {
LABEL_23:
              swift_bridgeObjectRelease();
              sub_1004E12A8(v47, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
              uint64_t v27 = (uint64_t *)(*(void *)(*v40 + 48) + 80 * v9);
              uint64_t v28 = *v27;
              unint64_t v29 = v27[1];
              uint64_t v30 = v27[2];
              unint64_t v31 = v27[3];
              uint64_t v32 = v27[4];
              unint64_t v33 = v27[5];
              uint64_t v34 = v27[6];
              uint64_t v35 = v27[7];
              uint64_t v37 = v27[8];
              unint64_t v36 = v27[9];
              *uint64_t v41 = v28;
              v41[1] = v29;
              v41[2] = v30;
              v41[3] = v31;
              v41[4] = v32;
              v41[5] = v33;
              v41[6] = v34;
              v41[7] = v35;
              v41[8] = v37;
              v41[9] = v36;
              sub_10044CA28(v28, v29, v30, v31, v32, v33, v34, v35, v37, v36);
              return 0;
            }
          }
        }
      }
      uint64_t v5 = v45;
      unint64_t v9 = (v9 + 1) & v44;
    }
    while (((*(void *)(v46 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v48 = *v40;
  *uint64_t v40 = 0x8000000000000000;
  sub_1004E12A8(v47, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
  sub_1004DA728(v47, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v40 = v48;
  swift_bridgeObjectRelease();
  sub_10044AF60((uint64_t)v47, (uint64_t)v41);
  return 1;
}

uint64_t sub_1004D8804(_DWORD *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_1005E3440(a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1004DAB0C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(_DWORD *)(v9 + 4 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v9 + 4 * v8) != a2);
  }
  uint64_t result = 0;
  LODWORD(a2) = *(_DWORD *)(*(void *)(*v2 + 48) + 4 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1004D8924(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_1005E33F0();
  if (a3)
  {
    sub_1005E3410(0);
    sub_1005E1CD0();
    swift_bridgeObjectRetain();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3410(1uLL);
    swift_bridgeObjectRetain();
  }
  Swift::Int v9 = sub_1005E3470();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v23 = a1;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1004DAC5C(a2, a3, v11, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v24;
    swift_bridgeObjectRelease();
    *uint64_t v23 = a2;
    v23[1] = a3;
    return 1;
  }
  uint64_t v12 = ~v10;
  while (1)
  {
    if (!*(void *)(*(void *)(v8 + 48) + 16 * v11 + 8))
    {
      if (!a3) {
        goto LABEL_19;
      }
      goto LABEL_7;
    }
    if (!a3) {
      goto LABEL_7;
    }
    uint64_t v13 = sub_1005E1CD0();
    uint64_t v15 = v14;
    if (v13 == sub_1005E1CD0() && v15 == v16) {
      break;
    }
    char v18 = sub_1005E3290();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_18;
    }
LABEL_7:
    unint64_t v11 = (v11 + 1) & v12;
    if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_18:
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v21 = (Swift::Int *)(*(void *)(*v4 + 48) + 16 * v11);
  Swift::Int v22 = v21[1];
  *uint64_t v23 = *v21;
  v23[1] = v22;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1004D8B50(uint64_t a1, Swift::Int a2, uint64_t a3, unint64_t a4, char a5)
{
  int v11 = a5 & 1;
  uint64_t v12 = *v5;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  unint64_t v29 = v5;
  uint64_t v30 = a1;
  if (a5)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3450(a4 >> 14);
  }
  Swift::Int v13 = sub_1005E3470();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v16 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v17 = ~v14;
    uint64_t v18 = *(void *)(v12 + 48);
    do
    {
      uint64_t v19 = v18 + 32 * v15;
      uint64_t v20 = *(void *)(v19 + 16);
      char v21 = *(unsigned char *)(v19 + 24);
      BOOL v22 = *(void *)v19 == a2 && *(void *)(v19 + 8) == a3;
      if (v22 || (sub_1005E3290() & 1) != 0)
      {
        if (v21)
        {
          if (v11) {
            goto LABEL_16;
          }
        }
        else if (!v11 && !((v20 ^ a4) >> 14))
        {
LABEL_16:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v23 = *(void *)(*v29 + 48) + 32 * v15;
          uint64_t v25 = *(void *)v23;
          uint64_t v24 = *(void *)(v23 + 8);
          uint64_t v26 = *(void *)(v23 + 16);
          LOBYTE(v23) = *(unsigned char *)(v23 + 24);
          *(void *)uint64_t v30 = v25;
          *(void *)(v30 + 8) = v24;
          *(void *)(v30 + 16) = v26;
          *(unsigned char *)(v30 + 24) = v23;
          swift_bridgeObjectRetain();
          return 0;
        }
      }
      unint64_t v15 = (v15 + 1) & v17;
    }
    while (((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v31 = *v29;
  *unint64_t v29 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1004DAFBC(a2, a3, a4, v11, v15, isUniquelyReferenced_nonNull_native);
  *unint64_t v29 = v31;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v30 = a2;
  *(void *)(v30 + 8) = a3;
  *(void *)(v30 + 16) = a4;
  uint64_t result = 1;
  *(unsigned char *)(v30 + 24) = v11 != 0;
  return result;
}

uint64_t sub_1004D8D84(unsigned char *a1, Swift::Int a2)
{
  return sub_1004D8DAC(a1, a2, &qword_100716948);
}

uint64_t sub_1004D8D98(unsigned char *a1, Swift::Int a2)
{
  return sub_1004D8DAC(a1, a2, &qword_100716940);
}

uint64_t sub_1004D8DAC(unsigned char *a1, Swift::Int a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  sub_1005E33F0();
  sub_1005E3410(a2);
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1004DB1B4(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

BOOL sub_1004D8EE4()
{
  uint64_t v1 = *v0;
  sub_1005E33F0();
  sub_1005E3410(0);
  unint64_t v2 = sub_1005E3470() & ~(-1 << *(unsigned char *)(v1 + 32));
  uint64_t v3 = (1 << v2) & *(void *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56);
  if (!v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v0;
    *uint64_t v0 = 0x8000000000000000;
    sub_1004DB310(v2, isUniquelyReferenced_nonNull_native);
    *uint64_t v0 = v6;
    swift_bridgeObjectRelease();
  }
  return v3 == 0;
}

uint64_t sub_1004D8FA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175D8);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_51;
  }
  uint64_t v37 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v40 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v39 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  uint64_t v38 = v2;
  while (1)
  {
    if (v7)
    {
      uint64_t v41 = (v7 - 1) & v7;
      int64_t v42 = v9;
      unint64_t v12 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_52;
    }
    if (v13 >= v39) {
      break;
    }
    unint64_t v14 = v40[v13];
    int64_t v15 = v9 + 1;
    if (!v14)
    {
      int64_t v15 = v9 + 2;
      if (v9 + 2 >= v39) {
        break;
      }
      unint64_t v14 = v40[v15];
      if (!v14)
      {
        int64_t v15 = v9 + 3;
        if (v9 + 3 >= v39) {
          break;
        }
        unint64_t v14 = v40[v15];
        if (!v14)
        {
          uint64_t v16 = v9 + 4;
          if (v9 + 4 >= v39) {
            break;
          }
          unint64_t v14 = v40[v16];
          if (!v14)
          {
            while (1)
            {
              int64_t v15 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_53;
              }
              if (v15 >= v39) {
                goto LABEL_47;
              }
              unint64_t v14 = v40[v15];
              ++v16;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v15 = v9 + 4;
        }
      }
    }
LABEL_23:
    uint64_t v41 = (v14 - 1) & v14;
    int64_t v42 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 80 * v12);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    unint64_t v21 = v17[3];
    uint64_t v43 = v17[4];
    unint64_t v44 = v17[5];
    uint64_t v22 = v17[7];
    unint64_t v23 = v17[9];
    uint64_t v45 = v17[8];
    uint64_t v46 = v17[6];
    sub_1005E33F0();
    if ((v22 & 0x1000000000000000) != 0)
    {
      sub_1005E3410(1uLL);
      switch((v23 >> 59) & 6 | ((v22 & 0x2000000000000000) != 0))
      {
        case 1uLL:
          sub_1005E3410(1uLL);
          sub_10044CA28(v18, v19, v20, v21, v43, v44, v46, v22, v45, v23);
          sub_100008D24(v18, v19);
          sub_100008D24(v20, v21);
          sub_100008D24(v43, v44);
          sub_100008D24(v46, v22 & 0xCFFFFFFFFFFFFFFFLL);
          sub_100008D24(v45, v23 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v46, v22 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1000094D4(v43, v44);
          sub_1000094D4(v20, v21);
          sub_1000094D4(v18, v19);
          sub_1000094D4(v45, v23 & 0xCFFFFFFFFFFFFFFFLL);
          sub_10044B008(v18, v19, v20, v21, v43, v44, v46, v22, v45, v23);
          break;
        case 2uLL:
          sub_1005E3410(2uLL);
          uint64_t v25 = v43;
          sub_100443318(v18, v19, v20, v21, v43, v44, v46, v22 & 0xEFFFFFFFFFFFFFFFLL, v45, v23);
          sub_1005E08B0();
          goto LABEL_36;
        case 3uLL:
          Swift::UInt v26 = 3;
          goto LABEL_35;
        case 4uLL:
          Swift::UInt v24 = 4;
          goto LABEL_32;
        case 5uLL:
          Swift::UInt v26 = 5;
          goto LABEL_35;
        case 6uLL:
          Swift::UInt v26 = 6;
LABEL_35:
          sub_1005E3410(v26);
          uint64_t v25 = v43;
          sub_100443318(v18, v19, v20, v21, v43, v44, v46, v22 & 0xEFFFFFFFFFFFFFFFLL, v45, v23);
          sub_1005E1DB0();
          sub_1005E1DB0();
LABEL_36:
          sub_10044B008(v18, v19, v20, v21, v25, v44, v46, v22, v45, v23);
          break;
        default:
          Swift::UInt v24 = 0;
LABEL_32:
          sub_1005E3410(v24);
          sub_10044CA28(v18, v19, v20, v21, v43, v44, v46, v22, v45, v23);
          sub_100008D24(v18, v19);
          sub_100008D24(v20, v21);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v18, v19);
          sub_1000094D4(v20, v21);
          sub_10044B008(v18, v19, v20, v21, v43, v44, v46, v22, v45, v23);
          break;
      }
      uint64_t v2 = v38;
    }
    else
    {
      sub_1005E3410(0);
      sub_1005E1DB0();
      sub_1005E1DB0();
    }
    Swift::Int v27 = sub_1005E3470();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v31 = 0;
    unint64_t v32 = (unint64_t)(63 - v28) >> 6;
    do
    {
      if (++v30 == v32 && (v31 & 1) != 0)
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        JUMPOUT(0x1004D962CLL);
      }
      BOOL v33 = v30 == v32;
      if (v30 == v32) {
        unint64_t v30 = 0;
      }
      v31 |= v33;
      uint64_t v34 = *(void *)(v8 + 8 * v30);
    }
    while (v34 == -1);
    unint64_t v10 = __clz(__rbit64(~v34)) + (v30 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = (uint64_t *)(*(void *)(v4 + 48) + 80 * v10);
    *uint64_t v11 = v18;
    v11[1] = v19;
    v11[2] = v20;
    v11[3] = v21;
    int64_t v9 = v42;
    v11[4] = v43;
    _OWORD v11[5] = v44;
    v11[6] = v46;
    v11[7] = v22;
    v11[8] = v45;
    v11[9] = v23;
    ++*(void *)(v4 + 16);
    unint64_t v7 = v41;
  }
LABEL_47:
  swift_release();
  uint64_t v1 = v37;
  uint64_t v35 = 1 << *(unsigned char *)(v2 + 32);
  if (v35 > 63) {
    bzero(v40, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v40 = -1 << v35;
  }
  *(void *)(v2 + 16) = 0;
LABEL_51:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1004D9648()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100715FB8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      sub_1005E33F0();
      sub_1005E3440(v18);
      uint64_t result = sub_1005E3470();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1004D98F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175F0);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_36;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_36;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_42;
                  }
                  if (v11 >= v8) {
                    goto LABEL_36;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      sub_1005E33F0();
      if (v20)
      {
        sub_1005E3410(0);
        sub_1005E1CD0();
        sub_1005E1DB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1005E3410(1uLL);
      }
      uint64_t result = sub_1005E3470();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1004D9C0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175E8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      sub_1005E33F0();
      sub_1005E3410(v18);
      uint64_t result = sub_1005E3470();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1004D9EB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175E0);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_36;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_36;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_36;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_42;
                  }
                  if (v10 >= v32) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 32 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      unint64_t v22 = *(void *)(v19 + 16);
      int v23 = *(unsigned __int8 *)(v19 + 24);
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
      if (v23 == 1)
      {
        sub_1005E3420(0);
      }
      else
      {
        sub_1005E3420(1u);
        sub_1005E3450(v22 >> 14);
      }
      uint64_t result = sub_1005E3470();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 32 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(void *)(v12 + 16) = v22;
      *(unsigned char *)(v12 + 24) = v23;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1004DA208(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10000566C(a2);
  uint64_t result = sub_1005E2C10();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
      sub_1005E33F0();
      sub_1005E3410(v20);
      uint64_t result = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1004DA4B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175F8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    uint64_t v23 = v2;
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (!v9)
      {
        int64_t v13 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v13 >= v10) {
          goto LABEL_31;
        }
        uint64_t v9 = v6[v13];
        ++v5;
        if (!v9)
        {
          int64_t v5 = v13 + 1;
          if (v13 + 1 >= v10) {
            goto LABEL_31;
          }
          uint64_t v9 = v6[v5];
          if (!v9)
          {
            int64_t v5 = v13 + 2;
            if (v13 + 2 >= v10) {
              goto LABEL_31;
            }
            uint64_t v9 = v6[v5];
            if (!v9)
            {
              int64_t v14 = v13 + 3;
              if (v14 >= v10)
              {
LABEL_31:
                uint64_t v22 = 1 << *(unsigned char *)(v23 + 32);
                if (v22 > 63) {
                  bzero(v6, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v22;
                }
                uint64_t v1 = v0;
                *(void *)(v23 + 16) = 0;
                break;
              }
              uint64_t v9 = v6[v14];
              if (!v9)
              {
                while (1)
                {
                  int64_t v5 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_37;
                  }
                  if (v5 >= v10) {
                    goto LABEL_31;
                  }
                  uint64_t v9 = v6[v5];
                  ++v14;
                  if (v9) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v5 = v14;
            }
          }
        }
      }
LABEL_22:
      sub_1005E33F0();
      sub_1005E3410(0);
      uint64_t result = sub_1005E3470();
      uint64_t v15 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v18 = 0;
        unint64_t v19 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v19 && (v18 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v20 = v17 == v19;
          if (v17 == v19) {
            unint64_t v17 = 0;
          }
          v18 |= v20;
          uint64_t v21 = *(void *)(v11 + 8 * v17);
        }
        while (v21 == -1);
        unint64_t v12 = __clz(__rbit64(~v21)) + (v17 << 6);
      }
      v9 &= v9 - 1;
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1004DA728(void *a1, unint64_t a2, char a3)
{
  sub_10044AF60((uint64_t)a1, (uint64_t)&v49);
  uint64_t v6 = v51;
  unint64_t v7 = v52;
  uint64_t v8 = v53;
  unint64_t v9 = v54;
  uint64_t v10 = v56;
  uint64_t v11 = v57;
  unint64_t v12 = v58;
  uint64_t v41 = v3;
  unint64_t v13 = *(void *)(*v3 + 16);
  unint64_t v14 = *(void *)(*v3 + 24);
  if (v14 > v13 && (a3 & 1) != 0) {
    goto LABEL_31;
  }
  if (a3)
  {
    uint64_t v44 = v55;
    unint64_t v46 = v50;
    uint64_t v15 = v49;
    sub_1004D8FA8();
  }
  else
  {
    if (v14 > v13)
    {
      sub_1004DB410();
      goto LABEL_31;
    }
    uint64_t v44 = v55;
    unint64_t v46 = v50;
    uint64_t v15 = v49;
    sub_1004DBF80();
  }
  uint64_t v47 = *v3;
  sub_1005E33F0();
  sub_10044AF60((uint64_t)a1, (uint64_t)&v65);
  uint64_t v16 = v66;
  v66 &= ~0x1000000000000000uLL;
  if ((v16 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)&v65, (uint64_t)v67);
    sub_1005E3410(1uLL);
    sub_100443318(v15, v46, v6, v7, v8, v9, v44, v10 & 0xEFFFFFFFFFFFFFFFLL, v11, v12);
    sub_100454ED0();
    sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
  }
  else
  {
    sub_1005E3410(0);
    sub_1005E1DB0();
    sub_1005E1DB0();
  }
  Swift::Int v17 = sub_1005E3470();
  uint64_t v18 = -1 << *(unsigned char *)(v47 + 32);
  a2 = v17 & ~v18;
  if ((*(void *)(v47 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v45 = ~v18;
    do
    {
      unint64_t v19 = (uint64_t *)(*(void *)(v47 + 48) + 80 * a2);
      uint64_t v20 = *v19;
      unint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      unint64_t v23 = v19[3];
      uint64_t v24 = v19[7];
      if ((v24 & 0x1000000000000000) != 0)
      {
        uint64_t v30 = v19[4];
        unint64_t v31 = v19[5];
        uint64_t v32 = v19[6];
        uint64_t v33 = v19[8];
        unint64_t v34 = v19[9];
        v68[0] = *v19;
        v68[1] = v21;
        v68[2] = v22;
        v68[3] = v23;
        uint64_t v43 = v30;
        v68[4] = v30;
        v68[5] = v31;
        v68[6] = v32;
        v68[7] = v24 & 0xEFFFFFFFFFFFFFFFLL;
        v68[8] = v33;
        v68[9] = v34;
        sub_10044AF60((uint64_t)a1, (uint64_t)v62);
        uint64_t v35 = v63;
        v63 &= ~0x1000000000000000uLL;
        if ((v35 & 0x1000000000000000) != 0)
        {
          sub_100443AD4((uint64_t)v62, (uint64_t)v64);
          sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_10044CA28(v20, v21, v22, v23, v43, v31, v32, v24, v33, v34);
          char v42 = sub_100455D6C((uint64_t)v68, (uint64_t)v64);
          sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
          sub_10044B008(v20, v21, v22, v23, v43, v31, v32, v24, v33, v34);
          if (v42) {
            goto LABEL_30;
          }
        }
      }
      else
      {
        sub_10044AF60((uint64_t)a1, (uint64_t)v59);
        uint64_t v25 = v60;
        v60 &= ~0x1000000000000000uLL;
        if ((v25 & 0x1000000000000000) != 0)
        {
          sub_100443AD4((uint64_t)v59, (uint64_t)v61);
        }
        else
        {
          uint64_t v26 = v59[2];
          uint64_t v27 = v59[3];
          BOOL v28 = v20 == v59[0] && v21 == v59[1];
          if (v28 || (sub_1005E3290() & 1) != 0)
          {
            BOOL v29 = v22 == v26 && v23 == v27;
            if (v29 || (sub_1005E3290() & 1) != 0)
            {
LABEL_30:
              sub_1005E3370();
              __break(1u);
              break;
            }
          }
        }
      }
      a2 = (a2 + 1) & v45;
    }
    while (((*(void *)(v47 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_31:
  uint64_t v36 = *v41;
  *(void *)(*v41 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_10044AF60((uint64_t)a1, *(void *)(v36 + 48) + 80 * a2);
  uint64_t v38 = *(void *)(v36 + 16);
  BOOL v39 = __OFADD__(v38, 1);
  uint64_t v40 = v38 + 1;
  if (v39) {
    __break(1u);
  }
  else {
    *(void *)(v36 + 16) = v40;
  }
  return result;
}

Swift::Int sub_1004DAB0C(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt32 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1004D9648();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1004DB5F4();
      goto LABEL_14;
    }
    sub_1004DC6B8();
  }
  uint64_t v8 = *v3;
  sub_1005E33F0();
  sub_1005E3440(v5);
  uint64_t result = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_1004DAC5C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  Swift::UInt32 v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1004D98F4();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (Swift::Int)sub_1004DB78C();
        goto LABEL_23;
      }
      sub_1004DC934();
    }
    uint64_t v11 = *v4;
    sub_1005E33F0();
    if (a2)
    {
      sub_1005E3410(0);
      sub_1005E1CD0();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1005E3410(1uLL);
    }
    uint64_t result = sub_1005E3470();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v13 = ~v12;
      do
      {
        if (*(void *)(*(void *)(v11 + 48) + 16 * a3 + 8))
        {
          if (a2)
          {
            uint64_t v14 = sub_1005E1CD0();
            uint64_t v16 = v15;
            if (v14 == sub_1005E1CD0() && v16 == v17) {
              goto LABEL_26;
            }
            char v19 = sub_1005E3290();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v19) {
              goto LABEL_27;
            }
          }
        }
        else if (!a2)
        {
          goto LABEL_27;
        }
        a3 = (a3 + 1) & v13;
      }
      while (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_23:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_26:
    swift_bridgeObjectRelease_n();
LABEL_27:
    uint64_t result = sub_1005E3370();
    __break(1u);
  }
  else
  {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_1004DAE6C(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1004D9C0C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1004DB93C();
      goto LABEL_14;
    }
    sub_1004DCC34();
  }
  uint64_t v8 = *v3;
  sub_1005E33F0();
  sub_1005E3410(v5);
  uint64_t result = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_1004DAFBC(Swift::Int result, uint64_t a2, unint64_t a3, char a4, unint64_t a5, char a6)
{
  unint64_t v7 = v6;
  Swift::Int v11 = result;
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0) {
    goto LABEL_24;
  }
  if (a6)
  {
    sub_1004D9EB8();
  }
  else
  {
    if (v13 > v12)
    {
      uint64_t result = (Swift::Int)sub_1004DBAD0();
      goto LABEL_24;
    }
    sub_1004DCEB0();
  }
  uint64_t v14 = *v6;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1005E1DB0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3450(a3 >> 14);
  }
  uint64_t result = sub_1005E3470();
  uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
  a5 = result & ~v15;
  uint64_t v16 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v14 + 48);
    do
    {
      uint64_t v19 = v18 + 32 * a5;
      uint64_t result = *(void *)v19;
      uint64_t v20 = *(void *)(v19 + 16);
      char v21 = *(unsigned char *)(v19 + 24);
      BOOL v22 = *(void *)v19 == v11 && *(void *)(v19 + 8) == a2;
      if (v22 || (uint64_t result = sub_1005E3290(), (result & 1) != 0))
      {
        if (v21)
        {
          if (a4) {
            goto LABEL_23;
          }
        }
        else if ((a4 & 1) == 0 && !((v20 ^ a3) >> 14))
        {
LABEL_23:
          uint64_t result = sub_1005E3370();
          __break(1u);
          break;
        }
      }
      a5 = (a5 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_24:
  uint64_t v23 = *v7;
  *(void *)(*v7 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v24 = *(void *)(v23 + 48) + 32 * a5;
  *(void *)uint64_t v24 = v11;
  *(void *)(v24 + 8) = a2;
  *(void *)(v24 + 16) = a3;
  *(unsigned char *)(v24 + 24) = a4 & 1;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + 16) = v27;
  }
  return result;
}

Swift::Int sub_1004DB1B4(Swift::Int result, unint64_t a2, char a3, uint64_t *a4)
{
  Swift::UInt v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_1004DA208(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_1004DBC94(a4);
      goto LABEL_14;
    }
    sub_1004DD1C4(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_1005E33F0();
  sub_1005E3410(v6);
  uint64_t result = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

Swift::Int sub_1004DB310(Swift::Int result, char a2)
{
  unint64_t v3 = result;
  unint64_t v4 = *(void *)(*v2 + 16);
  unint64_t v5 = *(void *)(*v2 + 24);
  if (v5 <= v4 || (a2 & 1) == 0)
  {
    if (a2)
    {
      sub_1004DA4B0();
      goto LABEL_8;
    }
    if (v5 <= v4)
    {
      sub_1004DD43C();
LABEL_8:
      uint64_t v6 = *v2;
      sub_1005E33F0();
      sub_1005E3410(0);
      uint64_t result = sub_1005E3470();
      unint64_t v3 = result & ~(-1 << *(unsigned char *)(v6 + 32));
      if ((*(void *)(v6 + ((v3 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v3)) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    uint64_t result = (Swift::Int)sub_1004DBE20();
  }
LABEL_9:
  uint64_t v7 = *v2;
  *(void *)(*v2 + 8 * (v3 >> 6) + 56) |= 1 << v3;
  uint64_t v8 = *(void *)(v7 + 16);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (!v9)
  {
    *(void *)(v7 + 16) = v10;
    return result;
  }
  __break(1u);
LABEL_12:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

void *sub_1004DB410()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_1007175D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v13) {
      goto LABEL_28;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30)
      {
        int64_t v9 = v29 + 2;
        if (v29 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v30 = *(void *)(v6 + 8 * v9);
        if (!v30) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 80 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    unint64_t v21 = v17[3];
    uint64_t v22 = v17[4];
    unint64_t v23 = v17[5];
    uint64_t v24 = v17[6];
    uint64_t v25 = v17[7];
    uint64_t v27 = v17[8];
    unint64_t v26 = v17[9];
    BOOL v28 = (uint64_t *)(*(void *)(v4 + 48) + v16);
    *BOOL v28 = v18;
    v28[1] = v19;
    void v28[2] = v20;
    v28[3] = v21;
    v28[4] = v22;
    v28[5] = v23;
    v28[6] = v24;
    v28[7] = v25;
    v28[8] = v27;
    v28[9] = v26;
    uint64_t result = (void *)sub_10044CA28(v18, v19, v20, v21, v22, v23, v24, v25, v27, v26);
  }
  int64_t v31 = v29 + 3;
  if (v31 >= v13) {
    goto LABEL_28;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1004DB5F4()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_100715FB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1004DB78C()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_1007175F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1004DB93C()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_1007175E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1004DBAD0()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_1007175E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    LOBYTE(v17) = *(unsigned char *)(v17 + 24);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v19;
    *(void *)(v21 + 8) = v18;
    *(void *)(v21 + 16) = v20;
    *(unsigned char *)(v21 + 24) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1004DBC94(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10000566C(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1005E2C00();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1004DBE20()
{
  uint64_t v1 = v0;
  sub_10000566C(&qword_1007175F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_27:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  uint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (!v12)
    {
      int64_t v14 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 >= v13) {
        goto LABEL_27;
      }
      uint64_t v12 = *(void *)(v6 + 8 * v14);
      ++v9;
      if (!v12)
      {
        int64_t v9 = v14 + 1;
        if (v14 + 1 >= v13) {
          goto LABEL_27;
        }
        uint64_t v12 = *(void *)(v6 + 8 * v9);
        if (!v12)
        {
          int64_t v9 = v14 + 2;
          if (v14 + 2 >= v13) {
            goto LABEL_27;
          }
          uint64_t v12 = *(void *)(v6 + 8 * v9);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_12:
    v12 &= v12 - 1;
  }
  int64_t v15 = v14 + 3;
  if (v15 >= v13) {
    goto LABEL_27;
  }
  uint64_t v12 = *(void *)(v6 + 8 * v15);
  if (v12)
  {
    int64_t v9 = v15;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_27;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v9);
    ++v15;
    if (v12) {
      goto LABEL_12;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1004DBF80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175D8);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_49;
  }
  uint64_t v36 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v39 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v40 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  uint64_t v38 = v2;
  uint64_t v37 = v4;
  while (1)
  {
    if (v7)
    {
      uint64_t v41 = (v7 - 1) & v7;
      int64_t v42 = v9;
      unint64_t v12 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_50;
    }
    if (v13 >= v40) {
      break;
    }
    unint64_t v14 = *(void *)(v39 + 8 * v13);
    int64_t v15 = v9 + 1;
    if (!v14)
    {
      int64_t v15 = v9 + 2;
      if (v9 + 2 >= v40) {
        break;
      }
      unint64_t v14 = *(void *)(v39 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v9 + 3;
        if (v9 + 3 >= v40) {
          break;
        }
        unint64_t v14 = *(void *)(v39 + 8 * v15);
        if (!v14)
        {
          uint64_t v16 = v9 + 4;
          if (v9 + 4 >= v40) {
            break;
          }
          unint64_t v14 = *(void *)(v39 + 8 * v16);
          if (!v14)
          {
            while (1)
            {
              int64_t v15 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_51;
              }
              if (v15 >= v40) {
                goto LABEL_47;
              }
              unint64_t v14 = *(void *)(v39 + 8 * v15);
              ++v16;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v15 = v9 + 4;
        }
      }
    }
LABEL_23:
    uint64_t v41 = (v14 - 1) & v14;
    int64_t v42 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 80 * v12);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    unint64_t v21 = v17[3];
    unint64_t v44 = v17[5];
    uint64_t v45 = v17[4];
    uint64_t v22 = v17[7];
    uint64_t v43 = v17[6];
    unint64_t v23 = v17[9];
    uint64_t v46 = v17[8];
    sub_1005E33F0();
    if ((v22 & 0x1000000000000000) != 0)
    {
      sub_1005E3410(1uLL);
      switch((v23 >> 59) & 6 | ((v22 & 0x2000000000000000) != 0))
      {
        case 1uLL:
          sub_1005E3410(1uLL);
          sub_10044CA28(v18, v19, v20, v21, v45, v44, v43, v22, v46, v23);
          sub_10044CA28(v18, v19, v20, v21, v45, v44, v43, v22, v46, v23);
          sub_100008D24(v18, v19);
          sub_100008D24(v20, v21);
          sub_100008D24(v45, v44);
          sub_100008D24(v43, v22 & 0xCFFFFFFFFFFFFFFFLL);
          sub_100008D24(v46, v23 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v43, v22 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1000094D4(v45, v44);
          sub_1000094D4(v20, v21);
          sub_1000094D4(v18, v19);
          sub_1000094D4(v46, v23 & 0xCFFFFFFFFFFFFFFFLL);
          uint64_t v4 = v37;
          sub_10044B008(v18, v19, v20, v21, v45, v44, v43, v22, v46, v23);
          break;
        case 2uLL:
          sub_1005E3410(2uLL);
          sub_100443318(v18, v19, v20, v21, v45, v44, v43, v22 & 0xEFFFFFFFFFFFFFFFLL, v46, v23);
          uint64_t v25 = v43;
          sub_100443318(v18, v19, v20, v21, v45, v44, v43, v22 & 0xEFFFFFFFFFFFFFFFLL, v46, v23);
          sub_1005E08B0();
          goto LABEL_36;
        case 3uLL:
          Swift::UInt v26 = 3;
          goto LABEL_35;
        case 4uLL:
          Swift::UInt v24 = 4;
          goto LABEL_32;
        case 5uLL:
          Swift::UInt v26 = 5;
          goto LABEL_35;
        case 6uLL:
          Swift::UInt v26 = 6;
LABEL_35:
          sub_1005E3410(v26);
          sub_100443318(v18, v19, v20, v21, v45, v44, v43, v22 & 0xEFFFFFFFFFFFFFFFLL, v46, v23);
          uint64_t v25 = v43;
          sub_100443318(v18, v19, v20, v21, v45, v44, v43, v22 & 0xEFFFFFFFFFFFFFFFLL, v46, v23);
          sub_1005E1DB0();
          sub_1005E1DB0();
LABEL_36:
          sub_10044B008(v18, v19, v20, v21, v45, v44, v25, v22, v46, v23);
          break;
        default:
          Swift::UInt v24 = 0;
LABEL_32:
          sub_1005E3410(v24);
          sub_10044CA28(v18, v19, v20, v21, v45, v44, v43, v22, v46, v23);
          sub_10044CA28(v18, v19, v20, v21, v45, v44, v43, v22, v46, v23);
          sub_100008D24(v18, v19);
          sub_100008D24(v20, v21);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v18, v19);
          sub_1000094D4(v20, v21);
          sub_10044B008(v18, v19, v20, v21, v45, v44, v43, v22, v46, v23);
          break;
      }
      uint64_t v2 = v38;
    }
    else
    {
      sub_1005E3410(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      sub_1005E1DB0();
    }
    Swift::Int v27 = sub_1005E3470();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v31 = 0;
    unint64_t v32 = (unint64_t)(63 - v28) >> 6;
    do
    {
      if (++v30 == v32 && (v31 & 1) != 0)
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        JUMPOUT(0x1004DC69CLL);
      }
      BOOL v33 = v30 == v32;
      if (v30 == v32) {
        unint64_t v30 = 0;
      }
      v31 |= v33;
      uint64_t v34 = *(void *)(v8 + 8 * v30);
    }
    while (v34 == -1);
    unint64_t v10 = __clz(__rbit64(~v34)) + (v30 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = (uint64_t *)(*(void *)(v4 + 48) + 80 * v10);
    *uint64_t v11 = v18;
    v11[1] = v19;
    v11[2] = v20;
    v11[3] = v21;
    v11[4] = v45;
    _OWORD v11[5] = v44;
    int64_t v9 = v42;
    v11[6] = v43;
    v11[7] = v22;
    v11[8] = v46;
    v11[9] = v23;
    ++*(void *)(v4 + 16);
    unint64_t v7 = v41;
  }
LABEL_47:
  uint64_t result = swift_release_n();
  uint64_t v1 = v36;
LABEL_49:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1004DC6B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100715FB8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt32 v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    sub_1005E33F0();
    sub_1005E3440(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1004DC934()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175F0);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v29) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v29) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v28 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v28 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    Swift::UInt32 v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1005E33F0();
    if (v19)
    {
      sub_1005E3410(0);
      sub_1005E1CD0();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1005E3410(1uLL);
    }
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v8 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    void *v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v28 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1004DCC34()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175E8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_1005E33F0();
    sub_1005E3410(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1004DCEB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175E0);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v31) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 32 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    unint64_t v21 = *(void *)(v18 + 16);
    int v22 = *(unsigned __int8 *)(v18 + 24);
    sub_1005E33F0();
    swift_bridgeObjectRetain_n();
    sub_1005E1DB0();
    swift_bridgeObjectRelease();
    if (v22 == 1)
    {
      sub_1005E3420(0);
    }
    else
    {
      sub_1005E3420(1u);
      sub_1005E3450(v21 >> 14);
    }
    uint64_t result = sub_1005E3470();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 32 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v21;
    *(unsigned char *)(v12 + 24) = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1004DD1C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10000566C(a2);
  uint64_t result = sub_1005E2C10();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
    sub_1005E33F0();
    sub_1005E3410(v20);
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1004DD43C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007175F8);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (!v9)
    {
      int64_t v13 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v13 >= v10) {
        goto LABEL_31;
      }
      uint64_t v9 = *(void *)(v6 + 8 * v13);
      ++v5;
      if (!v9)
      {
        int64_t v5 = v13 + 1;
        if (v13 + 1 >= v10) {
          goto LABEL_31;
        }
        uint64_t v9 = *(void *)(v6 + 8 * v5);
        if (!v9)
        {
          int64_t v5 = v13 + 2;
          if (v13 + 2 >= v10) {
            goto LABEL_31;
          }
          uint64_t v9 = *(void *)(v6 + 8 * v5);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_22:
    sub_1005E33F0();
    sub_1005E3410(0);
    uint64_t result = sub_1005E3470();
    uint64_t v15 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v18 = 0;
      unint64_t v19 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v19 && (v18 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v20 = v17 == v19;
        if (v17 == v19) {
          unint64_t v17 = 0;
        }
        v18 |= v20;
        uint64_t v21 = *(void *)(v11 + 8 * v17);
      }
      while (v21 == -1);
      unint64_t v12 = __clz(__rbit64(~v21)) + (v17 << 6);
    }
    v9 &= v9 - 1;
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    ++*(void *)(v4 + 16);
  }
  int64_t v14 = v13 + 3;
  if (v14 >= v10)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  uint64_t v9 = *(void *)(v6 + 8 * v14);
  if (v9)
  {
    int64_t v5 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_31;
    }
    uint64_t v9 = *(void *)(v6 + 8 * v5);
    ++v14;
    if (v9) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1004DD680(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  size_t v5 = ((unint64_t)((1 << v4) + 63) >> 3) & 0x1FFFFFFFFFFFFFF8;
  if (v4 & 0x3Fu) <= 0xD || (swift_stdlib_isStackAllocationSafe())
  {
    __chkstk_darwin();
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    char v6 = sub_1004E1364((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), a1, a2);
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    char v6 = sub_1004E1364((uint64_t)v7, a1, a2);
    swift_slowDealloc();
  }
  return v6 & 1;
}

uint64_t sub_1004DD7F0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(unsigned __int8 *)(*(void *)(a4 + 48) + result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t _s15IMAP2Connection07CommandB0C12RecentErrorsV5ErrorV4KindO21__derived_enum_equalsySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  uint64_t v2 = sub_1005E1650();
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v65 = v2;
  __chkstk_darwin();
  uint64_t v62 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v62 - v4;
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  __chkstk_darwin();
  char v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v62 - v7;
  __chkstk_darwin();
  int64_t v10 = (unint64_t *)((char *)&v62 - v9);
  __chkstk_darwin();
  unint64_t v12 = (uint64_t *)((char *)&v62 - v11);
  __chkstk_darwin();
  int64_t v14 = (unint64_t *)((char *)&v62 - v13);
  __chkstk_darwin();
  unint64_t v16 = (unsigned __int8 *)&v62 - v15;
  sub_10000566C(&qword_100717618);
  uint64_t v17 = __chkstk_darwin();
  unint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v20 = (unint64_t *)&v19[*(int *)(v17 + 56)];
  sub_1004DE0A8(v66, (uint64_t)v19, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  sub_1004DE0A8(v67, (uint64_t)v20, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004DE0A8((uint64_t)v19, (uint64_t)v14, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      unint64_t v39 = *v14;
      unint64_t v40 = v14[1];
      unint64_t v41 = v14[2];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        unint64_t v50 = v39;
        goto LABEL_33;
      }
      unint64_t v42 = *v20;
      unint64_t v43 = v20[1];
      unint64_t v44 = v20[2];
      unint64_t v45 = *v20 & 0xF000000000000007;
      if ((~v39 & 0xF000000000000007) == 0)
      {
        if (v45 != 0xF000000000000007)
        {
          unint64_t v34 = *v20;
          goto LABEL_23;
        }
LABEL_45:
        if (v40 != v43 || v41 != v44)
        {
          char v54 = sub_1005E3290();
          sub_1004831AC(v42);
          swift_bridgeObjectRelease();
          unint64_t v55 = v39;
          goto LABEL_50;
        }
        sub_1004831AC(v42);
        swift_bridgeObjectRelease();
        unint64_t v59 = v39;
LABEL_57:
        sub_1004831AC(v59);
LABEL_58:
        swift_bridgeObjectRelease();
LABEL_59:
        sub_1004DE110((uint64_t)v19, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
        char v21 = 1;
        return v21 & 1;
      }
      if (v45 != 0xF000000000000007)
      {
        sub_10044AE60(*v20);
        sub_10044AE60(v39);
        static ResponseTextCode.__derived_enum_equals(_:_:)();
        char v57 = v56;
        sub_1004831AC(v42);
        sub_1004831AC(v39);
        if (v57) {
          goto LABEL_45;
        }
        sub_1004831AC(v42);
      }
      swift_bridgeObjectRelease();
      unint64_t v60 = v39;
      goto LABEL_64;
    case 2u:
      sub_1004DE0A8((uint64_t)v19, (uint64_t)v12, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      uint64_t v23 = *v12;
      uint64_t v22 = v12[1];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      unint64_t v24 = v20[1];
      if (!v22)
      {
        if (!v24) {
          goto LABEL_59;
        }
        goto LABEL_65;
      }
      if (!v24) {
        goto LABEL_65;
      }
      if (v23 == *v20 && v22 == v24)
      {
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
      char v26 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_59;
      }
      goto LABEL_66;
    case 3u:
      sub_1004DE0A8((uint64_t)v19, (uint64_t)v10, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      unint64_t v27 = *v10;
      unint64_t v28 = v10[1];
      unint64_t v29 = v10[2];
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        unint64_t v30 = *v20;
        unint64_t v31 = v20[1];
        unint64_t v32 = v20[2];
        unint64_t v33 = *v20 & 0xF000000000000007;
        if ((~v27 & 0xF000000000000007) == 0)
        {
          if (v33 != 0xF000000000000007)
          {
            unint64_t v34 = *v20;
LABEL_23:
            sub_1004831AC(v34);
            swift_bridgeObjectRelease();
LABEL_65:
            swift_bridgeObjectRelease();
            goto LABEL_66;
          }
LABEL_38:
          if (v28 == v31 && v29 == v32)
          {
            sub_1004831AC(v30);
            swift_bridgeObjectRelease();
            unint64_t v59 = v27;
            goto LABEL_57;
          }
          char v54 = sub_1005E3290();
          sub_1004831AC(v30);
          swift_bridgeObjectRelease();
          unint64_t v55 = v27;
LABEL_50:
          sub_1004831AC(v55);
          swift_bridgeObjectRelease();
          if (v54) {
            goto LABEL_59;
          }
LABEL_66:
          sub_1004DE110((uint64_t)v19, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
          goto LABEL_67;
        }
        if (v33 != 0xF000000000000007)
        {
          sub_10044AE60(*v20);
          sub_10044AE60(v27);
          static ResponseTextCode.__derived_enum_equals(_:_:)();
          char v52 = v51;
          sub_1004831AC(v30);
          sub_1004831AC(v27);
          if (v52) {
            goto LABEL_38;
          }
          sub_1004831AC(v30);
        }
        swift_bridgeObjectRelease();
        unint64_t v60 = v27;
LABEL_64:
        sub_1004831AC(v60);
        goto LABEL_65;
      }
      unint64_t v50 = v27;
LABEL_33:
      sub_1004831AC(v50);
      swift_bridgeObjectRelease();
LABEL_35:
      sub_100007A48((uint64_t)v19, &qword_100717618);
LABEL_67:
      char v21 = 0;
      return v21 & 1;
    case 4u:
      sub_1004DE0A8((uint64_t)v19, (uint64_t)v8, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v36 = v63;
        uint64_t v35 = v64;
        uint64_t v37 = v65;
        (*(void (**)(char *, unint64_t *, uint64_t))(v64 + 32))(v63, v20, v65);
        char v21 = sub_1005E1640();
        uint64_t v38 = *(void (**)(char *, uint64_t))(v35 + 8);
        v38(v36, v37);
        v38(v8, v37);
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v65);
      goto LABEL_35;
    case 5u:
      sub_1004DE0A8((uint64_t)v19, (uint64_t)v6, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        (*(void (**)(char *, uint64_t))(v64 + 8))(v6, v65);
        goto LABEL_35;
      }
      uint64_t v47 = v64;
      uint64_t v46 = v65;
      uint64_t v48 = v62;
      (*(void (**)(char *, unint64_t *, uint64_t))(v64 + 32))(v62, v20, v65);
      char v21 = sub_1005E1640();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v47 + 8);
      v49(v48, v46);
      v49(v6, v46);
LABEL_26:
      sub_1004DE110((uint64_t)v19, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      return v21 & 1;
    case 6u:
      if (swift_getEnumCaseMultiPayload() == 6) {
        goto LABEL_59;
      }
      goto LABEL_35;
    default:
      sub_1004DE0A8((uint64_t)v19, (uint64_t)v16, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_35;
      }
      char v21 = *v16 == *(unsigned __int8 *)v20;
      goto LABEL_26;
  }
}

uint64_t sub_1004DE020(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for CommandConnection.RecentErrors.Statistics(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_100717578);
}

uint64_t sub_1004DE0A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004DE110(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004DE170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100716650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004DE1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100716650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s15IMAP2Connection07CommandB0C12RecentErrorsV10StatisticsV23__derived_struct_equalsySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1005E1650();
  uint64_t v52 = *(void *)(v4 - 8);
  __chkstk_darwin();
  char v51 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000566C(&qword_100717608);
  __chkstk_darwin();
  uint64_t v50 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v41 - v8;
  sub_10000566C(&qword_100716650);
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v11 = (char *)&v41 - v10;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v41 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v41 - v14;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v41 - v16;
  __chkstk_darwin();
  BOOL v20 = (char *)&v41 - v19;
  if (*a1 != *a2
    || a1[1] != a2[1]
    || a1[2] != a2[2]
    || a1[3] != a2[3]
    || *((void *)a1 + 1) != *((void *)a2 + 1)
    || *((void *)a1 + 2) != *((void *)a2 + 2)
    || *((void *)a1 + 3) != *((void *)a2 + 3))
  {
    return 0;
  }
  uint64_t v21 = *((void *)a1 + 6);
  uint64_t v22 = *((void *)a2 + 6);
  if (v21)
  {
    if (!v22) {
      return 0;
    }
    unint64_t v23 = *((void *)a1 + 4);
    uint64_t v24 = *((void *)a1 + 5);
    uint64_t v48 = *((void *)a1 + 6);
    uint64_t v49 = (char *)v23;
    uint64_t v25 = *((void *)a2 + 5);
    unint64_t v46 = *((void *)a2 + 4);
    uint64_t v47 = v24;
    uint64_t v43 = v18;
    uint64_t v44 = v25;
    unint64_t v41 = ~v23 & 0xF000000000000007;
    unint64_t v42 = v46 & 0xF000000000000007;
    uint64_t v45 = v22;
    sub_100485030(v23, v24, v21);
    sub_100485030((unint64_t)v49, v47, v48);
    sub_100485030(v46, v44, v45);
    if (v41)
    {
      if (v42 == 0xF000000000000007) {
        goto LABEL_25;
      }
      sub_10044AE60(v46);
      sub_10044AE60((unint64_t)v49);
      static ResponseTextCode.__derived_enum_equals(_:_:)();
      LODWORD(v42) = v26;
      sub_1004831AC(v46);
      sub_1004831AC((unint64_t)v49);
      if (v42)
      {
LABEL_12:
        if (v47 == v44 && v48 == v45)
        {
          sub_1004831AC(v46);
LABEL_21:
          swift_bridgeObjectRelease();
          sub_1004831AC((unint64_t)v49);
          swift_bridgeObjectRelease();
          sub_10048316C((unint64_t)v49, v47, v48);
          uint64_t v18 = v43;
          goto LABEL_22;
        }
        LODWORD(v44) = sub_1005E3290();
        sub_1004831AC(v46);
        if (v44) {
          goto LABEL_21;
        }
LABEL_25:
        swift_bridgeObjectRelease();
        unint64_t v28 = v49;
        sub_1004831AC((unint64_t)v49);
        uint64_t v29 = v48;
        swift_bridgeObjectRelease();
        sub_10048316C((unint64_t)v28, v47, v29);
        return 0;
      }
    }
    else if (v42 == 0xF000000000000007)
    {
      goto LABEL_12;
    }
    sub_1004831AC(v46);
    goto LABEL_25;
  }
  if (v22) {
    return 0;
  }
LABEL_22:
  uint64_t v43 = v18;
  uint64_t v48 = type metadata accessor for CommandConnection.RecentErrors.Statistics(0);
  sub_1004DE170((uint64_t)&a1[*(int *)(v48 + 48)], (uint64_t)v20);
  sub_1004DE170((uint64_t)&a2[*(int *)(v48 + 48)], (uint64_t)v17);
  uint64_t v49 = &v9[*(int *)(v6 + 48)];
  sub_1004DE170((uint64_t)v20, (uint64_t)v9);
  sub_1004DE170((uint64_t)v17, (uint64_t)v49);
  unint64_t v46 = *(void *)(v52 + 48);
  uint64_t v47 = v52 + 48;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v46)(v9, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v17, &qword_100716650);
    sub_100007A48((uint64_t)v20, &qword_100716650);
    unint64_t v27 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v46)(v49, 1, v4) == 1)
    {
      sub_100007A48((uint64_t)v9, &qword_100716650);
      goto LABEL_30;
    }
LABEL_28:
    uint64_t v30 = (uint64_t)v9;
LABEL_36:
    sub_100007A48(v30, &qword_100717608);
    return 0;
  }
  sub_1004DE170((uint64_t)v9, (uint64_t)v15);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v46)(v49, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v17, &qword_100716650);
    sub_100007A48((uint64_t)v20, &qword_100716650);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v4);
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v49, v4);
  sub_1004E14C0();
  LODWORD(v44) = sub_1005E1BC0();
  unint64_t v31 = *(char **)(v52 + 8);
  uint64_t v45 = v52 + 8;
  uint64_t v49 = v31;
  ((void (*)(char *, uint64_t))v31)(v51, v4);
  sub_100007A48((uint64_t)v17, &qword_100716650);
  sub_100007A48((uint64_t)v20, &qword_100716650);
  ((void (*)(char *, uint64_t))v49)(v15, v4);
  sub_100007A48((uint64_t)v9, &qword_100716650);
  unint64_t v27 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v46;
  if ((v44 & 1) == 0) {
    return 0;
  }
LABEL_30:
  uint64_t v32 = v48;
  sub_1004DE170((uint64_t)&a1[*(int *)(v48 + 52)], (uint64_t)v13);
  sub_1004DE170((uint64_t)&a2[*(int *)(v32 + 52)], (uint64_t)v11);
  uint64_t v33 = v50;
  uint64_t v34 = v50 + *(int *)(v6 + 48);
  sub_1004DE170((uint64_t)v13, v50);
  sub_1004DE170((uint64_t)v11, v34);
  if (v27(v33, 1, v4) != 1)
  {
    uint64_t v35 = v43;
    sub_1004DE170(v33, v43);
    if (v27(v34, 1, v4) == 1)
    {
      sub_100007A48((uint64_t)v11, &qword_100716650);
      sub_100007A48((uint64_t)v13, &qword_100716650);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v35, v4);
      goto LABEL_35;
    }
    uint64_t v37 = v51;
    uint64_t v38 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v51, v34, v4);
    sub_1004E14C0();
    char v39 = sub_1005E1BC0();
    unint64_t v40 = *(void (**)(char *, uint64_t))(v38 + 8);
    v40(v37, v4);
    sub_100007A48((uint64_t)v11, &qword_100716650);
    sub_100007A48((uint64_t)v13, &qword_100716650);
    v40((char *)v35, v4);
    sub_100007A48(v33, &qword_100716650);
    return (v39 & 1) != 0;
  }
  sub_100007A48((uint64_t)v11, &qword_100716650);
  sub_100007A48((uint64_t)v13, &qword_100716650);
  if (v27(v34, 1, v4) != 1)
  {
LABEL_35:
    uint64_t v30 = v33;
    goto LABEL_36;
  }
  sub_100007A48(v33, &qword_100716650);
  return 1;
}

unint64_t sub_1004DEA3C()
{
  unint64_t result = qword_1007173E0;
  if (!qword_1007173E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007173E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.RecentErrors()
{
  return &type metadata for CommandConnection.RecentErrors;
}

uint64_t *_s12RecentErrorsV5ErrorVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (unint64_t *)((char *)a1 + v5);
    uint64_t v7 = (unint64_t *)((char *)a2 + v5);
    uint64_t v8 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v9 = *v7;
        if ((~*v7 & 0xF000000000000007) != 0) {
          sub_10044AE74(*v7);
        }
        goto LABEL_5;
      case 2u:
        unint64_t v15 = v7[1];
        *uint64_t v6 = *v7;
        v6[1] = v15;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        unint64_t v9 = *v7;
        if ((~*v7 & 0xF000000000000007) != 0) {
          sub_10044AE74(*v7);
        }
LABEL_5:
        unint64_t v11 = v7[1];
        unint64_t v10 = v7[2];
        *uint64_t v6 = v9;
        v6[1] = v11;
        uint64_t v6[2] = v10;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v14 = sub_1005E1650();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(v6, v7, v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  return v3;
}

uint64_t _s12RecentErrorsV5ErrorVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (unint64_t *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
    case 3:
      if ((~*v2 & 0xF000000000000007) != 0) {
        sub_1004831C0(*v2);
      }
      goto LABEL_8;
    case 2:
LABEL_8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
    case 5:
      uint64_t v4 = sub_1005E1650();
      uint64_t v5 = *(uint64_t (**)(unint64_t *, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(v2, v4);
      break;
    default:
      return result;
  }
  return result;
}

void *_s12RecentErrorsV5ErrorVwcp(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v8 = *v6;
      if ((~*v6 & 0xF000000000000007) != 0) {
        sub_10044AE74(*v6);
      }
      goto LABEL_4;
    case 2u:
      unint64_t v12 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v12;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 3u:
      unint64_t v8 = *v6;
      if ((~*v6 & 0xF000000000000007) != 0) {
        sub_10044AE74(*v6);
      }
LABEL_4:
      unint64_t v10 = v6[1];
      unint64_t v9 = v6[2];
      *uint64_t v5 = v8;
      v5[1] = v10;
      _OWORD v5[2] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 4u:
    case 5u:
      uint64_t v11 = sub_1005E1650();
      (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(v5, v6, v11);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

void *_s12RecentErrorsV5ErrorVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (void *)((char *)a2 + v4);
    sub_1004DE110((uint64_t)a1 + v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    uint64_t v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v8 = *v6;
        if ((~*v6 & 0xF000000000000007) != 0) {
          sub_10044AE74(*v6);
        }
        goto LABEL_5;
      case 2u:
        *uint64_t v5 = *v6;
        v5[1] = v6[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        unint64_t v8 = *v6;
        if ((~*v6 & 0xF000000000000007) != 0) {
          sub_10044AE74(*v6);
        }
LABEL_5:
        *uint64_t v5 = v8;
        v5[1] = v6[1];
        _OWORD v5[2] = v6[2];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v9 = sub_1005E1650();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(v5, v6, v9);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *_s12RecentErrorsV5ErrorVwtk(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
  {
    uint64_t v9 = sub_1005E1650();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *_s12RecentErrorsV5ErrorVwta(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    sub_1004DE110((uint64_t)a1 + v4, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    uint64_t v7 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
    {
      uint64_t v9 = sub_1005E1650();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s12RecentErrorsV5ErrorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004DF490);
}

uint64_t sub_1004DF490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t _s12RecentErrorsV5ErrorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004DF514);
}

uint64_t sub_1004DF514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1004DF588()
{
  uint64_t result = type metadata accessor for CommandConnection.RecentErrors.Error.Kind(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t *_s12RecentErrorsV5ErrorV4KindOwCP(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0) {
          sub_10044AE74(*a2);
        }
        goto LABEL_5;
      case 2u:
        unint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        unint64_t v7 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0) {
          sub_10044AE74(*a2);
        }
LABEL_5:
        unint64_t v9 = a2[1];
        unint64_t v8 = a2[2];
        *a1 = v7;
        a1[1] = v9;
        a1[2] = v8;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v12 = sub_1005E1650();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s12RecentErrorsV5ErrorV4KindOwxx(unint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
    case 3:
      if ((~*a1 & 0xF000000000000007) != 0) {
        sub_1004831C0(*a1);
      }
      goto LABEL_8;
    case 2:
LABEL_8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
    case 5:
      uint64_t v3 = sub_1005E1650();
      uint64_t v4 = *(uint64_t (**)(unint64_t *, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t *_s12RecentErrorsV5ErrorV4KindOwcp(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0) {
        sub_10044AE74(*a2);
      }
      goto LABEL_4;
    case 2u:
      unint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 3u:
      unint64_t v6 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0) {
        sub_10044AE74(*a2);
      }
LABEL_4:
      unint64_t v8 = a2[1];
      unint64_t v7 = a2[2];
      *a1 = v6;
      a1[1] = v8;
      a1[2] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 4u:
    case 5u:
      uint64_t v9 = sub_1005E1650();
      (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unint64_t *_s12RecentErrorsV5ErrorV4KindOwca(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004DE110((uint64_t)a1, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0) {
          sub_10044AE74(*a2);
        }
        goto LABEL_5;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        unint64_t v6 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0) {
          sub_10044AE74(*a2);
        }
LABEL_5:
        *a1 = v6;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v7 = sub_1005E1650();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *_s12RecentErrorsV5ErrorV4KindOwtk(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
  {
    uint64_t v7 = sub_1005E1650();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s12RecentErrorsV5ErrorV4KindOwta(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004DE110((uint64_t)a1, type metadata accessor for CommandConnection.RecentErrors.Error.Kind);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
    {
      uint64_t v7 = sub_1005E1650();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004DFF50()
{
  uint64_t result = sub_1005E1650();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *_s12RecentErrorsV10StatisticsVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v7 = (unint64_t *)(a2 + 4);
    uint64_t v8 = a2[6];
    if (v8)
    {
      unint64_t v9 = *v7;
      if ((~*v7 & 0xF000000000000007) != 0) {
        sub_10044AE74(v9);
      }
      uint64_t v10 = a2[5];
      v4[4] = v9;
      _OWORD v4[5] = v10;
      v4[6] = v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v7;
      *(void *)(a1 + 48) = a2[6];
    }
    uint64_t v12 = *(int *)(a3 + 48);
    unint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005E1650();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = sub_10000566C(&qword_100716650);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v19 = *(int *)(a3 + 52);
    BOOL v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v17(v21, 1, v15))
    {
      uint64_t v22 = sub_10000566C(&qword_100716650);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t _s12RecentErrorsV10StatisticsVwxx(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 48))
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if ((~v4 & 0xF000000000000007) != 0) {
      sub_1004831C0(v4);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 48);
  uint64_t v6 = sub_1005E1650();
  uint64_t v11 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v7(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 52);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v6);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v8, v6);
  }
  return result;
}

uint64_t _s12RecentErrorsV10StatisticsVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = (unint64_t *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  if (v7)
  {
    unint64_t v8 = *v6;
    if ((~*v6 & 0xF000000000000007) != 0) {
      sub_10044AE74(v8);
    }
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  uint64_t v10 = *(int *)(a3 + 48);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_1005E1650();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_10000566C(&qword_100716650);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = *(int *)(a3 + 52);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if (v15(v19, 1, v13))
  {
    uint64_t v20 = sub_10000566C(&qword_100716650);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v18, v19, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  return a1;
}

uint64_t _s12RecentErrorsV10StatisticsVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = (unint64_t *)(a1 + 32);
  uint64_t v7 = (unint64_t *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v8)
    {
      unint64_t v9 = *v7;
      unint64_t v10 = *v7 & 0xF000000000000007;
      if ((~*v6 & 0xF000000000000007) != 0)
      {
        if (v10 == 0xF000000000000007)
        {
          sub_1002A4DA0(a1 + 32);
          *uint64_t v6 = *v7;
        }
        else
        {
          sub_10044AE74(*v7);
          unint64_t v14 = *v6;
          *uint64_t v6 = v9;
          sub_1004831C0(v14);
        }
      }
      else
      {
        if (v10 != 0xF000000000000007) {
          sub_10044AE74(*v7);
        }
        *uint64_t v6 = v9;
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004AC84C(a1 + 32);
      unint64_t v12 = v7[2];
      *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
      uint64_t v6[2] = v12;
    }
  }
  else if (v8)
  {
    unint64_t v11 = *v7;
    if ((~*v7 & 0xF000000000000007) != 0) {
      sub_10044AE74(*v7);
    }
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)v7;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)uint64_t v6 = v13;
  }
  uint64_t v15 = *(int *)(a3 + 48);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = sub_1005E1650();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_22:
    uint64_t v23 = sub_10000566C(&qword_100716650);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_23:
  uint64_t v24 = *(int *)(a3 + 52);
  uint64_t v25 = (void *)(a1 + v24);
  int v26 = (void *)(a2 + v24);
  int v27 = v20((void *)(a1 + v24), 1, v18);
  int v28 = v20(v26, 1, v18);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v25, v26, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
    goto LABEL_28;
  }
  if (v28)
  {
LABEL_28:
    uint64_t v29 = sub_10000566C(&qword_100716650);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v25, v26, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
  return a1;
}

uint64_t _s12RecentErrorsV10StatisticsVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1005E1650();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000566C(&qword_100716650);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 52);
  unint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = sub_10000566C(&qword_100716650);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t _s12RecentErrorsV10StatisticsVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a1 + 32;
  uint64_t v7 = (uint64_t *)(a2 + 32);
  if (!*(void *)(a1 + 48)) {
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (!v8)
  {
    sub_1004AC84C(a1 + 32);
LABEL_8:
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
    *(void *)(v6 + 16) = v7[2];
    goto LABEL_11;
  }
  unint64_t v9 = *(void *)v6;
  uint64_t v10 = *v7;
  if ((~*(void *)v6 & 0xF000000000000007) != 0)
  {
    if ((~v10 & 0xF000000000000007) != 0)
    {
      *(void *)uint64_t v6 = v10;
      sub_1004831C0(v9);
      goto LABEL_10;
    }
    sub_1002A4DA0(v6);
  }
  *(void *)uint64_t v6 = v10;
LABEL_10:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v11 = *(int *)(a3 + 48);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_1005E1650();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_16:
    uint64_t v19 = sub_10000566C(&qword_100716650);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_17:
  uint64_t v20 = *(int *)(a3 + 52);
  int v21 = (void *)(a1 + v20);
  int v22 = (void *)(a2 + v20);
  int v23 = v16((void *)(a1 + v20), 1, v14);
  int v24 = v16(v22, 1, v14);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v21, v22, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v21, v14);
    goto LABEL_22;
  }
  if (v24)
  {
LABEL_22:
    uint64_t v25 = sub_10000566C(&qword_100716650);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v21, v22, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
  return a1;
}

uint64_t _s12RecentErrorsV10StatisticsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004E0F14);
}

uint64_t sub_1004E0F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10000566C(&qword_100716650);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 48);
    return v10(v12, a2, v11);
  }
}

uint64_t _s12RecentErrorsV10StatisticsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004E0FE8);
}

uint64_t sub_1004E0FE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 48) = a2;
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100716650);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1004E1094()
{
  sub_1004E114C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1004E114C()
{
  if (!qword_100717588)
  {
    sub_1005E1650();
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100717588);
    }
  }
}

unsigned char *_s15BackOffBehaviorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E1270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.BackOffBehavior()
{
  return &type metadata for CommandConnection.BackOffBehavior;
}

void *sub_1004E12A8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1004E12FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

Swift::Int sub_1004E1364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = a3 + 56;
    uint64_t v9 = a2 + 32;
    while (1)
    {
      Swift::UInt v14 = *(unsigned __int8 *)(v9 + v7);
      sub_1005E33F0();
      sub_1005E3410(v14);
      Swift::Int result = sub_1005E3470();
      uint64_t v16 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v10 = v17 >> 6;
      uint64_t v11 = 1 << v17;
      if (((1 << v17) & *(void *)(v8 + 8 * (v17 >> 6))) != 0)
      {
        uint64_t v18 = *(void *)(a3 + 48);
        if (*(unsigned __int8 *)(v18 + v17) == v14)
        {
LABEL_4:
          uint64_t v12 = 8 * v10;
          uint64_t v13 = *(void *)(a1 + 8 * v10);
          *(void *)(a1 + v12) = v11 | v13;
          if ((v11 & v13) == 0)
          {
            if (__OFADD__(v6++, 1))
            {
              __break(1u);
              return result;
            }
            if (v6 == *(void *)(a3 + 16)) {
              return 1;
            }
          }
        }
        else
        {
          for (unint64_t i = v17 + 1; ; unint64_t i = v20 + 1)
          {
            unint64_t v20 = i & ~v16;
            if (((*(void *)(v8 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v18 + v20) == v14)
            {
              unint64_t v10 = v20 >> 6;
              uint64_t v11 = 1 << v20;
              goto LABEL_4;
            }
          }
        }
      }
      if (++v7 == v3) {
        return 0;
      }
    }
  }
  return 0;
}

unint64_t sub_1004E14C0()
{
  unint64_t result = qword_100717610;
  if (!qword_100717610)
  {
    sub_1005E1650();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717610);
  }
  return result;
}

uint64_t destroy for RegisterForPush()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RegisterForPush(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RegisterForPush(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RegisterForPush(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegisterForPush(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegisterForPush(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RegisterForPush()
{
  return &type metadata for RegisterForPush;
}

uint64_t sub_1004E1878(uint64_t a1)
{
  type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100086AE0(a1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() != 21) {
    return sub_1001D6E50((uint64_t)v4);
  }
  uint64_t v6 = *(void *)v4;
  uint64_t v5 = *((void *)v4 + 1);
  uint64_t v7 = *((void *)v4 + 2);
  if (v4[24])
  {
    *(void *)(v1 + 80) = v6;
    *(unsigned char *)(v1 + 88) = 0;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v1 + 96) = v5;
    *(void *)(v1 + 104) = v7;
  }
  else
  {
    uint64_t v9 = *(void **)(v1 + 72);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1004D0F54(0, v9[2] + 1, 1, v9);
    }
    unint64_t v10 = v9[2];
    unint64_t v11 = v9[3];
    unint64_t v12 = v10 + 1;
    if (v10 >= v11 >> 1)
    {
      unint64_t v18 = v10 + 1;
      Swift::UInt v14 = v9;
      unint64_t v15 = v10;
      uint64_t v16 = sub_1004D0F54((void *)(v11 > 1), v10 + 1, 1, v14);
      unint64_t v10 = v15;
      unint64_t v12 = v18;
      uint64_t v9 = v16;
    }
    void v9[2] = v12;
    uint64_t v13 = &v9[2 * v10];
    v13[4] = v6;
    *((_DWORD *)v13 + 10) = v5;
    uint64_t result = sub_100295400();
    *(void *)(v1 + 72) = v9;
  }
  return result;
}

void sub_1004E19F0(char a1@<W3>, uint64_t a2@<X8>)
{
  if (a1 || (*(unsigned char *)(v2 + 88) & 1) != 0) {
    goto LABEL_7;
  }
  uint64_t v4 = *(void *)(v2 + 80);
  if (v4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v4 <= 0x7FFFFFFF)
  {
    sub_10001FDF0(v2 + 96, (uint64_t)v12, &qword_100715918);
    sub_10001FDF0((uint64_t)v12, (uint64_t)v13, &qword_100715918);
    if (v13[1])
    {
      LODWORD(v8) = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v4);
      *((void *)&v8 + 1) = v5;
      uint64_t v9 = v6;
      uint64_t v10 = v7;
      sub_1004E1C24((uint64_t)&v8);
      sub_10044AF04((uint64_t)&v8, (uint64_t)v11);
      UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v11);
      sub_100057B18((uint64_t)v12);
      swift_bridgeObjectRetain();
LABEL_8:
      sub_10001FDF0((uint64_t)v11, (uint64_t)v14, &qword_100715828);
      sub_10001FDF0((uint64_t)v14, a2, &qword_100715828);
      return;
    }
LABEL_7:
    long long v8 = xmmword_100625780;
    LOBYTE(v9) = 2;
    sub_100466184((uint64_t)&v8);
    sub_10044AF04((uint64_t)&v8, (uint64_t)v11);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v11);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1004E1B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(unsigned int *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = 3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1004E1BB0@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  long long v4 = v2[5];
  long long v13 = v2[4];
  long long v14 = v4;
  long long v15 = v2[6];
  long long v5 = v2[1];
  long long v9 = *v2;
  long long v10 = v5;
  long long v6 = v2[3];
  long long v11 = v2[2];
  long long v12 = v6;
  sub_1004E19F0(a1, (uint64_t)v8);
  return sub_10001FDF0((uint64_t)v8, a2, &qword_100715828);
}

uint64_t sub_1004E1C24(uint64_t result)
{
  *(unsigned char *)(result + 176) = 5;
  return result;
}

ValueMetadata *type metadata accessor for RunningCommands()
{
  return &type metadata for RunningCommands;
}

uint64_t sub_1004E1C40(uint64_t a1)
{
  Swift::Int v3 = sub_1004D4724();
  Swift::Int v4 = sub_1004D4D9C();
  uint64_t v5 = sub_100465C70();
  __uint64_t v6 = static MonotonicTime.now()();
  uint64_t v7 = *(void **)v1;
  char v8 = *(unsigned char *)(v1 + 16);
  sub_1004E2874(v3, v5, *(void *)v1);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_1004D118C(0, v7[2] + 1, 1, v7);
    }
    unint64_t v11 = v7[2];
    unint64_t v10 = v7[3];
    if (v11 >= v10 >> 1)
    {
      uint64_t v7 = sub_1004D118C((void *)(v10 > 1), v11 + 1, 1, v7);
      uint64_t v13 = v5;
      __uint64_t v12 = v6;
    }
    else
    {
      __uint64_t v12 = v6;
      uint64_t v13 = v5;
    }
    uint64_t v7[2] = v11 + 1;
    long long v14 = &v7[5 * v11];
    void v14[4] = a1;
    v14[5] = v4;
    v14[6] = v13;
    *((unsigned char *)v14 + 56) = 0;
    v14[8] = v12;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v7;
    if ((v8 & 1) == 0)
    {
      *(void *)(v1 + 8) = 0;
      *(unsigned char *)(v1 + 16) = 1;
    }
  }
  return result;
}

uint64_t sub_1004E1DC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = a1 + 32;
    do
    {
      Swift::Int v4 = (uint64_t *)(v3 + 40 * v2);
      uint64_t v5 = v4[1];
      if (*(void *)(v5 + 16))
      {
        uint64_t v6 = *v4;
        sub_1005E33F0();
        sub_1005E3410(7uLL);
        Swift::Int v7 = sub_1005E3470();
        uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v9 = v7 & ~v8;
        uint64_t v10 = v5 + 56;
        if ((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
        {
          uint64_t v11 = *(void *)(v5 + 48);
          if (*(unsigned char *)(v11 + v9) == 7) {
            return v6;
          }
          uint64_t v12 = ~v8;
          unint64_t v13 = (v9 + 1) & v12;
          if ((*(void *)(v10 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
          {
            if (*(unsigned char *)(v11 + v13) == 7) {
              return v6;
            }
            while (1)
            {
              unint64_t v13 = (v13 + 1) & v12;
              if (((*(void *)(v10 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
                break;
              }
              if (*(unsigned char *)(v11 + v13) == 7) {
                return v6;
              }
            }
          }
        }
      }
      ++v2;
    }
    while (v2 != v1);
  }
  return 0;
}

uint64_t sub_1004E1EF4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 16);
  if (!v4) {
    return 2;
  }
  int v6 = a1;
  unint64_t v7 = HIDWORD(a1);
  unint64_t v8 = 0;
  if (*(unsigned __int8 *)(v3 + 32) == a1 && *(_DWORD *)(v3 + 36) == HIDWORD(a1))
  {
LABEL_13:
    sub_1004CF1F8(v8, (uint64_t)v18);
    if (v19)
    {
      if (v19 == 1)
      {
        sub_10002A77C((uint64_t)v18);
        return 0;
      }
      else
      {
        sub_10002A77C((uint64_t)v18);
        return 1;
      }
    }
    else
    {
      char v17 = sub_1004E22CC(*v2);
      sub_10002A77C((uint64_t)v18);
      if ((v17 & 1) == 0)
      {
        v2[1] = a2;
        *((unsigned char *)v2 + 16) = 0;
      }
      return v18[0];
    }
  }
  else
  {
    uint64_t v10 = v4 - 1;
    uint64_t v11 = (int *)(v3 + 76);
    uint64_t result = 2;
    while (v10 != v8)
    {
      int v13 = *((unsigned __int8 *)v11 - 4);
      int v15 = *v11;
      v11 += 10;
      int v14 = v15;
      ++v8;
      if (v13 == v6 && v14 == v7) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

uint64_t sub_1004E1FF0(uint64_t a1)
{
  __uint64_t v4 = static MonotonicTime.now()();
  uint64_t v5 = (void *)*v1;
  uint64_t result = sub_1004E2874((uint64_t)&_swiftEmptySetSingleton, 0, *v1);
  if (!v2)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1004D118C(0, v5[2] + 1, 1, v5);
      uint64_t v5 = (void *)result;
    }
    unint64_t v8 = v5[2];
    unint64_t v7 = v5[3];
    if (v8 >= v7 >> 1)
    {
      uint64_t result = (uint64_t)sub_1004D118C((void *)(v7 > 1), v8 + 1, 1, v5);
      uint64_t v5 = (void *)result;
    }
    _OWORD v5[2] = v8 + 1;
    unint64_t v9 = &v5[5 * v8];
    v9[4] = a1;
    v9[5] = &_swiftEmptySetSingleton;
    v9[6] = 0;
    *((unsigned char *)v9 + 56) = 2;
    unsigned char v9[8] = v4;
    *uint64_t v1 = (uint64_t)v5;
  }
  return result;
}

uint64_t sub_1004E20E8(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for ClientCommand(0);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  swift_storeEnumTagMultiPayload();
  Swift::Int v11 = sub_1004D4724();
  sub_1000F898C((uint64_t)v10);
  swift_storeEnumTagMultiPayload();
  Swift::Int v12 = sub_1004D4D9C();
  sub_1000F898C((uint64_t)v8);
  __uint64_t v13 = static MonotonicTime.now()();
  int v14 = (void *)*v3;
  sub_1004E2874(v11, 0, *v3);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v21 = HIDWORD(a1);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v14 = sub_1004D118C(0, v14[2] + 1, 1, v14);
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1) {
      int v14 = sub_1004D118C((void *)(v16 > 1), v17 + 1, 1, v14);
    }
    v14[2] = v17 + 1;
    unint64_t v18 = &v14[5 * v17];
    int v19 = v21;
    *((_DWORD *)v18 + 8) = a1;
    *((_DWORD *)v18 + 9) = v19;
    _OWORD v18[5] = v12;
    v18[6] = 0;
    *((unsigned char *)v18 + 56) = 1;
    v18[8] = v13;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = (uint64_t)v14;
  }
  return result;
}

uint64_t sub_1004E22CC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  if (!*(unsigned char *)(result + 56)) {
    return 1;
  }
  if (v1 == 1) {
    return 0;
  }
  uint64_t v2 = (unsigned __int8 *)(result + 96);
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v4 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    int v5 = *v2;
    v2 += 40;
    uint64_t result = v5 == 0;
    if (v5) {
      BOOL v6 = v4 == v1;
    }
    else {
      BOOL v6 = 1;
    }
    if (v6) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004E2328(uint64_t a1, uint64_t a2)
{
  int64_t v4 = 0;
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  while (1)
  {
    while (1)
    {
      if (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v4 << 6);
      }
      else
      {
        if (__OFADD__(v4++, 1))
        {
          __break(1u);
          goto LABEL_78;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14)
        {
          int64_t v15 = v4 + 1;
          if (v4 + 1 >= v9) {
            return 1;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v4 + 2;
            if (v4 + 2 >= v9) {
              return 1;
            }
            unint64_t v14 = *(void *)(v5 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v4 + 3;
              if (v4 + 3 >= v9) {
                return 1;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v15);
              if (!v14)
              {
                int64_t v15 = v4 + 4;
                if (v4 + 4 >= v9) {
                  return 1;
                }
                unint64_t v14 = *(void *)(v5 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v4 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v4 >= v9) {
                      return 1;
                    }
                    unint64_t v14 = *(void *)(v5 + 8 * v4);
                    ++v15;
                    if (v14) {
                      goto LABEL_19;
                    }
                  }
LABEL_78:
                  __break(1u);
                  JUMPOUT(0x1004E285CLL);
                }
              }
            }
          }
          int64_t v4 = v15;
        }
LABEL_19:
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
      }
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v12))
      {
        case 1:
          if (!*(void *)(a2 + 16)) {
            continue;
          }
          sub_1005E33F0();
          sub_1005E3410(2uLL);
          Swift::Int v21 = sub_1005E3470();
          uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v23 = v21 & ~v22;
          if (((*(void *)(v10 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            continue;
          }
          uint64_t v24 = *(void *)(a2 + 48);
          if (*(unsigned char *)(v24 + v23) == 2) {
            return 0;
          }
          uint64_t v25 = ~v22;
          while (1)
          {
            unint64_t v23 = (v23 + 1) & v25;
            if (((*(void *)(v10 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
              break;
            }
            if (*(unsigned char *)(v24 + v23) == 2) {
              return 0;
            }
          }
          continue;
        case 2:
          if (!*(void *)(a2 + 16)) {
            continue;
          }
          sub_1005E33F0();
          sub_1005E3410(3uLL);
          Swift::Int v26 = sub_1005E3470();
          uint64_t v27 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v28 = v26 & ~v27;
          if (((*(void *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
            continue;
          }
          uint64_t v29 = *(void *)(a2 + 48);
          if (*(unsigned char *)(v29 + v28) == 3) {
            return 0;
          }
          uint64_t v30 = ~v27;
          while (1)
          {
            unint64_t v28 = (v28 + 1) & v30;
            if (((*(void *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
              break;
            }
            if (*(unsigned char *)(v29 + v28) == 3) {
              return 0;
            }
          }
          continue;
        case 3:
          if (!*(void *)(a2 + 16)) {
            continue;
          }
          sub_1005E33F0();
          sub_1005E3410(4uLL);
          Swift::Int v31 = sub_1005E3470();
          uint64_t v32 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v33 = v31 & ~v32;
          if (((*(void *)(v10 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
            continue;
          }
          uint64_t v34 = *(void *)(a2 + 48);
          if (*(unsigned char *)(v34 + v33) == 4) {
            return 0;
          }
          uint64_t v35 = ~v32;
          while (1)
          {
            unint64_t v33 = (v33 + 1) & v35;
            if (((*(void *)(v10 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
              break;
            }
            if (*(unsigned char *)(v34 + v33) == 4) {
              return 0;
            }
          }
          continue;
        case 4:
          if (!*(void *)(a2 + 16)) {
            continue;
          }
          sub_1005E33F0();
          sub_1005E3410(5uLL);
          Swift::Int v36 = sub_1005E3470();
          uint64_t v37 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v38 = v36 & ~v37;
          if (((*(void *)(v10 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
            continue;
          }
          uint64_t v39 = *(void *)(a2 + 48);
          if (*(unsigned char *)(v39 + v38) == 5) {
            return 0;
          }
          uint64_t v40 = ~v37;
          while (1)
          {
            unint64_t v38 = (v38 + 1) & v40;
            if (((*(void *)(v10 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
              break;
            }
            if (*(unsigned char *)(v39 + v38) == 5) {
              return 0;
            }
          }
          continue;
        case 5:
          if (!*(void *)(a2 + 16)) {
            continue;
          }
          sub_1005E33F0();
          sub_1005E3410(6uLL);
          Swift::Int v41 = sub_1005E3470();
          uint64_t v42 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v43 = v41 & ~v42;
          if (((*(void *)(v10 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
            continue;
          }
          uint64_t v44 = *(void *)(a2 + 48);
          if (*(unsigned char *)(v44 + v43) == 6) {
            return 0;
          }
          uint64_t v45 = ~v42;
          while (1)
          {
            unint64_t v43 = (v43 + 1) & v45;
            if (((*(void *)(v10 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
              break;
            }
            if (*(unsigned char *)(v44 + v43) == 6) {
              return 0;
            }
          }
          continue;
        default:
          if (!*(void *)(a2 + 16)) {
            continue;
          }
          sub_1005E33F0();
          sub_1005E3410(0);
          Swift::Int v16 = sub_1005E3470();
          uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v18 = v16 & ~v17;
          if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            goto LABEL_63;
          }
          uint64_t v19 = *(void *)(a2 + 48);
          if (!*(unsigned char *)(v19 + v18)) {
            return 0;
          }
          uint64_t v20 = ~v17;
          break;
      }
      while (1)
      {
        unint64_t v18 = (v18 + 1) & v20;
        if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          break;
        }
        if (!*(unsigned char *)(v19 + v18)) {
          return 0;
        }
      }
LABEL_63:
      if (*(void *)(a2 + 16))
      {
        sub_1005E33F0();
        sub_1005E3410(1uLL);
        Swift::Int v46 = sub_1005E3470();
        uint64_t v47 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v48 = v46 & ~v47;
        if ((*(void *)(v10 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48)) {
          break;
        }
      }
    }
    uint64_t v49 = *(void *)(a2 + 48);
    if (*(unsigned char *)(v49 + v48) == 1) {
      return 0;
    }
    uint64_t v50 = ~v47;
    while (1)
    {
      unint64_t v48 = (v48 + 1) & v50;
      if (((*(void *)(v10 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0) {
        break;
      }
      if (*(unsigned char *)(v49 + v48) == 1) {
        return 0;
      }
    }
  }
}

uint64_t sub_1004E2874(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(a3 + 16);
  if (v3 > 9)
  {
    sub_1004E2A78();
LABEL_24:
    swift_allocError();
    return swift_willThrow();
  }
  else if (v3)
  {
    uint64_t v4 = result;
    uint64_t v5 = 0;
    uint64_t v6 = a3 + 32;
    uint64_t v7 = 48;
    uint64_t v8 = *(void *)(a3 + 16);
    do
    {
      uint64_t v9 = *(void *)(a3 + v7);
      BOOL v10 = __OFADD__(v5, v9);
      v5 += v9;
      if (v10)
      {
        __break(1u);
        goto LABEL_28;
      }
      v7 += 40;
      --v8;
    }
    while (v8);
    if (v5)
    {
      BOOL v10 = __OFADD__(v5, a2);
      uint64_t v11 = v5 + a2;
      if (v10) {
        goto LABEL_29;
      }
      if (v11 > 16)
      {
        sub_1004E2B20();
        goto LABEL_24;
      }
    }
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        break;
      }
      uint64_t v14 = *(void *)(v6 + 40 * v12 + 8);
      if (*(void *)(v14 + 16))
      {
        sub_1005E33F0();
        sub_1005E3410(7uLL);
        uint64_t result = sub_1005E3470();
        uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
        unint64_t v16 = result & ~v15;
        if ((*(void *)(v14 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
        {
          uint64_t v17 = *(void *)(v14 + 48);
          if (*(unsigned char *)(v17 + v16) == 7) {
            goto LABEL_23;
          }
          uint64_t v18 = ~v15;
          while (1)
          {
            unint64_t v16 = (v16 + 1) & v18;
            if (((*(void *)(v14 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
              break;
            }
            if (*(unsigned char *)(v17 + v16) == 7) {
              goto LABEL_23;
            }
          }
        }
      }
      if (*(void *)(v4 + 16))
      {
        swift_bridgeObjectRetain();
        char v19 = sub_1004E2328(v4, v14);
        uint64_t result = swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
LABEL_23:
          swift_bridgeObjectRelease();
          sub_1004E2ACC();
          goto LABEL_24;
        }
      }
      uint64_t v12 = v13;
      if (v13 == v3) {
        return swift_bridgeObjectRelease();
      }
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  return result;
}

unint64_t sub_1004E2A78()
{
  unint64_t result = qword_100717620;
  if (!qword_100717620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717620);
  }
  return result;
}

unint64_t sub_1004E2ACC()
{
  unint64_t result = qword_100717628;
  if (!qword_100717628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717628);
  }
  return result;
}

unint64_t sub_1004E2B20()
{
  unint64_t result = qword_100717630;
  if (!qword_100717630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717630);
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningCommands.TooManyBodyDataRequestsRunning()
{
  return &type metadata for RunningCommands.TooManyBodyDataRequestsRunning;
}

ValueMetadata *type metadata accessor for RunningCommands.NeedToWaitOnRequirements()
{
  return &type metadata for RunningCommands.NeedToWaitOnRequirements;
}

ValueMetadata *type metadata accessor for RunningCommands.TooManyCommandsRunning()
{
  return &type metadata for RunningCommands.TooManyCommandsRunning;
}

uint64_t initializeWithCopy for RunningCommands.Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RunningCommands.Command(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for RunningCommands.Command(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RunningCommands.Command()
{
  return &type metadata for RunningCommands.Command;
}

unsigned char *storeEnumTagSinglePayload for RunningCommands.Command.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E2D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningCommands.Command.Kind()
{
  return &type metadata for RunningCommands.Command.Kind;
}

unint64_t sub_1004E2DCC()
{
  unint64_t result = qword_100717638;
  if (!qword_100717638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717638);
  }
  return result;
}

uint64_t sub_1004E2E20(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for UntaggedResponse(0);
  uint64_t result = __chkstk_darwin(v3);
  unsigned int v6 = (unint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 60 == 3)
  {
    uint64_t v7 = swift_projectBox();
    sub_100086AE0(v7, (uint64_t)v6);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        unint64_t v8 = *v6;
        if ((~*v6 & 0xF000000000000007) != 0)
        {
          switch((v8 >> 59) & 0x1E | (v8 >> 2) & 1)
          {
            case 2uLL:
              uint64_t v10 = swift_bridgeObjectRetain();
              uint64_t v11 = sub_1004AD1FC(v10);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1004831AC(v8);
              uint64_t result = swift_bridgeObjectRelease();
              *(void *)(v1 + 40) = v11;
              break;
            case 3uLL:
              int v12 = *(_DWORD *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
              sub_1004831AC(v8);
              uint64_t result = swift_bridgeObjectRelease();
              *(_DWORD *)(v1 + 48) = v12;
              *(unsigned char *)(v1 + 52) = 0;
              break;
            case 4uLL:
              int v13 = *(_DWORD *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
              sub_1004831AC(v8);
              uint64_t result = swift_bridgeObjectRelease();
              *(_DWORD *)(v1 + 56) = v13;
              *(unsigned char *)(v1 + 60) = 0;
              break;
            case 5uLL:
              int v14 = *(_DWORD *)((v8 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
              sub_1004831AC(v8);
              uint64_t result = swift_bridgeObjectRelease();
              *(_DWORD *)(v1 + 32) = v14;
              *(unsigned char *)(v1 + 36) = 0;
              break;
            default:
              sub_1004831AC(v8);
              goto LABEL_4;
          }
        }
        else
        {
LABEL_4:
          uint64_t result = swift_bridgeObjectRelease();
        }
        break;
      case 13:
        unint64_t v9 = *v6;
        uint64_t result = swift_bridgeObjectRelease();
        *(void *)(v1 + 16) = v9;
        break;
      case 14:
        *(void *)(v1 + 24) = *(unsigned int *)v6;
        break;
      case 15:
        return result;
      default:
        uint64_t result = sub_1001D6E50((uint64_t)v6);
        break;
    }
  }
  return result;
}

uint64_t SelectedMailbox.init(name:isReadOnly:flags:messageCount:firstUnseenMessage:permanentFlags:nextUID:uidValidity:modificationSequenceValue:)@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, char a11, uint64_t a12, char a13, char a14)
{
  *(void *)a9 = result;
  *(_DWORD *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a4;
  *(void *)(a9 + 24) = a5;
  *(_DWORD *)(a9 + 32) = a6;
  *(unsigned char *)(a9 + 36) = BYTE4(a6) & 1;
  *(void *)(a9 + 40) = a7;
  *(_DWORD *)(a9 + 48) = a8;
  *(unsigned char *)(a9 + 52) = BYTE4(a8) & 1;
  *(_DWORD *)(a9 + 56) = a10;
  *(unsigned char *)(a9 + 60) = a11 & 1;
  *(void *)(a9 + 64) = a12;
  *(unsigned char *)(a9 + 72) = a13;
  *(unsigned char *)(a9 + 73) = a14 & 1;
  *(unsigned char *)(a9 + 74) = a3;
  return result;
}

unint64_t SelectedMailbox.firstUnseenMessage.getter()
{
  return *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
}

unint64_t SelectedMailbox.nextUID.getter()
{
  return *(unsigned int *)(v0 + 48) | ((unint64_t)*(unsigned __int8 *)(v0 + 52) << 32);
}

uint64_t SelectedMailbox.nextUID.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 48) = result;
  *(unsigned char *)(v1 + 52) = BYTE4(result) & 1;
  return result;
}

unint64_t SelectedMailbox.uidValidity.getter()
{
  return *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int8 *)(v0 + 60) << 32);
}

uint64_t SelectedMailbox.uidValidity.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 56) = result;
  *(unsigned char *)(v1 + 60) = BYTE4(result) & 1;
  return result;
}

uint64_t SelectedMailbox.modificationSequenceValue.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t SelectedMailbox.modificationSequenceValue.setter(uint64_t result, __int16 a2)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 72) = a2;
  *(unsigned char *)(v2 + 73) = HIBYTE(a2) & 1;
  return result;
}

uint64_t SelectedMailbox.isReadOnly.getter()
{
  return *(unsigned __int8 *)(v0 + 74);
}

uint64_t SelectedMailbox.isReadOnly.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 74) = result;
  return result;
}

Swift::UInt32 (__swiftcall *SelectedMailbox.isReadOnly.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t sub_1004E31C4@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(_DWORD *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1004E31D8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  uint64_t v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 11) = *(_OWORD *)((char *)a1 + 59);
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a2[3];
  void v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 11) = *(_OWORD *)((char *)a2 + 59);
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9) & 1;
}

BOOL static SelectedMailbox.ModificationSequence.__derived_enum_equals(_:_:)(BOOL result, char a2, uint64_t a3, char a4)
{
  if (a2) {
    return (a4 & 1) != 0;
  }
  if (a4) {
    return 0;
  }
  if (((a3 | result) & 0x8000000000000000) == 0) {
    return a3 == result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004E3268(uint64_t *a1, uint64_t a2)
{
  int v3 = *((unsigned __int8 *)a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
  {
    uint64_t v6 = *a1;
    if ((*(void *)a2 | v6) < 0) {
      __break(1u);
    }
    else {
      return *(void *)a2 == v6;
    }
  }
  return result;
}

uint64_t _s15IMAP2Connection15SelectedMailboxV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))) {
    goto LABEL_34;
  }
  if (!sub_1000255D4(*(void *)a1, *(void *)a2)) {
    goto LABEL_34;
  }
  uint64_t result = sub_100013AB4(*(void *)(a1 + 16), *(void *)(a2 + 16));
  if ((result & 1) == 0 || *(void *)(a1 + 24) != *(void *)(a2 + 24)) {
    goto LABEL_34;
  }
  char v5 = *(unsigned char *)(a2 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    if (!*(unsigned char *)(a2 + 36)) {
      return v5 & 1;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32)) {
      char v5 = 1;
    }
    if (v5) {
      goto LABEL_34;
    }
  }
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (!v6) {
      goto LABEL_34;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    char v8 = sub_100485E18(v7, v6);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_34;
    }
  }
  else if (v6)
  {
    goto LABEL_34;
  }
  char v5 = *(unsigned char *)(a2 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    if (!*(unsigned char *)(a2 + 52)) {
      return v5 & 1;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 48) != *(_DWORD *)(a1 + 48)) {
      char v5 = 1;
    }
    if (v5) {
      goto LABEL_34;
    }
  }
  char v5 = *(unsigned char *)(a2 + 60);
  if (*(unsigned char *)(a1 + 60))
  {
    if (*(unsigned char *)(a2 + 60)) {
      goto LABEL_28;
    }
    return v5 & 1;
  }
  if (*(_DWORD *)(a1 + 56) != *(_DWORD *)(a2 + 56)) {
    char v5 = 1;
  }
  if (v5) {
    goto LABEL_34;
  }
LABEL_28:
  char v9 = *(unsigned char *)(a2 + 73);
  if (*(unsigned char *)(a1 + 73)) {
    goto LABEL_36;
  }
  if (*(unsigned char *)(a2 + 73))
  {
LABEL_34:
    char v5 = 0;
    return v5 & 1;
  }
  char v9 = *(unsigned char *)(a2 + 72);
  if (*(unsigned char *)(a1 + 72))
  {
LABEL_36:
    if ((v9 & 1) == 0) {
      goto LABEL_34;
    }
    goto LABEL_37;
  }
  if (*(unsigned char *)(a2 + 72)) {
    goto LABEL_34;
  }
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a2 + 64);
  if (((v11 | v10) & 0x8000000000000000) == 0)
  {
    if (v11 != v10) {
      goto LABEL_34;
    }
LABEL_37:
    char v5 = ((*(unsigned char *)(a1 + 74) & 1) == 0) ^ *(unsigned char *)(a2 + 74);
    return v5 & 1;
  }
  __break(1u);
  return result;
}

unint64_t sub_1004E3440()
{
  unint64_t result = qword_100717640;
  if (!qword_100717640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717640);
  }
  return result;
}

uint64_t destroy for SelectedMailbox()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SelectedMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SelectedMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v5;
  int v6 = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  return a1;
}

uint64_t assignWithTake for SelectedMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectedMailbox(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 75)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelectedMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 74) = 0;
    *(_WORD *)(result + 72) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 75) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 75) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectedMailbox()
{
  return &type metadata for SelectedMailbox;
}

ValueMetadata *type metadata accessor for SelectedMailbox.ModificationSequence()
{
  return &type metadata for SelectedMailbox.ModificationSequence;
}

_WORD *initializeBufferWithCopyOfBuffer for StartTLS(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StartTLS(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StartTLS(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E393CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartTLS()
{
  return &type metadata for StartTLS;
}

double sub_1004E3974@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 4;
  return result;
}

void sub_1004E399C()
{
  *(unsigned char *)(v0 + 1) = 1;
}

uint64_t sub_1004E39A8@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  if (a1 || *(unsigned char *)(v2 + 1) == 1)
  {
    long long v5 = xmmword_1006257D0;
    char v6 = 2;
    sub_100466184((uint64_t)&v5);
  }
  else
  {
    sub_1004E3A38((uint64_t)&v5);
  }
  sub_10044AF04((uint64_t)&v5, (uint64_t)v7);
  UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v7);
  sub_100466190((uint64_t)v7, (uint64_t)v8);
  return sub_100466190((uint64_t)v8, a2);
}

double sub_1004E3A38(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 176) = 7;
  return result;
}

int64_t sub_1004E3A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005E10E0();
  uint64_t v65 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v64 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v63 = (char *)&v58 - v9;
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)&v58 - v10;
  uint64_t v11 = sub_10000566C(&qword_1007176E8);
  __chkstk_darwin(v11 - 8);
  int v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1005E1620();
  uint64_t v14 = *(void *)(v69 - 8);
  uint64_t v15 = __chkstk_darwin(v69);
  uint64_t v61 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v62 = (char *)&v58 - v17;
  uint64_t v18 = sub_1005E1650();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::Int v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000566C(&qword_100716628);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v58 - v26;
  uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtC15IMAP2Connection10Connection_createdAt);
  int64_t result = static MonotonicTime.now()();
  BOOL v30 = __OFSUB__(v28, result);
  uint64_t v31 = v28 - result;
  if (v28 < result)
  {
    if (__OFSUB__(result, v28))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    BOOL v30 = __OFSUB__(0, result - v28);
    uint64_t v31 = v28 - result;
    if (!v30)
    {
LABEL_7:
      double v32 = (double)v31 / 1000000000.0;
      if ((~*(void *)&v32 & 0x7FF0000000000000) != 0)
      {
        if (v32 > -9.22337204e18)
        {
          if (v32 < 9.22337204e18)
          {
            if (!__OFSUB__(0, (uint64_t)v32))
            {
              uint64_t v68 = -(uint64_t)v32;
              if (!a1)
              {
                uint64_t v37 = sub_1005E12C0();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v27, 1, 1, v37);
                sub_100007A48((uint64_t)v27, &qword_100716628);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v13, 1, 1, v69);
                sub_100007A48((uint64_t)v13, &qword_1007176E8);
                uint64_t v38 = 0;
                uint64_t v39 = 0;
                uint64_t v40 = 0;
                unint64_t v41 = 0;
                uint64_t v42 = 0;
                uint64_t v43 = 0;
                int64_t result = 0;
LABEL_23:
                *(void *)a2 = v68;
                *(void *)(a2 + 8) = v40;
                *(void *)(a2 + 16) = v41;
                *(void *)(a2 + 24) = v39;
                *(void *)(a2 + 32) = v38;
                *(void *)(a2 + 40) = v42;
                *(void *)(a2 + 48) = a1;
                *(void *)(a2 + 56) = result;
                *(unsigned char *)(a2 + 64) = v43 == 0;
                return result;
              }
              uint64_t v60 = a1;
              sub_1005E12E0();
              uint64_t v33 = sub_1005E12C0();
              uint64_t v34 = *(void *)(v33 - 8);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v27, 0, 1, v33);
              sub_1004E88E4((uint64_t)v27, (uint64_t)v25);
              int v35 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v25, v33);
              if (v35 == enum case for NWConnection.State.waiting(_:))
              {
                (*(void (**)(char *, uint64_t))(v34 + 96))(v25, v33);
                (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v25, v18);
                uint64_t v70 = 0;
                unint64_t v71 = 0xE000000000000000;
                v36._countAndFlagsBits = 0x20676E6974696177;
                v36._object = (void *)0xE900000000000028;
              }
              else
              {
                if (v35 != enum case for NWConnection.State.failed(_:))
                {
                  if (v35 != enum case for NWConnection.State.setup(_:))
                  {
                    uint64_t v45 = v65;
                    uint64_t v44 = v66;
                    if (v35 == enum case for NWConnection.State.preparing(_:))
                    {
                      uint64_t v58 = 0x6E69726170657270;
                      unint64_t v59 = 0xE900000000000067;
                    }
                    else if (v35 == enum case for NWConnection.State.ready(_:))
                    {
                      uint64_t v58 = 0x7964616572;
                      unint64_t v59 = 0xE500000000000000;
                    }
                    else if (v35 == enum case for NWConnection.State.cancelled(_:))
                    {
                      uint64_t v58 = 0x656C6C65636E6163;
                      unint64_t v59 = 0xE900000000000064;
                    }
                    else
                    {
                      (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v33);
                      uint64_t v58 = 0;
                      unint64_t v59 = 0;
                    }
                    uint64_t v43 = v60;
                    goto LABEL_19;
                  }
                  uint64_t v58 = 0x7075746573;
                  unint64_t v59 = 0xE500000000000000;
LABEL_18:
                  uint64_t v43 = v60;
                  uint64_t v45 = v65;
                  uint64_t v44 = v66;
LABEL_19:
                  uint64_t v47 = v63;
                  Swift::Int v46 = v64;
                  uint64_t v48 = v69;
                  sub_100007A48((uint64_t)v27, &qword_100716628);
                  sub_1005E1140();
                  uint64_t v49 = v14;
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v48) == 1)
                  {
                    sub_100007A48((uint64_t)v13, &qword_1007176E8);
                    uint64_t v38 = 0;
                    uint64_t v39 = 0;
                  }
                  else
                  {
                    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
                    char v51 = v62;
                    v50(v62, v13, v48);
                    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v61, v51, v48);
                    uint64_t v52 = sub_1005E1CA0();
                    uint64_t v53 = v48;
                    uint64_t v39 = v52;
                    uint64_t v54 = v49;
                    uint64_t v38 = v55;
                    (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v53);
                    swift_bridgeObjectRelease();
                  }
                  sub_1005E1300();
                  char v56 = v67;
                  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v67, v47, v44);
                  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v46, v56, v44);
                  uint64_t v42 = sub_1005E1CA0();
                  a1 = v57;
                  (*(void (**)(char *, uint64_t))(v45 + 8))(v56, v44);
                  swift_bridgeObjectRelease();
                  int64_t result = sub_1005E1130();
                  uint64_t v40 = v58;
                  unint64_t v41 = v59;
                  goto LABEL_23;
                }
                (*(void (**)(char *, uint64_t))(v34 + 96))(v25, v33);
                (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v25, v18);
                uint64_t v70 = 0;
                unint64_t v71 = 0xE000000000000000;
                v36._countAndFlagsBits = 0x282064656C696166;
                v36._object = (void *)0xE800000000000000;
              }
              sub_1005E1E30(v36);
              sub_1005E2E90();
              v72._countAndFlagsBits = 41;
              v72._object = (void *)0xE100000000000000;
              sub_1005E1E30(v72);
              uint64_t v58 = v70;
              unint64_t v59 = v71;
              (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
              swift_bridgeObjectRelease();
              goto LABEL_18;
            }
            goto LABEL_37;
          }
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_36;
    }
    __break(1u);
  }
  if (!v30) {
    goto LABEL_7;
  }
LABEL_39:
  __break(1u);
  return result;
}

Swift::Int sub_1004E42D0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1004518C4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1004E7E20(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1004E433C()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x43676E696E6E7572;
      break;
    case 2:
      uint64_t result = 0x6574617473;
      break;
    case 3:
      uint64_t result = 0x69796C7265646E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004E43CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004E850C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E43F4(uint64_t a1)
{
  unint64_t v2 = sub_1004E46AC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E4430(uint64_t a1)
{
  unint64_t v2 = sub_1004E46AC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CommandConnection.CapturedValue.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_100717648);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1004E46AC();
  sub_1005E3500();
  LOBYTE(v15) = 0;
  sub_1005E3190();
  if (!v2)
  {
    *(void *)&long long v15 = *(void *)(v3 + 16);
    char v22 = 1;
    sub_10000566C(&qword_100717658);
    sub_1004E4700();
    sub_1005E31C0();
    long long v9 = *(_OWORD *)(v3 + 104);
    long long v19 = *(_OWORD *)(v3 + 88);
    long long v20 = v9;
    *(_OWORD *)Swift::Int v21 = *(_OWORD *)(v3 + 120);
    *(_DWORD *)&v21[15] = *(_DWORD *)(v3 + 135);
    long long v10 = *(_OWORD *)(v3 + 40);
    long long v15 = *(_OWORD *)(v3 + 24);
    long long v16 = v10;
    long long v11 = *(_OWORD *)(v3 + 72);
    long long v17 = *(_OWORD *)(v3 + 56);
    long long v18 = v11;
    char v22 = 2;
    sub_1004E47C8();
    sub_1005E31C0();
    long long v12 = *(_OWORD *)(v3 + 192);
    long long v17 = *(_OWORD *)(v3 + 176);
    long long v18 = v12;
    LOBYTE(v19) = *(unsigned char *)(v3 + 208);
    long long v13 = *(_OWORD *)(v3 + 160);
    long long v15 = *(_OWORD *)(v3 + 144);
    long long v16 = v13;
    char v22 = 3;
    sub_1004E481C();
    sub_1005E31C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1004E46AC()
{
  unint64_t result = qword_100717650;
  if (!qword_100717650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717650);
  }
  return result;
}

unint64_t sub_1004E4700()
{
  unint64_t result = qword_100717660;
  if (!qword_100717660)
  {
    sub_10000744C(&qword_100717658);
    sub_1004E4774();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717660);
  }
  return result;
}

unint64_t sub_1004E4774()
{
  unint64_t result = qword_100717668;
  if (!qword_100717668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717668);
  }
  return result;
}

unint64_t sub_1004E47C8()
{
  unint64_t result = qword_100717670;
  if (!qword_100717670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717670);
  }
  return result;
}

unint64_t sub_1004E481C()
{
  unint64_t result = qword_100717678;
  if (!qword_100717678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717678);
  }
  return result;
}

uint64_t sub_1004E4870(void *a1)
{
  return CommandConnection.CapturedValue.encode(to:)(a1);
}

__n128 CommandConnection.capturedValue.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = ConnectionID.debugDescription.getter(*(unsigned int *)(v2
                                                            + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id));
  uint64_t v9 = v8;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  long long v11 = sub_1004E4AD8(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_1004E8A1C(v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_1004E4C04((uint64_t *)v27);
  long long v26 = v27[0];
  long long v25 = v27[1];
  long long v24 = v27[2];
  long long v23 = v27[3];
  long long v22 = v27[4];
  long long v21 = v27[5];
  uint64_t v13 = v28;
  uint64_t v14 = v29;
  __int16 v15 = v30;
  char v16 = v31;
  sub_1004E8A84((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_1004E3A60(*(void *)(*(void *)(v2 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_connection), (uint64_t)v32);
  char v34 = v33;
  __n128 result = (__n128)v32[0];
  long long v18 = v32[1];
  long long v19 = v32[2];
  long long v20 = v32[3];
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 24) = v26;
  *(_OWORD *)(a1 + 40) = v25;
  *(_OWORD *)(a1 + 56) = v24;
  *(_OWORD *)(a1 + 72) = v23;
  *(_OWORD *)(a1 + 88) = v22;
  *(_OWORD *)(a1 + 104) = v21;
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = v14;
  *(_WORD *)(a1 + 136) = v15;
  *(unsigned char *)(a1 + 138) = v16;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v18;
  *(_OWORD *)(a1 + 176) = v19;
  *(_OWORD *)(a1 + 192) = v20;
  *(unsigned char *)(a1 + 208) = v34;
  return result;
}

void *sub_1004E4AD8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    long long v24 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1004B893C(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (void *)(a1 + 64);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      char v7 = *((unsigned char *)v4 - 8);
      uint64_t v8 = *v4;
      v18[0] = *(v4 - 4);
      v18[1] = v5;
      v18[2] = v6;
      char v19 = v7;
      uint64_t v20 = v8;
      sub_1004E71A8((uint64_t)v18, v21);
      uint64_t v9 = v21[0];
      uint64_t v10 = v21[1];
      long long v11 = v22;
      uint64_t v12 = v23;
      long long v24 = v2;
      unint64_t v14 = v2[2];
      unint64_t v13 = v2[3];
      if (v14 >= v13 >> 1)
      {
        long long v17 = v22;
        sub_1004B893C(v13 > 1, v14 + 1, 1);
        long long v11 = v17;
        uint64_t v2 = v24;
      }
      v4 += 5;
      v2[2] = v14 + 1;
      __int16 v15 = &v2[5 * v14];
      v15[4] = v9;
      v15[5] = v10;
      *((_OWORD *)v15 + 3) = v11;
      v15[8] = v12;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1004E4C04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v111 = a1;
  uint64_t v3 = type metadata accessor for UnauthenticatedState();
  __chkstk_darwin(v3);
  uint64_t v113 = (uint64_t)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UnauthenticatedStateWithTasks();
  __chkstk_darwin(v5);
  uint64_t v114 = (uint64_t)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E12C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v110 - v12;
  uint64_t v14 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v14);
  char v16 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004E8A1C(v2, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  long long v18 = 0uLL;
  char v19 = 2;
  char v20 = 1;
  uint64_t v21 = EnumCaseMultiPayload;
  uint64_t v22 = 0;
  unint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t result = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  char v34 = 2;
  switch(v21)
  {
    case 1:
      uint64_t v37 = v114;
      sub_1004E89B8((uint64_t)v16, v114);
      uint64_t v38 = v37 + *(int *)(v5 + 24);
      uint64_t v39 = v113;
      sub_1004E8A1C(v38, v113, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_bridgeObjectRelease();
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v41 = "requestingCredentials";
          long long v18 = xmmword_100625880;
          goto LABEL_39;
        case 2u:
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          sub_1004E8A84(v39, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          long long v18 = xmmword_1006258A0;
          char v20 = 2;
          unint64_t v23 = 0xEE00676E69746163;
          goto LABEL_41;
        case 3u:
          swift_bridgeObjectRelease();
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v41 = "identifyingServer";
          long long v18 = xmmword_100625890;
          goto LABEL_39;
        case 4u:
          long long v82 = *(_OWORD *)(v39 + 144);
          v117[8] = *(_OWORD *)(v39 + 128);
          v117[9] = v82;
          v117[10] = *(_OWORD *)(v39 + 160);
          *(void *)&v117[11] = *(void *)(v39 + 176);
          long long v83 = *(_OWORD *)(v39 + 80);
          v117[4] = *(_OWORD *)(v39 + 64);
          v117[5] = v83;
          long long v84 = *(_OWORD *)(v39 + 112);
          v117[6] = *(_OWORD *)(v39 + 96);
          v117[7] = v84;
          long long v85 = *(_OWORD *)(v39 + 16);
          v117[0] = *(_OWORD *)v39;
          v117[1] = v85;
          long long v86 = *(_OWORD *)(v39 + 48);
          v117[2] = *(_OWORD *)(v39 + 32);
          v117[3] = v86;
          sub_1004A8A6C((uint64_t)v117);
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v41 = "requestingCompression";
          long long v18 = xmmword_100625880;
          goto LABEL_39;
        case 5u:
          long long v94 = *(_OWORD *)(v39 + 144);
          v117[8] = *(_OWORD *)(v39 + 128);
          v117[9] = v94;
          v117[10] = *(_OWORD *)(v39 + 160);
          *(void *)&v117[11] = *(void *)(v39 + 176);
          long long v95 = *(_OWORD *)(v39 + 80);
          v117[4] = *(_OWORD *)(v39 + 64);
          v117[5] = v95;
          long long v96 = *(_OWORD *)(v39 + 112);
          v117[6] = *(_OWORD *)(v39 + 96);
          v117[7] = v96;
          long long v97 = *(_OWORD *)(v39 + 16);
          v117[0] = *(_OWORD *)v39;
          v117[1] = v97;
          long long v98 = *(_OWORD *)(v39 + 48);
          v117[2] = *(_OWORD *)(v39 + 32);
          v117[3] = v98;
          sub_1004A8A6C((uint64_t)v117);
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v41 = "enablingCompression";
          long long v18 = xmmword_100625870;
          goto LABEL_39;
        case 6u:
          long long v99 = *(_OWORD *)(v39 + 144);
          v117[8] = *(_OWORD *)(v39 + 128);
          v117[9] = v99;
          v117[10] = *(_OWORD *)(v39 + 160);
          *(void *)&v117[11] = *(void *)(v39 + 176);
          long long v100 = *(_OWORD *)(v39 + 80);
          v117[4] = *(_OWORD *)(v39 + 64);
          v117[5] = v100;
          long long v101 = *(_OWORD *)(v39 + 112);
          v117[6] = *(_OWORD *)(v39 + 96);
          v117[7] = v101;
          long long v102 = *(_OWORD *)(v39 + 16);
          v117[0] = *(_OWORD *)v39;
          v117[1] = v102;
          long long v103 = *(_OWORD *)(v39 + 48);
          v117[2] = *(_OWORD *)(v39 + 32);
          v117[3] = v103;
          sub_1004A8A6C((uint64_t)v117);
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v41 = "requestingPushRegistrationInfo";
          long long v18 = xmmword_100625860;
          goto LABEL_39;
        case 7u:
          long long v87 = *(_OWORD *)(v39 + 208);
          _OWORD v117[12] = *(_OWORD *)(v39 + 192);
          v117[13] = v87;
          v117[14] = *(_OWORD *)(v39 + 224);
          *(void *)&v117[15] = *(void *)(v39 + 240);
          long long v88 = *(_OWORD *)(v39 + 144);
          v117[8] = *(_OWORD *)(v39 + 128);
          v117[9] = v88;
          long long v89 = *(_OWORD *)(v39 + 176);
          v117[10] = *(_OWORD *)(v39 + 160);
          v117[11] = v89;
          long long v90 = *(_OWORD *)(v39 + 80);
          v117[4] = *(_OWORD *)(v39 + 64);
          v117[5] = v90;
          long long v91 = *(_OWORD *)(v39 + 112);
          v117[6] = *(_OWORD *)(v39 + 96);
          v117[7] = v91;
          long long v92 = *(_OWORD *)(v39 + 16);
          v117[0] = *(_OWORD *)v39;
          v117[1] = v92;
          long long v93 = *(_OWORD *)(v39 + 48);
          v117[2] = *(_OWORD *)(v39 + 32);
          v117[3] = v93;
          sub_1004A8B48((uint64_t)v117);
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v41 = "registeringForPush";
          long long v18 = xmmword_100625850;
          goto LABEL_39;
        case 8u:
          long long v105 = *(_OWORD *)(v39 + 144);
          v117[8] = *(_OWORD *)(v39 + 128);
          v117[9] = v105;
          v117[10] = *(_OWORD *)(v39 + 160);
          *(void *)&v117[11] = *(void *)(v39 + 176);
          long long v106 = *(_OWORD *)(v39 + 80);
          v117[4] = *(_OWORD *)(v39 + 64);
          v117[5] = v106;
          long long v107 = *(_OWORD *)(v39 + 112);
          v117[6] = *(_OWORD *)(v39 + 96);
          v117[7] = v107;
          long long v108 = *(_OWORD *)(v39 + 16);
          v117[0] = *(_OWORD *)v39;
          v117[1] = v108;
          long long v109 = *(_OWORD *)(v39 + 48);
          v117[2] = *(_OWORD *)(v39 + 32);
          v117[3] = v109;
          sub_1004A8A6C((uint64_t)v117);
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          long long v18 = xmmword_100625840;
          char v20 = 2;
          unint64_t v23 = 0xE400000000000000;
          goto LABEL_41;
        case 9u:
          sub_10046564C(*(void *)v39, *(void *)(v39 + 8), *(unsigned char *)(v39 + 16));
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          long long v18 = xmmword_100625830;
          char v20 = 2;
          unint64_t v23 = 0xE600000000000000;
          goto LABEL_41;
        case 0xAu:
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          long long v18 = xmmword_100625820;
          char v20 = 2;
          unint64_t v23 = 0xEA0000000000676ELL;
          goto LABEL_41;
        case 0xBu:
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          uint64_t v40 = &unk_100625000;
          unint64_t v41 = "gettingPreAuthCapabilities";
          goto LABEL_29;
        case 0xCu:
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          long long v18 = xmmword_100625800;
          char v20 = 2;
          unint64_t v23 = 0xEB00000000534C54;
          goto LABEL_41;
        case 0xDu:
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          long long v18 = xmmword_1006257F0;
          char v20 = 2;
          unint64_t v23 = 0xED0000534C54726FLL;
          goto LABEL_41;
        case 0xEu:
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          unint64_t v41 = "gettingPostAuthCapabilities";
          long long v18 = xmmword_1006257E0;
          goto LABEL_39;
        default:
          swift_bridgeObjectRelease();
          sub_1004E8A84(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedStateWithTasks);
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          uint64_t v24 = 0;
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          uint64_t result = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          uint64_t v33 = 0;
          uint64_t v40 = (_OWORD *)&unk_100625000;
          unint64_t v41 = "checkingIfPreAuthIsAllowed";
LABEL_29:
          long long v18 = v40[129];
LABEL_39:
          unint64_t v23 = (unint64_t)(v41 - 32) | 0x8000000000000000;
          break;
      }
      goto LABEL_40;
    case 2:
      memcpy(v117, v16, 0x15AuLL);
      uint64_t v42 = *(void *)&v117[0];
      int64_t v43 = *(void *)(*(void *)&v117[0] + 16);
      uint64_t v44 = _swiftEmptyArrayStorage;
      if (!v43) {
        goto LABEL_18;
      }
      *(void *)&long long v118 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1004B885C(0, v43, 0);
      uint64_t v44 = (void *)v118;
      int64_t v45 = sub_1000D38CC(v42);
      int v47 = v46;
      int v49 = v48 & 1;
      uint64_t v112 = v42 + 56;
      break;
    case 3:
      goto LABEL_42;
    case 4:
      uint64_t v22 = 0;
      unint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t result = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      char v19 = 1;
      goto LABEL_17;
    case 5:
      uint64_t v22 = 0;
      unint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t result = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      char v34 = 1;
LABEL_17:
      char v20 = 2;
      goto LABEL_42;
    default:
      (*(void (**)(char *, char *, uint64_t, void, void, void, __n128))(v8 + 32))(v13, v16, v7, 0, 0, 0, (__n128)0);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
      uint64_t v22 = sub_1005E1CA0();
      unint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      swift_bridgeObjectRelease();
      unint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t result = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      long long v18 = v36;
LABEL_40:
      char v20 = 2;
LABEL_41:
      char v19 = 2;
      char v34 = 2;
      goto LABEL_42;
  }
  do
  {
    if (v45 < 0 || v45 >= 1 << *(unsigned char *)(v42 + 32))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x1004E5BC8);
    }
    if (((*(void *)(v112 + (((unint64_t)v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
      goto LABEL_47;
    }
    if (*(_DWORD *)(v42 + 36) != v47) {
      goto LABEL_48;
    }
    LODWORD(v114) = v49;
    uint64_t v50 = (uint64_t *)(*(void *)(v42 + 48) + 32 * v45);
    uint64_t v51 = v50[1];
    uint64_t v113 = *v50;
    *(void *)&long long v118 = v44;
    unint64_t v52 = v44[2];
    unint64_t v53 = v44[3];
    swift_bridgeObjectRetain();
    if (v52 >= v53 >> 1)
    {
      sub_1004B885C(v53 > 1, v52 + 1, 1);
      uint64_t v44 = (void *)v118;
    }
    v44[2] = v52 + 1;
    uint64_t v54 = &v44[2 * v52];
    v54[4] = v113;
    v54[5] = v51;
    int64_t v55 = sub_1000D3974(v45, v47, v114 & 1, v42);
    int64_t v45 = v55;
    int v47 = v56;
    int v49 = v57 & 1;
    --v43;
  }
  while (v43);
  sub_100060FF0(v55, v56, v49);
  swift_bridgeObjectRelease();
LABEL_18:
  unint64_t v116 = v44;
  swift_bridgeObjectRetain();
  sub_1004E42D0((uint64_t *)&v116);
  swift_bridgeObjectRelease();
  *(void *)&long long v118 = v116;
  sub_10000566C(&qword_100715740);
  sub_10044B13C();
  uint64_t v114 = sub_1005E1A80();
  uint64_t v59 = v58;
  swift_release();
  long long v126 = *(_OWORD *)((char *)&v117[8] + 8);
  long long v127 = *(_OWORD *)((char *)&v117[9] + 8);
  long long v128 = *(_OWORD *)((char *)&v117[10] + 8);
  long long v122 = *(_OWORD *)((char *)&v117[4] + 8);
  long long v123 = *(_OWORD *)((char *)&v117[5] + 8);
  long long v124 = *(_OWORD *)((char *)&v117[6] + 8);
  long long v125 = *(_OWORD *)((char *)&v117[7] + 8);
  long long v118 = *(_OWORD *)((char *)v117 + 8);
  long long v119 = *(_OWORD *)((char *)&v117[1] + 8);
  long long v120 = *(_OWORD *)((char *)&v117[2] + 8);
  long long v121 = *(_OWORD *)((char *)&v117[3] + 8);
  uint64_t v113 = ServerID.logDescription.getter();
  uint64_t v61 = v60;
  sub_100482DD4((uint64_t)&v117[11] + 8, (uint64_t)v115);
  int v62 = sub_100482E30((uint64_t)v115);
  if (v62)
  {
    if (v62 == 1)
    {
      uint64_t v63 = sub_100483328((uint64_t)v115);
      uint64_t v64 = *(void *)v63;
      unsigned int v65 = *(_DWORD *)(v63 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1000AC520(v64, v65);
      uint64_t v68 = v67;
      sub_100482E3C((uint64_t)v117);
      uint64_t v69 = 0;
      uint64_t v33 = 0;
    }
    else
    {
      uint64_t v78 = sub_100483328((uint64_t)v115);
      uint64_t v79 = *(void *)v78;
      unsigned int v80 = *(_DWORD *)(v78 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1000AC520(v79, v80);
      uint64_t v33 = v81;
      sub_100482E3C((uint64_t)v117);
      uint64_t v66 = 0;
      uint64_t v68 = 0;
    }
    uint64_t v76 = 0;
    uint64_t v71 = 0;
  }
  else
  {
    uint64_t v70 = sub_100483328((uint64_t)v115);
    uint64_t v71 = *(void *)v70;
    if (*(void *)v70)
    {
      uint64_t v73 = *(void *)(v70 + 24);
      uint64_t v72 = *(void *)(v70 + 32);
      unint64_t v74 = *(void *)(v70 + 16);
      unsigned int v75 = *(_DWORD *)(v70 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1004E894C((uint64_t)&v117[11] + 8);
      uint64_t v76 = sub_1000AC520(v71, v75);
      uint64_t v71 = v77;
      sub_10048316C(v74, v73, v72);
      sub_100482E3C((uint64_t)v117);
      uint64_t v69 = 0;
      uint64_t v33 = 0;
      uint64_t v66 = 0;
      uint64_t v68 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100482E3C((uint64_t)v117);
      uint64_t v69 = 0;
      uint64_t v33 = 0;
      uint64_t v66 = 0;
      uint64_t v68 = 0;
      uint64_t v76 = 0;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v71;
  uint64_t v22 = 0;
  unint64_t v23 = 0;
  char v20 = 2;
  char v19 = 2;
  char v34 = 2;
  long long v18 = 0uLL;
  uint64_t v26 = v113;
  uint64_t v24 = v114;
  uint64_t v25 = v59;
  uint64_t result = v61;
  uint64_t v28 = v76;
  uint64_t v30 = v66;
  uint64_t v32 = v69;
  uint64_t v31 = v68;
LABEL_42:
  uint64_t v104 = v111;
  *uint64_t v111 = v22;
  *(_OWORD *)(v104 + 1) = v18;
  v104[3] = v23;
  v104[4] = v24;
  v104[5] = v25;
  v104[6] = v26;
  v104[7] = result;
  v104[8] = v28;
  v104[9] = v29;
  v104[10] = v30;
  v104[11] = v31;
  v104[12] = v32;
  v104[13] = v33;
  *((unsigned char *)v104 + 112) = v20;
  *((unsigned char *)v104 + 113) = v19;
  *((unsigned char *)v104 + 114) = v34;
  return result;
}

uint64_t _s13CapturedValueVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13CapturedValueVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v7;
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v8;
    uint64_t v9 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v9;
    uint64_t v10 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v10;
    uint64_t v11 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v12;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    long long v13 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v13;
  }
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_WORD *)(a1 + 137) = *(_WORD *)(a2 + 137);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  uint64_t v17 = *(void *)(a2 + 192);
  uint64_t v16 = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 192) = v17;
  *(void *)(a1 + 200) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13CapturedValueVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004E60A0(a1 + 56);
      *uint64_t v4 = *v5;
      long long v7 = *(_OWORD *)(a2 + 120);
      long long v9 = *(_OWORD *)(a2 + 72);
      long long v8 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = v7;
      *(_OWORD *)(a1 + 72) = v9;
      *(_OWORD *)(a1 + 88) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v4 = *v5;
    long long v10 = *(_OWORD *)(a2 + 72);
    long long v11 = *(_OWORD *)(a2 + 88);
    long long v12 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v12;
    *(_OWORD *)(a1 + 72) = v10;
    *(_OWORD *)(a1 + 88) = v11;
  }
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = v13;
  return a1;
}

uint64_t sub_1004E60A0(uint64_t a1)
{
  return a1;
}

__n128 _s13CapturedValueVwtk_0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t _s13CapturedValueVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 64)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  if (!v7)
  {
    sub_1004E60A0(a1 + 56);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v12;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    long long v13 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v13;
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_WORD *)(a1 + 137) = *(_WORD *)(a2 + 137);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

uint64_t _s13CapturedValueVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 209)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CapturedValueVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 208) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 209) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 209) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandConnection.CapturedValue()
{
  return &type metadata for CommandConnection.CapturedValue;
}

uint64_t _s13CapturedValueV13AuthenticatedVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s13CapturedValueV13AuthenticatedVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13CapturedValueV13AuthenticatedVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s13CapturedValueV13AuthenticatedVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CapturedValueV13AuthenticatedVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *_s13CapturedValueV13AuthenticatedVMa()
{
  return &_s13CapturedValueV13AuthenticatedVN;
}

uint64_t _s14descr1006B9521C13CapturedValueVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1006B9521C13CapturedValueVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr1006B9521C13CapturedValueVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  return a1;
}

__n128 initializeWithTake for Command(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s14descr1006B9521C13CapturedValueVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t _s14descr1006B9521C13CapturedValueVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr1006B9521C13CapturedValueVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *_s14descr1006B9521C13CapturedValueVMa()
{
  return &_s14descr1006B9521C13CapturedValueVN;
}

uint64_t _s13CapturedValueVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13CapturedValueVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
  }
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  return a1;
}

uint64_t _s13CapturedValueVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004E60A0(a1 + 32);
      *uint64_t v4 = *v5;
      long long v7 = *(_OWORD *)(a2 + 96);
      long long v9 = *(_OWORD *)(a2 + 48);
      long long v8 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v7;
      *(_OWORD *)(a1 + 48) = v9;
      *(_OWORD *)(a1 + 64) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v4 = *v5;
    long long v10 = *(_OWORD *)(a2 + 48);
    long long v11 = *(_OWORD *)(a2 + 64);
    long long v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)(a1 + 64) = v11;
  }
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  return a1;
}

__n128 _s13CapturedValueVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_DWORD *)(a1 + 111) = *(_DWORD *)((char *)a2 + 111);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s13CapturedValueVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  if (!v6)
  {
    sub_1004E60A0(a1 + 32);
LABEL_5:
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  return a1;
}

uint64_t _s13CapturedValueVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 115)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13CapturedValueVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 114) = 0;
    *(_WORD *)(result + 112) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 115) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 115) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedValueVMa_0()
{
  return &_s13CapturedValueVN_0;
}

ValueMetadata *_s13CapturedValueVMa()
{
  return &_s13CapturedValueVN;
}

unsigned char *_s13CapturedValueV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E6E94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedValueV10CodingKeysOMa()
{
  return &_s13CapturedValueV10CodingKeysON;
}

unint64_t sub_1004E6ED0()
{
  unint64_t result = qword_100717680;
  if (!qword_100717680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717680);
  }
  return result;
}

uint64_t sub_1004E6F24(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_100717698);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1004E86D8();
  sub_1005E3500();
  v8[15] = 0;
  sub_1005E3190();
  if (!v1)
  {
    v8[14] = 1;
    sub_1005E3130();
    v8[13] = 2;
    sub_1005E31B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1004E70AC()
{
  uint64_t v1 = 1684957547;
  if (*v0 != 1) {
    uint64_t v1 = 6645601;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6775156;
  }
}

uint64_t sub_1004E70F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004E9228(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E7118(uint64_t a1)
{
  unint64_t v2 = sub_1004E86D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E7154(uint64_t a1)
{
  unint64_t v2 = sub_1004E86D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E7190(void *a1)
{
  return sub_1004E6F24(a1);
}

int64_t sub_1004E71A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = 8 * *(char *)(a1 + 24);
  uint64_t v4 = *(void *)((char *)&unk_100629308 + v3);
  uint64_t v5 = *(void *)((char *)&unk_100629320 + v3);
  uint64_t v6 = *(void *)(a1 + 32);
  sub_1005E2E90();
  int64_t result = static MonotonicTime.now()();
  BOOL v8 = __OFSUB__(v6, result);
  uint64_t v9 = v6 - result;
  if (v6 < result)
  {
    if (__OFSUB__(result, v6))
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    BOOL v8 = __OFSUB__(0, result - v6);
    uint64_t v9 = v6 - result;
    if (!v8)
    {
LABEL_7:
      double v10 = (double)v9 / 1000000000.0;
      if ((~*(void *)&v10 & 0x7FF0000000000000) != 0)
      {
        if (v10 > -9.22337204e18)
        {
          if (v10 < 9.22337204e18)
          {
            if (!__OFSUB__(0, (uint64_t)v10))
            {
              *a2 = 0;
              a2[1] = 0xE000000000000000;
              a2[2] = v4;
              a2[3] = v5;
              a2[4] = -(uint64_t)v10;
              return result;
            }
            goto LABEL_15;
          }
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
          goto LABEL_16;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_14;
    }
    __break(1u);
  }
  if (!v8) {
    goto LABEL_7;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1004E72EC(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_1007176D8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1004E8890();
  sub_1005E3500();
  v8[15] = 0;
  sub_1005E3190();
  if (!v1)
  {
    v8[14] = 1;
    sub_1005E3130();
    v8[13] = 2;
    sub_1005E3130();
    _OWORD v8[12] = 3;
    sub_1005E3130();
    v8[11] = 4;
    sub_1005E3130();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1004E74C4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000566C(&qword_1007176A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  BOOL v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1004E872C();
  sub_1005E3500();
  v11[0] = 0;
  sub_1005E3130();
  if (!v2)
  {
    v11[0] = 1;
    sub_1005E3130();
    sub_1004E8780(v3 + 32, (uint64_t)v12);
    sub_1004E8780((uint64_t)v12, (uint64_t)v11);
    v10[15] = 2;
    sub_1004E87E8();
    sub_1005E3160();
    v11[0] = 3;
    sub_1005E3140();
    v11[0] = 4;
    sub_1005E3140();
    v11[0] = 5;
    sub_1005E3140();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1004E76EC()
{
  unint64_t result = 0x696C696261706163;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4449726576726573;
      break;
    case 2:
      unint64_t result = 0x614D64656C696166;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x64657463656C6573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004E77BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004E9350(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E77E4(uint64_t a1)
{
  unint64_t v2 = sub_1004E8890();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E7820(uint64_t a1)
{
  unint64_t v2 = sub_1004E8890();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E785C(void *a1)
{
  return sub_1004E72EC(a1);
}

unint64_t sub_1004E7874()
{
  unint64_t result = 0x697463656E6E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E65687475616E75;
      break;
    case 2:
      unint64_t result = 0x69746E6568747561;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x64656C696166;
      break;
    case 5:
      unint64_t result = 0x656C6C65636E6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004E795C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004E95C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E7984(uint64_t a1)
{
  unint64_t v2 = sub_1004E872C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E79C0(uint64_t a1)
{
  unint64_t v2 = sub_1004E872C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E79FC(void *a1)
{
  return sub_1004E74C4(a1);
}

uint64_t sub_1004E7A50(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_1007176C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_1004E883C();
  sub_1005E3500();
  v8[15] = 0;
  sub_1005E31B0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1005E3130();
    v8[13] = 2;
    sub_1005E3130();
    _OWORD v8[12] = 3;
    sub_1005E3130();
    v8[11] = 4;
    sub_1005E3180();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1004E7C2C()
{
  uint64_t result = 6645601;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574617473;
      break;
    case 2:
      uint64_t result = 1752457584;
      break;
    case 3:
      uint64_t result = 0x746E696F70646E65;
      break;
    case 4:
      uint64_t result = 30574;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004E7CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004E989C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004E7CE0(uint64_t a1)
{
  unint64_t v2 = sub_1004E883C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004E7D1C(uint64_t a1)
{
  unint64_t v2 = sub_1004E883C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004E7D58(void *a1)
{
  return sub_1004E7A50(a1);
}

unint64_t sub_1004E7D74()
{
  unint64_t result = qword_100717688;
  if (!qword_100717688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717688);
  }
  return result;
}

unint64_t sub_1004E7DCC()
{
  unint64_t result = qword_100717690;
  if (!qword_100717690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717690);
  }
  return result;
}

Swift::Int sub_1004E7E20(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100374898(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  long long v102 = a1;
  if (v3 < 2)
  {
    BOOL v8 = _swiftEmptyArrayStorage;
    long long __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      long long v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      long long v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          long long v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_100374968((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v97 = sub_10045189C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          long long v100 = &v97[16 * v96 + 32];
          *(void *)long long v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          long long v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1005E2150();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = (void *)v7;
    long long __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  long long v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1005E3290();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      unint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1005E3290()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v11 = sub_100451554(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      long long v11 = sub_100451554((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    int64_t v43 = &v11[16 * v41 + 32];
    *(void *)int64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          int v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          char v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        int v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        unsigned int v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        long long v85 = v11;
        long long v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        long long v88 = v42;
        unint64_t v89 = v44;
        long long v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_100374968((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)long long v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        long long v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      BOOL v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        char v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1005E3290() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_1004E850C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x43676E696E6E7572 && a2 == 0xEF73646E616D6D6FLL || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69796C7265646E75 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1004E86D8()
{
  unint64_t result = qword_1007176A0;
  if (!qword_1007176A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007176A0);
  }
  return result;
}

unint64_t sub_1004E872C()
{
  unint64_t result = qword_1007176B0;
  if (!qword_1007176B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007176B0);
  }
  return result;
}

uint64_t sub_1004E8780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_1007176B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004E87E8()
{
  unint64_t result = qword_1007176C0;
  if (!qword_1007176C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007176C0);
  }
  return result;
}

unint64_t sub_1004E883C()
{
  unint64_t result = qword_1007176D0;
  if (!qword_1007176D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007176D0);
  }
  return result;
}

unint64_t sub_1004E8890()
{
  unint64_t result = qword_1007176E0;
  if (!qword_1007176E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007176E0);
  }
  return result;
}

uint64_t sub_1004E88E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100716628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E894C(uint64_t a1)
{
  sub_100485144(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(_WORD *)(a1 + 160));
  return a1;
}

uint64_t sub_1004E89B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnauthenticatedStateWithTasks();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E8A1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004E8A84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *_s13CapturedValueV13AuthenticatedV10CodingKeysOMa()
{
  return &_s13CapturedValueV13AuthenticatedV10CodingKeysON;
}

unsigned char *_s13CapturedValueV13AuthenticatedV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E8BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1006B9521C13CapturedValueV10CodingKeysOMa()
{
  return &_s14descr1006B9521C13CapturedValueV10CodingKeysON;
}

unsigned char *_s13CapturedValueV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E8CCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedValueV10CodingKeysOMa_0()
{
  return &_s13CapturedValueV10CodingKeysON_0;
}

unsigned char *_s13CapturedValueV10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E8DD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13CapturedValueV10CodingKeysOMa_1()
{
  return &_s13CapturedValueV10CodingKeysON_1;
}

unint64_t sub_1004E8E0C()
{
  unint64_t result = qword_1007176F0;
  if (!qword_1007176F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007176F0);
  }
  return result;
}

unint64_t sub_1004E8E64()
{
  unint64_t result = qword_1007176F8;
  if (!qword_1007176F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007176F8);
  }
  return result;
}

unint64_t sub_1004E8EBC()
{
  unint64_t result = qword_100717700;
  if (!qword_100717700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717700);
  }
  return result;
}

unint64_t sub_1004E8F14()
{
  unint64_t result = qword_100717708;
  if (!qword_100717708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717708);
  }
  return result;
}

unint64_t sub_1004E8F6C()
{
  unint64_t result = qword_100717710;
  if (!qword_100717710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717710);
  }
  return result;
}

unint64_t sub_1004E8FC4()
{
  unint64_t result = qword_100717718;
  if (!qword_100717718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717718);
  }
  return result;
}

unint64_t sub_1004E901C()
{
  unint64_t result = qword_100717720;
  if (!qword_100717720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717720);
  }
  return result;
}

unint64_t sub_1004E9074()
{
  unint64_t result = qword_100717728;
  if (!qword_100717728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717728);
  }
  return result;
}

unint64_t sub_1004E90CC()
{
  unint64_t result = qword_100717730;
  if (!qword_100717730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717730);
  }
  return result;
}

unint64_t sub_1004E9124()
{
  unint64_t result = qword_100717738;
  if (!qword_100717738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717738);
  }
  return result;
}

unint64_t sub_1004E917C()
{
  unint64_t result = qword_100717740;
  if (!qword_100717740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717740);
  }
  return result;
}

unint64_t sub_1004E91D4()
{
  unint64_t result = qword_100717748;
  if (!qword_100717748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717748);
  }
  return result;
}

uint64_t sub_1004E9228(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6775156 && a2 == 0xE300000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6645601 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1004E9350(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696C696261706163 && a2 == 0xEC00000073656974;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449726576726573 && a2 == 0xE800000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614D64656C696166 && a2 == 0xED0000786F626C69 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005EA360 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEF786F626C69614DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1004E95C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697463656E6E6F63 && a2 == 0xEA0000000000676ELL;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65687475616E75 && a2 == 0xEF64657461636974 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6568747561 && a2 == 0xED00006465746163 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001005EA5E0 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1004E989C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6645601 && a2 == 0xE300000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 30574 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1004E9A7C()
{
  sub_1004546E0(v0, (uint64_t)&v6);
  uint64_t v1 = v6;
  unint64_t result = 0x4E49474F4CLL;
  switch(v14)
  {
    case 1:
      int v3 = (void *)v7;
      swift_bridgeObjectRetain();
      v15._countAndFlagsBits = v1;
      v15._object = v3;
      sub_1005E1E30(v15);
      swift_bridgeObjectRelease();
      unint64_t result = 0x2048545541;
      break;
    case 2:
      unint64_t result = 17481;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      uint64_t v4 = v10 | v9 | v8;
      if (v12 | v13 | v6 | v11 | v4 | v7)
      {
        if (v12 | v13 | v11 | v4 | v7) {
          BOOL v5 = 0;
        }
        else {
          BOOL v5 = v6 == 1;
        }
        if (v5) {
          unint64_t result = 0x534C545452415453;
        }
        else {
          unint64_t result = 0x53534552504D4F43;
        }
      }
      else
      {
        unint64_t result = 0x494C494241504143;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004E9BF0(uint64_t a1, uint64_t a2)
{
  sub_1004546E0(a1, (uint64_t)v4);
  sub_1004546E0(a2, (uint64_t)v5);
  return sub_1004E9C3C((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_1004E9C3C(uint64_t a1, uint64_t a2)
{
  sub_1004546E0(a1, (uint64_t)&v38);
  uint64_t v3 = v38;
  switch(v42)
  {
    case 1:
      unint64_t v10 = *((void *)&v38 + 1);
      long long v11 = v39;
      int v12 = BYTE6(v40);
      int v13 = WORD2(v40);
      uint64_t v14 = v40;
      sub_1004546E0(a2, (uint64_t)&v33);
      if (v37 != 1) {
        goto LABEL_41;
      }
      int8x16_t v15 = v34;
      int v16 = v35.u8[6];
      int v17 = v35.u16[2];
      uint64_t v18 = v35.u32[0];
      if (__PAIR128__(v10, v3) == *(_OWORD *)&v33
        || (v19 = v35.u32[0], v20 = v35.u8[6], v21 = sub_1005E3290(), v16 = v20, v18 = v19, char v8 = 0, (v21 & 1) != 0))
      {
        if ((void)v11)
        {
          if (v15.i64[0])
          {
            unint64_t v22 = (v18 | ((unint64_t)(v17 | (v16 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL;
            swift_retain();
            swift_retain();
            BOOL v23 = sub_10036108C(v11, *((unint64_t *)&v11 + 1), (v14 | ((unint64_t)(v13 | (v12 << 16)) << 32)) & 0xFFFFFFFFFFFFFFLL, v15.i64[0], v15.i64[1], v22);
            swift_release();
            swift_release();
            if (v23) {
              goto LABEL_37;
            }
          }
        }
        else if (!v15.i64[0])
        {
          goto LABEL_37;
        }
        goto LABEL_41;
      }
      break;
    case 2:
      uint64_t v24 = *((void *)&v38 + 1);
      uint64_t v25 = v39;
      sub_1004546E0(a2, (uint64_t)&v33);
      if (v37 != 2) {
        goto LABEL_41;
      }
      int8x16_t v26 = v33;
      uint64_t v27 = v34.i64[0];
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (sub_100376C60(v26.i64[0], v26.i64[1], v3, v24)) {
        char v8 = sub_10037BAD0(v25, v27);
      }
      else {
        char v8 = 0;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      break;
    case 3:
      v43[0] = v38;
      v43[1] = v39;
      v43[2] = v40;
      v43[3] = v41;
      sub_1004546E0(a2, (uint64_t)&v33);
      if (v37 != 3) {
        goto LABEL_41;
      }
      v32[0] = v33;
      v32[1] = v34;
      v32[2] = v35;
      v32[3] = v36;
      char v8 = static PushRegistrationInfo.__derived_struct_equals(_:_:)(v43, v32);
      break;
    case 4:
      uint64_t v28 = v40 | *((void *)&v39 + 1) | v39;
      if ((unint64_t)v41 | *((void *)&v41 + 1) | (unint64_t)v38 | *((void *)&v40 + 1) | v28 | *((void *)&v38 + 1))
      {
        if ((void)v38 != 1
          || (unint64_t)v41 | *((void *)&v41 + 1) | *((void *)&v40 + 1) | v28 | *((void *)&v38 + 1))
        {
          sub_1004546E0(a2, (uint64_t)&v33);
          if (v37 != 4 || v33.i64[0] != 2) {
            goto LABEL_41;
          }
        }
        else
        {
          sub_1004546E0(a2, (uint64_t)&v33);
          if (v37 != 4 || v33.i64[0] != 1) {
            goto LABEL_41;
          }
        }
        int8x16_t v30 = vorrq_s8(v35, v36);
        if (*(void *)&vorr_s8(*(int8x8_t *)v30.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL)) | v34.i64[1] | v34.i64[0] | v33.i64[1]) {
          goto LABEL_41;
        }
        goto LABEL_37;
      }
      sub_1004546E0(a2, (uint64_t)&v33);
      if (v37 == 4)
      {
        int8x16_t v29 = vorrq_s8(vorrq_s8(v33, v35), vorrq_s8(v34, v36));
        if (!*(void *)&vorr_s8(*(int8x8_t *)v29.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL))) {
          goto LABEL_37;
        }
      }
      goto LABEL_41;
    default:
      uint64_t v4 = *((void *)&v38 + 1);
      long long v5 = v39;
      sub_1004546E0(a2, (uint64_t)&v33);
      if (v37)
      {
LABEL_41:
        char v8 = 0;
      }
      else
      {
        int8x16_t v6 = v34;
        BOOL v7 = v3 == v33.i64[0] && v4 == v33.i64[1];
        if (v7 || (char v8 = 0, (sub_1005E3290() & 1) != 0))
        {
          if ((void)v5 == v6.i64[0] && *((void *)&v5 + 1) == v6.i64[1]) {
LABEL_37:
          }
            char v8 = 1;
          else {
            char v8 = sub_1005E3290();
          }
        }
      }
      break;
  }
  return v8 & 1;
}

uint64_t initializeWithCopy for Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_100453FC0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_100453FC0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_10044C910(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for Command(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_10044C910(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Command(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Command(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1004EA2D4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 3u) {
    return *(unsigned __int8 *)(a1 + 64);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1004EA2EC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(void *)(result + 56) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Command()
{
  return &type metadata for Command;
}

unint64_t sub_1004EA340()
{
  unint64_t result = qword_100717750;
  if (!qword_100717750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717750);
  }
  return result;
}

unsigned char *_s15IMAP2Connection6TaskIDV2IDOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004EA460);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskID.ID()
{
  return &type metadata for TaskID.ID;
}

unint64_t sub_1004EA49C()
{
  unint64_t result = qword_100717758;
  if (!qword_100717758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717758);
  }
  return result;
}

void *Timer.__allocating_init(queue:)(uint64_t a1)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = 0;
  result[3] = 0;
  result[4] = 0;
  result[5] = a1;
  return result;
}

void *Timer.init(queue:)(uint64_t a1)
{
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0;
  v1[5] = a1;
  return v1;
}

uint64_t Timer.deinit()
{
  if (*(void *)(v0 + 16))
  {
    swift_retain();
    sub_1005E1830();
    swift_release();
  }
  if (*(void *)(v0 + 24))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1005E26A0();
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t Timer.__deallocating_deinit()
{
  if (*(void *)(v0 + 16))
  {
    swift_retain();
    sub_1005E1830();
    swift_release();
  }
  if (*(void *)(v0 + 24))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1005E26A0();
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t Timer.cancelPreviousAndAsync(after:closure:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v16 = a3;
  uint64_t v4 = sub_1005E1670();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (void **)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1005E1810();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v13 = (char *)&v16 - v12;
  sub_1005E17F0();
  sub_1005E1800();
  long long v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  void *v7 = 100;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchTimeInterval.milliseconds(_:), v4);
  Timer.cancelPreviousAndAsync(at:leeway:closure:)((uint64_t)v13, (uint64_t)v7, a2, v16);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  return ((uint64_t (*)(char *, uint64_t))v14)(v13, v8);
}

uint64_t Timer.cancelPreviousAndAsync(at:leeway:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a3;
  id v29 = a4;
  uint64_t v35 = a2;
  uint64_t v33 = a1;
  uint64_t v36 = sub_1005E1670();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin();
  Swift::Int v32 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E2640();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E1680();
  __chkstk_darwin();
  sub_1005E16C0();
  __chkstk_darwin();
  uint64_t v10 = sub_1005E1850();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  long long v13 = (uint64_t *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v14 = (void *)v5[5];
  *long long v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  char v16 = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    Timer.cancel()();
    uint64_t v18 = v5[4];
    sub_1005E16B0();
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    char v20 = (void *)swift_allocObject();
    v20[2] = v19;
    uint64_t v20[3] = v18;
    id v21 = v29;
    v20[4] = v28;
    v20[5] = v21;
    aBlock[4] = sub_1004EB0D4;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100469020;
    aBlock[3] = &unk_1006FB0D0;
    _Block_copy(aBlock);
    char v37 = _swiftEmptyArrayStorage;
    sub_100357994((unint64_t *)&unk_100717760, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    swift_retain();
    swift_retain();
    sub_10000566C(&qword_100715C98);
    id v29 = v15;
    sub_100057E98((unint64_t *)&qword_100717770, &qword_100715C98);
    sub_1005E2AD0();
    sub_1005E1840();
    swift_allocObject();
    uint64_t v22 = sub_1005E1820();
    swift_release();
    swift_release();
    sub_1004EB0F8();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100357994(&qword_100717780, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
    sub_10000566C(&qword_100717788);
    sub_100057E98(&qword_100717790, &qword_100717788);
    uint64_t v23 = v31;
    sub_1005E2AD0();
    uint64_t v24 = sub_1005E2650();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v23);
    swift_getObjectType();
    sub_1005E2670();
    uint64_t v25 = v34;
    int8x16_t v26 = v32;
    uint64_t v27 = v36;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))(v32, enum case for DispatchTimeInterval.never(_:), v36);
    sub_1005E27C0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
    sub_1005E26B0();
    uint64_t v5[2] = v22;
    swift_release();
    v5[3] = v24;
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004EAE10(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(result + 32);
    uint64_t result = swift_release();
    if (v6 == a2)
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        *(void *)(Strong + 16) = 0;
        swift_release();
        uint64_t Strong = swift_release();
      }
      return a3(Strong);
    }
  }
  return result;
}

Swift::Void __swiftcall Timer.cancel()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (void *)v1[5];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (v1[2])
    {
      swift_retain();
      sub_1005E1830();
      swift_release();
      BOOL v8 = 1;
    }
    else
    {
      BOOL v8 = v1[3] != 0;
    }
    v1[2] = 0;
    swift_release();
    if (v1[3])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1005E26A0();
      swift_unknownObjectRelease();
    }
    v1[3] = 0;
    swift_unknownObjectRelease();
    if (v8) {
      ++v1[4];
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004EB05C()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004EB094()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004EB0D4()
{
  return sub_1004EAE10(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_1004EB0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004EB0F0()
{
  return swift_release();
}

unint64_t sub_1004EB0F8()
{
  unint64_t result = qword_100717778;
  if (!qword_100717778)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100717778);
  }
  return result;
}

uint64_t type metadata accessor for Timer()
{
  return self;
}

uint64_t sub_1004EB15C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004EB2E8(v1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 7;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1004EB34C((uint64_t)v4);
      uint64_t result = 1;
      break;
    case 2:
      memcpy(v9, v4, 0x15AuLL);
      sub_100482DD4((uint64_t)&v9[184], (uint64_t)v10);
      int v7 = sub_100482E30((uint64_t)v10);
      if (v7)
      {
        if (v7 == 1)
        {
          sub_100483328((uint64_t)v10);
          sub_100482E3C((uint64_t)v9);
          uint64_t result = 3;
        }
        else
        {
          sub_100483328((uint64_t)v10);
          sub_100482E3C((uint64_t)v9);
          uint64_t result = 4;
        }
      }
      else
      {
        sub_100483328((uint64_t)v10);
        sub_100482E3C((uint64_t)v9);
        uint64_t result = 2;
      }
      break;
    case 3:
      return result;
    case 4:
      uint64_t result = 5;
      break;
    case 5:
      uint64_t result = 6;
      break;
    default:
      sub_1004EB34C((uint64_t)v4);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_1004EB2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EB34C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConnectionState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004EB3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1005E1680();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  long long v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005E16C0();
  uint64_t v14 = *(void *)(v21 - 8);
  __chkstk_darwin();
  char v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100715618 != -1) {
    swift_once();
  }
  v20[1] = qword_100715AC0;
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v5;
  v17[3] = a1;
  void v17[4] = a2;
  v17[5] = a3;
  v17[6] = a4;
  aBlock[4] = sub_1004EEB60;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100469020;
  aBlock[3] = &unk_1006FB198;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1005E16A0();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_1004EF210((unint64_t *)&unk_100717760, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000566C(&qword_100715C98);
  sub_100057E98((unint64_t *)&qword_100717770, &qword_100715C98);
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_1004EB6B8(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t))(a1 + 32);
  int v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6(a2, a3, sub_1004EEA8C, v8);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1004EB784(uint64_t a1, NSObject *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  int negotiated_tls_protocol_version = sec_protocol_metadata_get_negotiated_tls_protocol_version(a2);
  int negotiated_tls_ciphersuite = sec_protocol_metadata_get_negotiated_tls_ciphersuite(a2);
  if (sec_protocol_metadata_get_server_name(a2))
  {
    uint64_t v11 = sub_1005E1E50();
    uint64_t v13 = v12;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  SecTrustRef v14 = sec_trust_copy_ref(a3);
  sub_1004EB86C(negotiated_tls_protocol_version | (negotiated_tls_ciphersuite << 16), v11, v13, v14, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004EB86C(unsigned int a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v35 = a3;
  uint64_t v36 = a2;
  uint64_t v34 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v10 = *(void *)(v34 + 64);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E1850();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100715618 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_100715AC0;
  *uint64_t v15 = qword_100715AC0;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = (id)v16;
  LOBYTE(v16) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    unsigned int v31 = HIWORD(a1);
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = v6;
    v19[3] = a4;
    void v19[4] = v33;
    _OWORD v19[5] = a6;
    uint64_t v20 = (uint64_t)v6 + qword_100762210;
    uint64_t v21 = *v6;
    uint64_t v32 = a6;
    uint64_t v30 = *(void *)(v21 + 136);
    uint64_t v33 = (uint64_t)v6 + qword_100762200;
    unsigned __int8 v22 = *((unsigned char *)v6 + qword_100762218);
    sub_1004EEAA4((uint64_t)v6 + qword_100762210, (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v23 = v35;
    uint64_t v24 = a4;
    unint64_t v25 = (*(unsigned __int8 *)(v34 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1004EEBB8;
    *(void *)(v26 + 24) = v19;
    *(unsigned char *)(v26 + 32) = v22;
    *(_WORD *)(v26 + 40) = a1;
    *(_WORD *)(v26 + 42) = v31;
    *(void *)(v26 + 48) = v36;
    *(void *)(v26 + 56) = v23;
    sub_100468CE0((uint64_t)v11, v26 + v25);
    uint64_t v27 = *(void *)((char *)v6 + v30);
    swift_bridgeObjectRetain();
    uint64_t v28 = v24;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1004ECB14(v22, v33, v28, v20, (uint64_t (*)(uint64_t))sub_1004EECD0, (uint64_t (*)(uint64_t))v26, v27);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004EBBB0(void *a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v9 = sub_1005E1850();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100715618 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_100715AC0;
  void *v12 = qword_100715AC0;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = (id)v13;
  LOBYTE(v13) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    if (a2)
    {
      if (a2 == 1)
      {
        uint64_t v16 = 0;
      }
      else
      {
        uint64_t v16 = sub_100467AC8(*(void *)(v4 + qword_100762208), *(void *)(v4 + qword_100762208 + 8), v4 + qword_100762210);
        if (v16)
        {
          sub_1004EBE54(a1, v16, v23, (void (*)(void))a3, a4);
          return swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      if (*(unsigned char *)(v4 + qword_100762218) == 2)
      {
        uint64_t v17 = sub_100467AC8(*(void *)(v4 + qword_100762208), *(void *)(v4 + qword_100762208 + 8), v4 + qword_100762210);
        if (v17)
        {
          uint64_t v18 = *(void **)(v17 + 16);
          id v19 = objc_allocWithZone((Class)NSNumber);
          id v20 = v18;
          id v21 = [v19 initWithBool:1];
          NSString v22 = sub_1005E1BD0();
          [v20 setAccountProperty:v21 forKey:v22];
          swift_unknownObjectRelease();
        }
      }
      uint64_t v16 = 1;
    }
    return a3(v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004EBE54(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v76 = a5;
  unsigned int v75 = a4;
  uint64_t v72 = a3;
  uint64_t v73 = a1;
  uint64_t v78 = a2;
  uint64_t v74 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v5 = *(void *)(v74 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  uint64_t v71 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v69 - v7;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v69 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v69 - v11;
  __chkstk_darwin();
  id v14 = (char *)&v69 - v13;
  uint64_t v15 = sub_1005E1850();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (uint64_t *)((char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100715618 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_100715AC0;
  *uint64_t v18 = qword_100715AC0;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = (id)v19;
  LOBYTE(v19) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    sub_1004EEAA4(v77 + qword_100762210, (uint64_t)v14, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    id v22 = *(id *)(v78 + 16);
    uint64_t v23 = (void *)sub_1004ED404();
    if (v23)
    {
      uint64_t v24 = v23;
      unsigned __int8 v25 = [v23 BOOLValue];

      if (v25)
      {
        sub_1004EEAA4((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v26 = sub_1005E0EB0();
        os_log_type_t v27 = sub_1005E25A0();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = 68158210;
          LODWORD(v79) = 2;
          sub_1005E2960();
          *(_WORD *)(v28 + 8) = 256;
          uint64_t v29 = &v12[*(int *)(v74 + 20)];
          LOBYTE(v79) = *v29;
          sub_1005E2960();
          *(_WORD *)(v28 + 11) = 2082;
          uint64_t v30 = ConnectionID.debugDescription.getter(*((unsigned int *)v29 + 1));
          uint64_t v79 = sub_100481E54(v30, v31, &v80);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004EF1B0((uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "[%.*hhx-%{public}s] Another certificate has already been trusted. Failing on certificate change.", (uint8_t *)v28, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1004EF1B0((uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        }

        v75(0);
        return sub_1004EF1B0((uint64_t)v14, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      }
    }
    else
    {
    }
    uint64_t v70 = v5;
    uint64_t v32 = v78;
    id v33 = *(id *)(v78 + 16);
    uint64_t v34 = (void *)sub_1004ED404();
    if (v34)
    {
      uint64_t v35 = v34;
      unsigned __int8 v36 = [v34 BOOLValue];

      if ((v36 & 1) == 0)
      {
        sub_1004EEAA4((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        char v37 = sub_1005E0EB0();
        os_log_type_t v38 = sub_1005E25A0();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v80 = swift_slowAlloc();
          *(_DWORD *)uint64_t v39 = 68158210;
          LODWORD(v79) = 2;
          sub_1005E2960();
          *(_WORD *)(v39 + 8) = 256;
          long long v40 = &v10[*(int *)(v74 + 20)];
          LOBYTE(v79) = *v40;
          sub_1005E2960();
          *(_WORD *)(v39 + 11) = 2082;
          uint64_t v41 = ConnectionID.debugDescription.getter(*((unsigned int *)v40 + 1));
          uint64_t v79 = sub_100481E54(v41, v42, &v80);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004EF1B0((uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "[%.*hhx-%{public}s] User (previously) denied untrusted certificate(s).", (uint8_t *)v39, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1004EF1B0((uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        }

        v75(0);
        return sub_1004EF1B0((uint64_t)v14, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      }
    }
    else
    {
    }
    sub_1004EEAA4((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    swift_unknownObjectRetain_n();
    int64_t v43 = sub_1005E0EB0();
    os_log_type_t v44 = sub_1005E25C0();
    if (!os_log_type_enabled(v43, v44))
    {
      swift_unknownObjectRelease();
      sub_1004EF1B0((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v54 = sub_10048C5F0();
      unint64_t v56 = v55;
      id v57 = *(id *)(v32 + 16);
      char v58 = 1;
      uint64_t v59 = (void *)sub_1004ED404();
      uint64_t v77 = v54;
      if (v59)
      {
        uint64_t v60 = v59;
        char v58 = [v59 BOOLValue];

        id v57 = v60;
      }

      uint64_t v61 = v71;
      sub_1004EEAA4((uint64_t)v14, v71, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      unint64_t v62 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      unint64_t v63 = (v6 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v64 = swift_allocObject();
      sub_100468CE0(v61, v64 + v62);
      BOOL v65 = (void *)(v64 + v63);
      uint64_t v66 = v72;
      *BOOL v65 = v78;
      v65[1] = v66;
      char v67 = (void *)(v64 + ((v63 + 23) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v68 = v76;
      *char v67 = v75;
      v67[1] = v68;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1004EC89C(v77, v56, v73, v58, (uint64_t)sub_1004EF360, v64);
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1004EF1B0((uint64_t)v14, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    }
    uint64_t v45 = swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v80 = v69;
    *(_DWORD *)uint64_t v45 = 68158466;
    LODWORD(v79) = 2;
    sub_1005E2960();
    *(_WORD *)(v45 + 8) = 256;
    uint64_t v46 = &v8[*(int *)(v74 + 20)];
    LOBYTE(v79) = *v46;
    sub_1005E2960();
    *(_WORD *)(v45 + 11) = 2082;
    uint64_t v47 = ConnectionID.debugDescription.getter(*((unsigned int *)v46 + 1));
    uint64_t v79 = sub_100481E54(v47, v48, &v80);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1004EF1B0((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    *(_WORD *)(v45 + 21) = 1024;
    id v49 = *(id *)(v32 + 16);
    uint64_t v50 = (void *)sub_1004ED404();
    if (v50)
    {
      uint64_t v51 = v50;
      unsigned __int8 v52 = [v50 BOOLValue];
      swift_unknownObjectRelease();

      if ((v52 & 1) == 0)
      {
        int v53 = 0;
LABEL_25:
        LODWORD(v79) = v53;
        sub_1005E2960();
        uint64_t v32 = v78;
        swift_unknownObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "[%.*hhx-%{public}s] [Prompt] Prompting user about untrusted certificate(s) (allowTrust: %{BOOL}d).", (uint8_t *)v45, 0x1Bu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_26;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    int v53 = 1;
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004EC89C(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  sub_10000566C(&qword_100717A18);
  if (a4)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6670;
    sub_1005E2BF0();
    id v12 = [objc_allocWithZone((Class)NSNumber) initWithBool:0];
    *(void *)(inited + 96) = sub_1003C8730(0, &qword_100717A20);
    *(void *)(inited + 72) = v12;
  }
  else
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005F6690;
    sub_1005E2BF0();
    id v13 = [objc_allocWithZone((Class)NSNumber) initWithBool:0];
    uint64_t v14 = sub_1003C8730(0, &qword_100717A20);
    *(void *)(inited + 96) = v14;
    *(void *)(inited + 72) = v13;
    sub_1005E2BF0();
    id v15 = [objc_allocWithZone((Class)NSNumber) initWithBool:0];
    *(void *)(inited + 168) = v14;
    *(void *)(inited + 144) = v15;
  }
  unint64_t v16 = sub_1004EDBD0(inited);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  id v18 = a3;
  swift_retain();
  CertUITrustManager.showPrompt(hostname:service:trust:options:_:)(a1, a2, 0xD000000000000016, (NSString)0x80000001005EB870, (uint64_t)a3, v16, (uint64_t)sub_1004EF410, v17);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1004ECB14(unsigned __int8 a1, uint64_t a2, __SecTrust *a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v55 = a2;
  uint64_t v56 = a7;
  BOOL v65 = a6;
  uint64_t v66 = a5;
  uint64_t v63 = a4;
  SecTrustRef v64 = a3;
  unsigned int v7 = a1;
  uint64_t v62 = sub_1005E0ED0();
  uint64_t v54 = *(void *)(v62 - 8);
  __chkstk_darwin();
  int v53 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E1680();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  __chkstk_darwin();
  char v58 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1005E16C0();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin();
  id v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v13 = *(void *)(v52 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin();
  __chkstk_darwin();
  unint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = sub_1005E10E0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin();
  id v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v7 >= 2)
  {
    uint64_t v62 = (uint64_t)v12;
    if (qword_100715618 != -1) {
      swift_once();
    }
    uint64_t v54 = qword_100715AC0;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v55, v17);
    sub_1004EEAA4(v63, (uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    unint64_t v40 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v41 = (v19 + *(unsigned __int8 *)(v13 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v42 = swift_allocObject();
    SecTrustRef v43 = v64;
    *(void *)(v42 + 16) = v56;
    *(void *)(v42 + 24) = v43;
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v42 + v40, v20, v17);
    sub_100468CE0((uint64_t)v16, v42 + v41);
    os_log_type_t v44 = (uint64_t (**)(uint64_t))(v42 + ((v14 + v41 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v45 = v65;
    *os_log_type_t v44 = v66;
    v44[1] = v45;
    uint64_t v72 = sub_1004EEEDC;
    uint64_t v73 = v42;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v69 = 1107296256;
    uint64_t v70 = sub_100469020;
    uint64_t v71 = &unk_1006FB238;
    uint64_t v46 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v47 = v43;
    swift_retain();
    uint64_t v48 = v62;
    sub_1005E16A0();
    char v67 = _swiftEmptyArrayStorage;
    sub_1004EF210((unint64_t *)&unk_100717760, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000566C(&qword_100715C98);
    sub_100057E98((unint64_t *)&qword_100717770, &qword_100715C98);
    id v49 = v58;
    uint64_t v50 = v61;
    sub_1005E2AD0();
    sub_1005E2610();
    _Block_release(v46);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v49, v50);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v48, v59);
    return swift_release();
  }
  else
  {
    id v21 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (qword_100715618 != -1) {
      swift_once();
    }
    id v22 = qword_100715AC0;
    uint64_t v23 = v63;
    sub_1004EEAA4(v63, (uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v65;
    *(void *)(v25 + 16) = v66;
    *(void *)(v25 + 24) = v26;
    sub_100468CE0((uint64_t)v16, v25 + v24);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_1004EF0BC;
    *(void *)(v27 + 24) = v25;
    uint64_t v72 = sub_1004EF178;
    uint64_t v73 = v27;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v69 = 1107296256;
    uint64_t v70 = sub_1004ED518;
    uint64_t v71 = &unk_1006FB2B0;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    LODWORD(v22) = SecTrustEvaluateAsyncWithError(v64, v22, v28);
    _Block_release(v28);
    swift_release();
    uint64_t result = swift_release();
    uint64_t v30 = v62;
    if (v22)
    {
      uint64_t v32 = v53;
      uint64_t v31 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v23, v62);
      id v33 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1004EEAA4(v23, (uint64_t)v21, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v34 = sub_1005E0EB0();
      os_log_type_t v35 = sub_1005E25A0();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 68158210;
        LODWORD(v67) = 2;
        sub_1005E2960();
        *(_WORD *)(v36 + 8) = 256;
        char v37 = &v21[*(int *)(v52 + 20)];
        LOBYTE(v67) = *v37;
        sub_1005E2960();
        *(_WORD *)(v36 + 11) = 2082;
        uint64_t v38 = ConnectionID.debugDescription.getter(*((unsigned int *)v37 + 1));
        char v67 = (void *)sub_100481E54(v38, v39, &aBlock);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004EF1B0((uint64_t)v33, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "[%.*hhx-%{public}s] SecTrustEvaluateAsyncWithError() failed.", (uint8_t *)v36, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v30);
      }
      else
      {
        sub_1004EF1B0((uint64_t)v21, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
      }
      return v66(5);
    }
  }
  return result;
}

uint64_t sub_1004ED404()
{
  NSString v1 = sub_1005E1BD0();
  swift_bridgeObjectRelease();
  id v2 = [v0 accountPropertyForKey:v1];

  if (v2
    && (sub_1005E2A70(),
        swift_unknownObjectRelease(),
        sub_100353CB8(v5, v6),
        sub_100353CB8(v6, v5),
        sub_1003C8730(0, &qword_100717A20),
        (swift_dynamicCast() & 1) != 0))
  {
    return v4;
  }
  else
  {
    return 0;
  }
}

void sub_1004ED518(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  unsigned int v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(v9, a3, a4);
  swift_release();
}

uint64_t sub_1004ED5AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t), uint64_t a6)
{
  uint64_t v40 = a6;
  unint64_t v41 = a5;
  uint64_t v38 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v37 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v42 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v42 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v37 - v14;
  id v16 = a2;
  uint64_t v17 = sub_10048C5F0();
  unsigned int v19 = CertUITrustManager.rawTrustResult(forSSLTrust:hostname:service:)((uint64_t)a2, v17, v18, 0xD000000000000016, (void *)0x80000001005EB870);

  swift_bridgeObjectRelease();
  uint64_t v39 = v11;
  id v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  if (v19 == 1)
  {
    v20(v15, a4, v42);
    sub_1004EEAA4(a4, (uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    id v21 = sub_1005E0EB0();
    os_log_type_t v22 = sub_1005E2580();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 68158466;
      LODWORD(v43) = 2;
      sub_1005E2960();
      *(_WORD *)(v23 + 8) = 256;
      unint64_t v24 = &v10[*(int *)(v38 + 20)];
      LOBYTE(v43) = *v24;
      sub_1005E2960();
      *(_WORD *)(v23 + 11) = 2082;
      uint64_t v25 = ConnectionID.debugDescription.getter(*((unsigned int *)v24 + 1));
      uint64_t v43 = sub_100481E54(v25, v26, &v44);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004EF1B0((uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v23 + 21) = 1024;
      LODWORD(v43) = 1;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%.*hhx-%{public}s] Got %u from CertUI.", (uint8_t *)v23, 0x1Bu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004EF1B0((uint64_t)v10, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v42);
    unint64_t v35 = 0;
  }
  else
  {
    uint64_t v27 = v13;
    v20(v13, a4, v42);
    uint64_t v28 = v37;
    sub_1004EEAA4(a4, v37, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v29 = sub_1005E0EB0();
    os_log_type_t v30 = sub_1005E25C0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 68158466;
      LODWORD(v43) = 2;
      sub_1005E2960();
      *(_WORD *)(v31 + 8) = 256;
      uint64_t v32 = v28 + *(int *)(v38 + 20);
      LOBYTE(v43) = *(unsigned char *)v32;
      sub_1005E2960();
      *(_WORD *)(v31 + 11) = 2082;
      uint64_t v33 = ConnectionID.debugDescription.getter(*(unsigned int *)(v32 + 4));
      uint64_t v43 = sub_100481E54(v33, v34, &v44);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004EF1B0(v28, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v31 + 21) = 1024;
      LODWORD(v43) = v19;
      sub_1005E2960();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%.*hhx-%{public}s] Got %u from CertUI.", (uint8_t *)v31, 0x1Bu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004EF1B0(v28, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v42);
    if (v19 >= 8) {
      unint64_t v35 = 5;
    }
    else {
      unint64_t v35 = 0x504030201050505uLL >> (8 * v19);
    }
  }
  return v41(v35);
}

unint64_t sub_1004EDBD0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000566C(&qword_100717A28);
  uint64_t v2 = sub_1005E2FF0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1004EF418(v6, (uint64_t)v15);
    unint64_t result = sub_1004EE0C8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100353CB8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004EDD00(uint64_t a1)
{
  sub_1005E1430();
  swift_allocObject();
  uint64_t v2 = sub_1005E1420();
  uint64_t v3 = sub_1005E1410();
  sec_protocol_options_add_tls_application_protocol(v3, "imap");
  swift_unknownObjectRelease();
  uint64_t v4 = sub_1005E1410();
  uint64_t v7[4] = sub_1004EEB0C;
  v7[5] = a1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  uint64_t v7[2] = sub_1004EB6B8;
  _OWORD v7[3] = &unk_1006FB148;
  uint64_t v5 = _Block_copy(v7);
  swift_retain();
  swift_release();
  if (qword_100715618 != -1) {
    swift_once();
  }
  sec_protocol_options_set_verify_block(v4, v5, (dispatch_queue_t)qword_100715AC0);
  _Block_release(v5);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1004EDE4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(1);
}

uint64_t sub_1004EDE78()
{
  uint64_t v0 = sub_1005E2600();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005E25F0();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1005E16C0();
  __chkstk_darwin(v5 - 8);
  sub_1003C8730(0, (unint64_t *)&qword_100715C18);
  sub_1005E16A0();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1004EF210((unint64_t *)&qword_100717920, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000566C(&qword_100715C20);
  sub_100057E98((unint64_t *)&qword_100717930, &qword_100715C20);
  sub_1005E2AD0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = sub_1005E2620();
  qword_100717910 = result;
  return result;
}

unint64_t sub_1004EE0C8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1005E2BC0(*(void *)(v2 + 40));
  return sub_1004EE10C(a1, v4);
}

unint64_t sub_1004EE10C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1004EF480(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1005E2BD0();
      sub_1004EF4DC((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void sub_1004EE1D4(char a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  long long v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E0ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v16 = 0;
LABEL_7:
    a3(v16);
    return;
  }
  if (!a2)
  {
    uint64_t v16 = 1;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  sub_1004EEAA4(a5, (uint64_t)v11, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  id v17 = a2;
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  id v18 = v17;
  unsigned int v19 = sub_1005E0EB0();
  os_log_type_t v20 = sub_1005E25A0();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    int v34 = v21;
    uint64_t v23 = v22;
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v39 = v35;
    *(_DWORD *)uint64_t v23 = 68158466;
    LODWORD(v38) = 2;
    id v36 = v18;
    sub_1005E2960();
    *(_WORD *)(v23 + 8) = 256;
    uint64_t v24 = *(int *)(v9 + 20);
    os_log_t v32 = v19;
    uint64_t v25 = &v11[v24];
    LOBYTE(v38) = v11[v24];
    sub_1005E2960();
    *(_WORD *)(v23 + 11) = 2082;
    uint64_t v37 = a3;
    uint64_t v26 = ConnectionID.debugDescription.getter(*((unsigned int *)v25 + 1));
    uint64_t v38 = sub_100481E54(v26, v27, &v39);
    id v18 = v36;
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1004EF1B0((uint64_t)v11, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    *(_WORD *)(v23 + 21) = 2112;
    type metadata accessor for CFError(0);
    sub_1004EF210(&qword_100717A08, type metadata accessor for CFError);
    swift_allocError();
    *uint64_t v28 = v18;
    id v29 = v18;
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v38 = v30;
    sub_1005E2960();
    *uint64_t v33 = v30;

    a3 = v37;
    os_log_t v31 = v32;
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v34, "[%.*hhx-%{public}s] SecTrustEvaluateAsyncWithError() completed with error: %@", (uint8_t *)v23, 0x1Fu);
    sub_10000566C(&qword_100717A10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1004EF1B0((uint64_t)v11, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a3(1);
}

uint64_t sub_1004EE628(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E10E0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ConnectionConfiguration(0);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004EEAA4(a1, (uint64_t)v16, type metadata accessor for ConnectionConfiguration);
  sub_1004EEAA4(a3, (uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v16, v6);
  id v17 = &v16[*(int *)(v14 + 48)];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  uint64_t v20 = qword_100715620;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_100715AC8;
  swift_retain();
  sub_1004EF1B0((uint64_t)v16, type metadata accessor for ConnectionConfiguration);
  sub_10000566C(&qword_100717938);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + *(void *)(*(void *)v22 + 136)) = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v22 + qword_100762200, v9, v6);
  uint64_t v23 = (void *)(v22 + qword_100762208);
  *uint64_t v23 = v19;
  v23[1] = v18;
  *(unsigned char *)(v22 + qword_100762218) = a2;
  sub_100468CE0((uint64_t)v12, v22 + qword_100762210);
  uint64_t v24 = sub_1004EDD00(v22);
  swift_release();
  return v24;
}

uint64_t sub_1004EE8F8()
{
  sub_1005E1430();
  swift_allocObject();
  uint64_t v0 = sub_1005E1420();
  uint64_t v1 = sub_1005E1410();
  sec_protocol_options_add_tls_application_protocol(v1, "imap");
  swift_unknownObjectRelease();
  uint64_t v2 = sub_1005E1410();
  sec_protocol_options_set_min_tls_protocol_version(v2, tls_protocol_version_TLSv10);
  swift_unknownObjectRelease();
  uint64_t v3 = sub_1005E1410();
  void v6[4] = sub_1004EDE4C;
  v6[5] = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1004EB6B8;
  v6[3] = &unk_1006FB0F8;
  unint64_t v4 = _Block_copy(v6);
  if (qword_100715640 != -1) {
    swift_once();
  }
  sec_protocol_options_set_verify_block(v3, v4, (dispatch_queue_t)qword_100717910);
  _Block_release(v4);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1004EEA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004EEA4C()
{
  return swift_release();
}

uint64_t sub_1004EEA54()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004EEA8C(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1004EEAA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004EEB10()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004EEB60()
{
  return sub_1004EB784(*(void *)(v0 + 16), *(NSObject **)(v0 + 24), *(NSObject **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1004EEB70()
{
  swift_release();

  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004EEBB8(char a1)
{
  return sub_1004EBBB0(*(void **)(v1 + 24), a1, *(uint64_t (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1004EEBE8()
{
  uint64_t v1 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 64) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1004EECD0(int a1)
{
  uint64_t v3 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  int v6 = *(_DWORD *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  unsigned __int8 v10 = *(unsigned char *)(v1 + 32);
  return sub_100466E9C(a1, v4, v5, v10, v6, v7, v8, v9);
}

uint64_t sub_1004EED50()
{
  uint64_t v1 = sub_1005E10E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);
  swift_release();
  return _swift_deallocObject(v0, v10, v9);
}

uint64_t sub_1004EEEDC()
{
  uint64_t v1 = *(void *)(sub_1005E10E0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(uint64_t (**)(unint64_t))v7;
  uint64_t v9 = *(void *)(v7 + 8);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = *(void **)(v0 + 24);
  return sub_1004ED5AC(v10, v11, v0 + v2, v6, v8, v9);
}

uint64_t sub_1004EEFDC()
{
  uint64_t v1 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  return _swift_deallocObject(v0, v4, v5);
}

void sub_1004EF0BC(uint64_t a1, char a2, void *a3)
{
  uint64_t v6 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v7 = *(void (**)(uint64_t))(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  sub_1004EE1D4(a2, a3, v7, v8, v9);
}

uint64_t sub_1004EF140()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004EF178(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1004EF1B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004EF210(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004EF258()
{
  uint64_t v1 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, v5 + 16, v4);
}

uint64_t sub_1004EF360(char a1)
{
  uint64_t v3 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1 + v4;
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(uint64_t (**)(uint64_t))v9;
  uint64_t v11 = *(void *)(v9 + 8);
  return sub_1004666A8(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1004EF410(int a1)
{
  return sub_100467A8C(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1004EF418(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C((uint64_t *)&unk_100717A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EF480(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004EF4DC(uint64_t a1)
{
  return a1;
}

char *sub_1004EF554(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v9 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v9;
        uint64_t v10 = *(int *)(type metadata accessor for Authenticator() + 32);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = (int *)type metadata accessor for AuthenticationTask();
        uint64_t v55 = *((void *)v13 - 1);
        uint64_t v14 = *(unsigned int (**)(char *, uint64_t, int *))(v55 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v14(v12, 1, v13))
        {
          uint64_t v15 = sub_10000566C(&qword_100715848);
          memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          long long v46 = *(_OWORD *)(v12 + 24);
          *(_OWORD *)(v11 + 24) = v46;
          (**(void (***)(char *, char *))(v46 - 8))(v11, v12);
          uint64_t v47 = *((void *)v12 + 5);
          unint64_t v48 = *((void *)v12 + 6);
          sub_10044461C(v47, v48);
          *((void *)v11 + 5) = v47;
          *((void *)v11 + 6) = v48;
          uint64_t v49 = v13[5];
          uint64_t v50 = &v11[v49];
          uint64_t v51 = &v12[v49];
          uint64_t v52 = sub_1005E0ED0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
          uint64_t v53 = _s14descr1006B94C1C6LoggerVMa();
          *(void *)&v50[*(int *)(v53 + 20)] = *(void *)&v51[*(int *)(v53 + 20)];
          v11[v13[6]] = v12[v13[6]];
          *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
          v11[v13[8]] = v12[v13[8]];
          uint64_t v54 = *(void (**)(char *, void, uint64_t, int *))(v55 + 56);
          swift_bridgeObjectRetain();
          v54(v11, 0, 1, v13);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
        uint64_t v32 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v32;
        uint64_t v33 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v33;
        uint64_t v34 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v34;
        uint64_t v35 = *((void *)a2 + 7);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = v35;
        uint64_t v36 = *((void *)a2 + 9);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = v36;
        uint64_t v37 = *((void *)a2 + 11);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = v37;
        uint64_t v38 = *((void *)a2 + 13);
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = v38;
        uint64_t v39 = *((void *)a2 + 15);
        *((void *)a1 + 14) = *((void *)a2 + 14);
        *((void *)a1 + 15) = v39;
        uint64_t v40 = *((void *)a2 + 17);
        *((void *)a1 + 16) = *((void *)a2 + 16);
        *((void *)a1 + 17) = v40;
        uint64_t v41 = *((void *)a2 + 19);
        *((void *)a1 + 18) = *((void *)a2 + 18);
        *((void *)a1 + 19) = v41;
        uint64_t v42 = *((void *)a2 + 21);
        *((void *)a1 + 20) = *((void *)a2 + 20);
        *((void *)a1 + 21) = v42;
        *((void *)a1 + 22) = *((void *)a2 + 22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v16 = *((void *)a2 + 2);
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = v16;
        uint64_t v17 = *((void *)a2 + 4);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = v17;
        uint64_t v18 = *((void *)a2 + 6);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = v18;
        uint64_t v19 = *((void *)a2 + 8);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = v19;
        uint64_t v20 = *((void *)a2 + 10);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = v20;
        uint64_t v21 = *((void *)a2 + 12);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        *((void *)a1 + 12) = v21;
        uint64_t v22 = *((void *)a2 + 14);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        *((void *)a1 + 14) = v22;
        uint64_t v23 = *((void *)a2 + 16);
        *((void *)a1 + 15) = *((void *)a2 + 15);
        *((void *)a1 + 16) = v23;
        uint64_t v24 = *((void *)a2 + 18);
        *((void *)a1 + 17) = *((void *)a2 + 17);
        *((void *)a1 + 18) = v24;
        uint64_t v25 = *((void *)a2 + 20);
        *((void *)a1 + 19) = *((void *)a2 + 19);
        *((void *)a1 + 20) = v25;
        uint64_t v26 = *((void *)a2 + 22);
        *((void *)a1 + 21) = *((void *)a2 + 21);
        *((void *)a1 + 22) = v26;
        uint64_t v27 = *((void *)a2 + 24);
        *((void *)a1 + 23) = *((void *)a2 + 23);
        *((void *)a1 + 24) = v27;
        uint64_t v28 = *((void *)a2 + 26);
        *((void *)a1 + 25) = *((void *)a2 + 25);
        *((void *)a1 + 26) = v28;
        uint64_t v29 = *((void *)a2 + 28);
        *((void *)a1 + 27) = *((void *)a2 + 27);
        *((void *)a1 + 28) = v29;
        uint64_t v30 = *((void *)a2 + 29);
        uint64_t v31 = *((void *)a2 + 30);
        *((void *)a1 + 29) = v30;
        *((void *)a1 + 30) = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v43 = *(void *)a2;
        uint64_t v44 = *((void *)a2 + 1);
        char v45 = a2[16];
        sub_1004A9860(v43, v44, v45);
        *(void *)a1 = v43;
        *((void *)a1 + 1) = v44;
        a1[16] = v45;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1004EFD78(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      goto LABEL_10;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(type metadata accessor for Authenticator() + 32);
      uint64_t v4 = type metadata accessor for AuthenticationTask();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
      if (result) {
        return result;
      }
      _s13IMAP2Behavior4TaskOwxx_0(v3);
      sub_100444674(*(void *)(v3 + 40), *(void *)(v3 + 48));
      uint64_t v8 = v3 + *(int *)(v4 + 20);
      uint64_t v9 = sub_1005E0ED0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
LABEL_10:
      return swift_bridgeObjectRelease();
    case 4:
    case 5:
    case 6:
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 9:
      uint64_t v5 = *(void *)a1;
      uint64_t v6 = *(void *)(a1 + 8);
      char v7 = *(unsigned char *)(a1 + 16);
      return sub_10046564C(v5, v6, v7);
    default:
      return result;
  }
}

char *sub_1004EFFEC(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 2u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v6 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v6;
      uint64_t v7 = *(int *)(type metadata accessor for Authenticator() + 32);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = (int *)type metadata accessor for AuthenticationTask();
      uint64_t v53 = *((void *)v10 - 1);
      uint64_t v11 = *(unsigned int (**)(char *, uint64_t, int *))(v53 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11(v9, 1, v10))
      {
        uint64_t v12 = sub_10000566C(&qword_100715848);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        long long v43 = *(_OWORD *)(v9 + 24);
        *(_OWORD *)(v8 + 24) = v43;
        (**(void (***)(char *, char *))(v43 - 8))(v8, v9);
        uint64_t v44 = *((void *)v9 + 5);
        unint64_t v45 = *((void *)v9 + 6);
        sub_10044461C(v44, v45);
        *((void *)v8 + 5) = v44;
        *((void *)v8 + 6) = v45;
        uint64_t v46 = v10[5];
        uint64_t v47 = &v8[v46];
        unint64_t v48 = &v9[v46];
        uint64_t v49 = sub_1005E0ED0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
        uint64_t v50 = _s14descr1006B94C1C6LoggerVMa();
        *(void *)&v47[*(int *)(v50 + 20)] = *(void *)&v48[*(int *)(v50 + 20)];
        v8[v10[6]] = v9[v10[6]];
        *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
        v8[v10[8]] = v9[v10[8]];
        uint64_t v51 = *(void (**)(char *, void, uint64_t, int *))(v53 + 56);
        swift_bridgeObjectRetain();
        v51(v8, 0, 1, v10);
      }
      goto LABEL_10;
    case 4u:
    case 5u:
    case 6u:
    case 8u:
      uint64_t v29 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v29;
      uint64_t v30 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v30;
      uint64_t v31 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v31;
      uint64_t v32 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v32;
      uint64_t v33 = *((void *)a2 + 9);
      *((void *)a1 + 8) = *((void *)a2 + 8);
      *((void *)a1 + 9) = v33;
      uint64_t v34 = *((void *)a2 + 11);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      *((void *)a1 + 11) = v34;
      uint64_t v35 = *((void *)a2 + 13);
      *((void *)a1 + 12) = *((void *)a2 + 12);
      *((void *)a1 + 13) = v35;
      uint64_t v36 = *((void *)a2 + 15);
      *((void *)a1 + 14) = *((void *)a2 + 14);
      *((void *)a1 + 15) = v36;
      uint64_t v37 = *((void *)a2 + 17);
      *((void *)a1 + 16) = *((void *)a2 + 16);
      *((void *)a1 + 17) = v37;
      uint64_t v38 = *((void *)a2 + 19);
      *((void *)a1 + 18) = *((void *)a2 + 18);
      *((void *)a1 + 19) = v38;
      uint64_t v39 = *((void *)a2 + 21);
      *((void *)a1 + 20) = *((void *)a2 + 20);
      *((void *)a1 + 21) = v39;
      *((void *)a1 + 22) = *((void *)a2 + 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 7u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v13 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v13;
      uint64_t v14 = *((void *)a2 + 4);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = v14;
      uint64_t v15 = *((void *)a2 + 6);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = v15;
      uint64_t v16 = *((void *)a2 + 8);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = v16;
      uint64_t v17 = *((void *)a2 + 10);
      *((void *)a1 + 9) = *((void *)a2 + 9);
      *((void *)a1 + 10) = v17;
      uint64_t v18 = *((void *)a2 + 12);
      *((void *)a1 + 11) = *((void *)a2 + 11);
      *((void *)a1 + 12) = v18;
      uint64_t v19 = *((void *)a2 + 14);
      *((void *)a1 + 13) = *((void *)a2 + 13);
      *((void *)a1 + 14) = v19;
      uint64_t v20 = *((void *)a2 + 16);
      *((void *)a1 + 15) = *((void *)a2 + 15);
      *((void *)a1 + 16) = v20;
      uint64_t v21 = *((void *)a2 + 18);
      *((void *)a1 + 17) = *((void *)a2 + 17);
      *((void *)a1 + 18) = v21;
      uint64_t v22 = *((void *)a2 + 20);
      *((void *)a1 + 19) = *((void *)a2 + 19);
      *((void *)a1 + 20) = v22;
      uint64_t v23 = *((void *)a2 + 22);
      *((void *)a1 + 21) = *((void *)a2 + 21);
      *((void *)a1 + 22) = v23;
      uint64_t v24 = *((void *)a2 + 24);
      *((void *)a1 + 23) = *((void *)a2 + 23);
      *((void *)a1 + 24) = v24;
      uint64_t v25 = *((void *)a2 + 26);
      *((void *)a1 + 25) = *((void *)a2 + 25);
      *((void *)a1 + 26) = v25;
      uint64_t v26 = *((void *)a2 + 28);
      *((void *)a1 + 27) = *((void *)a2 + 27);
      *((void *)a1 + 28) = v26;
      uint64_t v27 = *((void *)a2 + 29);
      uint64_t v28 = *((void *)a2 + 30);
      *((void *)a1 + 29) = v27;
      *((void *)a1 + 30) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 9u:
      uint64_t v40 = *(void *)a2;
      uint64_t v41 = *((void *)a2 + 1);
      char v42 = a2[16];
      sub_1004A9860(v40, v41, v42);
      *(void *)a1 = v40;
      *((void *)a1 + 1) = v41;
      a1[16] = v42;
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1004F07A8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004FE8B4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 2u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        uint64_t v6 = *(int *)(type metadata accessor for Authenticator() + 32);
        uint64_t v7 = &a1[v6];
        uint64_t v8 = &a2[v6];
        uint64_t v9 = (int *)type metadata accessor for AuthenticationTask();
        uint64_t v25 = *((void *)v9 - 1);
        uint64_t v10 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v10(v8, 1, v9))
        {
          uint64_t v11 = sub_10000566C(&qword_100715848);
          memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          uint64_t v15 = *((void *)v8 + 3);
          *((void *)v7 + 3) = v15;
          *((void *)v7 + 4) = *((void *)v8 + 4);
          (**(void (***)(char *, char *))(v15 - 8))(v7, v8);
          uint64_t v16 = *((void *)v8 + 5);
          unint64_t v17 = *((void *)v8 + 6);
          sub_10044461C(v16, v17);
          *((void *)v7 + 5) = v16;
          *((void *)v7 + 6) = v17;
          uint64_t v18 = v9[5];
          uint64_t v19 = &v7[v18];
          uint64_t v20 = &v8[v18];
          uint64_t v21 = sub_1005E0ED0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
          uint64_t v22 = _s14descr1006B94C1C6LoggerVMa();
          *(void *)&v19[*(int *)(v22 + 20)] = *(void *)&v20[*(int *)(v22 + 20)];
          v7[v9[6]] = v8[v9[6]];
          *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
          v7[v9[8]] = v8[v9[8]];
          uint64_t v23 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
          swift_bridgeObjectRetain();
          v23(v7, 0, 1, v9);
        }
        goto LABEL_11;
      case 4u:
      case 5u:
      case 6u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        *((void *)a1 + 14) = *((void *)a2 + 14);
        *((void *)a1 + 15) = *((void *)a2 + 15);
        *((void *)a1 + 16) = *((void *)a2 + 16);
        *((void *)a1 + 17) = *((void *)a2 + 17);
        *((void *)a1 + 18) = *((void *)a2 + 18);
        *((void *)a1 + 19) = *((void *)a2 + 19);
        *((void *)a1 + 20) = *((void *)a2 + 20);
        *((void *)a1 + 21) = *((void *)a2 + 21);
        *((void *)a1 + 22) = *((void *)a2 + 22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 7u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        *((void *)a1 + 12) = *((void *)a2 + 12);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        *((void *)a1 + 14) = *((void *)a2 + 14);
        *((void *)a1 + 15) = *((void *)a2 + 15);
        *((void *)a1 + 16) = *((void *)a2 + 16);
        *((void *)a1 + 17) = *((void *)a2 + 17);
        *((void *)a1 + 18) = *((void *)a2 + 18);
        *((void *)a1 + 19) = *((void *)a2 + 19);
        *((void *)a1 + 20) = *((void *)a2 + 20);
        *((void *)a1 + 21) = *((void *)a2 + 21);
        *((void *)a1 + 22) = *((void *)a2 + 22);
        *((void *)a1 + 23) = *((void *)a2 + 23);
        *((void *)a1 + 24) = *((void *)a2 + 24);
        *((void *)a1 + 25) = *((void *)a2 + 25);
        *((void *)a1 + 26) = *((void *)a2 + 26);
        *((void *)a1 + 27) = *((void *)a2 + 27);
        *((void *)a1 + 28) = *((void *)a2 + 28);
        *((void *)a1 + 29) = *((void *)a2 + 29);
        *((void *)a1 + 30) = *((void *)a2 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 9u:
        uint64_t v12 = *(void *)a2;
        uint64_t v13 = *((void *)a2 + 1);
        char v14 = a2[16];
        sub_1004A9860(v12, v13, v14);
        *(void *)a1 = v12;
        *((void *)a1 + 1) = v13;
        a1[16] = v14;
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for UnauthenticatedState()
{
  uint64_t result = qword_100717AB0;
  if (!qword_100717AB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_1004F11B8(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    uint64_t v6 = *(int *)(type metadata accessor for Authenticator() + 32);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = (int *)type metadata accessor for AuthenticationTask();
    uint64_t v10 = *((void *)v9 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_10000566C(&qword_100715848);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      long long v12 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v12;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *((void *)v7 + 6) = *((void *)v8 + 6);
      uint64_t v13 = v9[5];
      char v14 = &v7[v13];
      uint64_t v15 = &v8[v13];
      uint64_t v16 = sub_1005E0ED0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      uint64_t v17 = _s14descr1006B94C1C6LoggerVMa();
      *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
      v7[v9[6]] = v8[v9[6]];
      *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
      v7[v9[8]] = v8[v9[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1004F13B4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004FE8B4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      uint64_t v6 = *(int *)(type metadata accessor for Authenticator() + 32);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = (int *)type metadata accessor for AuthenticationTask();
      uint64_t v10 = *((void *)v9 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_10000566C(&qword_100715848);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        long long v12 = *((_OWORD *)v8 + 1);
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        *((_OWORD *)v7 + 1) = v12;
        *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        uint64_t v13 = v9[5];
        char v14 = &v7[v13];
        uint64_t v15 = &v8[v13];
        uint64_t v16 = sub_1005E0ED0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        uint64_t v17 = _s14descr1006B94C1C6LoggerVMa();
        *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
        v7[v9[6]] = v8[v9[6]];
        *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
        v7[v9[8]] = v8[v9[8]];
        (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004F15D4()
{
  uint64_t result = type metadata accessor for Authenticator();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1004F1698(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1004D09A8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_1004F17E0(char *result, char *a2)
{
  int64_t v5 = a2 - result;
  if (result) {
    int64_t v6 = a2 - result;
  }
  else {
    int64_t v6 = 0;
  }
  uint64_t v7 = *(void **)v2;
  int64_t v8 = *(void *)(*(void *)v2 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v3 = a2;
  int64_t v4 = result;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || (int64_t v10 = v7[3] >> 1, v10 < v9))
  {
    if (v8 <= v9) {
      int64_t v11 = v8 + v6;
    }
    else {
      int64_t v11 = v8;
    }
    uint64_t result = (char *)sub_1004D09A8(result, v11, 1, v7);
    uint64_t v7 = result;
    int64_t v10 = *((void *)result + 3) >> 1;
  }
  uint64_t v12 = v7[2];
  int64_t v13 = v10 - v12;
  int64_t v14 = 0;
  if (v4 && v3 && v4 < v3 && v10 != v12)
  {
    if (v5 >= v13) {
      int64_t v14 = v10 - v12;
    }
    else {
      int64_t v14 = v5;
    }
    if (v14 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t result = (char *)memmove((char *)v7 + v12 + 32, v4, v14);
    v4 += v14;
  }
  if (v14 < v6) {
    goto LABEL_27;
  }
  if (v14)
  {
    uint64_t v15 = v7[2];
    BOOL v16 = __OFADD__(v15, v14);
    int64_t v17 = v15 + v14;
    if (v16)
    {
      __break(1u);
      goto LABEL_33;
    }
    void v7[2] = v17;
  }
  if (v14 != v13) {
    goto LABEL_25;
  }
LABEL_28:
  int64_t v17 = v7[2];
  if (!v4)
  {
LABEL_33:
    if (!v3) {
      goto LABEL_25;
    }
    int64_t v4 = 0;
    goto LABEL_35;
  }
  if (!v3 || v4 != v3)
  {
LABEL_35:
    char v20 = *v4;
    uint64_t v18 = v4 + 1;
    char v19 = v20;
    while (1)
    {
      while (1)
      {
        unint64_t v21 = v7[3];
        int64_t v22 = v21 >> 1;
        uint64_t v23 = v17 + 1;
        if ((uint64_t)(v21 >> 1) >= v17 + 1) {
          break;
        }
        uint64_t v26 = v7;
        int64_t v27 = v17;
        uint64_t result = (char *)sub_1004D09A8((void *)(v21 > 1), v17 + 1, 1, v26);
        int64_t v17 = v27;
        uint64_t v7 = result;
        int64_t v22 = *((void *)result + 3) >> 1;
        if (v17 < v22) {
          goto LABEL_39;
        }
LABEL_36:
        void v7[2] = v17;
      }
      if (v17 >= v22) {
        goto LABEL_36;
      }
LABEL_39:
      *((unsigned char *)v7 + v17 + 32) = v19;
      if (v3 && v3 == v18)
      {
LABEL_49:
        void v7[2] = v23;
        break;
      }
      uint64_t v24 = 0;
      while (1)
      {
        uint64_t v25 = (uint64_t)&v18[v24 + 1];
        char v19 = v18[v24];
        if (~v17 + v22 == v24) {
          break;
        }
        *((unsigned char *)v7 + v17 + v24++ + 33) = v19;
        if (v3 && (char *)v25 == v3)
        {
          uint64_t v23 = v17 + v24 + 1;
          goto LABEL_49;
        }
      }
      v18 += v24 + 1;
      int64_t v17 = v22;
      void v7[2] = v22;
    }
  }
LABEL_25:
  *(void *)uint64_t v2 = v7;
  return result;
}

uint64_t sub_1004F19E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000566C(&qword_100715968);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100007494(&qword_100715A38, &qword_100715968);
  uint64_t v9 = sub_1005E1F80();
  int64_t v10 = *v1;
  int64_t v11 = (*v2)[2];
  int64_t v12 = v11 + v9;
  if (__OFADD__(v11, v9))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v13 = v9;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v10;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v15 = v10[3] >> 1, v15 < v12))
  {
    if (v11 <= v12) {
      int64_t v16 = v12;
    }
    else {
      int64_t v16 = v11;
    }
    int64_t v10 = sub_1004D09A8(isUniquelyReferenced_nonNull_native, v16, 1, v10);
    *uint64_t v2 = v10;
    int64_t v15 = v10[3] >> 1;
  }
  int64_t v17 = v15 - v10[2];
  (*(void (**)(unsigned char *, void *, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v18 = sub_1005E1F70();
  (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
  if (v18 < v13) {
    goto LABEL_15;
  }
  if (v18 >= 1)
  {
    uint64_t v19 = (*v2)[2];
    BOOL v20 = __OFADD__(v19, v18);
    uint64_t v21 = v19 + v18;
    if (v20)
    {
      __break(1u);
LABEL_32:
      uint64_t v31 = v8 + 1;
      goto LABEL_33;
    }
    (*v2)[2] = v21;
  }
  if (v18 != v17) {
    return swift_bridgeObjectRelease();
  }
LABEL_16:
  uint64_t v23 = v36;
  unint64_t v24 = v37;
  if (v37 == *(void *)(v36 + 16)) {
    return swift_bridgeObjectRelease();
  }
  a1 = *v2;
  uint64_t v8 = (*v2)[2];
  uint64_t v25 = sub_10045C0C8((Swift::UInt32 (__swiftcall *)(IMAP2Persistence::CredentialsRequestID))v35, v37, v36);
  char v27 = *v26;
  ((void (*)(unsigned char *, void))v25)(v35, 0);
  BOOL v20 = __OFADD__(v24, 1);
  unint64_t v28 = v24 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_20;
  }
LABEL_21:
  while (1)
  {
    unint64_t v29 = a1[3];
    int64_t v30 = v29 >> 1;
    uint64_t v31 = v8 + 1;
    if ((uint64_t)(v29 >> 1) < v8 + 1) {
      break;
    }
    if (v8 < v30) {
      goto LABEL_23;
    }
LABEL_20:
    a1[2] = v8;
  }
  a1 = sub_1004D09A8((void *)(v29 > 1), v8 + 1, 1, a1);
  *uint64_t v2 = a1;
  int64_t v30 = a1[3] >> 1;
  if (v8 >= v30) {
    goto LABEL_20;
  }
LABEL_23:
  *((unsigned char *)a1 + v8 + 32) = v27;
  if (v28 == *(void *)(v23 + 16))
  {
LABEL_33:
    a1[2] = v31;
    return swift_bridgeObjectRelease();
  }
  while (1)
  {
    uint64_t v32 = sub_10045C0C8((Swift::UInt32 (__swiftcall *)(IMAP2Persistence::CredentialsRequestID))v35, v28, v23);
    char v27 = *v33;
    uint64_t result = ((uint64_t (*)(unsigned char *, void))v32)(v35, 0);
    unint64_t v34 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v30 - 1 == v8)
    {
      ++v28;
      uint64_t v8 = v30;
      a1[2] = v30;
      goto LABEL_21;
    }
    *((unsigned char *)a1 + v8 + 33) = v27;
    ++v28;
    ++v8;
    if (v34 == *(void *)(v23 + 16)) {
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

char *sub_1004F1D30(char *result, char *a2)
{
  uint64_t v3 = *(void **)v2;
  int64_t v4 = *(void *)(*(void *)v2 + 16);
  int64_t v5 = (int64_t)&a2[v4];
  if (__OFADD__(v4, a2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    if (result) {
      BOOL v18 = result == a2;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18) {
      goto LABEL_13;
    }
    int64_t v19 = v3[2];
    char v20 = *result++;
    LOBYTE(v12) = v20;
    int64_t v6 = 16;
    while (1)
    {
      unint64_t v21 = v3[3];
      int64_t v14 = v21 >> 1;
      int64_t v22 = v19 + 1;
      if ((uint64_t)(v21 >> 1) < v19 + 1)
      {
        unint64_t v34 = result;
        uint64_t v32 = a2;
        uint64_t v33 = sub_1004D09A8((void *)(v21 > 1), v19 + 1, 1, v3);
        int64_t v22 = v19 + 1;
        a2 = v32;
        uint64_t v3 = v33;
        uint64_t result = v34;
        int64_t v14 = v3[3] >> 1;
        if (v19 >= v14) {
          goto LABEL_23;
        }
      }
      else if (v19 >= v14)
      {
        goto LABEL_23;
      }
      *((unsigned char *)v3 + v19 + 32) = v12;
      if (result == a2)
      {
LABEL_41:
        v3[2] = v22;
        goto LABEL_13;
      }
      uint64_t v23 = (char *)(v14 + ~v19);
      if (v23 >= &a2[~(unint64_t)result]) {
        uint64_t v23 = &a2[~(unint64_t)result];
      }
      unint64_t v24 = v23 + 1;
      if ((unint64_t)(v23 + 1) > 0x10 && (unint64_t)((char *)v3 + v19 - result + 33) >= 0x10)
      {
        uint64_t v25 = (long long *)result;
        int64_t v26 = v24 & 0xF;
        if ((v24 & 0xF) == 0) {
          int64_t v26 = v6;
        }
        char v27 = &v24[-v26];
        v22 += (int64_t)v27;
        uint64_t result = &v27[(void)result];
        unint64_t v28 = (_OWORD *)((char *)v3 + v19 + 33);
        do
        {
          long long v29 = *v25++;
          *v28++ = v29;
          v27 -= 16;
        }
        while (v27);
      }
      int64_t v30 = result++;
      while (1)
      {
        char v31 = *v30++;
        LOBYTE(v12) = v31;
        if (v14 == v22) {
          break;
        }
        *((unsigned char *)v3 + v22++ + 32) = v12;
        ++result;
        if (v30 == a2) {
          goto LABEL_41;
        }
      }
LABEL_22:
      int64_t v19 = v14;
LABEL_23:
      v3[2] = v19;
    }
  }
  int64_t v6 = (int64_t)a2;
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v3[3] >> 1, v9 < v5))
  {
    if (v4 <= v5) {
      int64_t v10 = v5;
    }
    else {
      int64_t v10 = v4;
    }
    uint64_t v3 = sub_1004D09A8(isUniquelyReferenced_nonNull_native, v10, 1, v3);
    int64_t v9 = v3[3] >> 1;
  }
  uint64_t v11 = v3[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_1004F9660((char *)v3 + v11 + 32, v9 - v11, v7, v6);
  if (v13 < v6) {
    goto LABEL_15;
  }
  if (v13 >= 1)
  {
    uint64_t v15 = v3[2];
    BOOL v16 = __OFADD__(v15, v13);
    uint64_t v17 = v15 + v13;
    if (v16)
    {
      __break(1u);
      goto LABEL_22;
    }
    v3[2] = v17;
  }
  if (v13 == v12) {
    goto LABEL_16;
  }
LABEL_13:
  *(void *)uint64_t v2 = v3;
  return result;
}

uint64_t sub_1004F1F48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1004D0AA4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[10 * v8 + 4];
  if (a1 + 32 < v9 + 80 * v2 && v9 < a1 + 32 + 80 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004F20A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1004D0DFC(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for CommandConnection.RecentErrors.Error(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004F2248(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  unint64_t v3 = sub_1004D12B0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_1004F23A0(uint64_t a1, uint64_t a2)
{
  sub_10044AF04(a1, (uint64_t)v4);
  sub_10044AF04(a2, (uint64_t)v5);
  return sub_1004FA884((uint64_t)v4, (uint64_t)v5) & 1;
}

BOOL sub_1004F23EC(uint64_t a1, uint64_t a2)
{
  return sub_1004F9774(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1004F240C(void *a1, unint64_t a2, NSObject *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10000566C(&qword_100715848);
  __chkstk_darwin(v10 - 8);
  uint64_t v193 = (uint64_t)&v167 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for UnauthenticatedState();
  uint64_t v12 = __chkstk_darwin(v175);
  int v172 = (uint64_t *)((char *)&v167 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v195 = ((char *)&v167 - v14);
  unint64_t v192 = type metadata accessor for Authenticator();
  __chkstk_darwin(v192);
  uint64_t v176 = (uint64_t)&v167 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v16 = __chkstk_darwin(v191);
  BOOL v18 = (char *)&v167 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  BOOL v20 = (char *)&v167 - v19;
  uint64_t v21 = sub_1005E0ED0();
  uint64_t v22 = __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v167 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  unint64_t v28 = (char *)&v167 - v25;
  unint64_t v196 = a1;
  unint64_t v194 = a5;
  if (a4)
  {
    os_log_t v187 = a3;
    uint64_t v29 = v26;
    uint64_t v30 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))((char *)&v167 - v25, a5, v26);
    sub_1004FE84C(a5, (uint64_t)v20, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10044AE60(a2);
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
    sub_10044AE60(a2);
    swift_bridgeObjectRetain();
    sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
    sub_10044AE60(a2);
    swift_bridgeObjectRetain();
    char v31 = sub_1005E0EB0();
    int v32 = sub_1005E25A0();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      LODWORD(v184) = v32;
      os_log_t v185 = v31;
      uint64_t v186 = v28;
      uint64_t v188 = v30;
      uint64_t v189 = v29;
      unint64_t v190 = a4;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v183 = swift_slowAlloc();
      v203[0] = v183;
      *(_DWORD *)uint64_t v33 = 68158722;
      LODWORD(v204) = 2;
      sub_1005E2960();
      *(_WORD *)(v33 + 8) = 256;
      unint64_t v34 = &v20[*(int *)(v191 + 20)];
      LOBYTE(v204) = *v34;
      sub_1005E2960();
      *(_WORD *)(v33 + 11) = 2082;
      uint64_t v35 = ConnectionID.debugDescription.getter(*((unsigned int *)v34 + 1));
      uint64_t v204 = sub_100481E54(v35, v36, v203);
      sub_1005E2960();
      unint64_t v37 = v196;
      swift_bridgeObjectRelease();
      sub_1004FE8B4((uint64_t)v20, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v33 + 21) = 2082;
      sub_10044AF60((uint64_t)v37, (uint64_t)v197);
      uint64_t v38 = v198;
      v198 &= ~0x1000000000000000uLL;
      unint64_t v39 = 0xE500000000000000;
      if ((v38 & 0x1000000000000000) != 0)
      {
        sub_100443AD4((uint64_t)v197, (uint64_t)v199);
        uint64_t v204 = 0x204C534153;
        unint64_t v205 = 0xE500000000000000;
        sub_100443AD4((uint64_t)v199, (uint64_t)v200);
        switch((v202 >> 59) & 6 | ((v201 & 0x2000000000000000) != 0))
        {
          case 1uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            a4 = v190;
            if (qword_1007155F0 != -1) {
              swift_once();
            }
            uint64_t v52 = &qword_1007621B0;
            break;
          case 2uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            a4 = v190;
            if (qword_1007155F8 != -1) {
              swift_once();
            }
            uint64_t v52 = &qword_1007621C0;
            break;
          case 3uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            a4 = v190;
            if (qword_100715608 != -1) {
              swift_once();
            }
            uint64_t v52 = &qword_1007621E0;
            break;
          case 4uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            a4 = v190;
            if (qword_100715610 != -1) {
              swift_once();
            }
            uint64_t v52 = &qword_1007621F0;
            break;
          case 5uLL:
          case 6uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            a4 = v190;
            if (qword_100715600 != -1) {
              swift_once();
            }
            uint64_t v52 = &qword_1007621D0;
            break;
          default:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            uint64_t v52 = (uint64_t *)AuthenticationMechanism.plain.unsafeMutableAddressor();
            a4 = v190;
            break;
        }
        uint64_t v55 = *v52;
        uint64_t v54 = (void *)v52[1];
        swift_bridgeObjectRetain();
        v214._countAndFlagsBits = v55;
        v214._object = v54;
        sub_1005E1E30(v214);
        swift_bridgeObjectRelease();
        unint64_t v37 = v196;
        sub_1004E12A8(v196, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
        uint64_t v40 = v204;
        unint64_t v39 = v205;
      }
      else
      {
        uint64_t v40 = 0x4E49474F4CLL;
        a4 = v190;
      }
      uint64_t v204 = sub_100481E54(v40, v39, v203);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004E12A8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
      sub_1004E12A8(v37, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
      *(_WORD *)(v33 + 31) = 2082;
      sub_10044AE60(a2);
      swift_bridgeObjectRetain();
      ResponseText.debugDescription.getter(a2);
      uint64_t v57 = v56;
      unint64_t v59 = v58;
      sub_1004831AC(a2);
      swift_bridgeObjectRelease();
      uint64_t v204 = sub_100481E54(v57, v59, v203);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004831AC(a2);
      swift_bridgeObjectRelease();
      sub_1004831AC(a2);
      swift_bridgeObjectRelease();
      os_log_t v60 = v185;
      _os_log_impl((void *)&_mh_execute_header, v185, (os_log_type_t)v184, "[%.*hhx-%{public}s] Authentication failed for mechanism '%{public}s': %{public}s", (uint8_t *)v33, 0x29u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1004831AC(a2);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v188 + 8))(v186, v189);
    }
    else
    {
      sub_1004831AC(a2);
      swift_bridgeObjectRelease();
      sub_1004FE8B4((uint64_t)v20, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
      sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
      sub_1004831AC(a2);
      swift_bridgeObjectRelease();
      sub_1004831AC(a2);

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
    }
  }
  else
  {
    unint64_t v190 = 0;
    uint64_t v41 = v26;
    uint64_t v42 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v24, a5, v26);
    sub_1004FE84C(a5, (uint64_t)v18, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
    sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
    long long v43 = sub_1005E0EB0();
    int v44 = sub_1005E25A0();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      LODWORD(v186) = v44;
      os_log_t v187 = v43;
      uint64_t v188 = v42;
      uint64_t v189 = v41;
      uint64_t v45 = swift_slowAlloc();
      os_log_t v185 = (os_log_t)swift_slowAlloc();
      v203[0] = (uint64_t)v185;
      *(_DWORD *)uint64_t v45 = 68158466;
      LODWORD(v204) = 2;
      sub_1005E2960();
      *(_WORD *)(v45 + 8) = 256;
      uint64_t v46 = &v18[*(int *)(v191 + 20)];
      LOBYTE(v204) = *v46;
      sub_1005E2960();
      *(_WORD *)(v45 + 11) = 2082;
      uint64_t v47 = ConnectionID.debugDescription.getter(*((unsigned int *)v46 + 1));
      uint64_t v204 = sub_100481E54(v47, v48, v203);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004FE8B4((uint64_t)v18, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v45 + 21) = 2082;
      sub_10044AF60((uint64_t)a1, (uint64_t)v197);
      uint64_t v49 = v198;
      v198 &= ~0x1000000000000000uLL;
      unint64_t v50 = 0xE500000000000000;
      if ((v49 & 0x1000000000000000) != 0)
      {
        sub_100443AD4((uint64_t)v197, (uint64_t)v199);
        uint64_t v204 = 0x204C534153;
        unint64_t v205 = 0xE500000000000000;
        sub_100443AD4((uint64_t)v199, (uint64_t)v200);
        switch((v202 >> 59) & 6 | ((v201 & 0x2000000000000000) != 0))
        {
          case 1uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            if (qword_1007155F0 != -1) {
              swift_once();
            }
            uint64_t v53 = &qword_1007621B0;
            break;
          case 2uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            if (qword_1007155F8 != -1) {
              swift_once();
            }
            uint64_t v53 = &qword_1007621C0;
            break;
          case 3uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            if (qword_100715608 != -1) {
              swift_once();
            }
            uint64_t v53 = &qword_1007621E0;
            break;
          case 4uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            if (qword_100715610 != -1) {
              swift_once();
            }
            uint64_t v53 = &qword_1007621F0;
            break;
          case 5uLL:
          case 6uLL:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            if (qword_100715600 != -1) {
              swift_once();
            }
            uint64_t v53 = &qword_1007621D0;
            break;
          default:
            v201 &= ~0x2000000000000000uLL;
            v202 &= 0xCFFFFFFFFFFFFFFFLL;
            sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
            uint64_t v53 = (uint64_t *)AuthenticationMechanism.plain.unsafeMutableAddressor();
            break;
        }
        uint64_t v162 = *v53;
        unint64_t v161 = (void *)v53[1];
        swift_bridgeObjectRetain();
        v215._countAndFlagsBits = v162;
        v215._object = v161;
        sub_1005E1E30(v215);
        swift_bridgeObjectRelease();
        a1 = v196;
        sub_1004E12A8(v196, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
        uint64_t v51 = v204;
        unint64_t v50 = v205;
      }
      else
      {
        uint64_t v51 = 0x4E49474F4CLL;
      }
      uint64_t v204 = sub_100481E54(v51, v50, v203);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
      sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
      os_log_t v163 = v187;
      _os_log_impl((void *)&_mh_execute_header, v187, (os_log_type_t)v186, "[%.*hhx-%{public}s] Authentication failed for mechanism '%{public}s'.", (uint8_t *)v45, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v188 + 8))(v24, v189);
      uint64_t v61 = v174;
      a4 = v190;
      goto LABEL_34;
    }
    sub_1004FE8B4((uint64_t)v18, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
    sub_1004E12A8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v41);
    a4 = v190;
  }
  uint64_t v61 = v174;
LABEL_34:
  uint64_t v62 = (uint64_t)v195;
  sub_1004FE84C(v61, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  if (swift_getEnumCaseMultiPayload() != 2) {
    return sub_1004FE8B4(v62, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  }
  sub_1004FE8B4(v61, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  sub_1004FE7E4(v62, v176, (uint64_t (*)(void))type metadata accessor for Authenticator);
  Swift::Int v63 = 3;
  if (a4
    && (a2 & 0xF000000000000007) != 0xF000000000000007
    && ((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 0x10)
  {
    if (a2 + 0x7FFFFFFFFFFFFF90 <= 0x20 && ((1 << (a2 - 112)) & 0x100010101) != 0)
    {
      sub_10044AE74(a2);
      Swift::Int v63 = 1;
    }
    else if (a2 == 0x80000000000000D8)
    {
      Swift::Int v63 = 0;
    }
  }
  uint64_t v64 = v176;
  BOOL v65 = (NSObject **)(v176 + 16);
  uint64_t v66 = v196;
  sub_1004E12A8(v196, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
  sub_1004D8408(&v204, v66);
  sub_10044B008(v204, v205, v206, v207, v208, (unint64_t)v209, v210, v211, (uint64_t)v212, v213);
  char v67 = (uint64_t *)(v64 + 24);
  sub_1004D83F4(&v204, v63);
  uint64_t v68 = v193;
  sub_10044EC0C(v194, v193);
  sub_1004529E8(v68, v64 + *(int *)(v192 + 32));
  uint64_t v69 = *(void *)v64;
  uint64_t v70 = *(void *)(*(void *)v64 + 16);
  if (!v70)
  {
LABEL_77:
    uint64_t v155 = *v67;
    if (sub_100010180(0, *v67))
    {
      sub_1004FE8B4(v176, (uint64_t (*)(void))type metadata accessor for Authenticator);
      uint64_t v156 = (uint64_t)v172;
      *int v172 = 0;
      *(void *)(v156 + 8) = 0;
    }
    else
    {
      BOOL v158 = sub_100010180(3u, v155);
      sub_1004FE8B4(v176, (uint64_t (*)(void))type metadata accessor for Authenticator);
      if (v158) {
        long long v159 = xmmword_100625790;
      }
      else {
        long long v159 = xmmword_1005F6950;
      }
      uint64_t v156 = (uint64_t)v172;
      *(_OWORD *)int v172 = v159;
    }
    *(unsigned char *)(v156 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    return sub_1004FE7E4(v156, v61, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  }
  uint64_t v71 = v69 + 32;
  uint64_t v72 = *v65;
  uint64_t v195 = *v65 + 7;
  uint64_t v171 = v69;
  swift_bridgeObjectRetain_n();
  uint64_t v73 = 0;
  uint64_t v169 = v70;
  uint64_t v170 = v67;
  uint64_t v168 = v71;
  os_log_t v187 = v72;
LABEL_43:
  uint64_t v74 = v71 + 80 * v73;
  unint64_t v196 = *(void **)v74;
  unint64_t v75 = *(void *)(v74 + 8);
  uint64_t v193 = *(void *)(v74 + 16);
  unint64_t v194 = v75;
  unint64_t v76 = *(void *)(v74 + 24);
  uint64_t v77 = *(void *)(v74 + 32);
  os_log_t v185 = *(os_log_t *)(v74 + 40);
  uint64_t v79 = *(void *)(v74 + 48);
  uint64_t v78 = *(void *)(v74 + 56);
  uint64_t v188 = v77;
  uint64_t v189 = v79;
  uint64_t v81 = *(void *)(v74 + 64);
  unint64_t v80 = *(void *)(v74 + 72);
  uint64_t v186 = (char *)v81;
  unint64_t v190 = v80;
  Class isa = v72[2].isa;
  uint64_t v191 = v78;
  unint64_t v192 = v76;
  if (isa)
  {
    sub_1005E33F0();
    uint64_t v173 = v73;
    if ((v191 & 0x1000000000000000) != 0)
    {
      unint64_t v184 = v191 & 0xEFFFFFFFFFFFFFFFLL;
      uint64_t v83 = v191;
      sub_1005E3410(1uLL);
      switch((v190 >> 59) & 6 | ((v83 & 0x2000000000000000) != 0))
      {
        case 1uLL:
          unint64_t v85 = v190;
          uint64_t v183 = v191 & 0xCFFFFFFFFFFFFFFFLL;
          unint64_t v184 = v190 & 0xCFFFFFFFFFFFFFFFLL;
          sub_1005E3410(1uLL);
          uint64_t v86 = (uint64_t)v186;
          uint64_t v88 = v193;
          unint64_t v87 = v194;
          uint64_t v89 = v191;
          unint64_t v90 = v192;
          uint64_t v91 = v188;
          os_log_t v92 = v185;
          sub_10044CA28((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v191, (uint64_t)v186, v85);
          uint64_t v164 = v86;
          unint64_t v165 = v85;
          unint64_t v93 = v196;
          uint64_t v94 = v189;
          sub_10044CA28((uint64_t)v196, v87, v88, v90, v91, (unint64_t)v92, v189, v89, v164, v165);
          sub_100008D24((uint64_t)v93, v87);
          sub_100008D24(v88, v90);
          uint64_t v95 = v91;
          unint64_t v96 = (unint64_t)v92;
          sub_100008D24(v95, (unint64_t)v92);
          unint64_t v97 = v183;
          sub_100008D24(v94, v183);
          uint64_t v98 = (uint64_t)v186;
          unint64_t v99 = v184;
          sub_100008D24((uint64_t)v186, v184);
          sub_1005E08B0();
          unint64_t v100 = v192;
          sub_1005E08B0();
          uint64_t v101 = v188;
          sub_1005E08B0();
          uint64_t v102 = v189;
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v102, v97);
          unint64_t v103 = v96;
          sub_1000094D4(v101, v96);
          uint64_t v104 = v193;
          sub_1000094D4(v193, v100);
          unint64_t v105 = v194;
          sub_1000094D4((uint64_t)v93, v194);
          sub_1000094D4(v98, v99);
          sub_10044B008((uint64_t)v93, v105, v104, v100, v101, v103, v189, v191, v98, v190);
          break;
        case 2uLL:
          sub_1005E3410(2uLL);
          unint64_t v106 = v190;
          uint64_t v107 = (uint64_t)v186;
          long long v108 = v196;
          uint64_t v110 = v193;
          unint64_t v109 = v194;
          unint64_t v111 = v192;
          uint64_t v113 = v188;
          uint64_t v112 = v189;
          os_log_t v114 = v185;
          sub_10044CA28((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v191, (uint64_t)v186, v190);
          sub_100443318((uint64_t)v108, v109, v110, v111, v113, (unint64_t)v114, v112, v184, v107, v106);
          sub_1005E08B0();
          goto LABEL_56;
        case 3uLL:
          Swift::UInt v115 = 3;
          goto LABEL_55;
        case 4uLL:
          Swift::UInt v84 = 4;
          goto LABEL_52;
        case 5uLL:
          Swift::UInt v115 = 5;
          goto LABEL_55;
        case 6uLL:
          Swift::UInt v115 = 6;
LABEL_55:
          sub_1005E3410(v115);
          unint64_t v106 = v190;
          uint64_t v107 = (uint64_t)v186;
          long long v108 = v196;
          uint64_t v110 = v193;
          unint64_t v109 = v194;
          unint64_t v111 = v192;
          uint64_t v113 = v188;
          uint64_t v112 = v189;
          os_log_t v114 = v185;
          sub_10044CA28((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v191, (uint64_t)v186, v190);
          sub_100443318((uint64_t)v108, v109, v110, v111, v113, (unint64_t)v114, v112, v184, v107, v106);
          sub_1005E1DB0();
          sub_1005E1DB0();
LABEL_56:
          sub_10044B008((uint64_t)v108, v109, v110, v111, v113, (unint64_t)v114, v112, v191, v107, v106);
          break;
        default:
          Swift::UInt v84 = 0;
LABEL_52:
          sub_1005E3410(v84);
          unint64_t v116 = v190;
          uint64_t v117 = (uint64_t)v186;
          long long v118 = v196;
          uint64_t v120 = v193;
          unint64_t v119 = v194;
          unint64_t v121 = v192;
          uint64_t v122 = v189;
          os_log_t v123 = v185;
          sub_10044CA28((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v191, (uint64_t)v186, v190);
          unint64_t v166 = v116;
          uint64_t v124 = v188;
          uint64_t v125 = v122;
          uint64_t v126 = v191;
          sub_10044CA28((uint64_t)v118, v119, v120, v121, v188, (unint64_t)v123, v125, v191, v117, v166);
          sub_100008D24((uint64_t)v118, v119);
          sub_100008D24(v120, v121);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4((uint64_t)v118, v119);
          sub_1000094D4(v120, v121);
          sub_10044B008((uint64_t)v118, v119, v120, v121, v124, (unint64_t)v123, v189, v126, v117, v190);
          break;
      }
    }
    else
    {
      sub_1005E3410(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      sub_1005E1DB0();
    }
    Swift::Int v127 = sub_1005E3470();
    os_log_t v128 = v187;
    uint64_t v129 = -1 << LOBYTE(v187[4].isa);
    unint64_t v130 = v127 & ~v129;
    uint64_t v131 = v191;
    if (((*(unint64_t *)((char *)&v195->isa + ((v130 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v130) & 1) == 0) {
      goto LABEL_88;
    }
    ++v173;
    uint64_t v132 = ~v129;
    unint64_t v177 = v191 & 0xEFFFFFFFFFFFFFFFLL;
    uint64_t v178 = ~v129;
    while (1)
    {
      uint64_t v133 = (uint64_t)v128[6].isa + 80 * v130;
      Swift::Int v134 = *(void **)v133;
      unint64_t v135 = *(void *)(v133 + 8);
      uint64_t v136 = *(void *)(v133 + 16);
      uint64_t v137 = *(void *)(v133 + 24);
      uint64_t v138 = *(void *)(v133 + 56);
      if ((v138 & 0x1000000000000000) != 0)
      {
        uint64_t v144 = *(void *)(v133 + 32);
        uint64_t v143 = *(void *)(v133 + 40);
        uint64_t v145 = *(void *)(v133 + 48);
        uint64_t v146 = *(void *)(v133 + 64);
        uint64_t v147 = *(void *)(v133 + 72);
        v203[0] = *(void *)v133;
        v203[1] = v135;
        v203[2] = v136;
        v203[3] = v137;
        v203[4] = v144;
        v203[5] = v143;
        v203[6] = v145;
        v203[7] = v138 & 0xEFFFFFFFFFFFFFFFLL;
        v203[8] = v146;
        v203[9] = v147;
        if ((v131 & 0x1000000000000000) != 0)
        {
          uint64_t v204 = (uint64_t)v196;
          unint64_t v205 = v194;
          uint64_t v206 = v193;
          unint64_t v207 = v192;
          uint64_t v208 = v188;
          os_log_t v209 = v185;
          uint64_t v210 = v189;
          unint64_t v211 = v177;
          uint64_t v212 = v186;
          unint64_t v213 = v190;
          uint64_t v183 = v146;
          unint64_t v184 = v144;
          unint64_t v179 = v137;
          unint64_t v180 = v143;
          uint64_t v148 = v146;
          uint64_t v149 = v136;
          uint64_t v182 = v136;
          unint64_t v150 = v147;
          sub_10044CA28((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v131, (uint64_t)v186, v190);
          uint64_t v151 = v149;
          unint64_t v152 = v179;
          uint64_t v153 = v144;
          unint64_t v154 = v180;
          sub_10044CA28((uint64_t)v134, v135, v151, v179, v153, v180, v145, v138, v148, v150);
          int v181 = sub_100455D6C((uint64_t)v203, (uint64_t)&v204);
          uint64_t v132 = v178;
          sub_10044B008((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v191, (uint64_t)v186, v190);
          sub_10044B008((uint64_t)v134, v135, v182, v152, v184, v154, v145, v138, v183, v150);
          uint64_t v131 = v191;
          os_log_t v128 = v187;
          if (v181) {
            goto LABEL_75;
          }
        }
      }
      else if ((v131 & 0x1000000000000000) == 0)
      {
        BOOL v139 = v134 == v196 && v135 == v194;
        if (v139 || (v140 = sub_1005E3290(), v131 = v191, os_log_t v128 = v187, (v140 & 1) != 0))
        {
          BOOL v141 = v136 == v193 && v137 == v192;
          if (v141 || (v142 = sub_1005E3290(), v131 = v191, os_log_t v128 = v187, (v142 & 1) != 0))
          {
LABEL_75:
            uint64_t v72 = v128;
            sub_10044B008((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v131, (uint64_t)v186, v190);
            char v67 = v170;
            uint64_t v73 = v173;
            uint64_t v61 = v174;
            uint64_t v71 = v168;
            if (v173 == v169)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_77;
            }
            goto LABEL_43;
          }
        }
      }
      unint64_t v130 = (v130 + 1) & v132;
      if (((*(unint64_t *)((char *)&v195->isa + ((v130 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v130) & 1) == 0) {
        goto LABEL_88;
      }
    }
  }
  sub_10044CA28((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v78, (uint64_t)v186, v190);
  uint64_t v131 = v191;
LABEL_88:
  uint64_t v160 = v131;
  swift_bridgeObjectRelease_n();
  sub_10044B008((uint64_t)v196, v194, v193, v192, v188, (unint64_t)v185, v189, v160, (uint64_t)v186, v190);
  sub_1004FE7E4(v176, v174, (uint64_t (*)(void))type metadata accessor for Authenticator);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1004F3F6C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v97 = a3;
  uint64_t v99 = a1;
  uint64_t v96 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v6 = __chkstk_darwin(v96);
  unint64_t v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v90 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v93 = (uint64_t)&v90 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_t v92 = (char *)&v90 - v15;
  __chkstk_darwin(v14);
  uint64_t v91 = (uint64_t)&v90 - v16;
  uint64_t v17 = sub_1005E0ED0();
  uint64_t v100 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  BOOL v20 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v90 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v90 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v90 - v28;
  __chkstk_darwin(v27);
  char v31 = (char *)&v90 - v30;
  uint64_t v98 = (void *)v4;
  sub_1004FE8B4(v4, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  unint64_t v32 = a2[1];
  unint64_t v94 = *a2;
  unint64_t v95 = v32;
  if (v94 >> 62)
  {
    if (v94 >> 62 == 1)
    {
      uint64_t v33 = v100;
      uint64_t v34 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v26, v97, v17);
      uint64_t v35 = v93;
      sub_1004FE84C(v34, v93, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v36 = v94;
      sub_1004A03E8(v94);
      sub_1004A03E8(v36);
      swift_bridgeObjectRetain();
      unint64_t v37 = sub_1005E0EB0();
      os_log_type_t v38 = sub_1005E25C0();
      if (os_log_type_enabled(v37, v38))
      {
        unint64_t v90 = v36 >> 16;
        uint64_t v39 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v97 = v17;
        uint64_t v91 = v40;
        v104[0] = v40;
        *(_DWORD *)uint64_t v39 = 68158722;
        LODWORD(v103[0]) = 2;
        os_log_t v92 = v26;
        sub_1005E2960();
        *(_WORD *)(v39 + 8) = 256;
        uint64_t v41 = v35 + *(int *)(v96 + 20);
        LOBYTE(v103[0]) = *(unsigned char *)v41;
        sub_1005E2960();
        *(_WORD *)(v39 + 11) = 2082;
        uint64_t v42 = ConnectionID.debugDescription.getter(*(unsigned int *)(v41 + 4));
        v103[0] = sub_100481E54(v42, v43, v104);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v35, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v39 + 21) = 512;
        sub_100451F2C(v36);
        LOWORD(v103[0]) = v36;
        sub_1005E2960();
        sub_100451F2C(v36);
        *(_WORD *)(v39 + 25) = 512;
        sub_100451F2C(v36);
        LOWORD(v103[0]) = v90;
        sub_1005E2960();
        sub_100451F2C(v36);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "[%.*hhx-%{public}s] Using TLS protocol %hu, cipher suite %hu", (uint8_t *)v39, 0x1Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        int v44 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
        uint64_t v45 = (uint64_t)v92;
LABEL_8:
        uint64_t v59 = v97;
LABEL_23:
        v44(v45, v59);
        goto LABEL_24;
      }
      sub_100451F2C(v36);
      sub_100451F2C(v36);
      sub_1004FE8B4(v35, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_100451F2C(v36);
      sub_100451F2C(v36);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v17);
      goto LABEL_24;
    }
    os_log_t v60 = Capability.startTLS.unsafeMutableAddressor();
    char v61 = sub_1003689F8(*v60, v60[1], v60[2], *((unsigned char *)v60 + 24), v99);
    uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
    if ((v61 & 1) == 0)
    {
      uint64_t v79 = v97;
      v62(v29, v97, v17);
      uint64_t v80 = (uint64_t)v92;
      sub_1004FE84C(v79, (uint64_t)v92, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v81 = sub_1005E0EB0();
      os_log_type_t v82 = sub_1005E25A0();
      if (!os_log_type_enabled(v81, v82))
      {
        sub_1004FE8B4(v80, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        int v44 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
        uint64_t v45 = (uint64_t)v29;
        uint64_t v59 = v17;
        goto LABEL_23;
      }
      uint64_t v83 = swift_slowAlloc();
      v104[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v83 = 68158210;
      LODWORD(v103[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v83 + 8) = 256;
      uint64_t v84 = v80 + *(int *)(v96 + 20);
      LOBYTE(v103[0]) = *(unsigned char *)v84;
      sub_1005E2960();
      *(_WORD *)(v83 + 11) = 2082;
      uint64_t v85 = ConnectionID.debugDescription.getter(*(unsigned int *)(v84 + 4));
      v103[0] = sub_100481E54(v85, v86, v104);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004FE8B4(v80, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "[%.*hhx-%{public}s] Connection is insecure, but server does not support STARTTLS.", (uint8_t *)v83, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v100 + 8))(v29, v17);
      goto LABEL_24;
    }
    uint64_t v63 = v97;
    v62(v31, v97, v17);
    uint64_t v64 = v91;
    sub_1004FE84C(v63, v91, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    BOOL v65 = sub_1005E0EB0();
    os_log_type_t v66 = sub_1005E25C0();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = swift_slowAlloc();
      v104[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 68158210;
      LODWORD(v103[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v67 + 8) = 256;
      uint64_t v68 = v64 + *(int *)(v96 + 20);
      LOBYTE(v103[0]) = *(unsigned char *)v68;
      sub_1005E2960();
      *(_WORD *)(v67 + 11) = 2082;
      uint64_t v69 = ConnectionID.debugDescription.getter(*(unsigned int *)(v68 + 4));
      v103[0] = sub_100481E54(v69, v70, v104);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004FE8B4(v64, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "[%.*hhx-%{public}s] Server supports STARTTLS and connection is insecure. Attempting STARTTLS.", (uint8_t *)v67, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004FE8B4(v64, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    }

    (*(void (**)(char *, uint64_t))(v100 + 8))(v31, v17);
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    uint64_t v87 = swift_bridgeObjectRetain();
    return ClientCommand.EncodingOptions.init(_:)(v87) & 0x101FF;
  }
  else
  {
    sub_100452B0C((uint64_t)(a2 + 3), (uint64_t)v103);
    sub_100452B0C((uint64_t)v103, (uint64_t)v104);
    uint64_t v46 = v100;
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
    if (v104[2] == 1)
    {
      uint64_t v48 = (uint64_t)v20;
      uint64_t v49 = v97;
      v47(v20, v97, v17);
      unint64_t v50 = v8;
      sub_1004FE84C(v49, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v51 = v94;
      sub_1004A03E8(v94);
      sub_1004A03E8(v51);
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1005E0EB0();
      os_log_type_t v53 = sub_1005E25C0();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v91 = v51 >> 16;
        uint64_t v54 = swift_slowAlloc();
        os_log_t v92 = (char *)swift_slowAlloc();
        uint64_t v93 = v48;
        uint64_t v102 = v92;
        *(_DWORD *)uint64_t v54 = 68158722;
        LODWORD(v101) = 2;
        sub_1005E2960();
        *(_WORD *)(v54 + 8) = 256;
        uint64_t v55 = (uint64_t)v50;
        uint64_t v56 = &v50[*(int *)(v96 + 20)];
        LOBYTE(v101) = *v56;
        sub_1005E2960();
        *(_WORD *)(v54 + 11) = 2082;
        uint64_t v97 = v17;
        uint64_t v57 = ConnectionID.debugDescription.getter(*((unsigned int *)v56 + 1));
        uint64_t v101 = sub_100481E54(v57, v58, (uint64_t *)&v102);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v55, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v54 + 21) = 512;
        sub_100451F2C(v51);
        LOWORD(v101) = v51;
        sub_1005E2960();
        sub_100451F2C(v51);
        *(_WORD *)(v54 + 25) = 512;
        sub_100451F2C(v51);
        LOWORD(v101) = v91;
        sub_1005E2960();
        sub_100451F2C(v51);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "[%.*hhx-%{public}s] Using opportunistic TLS protocol %hu, cipher suite %hu", (uint8_t *)v54, 0x1Du);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        int v44 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
        uint64_t v45 = v93;
        goto LABEL_8;
      }
      sub_100451F2C(v51);
      sub_100451F2C(v51);
      sub_1004FE8B4((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_100451F2C(v51);
      sub_100451F2C(v51);

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v17);
LABEL_24:
      *uint64_t v98 = v99;
      type metadata accessor for UnauthenticatedState();
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return 0x8000000000000001;
    }
    uint64_t v71 = v97;
    v47(v23, v97, v17);
    sub_1004FE84C(v71, (uint64_t)v11, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v72 = sub_1005E0EB0();
    os_log_type_t v73 = sub_1005E25A0();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v97 = v17;
      uint64_t v102 = (char *)v75;
      *(_DWORD *)uint64_t v74 = 68158210;
      LODWORD(v101) = 2;
      sub_1005E2960();
      *(_WORD *)(v74 + 8) = 256;
      unint64_t v76 = &v11[*(int *)(v96 + 20)];
      LOBYTE(v101) = *v76;
      sub_1005E2960();
      *(_WORD *)(v74 + 11) = 2082;
      uint64_t v77 = ConnectionID.debugDescription.getter(*((unsigned int *)v76 + 1));
      uint64_t v101 = sub_100481E54(v77, v78, (uint64_t *)&v102);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004FE8B4((uint64_t)v11, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "[%.*hhx-%{public}s] Connection is using opportunistic TLS. But we require a secure connection.", (uint8_t *)v74, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v97);
    }
    else
    {
      sub_1004FE8B4((uint64_t)v11, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v17);
    }
    uint64_t v89 = v98;
    *(_OWORD *)uint64_t v98 = xmmword_1006257D0;
    *((unsigned char *)v89 + 16) = 2;
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    return 0xFFFFFFFF00000000;
  }
}

uint64_t sub_1004F4EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004FE8B4(v3, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  if (!a1)
  {
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    return 0xFFFFFFFF00000000;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_1004FE84C(a2, (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  uint64_t v75 = a1;
  swift_bridgeObjectRetain();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v13 = sub_1005E0EB0();
  os_log_type_t v14 = sub_1005E2590();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v74 = v3;
    uint64_t v16 = v15;
    uint64_t v73 = swift_slowAlloc();
    *(void *)&long long v87 = v73;
    *(_DWORD *)uint64_t v16 = 68158210;
    LODWORD(v76) = 2;
    sub_1005E2960();
    *(_WORD *)(v16 + 8) = 256;
    uint64_t v17 = &v8[*(int *)(v6 + 20)];
    LOBYTE(v76) = *v17;
    sub_1005E2960();
    *(_WORD *)(v16 + 11) = 2082;
    uint64_t v18 = ConnectionID.debugDescription.getter(*((unsigned int *)v17 + 1));
    *(void *)&long long v76 = sub_100481E54(v18, v19, (uint64_t *)&v87);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_1004FE8B4((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%.*hhx-%{public}s] Received capabilities from server", (uint8_t *)v16, 0x15u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v74;
    swift_slowDealloc();
  }
  else
  {
    sub_1004FE8B4((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v21 = Capability.id.unsafeMutableAddressor();
  uint64_t v22 = v75;
  if (sub_1003689F8(*v21, v21[1], v21[2], *((unsigned char *)v21 + 24), v75))
  {
    *(void *)uint64_t v3 = v22;
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v23 = (uint64_t *)Capability.CompressionKind.deflate.unsafeMutableAddressor();
    uint64_t v24 = *v23;
    uint64_t v25 = (void *)v23[1];
    swift_bridgeObjectRetain();
    uint64_t v26 = static Capability.compression(_:)(v24, v25);
    uint64_t v28 = v27;
    unint64_t v30 = v29;
    char v32 = v31;
    swift_bridgeObjectRelease();
    LOBYTE(v26) = sub_1003689F8(v26, v28, v30, v32 & 1, v22);
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      uint64_t v33 = Capability.applePushService.unsafeMutableAddressor();
      if (sub_1003689F8(*v33, v33[1], v33[2], *((unsigned char *)v33 + 24), v22))
      {
        uint64_t v34 = ServerID.empty.unsafeMutableAddressor();
        long long v36 = v34[1];
        long long v35 = v34[2];
        long long v76 = *v34;
        long long v77 = v36;
        long long v78 = v35;
        long long v37 = v34[6];
        long long v39 = v34[3];
        long long v38 = v34[4];
        long long v81 = v34[5];
        long long v82 = v37;
        long long v79 = v39;
        long long v80 = v38;
        long long v40 = v34[10];
        long long v42 = v34[7];
        long long v41 = v34[8];
        long long v85 = v34[9];
        long long v86 = v40;
        long long v83 = v42;
        long long v84 = v41;
        long long v43 = v34[9];
        long long v95 = v34[8];
        long long v96 = v43;
        long long v97 = v34[10];
        long long v44 = v34[5];
        long long v91 = v34[4];
        long long v92 = v44;
        long long v45 = v34[7];
        long long v93 = v34[6];
        long long v94 = v45;
        long long v46 = v34[1];
        long long v87 = *v34;
        long long v88 = v46;
        long long v47 = v34[3];
        long long v89 = v34[2];
        long long v90 = v47;
        *(void *)uint64_t v3 = v22;
        *(_OWORD *)(v3 + 56) = v47;
        *(_OWORD *)(v3 + 40) = v89;
        long long v48 = v87;
        *(_OWORD *)(v3 + 24) = v88;
        *(_OWORD *)(v3 + 8) = v48;
        long long v49 = v91;
        long long v50 = v92;
        *(_OWORD *)(v3 + 104) = v93;
        *(_OWORD *)(v3 + 88) = v50;
        *(_OWORD *)(v3 + 72) = v49;
        long long v51 = v96;
        *(_OWORD *)(v3 + 168) = v97;
        *(_OWORD *)(v3 + 152) = v51;
        long long v52 = v94;
        *(_OWORD *)(v3 + 136) = v95;
        *(_OWORD *)(v3 + 120) = v52;
        type metadata accessor for UnauthenticatedState();
        swift_storeEnumTagMultiPayload();
        sub_100086B44((uint64_t)&v76);
        return 0x8000000000000003;
      }
    }
    swift_bridgeObjectRetain();
    os_log_type_t v53 = ServerID.empty.unsafeMutableAddressor();
    long long v55 = v53[1];
    long long v54 = v53[2];
    long long v76 = *v53;
    long long v77 = v55;
    long long v78 = v54;
    long long v56 = v53[6];
    long long v58 = v53[3];
    long long v57 = v53[4];
    long long v81 = v53[5];
    long long v82 = v56;
    long long v79 = v58;
    long long v80 = v57;
    long long v59 = v53[10];
    long long v61 = v53[7];
    long long v60 = v53[8];
    long long v85 = v53[9];
    long long v86 = v59;
    long long v83 = v61;
    long long v84 = v60;
    long long v62 = v53[9];
    long long v95 = v53[8];
    long long v96 = v62;
    long long v97 = v53[10];
    long long v63 = v53[5];
    long long v91 = v53[4];
    long long v92 = v63;
    long long v64 = v53[7];
    long long v93 = v53[6];
    long long v94 = v64;
    long long v65 = v53[1];
    long long v87 = *v53;
    long long v88 = v65;
    long long v66 = v53[3];
    long long v89 = v53[2];
    long long v90 = v66;
    *(void *)uint64_t v3 = v22;
    *(_OWORD *)(v3 + 56) = v66;
    *(_OWORD *)(v3 + 40) = v89;
    long long v67 = v87;
    *(_OWORD *)(v3 + 24) = v88;
    *(_OWORD *)(v3 + 8) = v67;
    long long v68 = v91;
    long long v69 = v92;
    *(_OWORD *)(v3 + 104) = v93;
    *(_OWORD *)(v3 + 88) = v69;
    *(_OWORD *)(v3 + 72) = v68;
    long long v70 = v96;
    *(_OWORD *)(v3 + 168) = v97;
    *(_OWORD *)(v3 + 152) = v70;
    long long v71 = v94;
    *(_OWORD *)(v3 + 136) = v95;
    *(_OWORD *)(v3 + 120) = v71;
    type metadata accessor for UnauthenticatedState();
    swift_storeEnumTagMultiPayload();
    sub_100086B44((uint64_t)&v76);
  }
  return ClientCommand.EncodingOptions.init(_:)(v22) & 0x101FF;
}

double sub_1004F55A4@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v66 = a1;
  uint64_t v67 = a3;
  char v5 = a2 & 1;
  uint64_t v6 = sub_10000566C(&qword_100715848);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AuthenticationTask();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Authenticator();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UnauthenticatedState();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004FE84C(v4, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      sub_1004FE7E4((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Authenticator);
      sub_100451DEC((uint64_t)&v15[*(int *)(v13 + 32)], (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        sub_1004FE7E4((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
        *((void *)&v69 + 1) = v9;
        *(void *)&long long v70 = &off_1006F3218;
        long long v62 = sub_100021E04((uint64_t *)&v68);
        sub_1004FE7E4((uint64_t)v12, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
        sub_1004FE8B4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Authenticator);
        sub_100021BFC(&v68, (uint64_t)v80);
        uint64_t v24 = v81;
        uint64_t v25 = v82;
        goto LABEL_14;
      }
      sub_1004FE8B4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Authenticator);
      sub_100007A48((uint64_t)v8, &qword_100715848);
      double result = 0.0;
      uint64_t v27 = v67;
      *(_OWORD *)uint64_t v67 = 0u;
      *(_OWORD *)(v27 + 16) = 0u;
      *(void *)(v27 + 32) = 0;
      return result;
    case 3u:
      uint64_t v28 = *(void *)v18;
      unint64_t v29 = Capability.id.unsafeMutableAddressor();
      char v30 = sub_1003689F8(*v29, v29[1], v29[2], *((unsigned char *)v29 + 24), v28);
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0) {
        goto LABEL_20;
      }
      CFStringRef v31 = sub_1004CB3EC(v5);
      uint64_t v33 = v32;
      uint64_t v35 = v34;
      uint64_t v24 = &type metadata for IdentifyServer;
      uint64_t v25 = (char **)&off_1006F9A90;
      long long v81 = &type metadata for IdentifyServer;
      long long v82 = (char **)&off_1006F9A90;
      uint64_t v36 = swift_allocObject();
      v80[0] = v36;
      *(unsigned char *)(v36 + 16) = 3;
      *(void *)(v36 + 24) = v31;
      *(void *)(v36 + 32) = v33;
      *(void *)(v36 + 40) = v35;
      *(void *)(v36 + 48) = 0;
      *(void *)(v36 + 56) = 0;
      *(void *)(v36 + 64) = 0;
      goto LABEL_14;
    case 4u:
      long long v37 = *((_OWORD *)v18 + 9);
      long long v76 = *((_OWORD *)v18 + 8);
      long long v77 = v37;
      long long v78 = *((_OWORD *)v18 + 10);
      uint64_t v79 = *((void *)v18 + 22);
      long long v38 = *((_OWORD *)v18 + 5);
      long long v72 = *((_OWORD *)v18 + 4);
      long long v73 = v38;
      long long v39 = *((_OWORD *)v18 + 7);
      long long v74 = *((_OWORD *)v18 + 6);
      long long v75 = v39;
      long long v40 = *((_OWORD *)v18 + 1);
      long long v68 = *(_OWORD *)v18;
      long long v69 = v40;
      long long v41 = *((_OWORD *)v18 + 3);
      long long v70 = *((_OWORD *)v18 + 2);
      long long v71 = v41;
      sub_1004A8A6C((uint64_t)&v68);
      uint64_t v24 = &type metadata for Compress;
      uint64_t v25 = (char **)&off_1006F8838;
      long long v81 = &type metadata for Compress;
      long long v82 = (char **)&off_1006F8838;
      LOBYTE(v80[0]) = 5;
      goto LABEL_14;
    case 5u:
    case 6u:
    case 8u:
      long long v19 = *((_OWORD *)v18 + 9);
      long long v76 = *((_OWORD *)v18 + 8);
      long long v77 = v19;
      long long v78 = *((_OWORD *)v18 + 10);
      uint64_t v79 = *((void *)v18 + 22);
      long long v20 = *((_OWORD *)v18 + 5);
      long long v72 = *((_OWORD *)v18 + 4);
      long long v73 = v20;
      long long v21 = *((_OWORD *)v18 + 7);
      long long v74 = *((_OWORD *)v18 + 6);
      long long v75 = v21;
      long long v22 = *((_OWORD *)v18 + 1);
      long long v68 = *(_OWORD *)v18;
      long long v69 = v22;
      long long v23 = *((_OWORD *)v18 + 3);
      long long v70 = *((_OWORD *)v18 + 2);
      long long v71 = v23;
      sub_1004A8A6C((uint64_t)&v68);
      goto LABEL_20;
    case 7u:
      int v42 = *(_DWORD *)v18;
      uint64_t v44 = *((void *)v18 + 1);
      uint64_t v43 = *((void *)v18 + 2);
      uint64_t v45 = *((void *)v18 + 3);
      uint64_t v46 = *((void *)v18 + 4);
      uint64_t v47 = *((void *)v18 + 5);
      uint64_t v48 = *((void *)v18 + 6);
      uint64_t v50 = *((void *)v18 + 7);
      uint64_t v49 = *((void *)v18 + 8);
      long long v51 = *(_OWORD *)(v18 + 184);
      long long v52 = *(_OWORD *)(v18 + 216);
      long long v76 = *(_OWORD *)(v18 + 200);
      long long v77 = v52;
      long long v78 = *(_OWORD *)(v18 + 232);
      long long v53 = *(_OWORD *)(v18 + 120);
      long long v54 = *(_OWORD *)(v18 + 152);
      long long v72 = *(_OWORD *)(v18 + 136);
      long long v73 = v54;
      long long v74 = *(_OWORD *)(v18 + 168);
      long long v75 = v51;
      long long v55 = *(_OWORD *)(v18 + 88);
      long long v68 = *(_OWORD *)(v18 + 72);
      long long v69 = v55;
      long long v56 = *(_OWORD *)(v18 + 104);
      long long v71 = v53;
      long long v70 = v56;
      sub_100086C14((uint64_t)&v68);
      long long v57 = Capability.applePushService.unsafeMutableAddressor();
      char v58 = sub_1003689F8(*v57, v57[1], v57[2], *((unsigned char *)v57 + 24), v49);
      swift_bridgeObjectRelease();
      if (v58)
      {
        uint64_t v59 = v45;
        uint64_t v24 = &type metadata for RegisterForPush;
        uint64_t v60 = v47;
        uint64_t v25 = (char **)&off_1006FA550;
        long long v81 = &type metadata for RegisterForPush;
        long long v82 = (char **)&off_1006FA550;
        uint64_t v61 = swift_allocObject();
        v80[0] = v61;
        *(unsigned char *)(v61 + 16) = 4;
        *(_DWORD *)(v61 + 24) = v42;
        *(void *)(v61 + 32) = v44;
        *(void *)(v61 + 40) = v43;
        *(void *)(v61 + 48) = v59;
        *(void *)(v61 + 56) = v46;
        *(void *)(v61 + 64) = v60;
        *(void *)(v61 + 72) = v48;
        *(void *)(v61 + 80) = v50;
        *(void *)(v61 + 88) = _swiftEmptyArrayStorage;
        *(void *)(v61 + 96) = 0;
        *(unsigned char *)(v61 + 104) = 1;
        *(void *)(v61 + 112) = 0;
        *(void *)(v61 + 120) = 0;
LABEL_14:
        sub_10003BCDC(v80, (uint64_t)v24);
        unsigned __int8 v63 = ((uint64_t (*)(ValueMetadata *, char **))v25[1])(v24, v25);
        if (sub_100010180(v63, v66))
        {
          long long v64 = (_OWORD *)v67;
          *(void *)(v67 + 32) = 0;
          *long long v64 = 0u;
          v64[1] = 0u;
        }
        else
        {
          sub_100021C34((uint64_t)v80, v67);
        }
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v80);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
LABEL_20:
        long long v65 = (_OWORD *)v67;
        *(void *)(v67 + 32) = 0;
        double result = 0.0;
        *long long v65 = 0u;
        v65[1] = 0u;
      }
      return result;
    case 9u:
      sub_10046564C(*(void *)v18, *((void *)v18 + 1), v18[16]);
      goto LABEL_20;
    case 0xAu:
    case 0xDu:
      goto LABEL_20;
    case 0xBu:
    case 0xEu:
      uint64_t v24 = &type metadata for GetCapabilities;
      uint64_t v25 = &off_1006F4510;
      long long v81 = &type metadata for GetCapabilities;
      long long v82 = &off_1006F4510;
      LOBYTE(v80[0]) = 0;
      goto LABEL_14;
    case 0xCu:
      uint64_t v24 = &type metadata for StartTLS;
      uint64_t v25 = &off_1006FA928;
      long long v81 = &type metadata for StartTLS;
      long long v82 = &off_1006FA928;
      LOWORD(v80[0]) = 0;
      goto LABEL_14;
    default:
      goto LABEL_19;
  }
}

_UNKNOWN **sub_1004F5C5C(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v476 = a2;
  sub_10044AF04(a1, (uint64_t)v503);
  sub_10044AF04((uint64_t)v503, (uint64_t)v509);
  *(void *)&long long v473 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v3 = __chkstk_darwin(v473);
  uint64_t v456 = (uint64_t)&v429 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v454 = (uint64_t)&v429 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v462 = (uint64_t)&v429 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v460 = (uint64_t)&v429 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v430 = (uint64_t)&v429 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v429 = (uint64_t)&v429 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v436 = (uint64_t)&v429 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v433 = (uint64_t)&v429 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v435 = (uint64_t)&v429 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v432 = (uint64_t)&v429 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v434 = (uint64_t)&v429 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v431 = (uint64_t)&v429 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v461 = (uint64_t)&v429 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v458 = (uint64_t)&v429 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  *(void *)&long long v470 = (char *)&v429 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  *(void *)&long long v469 = (char *)&v429 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v453 = (uint64_t)&v429 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v451 = (uint64_t)&v429 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v455 = (uint64_t)&v429 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v452 = (uint64_t)&v429 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v459 = (uint64_t)&v429 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v457 = (uint64_t)&v429 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v448 = (uint64_t)&v429 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v447 = (uint64_t)&v429 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v449 = (uint64_t)&v429 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v444 = (uint64_t)&v429 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v442 = (uint64_t)&v429 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v443 = (uint64_t)&v429 - v58;
  __chkstk_darwin(v57);
  uint64_t v441 = (uint64_t)&v429 - v59;
  *(void *)&long long v477 = sub_1005E0ED0();
  *(void *)&long long v475 = *(void *)(v477 - 8);
  uint64_t v60 = __chkstk_darwin(v477);
  uint64_t v465 = (char *)&v429 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __chkstk_darwin(v60);
  *(void *)&long long v468 = (char *)&v429 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  os_log_t v437 = (char *)&v429 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v440 = (char *)&v429 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v439 = (char *)&v429 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  v438 = (char *)&v429 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  *(void *)&long long v467 = (char *)&v429 - v73;
  uint64_t v74 = __chkstk_darwin(v72);
  *(void *)&long long v471 = (char *)&v429 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v463 = (char *)&v429 - v77;
  uint64_t v78 = __chkstk_darwin(v76);
  uint64_t v464 = (char *)&v429 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  uint64_t v466 = (char *)&v429 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v450 = (char *)&v429 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  uint64_t v446 = (char *)&v429 - v85;
  __chkstk_darwin(v84);
  uint64_t v445 = (char *)&v429 - v86;
  uint64_t v478 = type metadata accessor for UnauthenticatedState();
  uint64_t v87 = __chkstk_darwin(v478);
  long long v89 = (char *)&v429 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __chkstk_darwin(v87);
  long long v92 = (char *)&v429 - v91;
  uint64_t v93 = __chkstk_darwin(v90);
  long long v95 = (char *)&v429 - v94;
  uint64_t v96 = __chkstk_darwin(v93);
  uint64_t v98 = (uint64_t *)((char *)&v429 - v97);
  uint64_t v99 = __chkstk_darwin(v96);
  uint64_t v101 = (uint64_t *)((char *)&v429 - v100);
  uint64_t v102 = __chkstk_darwin(v99);
  unint64_t v474 = (unint64_t)&v429 - v103;
  uint64_t v104 = __chkstk_darwin(v102);
  unint64_t v106 = (char *)&v429 - v105;
  uint64_t v107 = __chkstk_darwin(v104);
  unint64_t v109 = (char *)&v429 - v108;
  uint64_t v110 = __chkstk_darwin(v107);
  uint64_t v112 = (char *)&v429 - v111;
  __chkstk_darwin(v110);
  *(void *)&long long v472 = (char *)&v429 - v113;
  sub_10044AF04(a1, (uint64_t)v504);
  switch(sub_1004FA4F0((uint64_t)v504))
  {
    case 1u:
      unint64_t v130 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v504);
      uint64_t v131 = *v130;
      uint64_t v132 = v130[1];
      uint64_t v133 = v130[2];
      uint64_t v134 = v130[3];
      uint64_t v135 = v130[4];
      uint64_t v136 = v130[5];
      uint64_t v137 = v130[6];
      *(void *)&long long v492 = v132;
      *((void *)&v492 + 1) = v133;
      *(void *)&long long v493 = v134;
      *((void *)&v493 + 1) = v135;
      *(void *)&long long v494 = v136;
      *((void *)&v494 + 1) = v137;
      sub_1004FE84C(v479, v472, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRetain();
        sub_1004A03E8(v132);
        sub_1001B0638(v135, v136, v137);
        uint64_t v302 = v479;
        sub_1004FE8B4(v479, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v303 = *(void *)v472;
        *(void *)&long long v481 = v131;
        *((void *)&v481 + 1) = v303;
        *(void *)&long long v482 = v132;
        uint64_t v304 = v303;
        *((void *)&v482 + 1) = v133;
        *(void *)&long long v483 = v134;
        *((void *)&v483 + 1) = v135;
        *(void *)&long long v484 = v136;
        *((void *)&v484 + 1) = v137;
        uint64_t v305 = v449;
        sub_1004FE84C(v476, v449, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        swift_bridgeObjectRetain();
        sub_10044DF1C((uint64_t *)&v481, v305, (uint64_t)v112);
        swift_storeEnumTagMultiPayload();
        sub_1004FE7E4((uint64_t)v112, v302, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        sub_10000566C(&qword_100717368);
        uint64_t v125 = (void *)swift_allocObject();
        *((_OWORD *)v125 + 1) = xmmword_1005F6670;
        uint64_t v389 = v304;
        goto LABEL_79;
      }
      if (EnumCaseMultiPayload)
      {
        uint64_t v306 = v475;
        unint64_t v307 = v450;
        uint64_t v308 = v476;
        uint64_t v309 = v477;
        (*(void (**)(char *, void, void))(v475 + 16))(v450, v476, v477);
        uint64_t v310 = v308;
        uint64_t v311 = v447;
        sub_1004FE84C(v310, v447, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v312 = v448;
        sub_1004FE84C(v311, v448, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_1004FE8B4(v311, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v313 = sub_1005E0EB0();
        os_log_type_t v314 = sub_1005E25A0();
        if (os_log_type_enabled(v313, v314))
        {
          uint64_t v315 = swift_slowAlloc();
          *(void *)&long long v481 = swift_slowAlloc();
          *(_DWORD *)uint64_t v315 = 68158210;
          LODWORD(v506) = 2;
          sub_1005E2960();
          *(_WORD *)(v315 + 8) = 256;
          uint64_t v316 = v312 + *(int *)(v473 + 20);
          LOBYTE(v506) = *(unsigned char *)v316;
          sub_1005E2960();
          *(_WORD *)(v315 + 11) = 2082;
          uint64_t v317 = ConnectionID.debugDescription.getter(*(unsigned int *)(v316 + 4));
          *(void *)&long long v506 = sub_100481E54(v317, v318, (uint64_t *)&v481);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v312, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v313, v314, "[%.*hhx-%{public}s] Received unexpected credentials.", (uint8_t *)v315, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, void))(v306 + 8))(v450, v477);
        }
        else
        {
          sub_1004FE8B4(v312, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          (*(void (**)(char *, uint64_t))(v306 + 8))(v307, v309);
        }
        sub_1004FE8B4(v472, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        return (_UNKNOWN **)_swiftEmptyArrayStorage;
      }
      uint64_t v139 = *(void *)v472;
      uint64_t v140 = v476;
      if ((sub_1004FE520(v476, v131, (uint64_t)&v492) & 1) == 0)
      {
        uint64_t v332 = v479;
        sub_1004FE8B4(v479, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        swift_bridgeObjectRelease();
        uint64_t v333 = v475;
        uint64_t v334 = v446;
        uint64_t v335 = v477;
        (*(void (**)(char *, uint64_t, void))(v475 + 16))(v446, v140, v477);
        uint64_t v336 = v442;
        sub_1004FE84C(v140, v442, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v337 = v444;
        sub_1004FE84C(v336, v444, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_1004FE8B4(v336, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        os_log_type_t v338 = sub_1005E0EB0();
        os_log_type_t v339 = sub_1005E25B0();
        if (os_log_type_enabled(v338, v339))
        {
          uint64_t v340 = swift_slowAlloc();
          *(void *)&long long v481 = swift_slowAlloc();
          *(_DWORD *)uint64_t v340 = 68158210;
          LODWORD(v506) = 2;
          sub_1005E2960();
          *(_WORD *)(v340 + 8) = 256;
          uint64_t v341 = v337 + *(int *)(v473 + 20);
          LOBYTE(v506) = *(unsigned char *)v341;
          sub_1005E2960();
          *(_WORD *)(v340 + 11) = 2082;
          uint64_t v342 = ConnectionID.debugDescription.getter(*(unsigned int *)(v341 + 4));
          *(void *)&long long v506 = sub_100481E54(v342, v343, (uint64_t *)&v481);
          sub_1005E2960();
          uint64_t v332 = v479;
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v337, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v338, v339, "[%.*hhx-%{public}s] Credentials don't allow PREAUTH.", (uint8_t *)v340, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, void))(v333 + 8))(v446, v477);
        }
        else
        {
          sub_1004FE8B4(v337, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          (*(void (**)(char *, uint64_t))(v333 + 8))(v334, v335);
        }
        *(_OWORD *)uint64_t v332 = xmmword_1006258B0;
        *(unsigned char *)(v332 + 16) = 2;
        swift_storeEnumTagMultiPayload();
        return (_UNKNOWN **)_swiftEmptyArrayStorage;
      }
      uint64_t v141 = v475;
      char v142 = v445;
      uint64_t v143 = v477;
      (*(void (**)(char *, uint64_t, void))(v475 + 16))(v445, v140, v477);
      uint64_t v144 = v441;
      sub_1004FE84C(v140, v441, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v145 = v443;
      sub_1004FE84C(v144, v443, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_1004FE8B4(v144, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v146 = sub_1005E0EB0();
      os_log_type_t v147 = sub_1005E2590();
      if (os_log_type_enabled(v146, v147))
      {
        uint64_t v148 = swift_slowAlloc();
        *(void *)&long long v481 = swift_slowAlloc();
        *(_DWORD *)uint64_t v148 = 68158210;
        LODWORD(v506) = 2;
        sub_1005E2960();
        *(_WORD *)(v148 + 8) = 256;
        uint64_t v149 = v145 + *(int *)(v473 + 20);
        LOBYTE(v506) = *(unsigned char *)v149;
        sub_1005E2960();
        *(_WORD *)(v148 + 11) = 2082;
        uint64_t v150 = ConnectionID.debugDescription.getter(*(unsigned int *)(v149 + 4));
        *(void *)&long long v506 = sub_100481E54(v150, v151, (uint64_t *)&v481);
        uint64_t v140 = v476;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v145, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v146, v147, "[%.*hhx-%{public}s] Authenticated with PREAUTH.", (uint8_t *)v148, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, void))(v141 + 8))(v445, v477);
      }
      else
      {
        sub_1004FE8B4(v145, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        (*(void (**)(char *, uint64_t))(v141 + 8))(v142, v143);
      }
      unint64_t v390 = sub_1004F4EF8(v139, v140);
      swift_bridgeObjectRelease();
      if (v390 > 0xFFFFFFFEFFFFFFFFLL) {
        return (_UNKNOWN **)_swiftEmptyArrayStorage;
      }
      sub_10000566C(&qword_100717368);
      uint64_t v125 = (void *)swift_allocObject();
      *((_OWORD *)v125 + 1) = xmmword_1005F6670;
      uint64_t v125[4] = v390;
      v125[5] = 0;
      v125[6] = 0;
      v125[7] = 0;
      return (_UNKNOWN **)v125;
    case 2u:
      unint64_t v152 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v504);
      unint64_t v153 = v152[1];
      uint64_t v478 = *v152;
      *(void *)&long long v477 = v153;
      uint64_t v154 = v152[2];
      unint64_t v474 = v152[3];
      *(void *)&long long v475 = v154;
      unint64_t v155 = v152[5];
      *(void *)&long long v473 = v152[4];
      uint64_t v156 = v152[6];
      uint64_t v157 = v152[7];
      uint64_t v158 = v152[8];
      unint64_t v159 = v152[9];
      unint64_t v160 = v152[10];
      unint64_t v161 = v152[11];
      unint64_t v162 = v152[12];
      *(void *)&long long v481 = v478;
      *((void *)&v481 + 1) = v153;
      *(void *)&long long v482 = v154;
      *((void *)&v482 + 1) = v474;
      *(void *)&long long v483 = v473;
      *((void *)&v483 + 1) = v155;
      *(void *)&long long v484 = v156;
      *((void *)&v484 + 1) = v157;
      *(void *)&long long v485 = v158;
      *((void *)&v485 + 1) = v159;
      sub_10044CA28(v478, v153, v154, v474, v473, v155, v156, v157, v158, v159);
      sub_100485030(v160, (uint64_t)v161, v162);
      sub_1004F240C(&v481, v160, v161, v162, v476);
      sub_10048316C(v160, (uint64_t)v161, v162);
      sub_10044B008(v478, v477, v475, v474, v473, v155, v156, v157, v158, v159);
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    case 3u:
      uint64_t v163 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v504);
      long long v506 = *(_OWORD *)v163;
      v507[0] = *(_OWORD *)(v163 + 16);
      v507[1] = *(_OWORD *)(v163 + 32);
      long long v508 = *(_OWORD *)(v163 + 48);
      uint64_t v164 = *(void *)(v163 + 64);
      uint64_t v165 = *(void *)(v163 + 72);
      long long v166 = *(_OWORD *)(v163 + 128);
      long long v494 = *(_OWORD *)(v163 + 112);
      long long v495 = v166;
      long long v167 = *(_OWORD *)(v163 + 160);
      long long v496 = *(_OWORD *)(v163 + 144);
      long long v497 = v167;
      long long v168 = *(_OWORD *)(v163 + 96);
      long long v492 = *(_OWORD *)(v163 + 80);
      long long v493 = v168;
      uint64_t v169 = v479;
      sub_1004FE84C(v479, (uint64_t)v101, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_10044AF04((uint64_t)v509, (uint64_t)&v481);
        uint64_t v170 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v481);
        sub_100086B44(v170);
        sub_1004FE8B4(v169, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v171 = *v101;
        if (v165)
        {
          if (sub_1005E1CB0() == 0xD000000000000012 && v172 == 0x80000001005EB900)
          {
            swift_bridgeObjectRelease();
LABEL_73:
            uint64_t v125 = &off_1006F2868;
            goto LABEL_75;
          }
          char v363 = sub_1005E3290();
          swift_bridgeObjectRelease();
          if (v363) {
            goto LABEL_73;
          }
        }
        uint64_t v125 = _swiftEmptyArrayStorage;
LABEL_75:
        uint64_t v364 = (uint64_t *)Capability.CompressionKind.deflate.unsafeMutableAddressor();
        uint64_t v365 = *v364;
        uint64_t v366 = (void *)v364[1];
        swift_bridgeObjectRetain();
        uint64_t v367 = static Capability.compression(_:)(v365, v366);
        uint64_t v369 = v368;
        unint64_t v371 = v370;
        char v373 = v372;
        swift_bridgeObjectRelease();
        LOBYTE(v367) = sub_1003689F8(v367, v369, v371, v373 & 1, v171);
        swift_bridgeObjectRelease();
        if (v367)
        {
          long long v374 = v507[0];
          uint64_t v375 = v479;
          *(_OWORD *)(v479 + 8) = v506;
          *(_OWORD *)(v375 + 24) = v374;
          long long v376 = v508;
          *(_OWORD *)(v375 + 40) = v507[1];
          *(_OWORD *)(v375 + 56) = v376;
          long long v377 = v495;
          *(_OWORD *)(v375 + 120) = v494;
          *(_OWORD *)(v375 + 136) = v377;
          long long v378 = v497;
          *(_OWORD *)(v375 + 152) = v496;
          *(_OWORD *)(v375 + 168) = v378;
          long long v379 = v493;
          *(_OWORD *)(v375 + 88) = v492;
          *(void *)uint64_t v375 = v171;
          *(void *)(v375 + 72) = v164;
          *(void *)(v375 + 80) = v165;
          *(_OWORD *)(v375 + 104) = v379;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          uint64_t v380 = Capability.applePushService.unsafeMutableAddressor();
          char v381 = sub_1003689F8(*v380, v380[1], v380[2], *((unsigned char *)v380 + 24), v171);
          long long v382 = v507[0];
          uint64_t v383 = v479;
          *(_OWORD *)(v479 + 8) = v506;
          *(_OWORD *)(v383 + 24) = v382;
          long long v384 = v508;
          *(_OWORD *)(v383 + 40) = v507[1];
          *(_OWORD *)(v383 + 56) = v384;
          long long v385 = v495;
          *(_OWORD *)(v383 + 120) = v494;
          *(_OWORD *)(v383 + 136) = v385;
          long long v386 = v497;
          *(_OWORD *)(v383 + 152) = v496;
          *(_OWORD *)(v383 + 168) = v386;
          long long v387 = v493;
          *(_OWORD *)(v383 + 88) = v492;
          *(void *)uint64_t v383 = v171;
          *(void *)(v383 + 72) = v164;
          *(void *)(v383 + 80) = v165;
          *(_OWORD *)(v383 + 104) = v387;
          if (v381)
          {
            swift_storeEnumTagMultiPayload();
            *(void *)&v505[0] = v125;
            swift_bridgeObjectRetain();
            sub_1004F2248((uint64_t)&off_1006F28A8);
            uint64_t v388 = *(void *)&v505[0];
            swift_arrayDestroy();
            swift_bridgeObjectRelease();
            return (_UNKNOWN **)v388;
          }
          else
          {
            swift_storeEnumTagMultiPayload();
          }
        }
        return (_UNKNOWN **)v125;
      }
      sub_1004FE8B4((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v257 = v475;
      uint64_t v258 = (char *)v467;
      uint64_t v259 = v476;
      uint64_t v260 = v477;
      (*(void (**)(void, void, void))(v475 + 16))(v467, v476, v477);
      uint64_t v261 = v259;
      uint64_t v262 = v458;
      sub_1004FE84C(v261, v458, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v263 = v461;
      sub_1004FE84C(v262, v461, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_1004FE8B4(v262, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      os_log_type_t v264 = sub_1005E0EB0();
      os_log_type_t v265 = sub_1005E25A0();
      if (!os_log_type_enabled(v264, v265)) {
        goto LABEL_90;
      }
      uint64_t v266 = swift_slowAlloc();
      *(void *)&long long v481 = swift_slowAlloc();
      *(_DWORD *)uint64_t v266 = 68158210;
      LODWORD(v505[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v266 + 8) = 256;
      uint64_t v267 = v263 + *(int *)(v473 + 20);
      LOBYTE(v505[0]) = *(unsigned char *)v267;
      sub_1005E2960();
      *(_WORD *)(v266 + 11) = 2082;
      uint64_t v268 = ConnectionID.debugDescription.getter(*(unsigned int *)(v267 + 4));
      *(void *)&v505[0] = sub_100481E54(v268, v269, (uint64_t *)&v481);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004FE8B4(v263, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v264, v265, "[%.*hhx-%{public}s] Unexpected identifiedServer", (uint8_t *)v266, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(void, void))(v257 + 8))(v467, v477);
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    case 4u:
      uint64_t v173 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v504);
      sub_10001FDF0(v173, (uint64_t)v505, &qword_100715F60);
      uint64_t v174 = v479;
      sub_1004FE84C(v479, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        sub_1004FE8B4((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v257 = v475;
        uint64_t v258 = (char *)v468;
        uint64_t v270 = v476;
        uint64_t v260 = v477;
        (*(void (**)(void, void, void))(v475 + 16))(v468, v476, v477);
        uint64_t v271 = v270;
        uint64_t v272 = v460;
        sub_1004FE84C(v271, v460, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v263 = v462;
        sub_1004FE84C(v272, v462, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_1004FE8B4(v272, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        os_log_type_t v264 = sub_1005E0EB0();
        os_log_type_t v273 = sub_1005E25A0();
        if (!os_log_type_enabled(v264, v273)) {
          goto LABEL_90;
        }
        uint64_t v274 = swift_slowAlloc();
        *(void *)&long long v481 = swift_slowAlloc();
        *(_DWORD *)uint64_t v274 = 68158210;
        LODWORD(v492) = 2;
        sub_1005E2960();
        *(_WORD *)(v274 + 8) = 256;
        uint64_t v275 = v263 + *(int *)(v473 + 20);
        LOBYTE(v492) = *(unsigned char *)v275;
        sub_1005E2960();
        *(_WORD *)(v274 + 11) = 2082;
        uint64_t v276 = ConnectionID.debugDescription.getter(*(unsigned int *)(v275 + 4));
        *(void *)&long long v492 = sub_100481E54(v276, v277, (uint64_t *)&v481);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v263, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v264, v273, "[%.*hhx-%{public}s] Unexpected setPushInformation", (uint8_t *)v274, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(void, void))(v257 + 8))(v468, v477);
        return (_UNKNOWN **)_swiftEmptyArrayStorage;
      }
      sub_10044AF04((uint64_t)v509, (uint64_t)&v481);
      uint64_t v175 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v481);
      sub_100484DAC(*v175, v175[1], v175[2]);
      sub_1004FE8B4(v174, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v176 = *(void *)v92;
      long long v177 = *(_OWORD *)(v92 + 120);
      long long v178 = *(_OWORD *)(v92 + 152);
      long long v500 = *(_OWORD *)(v92 + 136);
      long long v501 = v178;
      long long v502 = *(_OWORD *)(v92 + 168);
      long long v179 = *(_OWORD *)(v92 + 56);
      long long v180 = *(_OWORD *)(v92 + 88);
      long long v496 = *(_OWORD *)(v92 + 72);
      long long v497 = v180;
      long long v498 = *(_OWORD *)(v92 + 104);
      long long v499 = v177;
      long long v181 = *(_OWORD *)(v92 + 24);
      long long v492 = *(_OWORD *)(v92 + 8);
      long long v493 = v181;
      long long v494 = *(_OWORD *)(v92 + 40);
      long long v495 = v179;
      sub_10001FDF0((uint64_t)v505, (uint64_t)&v506, &qword_100715F60);
      uint64_t v182 = *(void *)&v507[0];
      if (*(void *)&v507[0])
      {
        uint64_t v183 = *((void *)&v506 + 1);
        long long v184 = *(_OWORD *)((char *)v507 + 8);
        uint64_t v185 = *((void *)&v507[1] + 1);
        *(_DWORD *)uint64_t v174 = v506;
        *(void *)(v174 + 8) = v183;
        *(void *)(v174 + 16) = v182;
        *(_OWORD *)(v174 + 24) = v184;
        *(void *)(v174 + 40) = v185;
        uint64_t v186 = (void *)(v174 + 64);
        uint64_t v187 = 72;
        *(_OWORD *)(v174 + 48) = v508;
      }
      else
      {
        uint64_t v187 = 8;
        uint64_t v186 = (void *)v174;
      }
      *uint64_t v186 = v176;
      os_log_t v325 = (long long *)(v174 + v187);
      long long v326 = v501;
      v325[8] = v500;
      v325[9] = v326;
      v325[10] = v502;
      long long v327 = v497;
      v325[4] = v496;
      v325[5] = v327;
      long long v328 = v499;
      v325[6] = v498;
      v325[7] = v328;
      long long v329 = v493;
      *os_log_t v325 = v492;
      v325[1] = v329;
      long long v330 = v495;
      v325[2] = v494;
      v325[3] = v330;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      os_log_t v331 = Capability.id.unsafeMutableAddressor();
      if (sub_1003689F8(*v331, v331[1], v331[2], *((unsigned char *)v331 + 24), v176))
      {
        swift_bridgeObjectRelease();
        return (_UNKNOWN **)_swiftEmptyArrayStorage;
      }
      sub_10000566C(&qword_100717368);
      uint64_t v125 = (void *)swift_allocObject();
      *((_OWORD *)v125 + 1) = xmmword_1005F6670;
      uint64_t v389 = v176;
LABEL_79:
      uint64_t v125[4] = ClientCommand.EncodingOptions.init(_:)(v389) & 0x101FF;
      v125[5] = 0;
      v125[6] = 0;
      v125[7] = 0;
      return (_UNKNOWN **)v125;
    case 5u:
      uint64_t v189 = (void *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v504);
      uint64_t v190 = *(unsigned int *)v189;
      uint64_t v192 = v189[1];
      uint64_t v191 = v189[2];
      uint64_t v193 = v189[3];
      uint64_t v194 = v479;
      sub_1004FE84C(v479, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1004FE8B4(v194, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        *(void *)&long long v477 = v192;
        *(void *)&long long v476 = v190;
        uint64_t v195 = *((void *)v89 + 8);
        long long v196 = *(_OWORD *)(v89 + 184);
        long long v197 = *(_OWORD *)(v89 + 216);
        long long v489 = *(_OWORD *)(v89 + 200);
        long long v490 = v197;
        long long v491 = *(_OWORD *)(v89 + 232);
        long long v198 = *(_OWORD *)(v89 + 120);
        long long v199 = *(_OWORD *)(v89 + 152);
        long long v485 = *(_OWORD *)(v89 + 136);
        long long v486 = v199;
        long long v487 = *(_OWORD *)(v89 + 168);
        long long v488 = v196;
        long long v200 = *(_OWORD *)(v89 + 88);
        long long v481 = *(_OWORD *)(v89 + 72);
        long long v482 = v200;
        long long v483 = *(_OWORD *)(v89 + 104);
        long long v484 = v198;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v201 = v487;
        *(_OWORD *)(v194 + 120) = v488;
        long long v202 = v490;
        *(_OWORD *)(v194 + 136) = v489;
        *(_OWORD *)(v194 + 152) = v202;
        *(_OWORD *)(v194 + 168) = v491;
        long long v203 = v483;
        *(_OWORD *)(v194 + 56) = v484;
        long long v204 = v486;
        *(_OWORD *)(v194 + 72) = v485;
        *(_OWORD *)(v194 + 88) = v204;
        *(_OWORD *)(v194 + 104) = v201;
        long long v205 = v482;
        *(_OWORD *)(v194 + 8) = v481;
        *(_OWORD *)(v194 + 24) = v205;
        *(void *)uint64_t v194 = v195;
        *(_OWORD *)(v194 + 40) = v203;
        swift_storeEnumTagMultiPayload();
        sub_10000566C(&qword_100717368);
        uint64_t v125 = (void *)swift_allocObject();
        *((_OWORD *)v125 + 1) = xmmword_1005F6670;
        uint64_t v206 = v477;
        uint64_t v125[4] = v476 | 0x4000000000000000;
        v125[5] = v206;
        v125[6] = v191;
        v125[7] = v193;
        return (_UNKNOWN **)v125;
      }
      sub_1004FE8B4((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v257 = v475;
      uint64_t v258 = v465;
      uint64_t v286 = v476;
      uint64_t v260 = v477;
      (*(void (**)(char *, void, void))(v475 + 16))(v465, v476, v477);
      uint64_t v287 = v286;
      uint64_t v288 = v454;
      sub_1004FE84C(v287, v454, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v263 = v456;
      sub_1004FE84C(v288, v456, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_1004FE8B4(v288, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      os_log_type_t v264 = sub_1005E0EB0();
      os_log_type_t v289 = sub_1005E25A0();
      if (!os_log_type_enabled(v264, v289)) {
        goto LABEL_90;
      }
      uint64_t v290 = swift_slowAlloc();
      *(void *)&long long v481 = swift_slowAlloc();
      *(_DWORD *)uint64_t v290 = 68158210;
      LODWORD(v492) = 2;
      sub_1005E2960();
      *(_WORD *)(v290 + 8) = 256;
      uint64_t v291 = v263 + *(int *)(v473 + 20);
      LOBYTE(v492) = *(unsigned char *)v291;
      sub_1005E2960();
      *(_WORD *)(v290 + 11) = 2082;
      uint64_t v292 = ConnectionID.debugDescription.getter(*(unsigned int *)(v291 + 4));
      *(void *)&long long v492 = sub_100481E54(v292, v293, (uint64_t *)&v481);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004FE8B4(v263, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v264, v289, "[%.*hhx-%{public}s] Unexpected gotPushResponse", (uint8_t *)v290, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, void))(v257 + 8))(v465, v477);
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    case 6u:
      unint64_t v207 = (long long *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v504);
      sub_10042C9B0(v207, (uint64_t)v505);
      sub_10042C9B0(v505, (uint64_t)&v506);
      if (LOBYTE(v507[0]) != 2) {
        goto LABEL_41;
      }
      if ((unint64_t)v506 ^ 2 | *((void *)&v506 + 1))
      {
        if ((unint64_t)v506 ^ 3 | *((void *)&v506 + 1))
        {
LABEL_41:
          uint64_t v256 = v479;
          sub_1004FE8B4(v479, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
          sub_10042C9B0(v505, v256);
          swift_storeEnumTagMultiPayload();
          sub_1004FF4C8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1004FA508);
          return (_UNKNOWN **)_swiftEmptyArrayStorage;
        }
        uint64_t v208 = v479;
        sub_1004FE84C(v479, (uint64_t)v98, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          sub_1004FE8B4(v208, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
          uint64_t v209 = *v98;
          uint64_t v210 = v475;
          unint64_t v211 = v438;
          uint64_t v212 = v476;
          uint64_t v213 = v477;
          (*(void (**)(char *, void, void))(v475 + 16))(v438, v476, v477);
          uint64_t v214 = v212;
          uint64_t v215 = v431;
          sub_1004FE84C(v214, v431, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          uint64_t v216 = v434;
          sub_1004FE84C(v215, v434, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          sub_1004FE8B4(v215, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          os_log_t v217 = sub_1005E0EB0();
          os_log_type_t v218 = sub_1005E25A0();
          if (os_log_type_enabled(v217, v218))
          {
            uint64_t v219 = swift_slowAlloc();
            *(void *)&long long v481 = swift_slowAlloc();
            *(_DWORD *)uint64_t v219 = 68158210;
            LODWORD(v492) = 2;
            sub_1005E2960();
            *(_WORD *)(v219 + 8) = 256;
            uint64_t v220 = v216 + *(int *)(v473 + 20);
            LOBYTE(v492) = *(unsigned char *)v220;
            sub_1005E2960();
            *(_WORD *)(v219 + 11) = 2082;
            uint64_t v221 = ConnectionID.debugDescription.getter(*(unsigned int *)(v220 + 4));
            *(void *)&long long v492 = sub_100481E54(v221, v222, (uint64_t *)&v481);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1004FE8B4(v216, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            _os_log_impl((void *)&_mh_execute_header, v217, v218, "[%.*hhx-%{public}s] Unable to identify server.", (uint8_t *)v219, 0x15u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, void))(v210 + 8))(v438, v477);
          }
          else
          {
            sub_1004FE8B4(v216, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

            (*(void (**)(char *, uint64_t))(v210 + 8))(v211, v213);
          }
          uint64_t v408 = ServerID.empty.unsafeMutableAddressor();
          long long v410 = v408[1];
          long long v409 = v408[2];
          long long v492 = *v408;
          long long v493 = v410;
          long long v494 = v409;
          long long v411 = v408[6];
          long long v413 = v408[3];
          long long v412 = v408[4];
          long long v497 = v408[5];
          long long v498 = v411;
          long long v495 = v413;
          long long v496 = v412;
          long long v414 = v408[10];
          long long v416 = v408[7];
          long long v415 = v408[8];
          long long v501 = v408[9];
          long long v502 = v414;
          long long v499 = v416;
          long long v500 = v415;
          long long v488 = v408[7];
          long long v489 = v408[8];
          long long v490 = v408[9];
          long long v491 = v408[10];
          long long v484 = v408[3];
          long long v417 = v484;
          long long v485 = v408[4];
          long long v486 = v408[5];
          long long v487 = v408[6];
          long long v481 = *v408;
          long long v482 = v408[1];
          long long v483 = v408[2];
          uint64_t v418 = v479;
          *(void *)uint64_t v479 = v209;
          *(_OWORD *)(v418 + 56) = v417;
          *(_OWORD *)(v418 + 40) = v483;
          long long v419 = v481;
          *(_OWORD *)(v418 + 24) = v482;
          *(_OWORD *)(v418 + 8) = v419;
          long long v420 = v485;
          long long v421 = v486;
          *(_OWORD *)(v418 + 104) = v487;
          *(_OWORD *)(v418 + 88) = v421;
          *(_OWORD *)(v418 + 72) = v420;
          long long v422 = v490;
          *(_OWORD *)(v418 + 168) = v491;
          *(_OWORD *)(v418 + 152) = v422;
          long long v423 = v488;
          *(_OWORD *)(v418 + 136) = v489;
          *(_OWORD *)(v418 + 120) = v423;
          swift_storeEnumTagMultiPayload();
          sub_100086B44((uint64_t)&v492);
        }
        else
        {
          sub_1004FE8B4((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
          uint64_t v257 = v475;
          uint64_t v258 = v439;
          uint64_t v391 = v476;
          uint64_t v260 = v477;
          (*(void (**)(char *, void, void))(v475 + 16))(v439, v476, v477);
          uint64_t v392 = v391;
          uint64_t v393 = v432;
          sub_1004FE84C(v392, v432, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          uint64_t v263 = v435;
          sub_1004FE84C(v393, v435, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          sub_1004FE8B4(v393, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          os_log_type_t v264 = sub_1005E0EB0();
          os_log_type_t v394 = sub_1005E25A0();
          if (!os_log_type_enabled(v264, v394)) {
            goto LABEL_90;
          }
          uint64_t v395 = swift_slowAlloc();
          *(void *)&long long v481 = swift_slowAlloc();
          *(_DWORD *)uint64_t v395 = 68158210;
          LODWORD(v492) = 2;
          sub_1005E2960();
          *(_WORD *)(v395 + 8) = 256;
          uint64_t v396 = v263 + *(int *)(v473 + 20);
          LOBYTE(v492) = *(unsigned char *)v396;
          sub_1005E2960();
          *(_WORD *)(v395 + 11) = 2082;
          uint64_t v397 = ConnectionID.debugDescription.getter(*(unsigned int *)(v396 + 4));
          *(void *)&long long v492 = sub_100481E54(v397, v398, (uint64_t *)&v481);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v263, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v264, v394, "[%.*hhx-%{public}s] Unexpected unableToIdentifyServer", (uint8_t *)v395, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, void))(v257 + 8))(v439, v477);
        }
      }
      else
      {
        uint64_t v344 = v479;
        sub_1004FE84C(v479, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        if (swift_getEnumCaseMultiPayload() == 7)
        {
          sub_1004FE8B4(v344, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
          uint64_t v345 = *((void *)v95 + 8);
          long long v346 = *(_OWORD *)(v95 + 184);
          long long v347 = *(_OWORD *)(v95 + 216);
          long long v489 = *(_OWORD *)(v95 + 200);
          long long v490 = v347;
          long long v491 = *(_OWORD *)(v95 + 232);
          long long v348 = *(_OWORD *)(v95 + 120);
          long long v349 = *(_OWORD *)(v95 + 152);
          long long v485 = *(_OWORD *)(v95 + 136);
          long long v486 = v349;
          long long v487 = *(_OWORD *)(v95 + 168);
          long long v488 = v346;
          long long v350 = *(_OWORD *)(v95 + 88);
          long long v481 = *(_OWORD *)(v95 + 72);
          long long v482 = v350;
          long long v483 = *(_OWORD *)(v95 + 104);
          long long v484 = v348;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v351 = v475;
          int v352 = v440;
          uint64_t v353 = v476;
          (*(void (**)(char *, void, void))(v475 + 16))(v440, v476, v477);
          uint64_t v354 = v353;
          uint64_t v355 = v433;
          sub_1004FE84C(v354, v433, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          uint64_t v356 = v436;
          sub_1004FE84C(v355, v436, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          sub_1004FE8B4(v355, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          uint64_t v357 = sub_1005E0EB0();
          os_log_type_t v358 = sub_1005E25A0();
          if (os_log_type_enabled(v357, v358))
          {
            uint64_t v359 = swift_slowAlloc();
            *(void *)&long long v492 = swift_slowAlloc();
            *(_DWORD *)uint64_t v359 = 68158210;
            LODWORD(v480) = 2;
            *(void *)&long long v476 = v345;
            sub_1005E2960();
            *(_WORD *)(v359 + 8) = 256;
            uint64_t v360 = v356 + *(int *)(v473 + 20);
            LOBYTE(v480) = *(unsigned char *)v360;
            sub_1005E2960();
            *(_WORD *)(v359 + 11) = 2082;
            uint64_t v361 = ConnectionID.debugDescription.getter(*(unsigned int *)(v360 + 4));
            uint64_t v480 = sub_100481E54(v361, v362, (uint64_t *)&v492);
            uint64_t v345 = v476;
            sub_1005E2960();
            uint64_t v344 = v479;
            swift_bridgeObjectRelease();
            sub_1004FE8B4(v356, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            _os_log_impl((void *)&_mh_execute_header, v357, v358, "[%.*hhx-%{public}s] Unable to get push response", (uint8_t *)v359, 0x15u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, void))(v351 + 8))(v440, v477);
          }
          else
          {
            sub_1004FE8B4(v356, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

            (*(void (**)(char *, void))(v351 + 8))(v352, v477);
          }
          long long v424 = v487;
          *(_OWORD *)(v344 + 120) = v488;
          long long v425 = v490;
          *(_OWORD *)(v344 + 136) = v489;
          *(_OWORD *)(v344 + 152) = v425;
          *(_OWORD *)(v344 + 168) = v491;
          long long v426 = v483;
          *(_OWORD *)(v344 + 56) = v484;
          long long v427 = v486;
          *(_OWORD *)(v344 + 72) = v485;
          *(_OWORD *)(v344 + 88) = v427;
          *(_OWORD *)(v344 + 104) = v424;
          long long v428 = v482;
          *(_OWORD *)(v344 + 8) = v481;
          *(_OWORD *)(v344 + 24) = v428;
          *(void *)uint64_t v344 = v345;
          *(_OWORD *)(v344 + 40) = v426;
          goto LABEL_49;
        }
        sub_1004FE8B4((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v257 = v475;
        uint64_t v258 = v437;
        uint64_t v399 = v476;
        uint64_t v260 = v477;
        (*(void (**)(char *, void, void))(v475 + 16))(v437, v476, v477);
        uint64_t v400 = v399;
        uint64_t v401 = v429;
        sub_1004FE84C(v400, v429, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v263 = v430;
        sub_1004FE84C(v401, v430, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_1004FE8B4(v401, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        os_log_type_t v264 = sub_1005E0EB0();
        os_log_type_t v402 = sub_1005E25A0();
        if (!os_log_type_enabled(v264, v402)) {
          goto LABEL_90;
        }
        uint64_t v403 = swift_slowAlloc();
        *(void *)&long long v481 = swift_slowAlloc();
        *(_DWORD *)uint64_t v403 = 68158210;
        LODWORD(v492) = 2;
        sub_1005E2960();
        *(_WORD *)(v403 + 8) = 256;
        uint64_t v404 = v263 + *(int *)(v473 + 20);
        LOBYTE(v492) = *(unsigned char *)v404;
        sub_1005E2960();
        *(_WORD *)(v403 + 11) = 2082;
        uint64_t v405 = ConnectionID.debugDescription.getter(*(unsigned int *)(v404 + 4));
        *(void *)&long long v492 = sub_100481E54(v405, v406, (uint64_t *)&v481);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v263, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v264, v402, "[%.*hhx-%{public}s] Unexpected unableToGetPushResponse", (uint8_t *)v403, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, void))(v257 + 8))(v437, v477);
      }
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    case 7u:
      uint64_t v188 = v479;
      sub_1004FE84C(v479, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      if (swift_getEnumCaseMultiPayload() == 12)
      {
        sub_1004FE8B4(v188, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        sub_1004FE8B4((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        swift_storeEnumTagMultiPayload();
        return &off_1006F27A8;
      }
      sub_1004FE8B4((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v257 = v475;
      uint64_t v258 = v466;
      uint64_t v278 = v476;
      uint64_t v260 = v477;
      (*(void (**)(char *, void, void))(v475 + 16))(v466, v476, v477);
      uint64_t v279 = v278;
      uint64_t v280 = v457;
      sub_1004FE84C(v279, v457, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v263 = v459;
      sub_1004FE84C(v280, v459, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_1004FE8B4(v280, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      os_log_type_t v264 = sub_1005E0EB0();
      os_log_type_t v281 = sub_1005E25A0();
      if (!os_log_type_enabled(v264, v281)) {
        goto LABEL_90;
      }
      uint64_t v282 = swift_slowAlloc();
      *(void *)&long long v481 = swift_slowAlloc();
      *(_DWORD *)uint64_t v282 = 68158210;
      LODWORD(v492) = 2;
      sub_1005E2960();
      *(_WORD *)(v282 + 8) = 256;
      uint64_t v283 = v263 + *(int *)(v473 + 20);
      LOBYTE(v492) = *(unsigned char *)v283;
      sub_1005E2960();
      *(_WORD *)(v282 + 11) = 2082;
      uint64_t v284 = ConnectionID.debugDescription.getter(*(unsigned int *)(v283 + 4));
      *(void *)&long long v492 = sub_100481E54(v284, v285, (uint64_t *)&v481);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_1004FE8B4(v263, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      _os_log_impl((void *)&_mh_execute_header, v264, v281, "[%.*hhx-%{public}s] Unexpected startTLS", (uint8_t *)v282, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, void))(v257 + 8))(v466, v477);
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    case 8u:
      uint64_t v223 = v479;
      sub_1004FE84C(v479, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        sub_1004FE8B4(v223, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        unint64_t v474 = *(void *)v106;
        long long v224 = *(_OWORD *)(v106 + 120);
        long long v225 = *(_OWORD *)(v106 + 152);
        long long v489 = *(_OWORD *)(v106 + 136);
        long long v490 = v225;
        long long v491 = *(_OWORD *)(v106 + 168);
        long long v226 = *(_OWORD *)(v106 + 56);
        long long v227 = *(_OWORD *)(v106 + 88);
        long long v485 = *(_OWORD *)(v106 + 72);
        long long v486 = v227;
        long long v487 = *(_OWORD *)(v106 + 104);
        long long v488 = v224;
        long long v228 = *(_OWORD *)(v106 + 24);
        long long v481 = *(_OWORD *)(v106 + 8);
        long long v482 = v228;
        long long v483 = *(_OWORD *)(v106 + 40);
        long long v484 = v226;
        uint64_t v229 = v475;
        BOOL v230 = v464;
        uint64_t v231 = v476;
        uint64_t v232 = v477;
        (*(void (**)(char *, void, void))(v475 + 16))(v464, v476, v477);
        uint64_t v233 = v231;
        uint64_t v234 = v452;
        sub_1004FE84C(v233, v452, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v235 = v455;
        sub_1004FE84C(v234, v455, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_1004FE8B4(v234, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v236 = sub_1005E0EB0();
        os_log_type_t v237 = sub_1005E2590();
        if (os_log_type_enabled(v236, v237))
        {
          uint64_t v238 = swift_slowAlloc();
          *(void *)&long long v492 = swift_slowAlloc();
          *(_DWORD *)uint64_t v238 = 68158210;
          LODWORD(v506) = 2;
          sub_1005E2960();
          *(_WORD *)(v238 + 8) = 256;
          uint64_t v239 = v235 + *(int *)(v473 + 20);
          LOBYTE(v506) = *(unsigned char *)v239;
          sub_1005E2960();
          *(_WORD *)(v238 + 11) = 2082;
          uint64_t v240 = ConnectionID.debugDescription.getter(*(unsigned int *)(v239 + 4));
          *(void *)&long long v506 = sub_100481E54(v240, v241, (uint64_t *)&v492);
          sub_1005E2960();
          uint64_t v223 = v479;
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v235, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v236, v237, "[%.*hhx-%{public}s] Server accepted compression.", (uint8_t *)v238, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, void))(v229 + 8))(v464, v477);
        }
        else
        {
          sub_1004FE8B4(v235, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          (*(void (**)(char *, uint64_t))(v229 + 8))(v230, v232);
        }
        unint64_t v319 = v474;
        long long v320 = v487;
        *(_OWORD *)(v223 + 120) = v488;
        long long v321 = v490;
        *(_OWORD *)(v223 + 136) = v489;
        *(_OWORD *)(v223 + 152) = v321;
        *(_OWORD *)(v223 + 168) = v491;
        long long v322 = v483;
        *(_OWORD *)(v223 + 56) = v484;
        long long v323 = v486;
        *(_OWORD *)(v223 + 72) = v485;
        *(_OWORD *)(v223 + 88) = v323;
        *(_OWORD *)(v223 + 104) = v320;
        long long v324 = v482;
        *(_OWORD *)(v223 + 8) = v481;
        *(_OWORD *)(v223 + 24) = v324;
        *(void *)uint64_t v223 = v319;
        *(_OWORD *)(v223 + 40) = v322;
        swift_storeEnumTagMultiPayload();
        return &off_1006F27E8;
      }
      sub_1004FE8B4((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v257 = v475;
      uint64_t v258 = v463;
      uint64_t v294 = v476;
      uint64_t v260 = v477;
      (*(void (**)(char *, void, void))(v475 + 16))(v463, v476, v477);
      uint64_t v295 = v294;
      uint64_t v296 = v451;
      sub_1004FE84C(v295, v451, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v263 = v453;
      sub_1004FE84C(v296, v453, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_1004FE8B4(v296, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      os_log_type_t v264 = sub_1005E0EB0();
      os_log_type_t v297 = sub_1005E25A0();
      if (os_log_type_enabled(v264, v297))
      {
        uint64_t v298 = swift_slowAlloc();
        *(void *)&long long v481 = swift_slowAlloc();
        *(_DWORD *)uint64_t v298 = 68158210;
        LODWORD(v492) = 2;
        sub_1005E2960();
        *(_WORD *)(v298 + 8) = 256;
        uint64_t v299 = v263 + *(int *)(v473 + 20);
        LOBYTE(v492) = *(unsigned char *)v299;
        sub_1005E2960();
        *(_WORD *)(v298 + 11) = 2082;
        uint64_t v300 = ConnectionID.debugDescription.getter(*(unsigned int *)(v299 + 4));
        *(void *)&long long v492 = sub_100481E54(v300, v301, (uint64_t *)&v481);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v263, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v264, v297, "[%.*hhx-%{public}s] Unexpected serverAcceptedCompress", (uint8_t *)v298, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, void))(v257 + 8))(v463, v477);
      }
      else
      {
LABEL_90:
        sub_1004FE8B4(v263, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        (*(void (**)(char *, uint64_t))(v257 + 8))(v258, v260);
      }
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    case 9u:
    case 0xAu:
      uint64_t v114 = v479;
      uint64_t v115 = v474;
      sub_1004FE84C(v479, v474, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      if ((swift_getEnumCaseMultiPayload() & 0xFFFFFFFE) == 4)
      {
        sub_1004FE8B4(v114, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v117 = *(void *)(v115 + 168);
        uint64_t v116 = *(void *)(v115 + 176);
        long long v118 = *(_OWORD *)(v115 + 152);
        long long v476 = *(_OWORD *)(v115 + 136);
        long long v477 = v118;
        long long v475 = *(_OWORD *)(v115 + 120);
        long long v119 = *(_OWORD *)(v115 + 104);
        long long v472 = *(_OWORD *)(v115 + 88);
        long long v473 = v119;
        long long v120 = *(_OWORD *)(v115 + 72);
        long long v470 = *(_OWORD *)(v115 + 56);
        long long v471 = v120;
        long long v121 = *(_OWORD *)(v115 + 40);
        long long v468 = *(_OWORD *)(v115 + 24);
        long long v469 = v121;
        long long v467 = *(_OWORD *)(v115 + 8);
        uint64_t v122 = *(void *)v115;
        os_log_t v123 = Capability.applePushService.unsafeMutableAddressor();
        char v124 = sub_1003689F8(*v123, v123[1], v123[2], *((unsigned char *)v123 + 24), v122);
        *(void *)uint64_t v114 = v122;
        *(_OWORD *)(v114 + 8) = v467;
        *(_OWORD *)(v114 + 24) = v468;
        *(_OWORD *)(v114 + 40) = v469;
        *(_OWORD *)(v114 + 56) = v470;
        *(_OWORD *)(v114 + 72) = v471;
        *(_OWORD *)(v114 + 88) = v472;
        *(_OWORD *)(v114 + 104) = v473;
        *(_OWORD *)(v114 + 120) = v475;
        *(_OWORD *)(v114 + 136) = v476;
        *(_OWORD *)(v114 + 152) = v477;
        *(void *)(v114 + 168) = v117;
        *(void *)(v114 + 176) = v116;
        if (v124)
        {
          swift_storeEnumTagMultiPayload();
          return &off_1006F2828;
        }
LABEL_49:
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        uint64_t v242 = v475;
        uint64_t v243 = v471;
        uint64_t v244 = v476;
        uint64_t v245 = v477;
        (*(void (**)(void, void, void))(v475 + 16))(v471, v476, v477);
        uint64_t v246 = v244;
        uint64_t v247 = v469;
        sub_1004FE84C(v246, v469, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        uint64_t v248 = v470;
        sub_1004FE84C(v247, v470, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_1004FE8B4(v247, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v249 = sub_1005E0EB0();
        os_log_type_t v250 = sub_1005E25A0();
        if (os_log_type_enabled(v249, v250))
        {
          uint64_t v251 = swift_slowAlloc();
          *(void *)&long long v481 = swift_slowAlloc();
          *(_DWORD *)uint64_t v251 = 68158210;
          LODWORD(v492) = 2;
          sub_1005E2960();
          *(_WORD *)(v251 + 8) = 256;
          uint64_t v252 = v248 + *(int *)(v473 + 20);
          LOBYTE(v492) = *(unsigned char *)v252;
          sub_1005E2960();
          *(_WORD *)(v251 + 11) = 2082;
          uint64_t v253 = ConnectionID.debugDescription.getter(*(unsigned int *)(v252 + 4));
          *(void *)&long long v492 = sub_100481E54(v253, v254, (uint64_t *)&v481);
          sub_1005E2960();
          uint64_t v115 = v474;
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v248, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v249, v250, "[%.*hhx-%{public}s] Unexpected enabledCompress", (uint8_t *)v251, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(void, void))(v242 + 8))(v471, v477);
        }
        else
        {
          sub_1004FE8B4(v248, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          (*(void (**)(uint64_t, uint64_t))(v242 + 8))(v243, v245);
        }
        sub_1004FE8B4(v115, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      }
      return (_UNKNOWN **)_swiftEmptyArrayStorage;
    default:
      uint64_t v126 = (unint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v504);
      unint64_t v127 = *v126;
      uint64_t v128 = v126[3];
      if ((~*v126 & 0xF000000000000007) != 0 && ((v127 >> 59) & 0x1E | (v127 >> 2) & 1) == 1)
      {
        uint64_t v128 = *(void *)((v127 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v129 = v476;
      }
      else
      {
        uint64_t v129 = v476;
        if (v128) {
          swift_bridgeObjectRetain();
        }
      }
      swift_bridgeObjectRetain();
      sub_10044AE60(v127);
      unint64_t v255 = sub_1004F4EF8(v128, v129);
      swift_bridgeObjectRelease();
      if (v255 > 0xFFFFFFFEFFFFFFFFLL)
      {
        sub_1004831AC(v127);
        swift_bridgeObjectRelease();
        return (_UNKNOWN **)_swiftEmptyArrayStorage;
      }
      sub_10000566C(&qword_100717368);
      uint64_t v125 = (void *)swift_allocObject();
      *((_OWORD *)v125 + 1) = xmmword_1005F6670;
      uint64_t v125[4] = v255;
      v125[5] = 0;
      v125[6] = 0;
      v125[7] = 0;
      sub_1004831AC(v127);
      swift_bridgeObjectRelease();
      return (_UNKNOWN **)v125;
  }
}

uint64_t sub_1004F94F0(uint64_t a1, uint64_t a2)
{
  return sub_1004FA7B4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t sub_1004F950C(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    sub_1005E2C80(44);
    v1._countAndFlagsBits = 0xD000000000000020;
    v1._object = (void *)0x80000001005EB8D0;
    goto LABEL_5;
  }
  if (a1 >> 62 == 1)
  {
    sub_1005E2C80(28);
    v1._object = (void *)0x80000001005EB8B0;
    v1._countAndFlagsBits = 0xD000000000000010;
LABEL_5:
    sub_1005E1E30(v1);
    type metadata accessor for tls_protocol_version_t(0);
    sub_1005E2E90();
    v3._countAndFlagsBits = 0x206574697573202CLL;
    v3._object = (void *)0xE800000000000000;
    sub_1005E1E30(v3);
    type metadata accessor for tls_ciphersuite_t(0);
    sub_1005E2E90();
    return 0;
  }
  return 1701736302;
}

uint64_t sub_1004F9658()
{
  return sub_1004F950C(*v0);
}

char *sub_1004F9660(char *a1, int64_t a2, char *__src, int64_t a4)
{
  uint64_t v4 = __src;
  if (!a4 || !a2) {
    return v4;
  }
  if (a4 >= a2) {
    size_t v5 = a2;
  }
  else {
    size_t v5 = a4;
  }
  if ((v5 & 0x8000000000000000) == 0 && (&a1[v5] <= __src || &__src[v5] <= a1))
  {
    memcpy(a1, __src, v5);
    v4 += v5;
    return v4;
  }
  double result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

BOOL sub_1004F9774(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6) {
      return a4 == a1;
    }
    return 0;
  }
  if (a3 == 1)
  {
    if (a6 == 1)
    {
      if (a2)
      {
        if (a5)
        {
          if (a1 == a4 && a2 == a5) {
            return 1;
          }
          if (sub_1005E3290()) {
            return 1;
          }
        }
      }
      else if (!a5)
      {
        return 1;
      }
    }
    return 0;
  }
  switch(a1)
  {
    case 1:
      if (a6 != 2 || a4 != 1 || a5) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 2:
      if (a6 != 2 || a4 != 2 || a5) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 3:
      if (a6 != 2 || a4 != 3 || a5) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 4:
      if (a6 != 2 || a4 != 4 || a5) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 5:
      if (a6 != 2 || a4 != 5 || a5) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 6:
      if (a6 != 2 || a4 != 6 || a5) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 7:
      if (a6 != 2 || a4 != 7 || a5) {
        return 0;
      }
      BOOL result = 1;
      break;
    case 8:
      if (a6 != 2 || a4 != 8 || a5) {
        return 0;
      }
      BOOL result = 1;
      break;
    default:
      if (a6 != 2 || a5 | a4) {
        return 0;
      }
      BOOL result = 1;
      break;
  }
  return result;
}

uint64_t sub_1004F9970(uint64_t a1, uint64_t *a2)
{
  uint64_t v120 = a1;
  long long v121 = a2;
  uint64_t v2 = type metadata accessor for Authenticator();
  __chkstk_darwin(v2 - 8);
  uint64_t v114 = (uint64_t *)((char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for UnauthenticatedState();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v117 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v119 = (uint64_t)&v114 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v118 = (uint64_t)&v114 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v116 = (uint64_t)&v114 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v114 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v114 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (uint64_t *)((char *)&v114 - v20);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v115 = (uint64_t *)((char *)&v114 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (uint64_t *)((char *)&v114 - v25);
  __chkstk_darwin(v24);
  uint64_t v28 = (uint64_t *)((char *)&v114 - v27);
  uint64_t v29 = sub_10000566C(&qword_100717AE8);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v32 = (char *)&v114 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (uint64_t)&v32[*(int *)(v30 + 56)];
  sub_1004FE84C(v120, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  uint64_t v34 = (uint64_t)v121;
  long long v121 = (uint64_t *)v33;
  sub_1004FE84C(v34, v33, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004FE84C((uint64_t)v32, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v37 = (uint64_t)v32;
      uint64_t v40 = *v26;
      uint64_t v41 = v121;
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_12;
      }
      goto LABEL_44;
    case 2u:
      uint64_t v42 = v115;
      sub_1004FE84C((uint64_t)v32, (uint64_t)v115, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v43 = (uint64_t)v121;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v44 = v114;
        sub_1004FE7E4(v43, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for Authenticator);
        char v45 = sub_100451900(v42, v44);
        sub_1004FE8B4((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for Authenticator);
        sub_1004FE8B4((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for Authenticator);
        sub_1004FE8B4((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        return v45 & 1;
      }
      sub_1004FE8B4((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for Authenticator);
      goto LABEL_47;
    case 3u:
      sub_1004FE84C((uint64_t)v32, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v37 = (uint64_t)v32;
      uint64_t v40 = *v21;
      uint64_t v41 = v121;
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_44;
      }
LABEL_12:
      char v45 = sub_10035D1D4(v40, *v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 4u:
      sub_1004FE84C((uint64_t)v32, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v46 = *(void *)v18;
      long long v47 = *(_OWORD *)(v18 + 120);
      long long v48 = *(_OWORD *)(v18 + 152);
      long long v132 = *(_OWORD *)(v18 + 136);
      long long v133 = v48;
      long long v134 = *(_OWORD *)(v18 + 168);
      long long v49 = *(_OWORD *)(v18 + 56);
      long long v50 = *(_OWORD *)(v18 + 88);
      long long v128 = *(_OWORD *)(v18 + 72);
      long long v129 = v50;
      long long v130 = *(_OWORD *)(v18 + 104);
      long long v131 = v47;
      long long v51 = *(_OWORD *)(v18 + 24);
      long long v124 = *(_OWORD *)(v18 + 8);
      long long v125 = v51;
      long long v126 = *(_OWORD *)(v18 + 40);
      long long v127 = v49;
      uint64_t v52 = v121;
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_14;
      }
      goto LABEL_19;
    case 5u:
      sub_1004FE84C((uint64_t)v32, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v46 = *(void *)v15;
      long long v60 = *(_OWORD *)(v15 + 120);
      long long v61 = *(_OWORD *)(v15 + 152);
      long long v132 = *(_OWORD *)(v15 + 136);
      long long v133 = v61;
      long long v134 = *(_OWORD *)(v15 + 168);
      long long v62 = *(_OWORD *)(v15 + 56);
      long long v63 = *(_OWORD *)(v15 + 88);
      long long v128 = *(_OWORD *)(v15 + 72);
      long long v129 = v63;
      long long v130 = *(_OWORD *)(v15 + 104);
      long long v131 = v60;
      long long v64 = *(_OWORD *)(v15 + 24);
      long long v124 = *(_OWORD *)(v15 + 8);
      long long v125 = v64;
      long long v126 = *(_OWORD *)(v15 + 40);
      long long v127 = v62;
      uint64_t v52 = v121;
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_19;
      }
      goto LABEL_14;
    case 6u:
      uint64_t v37 = (uint64_t)v32;
      uint64_t v65 = v116;
      sub_1004FE84C((uint64_t)v32, v116, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v66 = *(void *)v65;
      long long v67 = *(_OWORD *)(v65 + 120);
      long long v68 = *(_OWORD *)(v65 + 152);
      long long v132 = *(_OWORD *)(v65 + 136);
      long long v133 = v68;
      long long v134 = *(_OWORD *)(v65 + 168);
      long long v69 = *(_OWORD *)(v65 + 56);
      long long v70 = *(_OWORD *)(v65 + 88);
      long long v128 = *(_OWORD *)(v65 + 72);
      long long v129 = v70;
      long long v130 = *(_OWORD *)(v65 + 104);
      long long v131 = v67;
      long long v71 = *(_OWORD *)(v65 + 24);
      long long v124 = *(_OWORD *)(v65 + 8);
      long long v125 = v71;
      long long v126 = *(_OWORD *)(v65 + 40);
      long long v127 = v69;
      uint64_t v72 = v121;
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        sub_100086C14((uint64_t)&v124);
LABEL_44:
        swift_bridgeObjectRelease();
        uint64_t v32 = (char *)v37;
        goto LABEL_47;
      }
      uint64_t v73 = *v72;
      long long v74 = *(_OWORD *)(v72 + 15);
      long long v75 = *(_OWORD *)(v72 + 19);
      long long v143 = *(_OWORD *)(v72 + 17);
      long long v144 = v75;
      long long v145 = *(_OWORD *)(v72 + 21);
      long long v76 = *(_OWORD *)(v72 + 7);
      long long v77 = *(_OWORD *)(v72 + 11);
      long long v139 = *(_OWORD *)(v72 + 9);
      long long v140 = v77;
      long long v141 = *(_OWORD *)(v72 + 13);
      long long v142 = v74;
      long long v78 = *(_OWORD *)(v72 + 3);
      long long v135 = *(_OWORD *)(v72 + 1);
      long long v136 = v78;
      long long v137 = *(_OWORD *)(v72 + 5);
      long long v138 = v76;
      char v79 = sub_10035D1D4(v66, v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v79) {
        goto LABEL_16;
      }
      goto LABEL_23;
    case 7u:
      uint64_t v80 = v118;
      sub_1004FE84C((uint64_t)v32, v118, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      long long v81 = *(_OWORD *)(v80 + 16);
      v122[0] = *(_OWORD *)v80;
      v122[1] = v81;
      long long v82 = *(_OWORD *)(v80 + 48);
      v122[2] = *(_OWORD *)(v80 + 32);
      v122[3] = v82;
      uint64_t v46 = *(void *)(v80 + 64);
      long long v83 = *(_OWORD *)(v80 + 184);
      long long v84 = *(_OWORD *)(v80 + 216);
      long long v132 = *(_OWORD *)(v80 + 200);
      long long v133 = v84;
      long long v134 = *(_OWORD *)(v80 + 232);
      long long v85 = *(_OWORD *)(v80 + 120);
      long long v86 = *(_OWORD *)(v80 + 152);
      long long v128 = *(_OWORD *)(v80 + 136);
      long long v129 = v86;
      long long v130 = *(_OWORD *)(v80 + 168);
      long long v131 = v83;
      long long v87 = *(_OWORD *)(v80 + 88);
      long long v124 = *(_OWORD *)(v80 + 72);
      long long v125 = v87;
      long long v126 = *(_OWORD *)(v80 + 104);
      long long v127 = v85;
      uint64_t v88 = v121;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        sub_100086C14((uint64_t)&v124);
        swift_bridgeObjectRelease();
        sub_10035F628((uint64_t)v122);
        goto LABEL_47;
      }
      uint64_t v37 = (uint64_t)v32;
      long long v89 = *((_OWORD *)v88 + 1);
      v123[0] = *(_OWORD *)v88;
      v123[1] = v89;
      long long v90 = *((_OWORD *)v88 + 3);
      v123[2] = *((_OWORD *)v88 + 2);
      v123[3] = v90;
      uint64_t v53 = v88[8];
      long long v91 = *(_OWORD *)(v88 + 23);
      long long v92 = *(_OWORD *)(v88 + 27);
      long long v143 = *(_OWORD *)(v88 + 25);
      long long v144 = v92;
      long long v145 = *(_OWORD *)(v88 + 29);
      long long v93 = *(_OWORD *)(v88 + 15);
      long long v94 = *(_OWORD *)(v88 + 19);
      long long v139 = *(_OWORD *)(v88 + 17);
      long long v140 = v94;
      long long v141 = *(_OWORD *)(v88 + 21);
      long long v142 = v91;
      long long v95 = *(_OWORD *)(v88 + 11);
      long long v135 = *(_OWORD *)(v88 + 9);
      long long v136 = v95;
      long long v137 = *(_OWORD *)(v88 + 13);
      long long v138 = v93;
      char v96 = static PushRegistrationInfo.__derived_struct_equals(_:_:)(v122, v123);
      sub_10035F628((uint64_t)v122);
      sub_10035F628((uint64_t)v123);
      if (v96) {
        goto LABEL_15;
      }
      sub_100086C14((uint64_t)&v135);
      swift_bridgeObjectRelease();
      sub_100086C14((uint64_t)&v124);
      goto LABEL_51;
    case 8u:
      uint64_t v97 = v119;
      sub_1004FE84C((uint64_t)v32, v119, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v46 = *(void *)v97;
      long long v98 = *(_OWORD *)(v97 + 120);
      long long v99 = *(_OWORD *)(v97 + 152);
      long long v132 = *(_OWORD *)(v97 + 136);
      long long v133 = v99;
      long long v134 = *(_OWORD *)(v97 + 168);
      long long v100 = *(_OWORD *)(v97 + 56);
      long long v101 = *(_OWORD *)(v97 + 88);
      long long v128 = *(_OWORD *)(v97 + 72);
      long long v129 = v101;
      long long v130 = *(_OWORD *)(v97 + 104);
      long long v131 = v98;
      long long v102 = *(_OWORD *)(v97 + 24);
      long long v124 = *(_OWORD *)(v97 + 8);
      long long v125 = v102;
      long long v126 = *(_OWORD *)(v97 + 40);
      long long v127 = v100;
      uint64_t v52 = v121;
      if (swift_getEnumCaseMultiPayload() != 8)
      {
LABEL_19:
        sub_100086C14((uint64_t)&v124);
LABEL_20:
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
LABEL_14:
      uint64_t v37 = (uint64_t)v32;
      uint64_t v53 = *v52;
      long long v54 = *(_OWORD *)(v52 + 15);
      long long v55 = *(_OWORD *)(v52 + 19);
      long long v143 = *(_OWORD *)(v52 + 17);
      long long v144 = v55;
      long long v145 = *(_OWORD *)(v52 + 21);
      long long v56 = *(_OWORD *)(v52 + 7);
      long long v57 = *(_OWORD *)(v52 + 11);
      long long v139 = *(_OWORD *)(v52 + 9);
      long long v140 = v57;
      long long v141 = *(_OWORD *)(v52 + 13);
      long long v142 = v54;
      long long v58 = *(_OWORD *)(v52 + 3);
      long long v135 = *(_OWORD *)(v52 + 1);
      long long v136 = v58;
      long long v137 = *(_OWORD *)(v52 + 5);
      long long v138 = v56;
LABEL_15:
      char v59 = sub_10035D1D4(v46, v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
      {
LABEL_23:
        sub_100086C14((uint64_t)&v135);
        sub_100086C14((uint64_t)&v124);
        goto LABEL_52;
      }
LABEL_16:
      char v45 = static ServerID.__derived_struct_equals(_:_:)(&v124, &v135);
      sub_100086C14((uint64_t)&v124);
      sub_100086C14((uint64_t)&v135);
LABEL_17:
      sub_1004FE8B4(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      return v45 & 1;
    case 9u:
      uint64_t v103 = v117;
      sub_1004FE84C((uint64_t)v32, v117, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v104 = (uint64_t)v32;
      uint64_t v105 = *(void *)v103;
      uint64_t v106 = *(void *)(v103 + 8);
      char v107 = *(unsigned char *)(v103 + 16);
      uint64_t v108 = v121;
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v109 = *v108;
        uint64_t v110 = v108[1];
        char v111 = *((unsigned char *)v108 + 16);
        char v45 = sub_1004F9774(v105, v106, v107, *v108, v110, v111);
        sub_10046564C(v105, v106, v107);
        sub_10046564C(v109, v110, v111);
        sub_1004FE8B4(v104, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        return v45 & 1;
      }
      sub_10046564C(v105, v106, v107);
      uint64_t v32 = (char *)v104;
LABEL_47:
      sub_100007A48((uint64_t)v32, &qword_100717AE8);
      goto LABEL_48;
    case 0xAu:
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_47;
      }
      goto LABEL_40;
    case 0xBu:
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_47;
      }
      goto LABEL_40;
    case 0xCu:
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_47;
      }
      goto LABEL_40;
    case 0xDu:
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_47;
      }
      goto LABEL_40;
    case 0xEu:
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_47;
      }
LABEL_40:
      uint64_t v112 = (uint64_t)v32;
      goto LABEL_41;
    default:
      sub_1004FE84C((uint64_t)v32, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v35 = *v28;
      uint64_t v36 = v121;
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_20;
      }
      uint64_t v37 = (uint64_t)v32;
      uint64_t v38 = *v36;
      if (!v35)
      {
        if (!v38) {
          goto LABEL_53;
        }
        goto LABEL_51;
      }
      if (!v38)
      {
LABEL_51:
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
      char v39 = sub_10035D1D4(v35, *v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v39)
      {
LABEL_53:
        uint64_t v112 = v37;
LABEL_41:
        sub_1004FE8B4(v112, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        char v45 = 1;
        return v45 & 1;
      }
LABEL_52:
      sub_1004FE8B4(v37, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
LABEL_48:
      char v45 = 0;
      return v45 & 1;
  }
}

uint64_t sub_1004FA4F0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 176) <= 6u) {
    return *(unsigned __int8 *)(a1 + 176);
  }
  else {
    return (*(_DWORD *)a1 + 7);
  }
}

uint64_t sub_1004FA508(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  switch(a23)
  {
    case 0:
      sub_10044AE60(result);
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 1:
      swift_bridgeObjectRetain();
      sub_1004A03E8(a2);
      return sub_1001B0638(a5, a6, a7);
    case 2:
      sub_10044CA28(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
      return sub_100485030(a11, a12, a13);
    case 3:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 4:
      return sub_100484DAC(result, a2, a3);
    case 5:
      swift_bridgeObjectRetain();
LABEL_14:
      BOOL result = swift_bridgeObjectRetain();
      break;
    case 6:
      BOOL result = sub_1004A9860(result, a2, a3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004FA7B4(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return a4 >> 62 == 2 && a4 == 0x8000000000000000 && !(a6 | a5);
    }
    if (a4 >> 62 != 1 || a1 != a4) {
      return 0;
    }
    if (a3)
    {
      if (a6)
      {
        if (a2 == a5 && a3 == a6) {
          return 1;
        }
        return (sub_1005E3290() & 1) != 0;
      }
      return 0;
    }
    return !a6;
  }
  if (a4 >> 62 || a1 != a4) {
    return 0;
  }
  if (!a3) {
    return !a6;
  }
  if (a6)
  {
    if (a2 == a5 && a3 == a6) {
      return 1;
    }
    return (sub_1005E3290() & 1) != 0;
  }
  return 0;
}

uint64_t sub_1004FA884(uint64_t a1, uint64_t a2)
{
  sub_10044AF04(a2, (uint64_t)v150);
  sub_10044AF04((uint64_t)v150, (uint64_t)v164);
  sub_10044AF04(a1, (uint64_t)v163);
  switch(sub_1004FA4F0((uint64_t)v163))
  {
    case 1u:
      uint64_t v15 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v163);
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      uint64_t v18 = v15[2];
      uint64_t v19 = v15[3];
      uint64_t v20 = v15[4];
      uint64_t v21 = v15[5];
      uint64_t v22 = v15[6];
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 1) {
        goto LABEL_118;
      }
      uint64_t v23 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v162);
      uint64_t v24 = v23[1];
      uint64_t v25 = v23[2];
      uint64_t v26 = v23[3];
      uint64_t v135 = v23[5];
      uint64_t v137 = v23[4];
      uint64_t v134 = v23[6];
      if ((sub_1004AFDC0(v16, *v23) & 1) == 0) {
        goto LABEL_118;
      }
      *(void *)&long long v151 = v17;
      *((void *)&v151 + 1) = v18;
      *(void *)&long long v152 = v19;
      *((void *)&v152 + 1) = v20;
      *(void *)&long long v153 = v21;
      *((void *)&v153 + 1) = v22;
      *(void *)&long long v139 = v24;
      *((void *)&v139 + 1) = v25;
      *(void *)&long long v140 = v26;
      *((void *)&v140 + 1) = v137;
      *(void *)&long long v141 = v135;
      *((void *)&v141 + 1) = v134;
      char v27 = sub_10049C238((uint64_t)&v151, &v139);
      return v27 & 1;
    case 2u:
      uint64_t v28 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v163);
      uint64_t v30 = *(void *)v28;
      unint64_t v29 = *(void *)(v28 + 8);
      uint64_t v32 = *(void *)(v28 + 16);
      unint64_t v31 = *(void *)(v28 + 24);
      long long v133 = *(_OWORD *)(v28 + 32);
      uint64_t v33 = *(void *)(v28 + 56);
      uint64_t v34 = *(void *)(v28 + 64);
      uint64_t v136 = *(void *)(v28 + 48);
      unint64_t v138 = *(void *)(v28 + 72);
      unint64_t v35 = *(void *)(v28 + 80);
      uint64_t v131 = *(void *)(v28 + 88);
      uint64_t v36 = *(void *)(v28 + 96);
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 2) {
        goto LABEL_118;
      }
      uint64_t v129 = v36;
      uint64_t v37 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v162);
      uint64_t v39 = *v37;
      unint64_t v38 = v37[1];
      uint64_t v40 = v37[2];
      unint64_t v41 = v37[3];
      uint64_t v42 = v37[4];
      unint64_t v43 = v37[5];
      uint64_t v44 = v37[6];
      uint64_t v45 = v37[7];
      uint64_t v46 = v37[8];
      unint64_t v47 = v37[9];
      unint64_t v130 = v37[10];
      uint64_t v128 = v37[12];
      if ((v33 & 0x1000000000000000) != 0)
      {
        uint64_t v126 = v37[11];
        *(void *)&long long v151 = v30;
        *((void *)&v151 + 1) = v29;
        *(void *)&long long v152 = v32;
        *((void *)&v152 + 1) = v31;
        long long v153 = v133;
        *(void *)&long long v154 = v136;
        *((void *)&v154 + 1) = v33 & 0xEFFFFFFFFFFFFFFFLL;
        *(void *)&long long v155 = v34;
        *((void *)&v155 + 1) = v138;
        if ((v45 & 0x1000000000000000) == 0) {
          goto LABEL_118;
        }
        uint64_t v48 = v30;
        *(void *)&long long v139 = v39;
        *((void *)&v139 + 1) = v38;
        *(void *)&long long v140 = v40;
        *((void *)&v140 + 1) = v41;
        *(void *)&long long v141 = v42;
        *((void *)&v141 + 1) = v43;
        *(void *)&long long v142 = v44;
        *((void *)&v142 + 1) = v45 & 0xEFFFFFFFFFFFFFFFLL;
        *(void *)&long long v143 = v46;
        *((void *)&v143 + 1) = v47;
        unint64_t v118 = v47;
        uint64_t v119 = v46;
        uint64_t v114 = v39;
        unint64_t v115 = v38;
        uint64_t v116 = v40;
        unint64_t v117 = v41;
        uint64_t v120 = v42;
        unint64_t v121 = v43;
        uint64_t v122 = v44;
        uint64_t v123 = v45;
        sub_10044CA28(v39, v38, v40, v41, v42, v43, v44, v45, v46, v47);
        uint64_t v124 = v33;
        sub_10044CA28(v30, v29, v32, v31, v133, *((unint64_t *)&v133 + 1), v136, v33, v34, v138);
        unint64_t v64 = v35;
        unint64_t v101 = v35;
        uint64_t v66 = v129;
        sub_100485030(v101, v131, v129);
        uint64_t v68 = v126;
        uint64_t v67 = v128;
        sub_100485030(v130, v126, v128);
        uint64_t v63 = v34;
        if ((sub_100455D6C((uint64_t)&v151, (uint64_t)&v139) & 1) == 0)
        {
          sub_10048316C(v130, v126, v128);
          sub_10048316C(v64, v131, v129);
          sub_10044B008(v114, v115, v116, v117, v120, v121, v122, v123, v119, v118);
          sub_10044B008(v48, v29, v32, v31, v133, *((unint64_t *)&v133 + 1), v136, v124, v34, v138);
          goto LABEL_118;
        }
LABEL_47:
        if (!v66)
        {
          sub_10044B008(v114, v115, v116, v117, v120, v121, v122, v123, v119, v118);
          sub_10044B008(v48, v29, v32, v31, v133, *((unint64_t *)&v133 + 1), v136, v124, v63, v138);
          if (!v67) {
            goto LABEL_44;
          }
          unint64_t v108 = v130;
          uint64_t v109 = v68;
          uint64_t v110 = v67;
          goto LABEL_117;
        }
        if (!v67)
        {
          sub_10044AE60(v64);
          swift_bridgeObjectRetain();
          sub_10044B008(v114, v115, v116, v117, v120, v121, v122, v123, v119, v118);
          sub_10044B008(v48, v29, v32, v31, v133, *((unint64_t *)&v133 + 1), v136, v124, v63, v138);
          sub_10048316C(v64, v131, v129);
          sub_1004831AC(v64);
          goto LABEL_82;
        }
        unint64_t v102 = v130 & 0xF000000000000007;
        if ((~v64 & 0xF000000000000007) != 0)
        {
          uint64_t v103 = v131;
          uint64_t v104 = v136;
          if (v102 != 0xF000000000000007)
          {
            sub_100485030(v64, v131, v129);
            sub_100485030(v130, v68, v128);
            sub_10044AE60(v130);
            sub_10044AE60(v64);
            static ResponseTextCode.__derived_enum_equals(_:_:)();
            char v127 = v111;
            sub_1004831AC(v130);
            sub_1004831AC(v64);
            if (v127)
            {
LABEL_109:
              if (v103 == v68 && v129 == v128)
              {
                sub_10048316C(v130, v103, v129);
                sub_10044B008(v114, v115, v116, v117, v120, v121, v122, v123, v119, v118);
                sub_10044B008(v48, v29, v32, v31, v133, *((unint64_t *)&v133 + 1), v104, v124, v63, v138);
                uint64_t v112 = v129;
                sub_1004831AC(v130);
LABEL_113:
                swift_bridgeObjectRelease();
                sub_1004831AC(v64);
                swift_bridgeObjectRelease();
                sub_10048316C(v64, v103, v112);
                goto LABEL_44;
              }
              uint64_t v112 = v129;
              char v132 = sub_1005E3290();
              sub_10048316C(v130, v68, v128);
              sub_10044B008(v114, v115, v116, v117, v120, v121, v122, v123, v119, v118);
              sub_10044B008(v48, v29, v32, v31, v133, *((unint64_t *)&v133 + 1), v136, v124, v63, v138);
              sub_1004831AC(v130);
              if (v132) {
                goto LABEL_113;
              }
              goto LABEL_116;
            }
            sub_10048316C(v130, v68, v128);
LABEL_115:
            sub_10044B008(v114, v115, v116, v117, v120, v121, v122, v123, v119, v118);
            sub_10044B008(v48, v29, v32, v31, v133, *((unint64_t *)&v133 + 1), v104, v124, v63, v138);
            sub_1004831AC(v130);
            uint64_t v112 = v129;
LABEL_116:
            swift_bridgeObjectRelease();
            sub_1004831AC(v64);
            swift_bridgeObjectRelease();
            unint64_t v108 = v64;
            uint64_t v109 = v103;
            uint64_t v110 = v112;
LABEL_117:
            sub_10048316C(v108, v109, v110);
            goto LABEL_118;
          }
          sub_10044AE60(v64);
        }
        else
        {
          uint64_t v103 = v131;
          uint64_t v104 = v136;
          if (v102 == 0xF000000000000007)
          {
            sub_100485030(v64, v131, v129);
            sub_100485030(v130, v68, v128);
            goto LABEL_109;
          }
        }
        swift_bridgeObjectRetain();
        goto LABEL_115;
      }
      if ((v45 & 0x1000000000000000) != 0) {
        goto LABEL_118;
      }
      uint64_t v48 = v30;
      uint64_t v124 = v33;
      uint64_t v125 = v37[11];
      unint64_t v118 = v37[9];
      uint64_t v119 = v37[8];
      uint64_t v120 = v37[4];
      unint64_t v121 = v37[5];
      uint64_t v122 = v37[6];
      uint64_t v123 = v37[7];
      if (v30 == v39 && v29 == v38) {
        goto LABEL_122;
      }
      uint64_t v49 = v37[2];
      unint64_t v50 = v37[3];
      uint64_t v51 = v48;
      unint64_t v52 = v37[1];
      uint64_t v53 = *v37;
      char v54 = sub_1005E3290();
      uint64_t v39 = v53;
      unint64_t v38 = v52;
      uint64_t v48 = v51;
      uint64_t v40 = v49;
      unint64_t v41 = v50;
      char v55 = v54;
      char v27 = 0;
      if (v55)
      {
LABEL_122:
        if (v32 == v40 && v31 == v41) {
          goto LABEL_18;
        }
        uint64_t v56 = v40;
        unint64_t v57 = v41;
        uint64_t v58 = v48;
        unint64_t v59 = v38;
        uint64_t v60 = v39;
        char v61 = sub_1005E3290();
        uint64_t v39 = v60;
        unint64_t v38 = v59;
        uint64_t v48 = v58;
        uint64_t v40 = v56;
        unint64_t v41 = v57;
        char v62 = v61;
        char v27 = 0;
        if (v62)
        {
LABEL_18:
          uint64_t v114 = v39;
          unint64_t v115 = v38;
          uint64_t v116 = v40;
          unint64_t v117 = v41;
          sub_10044CA28(v39, v38, v40, v41, v120, v121, v122, v123, v119, v118);
          uint64_t v63 = v34;
          sub_10044CA28(v48, v29, v32, v31, v133, *((unint64_t *)&v133 + 1), v136, v124, v34, v138);
          unint64_t v64 = v35;
          unint64_t v65 = v35;
          uint64_t v66 = v129;
          sub_100485030(v65, v131, v129);
          uint64_t v68 = v125;
          uint64_t v67 = v128;
          sub_100485030(v130, v125, v128);
          goto LABEL_47;
        }
      }
      return v27 & 1;
    case 3u:
      long long v69 = (long long *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v163);
      long long v146 = v69[7];
      long long v147 = v69[8];
      long long v148 = v69[9];
      long long v149 = v69[10];
      long long v142 = v69[3];
      long long v143 = v69[4];
      long long v144 = v69[5];
      long long v145 = v69[6];
      long long v139 = *v69;
      long long v140 = v69[1];
      long long v141 = v69[2];
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 3) {
        goto LABEL_118;
      }
      long long v70 = (long long *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v162);
      long long v158 = v70[7];
      long long v159 = v70[8];
      long long v160 = v70[9];
      long long v161 = v70[10];
      long long v154 = v70[3];
      long long v155 = v70[4];
      long long v156 = v70[5];
      long long v157 = v70[6];
      long long v151 = *v70;
      long long v152 = v70[1];
      long long v153 = v70[2];
      char v27 = static ServerID.__derived_struct_equals(_:_:)(&v139, &v151);
      return v27 & 1;
    case 4u:
      long long v71 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v163);
      uint64_t v73 = *v71;
      uint64_t v72 = v71[1];
      uint64_t v75 = v71[2];
      uint64_t v74 = v71[3];
      uint64_t v77 = v71[4];
      uint64_t v76 = v71[5];
      uint64_t v79 = v71[6];
      uint64_t v78 = v71[7];
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 4) {
        goto LABEL_118;
      }
      uint64_t v80 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v162);
      uint64_t v82 = *v80;
      uint64_t v81 = v80[1];
      uint64_t v84 = v80[2];
      uint64_t v83 = v80[3];
      uint64_t v86 = v80[4];
      uint64_t v85 = v80[5];
      uint64_t v88 = v80[6];
      uint64_t v87 = v80[7];
      if (v75)
      {
        if (v84)
        {
          LODWORD(v151) = v73;
          *((void *)&v151 + 1) = v72;
          *(void *)&long long v152 = v75;
          *((void *)&v152 + 1) = v74;
          *(void *)&long long v153 = v77;
          *((void *)&v153 + 1) = v76;
          *(void *)&long long v154 = v79;
          *((void *)&v154 + 1) = v78;
          LODWORD(v139) = v82;
          *((void *)&v139 + 1) = v81;
          *(void *)&long long v140 = v84;
          *((void *)&v140 + 1) = v83;
          *(void *)&long long v141 = v86;
          *((void *)&v141 + 1) = v85;
          *(void *)&long long v142 = v88;
          *((void *)&v142 + 1) = v87;
          sub_1004FF4C8(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1004FA508);
          sub_1004FF4C8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1004FA508);
          char v89 = static PushRegistrationInfo.__derived_struct_equals(_:_:)(&v151, &v139);
          sub_1004FF4C8(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1004FE970);
          sub_1004FF4C8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1004FE970);
          if (v89) {
            goto LABEL_44;
          }
LABEL_118:
          char v27 = 0;
          return v27 & 1;
        }
LABEL_62:
        *(void *)&long long v139 = v73;
        *((void *)&v139 + 1) = v72;
        *(void *)&long long v140 = v75;
        *((void *)&v140 + 1) = v74;
        *(void *)&long long v141 = v77;
        *((void *)&v141 + 1) = v76;
        *(void *)&long long v142 = v79;
        *((void *)&v142 + 1) = v78;
        *(void *)&long long v143 = v82;
        *((void *)&v143 + 1) = v81;
        *(void *)&long long v144 = v84;
        *((void *)&v144 + 1) = v83;
        *(void *)&long long v145 = v86;
        *((void *)&v145 + 1) = v85;
        *(void *)&long long v146 = v88;
        *((void *)&v146 + 1) = v87;
        sub_1004FF4C8(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1004FA508);
        sub_1004FF4C8(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1004FA508);
        sub_1004FF438((uint64_t *)&v139);
        goto LABEL_118;
      }
      if (v84) {
        goto LABEL_62;
      }
      sub_10044AF04((uint64_t)v164, (uint64_t)&v139);
      char v107 = (uint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v139);
      sub_100484DAC(*v107, v107[1], v107[2]);
LABEL_44:
      char v27 = 1;
      return v27 & 1;
    case 5u:
      uint64_t v90 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v163);
      int v91 = *(_DWORD *)v90;
      uint64_t v92 = *(void *)(v90 + 8);
      uint64_t v93 = *(void *)(v90 + 16);
      uint64_t v94 = *(void *)(v90 + 24);
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 5) {
        goto LABEL_118;
      }
      uint64_t v95 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v162);
      char v27 = static PushRegistrationResponse.__derived_struct_equals(_:_:)(v91, v92, v93, v94, *(_DWORD *)v95, *(void *)(v95 + 8), *(void *)(v95 + 16), *(void *)(v95 + 24));
      return v27 & 1;
    case 6u:
      char v96 = (long long *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v163);
      sub_10042C9B0(v96, (uint64_t)&v151);
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 6) {
        goto LABEL_118;
      }
      uint64_t v97 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v162);
      unint64_t v99 = *(void *)v97;
      unint64_t v98 = *(void *)(v97 + 8);
      int v100 = *(unsigned __int8 *)(v97 + 16);
      sub_10042C9B0(&v151, (uint64_t)&v139);
      if ((_BYTE)v140)
      {
        if (v140 != 1)
        {
          switch((uint64_t)v139)
          {
            case 1:
              if (v100 != 2 || v99 != 1) {
                goto LABEL_118;
              }
              goto LABEL_106;
            case 2:
              if (v100 != 2 || v99 != 2) {
                goto LABEL_118;
              }
              goto LABEL_106;
            case 3:
              if (v100 != 2 || v99 != 3) {
                goto LABEL_118;
              }
              goto LABEL_106;
            case 4:
              if (v100 != 2 || v99 != 4) {
                goto LABEL_118;
              }
              goto LABEL_106;
            case 5:
              if (v100 != 2 || v99 != 5) {
                goto LABEL_118;
              }
              goto LABEL_106;
            case 6:
              if (v100 != 2 || v99 != 6) {
                goto LABEL_118;
              }
              goto LABEL_106;
            case 7:
              if (v100 != 2 || v99 != 7) {
                goto LABEL_118;
              }
              goto LABEL_106;
            case 8:
              if (v100 == 2 && v99 == 8) {
                goto LABEL_106;
              }
              goto LABEL_118;
            default:
              if (v100 != 2 || v98 | v99) {
                goto LABEL_118;
              }
              goto LABEL_44;
          }
        }
        if (v100 == 1)
        {
          if (*((void *)&v139 + 1))
          {
            if (v98 && (v139 == __PAIR128__(v98, v99) || (sub_1005E3290() & 1) != 0)) {
              goto LABEL_44;
            }
          }
          else
          {
LABEL_106:
            if (!v98) {
              goto LABEL_44;
            }
          }
        }
      }
      else if (!v100 && v139 == v99)
      {
        goto LABEL_44;
      }
      goto LABEL_118;
    case 7u:
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 7) {
        goto LABEL_118;
      }
      goto LABEL_44;
    case 8u:
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 8) {
        goto LABEL_118;
      }
      goto LABEL_44;
    case 9u:
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) != 9) {
        goto LABEL_118;
      }
      goto LABEL_44;
    case 0xAu:
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162) == 10) {
        goto LABEL_44;
      }
      goto LABEL_118;
    default:
      uint64_t v4 = (unint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v163);
      unint64_t v5 = *v4;
      unint64_t v6 = v4[1];
      unint64_t v7 = v4[2];
      uint64_t v8 = v4[3];
      sub_10044AF04(a2, (uint64_t)v162);
      if (sub_1004FA4F0((uint64_t)v162)) {
        goto LABEL_118;
      }
      uint64_t v9 = (unint64_t *)UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v162);
      unint64_t v10 = *v9;
      unint64_t v11 = v9[1];
      unint64_t v13 = v9[2];
      uint64_t v12 = v9[3];
      unint64_t v14 = *v9 & 0xF000000000000007;
      if ((~v5 & 0xF000000000000007) != 0)
      {
        if (v14 == 0xF000000000000007) {
          goto LABEL_118;
        }
        swift_bridgeObjectRetain();
        sub_10044AE60(v10);
        swift_bridgeObjectRetain();
        sub_10044AE60(v5);
        static ResponseTextCode.__derived_enum_equals(_:_:)();
        if ((v105 & 1) == 0) {
          goto LABEL_70;
        }
      }
      else
      {
        if (v14 != 0xF000000000000007) {
          goto LABEL_118;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      if (v6 == v11 && v7 == v13 || (sub_1005E3290() & 1) != 0)
      {
        if (v8)
        {
          if (v12)
          {
            char v106 = sub_10035D1D4(v8, v12);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            sub_1004831AC(v10);
            swift_bridgeObjectRelease();
            sub_1004831AC(v5);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v106) {
              goto LABEL_44;
            }
            goto LABEL_118;
          }
          swift_bridgeObjectRetain_n();
          sub_1004831AC(v10);
          swift_bridgeObjectRelease();
          sub_1004831AC(v5);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1004831AC(v10);
          swift_bridgeObjectRelease();
          sub_1004831AC(v5);
          swift_bridgeObjectRelease();
          if (!v12) {
            goto LABEL_44;
          }
        }
LABEL_82:
        swift_bridgeObjectRelease();
        goto LABEL_118;
      }
LABEL_70:
      sub_1004831AC(v10);
      swift_bridgeObjectRelease();
      sub_1004831AC(v5);
      goto LABEL_82;
  }
}

void *sub_1004FB750()
{
  Swift::String v1 = *(void **)v0;
  unint64_t v2 = *(void *)(*(void *)v0 + 16);
  BOOL result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || (unint64_t v4 = v1[3] >> 1, v4 < v2))
  {
    BOOL result = sub_1004D09A8(result, v2, 1, v1);
    Swift::String v1 = result;
    unint64_t v4 = result[3] >> 1;
  }
  uint64_t v5 = v1[2];
  uint64_t v6 = v4 - v5;
  if (v4 == v5)
  {
    uint64_t v7 = 0;
  }
  else
  {
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_30;
    }
    BOOL result = (void *)sub_1005E3020();
    if (v24)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = 0;
      char v8 = v23;
      unint64_t v9 = ~v5 + v4;
      do
      {
        *((unsigned char *)v1 + v5 + v7 + 32) = v8;
        if (v9 == v7)
        {
          uint64_t v7 = v6;
          goto LABEL_15;
        }
        BOOL result = (void *)sub_1005E3020();
        char v8 = v23;
        ++v7;
      }
      while ((v24 & 1) == 0);
      if (!v7) {
        goto LABEL_17;
      }
LABEL_15:
      uint64_t v10 = v1[2];
      BOOL v11 = __OFADD__(v10, v7);
      uint64_t v12 = v10 + v7;
      if (v11)
      {
        __break(1u);
        return result;
      }
      v1[2] = v12;
    }
  }
LABEL_17:
  if (v7 != v6) {
    goto LABEL_18;
  }
  uint64_t v6 = v1[2];
  BOOL result = (void *)sub_1005E3020();
  if (v22) {
    goto LABEL_18;
  }
  uint64_t v13 = v21;
  while (1)
  {
    unint64_t v14 = v1[3];
    int64_t v15 = v14 >> 1;
    if ((uint64_t)(v14 >> 1) < v6 + 1) {
      break;
    }
    if (v6 < v15) {
      goto LABEL_24;
    }
LABEL_21:
    v1[2] = v6;
  }
  uint64_t v16 = v1;
  uint64_t v17 = v13;
  uint64_t v18 = sub_1004D09A8((void *)(v14 > 1), v6 + 1, 1, v16);
  uint64_t v13 = v17;
  Swift::String v1 = v18;
  int64_t v15 = v18[3] >> 1;
  if (v6 >= v15) {
    goto LABEL_21;
  }
LABEL_24:
  while (1)
  {
    *((unsigned char *)v1 + v6++ + 32) = v13;
    BOOL result = (void *)sub_1005E3020();
    if (v20) {
      break;
    }
    uint64_t v13 = v19;
    if (v15 == v6)
    {
      uint64_t v6 = v15;
      goto LABEL_21;
    }
  }
LABEL_30:
  v1[2] = v6;
LABEL_18:
  *(void *)uint64_t v0 = v1;
  return result;
}

uint64_t sub_1004FB924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E04E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = a1;
  v13[1] = a2;
  swift_bridgeObjectRetain();
  sub_1005E04C0();
  sub_10049C168();
  uint64_t v8 = sub_1005E29A0();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

unint64_t sub_1004FBA60(NSObject *a1, unint64_t a2, uint64_t *a3, void (*a4)(char **__return_ptr, uint64_t), uint64_t a5)
{
  void (*v273)(char **__return_ptr, uint64_t);
  char *v274;
  char *v275;
  _OWORD *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  char *v284;
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  char *v289;
  os_log_t v290;
  unint64_t v291;
  char *v292;
  uint64_t v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  char *v300;
  char v301[8];
  uint64_t v302;
  void *v303;

  uint64_t v272 = a5;
  os_log_type_t v273 = a4;
  uint64_t v295 = a2;
  os_log_type_t v297 = type metadata accessor for UnauthenticatedState();
  __chkstk_darwin(v297);
  uint64_t v276 = (_OWORD *)((char *)&v267 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v293 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v8 = __chkstk_darwin(v293);
  uint64_t v282 = (uint64_t)&v267 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  os_log_type_t v281 = (uint64_t)&v267 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v291 = (unint64_t)&v267 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v271 = (uint64_t)&v267 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v270 = (uint64_t)&v267 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v277 = (uint64_t)&v267 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v268 = (uint64_t)&v267 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v279 = (uint64_t)&v267 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v280 = (uint64_t)&v267 - v25;
  __chkstk_darwin(v24);
  uint64_t v278 = (uint64_t)&v267 - v26;
  uint64_t v298 = sub_1005E0ED0();
  uint64_t v296 = *(void *)(v298 - 8);
  uint64_t v27 = __chkstk_darwin(v298);
  uint64_t v287 = (char *)&v267 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v286 = (char *)&v267 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v292 = (char *)&v267 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v275 = (char *)&v267 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v274 = (char *)&v267 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v283 = (char *)&v267 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  unint64_t v269 = (char *)&v267 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  unint64_t v285 = (char *)&v267 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v284 = (char *)&v267 - v44;
  __chkstk_darwin(v43);
  uint64_t v288 = (char *)&v267 - v45;
  uint64_t v46 = type metadata accessor for UntaggedResponse(0);
  uint64_t v47 = __chkstk_darwin(v46);
  os_log_type_t v289 = (char *)&v267 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v51 = (unint64_t *)((char *)&v267 - v50);
  uint64_t v52 = __chkstk_darwin(v49);
  char v54 = (char *)&v267 - v53;
  uint64_t v55 = __chkstk_darwin(v52);
  unint64_t v57 = (uint64_t *)((char *)&v267 - v56);
  uint64_t v58 = __chkstk_darwin(v55);
  uint64_t v60 = (unint64_t *)((char *)&v267 - v59);
  __chkstk_darwin(v58);
  char v62 = (unint64_t *)((char *)&v267 - v61);
  uint64_t v63 = sub_10000566C(&qword_100717AF0);
  uint64_t v64 = __chkstk_darwin(v63 - 8);
  uint64_t v66 = (char *)&v267 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = (uint64_t)&v66[*(int *)(v64 + 56)];
  uint64_t v290 = a1;
  sub_1004FE84C((uint64_t)a1, (uint64_t)v66, type metadata accessor for UntaggedResponse);
  uint64_t v294 = a3;
  sub_1004FE84C((uint64_t)a3, v67, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  uint64_t v299 = v66;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v68 = (uint64_t)v299;
      sub_1004FE84C((uint64_t)v299, (uint64_t)v60, type metadata accessor for UntaggedResponse);
      unint64_t v69 = *v60;
      long long v70 = (char *)v60[2];
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        uint64_t v292 = (char *)v67;
        sub_1004831AC(v69);
        swift_bridgeObjectRelease();
        uint64_t v145 = v295;
        uint64_t v146 = v296;
        long long v147 = v285;
        uint64_t v148 = v298;
        (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v285, v295, v298);
        uint64_t v149 = v279;
        sub_1004FE84C(v145, v279, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v150 = sub_1005E0EB0();
        os_log_type_t v151 = sub_1005E2590();
        if (os_log_type_enabled(v150, v151))
        {
          uint64_t v152 = swift_slowAlloc();
          uint64_t v300 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v152 = 68158210;
          LODWORD(v303) = 2;
          sub_1005E2960();
          *(_WORD *)(v152 + 8) = 256;
          uint64_t v153 = v149 + *(int *)(v293 + 20);
          LOBYTE(v303) = *(unsigned char *)v153;
          sub_1005E2960();
          *(_WORD *)(v152 + 11) = 2082;
          uint64_t v154 = ConnectionID.debugDescription.getter(*(unsigned int *)(v153 + 4));
          uint64_t v303 = (void *)sub_100481E54(v154, v155, (uint64_t *)&v300);
          sub_1005E2960();
          uint64_t v68 = (uint64_t)v299;
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v149, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v150, v151, "[%.*hhx-%{public}s] Untagged OK from server.", (uint8_t *)v152, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v146 + 8))(v285, v148);
        }
        else
        {
          sub_1004FE8B4(v149, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v148);
        }
        goto LABEL_62;
      }
      if ((~v69 & 0xF000000000000007) == 0 || ((v69 >> 59) & 0x1E | (v69 >> 2) & 1) != 1)
      {
        sub_1004FE8B4((uint64_t)v294, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v181 = v295;
        uint64_t v182 = v296;
        uint64_t v183 = v283;
        uint64_t v184 = v298;
        (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v283, v295, v298);
        uint64_t v185 = v277;
        sub_1004FE84C(v181, v277, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v186 = sub_1005E0EB0();
        os_log_type_t v187 = sub_1005E2590();
        if (os_log_type_enabled(v186, v187))
        {
          uint64_t v188 = swift_slowAlloc();
          uint64_t v292 = v70;
          uint64_t v189 = v188;
          uint64_t v300 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v189 = 68158210;
          LODWORD(v303) = 2;
          sub_1005E2960();
          *(_WORD *)(v189 + 8) = 256;
          uint64_t v190 = *(int *)(v293 + 20);
          uint64_t v295 = v69;
          uint64_t v191 = v185;
          uint64_t v192 = v185 + v190;
          LOBYTE(v303) = *(unsigned char *)v192;
          sub_1005E2960();
          *(_WORD *)(v189 + 11) = 2082;
          uint64_t v193 = ConnectionID.debugDescription.getter(*(unsigned int *)(v192 + 4));
          uint64_t v303 = (void *)sub_100481E54(v193, v194, (uint64_t *)&v300);
          uint64_t v68 = (uint64_t)v299;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v191, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v186, v187, "[%.*hhx-%{public}s] Received OK greeting from server.", (uint8_t *)v189, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1004831AC(v295);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v182 + 8))(v283, v184);
        }
        else
        {
          sub_1004831AC(v69);
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v185, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          (*(void (**)(char *, uint64_t))(v182 + 8))(v183, v184);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_97;
      }
      uint64_t v292 = v70;
      uint64_t v71 = *(void *)((v69 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v73 = v295;
      uint64_t v72 = v296;
      uint64_t v74 = v269;
      uint64_t v75 = v298;
      (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v269, v295, v298);
      uint64_t v76 = v268;
      sub_1004FE84C(v73, v268, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      swift_bridgeObjectRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain_n();
      uint64_t v77 = sub_1005E0EB0();
      LODWORD(v297) = sub_1005E2590();
      if (os_log_type_enabled(v77, (os_log_type_t)v297))
      {
        uint64_t v290 = v77;
        uint64_t v78 = swift_slowAlloc();
        os_log_type_t v289 = (char *)swift_slowAlloc();
        uint64_t v300 = v289;
        *(_DWORD *)uint64_t v78 = 68158466;
        LODWORD(v303) = 2;
        sub_1005E2960();
        *(_WORD *)(v78 + 8) = 256;
        uint64_t v79 = v76 + *(int *)(v293 + 20);
        LOBYTE(v303) = *(unsigned char *)v79;
        sub_1005E2960();
        *(_WORD *)(v78 + 11) = 2082;
        uint64_t v80 = ConnectionID.debugDescription.getter(*(unsigned int *)(v79 + 4));
        uint64_t v303 = (void *)sub_100481E54(v80, v81, (uint64_t *)&v300);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v76, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v78 + 21) = 2080;
        int64_t v82 = *(void *)(v71 + 16);
        uint64_t v83 = v71;
        uint64_t v84 = _swiftEmptyArrayStorage;
        uint64_t v291 = v83;
        if (v82)
        {
          uint64_t v303 = _swiftEmptyArrayStorage;
          sub_1004B885C(0, v82, 0);
          uint64_t v84 = v303;
          uint64_t v85 = (uint64_t *)(v83 + 40);
          do
          {
            uint64_t v86 = *(v85 - 1);
            uint64_t v87 = *v85;
            uint64_t v303 = v84;
            unint64_t v89 = v84[2];
            unint64_t v88 = v84[3];
            swift_bridgeObjectRetain();
            if (v89 >= v88 >> 1)
            {
              sub_1004B885C(v88 > 1, v89 + 1, 1);
              uint64_t v84 = v303;
            }
            v85 += 4;
            v84[2] = v89 + 1;
            uint64_t v90 = &v84[2 * v89];
            v90[4] = v86;
            v90[5] = v87;
            --v82;
          }
          while (v82);
          uint64_t v73 = v295;
          uint64_t v74 = v269;
        }
        uint64_t v303 = v84;
        sub_10000566C(&qword_100715740);
        sub_100007494((unint64_t *)&qword_100715748, &qword_100715740);
        uint64_t v260 = sub_1005E1A80();
        unint64_t v262 = v261;
        swift_bridgeObjectRelease();
        uint64_t v303 = (void *)sub_100481E54(v260, v262, (uint64_t *)&v300);
        sub_1005E2960();
        uint64_t v71 = v291;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v263 = v290;
        _os_log_impl((void *)&_mh_execute_header, v290, (os_log_type_t)v297, "[%.*hhx-%{public}s] Received OK greeting with capabilities from server: %s.", (uint8_t *)v78, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v259 = (*(uint64_t (**)(char *, uint64_t))(v296 + 8))(v74, v298);
        uint64_t v68 = (uint64_t)v299;
      }
      else
      {
        sub_1004FE8B4(v76, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        swift_bridgeObjectRelease_n();
        uint64_t v259 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v74, v75);
      }
      v273(&v300, v259);
      uint64_t v250 = sub_1004F3F6C(v71, (unint64_t *)&v300, v73);
      sub_100452B68((uint64_t)&v300, (uint64_t)&v303);
      sub_100483B60((uint64_t *)&v303);
      sub_100452B0C((uint64_t)v301, (uint64_t)&v302);
      sub_100483B90(&v302);
      swift_bridgeObjectRelease();
      sub_1004831AC(v69);
      swift_bridgeObjectRelease();
      sub_1004FE8B4(v68, type metadata accessor for UntaggedResponse);
      return v250;
    case 3u:
      int v91 = (unint64_t *)v294;
      sub_1004FE8B4((uint64_t)v294, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v68 = (uint64_t)v299;
      sub_1004FE84C((uint64_t)v299, (uint64_t)v62, type metadata accessor for UntaggedResponse);
      unint64_t v92 = *v62;
      uint64_t v93 = (char *)v62[2];
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        uint64_t v292 = (char *)v67;
        sub_1004831AC(v92);
        swift_bridgeObjectRelease();
        uint64_t v156 = v295;
        uint64_t v157 = v296;
        long long v158 = v284;
        uint64_t v159 = v298;
        (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v284, v295, v298);
        uint64_t v160 = v280;
        sub_1004FE84C(v156, v280, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        long long v161 = sub_1005E0EB0();
        os_log_type_t v162 = sub_1005E25A0();
        if (os_log_type_enabled(v161, v162))
        {
          uint64_t v163 = swift_slowAlloc();
          uint64_t v300 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v163 = 68158210;
          LODWORD(v303) = 2;
          sub_1005E2960();
          *(_WORD *)(v163 + 8) = 256;
          uint64_t v164 = v160 + *(int *)(v293 + 20);
          LOBYTE(v303) = *(unsigned char *)v164;
          sub_1005E2960();
          *(_WORD *)(v163 + 11) = 2082;
          uint64_t v165 = ConnectionID.debugDescription.getter(*(unsigned int *)(v164 + 4));
          uint64_t v303 = (void *)sub_100481E54(v165, v166, (uint64_t *)&v300);
          sub_1005E2960();
          uint64_t v68 = (uint64_t)v299;
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v160, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v161, v162, "[%.*hhx-%{public}s] Received unexpected PREAUTH greeting from server.", (uint8_t *)v163, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v157 + 8))(v284, v298);
        }
        else
        {
          sub_1004FE8B4(v160, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          (*(void (**)(char *, uint64_t))(v157 + 8))(v158, v159);
        }
        *int v91 = 0;
        v91[1] = 0;
        *((unsigned char *)v91 + 16) = 2;
        swift_storeEnumTagMultiPayload();
LABEL_62:
        uint64_t v235 = (uint64_t)v292;
        goto LABEL_96;
      }
      uint64_t v292 = v93;
      uint64_t v94 = v295;
      uint64_t v95 = v296;
      uint64_t v96 = v298;
      (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v288, v295, v298);
      uint64_t v97 = v278;
      sub_1004FE84C(v94, v278, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v98 = sub_1005E0EB0();
      os_log_type_t v99 = sub_1005E2590();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v100 = swift_slowAlloc();
        uint64_t v300 = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v100 = 68158210;
        LODWORD(v303) = 2;
        sub_1005E2960();
        *(_WORD *)(v100 + 8) = 256;
        uint64_t v101 = v97 + *(int *)(v293 + 20);
        LOBYTE(v303) = *(unsigned char *)v101;
        sub_1005E2960();
        *(_WORD *)(v100 + 11) = 2082;
        uint64_t v102 = ConnectionID.debugDescription.getter(*(unsigned int *)(v101 + 4));
        uint64_t v303 = (void *)sub_100481E54(v102, v103, (uint64_t *)&v300);
        int v91 = (unint64_t *)v294;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v97, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v98, v99, "[%.*hhx-%{public}s] Received PREAUTH greeting from server. Requesting credentials.", (uint8_t *)v100, 0x15u);
        swift_arrayDestroy();
        uint64_t v68 = (uint64_t)v299;
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v95 + 8))(v288, v298);
      }
      else
      {
        sub_1004FE8B4(v97, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        (*(void (**)(char *, uint64_t))(v95 + 8))(v288, v96);
      }
      unint64_t v195 = ~v92 & 0xF000000000000007;
      swift_bridgeObjectRelease();
      if (v195)
      {
        if (((v92 >> 59) & 0x1E | (v92 >> 2) & 1) == 1)
        {
          unint64_t v195 = *(void *)((v92 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          swift_bridgeObjectRetain();
          sub_1004831AC(v92);
        }
        else
        {
          sub_1004831AC(v92);
          unint64_t v195 = 0;
        }
      }
      *int v91 = v195;
      swift_storeEnumTagMultiPayload();
      sub_1004FE8B4(v68, type metadata accessor for UntaggedResponse);
      return 0x8000000000000001;
    case 4u:
      uint64_t v68 = (uint64_t)v299;
      sub_1004FE84C((uint64_t)v299, (uint64_t)v51, type metadata accessor for UntaggedResponse);
      unint64_t v104 = *v51;
      uint64_t v291 = v51[1];
      uint64_t v292 = (char *)v67;
      uint64_t v105 = v51[2];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_1004FE8B4((uint64_t)v294, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v167 = v295;
        uint64_t v168 = v296;
        uint64_t v169 = v287;
        (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v287, v295, v298);
        uint64_t v170 = v282;
        sub_1004FE84C(v167, v282, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        sub_10044AE60(v104);
        swift_bridgeObjectRetain();
        sub_10044AE60(v104);
        swift_bridgeObjectRetain();
        uint64_t v171 = sub_1005E0EB0();
        os_log_type_t v172 = sub_1005E25A0();
        if (os_log_type_enabled(v171, v172))
        {
          uint64_t v173 = swift_slowAlloc();
          uint64_t v295 = swift_slowAlloc();
          uint64_t v300 = (char *)v295;
          *(_DWORD *)uint64_t v173 = 68158466;
          LODWORD(v303) = 2;
          sub_1005E2960();
          *(_WORD *)(v173 + 8) = 256;
          uint64_t v174 = v170 + *(int *)(v293 + 20);
          LOBYTE(v303) = *(unsigned char *)v174;
          sub_1005E2960();
          *(_WORD *)(v173 + 11) = 2082;
          uint64_t v175 = ConnectionID.debugDescription.getter(*(unsigned int *)(v174 + 4));
          uint64_t v303 = (void *)sub_100481E54(v175, v176, (uint64_t *)&v300);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v170, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          *(_WORD *)(v173 + 21) = 2082;
          sub_10044AE60(v104);
          swift_bridgeObjectRetain();
          ResponseText.debugDescription.getter(v104);
          uint64_t v178 = v177;
          unint64_t v180 = v179;
          sub_1004831AC(v104);
          swift_bridgeObjectRelease();
          uint64_t v303 = (void *)sub_100481E54(v178, v180, (uint64_t *)&v300);
          uint64_t v68 = (uint64_t)v299;
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004831AC(v104);
          swift_bridgeObjectRelease();
          sub_1004831AC(v104);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v171, v172, "[%.*hhx-%{public}s] Server sent BYE: %{public}s", (uint8_t *)v173, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v168 + 8))(v287, v298);
        }
        else
        {
          sub_1004FE8B4(v170, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          sub_1004831AC(v104);
          swift_bridgeObjectRelease();
          sub_1004831AC(v104);

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v168 + 8))(v169, v298);
        }
        uint64_t v236 = v292;
        uint64_t v237 = 0;
        if ((~v104 & 0xF000000000000007) != 0)
        {
          char v238 = 2;
          uint64_t v239 = 4;
          if (v104 == 0x80000000000000D8)
          {
            sub_10044AE74(0x80000000000000D8);
            uint64_t v239 = sub_1004FB924(v291, v105);
            uint64_t v237 = v247;
            char v238 = v248;
            unint64_t v104 = 0x80000000000000D8;
          }
          sub_1004831AC(v104);
        }
        else
        {
          char v238 = 2;
          uint64_t v239 = 4;
        }
        swift_bridgeObjectRelease();
        uint64_t v249 = v294;
        *uint64_t v294 = v239;
        v249[1] = v237;
        *((unsigned char *)v249 + 16) = v238;
        swift_storeEnumTagMultiPayload();
        uint64_t v235 = (uint64_t)v236;
LABEL_96:
        sub_1004FE8B4(v235, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
LABEL_97:
        uint64_t v144 = v68;
        goto LABEL_98;
      }
      uint64_t v106 = v295;
      uint64_t v107 = v296;
      unint64_t v108 = v286;
      (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v286, v295, v298);
      uint64_t v109 = v281;
      sub_1004FE84C(v106, v281, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_10044AE60(v104);
      swift_bridgeObjectRetain();
      sub_10044AE60(v104);
      swift_bridgeObjectRetain();
      uint64_t v110 = sub_1005E0EB0();
      os_log_type_t v111 = sub_1005E25A0();
      if (os_log_type_enabled(v110, v111))
      {
        uint64_t v112 = swift_slowAlloc();
        uint64_t v295 = swift_slowAlloc();
        uint64_t v300 = (char *)v295;
        *(_DWORD *)uint64_t v112 = 68158466;
        LODWORD(v303) = 2;
        sub_1005E2960();
        *(_WORD *)(v112 + 8) = 256;
        uint64_t v113 = v109 + *(int *)(v293 + 20);
        LOBYTE(v303) = *(unsigned char *)v113;
        sub_1005E2960();
        *(_WORD *)(v112 + 11) = 2082;
        uint64_t v114 = ConnectionID.debugDescription.getter(*(unsigned int *)(v113 + 4));
        uint64_t v303 = (void *)sub_100481E54(v114, v115, (uint64_t *)&v300);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v109, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v112 + 21) = 2082;
        sub_10044AE60(v104);
        swift_bridgeObjectRetain();
        ResponseText.debugDescription.getter(v104);
        uint64_t v117 = v116;
        unint64_t v119 = v118;
        sub_1004831AC(v104);
        swift_bridgeObjectRelease();
        uint64_t v303 = (void *)sub_100481E54(v117, v119, (uint64_t *)&v300);
        uint64_t v68 = (uint64_t)v299;
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004831AC(v104);
        swift_bridgeObjectRelease();
        sub_1004831AC(v104);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v110, v111, "[%.*hhx-%{public}s] Server sent BYE while authenticating: %{public}s", (uint8_t *)v112, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v107 + 8))(v286, v298);
      }
      else
      {
        sub_1004FE8B4(v109, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        sub_1004831AC(v104);
        swift_bridgeObjectRelease();
        sub_1004831AC(v104);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v107 + 8))(v108, v298);
      }
      long long v196 = v292;
      if ((~v104 & 0xF000000000000007) == 0)
      {
        swift_bridgeObjectRelease();
        long long v197 = v294;
        sub_1004FE8B4((uint64_t)v294, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        long long v198 = v276;
        *uint64_t v276 = xmmword_100625790;
        *((unsigned char *)v198 + 16) = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v199 = (uint64_t)v198;
        uint64_t v200 = (uint64_t)v197;
LABEL_94:
        sub_1004FE7E4(v199, v200, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        goto LABEL_95;
      }
      int v240 = (v104 >> 59) & 0x1E | (v104 >> 2) & 1;
      if (v104 == 0x80000000000000D8 && v240 == 16)
      {
        sub_10044AE74(0x80000000000000D8);
        unint64_t v241 = v294;
        sub_1004FE8B4((uint64_t)v294, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v242 = sub_1004FB924(v291, v105);
        uint64_t v244 = v243;
        char v246 = v245;
        sub_1004831AC(0x80000000000000D8);
        swift_bridgeObjectRelease();
        uint64_t *v241 = v242;
        v241[1] = v244;
        *((unsigned char *)v241 + 16) = v246;
        long long v196 = v292;
        swift_storeEnumTagMultiPayload();
LABEL_95:
        uint64_t v235 = (uint64_t)v196;
        goto LABEL_96;
      }
      if (v240 != 16) {
        goto LABEL_92;
      }
      if (v104 + 0x7FFFFFFFFFFFFF90 <= 0x20 && ((1 << (v104 - 112)) & 0x100010101) != 0)
      {
        sub_10044AE74(v104);
        uint64_t v252 = 1;
      }
      else if (v104 == 0x80000000000000D8)
      {
        uint64_t v252 = 0;
      }
      else
      {
LABEL_92:
        uint64_t v252 = 3;
      }
      swift_bridgeObjectRelease();
      os_log_type_t v264 = v294;
      sub_1004FE8B4((uint64_t)v294, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      sub_1004831AC(v104);
      os_log_type_t v265 = v276;
      *(void *)uint64_t v276 = v252;
      *((void *)v265 + 1) = 0;
      *((unsigned char *)v265 + 16) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v199 = (uint64_t)v265;
      uint64_t v200 = (uint64_t)v264;
      goto LABEL_94;
    case 5u:
      uint64_t v120 = (uint64_t)v299;
      sub_1004FE84C((uint64_t)v299, (uint64_t)v57, type metadata accessor for UntaggedResponse);
      uint64_t v121 = *v57;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v67, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
        uint64_t v144 = v120;
LABEL_98:
        sub_1004FE8B4(v144, type metadata accessor for UntaggedResponse);
        return 0xFFFFFFFF00000000;
      }
      if (EnumCaseMultiPayload != 11)
      {
        if (EnumCaseMultiPayload == 14)
        {
          uint64_t v124 = v295;
          uint64_t v123 = v296;
          uint64_t v125 = v275;
          uint64_t v126 = v298;
          (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v275, v295, v298);
          uint64_t v127 = v271;
          sub_1004FE84C(v124, v271, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          variable initialization expression of Engine.isProcessingUpdates();
          swift_bridgeObjectRetain_n();
          uint64_t v128 = sub_1005E0EB0();
          int v129 = sub_1005E25C0();
          if (os_log_type_enabled(v128, (os_log_type_t)v129))
          {
            LODWORD(v297) = v129;
            uint64_t v130 = swift_slowAlloc();
            uint64_t v292 = (char *)swift_slowAlloc();
            uint64_t v300 = v292;
            *(_DWORD *)uint64_t v130 = 68158466;
            LODWORD(v303) = 2;
            sub_1005E2960();
            *(_WORD *)(v130 + 8) = 256;
            uint64_t v131 = v127 + *(int *)(v293 + 20);
            LOBYTE(v303) = *(unsigned char *)v131;
            sub_1005E2960();
            *(_WORD *)(v130 + 11) = 2082;
            uint64_t v132 = ConnectionID.debugDescription.getter(*(unsigned int *)(v131 + 4));
            uint64_t v303 = (void *)sub_100481E54(v132, v133, (uint64_t *)&v300);
            sub_1005E2960();
            swift_bridgeObjectRelease();
            sub_1004FE8B4(v127, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
            *(_WORD *)(v130 + 21) = 2080;
            uint64_t v134 = (char *)v121;
            int64_t v135 = *(void *)(v121 + 16);
            uint64_t v136 = _swiftEmptyArrayStorage;
            uint64_t v288 = v134;
            if (v135)
            {
              uint64_t v303 = _swiftEmptyArrayStorage;
              sub_1004B885C(0, v135, 0);
              uint64_t v136 = v303;
              uint64_t v137 = (uint64_t *)(v134 + 40);
              do
              {
                uint64_t v138 = *(v137 - 1);
                uint64_t v139 = *v137;
                uint64_t v303 = v136;
                unint64_t v141 = v136[2];
                unint64_t v140 = v136[3];
                swift_bridgeObjectRetain();
                if (v141 >= v140 >> 1)
                {
                  sub_1004B885C(v140 > 1, v141 + 1, 1);
                  uint64_t v136 = v303;
                }
                v137 += 4;
                v136[2] = v141 + 1;
                long long v142 = &v136[2 * v141];
                v142[4] = v138;
                v142[5] = v139;
                --v135;
              }
              while (v135);
              uint64_t v124 = v295;
              uint64_t v123 = v296;
            }
            uint64_t v303 = v136;
            sub_10000566C(&qword_100715740);
            sub_100007494((unint64_t *)&qword_100715748, &qword_100715740);
            uint64_t v253 = sub_1005E1A80();
            unint64_t v255 = v254;
            swift_bridgeObjectRelease();
            uint64_t v303 = (void *)sub_100481E54(v253, v255, (uint64_t *)&v300);
            sub_1005E2960();
            uint64_t v121 = (uint64_t)v288;
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v297, "[%.*hhx-%{public}s] Got post-auth capabilities: %s.", (uint8_t *)v130, 0x1Fu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v123 + 8))(v275, v298);
            uint64_t v120 = (uint64_t)v299;
          }
          else
          {
            sub_1004FE8B4(v127, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v126);
          }
          uint64_t v250 = sub_1004F4EF8(v121, v124);
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v120, type metadata accessor for UntaggedResponse);
          return v250;
        }
        swift_bridgeObjectRelease();
LABEL_55:
        uint64_t v221 = v295;
        uint64_t v222 = v296;
        uint64_t v223 = v292;
        uint64_t v224 = v298;
        (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v292, v295, v298);
        uint64_t v225 = v291;
        sub_1004FE84C(v221, v291, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v226 = (uint64_t)v289;
        sub_1004FE84C((uint64_t)v290, (uint64_t)v289, type metadata accessor for UntaggedResponse);
        long long v227 = sub_1005E0EB0();
        os_log_type_t v228 = sub_1005E25A0();
        if (os_log_type_enabled(v227, v228))
        {
          uint64_t v229 = swift_slowAlloc();
          uint64_t v300 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v229 = 68158466;
          LODWORD(v303) = 2;
          sub_1005E2960();
          *(_WORD *)(v229 + 8) = 256;
          uint64_t v230 = v225 + *(int *)(v293 + 20);
          LOBYTE(v303) = *(unsigned char *)v230;
          sub_1005E2960();
          *(_WORD *)(v229 + 11) = 2082;
          uint64_t v231 = ConnectionID.debugDescription.getter(*(unsigned int *)(v230 + 4));
          uint64_t v303 = (void *)sub_100481E54(v231, v232, (uint64_t *)&v300);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v225, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          *(_WORD *)(v229 + 21) = 2080;
          unint64_t v233 = UntaggedResponse.name.getter();
          uint64_t v303 = (void *)sub_100481E54(v233, v234, (uint64_t *)&v300);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_1004FE8B4(v226, type metadata accessor for UntaggedResponse);
          _os_log_impl((void *)&_mh_execute_header, v227, v228, "[%.*hhx-%{public}s] Ignoring unexpected %s.", (uint8_t *)v229, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v222 + 8))(v292, v298);
        }
        else
        {
          sub_1004FE8B4(v225, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          sub_1004FE8B4(v226, type metadata accessor for UntaggedResponse);

          (*(void (**)(char *, uint64_t))(v222 + 8))(v223, v224);
        }
        sub_100007A48((uint64_t)v299, &qword_100717AF0);
        return 0xFFFFFFFF00000000;
      }
      uint64_t v202 = v295;
      uint64_t v201 = v296;
      long long v203 = v274;
      uint64_t v204 = v298;
      (*(void (**)(char *, uint64_t, uint64_t))(v296 + 16))(v274, v295, v298);
      uint64_t v205 = v270;
      sub_1004FE84C(v202, v270, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain_n();
      uint64_t v206 = sub_1005E0EB0();
      int v207 = sub_1005E25C0();
      if (os_log_type_enabled(v206, (os_log_type_t)v207))
      {
        LODWORD(v297) = v207;
        uint64_t v208 = swift_slowAlloc();
        uint64_t v292 = (char *)swift_slowAlloc();
        uint64_t v300 = v292;
        *(_DWORD *)uint64_t v208 = 68158466;
        LODWORD(v303) = 2;
        sub_1005E2960();
        *(_WORD *)(v208 + 8) = 256;
        uint64_t v209 = v205 + *(int *)(v293 + 20);
        LOBYTE(v303) = *(unsigned char *)v209;
        sub_1005E2960();
        *(_WORD *)(v208 + 11) = 2082;
        uint64_t v210 = ConnectionID.debugDescription.getter(*(unsigned int *)(v209 + 4));
        uint64_t v303 = (void *)sub_100481E54(v210, v211, (uint64_t *)&v300);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004FE8B4(v205, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        *(_WORD *)(v208 + 21) = 2080;
        uint64_t v212 = (char *)v121;
        int64_t v213 = *(void *)(v121 + 16);
        uint64_t v214 = _swiftEmptyArrayStorage;
        uint64_t v288 = v212;
        if (v213)
        {
          uint64_t v303 = _swiftEmptyArrayStorage;
          sub_1004B885C(0, v213, 0);
          uint64_t v214 = v303;
          uint64_t v215 = (uint64_t *)(v212 + 40);
          do
          {
            uint64_t v216 = *(v215 - 1);
            uint64_t v217 = *v215;
            uint64_t v303 = v214;
            unint64_t v219 = v214[2];
            unint64_t v218 = v214[3];
            swift_bridgeObjectRetain();
            if (v219 >= v218 >> 1)
            {
              sub_1004B885C(v218 > 1, v219 + 1, 1);
              uint64_t v214 = v303;
            }
            v215 += 4;
            v214[2] = v219 + 1;
            uint64_t v220 = &v214[2 * v219];
            v220[4] = v216;
            v220[5] = v217;
            --v213;
          }
          while (v213);
          uint64_t v202 = v295;
          uint64_t v201 = v296;
        }
        uint64_t v303 = v214;
        sub_10000566C(&qword_100715740);
        sub_100007494((unint64_t *)&qword_100715748, &qword_100715740);
        uint64_t v256 = sub_1005E1A80();
        unint64_t v258 = v257;
        swift_bridgeObjectRelease();
        uint64_t v303 = (void *)sub_100481E54(v256, v258, (uint64_t *)&v300);
        sub_1005E2960();
        uint64_t v121 = (uint64_t)v288;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v206, (os_log_type_t)v297, "[%.*hhx-%{public}s] Got pre-auth capabilities: %s.", (uint8_t *)v208, 0x1Fu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v251 = (*(uint64_t (**)(char *, uint64_t))(v201 + 8))(v274, v298);
        uint64_t v120 = (uint64_t)v299;
      }
      else
      {
        sub_1004FE8B4(v205, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        swift_bridgeObjectRelease_n();
        uint64_t v251 = (*(uint64_t (**)(char *, uint64_t))(v201 + 8))(v203, v204);
      }
      v273(&v300, v251);
      uint64_t v250 = sub_1004F3F6C(v121, (unint64_t *)&v300, v202);
      sub_100452B68((uint64_t)&v300, (uint64_t)&v303);
      sub_100483B60((uint64_t *)&v303);
      sub_100452B0C((uint64_t)v301, (uint64_t)&v302);
      sub_100483B90(&v302);
      swift_bridgeObjectRelease();
      sub_1004FE8B4(v120, type metadata accessor for UntaggedResponse);
      return v250;
    case 0x14u:
      uint64_t v143 = (uint64_t)v299;
      sub_1004FE84C((uint64_t)v299, (uint64_t)v54, type metadata accessor for UntaggedResponse);
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_30;
    case 0x15u:
      uint64_t v143 = (uint64_t)v299;
      sub_1004FE84C((uint64_t)v299, (uint64_t)v54, type metadata accessor for UntaggedResponse);
      sub_100295400();
LABEL_30:
      sub_1004FE8B4(v67, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
      uint64_t v144 = v143;
      goto LABEL_98;
    default:
      goto LABEL_55;
  }
}

uint64_t sub_1004FE520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3) {
    return 0;
  }
  for (uint64_t i = (void *)(a2 + 104); ; i += 10)
  {
    uint64_t v6 = *(i - 2);
    if (((*i >> 59) & 6 | ((v6 & 0x2000000000000000) != 0)) == 4 && *i == 0x2000000000000000)
    {
      v7.i64[0] = *(i - 3);
      v7.i64[1] = *(i - 1);
      int8x16_t v8 = vorrq_s8(vorrq_s8(*(int8x16_t *)(i - 9), *(int8x16_t *)(i - 5)), vorrq_s8(*(int8x16_t *)(i - 7), v7));
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v8.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)) | v6)) {
        break;
      }
    }
    if (!--v3) {
      return 0;
    }
  }
  sub_100452B68(a3, (uint64_t)v14);
  sub_100452B0C(a3 + 24, (uint64_t)v13);
  sub_100452B0C((uint64_t)v13, (uint64_t)v19);
  uint64_t v9 = v21;
  if (v21 == 1) {
    return 1;
  }
  int v11 = v19[0];
  uint64_t v12 = v20;
  sub_100452B68((uint64_t)v14, (uint64_t)&v15);
  if ((unint64_t)v15 >> 62 != 1) {
    return 0;
  }
  *(void *)&long long v15 = v15 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v18 = v16;
  long long v17 = v15;
  if (v9)
  {
    if (v11)
    {
      if (v11 == 1)
      {
        if ((unsigned __int16)v17 != 772) {
          return 0;
        }
      }
      else if ((unsigned __int16)v17 - 771 > 1)
      {
        return 0;
      }
    }
    else if ((unsigned __int16)v17 - 771 >= 2)
    {
      return 0;
    }
    sub_10001FDF0((uint64_t)&v17 + 8, (uint64_t)v22, &qword_100715918);
    sub_10001FDF0((uint64_t)v22, (uint64_t)&v23, &qword_100715918);
    return v24 && (v12 == v23 && v9 == v24 || (sub_1005E3290() & 1) != 0);
  }
  if (!v11) {
    return (unsigned __int16)v17 - 771 < 2;
  }
  if (v11 == 1) {
    return (unsigned __int16)v17 == 772;
  }
  return (unsigned __int16)v17 - 771 < 2;
}

uint64_t sub_1004FE71C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1004FE77C()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56))
  {
    swift_release();
    swift_release();
    swift_release();
  }
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1004FE7E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004FE84C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004FE8B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for UnauthenticatedState.Update(uint64_t a1)
{
  return sub_1004FE970(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(void *)(a1 + 160),
           *(void *)(a1 + 168),
           *(unsigned char *)(a1 + 176));
}

uint64_t sub_1004FE970(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  switch(a23)
  {
    case 0:
      sub_1004831AC(result);
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      sub_100451F2C(a2);
      return sub_1000A9E8C(a5, a6, a7);
    case 2:
      sub_10044B008(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
      return sub_10048316C(a11, a12, a13);
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 4:
      return sub_1004FEC14(result, a2, a3);
    case 5:
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_11:
      BOOL result = swift_bridgeObjectRelease();
      break;
    case 6:
      BOOL result = sub_10046564C(result, a2, a3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004FEC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for UnauthenticatedState.Update(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  unint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  unint64_t v13 = *(void *)(a2 + 72);
  unint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v25 = *(void *)(a2 + 168);
  char v26 = *(unsigned char *)(a2 + 176);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)a2;
  unint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  unint64_t v11 = *(void *)(a2 + 24);
  sub_1004FA508(*(void *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 160) = v24;
  *(void *)(a1 + 168) = v25;
  *(unsigned char *)(a1 + 176) = v26;
  return a1;
}

uint64_t assignWithCopy for UnauthenticatedState.Update(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  unint64_t v30 = *(void *)(a2 + 72);
  unint64_t v31 = *(void *)(a2 + 80);
  uint64_t v32 = *(void *)(a2 + 88);
  uint64_t v33 = *(void *)(a2 + 96);
  uint64_t v34 = *(void *)(a2 + 104);
  uint64_t v35 = *(void *)(a2 + 112);
  uint64_t v36 = *(void *)(a2 + 120);
  uint64_t v37 = *(void *)(a2 + 128);
  uint64_t v38 = *(void *)(a2 + 136);
  uint64_t v39 = *(void *)(a2 + 144);
  uint64_t v40 = *(void *)(a2 + 152);
  uint64_t v41 = *(void *)(a2 + 160);
  uint64_t v42 = *(void *)(a2 + 168);
  char v43 = *(unsigned char *)(a2 + 176);
  sub_1004FA508(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43);
  uint64_t v12 = *(void *)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v16 = *(void *)(a1 + 32);
  unint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v30;
  *(void *)(a1 + 80) = v31;
  *(void *)(a1 + 88) = v32;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v33;
  *(void *)(a1 + 104) = v34;
  *(void *)(a1 + 112) = v35;
  *(void *)(a1 + 120) = v36;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v37;
  *(void *)(a1 + 136) = v38;
  *(void *)(a1 + 144) = v39;
  *(void *)(a1 + 152) = v40;
  uint64_t v26 = *(void *)(a1 + 160);
  uint64_t v27 = *(void *)(a1 + 168);
  *(void *)(a1 + 160) = v41;
  *(void *)(a1 + 168) = v42;
  char v28 = *(unsigned char *)(a1 + 176);
  *(unsigned char *)(a1 + 176) = v43;
  sub_1004FE970(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((unint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28);
  return a1;
}

__n128 initializeWithTake for UnauthenticatedState.Update(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for UnauthenticatedState.Update(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 176);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v19 = *(void *)(a1 + 168);
  char v20 = *(unsigned char *)(a1 + 176);
  long long v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  long long v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  long long v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  long long v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  long long v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = v3;
  sub_1004FE970(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((unint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19,
    v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnauthenticatedState.Update(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 177)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UnauthenticatedState.Update(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 177) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 176) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1004FF100(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(void *)__n128 result = a2 - 7;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    LOBYTE(a2) = 7;
    *(void *)(result + 168) = 0;
  }
  *(unsigned char *)(result + 176) = a2;
  return result;
}