unint64_t sub_1003F738C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  const void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  size_t v62;
  void *v63;
  size_t v64;
  unint64_t v65;
  int v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  size_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  int64_t v85;
  uint64_t v86;
  size_t v87;
  int64_t v88;
  uint64_t v89;
  size_t v90;
  uint64_t v91;
  size_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  size_t v96;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  long long *v107;
  unint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t __s2;
  int v116;
  __int16 v117;
  void __s1[2];
  long long v119;

  v3 = v2 + 64;
  v4 = -1 << *(unsigned char *)(v2 + 32);
  v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    v6 = v2;
    v7 = a1;
    v8 = ~v4;
    v9 = *a1;
    v107 = (long long *)(a1 + 24);
    do
    {
      v10 = *(void *)(v6 + 48);
      v11 = (unsigned __int8 *)(v10 + 40 * v5);
      if (v9 != *v11) {
        goto LABEL_5;
      }
      if (*((_DWORD *)v7 + 1) != *(_DWORD *)(v10 + 40 * v5 + 4)) {
        goto LABEL_5;
      }
      if ((*((unsigned int *)v11 + 4) | ((unint64_t)*((unsigned int *)v11 + 4) << 32)) != (*((unsigned int *)v7 + 4) | ((unint64_t)*((unsigned int *)v7 + 4) << 32))) {
        goto LABEL_5;
      }
      v12 = *((void *)v11 + 1);
      v13 = *((void *)v7 + 1);
      v14 = *(void *)(v12 + 16);
      if (v14 != *(void *)(v13 + 16)) {
        goto LABEL_5;
      }
      v15 = *((void *)v11 + 3);
      v16 = *((void *)v11 + 4);
      if (v14) {
        v17 = v12 == v13;
      }
      else {
        v17 = 1;
      }
      if (!v17)
      {
        if (*(unsigned __int8 *)(v12 + 32) != *(unsigned __int8 *)(v13 + 32)) {
          goto LABEL_5;
        }
        if (v14 != 1)
        {
          if (*(unsigned __int8 *)(v12 + 33) != *(unsigned __int8 *)(v13 + 33)) {
            goto LABEL_5;
          }
          if (v14 != 2)
          {
            if (*(unsigned __int8 *)(v12 + 34) != *(unsigned __int8 *)(v13 + 34)) {
              goto LABEL_5;
            }
            v19 = (unsigned __int8 *)(v12 + 35);
            v20 = (unsigned __int8 *)(v13 + 35);
            v21 = v14 - 3;
            while (v21)
            {
              v23 = *v19++;
              v22 = v23;
              v24 = *v20++;
              --v21;
              if (v22 != v24) {
                goto LABEL_5;
              }
            }
          }
        }
      }
      v119 = *v107;
      v108 = v16 >> 62;
      v18 = 0;
      switch(v16 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v15), v15))
          {
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
          }
          v25 = v6;
          v26 = v3;
          v27 = v9;
          v28 = v8;
          v29 = v7;
          v18 = HIDWORD(v15) - (int)v15;
LABEL_30:
          sub_100008D24(v15, v16);
          sub_100008D24(v15, v16);
          v7 = v29;
          v8 = v28;
          v9 = v27;
          v3 = v26;
          v6 = v25;
          break;
        case 2uLL:
          v31 = *(void *)(v15 + 16);
          v30 = *(void *)(v15 + 24);
          v18 = v30 - v31;
          if (__OFSUB__(v30, v31)) {
            goto LABEL_140;
          }
          v25 = v6;
          v26 = v3;
          v27 = v9;
          v28 = v8;
          v29 = v7;
          goto LABEL_30;
        case 3uLL:
          break;
        default:
          v18 = BYTE6(v16);
          break;
      }
      v114 = v16;
      v32 = *((void *)&v119 + 1) >> 62;
      switch(*((void *)&v119 + 1) >> 62)
      {
        case 1:
          LODWORD(v33) = DWORD1(v119) - v119;
          if (__OFSUB__(DWORD1(v119), v119)) {
            goto LABEL_141;
          }
          v33 = (int)v33;
LABEL_36:
          if (v18 == v33)
          {
            if (v18 < 1)
            {
LABEL_138:
              swift_bridgeObjectRetain();
              sub_100008D24(v15, v114);
              sub_1000094D4(v15, v114);
              sub_1000094D4(v15, v114);
              swift_bridgeObjectRelease();
              sub_1000094D4(v15, v114);
              return v5;
            }
            switch((int)v108)
            {
              case 1:
                v109 = v119;
                v100 = (int)v15;
                v101 = *((void *)&v119 + 1);
                if ((int)v15 > v15 >> 32) {
                  goto LABEL_143;
                }
                swift_bridgeObjectRetain();
                v105 = v15;
                sub_100008D24(v15, v114);
                sub_10000FAA8((uint64_t)&v119);
                v43 = (char *)sub_1005E0550();
                if (!v43) {
                  goto LABEL_50;
                }
                v44 = sub_1005E0580();
                if (__OFSUB__(v100, v44)) {
                  goto LABEL_145;
                }
                v43 += v100 - v44;
LABEL_50:
                sub_1005E0570();
                if (!v32)
                {
                  __s1[0] = v109;
                  LODWORD(__s1[1]) = v101;
                  WORD2(__s1[1]) = WORD2(v101);
                  if (!v43) {
                    goto LABEL_167;
                  }
                  v62 = BYTE6(v101);
                  v61 = __s1;
                  v63 = v43;
LABEL_97:
                  v66 = memcmp(v63, v61, v62);
                  goto LABEL_133;
                }
                if (v32 == 1)
                {
                  v45 = (int)v109;
                  v46 = (v109 >> 32) - (int)v109;
                  if (v109 >> 32 < (int)v109) {
                    goto LABEL_154;
                  }
                  swift_retain();
                  v47 = sub_1005E0550();
                  if (v47)
                  {
                    v110 = v43;
                    v48 = v47;
                    v49 = sub_1005E0580();
                    if (__OFSUB__(v45, v49)) {
                      goto LABEL_161;
                    }
                    v50 = (const void *)(v48 + v45 - v49);
                    v43 = v110;
                  }
                  else
                  {
                    v50 = 0;
                  }
                  v95 = sub_1005E0570();
                  if (v95 >= v46) {
                    v96 = v46;
                  }
                  else {
                    v96 = v95;
                  }
                  if (!v43) {
                    goto LABEL_174;
                  }
                  if (!v50) {
                    goto LABEL_175;
                  }
                  v66 = memcmp(v43, v50, v96);
                  sub_10000FAD8((uint64_t)&v119);
LABEL_133:
                  v15 = v105;
LABEL_134:
                  v65 = v114;
                  sub_1000094D4(v15, v114);
                  sub_10000FAD8((uint64_t)&v119);
                  sub_1000094D4(v15, v114);
LABEL_135:
                  swift_bridgeObjectRelease();
                  v93 = v15;
                  v94 = v65;
LABEL_136:
                  sub_1000094D4(v93, v94);
                  if (!v66) {
                    return v5;
                  }
                  goto LABEL_5;
                }
                v82 = *(void *)(v109 + 16);
                v104 = *(void *)(v109 + 24);
                swift_retain();
                swift_retain();
                v83 = (char *)sub_1005E0550();
                if (v83)
                {
                  v84 = sub_1005E0580();
                  if (__OFSUB__(v82, v84)) {
                    goto LABEL_160;
                  }
                  v83 += v82 - v84;
                }
                v36 = __OFSUB__(v104, v82);
                v85 = v104 - v82;
                if (v36) {
                  goto LABEL_155;
                }
                v86 = sub_1005E0570();
                if (v86 >= v85) {
                  v87 = v85;
                }
                else {
                  v87 = v86;
                }
                if (!v43) {
                  goto LABEL_168;
                }
                if (!v83) {
                  goto LABEL_169;
                }
                v75 = memcmp(v43, v83, v87);
                swift_release();
LABEL_108:
                swift_release();
                v15 = v105;
LABEL_117:
                sub_1000094D4(v15, v114);
                sub_10000FAD8((uint64_t)&v119);
                sub_1000094D4(v15, v114);
                swift_bridgeObjectRelease();
                sub_1000094D4(v15, v114);
                if (!v75) {
                  return v5;
                }
                break;
              case 2:
                v102 = *((void *)&v119 + 1);
                v111 = v119;
                v98 = *(char **)(v15 + 16);
                swift_bridgeObjectRetain();
                sub_100008D24(v15, v114);
                sub_10000FAA8((uint64_t)&v119);
                v106 = v15;
                swift_retain();
                swift_retain();
                v51 = (char *)sub_1005E0550();
                if (!v51) {
                  goto LABEL_59;
                }
                v52 = sub_1005E0580();
                if (__OFSUB__(v98, v52)) {
                  goto LABEL_144;
                }
                v51 = &v98[(void)v51 - v52];
LABEL_59:
                sub_1005E0570();
                if (!v32)
                {
                  __s1[0] = v111;
                  LODWORD(__s1[1]) = v102;
                  WORD2(__s1[1]) = WORD2(v102);
                  if (!v51) {
                    goto LABEL_166;
                  }
                  v66 = memcmp(v51, __s1, BYTE6(v102));
                  swift_release();
                  swift_release();
                  goto LABEL_134;
                }
                v99 = v51;
                if (v32 == 1)
                {
                  if (v111 >> 32 < (int)v111) {
                    goto LABEL_148;
                  }
                  swift_retain();
                  v53 = sub_1005E0550();
                  if (v53)
                  {
                    v54 = v53;
                    v55 = sub_1005E0580();
                    if (__OFSUB__((int)v111, v55)) {
                      goto LABEL_159;
                    }
                    v56 = (const void *)(v54 + (int)v111 - v55);
                  }
                  else
                  {
                    v56 = 0;
                  }
                  v91 = sub_1005E0570();
                  if (v91 >= (v111 >> 32) - (int)v111) {
                    v92 = (v111 >> 32) - (int)v111;
                  }
                  else {
                    v92 = v91;
                  }
                  if (!v99) {
                    goto LABEL_172;
                  }
                  if (!v56) {
                    goto LABEL_173;
                  }
                  v66 = memcmp(v99, v56, v92);
                  sub_10000FAD8((uint64_t)&v119);
                  swift_release();
                  swift_release();
                  sub_1000094D4(v106, v114);
                  sub_10000FAD8((uint64_t)&v119);
                  sub_1000094D4(v106, v114);
                  swift_bridgeObjectRelease();
                  v93 = v106;
                  v94 = v114;
                  goto LABEL_136;
                }
                v76 = *(void *)(v111 + 16);
                v103 = *(void *)(v111 + 24);
                swift_retain();
                swift_retain();
                v77 = sub_1005E0550();
                if (v77)
                {
                  v78 = v77;
                  v79 = sub_1005E0580();
                  if (__OFSUB__(v76, v79)) {
                    goto LABEL_158;
                  }
                  v80 = v76;
                  v81 = (const void *)(v78 + v76 - v79);
                }
                else
                {
                  v80 = v76;
                  v81 = 0;
                }
                v88 = v103 - v80;
                if (__OFSUB__(v103, v80)) {
                  goto LABEL_153;
                }
                v89 = sub_1005E0570();
                if (v89 >= v88) {
                  v90 = v88;
                }
                else {
                  v90 = v89;
                }
                if (!v99) {
                  goto LABEL_170;
                }
                if (!v81) {
                  goto LABEL_171;
                }
                v75 = memcmp(v99, v81, v90);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                goto LABEL_117;
              case 3:
                memset(__s1, 0, 14);
                if (!v32) {
                  goto LABEL_74;
                }
                v105 = v15;
                if (v32 == 1)
                {
                  v57 = (int)v119;
                  v38 = ((uint64_t)v119 >> 32) - (int)v119;
                  if ((uint64_t)v119 >> 32 < (int)v119) {
                    goto LABEL_147;
                  }
                  swift_bridgeObjectRetain();
                  sub_100008D24(v105, v114);
                  sub_10000FAA8((uint64_t)&v119);
                  v58 = sub_1005E0550();
                  if (!v58) {
                    goto LABEL_163;
                  }
                  v40 = v58;
                  v59 = sub_1005E0580();
                  v36 = __OFSUB__(v57, v59);
                  v42 = v57 - v59;
                  if (v36) {
                    goto LABEL_150;
                  }
LABEL_70:
                  v60 = sub_1005E0570();
                  v61 = (void *)(v40 + v42);
                  if (v60 >= v38) {
                    v62 = v38;
                  }
                  else {
                    v62 = v60;
                  }
                  v63 = __s1;
                  goto LABEL_97;
                }
                v72 = *(void *)(v119 + 16);
                v113 = *(void *)(v119 + 24);
                swift_bridgeObjectRetain();
                sub_100008D24(v15, v114);
                sub_10000FAA8((uint64_t)&v119);
                swift_retain();
                swift_retain();
                v68 = (char *)sub_1005E0550();
                if (v68)
                {
                  v73 = sub_1005E0580();
                  if (__OFSUB__(v72, v73)) {
                    goto LABEL_157;
                  }
                  v68 += v72 - v73;
                }
                v36 = __OFSUB__(v113, v72);
                v70 = v113 - v72;
                if (v36) {
                  goto LABEL_152;
                }
                v71 = sub_1005E0570();
                if (!v68) {
                  goto LABEL_165;
                }
LABEL_86:
                if (v71 >= v70) {
                  v74 = v70;
                }
                else {
                  v74 = v71;
                }
                v75 = memcmp(__s1, v68, v74);
                swift_release();
                goto LABEL_108;
              default:
                __s1[0] = v15;
                LODWORD(__s1[1]) = v114;
                WORD2(__s1[1]) = WORD2(v114);
                if (!v32)
                {
LABEL_74:
                  __s2 = v119;
                  v116 = DWORD2(v119);
                  v117 = WORD6(v119);
                  v64 = BYTE14(v119);
                  swift_bridgeObjectRetain();
                  v65 = v114;
                  sub_100008D24(v15, v114);
                  sub_10000FAA8((uint64_t)&v119);
                  v66 = memcmp(__s1, &__s2, v64);
                  sub_1000094D4(v15, v114);
                  sub_10000FAD8((uint64_t)&v119);
                  sub_1000094D4(v15, v114);
                  goto LABEL_135;
                }
                v105 = v15;
                if (v32 == 1)
                {
                  v37 = (int)v119;
                  v38 = ((uint64_t)v119 >> 32) - (int)v119;
                  if ((uint64_t)v119 >> 32 < (int)v119) {
                    goto LABEL_146;
                  }
                  swift_bridgeObjectRetain();
                  sub_100008D24(v105, v114);
                  sub_10000FAA8((uint64_t)&v119);
                  v39 = sub_1005E0550();
                  if (!v39)
                  {
                    sub_1005E0570();
                    __break(1u);
LABEL_163:
                    sub_1005E0570();
                    __break(1u);
LABEL_164:
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
                    JUMPOUT(0x1003F7FECLL);
                  }
                  v40 = v39;
                  v41 = sub_1005E0580();
                  v36 = __OFSUB__(v37, v41);
                  v42 = v37 - v41;
                  if (v36) {
                    goto LABEL_149;
                  }
                  goto LABEL_70;
                }
                v67 = *(void *)(v119 + 16);
                v112 = *(void *)(v119 + 24);
                swift_bridgeObjectRetain();
                sub_100008D24(v15, v114);
                sub_10000FAA8((uint64_t)&v119);
                swift_retain();
                swift_retain();
                v68 = (char *)sub_1005E0550();
                if (v68)
                {
                  v69 = sub_1005E0580();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_156;
                  }
                  v68 += v67 - v69;
                }
                v36 = __OFSUB__(v112, v67);
                v70 = v112 - v67;
                if (v36) {
                  goto LABEL_151;
                }
                v71 = sub_1005E0570();
                if (!v68) {
                  goto LABEL_164;
                }
                goto LABEL_86;
            }
          }
          else
          {
LABEL_4:
            swift_bridgeObjectRetain();
            sub_100008D24(v15, v114);
            sub_1000094D4(v15, v114);
            sub_1000094D4(v15, v114);
            swift_bridgeObjectRelease();
            sub_1000094D4(v15, v114);
          }
          break;
        case 2:
          v35 = *(void *)(v119 + 16);
          v34 = *(void *)(v119 + 24);
          v36 = __OFSUB__(v34, v35);
          v33 = v34 - v35;
          if (!v36) {
            goto LABEL_36;
          }
          goto LABEL_142;
        case 3:
          if (v18) {
            goto LABEL_4;
          }
          goto LABEL_138;
        default:
          v33 = BYTE14(v119);
          goto LABEL_36;
      }
LABEL_5:
      v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_1003F801C@<X0>(uint64_t a1@<X0>, Swift::UInt a2@<X1>, uint64_t a3@<X8>)
{
  v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1003F643C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1003F8D00();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for Activity.MailboxStatus(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1003F9790(v12 + *(void *)(v20 + 72) * v8, a3, type metadata accessor for Activity.MailboxStatus);
    sub_1003F88F8(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for Activity.MailboxStatus(0);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1003F81C0(uint64_t a1, Swift::UInt a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_1005E3410(a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    v10 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v8);
    if (v10[1] == a2)
    {
      uint64_t v11 = *v10;
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12 == *(void *)(a1 + 16))
      {
        if (v12) {
          BOOL v13 = v11 == a1;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13) {
          goto LABEL_20;
        }
        if (*(unsigned __int8 *)(v11 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v12 == 1) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v11 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v12 == 2) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v11 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return 0;
    }
  }
  v14 = (unsigned __int8 *)(v11 + 35);
  uint64_t v15 = v12 - 3;
  uint64_t v16 = (unsigned __int8 *)(a1 + 35);
  while (v15)
  {
    int v18 = *v14++;
    int v17 = v18;
    int v19 = *v16++;
    --v15;
    if (v17 != v19) {
      goto LABEL_3;
    }
  }
LABEL_20:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *v2;
  uint64_t v24 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_10040792C();
    uint64_t v22 = v24;
  }
  uint64_t v20 = *(void *)(*(void *)(v22 + 48) + 16 * v8);
  sub_100094D2C(v8);
  uint64_t *v2 = v24;
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1003F8378(uint64_t a1, unsigned int a2)
{
  v3 = v2;
  uint64_t v6 = *v3;
  sub_1005E33F0();
  Swift::UInt v7 = a2 | ((unint64_t)a2 << 32);
  sub_1005E3410(v7);
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    uint64_t v12 = *(void *)(v6 + 48) + 16 * v10;
    if ((*(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned int *)(v12 + 8) << 32)) == v7)
    {
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14 == *(void *)(a1 + 16))
      {
        if (v14) {
          BOOL v15 = v13 == a1;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          goto LABEL_20;
        }
        if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a1 + 32))
        {
          if (v14 == 1) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a1 + 33))
          {
            if (v14 == 2) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a1 + 34)) {
              break;
            }
          }
        }
      }
    }
LABEL_3:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v16 = (unsigned __int8 *)(v13 + 35);
  uint64_t v17 = v14 - 3;
  int v18 = (unsigned __int8 *)(a1 + 35);
  while (v17)
  {
    int v20 = *v16++;
    int v19 = v20;
    int v21 = *v18++;
    --v17;
    if (v19 != v21) {
      goto LABEL_3;
    }
  }
LABEL_20:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v3;
  uint64_t v26 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100407E20();
    uint64_t v24 = v26;
  }
  uint64_t v22 = *(void *)(*(void *)(v24 + 48) + 16 * v10);
  sub_100094EDC(v10);
  uint64_t *v3 = v26;
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1003F8544(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v5 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  Swift::UInt v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10000566C(&qword_1007144B0);
  int v41 = a2;
  uint64_t result = sub_1005E2FE0();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    v39 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    v37 = v2;
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v21 >= v38) {
          goto LABEL_34;
        }
        unint64_t v22 = v39[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v22 = v39[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_34:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                v3 = v37;
                goto LABEL_41;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v39 = -1 << v36;
              }
              v3 = v37;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v22 = v39[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      Swift::UInt v25 = v24[1];
      uint64_t v27 = *(void *)(v40 + 72);
      uint64_t v28 = *(void *)(v8 + 56) + v27 * v20;
      if (v41)
      {
        sub_1003F9790(v28, (uint64_t)v7, type metadata accessor for Activity.MailboxStatus);
      }
      else
      {
        sub_1003F9858(v28, (uint64_t)v7, type metadata accessor for Activity.MailboxStatus);
        swift_bridgeObjectRetain();
      }
      sub_1005E33F0();
      sub_1005E3410(v25);
      uint64_t result = sub_1005E3470();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      int v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      *int v18 = v26;
      v18[1] = v25;
      uint64_t result = sub_1003F9790((uint64_t)v7, *(void *)(v10 + 56) + v27 * v17, type metadata accessor for Activity.MailboxStatus);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v10;
  return result;
}

unint64_t sub_1003F88F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1005E2AE0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Swift::UInt v9 = *(void *)(*(void *)(a2 + 48) + 16 * v6 + 8);
        sub_1005E33F0();
        sub_1005E3410(v9);
        uint64_t result = sub_1005E3470();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1003F8AF0(uint64_t a1, uint64_t a2, Swift::UInt a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1003F643C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1003F8D00();
      goto LABEL_7;
    }
    sub_1003F8544(v15, a4 & 1);
    unint64_t v22 = sub_1003F643C(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1005E3380();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for Activity.MailboxStatus(0) - 8) + 72) * v12;
    return sub_1003FCA60(a1, v20);
  }
LABEL_13:
  sub_1003F8C54(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003F8C54(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t result = sub_1003F9790(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for Activity.MailboxStatus);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void *sub_1003F8D00()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_1007144B0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1005E2FD0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1003F9858(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for Activity.MailboxStatus);
    unint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *unint64_t v22 = v20;
    v22[1] = v19;
    sub_1003F9790((uint64_t)v4, *(void *)(v7 + 56) + v21, type metadata accessor for Activity.MailboxStatus);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

BOOL _s16IMAP2Persistence8ActivityV13MailboxStatusO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ConnectionStatus.Error(0);
  __chkstk_darwin();
  uint64_t v5 = (unsigned __int8 *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Activity.MailboxStatus(0);
  __chkstk_darwin();
  uint64_t v7 = (unsigned __int8 *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v9 = (unsigned __int8 *)&v21 - v8;
  sub_10000566C(&qword_100714688);
  uint64_t v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = &v12[*(int *)(v10 + 56)];
  sub_1003F9858(a1, (uint64_t)v12, type metadata accessor for Activity.MailboxStatus);
  sub_1003F9858(a2, (uint64_t)v13, type metadata accessor for Activity.MailboxStatus);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003F9858((uint64_t)v12, (uint64_t)v7, type metadata accessor for Activity.MailboxStatus);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1003F97F8((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
        goto LABEL_12;
      }
      sub_1003F9790((uint64_t)v13, (uint64_t)v5, type metadata accessor for ConnectionStatus.Error);
      BOOL v18 = static ConnectionStatus.Error.__derived_struct_equals(_:_:)(v7, v5);
      sub_1003F97F8((uint64_t)v5, type metadata accessor for ConnectionStatus.Error);
      sub_1003F97F8((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
      sub_1003F97F8((uint64_t)v12, type metadata accessor for Activity.MailboxStatus);
      return v18;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_10;
      }
      goto LABEL_12;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_10;
      }
      goto LABEL_12;
    default:
      sub_1003F9858((uint64_t)v12, (uint64_t)v9, type metadata accessor for Activity.MailboxStatus);
      uint64_t v14 = *((void *)v9 + 1);
      uint64_t v15 = *((void *)v9 + 2);
      unsigned __int8 v16 = v9[24];
      int v17 = v9[25];
      if (!swift_getEnumCaseMultiPayload())
      {
        if (*v9 != *v13)
        {
LABEL_4:
          sub_1003F97F8((uint64_t)v12, type metadata accessor for Activity.MailboxStatus);
          return 0;
        }
        if (v16)
        {
          if (!v13[24]) {
            goto LABEL_4;
          }
        }
        else
        {
          if (v13[24]) {
            goto LABEL_4;
          }
          if (v14 != *((void *)v13 + 1) || v15 != *((void *)v13 + 2)) {
            goto LABEL_4;
          }
        }
        if (((v17 ^ v13[25]) & 1) == 0)
        {
LABEL_10:
          sub_1003F97F8((uint64_t)v12, type metadata accessor for Activity.MailboxStatus);
          return 1;
        }
        goto LABEL_4;
      }
LABEL_12:
      sub_100007A48((uint64_t)v12, &qword_100714688);
      return 0;
  }
}

BOOL _s16IMAP2Persistence8ActivityV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (unsigned __int8 *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100714690);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100714510);
  __chkstk_darwin();
  uint64_t v12 = (unsigned __int8 *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v24 - v13;
  __chkstk_darwin();
  unsigned __int8 v16 = (char *)&v24 - v15;
  if ((sub_100435454(*a1, *a2) & 1) == 0 || (sub_100440580(a1[1], a2[1]) & 1) == 0) {
    return 0;
  }
  int64_t v25 = v7;
  uint64_t v17 = v5;
  uint64_t v18 = type metadata accessor for Activity(0);
  sub_1000079E4((uint64_t)a1 + *(int *)(v18 + 24), (uint64_t)v16, &qword_100714510);
  sub_1000079E4((uint64_t)a2 + *(int *)(v18 + 24), (uint64_t)v14, &qword_100714510);
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000079E4((uint64_t)v16, (uint64_t)v10, &qword_100714510);
  sub_1000079E4((uint64_t)v14, v19, &qword_100714510);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v20((uint64_t)v10, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_100714510);
    sub_100007A48((uint64_t)v16, &qword_100714510);
    if (v20(v19, 1, v4) == 1)
    {
      sub_100007A48((uint64_t)v10, &qword_100714510);
      return 1;
    }
    goto LABEL_8;
  }
  sub_1000079E4((uint64_t)v10, (uint64_t)v12, &qword_100714510);
  if (v20(v19, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_100714510);
    sub_100007A48((uint64_t)v16, &qword_100714510);
    sub_1003F97F8((uint64_t)v12, type metadata accessor for ConnectionStatus.Error);
LABEL_8:
    sub_100007A48((uint64_t)v10, &qword_100714690);
    return 0;
  }
  uint64_t v21 = v25;
  sub_1003F9790(v19, (uint64_t)v25, type metadata accessor for ConnectionStatus.Error);
  BOOL v22 = _s16IMAP2Persistence16ConnectionStatusO5ErrorV23__derived_struct_equalsySbAE_AEtFZ_0(v12, v21);
  sub_1003F97F8((uint64_t)v21, type metadata accessor for ConnectionStatus.Error);
  sub_100007A48((uint64_t)v14, &qword_100714510);
  sub_100007A48((uint64_t)v16, &qword_100714510);
  sub_1003F97F8((uint64_t)v12, type metadata accessor for ConnectionStatus.Error);
  sub_100007A48((uint64_t)v10, &qword_100714510);
  return v22;
}

uint64_t type metadata accessor for Activity(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_100714588);
}

uint64_t sub_1003F9708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100714510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for Activity.MailboxStatus(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714640);
}

uint64_t sub_1003F9790(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003F97F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003F9858(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for Activity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000566C(&qword_100714510);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v13 = *(int *)(v9 + 20);
      uint64_t v14 = &v7[v13];
      uint64_t v15 = &v8[v13];
      uint64_t v16 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_10000566C(&qword_100714520);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v21 = v15[1];
            void *v14 = *v15;
            v14[1] = v21;
            uint64_t v22 = v15[2];
            uint64_t v23 = v15[3];
            v14[2] = v22;
            v14[3] = v23;
            swift_bridgeObjectRetain();
            goto LABEL_11;
          case 2u:
          case 3u:
            uint64_t v19 = v15[1];
            void *v14 = *v15;
            v14[1] = v19;
LABEL_11:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v20 = sub_1005E1650();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v15, v20);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v24 = *(int *)(v9 + 24);
      int64_t v25 = &v7[v24];
      uint64_t v26 = &v8[v24];
      uint64_t v27 = sub_1005E0970();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = sub_10000566C(&qword_100714528);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t destroy for Activity(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = sub_1005E1650();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
          break;
        case 1u:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        case 2u:
        case 3u:
LABEL_6:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
    }
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = sub_1005E0970();
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      return v12(v10, v11);
    }
  }
  return result;
}

void *initializeWithCopy for Activity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_10000566C(&qword_100714510);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v6 = *v7;
    uint64_t v12 = *(int *)(v8 + 20);
    uint64_t v13 = &v6[v12];
    uint64_t v14 = &v7[v12];
    uint64_t v15 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10000566C(&qword_100714520);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v20 = v14[1];
          *uint64_t v13 = *v14;
          v13[1] = v20;
          uint64_t v21 = v14[2];
          uint64_t v22 = v14[3];
          v13[2] = v21;
          v13[3] = v22;
          swift_bridgeObjectRetain();
          goto LABEL_9;
        case 2u:
        case 3u:
          uint64_t v18 = v14[1];
          *uint64_t v13 = *v14;
          v13[1] = v18;
LABEL_9:
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v19 = sub_1005E1650();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v23 = *(int *)(v8 + 24);
    uint64_t v24 = &v6[v23];
    int64_t v25 = &v7[v23];
    uint64_t v26 = sub_1005E0970();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = sub_10000566C(&qword_100714528);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for Activity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1003F97F8((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
      goto LABEL_7;
    }
    *uint64_t v7 = *v8;
    uint64_t v23 = *(int *)(v9 + 20);
    uint64_t v24 = &v7[v23];
    int64_t v25 = &v8[v23];
    uint64_t v26 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v49 = *(void *)(v26 - 8);
    v50 = v24;
    uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v49 + 48);
    LODWORD(v24) = v27(v24, 1, v26);
    int v28 = v27(v25, 1, v26);
    if (v24)
    {
      if (!v28)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            void *v50 = *v25;
            v50[1] = v25[1];
            v50[2] = v25[2];
            v50[3] = v25[3];
            swift_bridgeObjectRetain();
            goto LABEL_33;
          case 2u:
          case 3u:
            void *v50 = *v25;
            v50[1] = v25[1];
LABEL_33:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v40 = sub_1005E1650();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v50, v25, v40);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v26);
        goto LABEL_35;
      }
      size_t v29 = *(void *)(*(void *)(sub_10000566C(&qword_100714520) - 8) + 64);
      unint64_t v30 = v50;
    }
    else
    {
      if (!v28)
      {
        if (a1 != a2)
        {
          sub_1003F97F8((uint64_t)v50, type metadata accessor for ConnectionStatus.Error.Details);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              void *v50 = *v25;
              v50[1] = v25[1];
              v50[2] = v25[2];
              v50[3] = v25[3];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 2u:
            case 3u:
              void *v50 = *v25;
              v50[1] = v25[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v39 = sub_1005E1650();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v50, v25, v39);
              swift_storeEnumTagMultiPayload();
              break;
          }
        }
        goto LABEL_35;
      }
      sub_1003F97F8((uint64_t)v50, type metadata accessor for ConnectionStatus.Error.Details);
      size_t v29 = *(void *)(*(void *)(sub_10000566C(&qword_100714520) - 8) + 64);
      unint64_t v30 = v50;
    }
    memcpy(v30, v25, v29);
LABEL_35:
    uint64_t v41 = *(int *)(v9 + 24);
    v42 = &v7[v41];
    v43 = &v8[v41];
    uint64_t v44 = sub_1005E0970();
    uint64_t v45 = *(void *)(v44 - 8);
    v46 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v45 + 48);
    int v47 = v46(v42, 1, v44);
    int v48 = v46(v43, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        return a1;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 24))(v42, v43, v44);
        return a1;
      }
      (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v42, v44);
    }
    size_t v20 = *(void *)(*(void *)(sub_10000566C(&qword_100714528) - 8) + 64);
    uint64_t v21 = v42;
    uint64_t v22 = v43;
    goto LABEL_8;
  }
  if (v13)
  {
LABEL_7:
    size_t v20 = *(void *)(*(void *)(sub_10000566C(&qword_100714510) - 8) + 64);
    uint64_t v21 = v7;
    uint64_t v22 = v8;
LABEL_8:
    memcpy(v21, v22, v20);
    return a1;
  }
  *uint64_t v7 = *v8;
  uint64_t v14 = *(int *)(v9 + 20);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10000566C(&qword_100714520);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v15 = *v16;
        v15[1] = v16[1];
        v15[2] = v16[2];
        v15[3] = v16[3];
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 2u:
      case 3u:
        *uint64_t v15 = *v16;
        v15[1] = v16[1];
LABEL_21:
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v31 = sub_1005E1650();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v15, v16, v31);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v32 = *(int *)(v9 + 24);
  unint64_t v33 = &v7[v32];
  BOOL v34 = &v8[v32];
  uint64_t v35 = sub_1005E0970();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = sub_10000566C(&qword_100714528);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for Activity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10000566C(&qword_100714510);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    *uint64_t v5 = *v6;
    uint64_t v10 = *(int *)(v7 + 20);
    uint64_t v11 = &v5[v10];
    int v12 = &v6[v10];
    uint64_t v13 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10000566C(&qword_100714520);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v11, v12, *(void *)(v14 + 64));
      }
      else
      {
        uint64_t v16 = sub_1005E1650();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    uint64_t v17 = *(int *)(v7 + 24);
    uint64_t v18 = &v5[v17];
    uint64_t v19 = &v6[v17];
    uint64_t v20 = sub_1005E0970();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_10000566C(&qword_100714528);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for Activity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1003F97F8((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
      goto LABEL_7;
    }
    *uint64_t v7 = *v8;
    uint64_t v23 = *(int *)(v9 + 20);
    uint64_t v24 = &v7[v23];
    int64_t v25 = &v8[v23];
    uint64_t v26 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v52 = *(void *)(v26 - 8);
    uint64_t v27 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v52 + 48);
    __dst = v24;
    LODWORD(v24) = v27(v24, 1, v26);
    __src = v25;
    int v28 = v27(v25, 1, v26);
    if (v24)
    {
      if (!v28)
      {
        if (swift_getEnumCaseMultiPayload())
        {
          uint64_t v32 = v52;
          unint64_t v33 = __dst;
          memcpy(__dst, __src, *(void *)(v52 + 64));
        }
        else
        {
          uint64_t v42 = sub_1005E1650();
          unint64_t v33 = __dst;
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(__dst, v25, v42);
          swift_storeEnumTagMultiPayload();
          uint64_t v32 = v52;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v33, 0, 1, v26);
        goto LABEL_32;
      }
      size_t v29 = *(void *)(*(void *)(sub_10000566C(&qword_100714520) - 8) + 64);
      unint64_t v30 = __dst;
    }
    else
    {
      if (!v28)
      {
        if (a1 == a2) {
          goto LABEL_32;
        }
        sub_1003F97F8((uint64_t)__dst, type metadata accessor for ConnectionStatus.Error.Details);
        if (!swift_getEnumCaseMultiPayload())
        {
          uint64_t v51 = sub_1005E1650();
          (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 32))(__dst, v25, v51);
          swift_storeEnumTagMultiPayload();
          goto LABEL_32;
        }
        size_t v29 = *(void *)(v52 + 64);
        unint64_t v30 = __dst;
        uint64_t v31 = v25;
LABEL_17:
        memcpy(v30, v31, v29);
LABEL_32:
        uint64_t v43 = *(int *)(v9 + 24);
        uint64_t v44 = &v7[v43];
        uint64_t v45 = &v8[v43];
        uint64_t v46 = sub_1005E0970();
        uint64_t v47 = *(void *)(v46 - 8);
        int v48 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v47 + 48);
        int v49 = v48(v44, 1, v46);
        int v50 = v48(v45, 1, v46);
        if (v49)
        {
          if (!v50)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 32))(v44, v45, v46);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
            return a1;
          }
        }
        else
        {
          if (!v50)
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 40))(v44, v45, v46);
            return a1;
          }
          (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v44, v46);
        }
        size_t v20 = *(void *)(*(void *)(sub_10000566C(&qword_100714528) - 8) + 64);
        uint64_t v21 = v44;
        uint64_t v22 = v45;
        goto LABEL_8;
      }
      sub_1003F97F8((uint64_t)__dst, type metadata accessor for ConnectionStatus.Error.Details);
      size_t v29 = *(void *)(*(void *)(sub_10000566C(&qword_100714520) - 8) + 64);
      unint64_t v30 = __dst;
    }
    uint64_t v31 = v25;
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_7:
    size_t v20 = *(void *)(*(void *)(sub_10000566C(&qword_100714510) - 8) + 64);
    uint64_t v21 = v7;
    uint64_t v22 = v8;
LABEL_8:
    memcpy(v21, v22, v20);
    return a1;
  }
  *uint64_t v7 = *v8;
  uint64_t v14 = *(int *)(v9 + 20);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10000566C(&qword_100714520);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v15, v16, *(void *)(v18 + 64));
    }
    else
    {
      uint64_t v34 = sub_1005E1650();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 32))(v15, v16, v34);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v35 = *(int *)(v9 + 24);
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  uint64_t v38 = sub_1005E0970();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    uint64_t v40 = sub_10000566C(&qword_100714528);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003FB534);
}

uint64_t sub_1003FB534(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100714510);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Activity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003FB5FC);
}

void *sub_1003FB5FC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100714510);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1003FB6A8()
{
  sub_1003FB744();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1003FB744()
{
  if (!qword_100714598)
  {
    type metadata accessor for ConnectionStatus.Error(255);
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100714598);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Activity.MailboxStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_10000566C(&qword_100714520);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v17 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v17;
            uint64_t v18 = v10[2];
            uint64_t v19 = v10[3];
            v9[2] = v18;
            v9[3] = v19;
            swift_bridgeObjectRetain();
            goto LABEL_11;
          case 2u:
          case 3u:
            uint64_t v15 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v15;
LABEL_11:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v16 = sub_1005E1650();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v20 = *(int *)(v7 + 24);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_1005E0970();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = sub_10000566C(&qword_100714528);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for Activity.MailboxStatus(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v4 = a1 + *(int *)(v3 + 20);
    uint64_t v5 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v6 = sub_1005E1650();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
          break;
        case 1u:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        case 2u:
        case 3u:
LABEL_6:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
    }
    uint64_t v7 = a1 + *(int *)(v3 + 24);
    uint64_t v8 = sub_1005E0970();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
    if (!result)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v9(v7, v8);
    }
  }
  return result;
}

unsigned char *initializeWithCopy for Activity.MailboxStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10000566C(&qword_100714520);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v15 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v15;
          uint64_t v16 = v9[2];
          uint64_t v17 = v9[3];
          v8[2] = v16;
          v8[3] = v17;
          swift_bridgeObjectRetain();
          goto LABEL_9;
        case 2u:
        case 3u:
          uint64_t v13 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v13;
LABEL_9:
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v14 = sub_1005E1650();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v18 = *(int *)(v6 + 24);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = sub_1005E0970();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_10000566C(&qword_100714528);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithCopy for Activity.MailboxStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003F97F8((uint64_t)a1, type metadata accessor for Activity.MailboxStatus);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10000566C(&qword_100714520);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v8 = *v9;
            v8[1] = v9[1];
            v8[2] = v9[2];
            v8[3] = v9[3];
            swift_bridgeObjectRetain();
            goto LABEL_10;
          case 2u:
          case 3u:
            *uint64_t v8 = *v9;
            v8[1] = v9[1];
LABEL_10:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v13 = sub_1005E1650();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1005E0970();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_10000566C(&qword_100714528);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

unsigned char *initializeWithTake for Activity.MailboxStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10000566C(&qword_100714520);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      else
      {
        uint64_t v13 = sub_1005E1650();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_1005E0970();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_10000566C(&qword_100714528);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for Activity.MailboxStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003F97F8((uint64_t)a1, type metadata accessor for Activity.MailboxStatus);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10000566C(&qword_100714520);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v8, v9, *(void *)(v11 + 64));
        }
        else
        {
          uint64_t v13 = sub_1005E1650();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1005E0970();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_10000566C(&qword_100714528);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003FC8A4()
{
  uint64_t result = type metadata accessor for ConnectionStatus.Error(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Activity.MailboxStatus.Info(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[26]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Activity.MailboxStatus.Info(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Activity.MailboxStatus.Info()
{
  return &type metadata for Activity.MailboxStatus.Info;
}

__n128 initializeWithTake for OpaqueMailboxID(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Activity.MailboxStatus.Info.FetchProgress()
{
  return &type metadata for Activity.MailboxStatus.Info.FetchProgress;
}

unint64_t sub_1003FCA04()
{
  unint64_t result = qword_100714678;
  if (!qword_100714678)
  {
    sub_10000744C(&qword_100714680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714678);
  }
  return result;
}

uint64_t sub_1003FCA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Activity.MailboxStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003FCAC8()
{
  unint64_t result = qword_100714698;
  if (!qword_100714698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714698);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangeID()
{
  return &type metadata for ChangeID;
}

uint64_t Configuration.connection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Configuration() + 20);
  return sub_1003FCBBC(v3, a1);
}

uint64_t type metadata accessor for Configuration()
{
  uint64_t result = qword_100714708;
  if (!qword_100714708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003FCBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Configuration.connection.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Configuration() + 20);
  return sub_1003FCC64(a1, v3);
}

uint64_t sub_1003FCC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::UInt32 (__swiftcall *Configuration.connection.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t Configuration.mailboxFilter.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Configuration() + 24));
}

uint64_t Configuration.mailboxFilter.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for Configuration();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

Swift::UInt32 (__swiftcall *Configuration.mailboxFilter.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t Configuration.fetchedMessageMetadata.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Configuration() + 28));
}

uint64_t Configuration.fetchedMessageMetadata.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for Configuration();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

Swift::UInt32 (__swiftcall *Configuration.fetchedMessageMetadata.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t Configuration.init(logName:connection:mailboxFilter:fetchedMessageMetadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, void *a6@<X8>)
{
  char v8 = a4 & 1;
  char v9 = a5 & 1;
  *a6 = a1;
  a6[1] = a2;
  uint64_t v10 = (int *)type metadata accessor for Configuration();
  uint64_t result = sub_1003FCEB4(a3, (uint64_t)a6 + v10[5]);
  *((unsigned char *)a6 + v10[6]) = v8;
  *((unsigned char *)a6 + v10[7]) = v9;
  return result;
}

uint64_t sub_1003FCEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConnectionConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003FCF1C()
{
  unint64_t result = qword_1007146A0;
  if (!qword_1007146A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007146A0);
  }
  return result;
}

unint64_t sub_1003FCF74()
{
  unint64_t result = qword_1007146A8;
  if (!qword_1007146A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007146A8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Configuration(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005E10E0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = (int *)type metadata accessor for ConnectionConfiguration();
    v9[v13[5]] = v10[v13[5]];
    *(void *)&v9[v13[6]] = *(void *)&v10[v13[6]];
    v9[v13[7]] = v10[v13[7]];
    uint64_t v14 = v13[8];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    v9[v13[9]] = v10[v13[9]];
    uint64_t v18 = v13[10];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = v13[11];
    uint64_t v23 = &v9[v22];
    uint64_t v24 = &v10[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = v13[12];
    uint64_t v27 = &v9[v26];
    int v28 = &v10[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    uint64_t v30 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for Configuration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for ConnectionConfiguration();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for Configuration(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  char v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1005E10E0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for ConnectionConfiguration();
  v8[v12[5]] = v9[v12[5]];
  *(void *)&v8[v12[6]] = *(void *)&v9[v12[6]];
  v8[v12[7]] = v9[v12[7]];
  uint64_t v13 = v12[8];
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  v8[v12[9]] = v9[v12[9]];
  uint64_t v17 = v12[10];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = v12[11];
  uint64_t v22 = &v8[v21];
  uint64_t v23 = &v9[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = v12[12];
  uint64_t v26 = &v8[v25];
  uint64_t v27 = &v9[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  uint64_t v29 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Configuration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005E10E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for ConnectionConfiguration();
  v7[v10[5]] = v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[7]] = v8[v10[7]];
  uint64_t v11 = v10[8];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[9]] = v8[v10[9]];
  uint64_t v14 = v10[10];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v10[11];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  swift_retain();
  swift_release();
  uint64_t v21 = v10[12];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for Configuration(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005E10E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for ConnectionConfiguration();
  v7[v10[5]] = v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  v7[v10[7]] = v8[v10[7]];
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  v7[v10[9]] = v8[v10[9]];
  *(_OWORD *)&v7[v10[10]] = *(_OWORD *)&v8[v10[10]];
  *(_OWORD *)&v7[v10[11]] = *(_OWORD *)&v8[v10[11]];
  *(_OWORD *)&v7[v10[12]] = *(_OWORD *)&v8[v10[12]];
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

void *assignWithTake for Configuration(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1005E10E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ConnectionConfiguration();
  v8[v11[5]] = v9[v11[5]];
  *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
  swift_bridgeObjectRelease();
  v8[v11[7]] = v9[v11[7]];
  uint64_t v12 = v11[8];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v8[v11[9]] = v9[v11[9]];
  uint64_t v17 = v11[10];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  *(_OWORD *)&v8[v11[11]] = *(_OWORD *)&v9[v11[11]];
  swift_release();
  *(_OWORD *)&v8[v11[12]] = *(_OWORD *)&v9[v11[12]];
  swift_release();
  uint64_t v22 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003FD7DC);
}

uint64_t sub_1003FD7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ConnectionConfiguration();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003FD8A0);
}

uint64_t sub_1003FD8A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConnectionConfiguration();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1003FD948()
{
  uint64_t result = type metadata accessor for ConnectionConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.MailboxFilter()
{
  return &type metadata for Configuration.MailboxFilter;
}

unsigned char *_s16IMAP2Persistence13ConfigurationV22FetchedMessageMetadataOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FDACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.FetchedMessageMetadata()
{
  return &type metadata for Configuration.FetchedMessageMetadata;
}

uint64_t ConnectionConfiguration.endpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005E10E0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ConnectionConfiguration.endpoint.setter(uint64_t a1)
{
  uint64_t v3 = sub_1005E10E0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t ConnectionConfiguration.prohibitConstrainedPaths.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 20));
}

{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 20));
}

uint64_t type metadata accessor for ConnectionConfiguration()
{
  uint64_t result = qword_1007147B0;
  if (!qword_1007147B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ConnectionConfiguration.prohibitConstrainedPaths.setter(char a1)
{
  uint64_t result = type metadata accessor for ConnectionConfiguration();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

{
  uint64_t v1;
  uint64_t result;

  uint64_t result = type metadata accessor for ConnectionConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *ConnectionConfiguration.prohibitConstrainedPaths.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return UInt32.init(_:);
}

uint64_t ConnectionConfiguration.prohibitedInterfaceTypes.getter()
{
  type metadata accessor for ConnectionConfiguration();
  return swift_bridgeObjectRetain();
}

{
  uint64_t vars8;

  type metadata accessor for ConnectionConfiguration(0);
  return swift_bridgeObjectRetain();
}

uint64_t ConnectionConfiguration.prohibitedInterfaceTypes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ConnectionConfiguration() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  uint64_t v3 = *(int *)(type metadata accessor for ConnectionConfiguration(0) + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *ConnectionConfiguration.prohibitedInterfaceTypes.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return UInt32.init(_:);
}

uint64_t ConnectionConfiguration.transportLayerSecurity.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 28));
}

{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 28));
}

uint64_t ConnectionConfiguration.transportLayerSecurity.setter(char a1)
{
  uint64_t result = type metadata accessor for ConnectionConfiguration();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

{
  uint64_t v1;
  uint64_t result;

  uint64_t result = type metadata accessor for ConnectionConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *ConnectionConfiguration.transportLayerSecurity.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return UInt32.init(_:);
}

uint64_t static AccountConfiguration.TransportLayerSecurity.__derived_enum_equals(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) == 0x40) {
        return ((a2 ^ a1) & 0x3F) == 0;
      }
    }
    else if (a2 == 128)
    {
      return 1;
    }
  }
  else if (a2 <= 0x3Fu)
  {
    return a1 == a2;
  }
  return 0;
}

uint64_t sub_1003FDE74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v3 & 0xC0) == 0x40) {
        return ((v3 ^ v2) & 0x3F) == 0;
      }
    }
    else if (v3 == 128)
    {
      return 1;
    }
  }
  else if (v3 < 0x40)
  {
    return v2 == v3;
  }
  return 0;
}

uint64_t ConnectionConfiguration.sourceApplicationBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

{
  uint64_t v0;
  uint64_t v1;

  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ConnectionConfiguration.sourceApplicationBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

{
  uint64_t v2;
  void *v5;
  uint64_t result;

  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

Swift::UInt32 (__swiftcall *ConnectionConfiguration.sourceApplicationBundleIdentifier.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return UInt32.init(_:);
}

uint64_t ConnectionConfiguration.sourceApplicationKind.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 36));
}

{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 36));
}

uint64_t ConnectionConfiguration.sourceApplicationKind.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for ConnectionConfiguration();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

{
  uint64_t v1;
  char v2;
  uint64_t result;

  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for ConnectionConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

Swift::UInt32 (__swiftcall *ConnectionConfiguration.sourceApplicationKind.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return UInt32.init(_:);
}

uint64_t ConnectionConfiguration.networkAccountIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

{
  uint64_t v0;
  uint64_t v1;

  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ConnectionConfiguration.networkAccountIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

{
  uint64_t v2;
  void *v5;
  uint64_t result;

  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

Swift::UInt32 (__swiftcall *ConnectionConfiguration.networkAccountIdentifier.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

{
  type metadata accessor for ConnectionConfiguration(0);
  return UInt32.init(_:);
}

uint64_t ConnectionConfiguration.getPushInformation.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 44));
  swift_retain();
  return v1;
}

uint64_t ConnectionConfiguration.getPushInformation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration() + 44));
  uint64_t result = swift_release();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

Swift::UInt32 (__swiftcall *ConnectionConfiguration.getPushInformation.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t ConnectionConfiguration.finishPushRegistration.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ConnectionConfiguration() + 48));
  swift_retain();
  return v1;
}

uint64_t ConnectionConfiguration.finishPushRegistration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ConnectionConfiguration() + 48));
  uint64_t result = swift_release();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

Swift::UInt32 (__swiftcall *ConnectionConfiguration.finishPushRegistration.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t ConnectionConfiguration.init(transportLayerSecurity:transportLayerSecurityOptions:endpoint:prohibitConstrainedPaths:prohibitedInterfaceTypes:sourceApplicationBundleIdentifier:sourceApplicationKind:networkAccountIdentifier:getPushInformation:finishPushRegistration:)@<X0>(char a1@<W0>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char a7@<W7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  char v17 = a7 & 1;
  swift_release();
  uint64_t v18 = (int *)type metadata accessor for ConnectionConfiguration();
  uint64_t v19 = (void *)(a8 + v18[8]);
  uint64_t v20 = (void *)(a8 + v18[10]);
  uint64_t v21 = v18[6];
  *(unsigned char *)(a8 + v18[7]) = a1;
  uint64_t v22 = sub_1005E10E0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a8, a2, v22);
  *(unsigned char *)(a8 + v18[5]) = a3;
  *(void *)(a8 + v21) = a4;
  *uint64_t v19 = a5;
  v19[1] = a6;
  *(unsigned char *)(a8 + v18[9]) = v17;
  *uint64_t v20 = a9;
  v20[1] = a10;
  uint64_t v24 = (void *)(a8 + v18[11]);
  *uint64_t v24 = a11;
  v24[1] = a12;
  uint64_t v25 = (void *)(a8 + v18[12]);
  *uint64_t v25 = a13;
  v25[1] = a14;
  return result;
}

unint64_t CertificateTrust.Policy.description.getter(unsigned __int8 a1)
{
  unint64_t result = 0xD000000000000013;
  if (a1 >= 2u) {
    return 0xD000000000000011;
  }
  return result;
}

unint64_t sub_1003FE44C()
{
  unint64_t result = qword_100714748;
  if (!qword_100714748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714748);
  }
  return result;
}

unint64_t sub_1003FE4A4()
{
  unint64_t result = qword_100714750;
  if (!qword_100714750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714750);
  }
  return result;
}

unint64_t sub_1003FE4F8()
{
  return CertificateTrust.Policy.description.getter(*v0);
}

void *initializeBufferWithCopyOfBuffer for ConnectionConfiguration(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1005E10E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)v4 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)v4 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)((char *)v4 + v17);
    uint64_t v20 = (void *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (void *)((char *)v4 + v18);
    uint64_t v23 = (void *)((char *)a2 + v18);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E10E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ConnectionConfiguration(uint64_t a1)
{
  uint64_t v2 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

{
  uint64_t v2;
  uint64_t vars8;

  uint64_t v2 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ConnectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (void *)(a2 + v17);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;

  uint64_t v6 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ConnectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[11];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;

  uint64_t v6 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ConnectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  uint64_t v6 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for ConnectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  swift_release();
  return a1;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  uint64_t v6 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003FEB40);
}

{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10048E850);
}

uint64_t sub_1003FEB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E10E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003FEC14);
}

{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10048E930);
}

uint64_t sub_1003FEC14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E10E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1003FECD0()
{
  uint64_t result = sub_1005E10E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectionConfiguration.TransportLayerSecurity(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x3E) {
    goto LABEL_17;
  }
  if (a2 + 194 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 194) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 194;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 194;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 194;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v6 >= 0x3D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ConnectionConfiguration.TransportLayerSecurity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 194 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 194) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3D)
  {
    unsigned int v6 = ((a2 - 62) >> 8) + 1;
    *uint64_t result = a2 - 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FEF0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

{
  int v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;

  if (a3 + 194 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 194) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3D)
  {
    unsigned int v6 = ((a2 - 62) >> 8) + 1;
    *uint64_t result = a2 - 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10048EC80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1003FEF34(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return (v1 & 3u) + 2;
  }
}

unsigned char *sub_1003FEF50(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1003FEF60(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 3 | ((_BYTE)a2 << 6);
  }
  else {
    *uint64_t result = (a2 + 2) & 3 | 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionConfiguration.TransportLayerSecurity()
{
  return &type metadata for ConnectionConfiguration.TransportLayerSecurity;
}

{
  return &type metadata for ConnectionConfiguration.TransportLayerSecurity;
}

unsigned char *storeEnumTagSinglePayload for ConnectionConfiguration.SourceApplicationKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FF06CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

{
  int v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;

  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10048EB70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionConfiguration.SourceApplicationKind()
{
  return &type metadata for ConnectionConfiguration.SourceApplicationKind;
}

{
  return &type metadata for ConnectionConfiguration.SourceApplicationKind;
}

ValueMetadata *type metadata accessor for CertificateTrust()
{
  return &type metadata for CertificateTrust;
}

unsigned char *storeEnumTagSinglePayload for CertificateTrust.Policy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FF180);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CertificateTrust.Policy()
{
  return &type metadata for CertificateTrust.Policy;
}

uint64_t sub_1003FF1BC(_OWORD *a1, _OWORD *a2)
{
  sub_100400248(a1, v4);
  sub_100400248(a2, v5);
  return _s16IMAP2Persistence11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(v4, v5) & 1;
}

uint64_t _s16IMAP2Persistence11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(_OWORD *a1, _OWORD *a2)
{
  sub_100400248(a1, &v61);
  long long v4 = v61;
  sub_100400248(a1, &v69);
  switch((v77 >> 59) & 6 | ((v75 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      unint64_t v13 = v75 & 0xDFFFFFFFFFFFFFFFLL;
      unint64_t v14 = v77 & 0xCFFFFFFFFFFFFFFFLL;
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v15 = v69;
      uint64_t v17 = v70;
      unint64_t v16 = v71;
      uint64_t v19 = v72;
      unint64_t v18 = v73;
      uint64_t v20 = v74;
      uint64_t v60 = v76;
      sub_100400248(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 1) {
        goto LABEL_61;
      }
      unint64_t v56 = v14;
      unint64_t v57 = v18;
      v66 &= ~0x2000000000000000uLL;
      unint64_t v54 = v66;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v21 = v68;
      int8x16_t v22 = v62;
      unint64_t v58 = v63.u64[1];
      uint64_t v59 = v63.i64[0];
      int8x16_t v55 = v64;
      uint64_t v52 = v65;
      unint64_t v53 = v62.u64[1];
      uint64_t v23 = v67;
      sub_100008D24(v15, *((unint64_t *)&v15 + 1));
      sub_100008D24(v22.i64[0], v22.u64[1]);
      sub_100008D24(v17, v16);
      sub_100008D24(v19, v57);
      sub_100008D24(v20, v13);
      sub_100008D24(v60, v56);
      sub_100008D24(v59, v58);
      sub_100008D24(v55.i64[0], v55.u64[1]);
      sub_100008D24(v52, v54);
      sub_100008D24(v23, v21);
      if ((sub_100403008(v15, *((unint64_t *)&v15 + 1), v22.i64[0], v53) & 1) != 0
        && (sub_100403008(v17, v16, v59, v58) & 1) != 0
        && (sub_100403008(v19, v57, v55.i64[0], v55.u64[1]) & 1) != 0
        && (sub_100403008(v20, v13, v52, v54) & 1) != 0)
      {
        char v24 = sub_100403008(v60, v56, v23, v21);
        sub_1000094D4(v23, v21);
        sub_1000094D4(v52, v54);
        sub_1000094D4(v55.i64[0], v55.u64[1]);
        sub_1000094D4(v59, v58);
        sub_1000094D4(v60, v56);
        sub_1000094D4(v20, v13);
        sub_1000094D4(v19, v57);
        sub_1000094D4(v17, v16);
        sub_1000094D4(v22.i64[0], v53);
        sub_1000094D4(v15, *((unint64_t *)&v15 + 1));
        return v24 & 1;
      }
      sub_1000094D4(v23, v21);
      sub_1000094D4(v52, v54);
      sub_1000094D4(v55.i64[0], v55.u64[1]);
      sub_1000094D4(v59, v58);
      sub_1000094D4(v60, v56);
      sub_1000094D4(v20, v13);
      sub_1000094D4(v19, v57);
      sub_1000094D4(v17, v16);
      sub_1000094D4(v22.i64[0], v53);
      unint64_t v50 = *((void *)&v15 + 1);
      uint64_t v49 = v15;
      goto LABEL_60;
    case 2uLL:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v26 = *((void *)&v69 + 1);
      uint64_t v25 = v69;
      sub_100400248(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) == 2)
      {
        v66 &= ~0x2000000000000000uLL;
        v68 &= 0xCFFFFFFFFFFFFFFFLL;
        unint64_t v28 = v62.u64[1];
        uint64_t v27 = v62.i64[0];
        uint64_t v29 = 0;
        switch(v26 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v25), v25))
            {
              __break(1u);
LABEL_64:
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
LABEL_70:
              __break(1u);
              JUMPOUT(0x1003FFB44);
            }
            uint64_t v29 = HIDWORD(v25) - (int)v25;
LABEL_28:
            sub_100008D24(v4, *((unint64_t *)&v4 + 1));
LABEL_29:
            switch(v28 >> 62)
            {
              case 1uLL:
                LODWORD(v39) = HIDWORD(v27) - v27;
                if (__OFSUB__(HIDWORD(v27), v27)) {
                  goto LABEL_65;
                }
                uint64_t v39 = (int)v39;
LABEL_34:
                if (v29 != v39)
                {
LABEL_39:
                  sub_100400268((uint64_t)a1);
                  goto LABEL_61;
                }
                if (v29 < 1)
                {
LABEL_40:
                  sub_100400268((uint64_t)a1);
                  goto LABEL_41;
                }
                sub_100008D24(v27, v28);
                char v43 = sub_10043A794(v25, v26, v27, v28);
                sub_100400268((uint64_t)a1);
                if (v43) {
                  goto LABEL_41;
                }
                break;
              case 2uLL:
                uint64_t v41 = *(void *)(v27 + 16);
                uint64_t v40 = *(void *)(v27 + 24);
                BOOL v42 = __OFSUB__(v40, v41);
                uint64_t v39 = v40 - v41;
                if (!v42) {
                  goto LABEL_34;
                }
                goto LABEL_66;
              case 3uLL:
                if (v29) {
                  goto LABEL_39;
                }
                goto LABEL_40;
              default:
                uint64_t v39 = BYTE6(v28);
                goto LABEL_34;
            }
            break;
          case 2uLL:
            uint64_t v38 = *(void *)(v25 + 16);
            uint64_t v37 = *(void *)(v25 + 24);
            uint64_t v29 = v37 - v38;
            if (!__OFSUB__(v37, v38)) {
              goto LABEL_28;
            }
            goto LABEL_64;
          case 3uLL:
            goto LABEL_29;
          default:
            uint64_t v29 = BYTE6(v26);
            goto LABEL_29;
        }
      }
      goto LABEL_61;
    case 3uLL:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      long long v30 = v69;
      uint64_t v31 = v70;
      unint64_t v32 = v71;
      sub_100400248(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 3) {
        goto LABEL_61;
      }
      v66 &= ~0x2000000000000000uLL;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      int8x16_t v33 = v63;
      if (v30 == *(_OWORD *)&v62 || (char v24 = 0, (sub_1005E3290() & 1) != 0))
      {
        if (__PAIR128__(v32, v31) == *(_OWORD *)&v33) {
LABEL_41:
        }
          char v24 = 1;
        else {
          char v24 = sub_1005E3290();
        }
      }
      return v24 & 1;
    case 4uLL:
      sub_100400248(a2, &v62);
      if (((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) != 4) {
        goto LABEL_61;
      }
      if (v68 != 0x2000000000000000) {
        goto LABEL_61;
      }
      v34.i64[0] = v65;
      v34.i64[1] = v67;
      int8x16_t v35 = vorrq_s8(v64, v62);
      int8x16_t v36 = vorrq_s8(v34, vorrq_s8(vextq_s8(v63, v63, 8uLL), vextq_s8(v35, v35, 8uLL)));
      if (*(void *)&vorr_s8(*(int8x8_t *)v36.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL)) | v66) {
        goto LABEL_61;
      }
      goto LABEL_41;
    default:
      v75 &= ~0x2000000000000000uLL;
      v77 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v5 = *((void *)&v69 + 1);
      uint64_t v6 = v69;
      uint64_t v8 = v70;
      unint64_t v7 = v71;
      sub_100400248(a2, &v62);
      if ((v68 >> 59) & 6 | ((v66 & 0x2000000000000000) != 0)) {
        goto LABEL_61;
      }
      v66 &= ~0x2000000000000000uLL;
      v68 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v9 = v62.u64[1];
      uint64_t v10 = v62.i64[0];
      int8x16_t v11 = v63;
      uint64_t v12 = 0;
      switch(v5 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6)) {
            goto LABEL_67;
          }
          uint64_t v12 = HIDWORD(v6) - (int)v6;
LABEL_45:
          sub_100008D24(v6, v5);
          break;
        case 2uLL:
          uint64_t v45 = *(void *)(v6 + 16);
          uint64_t v44 = *(void *)(v6 + 24);
          uint64_t v12 = v44 - v45;
          if (!__OFSUB__(v44, v45)) {
            goto LABEL_45;
          }
          goto LABEL_68;
        case 3uLL:
          goto LABEL_46;
        default:
          uint64_t v12 = BYTE6(v5);
          goto LABEL_46;
      }
      break;
  }
LABEL_46:
  switch(v9 >> 62)
  {
    case 1uLL:
      LODWORD(v46) = HIDWORD(v10) - v10;
      if (__OFSUB__(HIDWORD(v10), v10)) {
        goto LABEL_69;
      }
      uint64_t v46 = (int)v46;
LABEL_51:
      if (v12 != v46) {
        goto LABEL_56;
      }
      if (v12 < 1)
      {
LABEL_57:
        sub_100008D24(v10, v9);
        sub_100008D24(v8, v7);
        sub_100008D24(v11.i64[0], v11.u64[1]);
        goto LABEL_58;
      }
      sub_100008D24(v10, v9);
      sub_100008D24(v10, v9);
      sub_100008D24(v8, v7);
      sub_100008D24(v11.i64[0], v11.u64[1]);
      if (sub_10043A794(v6, v5, v10, v9))
      {
LABEL_58:
        char v24 = sub_100403008(v8, v7, v11.i64[0], v11.u64[1]);
        sub_1000094D4(v11.i64[0], v11.u64[1]);
        sub_1000094D4(v8, v7);
        sub_1000094D4(v10, v9);
        sub_1000094D4(v6, v5);
        return v24 & 1;
      }
      sub_1000094D4(v11.i64[0], v11.u64[1]);
      sub_1000094D4(v8, v7);
      sub_1000094D4(v10, v9);
LABEL_56:
      uint64_t v49 = v6;
      unint64_t v50 = v5;
LABEL_60:
      sub_1000094D4(v49, v50);
LABEL_61:
      char v24 = 0;
      return v24 & 1;
    case 2uLL:
      uint64_t v48 = *(void *)(v10 + 16);
      uint64_t v47 = *(void *)(v10 + 24);
      BOOL v42 = __OFSUB__(v47, v48);
      uint64_t v46 = v47 - v48;
      if (!v42) {
        goto LABEL_51;
      }
      goto LABEL_70;
    case 3uLL:
      if (v12) {
        goto LABEL_56;
      }
      goto LABEL_57;
    default:
      uint64_t v46 = BYTE6(v9);
      goto LABEL_51;
  }
}

unint64_t sub_1003FFB9C()
{
  unint64_t result = qword_100714808;
  if (!qword_100714808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714808);
  }
  return result;
}

uint64_t sub_1003FFBF0(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_100008D24(result, a2);
      unint64_t result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_100008D24(result, a2);
      sub_100008D24(a3, a4);
      sub_100008D24(a5, a6);
      sub_100008D24(a7, v15);
      unint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      unint64_t result = sub_100008D24(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRetain();
      unint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for Credentials(uint64_t a1)
{
  return sub_1003FFD68(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72));
}

{
  return sub_1005CB0F0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72));
}

uint64_t sub_1003FFD68(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1000094D4(result, a2);
      unint64_t result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1000094D4(result, a2);
      sub_1000094D4(a3, a4);
      sub_1000094D4(a5, a6);
      sub_1000094D4(a7, v15);
      unint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      unint64_t result = sub_1000094D4(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for Credentials(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v13 = a2[9];
  sub_1003FFBF0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  return a1;
}

{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;

  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v13 = a2[9];
  sub_1005CB22C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  return a1;
}

uint64_t *assignWithCopy for Credentials(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v23 = a2[9];
  sub_1003FFBF0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v23);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = a1[8];
  unint64_t v21 = a1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v23;
  sub_1003FFD68(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;

  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  unint64_t v23 = a2[9];
  sub_1005CB22C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v23);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = a1[8];
  unint64_t v21 = a1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v23;
  sub_1005CB0F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 initializeWithTake for Credentials(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

{
  __n128 result;
  long long v3;
  long long v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t *assignWithTake for Credentials(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  unint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v11 = a1[8];
  unint64_t v12 = a1[9];
  long long v13 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v13;
  long long v14 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v14;
  *((_OWORD *)a1 + 4) = a2[4];
  sub_1003FFD68(v3, v5, v4, v6, v7, v8, v9, v10, v11, v12);
  return a1;
}

{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  long long v13;
  long long v14;

  uint64_t v3 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  unint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v11 = a1[8];
  unint64_t v12 = a1[9];
  long long v13 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v13;
  long long v14 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v14;
  *((_OWORD *)a1 + 4) = a2[4];
  sub_1005CB0F0(v3, v5, v4, v6, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Credentials(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3C && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 60);
  }
  unsigned int v3 = (*(void *)(a1 + 56) >> 58) & 0xC;
  unsigned int v4 = (((*(unsigned char *)(a1 + 79) & 0x30 | v3) >> 3) & 0xFFFFFFC7 | (8 * (v3 & 7 | (*(void *)(a1 + 40) >> 60) & 3))) ^ 0x3F;
  if (v4 >= 0x3B) {
    unsigned int v4 = -1;
  }
  return v4 + 1;
}

uint64_t storeEnumTagSinglePayload for Credentials(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 60;
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      uint64_t v3 = (-a2 >> 3) & 7 | (8 * (-a2 & 0x3F));
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = (unint64_t)((-a2 >> 3) & 3) << 60;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = (v3 << 58) & 0x3000000000000000;
      *(void *)(result + 64) = 0;
      *(void *)(result + 72) = (v3 << 56) & 0x3000000000000000;
    }
  }
  return result;
}

uint64_t sub_100400180(uint64_t a1)
{
  unsigned int v1 = (*(void *)(a1 + 72) >> 59) & 6 | ((*(void *)(a1 + 56) & 0x2000000000000000) != 0);
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1004001AC(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 72) & 0xCFFFFFFFFFFFFFFFLL;
  *(void *)(result + 56) &= ~0x2000000000000000uLL;
  *(void *)(result + 72) = v1;
  return result;
}

uint64_t sub_1004001C8(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    unint64_t v2 = *(void *)(result + 56) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 61);
    unint64_t v3 = *(void *)(result + 72) & 0xCFFFFFFFFFFFFFFFLL | ((((unint64_t)a2 >> 1) & 3) << 60);
    *(void *)(result + 40) &= 0xCFFFFFFFFFFFFFFFLL;
    *(void *)(result + 56) = v2;
    *(void *)(result + 72) = v3;
  }
  else
  {
    *(void *)__n128 result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)(result + 72) = 0x2000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for Credentials()
{
  return &type metadata for Credentials;
}

{
  return &type metadata for Credentials;
}

ValueMetadata *type metadata accessor for CredentialsRequestID()
{
  return &type metadata for CredentialsRequestID;
}

_OWORD *sub_100400248(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t sub_100400268(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for DataTransferReport()
{
  return &type metadata for DataTransferReport;
}

{
  return &type metadata for DataTransferReport;
}

IMAP2Persistence::DownloadPass_optional __swiftcall DownloadPass.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v6._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &off_1006EECC0;
  v6._object = object;
  Swift::Int v3 = sub_1005E3050(v2, v6);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = IMAP2Persistence_DownloadPass_second;
  }
  else {
    v4.value = IMAP2Persistence_DownloadPass_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static DownloadPass.allCases.getter()
{
  return &off_1006EED10;
}

uint64_t DownloadPass.rawValue.getter(char a1)
{
  if (a1) {
    return 6581810;
  }
  else {
    return 7631665;
  }
}

uint64_t sub_100400344(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100439A10(*a1, *a2);
}

unint64_t sub_100400354()
{
  unint64_t result = qword_100714810;
  if (!qword_100714810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714810);
  }
  return result;
}

Swift::Int sub_1004003A8()
{
  return sub_1005E3470();
}

uint64_t sub_100400410()
{
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10040045C()
{
  return sub_1005E3470();
}

uint64_t sub_1004004C0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  Swift::Int v3 = (void *)a1[1];
  v4._rawValue = &off_1006EECC0;
  v8._object = v3;
  Swift::Int v5 = sub_1005E3050(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_100400520(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7631665;
  if (*v1) {
    uint64_t v2 = 6581810;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

unint64_t sub_10040054C()
{
  unint64_t result = qword_100714818;
  if (!qword_100714818)
  {
    sub_10000744C(&qword_100714820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714818);
  }
  return result;
}

void sub_1004005A8(void *a1@<X8>)
{
  *a1 = &off_1006EED38;
}

unsigned char *storeEnumTagSinglePayload for DownloadPass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100400684);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadPass()
{
  return &type metadata for DownloadPass;
}

uint64_t DownloadRequest.mailbox.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DownloadRequest.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_100008D24(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t DownloadRequest.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000094D4(*(void *)(v2 + 24), *(void *)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t DownloadRequest.qos.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t DownloadRequest.init(id:mailbox:message:kind:qos:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_DWORD *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(_DWORD *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 48) = a7;
  return result;
}

uint64_t static DownloadRequest.Kind.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 && a2) {
    return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(a1, a2);
  }
  else {
    return (a1 | a2) == 0;
  }
}

BOOL sub_10040079C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 48);
  return _s16IMAP2Persistence15DownloadRequestV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v5, (uint64_t)v7);
}

uint64_t sub_1004007F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return (v2 | v3) == 0;
  }
  else {
    return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v2, v3);
  }
}

BOOL static DownloadRequest.QoS.__derived_enum_less_than(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

BOOL sub_100400834(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_100400848(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_10040085C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100400870(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t DownloadRequest.QoS.debugDescription.getter(char a1)
{
  return *(void *)&aB_0[8 * a1];
}

uint64_t sub_10040089C()
{
  return *(void *)&aB_0[8 * *v0];
}

uint64_t static DownloadRequest.QoS.current()()
{
  HIDWORD(v0) = qos_class_self() - 9;
  LODWORD(v0) = HIDWORD(v0);
  unint64_t v1 = 0x4020302010200uLL >> (8 * (v0 >> 2));
  if ((v0 >> 2) >= 7) {
    return 2;
  }
  else {
    return v1;
  }
}

IMAP2Persistence::DownloadRequest::QoS_optional __swiftcall DownloadRequest.QoS.init(_:)(qos_class_t a1)
{
  HIDWORD(v1) = a1 - 9;
  LODWORD(v1) = a1 - 9;
  unint64_t v2 = 0x4050302010500uLL >> (8 * (v1 >> 2));
  if ((v1 >> 2) >= 7) {
    return (IMAP2Persistence::DownloadRequest::QoS_optional)5;
  }
  else {
    return (IMAP2Persistence::DownloadRequest::QoS_optional)v2;
  }
}

uint64_t DownloadRequest.QoS.qosClass.getter(char a1)
{
  return *(unsigned int *)&asc_100623448[4 * a1];
}

Swift::String __swiftcall String.init(_:)(IMAP2Persistence::SyncRequest::ID a1)
{
  uint64_t v1 = sub_1005E3230();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t sub_10040097C()
{
  return sub_1005E3230();
}

BOOL _s16IMAP2Persistence15DownloadRequestV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && (*(unsigned int *)(a1 + 16) | ((unint64_t)*(unsigned int *)(a1 + 16) << 32)) == (*(unsigned int *)(a2 + 16) | ((unint64_t)*(unsigned int *)(a2 + 16) << 32))
    && sub_100357CFC(*(void *)(a1 + 8), *(void *)(a2 + 8)))
  {
    uint64_t v4 = *(void *)(a1 + 24);
    unint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a2 + 24);
    unint64_t v7 = *(void *)(a2 + 32);
    sub_100008D24(v4, v5);
    sub_100008D24(v6, v7);
    char v8 = sub_100439A14(v4, v5, v6, v7);
    sub_1000094D4(v6, v7);
    sub_1000094D4(v4, v5);
    if (v8)
    {
      sub_1004010F8((void *)(a1 + 40), &v12);
      sub_1004010F8((void *)(a2 + 40), &v11);
      sub_1004010F8(&v12, &v13);
      uint64_t v9 = v13;
      if (v13)
      {
        sub_1004010F8(&v11, &v14);
        if (v14 && (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v9, v14) & 1) != 0) {
          return *(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48);
        }
      }
      else
      {
        sub_1004010F8(&v11, &v14);
        if (!v14) {
          return *(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48);
        }
      }
    }
  }
  return 0;
}

unint64_t sub_100400B0C()
{
  unint64_t result = qword_100714828;
  if (!qword_100714828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714828);
  }
  return result;
}

unint64_t sub_100400B64()
{
  unint64_t result = qword_100714830;
  if (!qword_100714830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714830);
  }
  return result;
}

unint64_t sub_100400BBC()
{
  unint64_t result = qword_100714838;
  if (!qword_100714838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714838);
  }
  return result;
}

uint64_t destroy for DownloadRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1000094D4(*(void *)(a1 + 24), *(void *)(a1 + 32));
  return swift_bridgeObjectRelease();
}

{
  return sub_1005B1D70(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t initializeWithCopy for DownloadRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_100008D24(v4, v5);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DownloadRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  sub_100008D24(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  sub_1000094D4(v6, v7);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(unsigned char *)(a2 + 16);
  sub_1005B1F04(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1005B1D70(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for DownloadRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DownloadRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1000094D4(v4, v5);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  long long v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1005B1D70(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DownloadRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest()
{
  return &type metadata for DownloadRequest;
}

{
  return &type metadata for DownloadRequest;
}

void *initializeBufferWithCopyOfBuffer for DownloadRequest.Kind(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DownloadRequest.Kind(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DownloadRequest.Kind(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadRequest.Kind(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DownloadRequest.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.Kind()
{
  return &type metadata for DownloadRequest.Kind;
}

unsigned char *storeEnumTagSinglePayload for DownloadRequest.QoS(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004010B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadRequest.QoS()
{
  return &type metadata for DownloadRequest.QoS;
}

ValueMetadata *type metadata accessor for DownloadRequest.ID()
{
  return &type metadata for DownloadRequest.ID;
}

{
  return &type metadata for DownloadRequest.ID;
}

void *sub_1004010F8(void *a1, void *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t RemoteMailbox.specialUse.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t Environment.init(power:appState:isLocked:thermalState:availableFileSystemSpace:unreconciledMessageCount:)(unsigned __int8 a1, char a2, char a3)
{
  if (a3) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  return a1 | ((a2 & 1) << 8) | v3;
}

BOOL static Environment.__derived_struct_equals(_:_:)(int a1, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8)
{
  return sub_100401C24(a1 & 0x101FF, a2, a3, a4, a5 & 0x101FF, a6, a7, a8);
}

BOOL sub_100401150(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[1]) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | *a1;
  if (a1[2]) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  int v5 = v3 | v4;
  if (a2[1]) {
    int v6 = 256;
  }
  else {
    int v6 = 0;
  }
  int v7 = v6 | *a2;
  if (a2[2]) {
    int v8 = 0x10000;
  }
  else {
    int v8 = 0;
  }
  return sub_100401C24(v5, *((void *)a1 + 1), a1[16], *((void *)a1 + 3), v7 | v8, *((void *)a2 + 1), a2[16], *((void *)a2 + 3));
}

uint64_t Environment.AppState.description.getter(char a1)
{
  if (a1) {
    return 0x756F72676B636162;
  }
  else {
    return 0x656C6269736976;
  }
}

uint64_t sub_100401204()
{
  if (*v0) {
    return 0x756F72676B636162;
  }
  else {
    return 0x656C6269736976;
  }
}

IMAP2Persistence::Environment::Power __swiftcall Environment.Power.init(inLowPowerMode:isPluggedIn:batteryPercentage:)(Swift::Bool inLowPowerMode, Swift::Bool isPluggedIn, Swift::Float_optional *batteryPercentage)
{
  if (inLowPowerMode) {
    return 0;
  }
  unint64_t v4 = ((unint64_t)batteryPercentage >> 32) & 1;
  if (*(float *)&batteryPercentage >= 0.2) {
    LODWORD(v4) = 1;
  }
  if (isPluggedIn) {
    IMAP2Persistence::Environment::Power v5 = IMAP2Persistence_Environment_Power_pluggedIn;
  }
  else {
    IMAP2Persistence::Environment::Power v5 = IMAP2Persistence_Environment_Power_onBattery;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t Environment.Power.description.getter(char a1)
{
  if (!a1) {
    return 0x7265776F50776F6CLL;
  }
  if (a1 == 1) {
    return 0x7265747461426E6FLL;
  }
  return 0x4964656767756C70;
}

uint64_t sub_1004012EC()
{
  uint64_t v1 = 0x7265747461426E6FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x4964656767756C70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265776F50776F6CLL;
  }
}

IMAP2Persistence::Environment::AvailableFileSystemSpace __swiftcall Environment.AvailableFileSystemSpace.init(availableByteCount:bytesForOpportunisticUsage:)(Swift::Int availableByteCount, Swift::Int bytesForOpportunisticUsage)
{
  if (bytesForOpportunisticUsage <= 0x4650FFFFFLL && availableByteCount <= 1888485375) {
    char v3 = 1;
  }
  else {
    char v3 = 2;
  }
  if (bytesForOpportunisticUsage <= 0x9C3FFFFFFLL) {
    char v4 = v3;
  }
  else {
    char v4 = 3;
  }
  if (availableByteCount <= 0x270FFFFFFLL) {
    IMAP2Persistence::Environment::AvailableFileSystemSpace v5 = v4;
  }
  else {
    IMAP2Persistence::Environment::AvailableFileSystemSpace v5 = IMAP2Persistence_Environment_AvailableFileSystemSpace_abundant;
  }
  if (availableByteCount <= 105906175 && bytesForOpportunisticUsage < 1049624576) {
    return 0;
  }
  else {
    return v5;
  }
}

unint64_t Environment.AvailableFileSystemSpace.description.getter(char a1)
{
  unint64_t result = 7827308;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0x746E61646E756261;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100401450()
{
  unint64_t result = 7827308;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0x746E61646E756261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t Environment.description.getter(int a1, uint64_t a2, char a3)
{
  IMAP2Persistence::Environment::AvailableFileSystemSpace v5 = (void *)0xE700000000000000;
  uint64_t v6 = 0x6C616E696D6F6ELL;
  switch(a2)
  {
    case 0:
      break;
    case 1:
      IMAP2Persistence::Environment::AvailableFileSystemSpace v5 = (void *)0xE400000000000000;
      uint64_t v6 = 1919508838;
      break;
    case 2:
      uint64_t v6 = 0x73756F69726573;
      break;
    case 3:
      IMAP2Persistence::Environment::AvailableFileSystemSpace v5 = (void *)0xE800000000000000;
      uint64_t v6 = 0x6C61636974697263;
      break;
    default:
      uint64_t v6 = sub_1005E3230();
      IMAP2Persistence::Environment::AvailableFileSystemSpace v5 = v7;
      break;
  }
  sub_1005E2C80(52);
  v18._countAndFlagsBits = 0x203A7265776F70;
  v18._object = (void *)0xE700000000000000;
  sub_1005E1E30(v18);
  if ((_BYTE)a1)
  {
    if (a1 == 1) {
      v8._countAndFlagsBits = 0x7265747461426E6FLL;
    }
    else {
      v8._countAndFlagsBits = 0x4964656767756C70;
    }
    if (a1 == 1) {
      uint64_t v9 = (void *)0xE900000000000079;
    }
    else {
      uint64_t v9 = (void *)0xE90000000000006ELL;
    }
  }
  else
  {
    v8._countAndFlagsBits = 0x7265776F50776F6CLL;
    uint64_t v9 = (void *)0xE800000000000000;
  }
  v8._object = v9;
  sub_1005E1E30(v8);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 8236;
  v19._object = (void *)0xE200000000000000;
  sub_1005E1E30(v19);
  if ((a1 & 0x100) != 0) {
    v10._countAndFlagsBits = 0x756F72676B636162;
  }
  else {
    v10._countAndFlagsBits = 0x656C6269736976;
  }
  if ((a1 & 0x100) != 0) {
    uint64_t v11 = (void *)0xEC0000006465646ELL;
  }
  else {
    uint64_t v11 = (void *)0xE700000000000000;
  }
  v10._object = v11;
  sub_1005E1E30(v10);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  sub_1005E1E30(v20);
  if ((a1 & 0x10000) != 0) {
    v12._countAndFlagsBits = 0x64656B636F6CLL;
  }
  else {
    v12._countAndFlagsBits = 0x64656B636F6C6E75;
  }
  if ((a1 & 0x10000) != 0) {
    uint64_t v13 = (void *)0xE600000000000000;
  }
  else {
    uint64_t v13 = (void *)0xE800000000000000;
  }
  v12._object = v13;
  sub_1005E1E30(v12);
  swift_bridgeObjectRelease();
  v21._object = (void *)0x80000001005EA430;
  v21._countAndFlagsBits = 0xD000000000000011;
  sub_1005E1E30(v21);
  v22._countAndFlagsBits = v6;
  v22._object = v5;
  sub_1005E1E30(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0x73206B736964202CLL;
  v23._object = (void *)0xEE00203A65636170;
  sub_1005E1E30(v23);
  uint64_t v14 = (void *)0xE300000000000000;
  v15._countAndFlagsBits = 7827308;
  switch(a3)
  {
    case 1:
      v15._countAndFlagsBits = 0xD000000000000022;
      uint64_t v16 = "disableAutomaticAttachmentDownload";
      goto LABEL_29;
    case 2:
      v15._countAndFlagsBits = 0xD00000000000001DLL;
      uint64_t v16 = "downloadRecentAttachmentsOnly";
LABEL_29:
      uint64_t v14 = (void *)((unint64_t)(v16 - 32) | 0x8000000000000000);
      break;
    case 3:
      uint64_t v14 = (void *)0xE800000000000000;
      v15._countAndFlagsBits = 0x746E61646E756261;
      break;
    default:
      break;
  }
  v15._object = v14;
  sub_1005E1E30(v15);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10040183C()
{
  if (v0[1]) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  int v2 = v1 | *v0;
  if (v0[2]) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  return Environment.description.getter(v2 | v3, *((void *)v0 + 1), v0[16]);
}

__n128 Environment.capturedValue.getter@<Q0>(int a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  sub_100401C6C(a1, BYTE1(a1) & 1, BYTE2(a1) & 1, a2, a3, (uint64_t)v7);
  long long v5 = v7[3];
  *(_OWORD *)(a4 + 32) = v7[2];
  *(_OWORD *)(a4 + 48) = v5;
  *(void *)(a4 + 64) = v8;
  __n128 result = (__n128)v7[1];
  *(_OWORD *)a4 = v7[0];
  *(__n128 *)(a4 + 16) = result;
  return result;
}

unint64_t sub_1004018D4()
{
  unint64_t result = 0x7265776F70;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574617453707061;
      break;
    case 2:
      unint64_t result = 0x64656B636F4C7369;
      break;
    case 3:
      unint64_t result = 0x536C616D72656874;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100401988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004028B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1004019B0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1004019BC(uint64_t a1)
{
  unint64_t v2 = sub_100401EEC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004019F8(uint64_t a1)
{
  unint64_t v2 = sub_100401EEC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Environment.CapturedValue.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10000566C(&qword_100714840);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003BCDC(a1, a1[3]);
  sub_100401EEC();
  sub_1005E3500();
  v8[15] = 0;
  sub_1005E3190();
  if (!v1)
  {
    v8[14] = 1;
    sub_1005E3190();
    v8[13] = 2;
    sub_1005E31A0();
    v8[12] = 3;
    sub_1005E3190();
    v8[11] = 4;
    sub_1005E3190();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100401C0C(void *a1)
{
  return Environment.CapturedValue.encode(to:)(a1);
}

BOOL sub_100401C24(int a1, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8)
{
  unsigned int v8 = a5 ^ a1;
  if (a5 != a1) {
    return 0;
  }
  int v9 = (v8 >> 8) & 1;
  int v10 = HIWORD(v8) & 1;
  BOOL v13 = a2 == a6 && a3 == a7 && a4 == a8;
  BOOL v14 = (v10 & 1) == 0 && v13;
  return (v9 & 1) == 0 && v14;
}

uint64_t sub_100401C6C@<X0>(unsigned __int8 a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  int v11 = a1;
  if (a1)
  {
    if (a1 == 1) {
      v12._countAndFlagsBits = 0x7265747461426E6FLL;
    }
    else {
      v12._countAndFlagsBits = 0x4964656767756C70;
    }
    if (v11 == 1) {
      BOOL v13 = (void *)0xE900000000000079;
    }
    else {
      BOOL v13 = (void *)0xE90000000000006ELL;
    }
  }
  else
  {
    BOOL v13 = (void *)0xE800000000000000;
    v12._countAndFlagsBits = 0x7265776F50776F6CLL;
  }
  v12._object = v13;
  sub_1005E1E30(v12);
  swift_bridgeObjectRelease();
  BOOL v14 = (a2 & 1) == 0;
  if (a2) {
    v15._countAndFlagsBits = 0x756F72676B636162;
  }
  else {
    v15._countAndFlagsBits = 0x656C6269736976;
  }
  unint64_t v16 = 0xE700000000000000;
  if (v14) {
    unint64_t v17 = (void *)0xE700000000000000;
  }
  else {
    unint64_t v17 = (void *)0xEC0000006465646ELL;
  }
  v15._object = v17;
  sub_1005E1E30(v15);
  swift_bridgeObjectRelease();
  uint64_t result = 0x6C616E696D6F6ELL;
  switch(a4)
  {
    case 0:
      break;
    case 1:
      unint64_t v16 = 0xE400000000000000;
      uint64_t result = 1919508838;
      break;
    case 2:
      uint64_t result = 0x73756F69726573;
      break;
    case 3:
      unint64_t v16 = 0xE800000000000000;
      uint64_t result = 0x6C61636974697263;
      break;
    default:
      uint64_t result = sub_1005E3230();
      unint64_t v16 = v19;
      break;
  }
  unint64_t v20 = 0xE300000000000000;
  unint64_t v21 = 7827308;
  switch(a5)
  {
    case 1:
      unint64_t v21 = 0xD000000000000022;
      unint64_t v20 = 0x80000001005EA400;
      break;
    case 2:
      unint64_t v20 = 0x80000001005EA3E0;
      unint64_t v21 = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t v20 = 0xE800000000000000;
      unint64_t v21 = 0x746E61646E756261;
      break;
    default:
      break;
  }
  *(void *)a6 = 0;
  *(void *)(a6 + 8) = 0xE000000000000000;
  *(void *)(a6 + 16) = 0;
  *(void *)(a6 + 24) = 0xE000000000000000;
  *(unsigned char *)(a6 + 32) = a3 & 1;
  *(void *)(a6 + 40) = result;
  *(void *)(a6 + 48) = v16;
  *(void *)(a6 + 56) = v21;
  *(void *)(a6 + 64) = v20;
  return result;
}

unint64_t sub_100401EEC()
{
  unint64_t result = qword_100714848;
  if (!qword_100714848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714848);
  }
  return result;
}

unint64_t sub_100401F44()
{
  unint64_t result = qword_100714850;
  if (!qword_100714850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714850);
  }
  return result;
}

unint64_t sub_100401F9C()
{
  unint64_t result = qword_100714858;
  if (!qword_100714858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714858);
  }
  return result;
}

unint64_t sub_100401FF4()
{
  unint64_t result = qword_100714860;
  if (!qword_100714860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714860);
  }
  return result;
}

__n128 initializeWithCopy for Environment(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Environment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 1);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Environment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 1) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment()
{
  return &type metadata for Environment;
}

unsigned char *storeEnumTagSinglePayload for Environment.AppState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004021B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.AppState()
{
  return &type metadata for Environment.AppState;
}

unsigned char *storeEnumTagSinglePayload for Environment.Power(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004022BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.Power()
{
  return &type metadata for Environment.Power;
}

unsigned char *storeEnumTagSinglePayload for Environment.AvailableFileSystemSpace(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004023C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.AvailableFileSystemSpace()
{
  return &type metadata for Environment.AvailableFileSystemSpace;
}

uint64_t destroy for Environment.CapturedValue()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Environment.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Environment.CapturedValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for Environment.CapturedValue(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for Environment.CapturedValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Environment.CapturedValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Environment.CapturedValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.CapturedValue()
{
  return &type metadata for Environment.CapturedValue;
}

unsigned char *storeEnumTagSinglePayload for Environment.CapturedValue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100402774);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment.CapturedValue.CodingKeys()
{
  return &type metadata for Environment.CapturedValue.CodingKeys;
}

unint64_t sub_1004027B0()
{
  unint64_t result = qword_100714868;
  if (!qword_100714868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714868);
  }
  return result;
}

unint64_t sub_100402808()
{
  unint64_t result = qword_100714870;
  if (!qword_100714870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714870);
  }
  return result;
}

unint64_t sub_100402860()
{
  unint64_t result = qword_100714878;
  if (!qword_100714878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714878);
  }
  return result;
}

uint64_t sub_1004028B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265776F70 && a2 == 0xE500000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617453707061 && a2 == 0xE800000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656B636F4C7369 && a2 == 0xE800000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x536C616D72656874 && a2 == 0xEC00000065746174 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001005EA450)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100402AE4(unint64_t *a1, unint64_t *a2)
{
  return _s16IMAP2Persistence5EventO6UpdateO21__derived_enum_equalsySbAE_AEtFZ_0(*a1, *a2);
}

unint64_t FlagsChange.flags.getter(uint64_t a1, uint64_t a2)
{
  *((void *)&v2 + 1) = a2;
  *(void *)&long long v2 = a1;
  uint64_t v3 = (v2 >> 32) & 0x101010101;
  uint64_t v4 = 0x10000000000;
  if (!BYTE1(a2)) {
    uint64_t v4 = 0;
  }
  return (v3 | v4) & 0xFFFFFFFFFFFFLL | ((unint64_t)WORD1(a2) << 48);
}

int8x8_t FlagsChange.flags.setter(unint64_t a1, uint64_t a2, __int16 a3)
{
  *(void *)&long long v7 = a2;
  BYTE8(v7) = a3;
  uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(a1);
  *(unsigned char *)(v3 + 4) = a1 & 1;
  int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1005F66B0));
  *(int8x8_t *)v5.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v5), (int8x8_t)0x1000100010001);
  int8x8_t result = vmovn_s16(v5);
  *(_DWORD *)(v3 + 5) = result.i32[0];
  *(unsigned char *)(v3 + 9) = BYTE5(a1) & 1;
  *(unsigned char *)(v3 + 10) = BYTE6(a1);
  *(unsigned char *)(v3 + 11) = HIBYTE(a1);
  *(unsigned char *)(v3 + 12) = a2 & 1;
  *(void *)(v3 + 13) = *(void *)((char *)&v7 + 1);
  *(unsigned char *)(v3 + 21) = HIBYTE(a3);
  return result;
}

uint64_t FlagsChange.init(message:flags:changeIDs:)(unsigned int a1, uint64_t a2)
{
  return (a2 << 32) & 0x101010101010101 | a1;
}

Swift::Int static FlagsChange.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, Swift::Int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LODWORD(v16) = HIDWORD(a2);
  *(void *)((char *)&v16 + 4) = a3;
  uint64_t v9 = *(void *)((char *)&v16 + 1);
  LODWORD(v16) = HIDWORD(a6);
  *((void *)&v15 + 1) = a7;
  uint64_t v10 = *(void *)((char *)&v15 + 5);
  unint64_t v11 = a1 & 0x1010101FFFFFFFFLL;
  LOWORD(v15) = a2 & 0xFF01;
  BYTE2(v15) = BYTE2(a2);
  BYTE3(v15) = BYTE3(a2);
  BYTE4(v15) = BYTE4(a2);
  *(void *)((char *)&v15 + 5) = v9;
  BYTE13(v15) = BYTE5(a3);
  long long v12 = v15;
  unint64_t v13 = a5 & 0x1010101FFFFFFFFLL;
  LOWORD(v15) = a6 & 0xFF01;
  BYTE2(v15) = BYTE2(a6);
  BYTE3(v15) = BYTE3(a6);
  BYTE4(v15) = BYTE4(a6);
  *(void *)((char *)&v15 + 5) = v10;
  BYTE13(v15) = BYTE5(a7);
  return sub_100403164(v11, v12, *((unint64_t *)&v12 + 1), a4, v13, v15, *((unint64_t *)&v15 + 1), a8);
}

Swift::Int sub_100402CD0(unsigned int *a1, unsigned int *a2)
{
  uint64_t v3 = *a1;
  int v4 = *((unsigned __int8 *)a1 + 5);
  int v5 = *((unsigned __int8 *)a1 + 6);
  int v6 = *((unsigned __int8 *)a1 + 7);
  char v7 = *((unsigned char *)a1 + 8);
  char v8 = *((unsigned char *)a1 + 9);
  __int16 v9 = *((_WORD *)a1 + 5);
  char v10 = *((unsigned char *)a1 + 12);
  uint64_t v11 = *(void *)((char *)a1 + 13);
  char v12 = *((unsigned char *)a1 + 21);
  Swift::Int v13 = *((void *)a1 + 3);
  uint64_t v14 = *a2;
  int v15 = *((unsigned __int8 *)a2 + 4);
  int v16 = *((unsigned __int8 *)a2 + 5);
  int v17 = *((unsigned __int8 *)a2 + 6);
  int v18 = *((unsigned __int8 *)a2 + 7);
  char v19 = *((unsigned char *)a2 + 8);
  char v20 = *((unsigned char *)a2 + 9);
  __int16 v21 = *((_WORD *)a2 + 5);
  char v22 = *((unsigned char *)a2 + 12);
  uint64_t v23 = *(void *)((char *)a2 + 13);
  char v24 = *((unsigned char *)a2 + 21);
  uint64_t v25 = *((void *)a2 + 3);
  if (*((unsigned char *)a1 + 4)) {
    unint64_t v26 = &_mh_execute_header;
  }
  else {
    unint64_t v26 = 0;
  }
  unint64_t v27 = (unint64_t)v26 | v3;
  if (v4) {
    uint64_t v28 = 0x10000000000;
  }
  else {
    uint64_t v28 = 0;
  }
  if (v5) {
    uint64_t v29 = 0x1000000000000;
  }
  else {
    uint64_t v29 = 0;
  }
  uint64_t v30 = v27 | v28 | v29;
  if (v6) {
    uint64_t v31 = 0x100000000000000;
  }
  else {
    uint64_t v31 = 0;
  }
  unint64_t v32 = v30 | v31;
  LOBYTE(v41) = v7;
  BYTE1(v41) = v8;
  WORD1(v41) = v9;
  BYTE4(v41) = v10;
  *(void *)((char *)&v41 + 5) = v11;
  BYTE13(v41) = v12;
  long long v33 = v41;
  if (v15) {
    int8x16_t v34 = &_mh_execute_header;
  }
  else {
    int8x16_t v34 = 0;
  }
  unint64_t v35 = (unint64_t)v34 | v14;
  if (v16) {
    uint64_t v36 = 0x10000000000;
  }
  else {
    uint64_t v36 = 0;
  }
  if (v17) {
    uint64_t v37 = 0x1000000000000;
  }
  else {
    uint64_t v37 = 0;
  }
  uint64_t v38 = v35 | v36 | v37;
  if (v18) {
    uint64_t v39 = 0x100000000000000;
  }
  else {
    uint64_t v39 = 0;
  }
  LOBYTE(v41) = v19;
  BYTE1(v41) = v20;
  WORD1(v41) = v21;
  BYTE4(v41) = v22;
  *(void *)((char *)&v41 + 5) = v23;
  BYTE13(v41) = v24;
  return sub_100403164(v32, v33, *((unint64_t *)&v33 + 1), v13, v38 | v39, v41, *((unint64_t *)&v41 + 1), v25);
}

uint64_t MailboxToRename.newName.getter()
{
  return swift_bridgeObjectRetain();
}

void MailboxToRename.hash(into:)(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5)
{
}

Swift::Int MailboxToRename.hashValue.getter(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  return sub_1005E3470();
}

Swift::Int sub_100402EDC()
{
  uint64_t v1 = *(unsigned int *)(v0 + 8);
  uint64_t v2 = *(unsigned int *)(v0 + 24);
  sub_1005E33F0();
  sub_1005E3410(v1 | (v1 << 32));
  sub_1005E3410(v2 | (v2 << 32));
  return sub_1005E3470();
}

void sub_100402F3C()
{
  uint64_t v1 = *(unsigned int *)(v0 + 24);
  sub_1005E3410(*(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned int *)(v0 + 8) << 32));
  sub_1005E3410(v1 | (v1 << 32));
}

Swift::Int sub_100402F80()
{
  uint64_t v1 = *(unsigned int *)(v0 + 8);
  uint64_t v2 = *(unsigned int *)(v0 + 24);
  sub_1005E33F0();
  sub_1005E3410(v1 | (v1 << 32));
  sub_1005E3410(v2 | (v2 << 32));
  return sub_1005E3470();
}

BOOL sub_100402FDC(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence15MailboxToRenameV23__derived_struct_equalsySbAC_ACtFZ_0(*(void *)a1, *(_DWORD *)(a1 + 8), *(void *)(a1 + 16), *(_DWORD *)(a1 + 24), *(void *)a2, *(_DWORD *)(a2 + 8), *(void *)(a2 + 16), *(_DWORD *)(a2 + 24));
}

uint64_t sub_100403008(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x100403144);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_100008D24(a3, a4);
              char v15 = sub_10043A794(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

Swift::Int sub_100403164(unint64_t a1, uint64_t a2, unint64_t a3, Swift::Int a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  LODWORD(v12) = HIDWORD(a2);
  *(void *)((char *)&v12 + 4) = a3;
  uint64_t v8 = *(void *)((char *)&v12 + 1);
  *(_DWORD *)uint64_t v13 = HIDWORD(a6);
  *(void *)&v13[4] = a7;
  if (a5 != a1
    || (BYTE4(a1) & 1) != (BYTE4(a5) & 1)
    || ((a1 >> 40) & 1) != ((a5 >> 40) & 1)
    || (HIWORD(a1) & 1) != (HIWORD(a5) & 1)
    || (HIBYTE(a1) & 1) != (HIBYTE(a5) & 1)
    || ((a2 ^ a6) & 1) != 0
    || ((BYTE1(a2) ^ BYTE1(a6)) & 1) != 0
    || BYTE2(a2) != BYTE2(a6)
    || BYTE3(a2) != BYTE3(a6)
    || ((BYTE4(a2) ^ BYTE4(a6)) & 1) != 0)
  {
    return 0;
  }
  if (v8 == 2)
  {
    if (BYTE5(a6) != 2) {
      return 0;
    }
  }
  else if (BYTE5(a6) == 2 {
         || (sub_10040B48C(v8 & 0xFFFF010101010101, (a3 >> 40) & 1, *(void *)&v13[1] & 0xFFFF010101010101, (a7 >> 40) & 1) & 1) == 0)
  }
  {
    return 0;
  }
  return sub_100013570(a4, a8);
}

BOOL _s16IMAP2Persistence15MailboxToRenameV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  if (a2 != a6) {
    return 0;
  }
  return sub_100357CFC(a1, a5) && a4 == a8 && sub_100357CFC(a3, a7);
}

uint64_t _s16IMAP2Persistence5EventO6UpdateO21__derived_enum_equalsySbAE_AEtFZ_0(unint64_t a1, unint64_t a2)
{
  unint64_t v229 = a2;
  uint64_t v3 = sub_1005E0970();
  uint64_t v224 = *(void *)(v3 - 8);
  uint64_t v225 = v3;
  __chkstk_darwin();
  v220 = (char *)&v196 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_10000566C(&qword_100714888);
  __chkstk_darwin();
  uint64_t v223 = (uint64_t)&v196 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100714528);
  __chkstk_darwin();
  uint64_t v221 = (uint64_t)&v196 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v227 = (char *)&v196 - v7;
  __chkstk_darwin();
  v228 = (char *)&v196 - v8;
  sub_10000566C(&qword_1007144E0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v196 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v226 = (uint64_t)&v196 - v11;
  sub_10000566C(&qword_1007144D8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v196 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v15 = (char *)&v196 - v14;
  __chkstk_darwin();
  int v17 = (char *)&v196 - v16;
  __chkstk_darwin();
  char v19 = (char *)&v196 - v18;
  __chkstk_darwin();
  __int16 v21 = (char *)&v196 - v20;
  __chkstk_darwin();
  uint64_t v23 = (char *)&v196 - v22;
  __chkstk_darwin();
  uint64_t v25 = (char *)&v196 - v24;
  __chkstk_darwin();
  unint64_t v27 = (char *)&v196 - v26;
  switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    case 1uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 1
        || *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10) != *(_DWORD *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10))
      {
        goto LABEL_165;
      }
      uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v42 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      return sub_100412BFC(v41, v42);
    case 2uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 2
        || *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10) != *(_DWORD *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10)
        || *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(unsigned __int8 *)((v229 & 0xFFFFFFFFFFFFFFBLL)
                                                                                         + 0x18))
      {
        goto LABEL_165;
      }
      Swift::Int v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v45 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v46 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v47 = *(unsigned __int8 *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (v44)
      {
        if (v46 && (sub_100440580(v44, v46) & 1) != 0 && ((v45 ^ v47) & 1) == 0) {
          goto LABEL_155;
        }
      }
      else if (!v46 && v45 == v47)
      {
        goto LABEL_155;
      }
      goto LABEL_165;
    case 3uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 3) {
        goto LABEL_165;
      }
      char v38 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10) == *(_DWORD *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return v38 & 1;
    case 4uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 4) {
        goto LABEL_165;
      }
      uint64_t v48 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v49 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return sub_100412D04(v48, v49);
    case 5uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 5) {
        goto LABEL_165;
      }
      unint64_t v50 = *(void **)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      uint64_t v51 = *(void **)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      if ((sub_100440580(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10)) & 1) == 0|| (sub_100415968(v50, v51) & 1) == 0)
      {
        goto LABEL_165;
      }
      goto LABEL_155;
    case 6uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 6
        || *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18)
        || !_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))
      {
        goto LABEL_165;
      }
      goto LABEL_155;
    case 7uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 7) {
        goto LABEL_165;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18)) {
        goto LABEL_165;
      }
      int v52 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v53 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x24);
      int v54 = *(_DWORD *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      int v55 = *(_DWORD *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x24);
      if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))goto LABEL_165; {
      char v38 = v54 == v52 && v55 == v53;
      }
      return v38 & 1;
    case 8uLL:
      uint64_t v57 = sub_10000566C(&qword_1007148C0);
      unint64_t v58 = (uint64_t *)swift_projectBox();
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 8) {
        goto LABEL_165;
      }
      uint64_t v59 = *(int *)(v57 + 64);
      v228 = *(char **)((char *)v58 + v59);
      uint64_t v60 = *v58;
      uint64_t v61 = v58[1];
      uint64_t v62 = *(int *)(v57 + 48);
      uint64_t v63 = (uint64_t)v58 + v62;
      int8x16_t v64 = (uint64_t *)swift_projectBox();
      uint64_t v65 = *v64;
      uint64_t v66 = v64[1];
      uint64_t v67 = (uint64_t)v64 + v62;
      unint64_t v68 = *(char **)((char *)v64 + v59);
      sub_1000079E4(v63, (uint64_t)v27, &qword_1007144D8);
      sub_1000079E4(v67, (uint64_t)v25, &qword_1007144D8);
      if (v61 == v66 && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v60, v65))
      {
        sub_100405034();
        char v69 = sub_1005E35A0();
        sub_100007A48((uint64_t)v25, &qword_1007144D8);
        sub_100007A48((uint64_t)v27, &qword_1007144D8);
        char v38 = v69 & (v228 == v68);
        return v38 & 1;
      }
      sub_100007A48((uint64_t)v25, &qword_1007144D8);
      uint64_t v185 = (uint64_t)v27;
      goto LABEL_159;
    case 9uLL:
      uint64_t v70 = (uint64_t *)swift_projectBox();
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 9) {
        goto LABEL_165;
      }
      unint64_t v71 = v70;
      uint64_t v72 = v70[1];
      v228 = (char *)*v70;
      uint64_t v73 = sub_10000566C(&qword_1007148B8);
      uint64_t v74 = *(int *)(v73 + 48);
      uint64_t v75 = (uint64_t)v71 + v74;
      uint64_t v76 = *(int *)(v73 + 64);
      uint64_t v77 = (uint64_t)v71 + v76;
      v78 = (unint64_t *)swift_projectBox();
      unint64_t v79 = v78[1];
      unint64_t v229 = *v78;
      uint64_t v80 = (uint64_t)v78 + v74;
      uint64_t v81 = (uint64_t)v78 + v76;
      sub_1000079E4(v75, (uint64_t)v23, &qword_1007144D8);
      uint64_t v82 = v77;
      uint64_t v83 = v226;
      sub_1000079E4(v82, v226, &qword_1007144E0);
      sub_1000079E4(v80, (uint64_t)v21, &qword_1007144D8);
      sub_1000079E4(v81, (uint64_t)v10, &qword_1007144E0);
      if (v72 == v79 && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0((uint64_t)v228, v229))
      {
        sub_100405034();
        if (sub_1005E35A0())
        {
          char v38 = sub_1005E35A0();
          sub_100007A48((uint64_t)v10, &qword_1007144E0);
          sub_100007A48((uint64_t)v21, &qword_1007144D8);
          sub_100007A48(v83, &qword_1007144E0);
          sub_100007A48((uint64_t)v23, &qword_1007144D8);
          return v38 & 1;
        }
      }
      sub_100007A48((uint64_t)v10, &qword_1007144E0);
      sub_100007A48((uint64_t)v21, &qword_1007144D8);
      sub_100007A48(v83, &qword_1007144E0);
      uint64_t v185 = (uint64_t)v23;
LABEL_159:
      v187 = &qword_1007144D8;
      goto LABEL_164;
    case 0xAuLL:
      uint64_t v84 = sub_10000566C(&qword_1007148B0);
      v85 = (uint64_t *)swift_projectBox();
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0xA) {
        goto LABEL_165;
      }
      uint64_t v86 = *(int *)(v84 + 64);
      v228 = *(char **)((char *)v85 + v86);
      uint64_t v87 = *v85;
      uint64_t v88 = v85[1];
      uint64_t v89 = *(int *)(v84 + 48);
      uint64_t v90 = (uint64_t)v85 + v89;
      v91 = (uint64_t *)swift_projectBox();
      uint64_t v92 = *v91;
      uint64_t v93 = v91[1];
      uint64_t v94 = (uint64_t)v91 + v89;
      v95 = *(char **)((char *)v91 + v86);
      sub_1000079E4(v90, (uint64_t)v19, &qword_1007144D8);
      sub_1000079E4(v94, (uint64_t)v17, &qword_1007144D8);
      if (v88 == v93 && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v87, v92))
      {
        sub_100405034();
        char v96 = sub_1005E35A0();
        sub_100007A48((uint64_t)v17, &qword_1007144D8);
        sub_100007A48((uint64_t)v19, &qword_1007144D8);
        char v38 = v96 & (v228 == v95);
        return v38 & 1;
      }
      v186 = &qword_1007144D8;
      sub_100007A48((uint64_t)v17, &qword_1007144D8);
      uint64_t v185 = (uint64_t)v19;
      goto LABEL_163;
    case 0xBuLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0xB) {
        goto LABEL_165;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18)) {
        goto LABEL_165;
      }
      int v97 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v98 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      int v99 = *(unsigned __int8 *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v100 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))goto LABEL_165; {
      if (v97)
      }
        uint64_t v101 = 6581810;
      else {
        uint64_t v101 = 7631665;
      }
      if (v99) {
        uint64_t v102 = 6581810;
      }
      else {
        uint64_t v102 = 7631665;
      }
      if (v101 == v102)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v188 = sub_1005E3290();
        swift_bridgeObjectRelease_n();
        char v38 = 0;
        if ((v188 & 1) == 0) {
          return v38 & 1;
        }
      }
      return sub_100413060(v98, v100);
    case 0xCuLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0xC) {
        goto LABEL_165;
      }
      uint64_t v103 = a1 & 0xFFFFFFFFFFFFFFBLL;
      if ((*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)) != (*(unsigned int *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
        goto LABEL_165;
      }
      uint64_t v104 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      int v105 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x1C);
      int v106 = *(_DWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      v107 = *(void **)(v103 + 40);
      char v108 = *(unsigned char *)(v103 + 48);
      int v109 = *(unsigned __int8 *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x1C);
      int v110 = *(_DWORD *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      v111 = *(void **)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      char v112 = *(unsigned char *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
      if (!sub_100357CFC(v104, *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10))) {
        goto LABEL_165;
      }
      if (v105) {
        uint64_t v113 = 6581810;
      }
      else {
        uint64_t v113 = 7631665;
      }
      if (v109) {
        uint64_t v114 = 6581810;
      }
      else {
        uint64_t v114 = 7631665;
      }
      if (v113 == v114)
      {
        swift_bridgeObjectRelease_n();
        if (v110 != v106) {
          goto LABEL_165;
        }
      }
      else
      {
        char v189 = sub_1005E3290();
        swift_bridgeObjectRelease_n();
        char v38 = 0;
        if ((v189 & 1) == 0 || v110 != v106) {
          return v38 & 1;
        }
      }
      if ((sub_100413120(v107, v111) & 1) == 0) {
        goto LABEL_165;
      }
      char v38 = v108 ^ v112 ^ 1;
      return v38 & 1;
    case 0xDuLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0xD) {
        goto LABEL_165;
      }
      if ((*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)) != (*(unsigned int *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
        goto LABEL_165;
      }
      uint64_t v115 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v116 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v117 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v118 = *(unsigned char *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (!sub_100357CFC(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10))|| (sub_100413220(v115, v117) & 1) == 0)
      {
        goto LABEL_165;
      }
      goto LABEL_138;
    case 0xEuLL:
      uint64_t v119 = sub_10000566C(&qword_1007148A0);
      uint64_t v120 = swift_projectBox();
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0xE) {
        goto LABEL_165;
      }
      uint64_t v121 = *(void *)v120;
      unint64_t v122 = *(void *)(v120 + 24);
      uint64_t v215 = *(void *)(v120 + 16);
      uint64_t v205 = *(unsigned __int8 *)(v120 + 32);
      int v199 = *(unsigned __int8 *)(v120 + 33);
      int v204 = *(unsigned __int8 *)(v120 + 34);
      int v206 = *(unsigned __int8 *)(v120 + 35);
      int v123 = *(unsigned __int8 *)(v120 + 37);
      int v210 = *(unsigned __int8 *)(v120 + 36);
      int v211 = v123;
      uint64_t v213 = *(unsigned __int8 *)(v120 + 38);
      uint64_t v212 = *(unsigned __int8 *)(v120 + 39);
      int v214 = *(unsigned __int8 *)(v120 + 40);
      uint64_t v124 = *(int *)(v119 + 96);
      unint64_t v125 = *(void *)(v120 + v124 + 8);
      uint64_t v218 = *(void *)(v120 + v124);
      unint64_t v219 = v125;
      uint64_t v126 = *(int *)(v119 + 80);
      uint64_t v127 = v120 + v126;
      uint64_t v128 = *(unsigned int *)(v120 + 8);
      uint64_t v129 = swift_projectBox();
      uint64_t v130 = *(void *)v129;
      uint64_t v131 = *(unsigned int *)(v129 + 8);
      unint64_t v132 = *(void *)(v129 + 24);
      uint64_t v216 = *(void *)(v129 + 16);
      unint64_t v217 = v132;
      uint64_t v201 = *(unsigned __int8 *)(v129 + 32);
      int v133 = *(unsigned __int8 *)(v129 + 33);
      int v134 = *(unsigned __int8 *)(v129 + 34);
      int v200 = *(unsigned __int8 *)(v129 + 35);
      int v202 = *(unsigned __int8 *)(v129 + 36);
      int v203 = *(unsigned __int8 *)(v129 + 37);
      uint64_t v208 = *(unsigned __int8 *)(v129 + 38);
      uint64_t v207 = *(unsigned __int8 *)(v129 + 39);
      int v209 = *(unsigned __int8 *)(v129 + 40);
      uint64_t v135 = v129 + v126;
      unint64_t v136 = *(void *)(v129 + v124 + 8);
      uint64_t v226 = *(void *)(v129 + v124);
      unint64_t v229 = v136;
      uint64_t v137 = v127;
      char v15 = v228;
      sub_1000079E4(v137, (uint64_t)v228, &qword_100714528);
      uint64_t v138 = v135;
      uint64_t v13 = v227;
      sub_1000079E4(v138, (uint64_t)v227, &qword_100714528);
      if ((v128 | (v128 << 32)) != (v131 | (v131 << 32)) || !sub_100357CFC(v121, v130))
      {
        v186 = &qword_100714528;
        goto LABEL_162;
      }
      int v198 = v134;
      uint64_t v139 = v215;
      sub_100008D24(v215, v122);
      uint64_t v140 = v218;
      unint64_t v141 = v219;
      sub_100008D24(v218, v219);
      uint64_t v142 = v216;
      unint64_t v143 = v217;
      sub_100008D24(v216, v217);
      uint64_t v144 = v226;
      unint64_t v145 = v229;
      sub_100008D24(v226, v229);
      if ((sub_100439A14(v139, v122, v142, v143) & 1) == 0)
      {
        sub_1000094D4(v144, v145);
        sub_1000094D4(v142, v143);
        sub_1000094D4(v140, v141);
        uint64_t v190 = v139;
        unint64_t v191 = v122;
LABEL_180:
        sub_1000094D4(v190, v191);
        v186 = &qword_100714528;
        sub_100007A48((uint64_t)v13, &qword_100714528);
        uint64_t v185 = (uint64_t)v228;
        goto LABEL_163;
      }
      uint64_t v146 = v140;
      unint64_t v147 = v141;
      uint64_t v148 = v139;
      unint64_t v197 = v122;
      uint64_t v149 = 256;
      if (v199) {
        uint64_t v150 = 256;
      }
      else {
        uint64_t v150 = 0;
      }
      uint64_t v151 = v150 | v205;
      if (v204) {
        uint64_t v152 = 0x10000;
      }
      else {
        uint64_t v152 = 0;
      }
      if (v206) {
        uint64_t v153 = 0x1000000;
      }
      else {
        uint64_t v153 = 0;
      }
      uint64_t v154 = v151 | v152 | v153;
      if (v210) {
        v155 = &_mh_execute_header;
      }
      else {
        v155 = 0;
      }
      if (v211) {
        uint64_t v156 = 0x10000000000;
      }
      else {
        uint64_t v156 = 0;
      }
      unint64_t v157 = v154 | (unint64_t)v155 | v156 | (v213 << 48) | (v212 << 56);
      if (!v133) {
        uint64_t v149 = 0;
      }
      uint64_t v158 = v149 | v201;
      if (v198) {
        uint64_t v159 = 0x10000;
      }
      else {
        uint64_t v159 = 0;
      }
      if (v200) {
        uint64_t v160 = 0x1000000;
      }
      else {
        uint64_t v160 = 0;
      }
      uint64_t v161 = v158 | v159 | v160;
      if (v202) {
        v162 = &_mh_execute_header;
      }
      else {
        v162 = 0;
      }
      if (v203) {
        uint64_t v163 = 0x10000000000;
      }
      else {
        uint64_t v163 = 0;
      }
      if ((sub_10040B48C(v157, v214, v161 | (unint64_t)v162 | v163 | (v208 << 48) | (v207 << 56), v209) & 1) == 0)
      {
        sub_1000094D4(v226, v229);
        sub_1000094D4(v142, v143);
        sub_1000094D4(v146, v147);
        uint64_t v190 = v139;
        unint64_t v191 = v197;
        goto LABEL_180;
      }
      uint64_t v164 = v223;
      uint64_t v165 = v223 + *(int *)(v222 + 48);
      uint64_t v166 = (uint64_t)v228;
      sub_1000079E4((uint64_t)v228, v223, &qword_100714528);
      sub_1000079E4((uint64_t)v13, v165, &qword_100714528);
      uint64_t v168 = v224;
      uint64_t v167 = v225;
      v169 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48);
      if (v169(v164, 1, v225) == 1)
      {
        if (v169(v165, 1, v167) == 1)
        {
          sub_100007A48(v164, &qword_100714528);
          uint64_t v171 = v218;
          unint64_t v170 = v219;
          unint64_t v172 = v217;
          unint64_t v173 = v229;
          uint64_t v174 = v226;
          goto LABEL_185;
        }
        goto LABEL_183;
      }
      uint64_t v192 = v221;
      sub_1000079E4(v164, v221, &qword_100714528);
      if (v169(v165, 1, v167) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v192, v167);
        uint64_t v148 = v215;
LABEL_183:
        sub_100007A48(v164, &qword_100714888);
        uint64_t v171 = v218;
        unint64_t v170 = v219;
        unint64_t v172 = v217;
        unint64_t v173 = v229;
        uint64_t v174 = v226;
        goto LABEL_186;
      }
      v193 = v220;
      (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v220, v165, v167);
      sub_100405088();
      char v194 = sub_1005E1BC0();
      v195 = *(void (**)(char *, uint64_t))(v168 + 8);
      v195(v193, v167);
      v195((char *)v192, v167);
      sub_100007A48(v164, &qword_100714528);
      uint64_t v148 = v215;
      uint64_t v171 = v218;
      unint64_t v170 = v219;
      unint64_t v172 = v217;
      unint64_t v173 = v229;
      uint64_t v174 = v226;
      if (v194)
      {
LABEL_185:
        char v38 = sub_100403008(v171, v170, v174, v173);
        sub_1000094D4(v174, v173);
        sub_1000094D4(v216, v172);
        sub_1000094D4(v171, v170);
        sub_1000094D4(v148, v197);
        uint64_t v39 = &qword_100714528;
        sub_100007A48((uint64_t)v13, &qword_100714528);
        uint64_t v40 = v166;
LABEL_14:
        sub_100007A48(v40, v39);
        return v38 & 1;
      }
LABEL_186:
      sub_1000094D4(v174, v173);
      sub_1000094D4(v216, v172);
      sub_1000094D4(v171, v170);
      sub_1000094D4(v148, v197);
      v186 = &qword_100714528;
      sub_100007A48((uint64_t)v13, &qword_100714528);
      uint64_t v185 = v166;
LABEL_163:
      v187 = v186;
LABEL_164:
      sub_100007A48(v185, v187);
LABEL_165:
      char v38 = 0;
      return v38 & 1;
    case 0xFuLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0xF) {
        goto LABEL_165;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) != *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18)) {
        goto LABEL_165;
      }
      uint64_t v175 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v116 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v176 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v118 = *(unsigned char *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10))|| (sub_100413C54(v175, v176) & 1) == 0)
      {
        goto LABEL_165;
      }
      goto LABEL_138;
    case 0x10uLL:
      uint64_t v28 = (uint64_t *)swift_projectBox();
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0x10) {
        goto LABEL_165;
      }
      uint64_t v29 = v28;
      uint64_t v30 = *v28;
      uint64_t v31 = v28[1];
      uint64_t v32 = *(int *)(sub_10000566C(&qword_100714890) + 48);
      uint64_t v33 = (uint64_t)v29 + v32;
      int8x16_t v34 = (uint64_t *)swift_projectBox();
      uint64_t v35 = *v34;
      uint64_t v36 = v34[1];
      uint64_t v37 = (uint64_t)v34 + v32;
      sub_1000079E4(v33, (uint64_t)v15, &qword_1007144D8);
      sub_1000079E4(v37, (uint64_t)v13, &qword_1007144D8);
      if (v31 == v36 && _s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v30, v35))
      {
        sub_100405034();
        char v38 = sub_1005E35A0();
        uint64_t v39 = &qword_1007144D8;
        sub_100007A48((uint64_t)v13, &qword_1007144D8);
        uint64_t v40 = (uint64_t)v15;
        goto LABEL_14;
      }
      v186 = &qword_1007144D8;
LABEL_162:
      sub_100007A48((uint64_t)v13, v186);
      uint64_t v185 = (uint64_t)v15;
      goto LABEL_163;
    case 0x11uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0x11) {
        goto LABEL_165;
      }
      if ((*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)) != (*(unsigned int *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
        goto LABEL_165;
      }
      uint64_t v177 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v116 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      uint64_t v178 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      char v118 = *(unsigned char *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
      if (!sub_100357CFC(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10))|| (sub_100413E4C(v177, v178) & 1) == 0)
      {
        goto LABEL_165;
      }
LABEL_138:
      char v38 = v116 ^ v118 ^ 1;
      return v38 & 1;
    case 0x12uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0x12) {
        goto LABEL_165;
      }
      uint64_t v179 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v180 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return sub_100414A3C(v179, v180);
    case 0x13uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0x13) {
        goto LABEL_165;
      }
      uint64_t v181 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v182 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return sub_100414BDC(v181, v182);
    case 0x14uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) != 0x14) {
        goto LABEL_165;
      }
      if ((*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32)) != (*(unsigned int *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18) | ((unint64_t)*(unsigned int *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x18) << 32))) {
        goto LABEL_165;
      }
      uint64_t v183 = *(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      uint64_t v184 = *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      if (!sub_100357CFC(*(void *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10), *(void *)((v229 & 0xFFFFFFFFFFFFFFBLL) + 0x10)))goto LABEL_165; {
      return sub_100435BE0(v183, v184);
      }
    case 0x15uLL:
      if (((v229 >> 59) & 0x1E | (v229 >> 2) & 1) == 0x15 && v229 == 0xA000000000000004) {
        goto LABEL_155;
      }
      goto LABEL_165;
    default:
      if ((v229 >> 59) & 0x1E | (v229 >> 2) & 1
        || *(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(v229 + 16)
        || ((*(unsigned __int8 *)(a1 + 17) ^ *(unsigned __int8 *)(v229 + 17)) & 1) != 0
        || ((*(unsigned __int8 *)(a1 + 18) ^ *(unsigned __int8 *)(v229 + 18)) & 1) != 0
        || *(void *)(a1 + 24) != *(void *)(v229 + 24)
        || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(v229 + 32)
        || *(void *)(a1 + 40) != *(void *)(v229 + 40))
      {
        goto LABEL_165;
      }
LABEL_155:
      char v38 = 1;
      return v38 & 1;
  }
}

unint64_t sub_10040499C()
{
  unint64_t result = qword_100714880;
  if (!qword_100714880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714880);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000575F0(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for Event(uint64_t a1)
{
  return sub_100057604(*(void *)a1, *(unsigned char *)(a1 + 8));
}

{
  uint64_t vars8;

  sub_100484A20(*(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for Event(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000575F0(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100057604(v5, v6);
  return a1;
}

{
  unint64_t v4;
  unint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  char v4 = *(void *)(a2 + 8);
  sub_1004849C8(v4);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  sub_100484A20(v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for WindowOfInterestSize(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for Event(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100057604(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Event()
{
  return &type metadata for Event;
}

{
  return &type metadata for Event;
}

void *initializeBufferWithCopyOfBuffer for Event.Update(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for Event.Update()
{
  return swift_release();
}

void *assignWithCopy for Event.Update(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for Event.Update(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Event.Update(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x6B && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 107);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x6A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Event.Update(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x6A)
  {
    *(void *)unint64_t result = a2 - 107;
    if (a3 >= 0x6B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x6B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_100404C7C(void *a1)
{
  unsigned int v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x14) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 21;
  }
}

unint64_t *sub_100404CA0(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x15) {
    *unint64_t result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  }
  else {
    *unint64_t result = (8 * (a2 - 21)) | 0xA000000000000004;
  }
  return result;
}

ValueMetadata *type metadata accessor for Event.Update()
{
  return &type metadata for Event.Update;
}

uint64_t initializeWithCopy for FlagsChange(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FlagsChange(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v3 = *(void *)(a2 + 13);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(void *)(a1 + 13) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FlagsChange(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FlagsChange()
{
  return &type metadata for FlagsChange;
}

uint64_t initializeWithCopy for MailboxToRename(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailboxToRename(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for MailboxToRename(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MailboxToRename(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxToRename(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 28)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxToRename(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 28) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxToRename()
{
  return &type metadata for MailboxToRename;
}

unint64_t sub_100405034()
{
  unint64_t result = qword_100714898;
  if (!qword_100714898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714898);
  }
  return result;
}

unint64_t sub_100405088()
{
  unint64_t result = qword_1007148A8;
  if (!qword_1007148A8)
  {
    sub_1005E0970();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007148A8);
  }
  return result;
}

BOOL sub_1004050E8(_DWORD *a1, _DWORD *a2)
{
  return *a2 == *a1 && a2[1] == a1[1];
}

ValueMetadata *type metadata accessor for FetchedWindow()
{
  return &type metadata for FetchedWindow;
}

uint64_t static Flags.__derived_struct_equals(_:_:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return sub_10040B48C(a1 & 0xFFFF010101010101, a2, a3 & 0xFFFF010101010101, a4);
}

uint64_t static FlagsWithModifications.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  *(void *)&long long v11 = a2;
  WORD4(v11) = a3;
  uint64_t v6 = *(void *)((char *)&v11 + 1);
  *(void *)&long long v11 = a5;
  BYTE8(v11) = a6;
  uint64_t v7 = *(void *)((char *)&v11 + 1);
  LOBYTE(v11) = a2 & 1;
  *(void *)((char *)&v11 + 1) = v6;
  uint64_t v8 = v11;
  unsigned int v9 = WORD4(v11);
  LOBYTE(v11) = a5 & 1;
  *(void *)((char *)&v11 + 1) = v7;
  BYTE9(v11) = HIBYTE(a6);
  return sub_10040B50C(a1 & 0xFFFF010101010101, v8, v9, a4 & 0xFFFF010101010101, v11, WORD4(v11));
}

uint64_t Flags.redirected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

unint64_t Flags.junk.getter(unint64_t a1)
{
  return HIWORD(a1);
}

Swift::UInt32 (__swiftcall *Flags.junk.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

unint64_t Flags.label.getter(unint64_t a1)
{
  return HIBYTE(a1);
}

unint64_t Flags.init(unread:deleted:answered:draft:forwarded:redirected:junk:label:iCloudCleanup:)(char a1, char a2, char a3, char a4, char a5, char a6, unsigned __int8 a7, uint64_t a8)
{
  uint64_t v8 = 256;
  if ((a2 & 1) == 0) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL | a1 & 1;
  uint64_t v10 = 0x10000;
  if ((a3 & 1) == 0) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = 0x1000000;
  if ((a4 & 1) == 0) {
    uint64_t v11 = 0;
  }
  unint64_t v12 = v9 | v10 | v11;
  uint64_t v13 = &_mh_execute_header;
  if ((a5 & 1) == 0) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 0x10000000000;
  if ((a6 & 1) == 0) {
    uint64_t v14 = 0;
  }
  return v12 | (unint64_t)v13 | v14 | ((unint64_t)a7 << 48) | (a8 << 56);
}

void Flags.hash(into:)(uint64_t a1, unint64_t a2, char a3)
{
  Swift::UInt v5 = HIBYTE(a2);
  sub_1005E3420(a2 & 1);
  sub_1005E3420(BYTE1(a2) & 1);
  sub_1005E3420(BYTE2(a2) & 1);
  sub_1005E3420(BYTE3(a2) & 1);
  sub_1005E3420(BYTE4(a2) & 1);
  sub_1005E3420(BYTE5(a2) & 1);
  sub_1005E3410(BYTE6(a2));
  sub_1005E3410(v5);
  sub_1005E3420(a3 & 1);
}

Swift::Int Flags.hashValue.getter(uint64_t a1, char a2)
{
  sub_1005E33F0();
  Flags.hash(into:)((uint64_t)v5, a1 & 0xFFFF010101010101, a2);
  return sub_1005E3470();
}

Swift::Int sub_100405300()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  int v5 = v0[4];
  int v6 = v0[5];
  uint64_t v7 = v0[6];
  char v8 = v0[8];
  uint64_t v9 = v0[7];
  sub_1005E33F0();
  uint64_t v10 = 256;
  if (!v2) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v1;
  uint64_t v12 = 0x10000;
  if (!v3) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x1000000;
  if (!v4) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v11 | v12 | v13;
  char v15 = &_mh_execute_header;
  if (!v5) {
    char v15 = 0;
  }
  uint64_t v16 = 0x10000000000;
  if (!v6) {
    uint64_t v16 = 0;
  }
  Flags.hash(into:)((uint64_t)v18, v14 | (unint64_t)v15 | v16 | (v7 << 48) | (v9 << 56), v8);
  return sub_1005E3470();
}

void sub_1004053E0(uint64_t a1)
{
  uint64_t v2 = 256;
  if (!v1[1]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | *v1;
  uint64_t v4 = 0x10000;
  if (!v1[2]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 0x1000000;
  if (!v1[3]) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v3 | v4 | v5;
  uint64_t v7 = &_mh_execute_header;
  if (!v1[4]) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0x10000000000;
  if (!v1[5]) {
    uint64_t v8 = 0;
  }
  Flags.hash(into:)(a1, v6 | (unint64_t)v7 | v8 | ((unint64_t)v1[6] << 48) | ((unint64_t)v1[7] << 56), v1[8]);
}

Swift::Int sub_100405460()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  int v5 = v0[4];
  int v6 = v0[5];
  uint64_t v7 = v0[6];
  char v8 = v0[8];
  uint64_t v9 = v0[7];
  sub_1005E33F0();
  uint64_t v10 = 256;
  if (!v2) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v1;
  uint64_t v12 = 0x10000;
  if (!v3) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x1000000;
  if (!v4) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v11 | v12 | v13;
  char v15 = &_mh_execute_header;
  if (!v5) {
    char v15 = 0;
  }
  uint64_t v16 = 0x10000000000;
  if (!v6) {
    uint64_t v16 = 0;
  }
  Flags.hash(into:)((uint64_t)v18, v14 | (unint64_t)v15 | v16 | (v7 << 48) | (v9 << 56), v8);
  return sub_1005E3470();
}

uint64_t sub_10040553C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v3 = a1[8];
  int v4 = a2[8];
  if (a1[1]) {
    uint64_t v5 = 256;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v5 | *a1;
  if (a1[2]) {
    uint64_t v7 = 0x10000;
  }
  else {
    uint64_t v7 = 0;
  }
  if (a1[3]) {
    uint64_t v8 = 0x1000000;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v6 | v7 | v8;
  if (a1[4]) {
    uint64_t v10 = &_mh_execute_header;
  }
  else {
    uint64_t v10 = 0;
  }
  if (a1[5]) {
    uint64_t v11 = 0x10000000000;
  }
  else {
    uint64_t v11 = 0;
  }
  unint64_t v12 = v9 | (unint64_t)v10 | v11 | ((unint64_t)a1[6] << 48) | ((unint64_t)a1[7] << 56);
  if (a2[1]) {
    uint64_t v13 = 256;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v13 | *a2;
  if (a2[2]) {
    uint64_t v15 = 0x10000;
  }
  else {
    uint64_t v15 = 0;
  }
  if (a2[3]) {
    uint64_t v16 = 0x1000000;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v14 | v15 | v16;
  if (a2[4]) {
    uint64_t v18 = &_mh_execute_header;
  }
  else {
    uint64_t v18 = 0;
  }
  if (a2[5]) {
    uint64_t v19 = 0x10000000000;
  }
  else {
    uint64_t v19 = 0;
  }
  unint64_t v20 = v17 | (unint64_t)v18 | v19 | ((unint64_t)a2[6] << 48) | ((unint64_t)a2[7] << 56);
  return sub_10040B48C(v12, v3, v20, v4);
}

uint64_t Flags.description.getter(unint64_t a1)
{
  unint64_t v1 = HIWORD(a1);
  unint64_t v43 = HIBYTE(a1);
  sub_10000566C(&qword_1007148C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F6710;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = 0x646165726E75;
  *(void *)(inited + 48) = 0xE600000000000000;
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = 0x646574656C6564;
  *(void *)(inited + 72) = 0xE700000000000000;
  *(void *)(inited + 80) = swift_getKeyPath();
  *(void *)(inited + 88) = 0x6465726577736E61;
  *(void *)(inited + 96) = 0xE800000000000000;
  *(void *)(inited + 104) = swift_getKeyPath();
  *(void *)(inited + 112) = 0x7466617264;
  *(void *)(inited + 120) = 0xE500000000000000;
  *(void *)(inited + 128) = swift_getKeyPath();
  *(void *)(inited + 136) = 0x6564726177726F66;
  *(void *)(inited + 144) = 0xE900000000000064;
  *(void *)(inited + 152) = swift_getKeyPath();
  *(void *)(inited + 160) = 0x7463657269646572;
  *(void *)(inited + 168) = 0xEA00000000006465;
  uint64_t v3 = 0;
  *(void *)(inited + 176) = swift_getKeyPath();
  strcpy((char *)(inited + 184), "iCloudCleanup");
  *(_WORD *)(inited + 198) = -4864;
  Swift::Int v44 = (char *)_swiftEmptyArrayStorage;
  do
  {
    uint64_t v4 = *(void *)(inited + v3 + 40);
    uint64_t v5 = *(void *)(inited + v3 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_release();
    if (v45)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v7 = *((void *)v44 + 2);
      unint64_t v6 = *((void *)v44 + 3);
      if (v7 >= v6 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v6 > 1), v7 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v7 + 1;
      uint64_t v8 = &v44[16 * v7];
      *((void *)v8 + 4) = v4;
      *((void *)v8 + 5) = v5;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v3 += 24;
  }
  while (v3 != 168);
  swift_bridgeObjectRelease();
  if ((_BYTE)v1)
  {
    if (v1 == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v10 = *((void *)v44 + 2);
      unint64_t v9 = *((void *)v44 + 3);
      if (v10 >= v9 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v9 > 1), v10 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v10 + 1;
      uint64_t v11 = &v44[16 * v10];
      *((void *)v11 + 4) = 1802401130;
      unint64_t v12 = v11 + 32;
      unint64_t v13 = 0xE400000000000000;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v15 = *((void *)v44 + 2);
      unint64_t v14 = *((void *)v44 + 3);
      if (v15 >= v14 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v14 > 1), v15 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v15 + 1;
      uint64_t v16 = &v44[16 * v15];
      *((void *)v16 + 4) = 0x6B6E754A746F6ELL;
      unint64_t v12 = v16 + 32;
      unint64_t v13 = 0xE700000000000000;
    }
    *((void *)v12 + 1) = v13;
  }
  switch((int)v43)
  {
    case 1:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v18 = *((void *)v44 + 2);
      unint64_t v17 = *((void *)v44 + 3);
      if (v18 >= v17 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v17 > 1), v18 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v18 + 1;
      uint64_t v19 = &v44[16 * v18];
      *((void *)v19 + 4) = 6579570;
      unint64_t v20 = v19 + 32;
      unint64_t v21 = 0xE300000000000000;
      goto LABEL_61;
    case 2:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v23 = *((void *)v44 + 2);
      unint64_t v22 = *((void *)v44 + 3);
      if (v23 >= v22 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v22 > 1), v23 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v23 + 1;
      uint64_t v24 = &v44[16 * v23];
      uint64_t v25 = 0x65676E61726FLL;
      goto LABEL_54;
    case 3:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v27 = *((void *)v44 + 2);
      unint64_t v26 = *((void *)v44 + 3);
      if (v27 >= v26 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v26 > 1), v27 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v27 + 1;
      uint64_t v24 = &v44[16 * v27];
      uint64_t v25 = 0x776F6C6C6579;
      goto LABEL_54;
    case 4:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v29 = *((void *)v44 + 2);
      unint64_t v28 = *((void *)v44 + 3);
      if (v29 >= v28 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v28 > 1), v29 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v29 + 1;
      uint64_t v30 = &v44[16 * v29];
      *((void *)v30 + 4) = 0x6E65657267;
      unint64_t v20 = v30 + 32;
      unint64_t v21 = 0xE500000000000000;
      goto LABEL_61;
    case 5:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v32 = *((void *)v44 + 2);
      unint64_t v31 = *((void *)v44 + 3);
      if (v32 >= v31 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v31 > 1), v32 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v32 + 1;
      uint64_t v33 = &v44[16 * v32];
      uint64_t v34 = 1702194274;
      goto LABEL_60;
    case 6:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v36 = *((void *)v44 + 2);
      unint64_t v35 = *((void *)v44 + 3);
      if (v36 >= v35 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v35 > 1), v36 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v36 + 1;
      uint64_t v24 = &v44[16 * v36];
      uint64_t v25 = 0x656C70727570;
LABEL_54:
      *((void *)v24 + 4) = v25;
      unint64_t v20 = v24 + 32;
      unint64_t v21 = 0xE600000000000000;
      goto LABEL_61;
    case 7:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v44 = sub_100408FD8(0, *((void *)v44 + 2) + 1, 1, v44);
      }
      unint64_t v38 = *((void *)v44 + 2);
      unint64_t v37 = *((void *)v44 + 3);
      if (v38 >= v37 >> 1) {
        Swift::Int v44 = sub_100408FD8((char *)(v37 > 1), v38 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v38 + 1;
      uint64_t v33 = &v44[16 * v38];
      uint64_t v34 = 2036429415;
LABEL_60:
      *((void *)v33 + 4) = v34;
      unint64_t v20 = v33 + 32;
      unint64_t v21 = 0xE400000000000000;
LABEL_61:
      *((void *)v20 + 1) = v21;
      break;
    default:
      break;
  }
  sub_10000566C(&qword_1007148D0);
  sub_100007494((unint64_t *)&qword_1007148D8, &qword_1007148D0);
  uint64_t v39 = sub_1005E1A80();
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  v46._countAndFlagsBits = v39;
  v46._object = v41;
  sub_1005E1E30(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v47._countAndFlagsBits = 41;
  v47._object = (void *)0xE100000000000000;
  sub_1005E1E30(v47);
  swift_bridgeObjectRelease();
  return 0x287367616C46;
}

uint64_t sub_100405EB4()
{
  uint64_t v1 = 256;
  if (!v0[1]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = v1 | *v0;
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!v0[3]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v2 | v3 | v4;
  unint64_t v6 = &_mh_execute_header;
  if (!v0[4]) {
    unint64_t v6 = 0;
  }
  uint64_t v7 = 0x10000000000;
  if (!v0[5]) {
    uint64_t v7 = 0;
  }
  return Flags.description.getter(v5 | (unint64_t)v6 | v7 | ((unint64_t)v0[6] << 48) | ((unint64_t)v0[7] << 56));
}

unint64_t FlagsWithModifications.flags.getter(uint64_t a1)
{
  return a1 & 0xFFFF010101010101;
}

int8x8_t FlagsWithModifications.flags.setter(unint64_t a1, char a2)
{
  *(unsigned char *)uint64_t v2 = a1 & 1;
  uint64x2_t v3 = (uint64x2_t)vdupq_n_s64(a1);
  int16x8_t v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1005F66B0));
  *(int8x8_t *)v4.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v4), (int8x8_t)0x1000100010001);
  int8x8_t result = vmovn_s16(v4);
  *(_DWORD *)(v2 + 1) = result.i32[0];
  *(unsigned char *)(v2 + 5) = BYTE5(a1) & 1;
  *(unsigned char *)(v2 + 6) = BYTE6(a1);
  *(unsigned char *)(v2 + 7) = HIBYTE(a1);
  *(unsigned char *)(v2 + 8) = a2;
  return result;
}

uint64_t FlagsWithModifications.originalFlags.getter(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)&long long v4 = a2;
  BYTE8(v4) = a3;
  return *(void *)((char *)&v4 + 1);
}

uint64_t FlagsWithModifications.hasLocalChanges.getter(unint64_t a1, unint64_t a2, __int16 a3)
{
  *(void *)uint64_t v5 = a2;
  v5[8] = a3;
  if (BYTE1(a2) == 2)
  {
    LOBYTE(v3) = 1;
  }
  else
  {
    LOBYTE(v3) = 1;
    if ((a1 & 1) != ((a2 & 0x100) == 0)
      && ((a1 >> 8) & 1) != (((a2 >> 8) & 0x100) == 0)
      && ((a1 >> 16) & 1) != ((*(void *)&v5[1] & 0x10000) == 0)
      && ((a1 >> 24) & 1) != (((a2 >> 8) & 0x1000000) == 0)
      && (BYTE4(a1) & 1) != ((*(void *)&v5[1] & (unint64_t)&_mh_execute_header) == 0)
      && ((a1 >> 40) & 1) != ((*(void *)&v5[1] & 0x10000000000) == 0)
      && ((*(void *)&v5[1] ^ a1) & 0xFF000000000000) == 0
      && !((*(void *)&v5[1] ^ a1) >> 56))
    {
      int v3 = a2 ^ ((unsigned __int16)(a3 & 0x100) >> 8);
    }
  }
  return v3 & 1;
}

uint64_t FlagsWithModifications.locallyModified.getter(unint64_t a1, uint64_t a2, __int16 a3)
{
  *(void *)unint64_t v10 = a2;
  *(_WORD *)&v10[8] = a3;
  uint64_t v3 = *(void *)&v10[1];
  *(void *)unint64_t v10 = &_swiftEmptySetSingleton;
  if (v3 == 2)
  {
    return sub_10040B60C((uint64_t)&off_1006EED60);
  }
  else
  {
    int v6 = a2;
    if (((a1 ^ ((v3 & 1) == 0)) & 1) == 0) {
      sub_100409508(&v9, 0);
    }
    if (((a1 >> 8) & 1) == ((v3 & 0x100) == 0)) {
      sub_100409508(&v9, 1);
    }
    if (((a1 >> 16) & 1) == ((v3 & 0x10000) == 0)) {
      sub_100409508(&v9, 2);
    }
    if (((a1 >> 24) & 1) == ((v3 & 0x1000000) == 0)) {
      sub_100409508(&v9, 3);
    }
    if ((BYTE4(a1) & 1) == ((v3 & (unint64_t)&_mh_execute_header) == 0)) {
      sub_100409508(&v9, 4);
    }
    if (((a1 >> 40) & 1) == ((v3 & 0x10000000000) == 0)) {
      sub_100409508(&v9, 5);
    }
    unint64_t v8 = v3 ^ a1;
    if ((v8 & 0xFF000000000000) != 0) {
      sub_100409508(&v9, 6);
    }
    if (HIBYTE(v8)) {
      sub_100409508(&v9, 7);
    }
    if (((v6 ^ ((a3 & 0x100) == 0)) & 1) == 0) {
      sub_100409508(&v9, 8);
    }
    return *(void *)v10;
  }
}

_UNKNOWN **static FlagKind.allCases.getter()
{
  return &off_1006EED60;
}

void FlagsWithModifications.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  char v4 = HIBYTE(a4);
  *(void *)int v6 = a3;
  v6[8] = a4;
  Flags.hash(into:)(a1, a2 & 0xFFFF010101010101, a3 & 1);
  if (v6[1] == 2)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    Flags.hash(into:)(a1, *(void *)&v6[1] & 0xFFFF010101010101, v4 & 1);
  }
}

Swift::Int FlagsWithModifications.hashValue.getter(uint64_t a1, uint64_t a2, __int16 a3)
{
  char v3 = HIBYTE(a3);
  *(void *)unint64_t v8 = a2;
  *(_WORD *)&v8[8] = a3;
  char v5 = a2 & 1;
  uint64_t v6 = *(void *)&v8[1];
  sub_1005E33F0();
  Flags.hash(into:)((uint64_t)v8, a1 & 0xFFFF010101010101, v5);
  if (v6 == 2)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    Flags.hash(into:)((uint64_t)v8, v6 & 0xFFFF010101010101, v3 & 1);
  }
  return sub_1005E3470();
}

Swift::Int sub_1004063B4()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  int v5 = v0[4];
  int v6 = v0[5];
  uint64_t v7 = v0[6];
  char v8 = v0[8];
  uint64_t v9 = *(void *)(v0 + 9);
  unsigned __int8 v19 = v0[17];
  uint64_t v10 = v0[7];
  sub_1005E33F0();
  uint64_t v11 = 256;
  if (!v2) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | v1;
  uint64_t v13 = 0x10000;
  if (!v3) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 0x1000000;
  if (!v4) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v12 | v13 | v14;
  uint64_t v16 = &_mh_execute_header;
  if (!v5) {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 0x10000000000;
  if (!v6) {
    uint64_t v17 = 0;
  }
  Flags.hash(into:)((uint64_t)v20, v15 | (unint64_t)v16 | v17 | (v7 << 48) | (v10 << 56), v8);
  if (v9 == 2)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    Flags.hash(into:)((uint64_t)v20, v9 & 0xFFFF010101010101, v19 & 1);
  }
  return sub_1005E3470();
}

void sub_1004064E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 9);
  unsigned __int8 v4 = v1[17];
  uint64_t v5 = 256;
  if (!v1[1]) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v5 | *v1;
  uint64_t v7 = 0x10000;
  if (!v1[2]) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0x1000000;
  if (!v1[3]) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v6 | v7 | v8;
  uint64_t v10 = &_mh_execute_header;
  if (!v1[4]) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = 0x10000000000;
  if (!v1[5]) {
    uint64_t v11 = 0;
  }
  Flags.hash(into:)(a1, v9 | (unint64_t)v10 | v11 | ((unint64_t)v1[6] << 48) | ((unint64_t)v1[7] << 56), v1[8]);
  if (v3 == 2)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    Flags.hash(into:)(a1, v3 & 0xFFFF010101010101, v4 & 1);
  }
}

Swift::Int sub_1004065E8()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  int v5 = v0[4];
  int v6 = v0[5];
  uint64_t v7 = v0[6];
  char v8 = v0[8];
  uint64_t v9 = *(void *)(v0 + 9);
  unsigned __int8 v19 = v0[17];
  uint64_t v10 = v0[7];
  sub_1005E33F0();
  uint64_t v11 = 256;
  if (!v2) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | v1;
  uint64_t v13 = 0x10000;
  if (!v3) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = 0x1000000;
  if (!v4) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v12 | v13 | v14;
  uint64_t v16 = &_mh_execute_header;
  if (!v5) {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 0x10000000000;
  if (!v6) {
    uint64_t v17 = 0;
  }
  Flags.hash(into:)((uint64_t)v20, v15 | (unint64_t)v16 | v17 | (v7 << 48) | (v10 << 56), v8);
  if (v9 == 2)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    Flags.hash(into:)((uint64_t)v20, v9 & 0xFFFF010101010101, v19 & 1);
  }
  return sub_1005E3470();
}

uint64_t sub_100406710(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  int v4 = a1[1];
  int v5 = a1[2];
  int v6 = a1[3];
  int v7 = a1[4];
  int v8 = a1[5];
  uint64_t v9 = a1[6];
  unsigned __int8 v10 = a1[8];
  uint64_t v11 = *(void *)(a1 + 9);
  unsigned __int8 v12 = a1[17];
  uint64_t v13 = *a2;
  int v14 = a2[1];
  int v15 = a2[2];
  int v16 = a2[3];
  int v17 = a2[4];
  int v18 = a2[5];
  uint64_t v19 = a2[6];
  unsigned __int8 v20 = a2[8];
  uint64_t v21 = *(void *)(a2 + 9);
  unsigned __int8 v22 = a2[17];
  uint64_t v23 = a1[7];
  uint64_t v24 = a2[7];
  if (v4) {
    uint64_t v25 = 256;
  }
  else {
    uint64_t v25 = 0;
  }
  uint64_t v26 = v25 | v3;
  if (v5) {
    uint64_t v27 = 0x10000;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v6) {
    uint64_t v28 = 0x1000000;
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = v26 | v27 | v28;
  if (v7) {
    uint64_t v30 = &_mh_execute_header;
  }
  else {
    uint64_t v30 = 0;
  }
  if (v8) {
    uint64_t v31 = 0x10000000000;
  }
  else {
    uint64_t v31 = 0;
  }
  unint64_t v32 = v29 | (unint64_t)v30 | v31 | (v9 << 48) | (v23 << 56);
  LOBYTE(v43) = v10;
  *(void *)((char *)&v43 + 1) = v11;
  BYTE9(v43) = v12;
  uint64_t v33 = v43;
  unsigned int v34 = WORD4(v43);
  if (v14) {
    uint64_t v35 = 256;
  }
  else {
    uint64_t v35 = 0;
  }
  uint64_t v36 = v35 | v13;
  if (v15) {
    uint64_t v37 = 0x10000;
  }
  else {
    uint64_t v37 = 0;
  }
  if (v16) {
    uint64_t v38 = 0x1000000;
  }
  else {
    uint64_t v38 = 0;
  }
  uint64_t v39 = v36 | v37 | v38;
  if (v17) {
    uint64_t v40 = &_mh_execute_header;
  }
  else {
    uint64_t v40 = 0;
  }
  if (v18) {
    uint64_t v41 = 0x10000000000;
  }
  else {
    uint64_t v41 = 0;
  }
  v44[0] = v20;
  *(void *)&v44[1] = v21;
  v44[9] = v22;
  return sub_10040B50C(v32, v33, v34, v39 | (unint64_t)v40 | v41 | (v19 << 48) | (v24 << 56), *(uint64_t *)v44, *(unsigned __int16 *)&v44[8]);
}

char *FlagsWithModifications.description.getter(uint64_t a1, char *a2, __int16 a3)
{
  uint64_t v25 = a2;
  LOWORD(v26) = a3;
  unint64_t v3 = a1 & 0xFFFF010101010101;
  LOBYTE(v25) = a2 & 1;
  uint64_t v4 = FlagsWithModifications.locallyModified.getter(a1 & 0xFFFF010101010101, (uint64_t)v25, a3);
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v24 = v3;
    uint64_t v25 = (char *)_swiftEmptyArrayStorage;
    sub_10040A758(0, v5, 0);
    int v6 = (char *)_swiftEmptyArrayStorage;
    int64_t v7 = sub_1000D38D0(v4);
    int v9 = v8;
    char v11 = v10 & 1;
    do
    {
      if (v7 < 0 || v7 >= 1 << *(unsigned char *)(v4 + 32))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x100406C68);
      }
      if (((*(void *)(v4 + 56 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(v4 + 36) != v9) {
        goto LABEL_27;
      }
      unint64_t v12 = 0xE600000000000000;
      uint64_t v13 = 0x646165726E75;
      switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
      {
        case 1:
          unint64_t v12 = 0xE700000000000000;
          uint64_t v13 = 0x646574656C6564;
          break;
        case 2:
          unint64_t v12 = 0xE800000000000000;
          uint64_t v13 = 0x6465726577736E61;
          break;
        case 3:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v13 = 0x7466617264;
          break;
        case 4:
          unint64_t v12 = 0xE900000000000064;
          uint64_t v13 = 0x6564726177726F66;
          break;
        case 5:
          unint64_t v12 = 0xEA00000000006465;
          uint64_t v13 = 0x7463657269646572;
          break;
        case 6:
          unint64_t v12 = 0xE400000000000000;
          uint64_t v13 = 1802401130;
          break;
        case 7:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v13 = 0x6C6562616CLL;
          break;
        case 8:
          unint64_t v12 = 0xED000070756E6165;
          uint64_t v13 = 0x6C4364756F6C4369;
          break;
        default:
          break;
      }
      uint64_t v25 = v6;
      unint64_t v15 = *((void *)v6 + 2);
      unint64_t v14 = *((void *)v6 + 3);
      if (v15 >= v14 >> 1)
      {
        sub_10040A758((char *)(v14 > 1), v15 + 1, 1);
        int v6 = v25;
      }
      *((void *)v6 + 2) = v15 + 1;
      int v16 = &v6[16 * v15];
      *((void *)v16 + 4) = v13;
      *((void *)v16 + 5) = v12;
      int64_t v17 = sub_1000D3974(v7, v9, v11 & 1, v4);
      int64_t v7 = v17;
      int v9 = v18;
      char v11 = v19 & 1;
      --v5;
    }
    while (v5);
    sub_100060FF0(v17, v18, v19 & 1);
    swift_bridgeObjectRelease();
    unint64_t v3 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    int v6 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v25 = v6;
  swift_bridgeObjectRetain();
  sub_1004078C0(&v25);
  swift_bridgeObjectRelease();
  if (*((void *)v25 + 2))
  {
    sub_10000566C(&qword_1007148D0);
    sub_100007494((unint64_t *)&qword_1007148D8, &qword_1007148D0);
    uint64_t v20 = sub_1005E1A80();
    unsigned __int8 v22 = v21;
    swift_release();
  }
  else
  {
    swift_release();
    unsigned __int8 v22 = (void *)0xE400000000000000;
    uint64_t v20 = 1701736302;
  }
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_1005E2C80(36);
  swift_bridgeObjectRelease();
  uint64_t v25 = (char *)0xD000000000000013;
  unint64_t v26 = 0x80000001005EA470;
  v27._countAndFlagsBits = Flags.description.getter(v3);
  sub_1005E1E30(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 0x696669646F6D202CLL;
  v28._object = (void *)0xEC000000203A6465;
  sub_1005E1E30(v28);
  v29._countAndFlagsBits = v20;
  v29._object = v22;
  sub_1005E1E30(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 41;
  v30._object = (void *)0xE100000000000000;
  sub_1005E1E30(v30);
  return v25;
}

char *sub_100406C8C()
{
  uint64_t v1 = 256;
  if (!v0[1]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = v1 | *v0;
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!v0[3]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v2 | v3 | v4;
  int v6 = &_mh_execute_header;
  if (!v0[4]) {
    int v6 = 0;
  }
  uint64_t v7 = 0x10000000000;
  if (!v0[5]) {
    uint64_t v7 = 0;
  }
  *(void *)&v9[1] = *(void *)(v0 + 9);
  v9[9] = v0[17];
  return FlagsWithModifications.description.getter(v5 | (unint64_t)v6 | v7 | ((unint64_t)v0[6] << 48) | ((unint64_t)v0[7] << 56), *(char **)v9, *(__int16 *)&v9[8]);
}

unint64_t FlagsUpdate.redirected.getter(unint64_t a1)
{
  return a1 >> 40;
}

uint64_t FlagsUpdate.junk.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 6) = result;
  return result;
}

void *FlagsUpdate.Label.clear.unsafeMutableAddressor()
{
  return &static FlagsUpdate.Label.clear;
}

void FlagsUpdate.Label.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  if (a2 == 8)
  {
    Swift::UInt v2 = 0;
  }
  else
  {
    sub_1005E3410(1uLL);
    Swift::UInt v2 = a2;
  }
  sub_1005E3410(v2);
}

BOOL static FlagsUpdate.Label.__derived_enum_equals(_:_:)(char a1, char a2)
{
  if (a1 == 8) {
    return a2 == 8;
  }
  if (a2 == 8) {
    return 0;
  }
  return a1 == a2;
}

Swift::Int FlagsUpdate.Label.hashValue.getter(unsigned __int8 a1)
{
  int v2 = a1;
  sub_1005E33F0();
  Swift::UInt v3 = 0;
  if (v2 != 8)
  {
    sub_1005E3410(1uLL);
    Swift::UInt v3 = a1;
  }
  sub_1005E3410(v3);
  return sub_1005E3470();
}

Swift::Int sub_100406E38()
{
  Swift::UInt v1 = *v0;
  sub_1005E33F0();
  Swift::UInt v2 = 0;
  if (v1 != 8)
  {
    sub_1005E3410(1uLL);
    Swift::UInt v2 = v1;
  }
  sub_1005E3410(v2);
  return sub_1005E3470();
}

void sub_100406E98()
{
  Swift::UInt v1 = *v0;
  if (v1 == 8) {
    Swift::UInt v1 = 0;
  }
  else {
    sub_1005E3410(1uLL);
  }
  sub_1005E3410(v1);
}

Swift::Int sub_100406EE0()
{
  Swift::UInt v1 = *v0;
  sub_1005E33F0();
  if (v1 == 8) {
    Swift::UInt v1 = 0;
  }
  else {
    sub_1005E3410(1uLL);
  }
  sub_1005E3410(v1);
  return sub_1005E3470();
}

BOOL sub_100406F40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 8) {
    return v3 == 8;
  }
  if (v3 == 8) {
    return 0;
  }
  return v2 == v3;
}

unint64_t FlagsUpdate.init(unread:deleted:answered:draft:forwarded:redirected:junk:label:iCloudCleanup:)(char a1, char a2, char a3, char a4, unsigned __int8 a5, unsigned __int8 a6, unsigned __int8 a7, uint64_t a8)
{
  uint64_t v8 = 256;
  if ((a2 & 1) == 0) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL | a1 & 1;
  uint64_t v10 = 0x10000;
  if ((a3 & 1) == 0) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = 0x1000000;
  if ((a4 & 1) == 0) {
    uint64_t v11 = 0;
  }
  return v9 | v10 | v11 | ((unint64_t)a5 << 32) | ((unint64_t)a6 << 40) | ((unint64_t)a7 << 48) | (a8 << 56);
}

void FlagsUpdate.hash(into:)(uint64_t a1, unint64_t a2, char a3)
{
  sub_1005E3420(a2 & 1);
  sub_1005E3420(BYTE1(a2) & 1);
  sub_1005E3420(BYTE2(a2) & 1);
  sub_1005E3420(BYTE3(a2) & 1);
  if ((a2 & 0xFF00000000) == 0x200000000)
  {
    LOBYTE(v5) = 0;
  }
  else
  {
    sub_1005E3420(1u);
    uint64_t v5 = HIDWORD(a2) & 1;
  }
  sub_1005E3420(v5);
  if ((a2 & 0xFF0000000000) == 0x20000000000)
  {
    LOBYTE(v6) = 0;
  }
  else
  {
    sub_1005E3420(1u);
    uint64_t v6 = (a2 >> 40) & 1;
  }
  Swift::UInt v7 = HIBYTE(a2);
  sub_1005E3420(v6);
  if ((a2 & 0xFF000000000000) == 0x3000000000000)
  {
    sub_1005E3420(0);
    if (v7 != 8)
    {
LABEL_9:
      sub_1005E3410(1uLL);
      goto LABEL_12;
    }
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(BYTE6(a2));
    if (v7 != 8) {
      goto LABEL_9;
    }
  }
  Swift::UInt v7 = 0;
LABEL_12:
  sub_1005E3410(v7);
  if (a3 == 2)
  {
    Swift::UInt8 v8 = 0;
  }
  else
  {
    Swift::UInt8 v8 = a3 & 1;
    sub_1005E3420(1u);
  }
  sub_1005E3420(v8);
}

uint64_t static FlagsUpdate.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  return sub_10040B324(a1 & 0xFFFFFFFF01010101, a2, a3 & 0xFFFFFFFF01010101, a4);
}

Swift::Int FlagsUpdate.hashValue.getter(uint64_t a1, char a2)
{
  sub_1005E33F0();
  FlagsUpdate.hash(into:)((uint64_t)v5, a1 & 0xFFFFFFFF01010101, a2);
  return sub_1005E3470();
}

Swift::Int sub_100407158()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  char v9 = v0[8];
  sub_1005E33F0();
  uint64_t v10 = 256;
  if (!v2) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v1;
  uint64_t v12 = 0x10000;
  if (!v3) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x1000000;
  if (!v4) {
    uint64_t v13 = 0;
  }
  FlagsUpdate.hash(into:)((uint64_t)v15, v11 | v12 | v13 | (v5 << 32) | (v6 << 40) | (v7 << 48) | (v8 << 56), v9);
  return sub_1005E3470();
}

void sub_100407220(uint64_t a1)
{
  uint64_t v2 = 256;
  if (!v1[1]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | *v1;
  uint64_t v4 = 0x10000;
  if (!v1[2]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 0x1000000;
  if (!v1[3]) {
    uint64_t v5 = 0;
  }
  FlagsUpdate.hash(into:)(a1, v3 | v4 | v5 | ((unint64_t)v1[4] << 32) | ((unint64_t)v1[5] << 40) | ((unint64_t)v1[6] << 48) | ((unint64_t)v1[7] << 56), v1[8]);
}

Swift::Int sub_100407288()
{
  uint64_t v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  int v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  char v9 = v0[8];
  sub_1005E33F0();
  uint64_t v10 = 256;
  if (!v2) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v1;
  uint64_t v12 = 0x10000;
  if (!v3) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 0x1000000;
  if (!v4) {
    uint64_t v13 = 0;
  }
  FlagsUpdate.hash(into:)((uint64_t)v15, v11 | v12 | v13 | (v5 << 32) | (v6 << 40) | (v7 << 48) | (v8 << 56), v9);
  return sub_1005E3470();
}

uint64_t sub_10040734C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = 256;
  if (a1[1]) {
    uint64_t v3 = 256;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 | *a1;
  uint64_t v5 = 0x10000;
  if (a1[2]) {
    uint64_t v6 = 0x10000;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = 0x1000000;
  if (a1[3]) {
    uint64_t v8 = 0x1000000;
  }
  else {
    uint64_t v8 = 0;
  }
  unint64_t v9 = v4 | v6 | v8 | ((unint64_t)a1[4] << 32) | ((unint64_t)a1[5] << 40) | ((unint64_t)a1[6] << 48) | ((unint64_t)a1[7] << 56);
  if (!a2[1]) {
    uint64_t v2 = 0;
  }
  uint64_t v10 = v2 | *a2;
  if (!a2[2]) {
    uint64_t v5 = 0;
  }
  if (!a2[3]) {
    uint64_t v7 = 0;
  }
  return sub_10040B324(v9, a1[8], v10 | v5 | v7 | ((unint64_t)a2[4] << 32) | ((unint64_t)a2[5] << 40) | ((unint64_t)a2[6] << 48) | ((unint64_t)a2[7] << 56), a2[8]);
}

uint64_t Flags.init(_:)(uint64_t a1)
{
  unint64_t v1 = a1 & 0xFF00000000000000;
  if ((a1 & 0xFF00000000000000) == 0x800000000000000) {
    unint64_t v1 = 0x100000000000000;
  }
  uint64_t v2 = a1 & 0xFF000000000000;
  if ((a1 & 0xFF000000000000) == 0x3000000000000) {
    uint64_t v2 = 0;
  }
  return v2 | a1 & 0x10100000000 | v1 | a1 & 0x1010101;
}

unint64_t FlagsWithModifications.init(flags:)(uint64_t a1)
{
  return a1 & 0xFFFF010101010101;
}

uint64_t FlagsWithModifications.init(_:)(uint64_t a1, char a2)
{
  return 0;
}

unint64_t FlagsWithModifications.update(with:)(unint64_t result, char a2)
{
  unint64_t v3 = *(void *)(v2 + 9);
  if (v3 != 2)
  {
    char v4 = *(unsigned char *)v2 ^ v3;
    char v5 = result & 1;
    if ((v4 & 1) == 0) {
      *(unsigned char *)uint64_t v2 = v5;
    }
    *(unsigned char *)(v2 + 9) = v5;
    unint64_t v3 = *(void *)(v2 + 9);
    if (v3 != 2)
    {
      int v6 = *(unsigned __int8 *)(v2 + 1) ^ (v3 >> 8) & 1;
      unsigned int v7 = (result >> 8) & 1;
      if ((v6 & 1) == 0) {
        *(unsigned char *)(v2 + 1) = v7;
      }
      *(unsigned char *)(v2 + 10) = v7;
      unint64_t v3 = *(void *)(v2 + 9);
      if (v3 != 2)
      {
        if (((*(unsigned __int8 *)(v2 + 2) ^ (v3 >> 16) & 1) & 1) == 0) {
          *(unsigned char *)(v2 + 2) = BYTE2(result) & 1;
        }
        *(unsigned char *)(v2 + 11) = BYTE2(result) & 1;
        unint64_t v3 = *(void *)(v2 + 9);
        if (v3 != 2)
        {
          int v8 = *(unsigned __int8 *)(v2 + 3) ^ (v3 >> 24) & 1;
          unsigned int v9 = BYTE3(result) & 1;
          if ((v8 & 1) == 0) {
            *(unsigned char *)(v2 + 3) = v9;
          }
          *(unsigned char *)(v2 + 12) = v9;
          unint64_t v3 = *(void *)(v2 + 9);
        }
      }
    }
  }
  if ((result & 0xFF00000000) != 0x200000000 && v3 != 2)
  {
    if (((*(unsigned char *)(v2 + 4) ^ BYTE4(v3) & 1) & 1) == 0) {
      *(unsigned char *)(v2 + 4) = BYTE4(result) & 1;
    }
    *(unsigned char *)(v2 + 13) = BYTE4(result) & 1;
    unint64_t v3 = *(void *)(v2 + 9);
  }
  if ((result & 0xFF0000000000) != 0x20000000000 && v3 != 2)
  {
    int v10 = *(unsigned __int8 *)(v2 + 5) ^ (v3 >> 40) & 1;
    uint64_t v11 = (result >> 40) & 1;
    if ((v10 & 1) == 0) {
      *(unsigned char *)(v2 + 5) = v11;
    }
    *(unsigned char *)(v2 + 14) = v11;
    unint64_t v3 = *(void *)(v2 + 9);
  }
  unint64_t v12 = HIBYTE(result);
  if (BYTE6(result) != 3 && v3 != 2)
  {
    if (*(unsigned __int8 *)(v2 + 6) == BYTE6(v3)) {
      *(unsigned char *)(v2 + 6) = BYTE6(result);
    }
    *(unsigned char *)(v2 + 15) = BYTE6(result);
    unint64_t v3 = *(void *)(v2 + 9);
  }
  unint64_t v13 = HIBYTE(v3);
  if (v12 == 8)
  {
    if (v3 != 2 && !v13)
    {
      if (*(unsigned __int8 *)(v2 + 7) <= 1u) {
        LOBYTE(v12) = 1;
      }
      else {
        LOBYTE(v12) = *(unsigned char *)(v2 + 7);
      }
      if (*(unsigned char *)(v2 + 7)) {
        goto LABEL_40;
      }
      goto LABEL_39;
    }
  }
  else if (v3 != 2)
  {
    if (*(unsigned __int8 *)(v2 + 7) != v13)
    {
LABEL_40:
      *(unsigned char *)(v2 + 16) = v12;
      goto LABEL_41;
    }
LABEL_39:
    *(unsigned char *)(v2 + 7) = v12;
    goto LABEL_40;
  }
LABEL_41:
  if (a2 != 2 && *(unsigned char *)(v2 + 9) != 2)
  {
    char v14 = a2 & 1;
    if (*(unsigned __int8 *)(v2 + 8) == *(unsigned __int8 *)(v2 + 17)) {
      *(unsigned char *)(v2 + 8) = v14;
    }
    *(unsigned char *)(v2 + 17) = v14;
  }
  return result;
}

unint64_t static FlagsWithModifications.makeForLocallyCreatedMessage(with:)(uint64_t a1)
{
  return a1 & 0xFFFF010101010101;
}

unint64_t FlagsWithModifications.updated(with:)(uint64_t a1, char a2, unint64_t a3)
{
  unsigned __int8 v13 = a3 & 1;
  uint64x2_t v3 = (uint64x2_t)vdupq_n_s64(a3);
  int16x8_t v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1005F66C0), (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1005F66B0));
  *(int8x8_t *)v4.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v4), (int8x8_t)0x1000100010001);
  unsigned __int32 v14 = vmovn_s16(v4).u32[0];
  char v15 = BYTE5(a3) & 1;
  unsigned __int8 v16 = BYTE6(a3);
  unsigned __int8 v17 = HIBYTE(a3);
  FlagsWithModifications.update(with:)(a1 & 0xFFFFFFFF01010101, a2);
  uint64_t v5 = 256;
  if (!(_BYTE)v14) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v5 | v13;
  uint64_t v7 = 0x10000;
  if (!BYTE1(v14)) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0x1000000;
  if (!BYTE2(v14)) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v6 | v7 | v8;
  int v10 = &_mh_execute_header;
  if (!HIBYTE(v14)) {
    int v10 = 0;
  }
  uint64_t v11 = 0x10000000000;
  if (!v15) {
    uint64_t v11 = 0;
  }
  return v9 | (unint64_t)v10 | v11 | ((unint64_t)v16 << 48) | ((unint64_t)v17 << 56);
}

void sub_1004078B0(void *a1@<X8>)
{
  *a1 = &off_1006EED60;
}

uint64_t sub_1004078C0(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1004330FC((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_100409E80(v5);
  *a1 = v2;
  return result;
}

void *sub_10040792C()
{
  unint64_t v1 = v0;
  sub_10000566C(&qword_1007149C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unsigned __int8 v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v18;
    v20[1] = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100407AE0()
{
  unint64_t v1 = v0;
  sub_10000566C(&qword_1007149B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100407C74()
{
  unint64_t v1 = v0;
  sub_10000566C(&qword_100714950);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100407E20()
{
  unint64_t v1 = v0;
  sub_10000566C(&qword_100714928);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1005E2C00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LODWORD(v17) = *(_DWORD *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(_DWORD *)(v19 + 8) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100407FDC()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007149B0);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    sub_1005E33F0();
    sub_1005E3410(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100408258()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100714950);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    SectionSpecifier.Part.hash(into:)((uint64_t)v27, v19);
    uint64_t result = sub_1005E3470();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1004084E8()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100714928);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(unsigned int *)(v18 + 8);
    sub_1005E33F0();
    sub_1005E3410(v20 | (v20 << 32));
    uint64_t result = sub_1005E3470();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(_DWORD *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_bridgeObjectRetain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100408794()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_1007149B0);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                unint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      sub_1005E33F0();
      sub_1005E3410(v18);
      uint64_t result = sub_1005E3470();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100408A40()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100714950);
  uint64_t v3 = sub_1005E2C10();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_1005E33F0();
      SectionSpecifier.Part.hash(into:)((uint64_t)v28, v19);
      uint64_t result = sub_1005E3470();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100408CFC()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000566C(&qword_100714928);
  uint64_t result = sub_1005E2C10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    Swift::String v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *Swift::String v29 = -1 << v28;
                }
                unint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(unsigned int *)(v18 + 8);
      sub_1005E33F0();
      sub_1005E3410(v20 | (v20 << 32));
      uint64_t result = sub_1005E3470();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(_DWORD *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

char *sub_100408FD8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007149A0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1004090DC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714968);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1004091E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714958);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000566C(&qword_100714960);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100409304(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714948);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10040941C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007144B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100409508(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  sub_1005E3410(a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1004099AC(a2, v8, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100409628(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  SectionSpecifier.Part.hash(into:)((uint64_t)v17, a2);
  Swift::Int v6 = sub_1005E3470();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    char v10 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v9, a2);
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v11 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      uint64_t v12 = swift_bridgeObjectRetain();
      char v13 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v12, a2);
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *v2;
  uint64_t *v2 = 0x8000000000000000;
  Swift::Int v16 = swift_bridgeObjectRetain();
  sub_100409AFC(v16, v8, isUniquelyReferenced_nonNull_native);
  uint64_t *v2 = v17[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1004097BC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v7 = *v3;
  sub_1005E33F0();
  sub_1005E3410(a3 | ((unint64_t)a3 << 32));
  Swift::Int v8 = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = *(void *)(v7 + 48) + 16 * v10;
      if ((*(unsigned int *)(v12 + 8) | ((unint64_t)*(unsigned int *)(v12 + 8) << 32)) == (a3 | ((unint64_t)a3 << 32)))
      {
        uint64_t v13 = *(void *)v12;
        uint64_t v14 = *(void *)(v13 + 16);
        if (v14 == *(void *)(a2 + 16))
        {
          if (v14) {
            BOOL v15 = v13 == a2;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15) {
            goto LABEL_20;
          }
          if (*(unsigned __int8 *)(v13 + 32) == *(unsigned __int8 *)(a2 + 32))
          {
            if (v14 == 1) {
              goto LABEL_20;
            }
            if (*(unsigned __int8 *)(v13 + 33) == *(unsigned __int8 *)(a2 + 33))
            {
              if (v14 == 2) {
                goto LABEL_20;
              }
              if (*(unsigned __int8 *)(v13 + 34) == *(unsigned __int8 *)(a2 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_3:
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_19;
      }
    }
    Swift::Int v16 = (unsigned __int8 *)(v13 + 35);
    uint64_t v17 = v14 - 3;
    uint64_t v18 = (unsigned __int8 *)(a2 + 35);
    while (v17)
    {
      int v20 = *v16++;
      int v19 = v20;
      int v21 = *v18++;
      --v17;
      if (v19 != v21) {
        goto LABEL_3;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(*v3 + 48) + 16 * v10;
    uint64_t v26 = *(void *)v25;
    LODWORD(v25) = *(_DWORD *)(v25 + 8);
    *(void *)a1 = v26;
    *(_DWORD *)(a1 + 8) = v25;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_19:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    Swift::Int v23 = swift_bridgeObjectRetain();
    sub_100409C88(v23, a3, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v27;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(_DWORD *)(a1 + 8) = a3;
    return 1;
  }
}

Swift::Int sub_1004099AC(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100408794();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_100407AE0();
      goto LABEL_14;
    }
    sub_100407FDC();
  }
  uint64_t v8 = *v3;
  sub_1005E33F0();
  sub_1005E3410(v5);
  uint64_t result = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_100409AFC(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100408A40();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_100407C74();
      goto LABEL_14;
    }
    sub_100408258();
  }
  uint64_t v8 = *v3;
  sub_1005E33F0();
  SectionSpecifier.Part.hash(into:)((uint64_t)v19, v5);
  uint64_t result = sub_1005E3470();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    char v11 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v10, v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_13:
      uint64_t result = sub_1005E3370();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v13 = swift_bridgeObjectRetain();
        char v14 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v13, v5);
        uint64_t result = swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v15 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v15 + 48) + 8 * a2) = v5;
  uint64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v15 + 16) = v18;
  }
  return result;
}

Swift::Int sub_100409C88(Swift::Int result, unsigned int a2, unint64_t a3, char a4)
{
  Swift::Int v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_26;
  }
  if (a4)
  {
    sub_100408CFC();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_100407E20();
      goto LABEL_26;
    }
    sub_1004084E8();
  }
  uint64_t v10 = *v4;
  sub_1005E33F0();
  sub_1005E3410(a2 | ((unint64_t)a2 << 32));
  uint64_t result = sub_1005E3470();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    while (1)
    {
      uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
      if ((*(unsigned int *)(v13 + 8) | ((unint64_t)*(unsigned int *)(v13 + 8) << 32)) == (a2 | ((unint64_t)a2 << 32)))
      {
        uint64_t v14 = *(void *)v13;
        uint64_t v15 = *(void *)(v14 + 16);
        if (v15 == *(void *)(v7 + 16))
        {
          if (v15) {
            BOOL v16 = v14 == v7;
          }
          else {
            BOOL v16 = 1;
          }
          if (v16) {
            goto LABEL_29;
          }
          if (*(unsigned __int8 *)(v14 + 32) == *(unsigned __int8 *)(v7 + 32))
          {
            if (v15 == 1) {
              goto LABEL_29;
            }
            if (*(unsigned __int8 *)(v14 + 33) == *(unsigned __int8 *)(v7 + 33))
            {
              if (v15 == 2) {
                goto LABEL_29;
              }
              if (*(unsigned __int8 *)(v14 + 34) == *(unsigned __int8 *)(v7 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_10:
      a3 = (a3 + 1) & v12;
      if (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
        goto LABEL_26;
      }
    }
    BOOL v17 = (unsigned __int8 *)(v14 + 35);
    uint64_t v18 = v15 - 3;
    int v19 = (unsigned __int8 *)(v7 + 35);
    while (v18)
    {
      int v21 = *v17++;
      int v20 = v21;
      int v22 = *v19++;
      --v18;
      if (v20 != v22) {
        goto LABEL_10;
      }
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v24 = *(void *)(v23 + 48) + 16 * a3;
  *(void *)uint64_t v24 = v7;
  *(_DWORD *)(v24 + 8) = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_29:
  uint64_t result = sub_1005E3370();
  __break(1u);
  return result;
}

uint64_t sub_100409E80(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100374898(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v101 = result;
  uint64_t v98 = a1;
  if (v3 <= 1)
  {
    Swift::Int v7 = _swiftEmptyArrayStorage;
    uint64_t v104 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_117:
      uint64_t result = (uint64_t)v10;
      uint64_t v100 = v7;
      if (v11 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v91) {
            goto LABEL_159;
          }
          uint64_t v93 = result;
          uint64_t v94 = *(void *)(result + 32 + 16 * v92);
          uint64_t v95 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_10040A528((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1004330E8(v93);
            uint64_t v93 = result;
          }
          if (v92 >= *(void *)(v93 + 16)) {
            goto LABEL_148;
          }
          char v96 = (void *)(v93 + 32 + 16 * v92);
          *char v96 = v94;
          v96[1] = v95;
          unint64_t v97 = *(void *)(v93 + 16);
          if (v11 > v97) {
            goto LABEL_149;
          }
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          uint64_t result = v93;
          *(void *)(v93 + 16) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v100[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v100 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_1005E2150();
    *(void *)(result + 16) = v6;
    uint64_t v100 = (void *)result;
    uint64_t v104 = (char *)(result + 32);
  }
  Swift::Int v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v99 = v9 + 8;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v102 = v3;
  while (1)
  {
    Swift::Int v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    uint64_t v13 = (uint64_t *)(v9 + 16 * v8);
    uint64_t result = *v13;
    uint64_t v14 = v13[1];
    uint64_t v15 = (void *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      Swift::Int v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_1005E3290();
      int v17 = result;
      Swift::Int v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    int v19 = (void *)(v99 + 16 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      int v21 = (void *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_1005E3290();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      v19 += 2;
      Swift::Int v20 = v18 + 1;
      Swift::Int v8 = v18;
      Swift::Int v18 = v20;
    }
    while (v20 < v3);
    Swift::Int v18 = v20;
LABEL_36:
    Swift::Int v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = 16 * v18;
        uint64_t v24 = 16 * v12;
        Swift::Int v25 = v18;
        Swift::Int v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = v9 + v23;
            uint64_t v28 = *(void *)(v9 + v24);
            uint64_t v29 = *(void *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(void *)(v27 - 16) = v28;
            *(void *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      Swift::Int v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v101) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100432FEC(0, *((void *)v10 + 2) + 1, 1, v10);
      uint64_t v10 = (char *)result;
    }
    unint64_t v38 = *((void *)v10 + 2);
    unint64_t v37 = *((void *)v10 + 3);
    unint64_t v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)sub_100432FEC((char *)(v37 > 1), v38 + 1, 1, v10);
      uint64_t v10 = (char *)result;
    }
    *((void *)v10 + 2) = v11;
    uint64_t v39 = v10 + 32;
    uint64_t v40 = &v10[16 * v38 + 32];
    *(void *)uint64_t v40 = v12;
    *((void *)v40 + 1) = v8;
    if (v38)
    {
      Swift::Int v103 = v8;
      while (1)
      {
        unint64_t v41 = v11 - 1;
        if (v11 >= 4)
        {
          Swift::String v46 = &v39[2 * v11];
          uint64_t v47 = *(v46 - 8);
          uint64_t v48 = *(v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_134;
          }
          uint64_t v51 = *(v46 - 6);
          uint64_t v50 = *(v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_135;
          }
          unint64_t v53 = v11 - 2;
          int v54 = &v39[2 * v11 - 4];
          uint64_t v56 = *v54;
          uint64_t v55 = v54[1];
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_136;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_138;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = &v39[2 * v41];
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_144;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v70 = *((void *)v10 + 4);
            uint64_t v71 = *((void *)v10 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_98;
          }
          uint64_t v43 = *((void *)v10 + 4);
          uint64_t v42 = *((void *)v10 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_137;
        }
        unint64_t v53 = v11 - 2;
        uint64_t v59 = &v39[2 * v11 - 4];
        uint64_t v61 = *v59;
        uint64_t v60 = v59[1];
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_139;
        }
        uint64_t v65 = &v39[2 * v41];
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_141;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_143;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_104:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v64) {
          goto LABEL_140;
        }
        uint64_t v72 = &v39[2 * v41];
        uint64_t v74 = *v72;
        uint64_t v73 = v72[1];
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_142;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v81 = v9;
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v82 = v10;
        uint64_t v83 = &v39[2 * v80];
        uint64_t v84 = *v83;
        v85 = v39;
        unint64_t v86 = v41;
        uint64_t v87 = &v39[2 * v41];
        uint64_t v88 = v87[1];
        uint64_t v89 = v81;
        uint64_t result = sub_10040A528((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1) {
          goto LABEL_114;
        }
        if (v88 < v84) {
          goto LABEL_131;
        }
        if (v86 > *((void *)v82 + 2)) {
          goto LABEL_132;
        }
        *uint64_t v83 = v84;
        v85[2 * v80 + 1] = v88;
        unint64_t v90 = *((void *)v82 + 2);
        if (v86 >= v90) {
          goto LABEL_133;
        }
        uint64_t v10 = v82;
        unint64_t v11 = v90 - 1;
        uint64_t result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        uint64_t v39 = v85;
        *((void *)v82 + 2) = v90 - 1;
        uint64_t v9 = v89;
        Swift::Int v8 = v103;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v3 = v102;
    if (v8 >= v102)
    {
      Swift::Int v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101)) {
    goto LABEL_153;
  }
  if (v12 + v101 >= v3) {
    Swift::Int v30 = v3;
  }
  else {
    Swift::Int v30 = v12 + v101;
  }
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      uint64_t v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        unint64_t v32 = (uint64_t *)(v9 + 16 * v8);
        uint64_t result = *v32;
        uint64_t v33 = v32[1];
        Swift::Int v34 = v12;
        uint64_t v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1)) {
            break;
          }
          uint64_t result = sub_1005E3290();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          uint64_t result = *v35;
          uint64_t v33 = v35[1];
          *(_OWORD *)uint64_t v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      Swift::Int v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_10040A528(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  Swift::Int v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_48;
    }
    int v17 = (char *)(a3 - 16);
    while (1)
    {
      Swift::Int v18 = v17 + 16;
      int v19 = v6 - 16;
      BOOL v20 = *((void *)v14 - 2) == *((void *)v6 - 2) && *((void *)v14 - 1) == *((void *)v6 - 1);
      if (v20 || (sub_1005E3290() & 1) == 0)
      {
        int v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)int v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        BOOL v21 = v17 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (v15 || (sub_1005E3290() & 1) == 0) {
        break;
      }
      BOOL v16 = v6;
      BOOL v15 = v7 == v6;
      v6 += 16;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_23;
      }
    }
    BOOL v16 = v4;
    BOOL v15 = v7 == v4;
    v4 += 16;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)Swift::Int v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  }
  return 1;
}

char *sub_10040A758(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040A888(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

char *sub_10040A778(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040AA88(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

char *sub_10040A798(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040ABA4(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

void *sub_10040A7B8(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040ACA8(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

char *sub_10040A7D8(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040ADE8(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

char *sub_10040A7F8(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040AF04(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

char *sub_10040A818(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040B008(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

char *sub_10040A838(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040B21C(a1, a2, a3, *v3, &qword_100714930);
  uint64_t *v3 = result;
  return result;
}

char *sub_10040A868(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10040B104(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

char *sub_10040A888(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007149A0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10040A98C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_1007149A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

char *sub_10040AA88(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714980);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10040ABA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714968);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_10040ACA8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714988);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[7 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10000566C(&qword_100714990);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10040ADE8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714998);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10040AF04(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714970);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10040B008(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714978);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_10040B104(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100714938);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_10040B208(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10040B21C(a1, a2, a3, a4, &qword_100714940);
}

char *sub_10040B21C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10000566C(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    int64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v14 = v11 + 32;
  BOOL v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9]) {
      memmove(v14, v15, 32 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v11;
}

uint64_t sub_10040B324(unint64_t a1, char a2, unint64_t a3, unsigned __int8 a4)
{
  uint64_t result = 0;
  if (((a1 ^ a3) & 1) == 0
    && ((a1 >> 8) & 1) == ((a3 >> 8) & 1)
    && ((a1 >> 16) & 1) == ((a3 >> 16) & 1)
    && ((a1 >> 24) & 1) == ((a3 >> 24) & 1))
  {
    if ((a1 & 0xFF00000000) == 0x200000000)
    {
      if (BYTE4(a3) != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (BYTE4(a3) == 2 || ((a1 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(a3) & 1)) {
        return result;
      }
    }
    if ((a1 & 0xFF0000000000) == 0x20000000000)
    {
      if (BYTE5(a3) != 2) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (BYTE5(a3) == 2 || ((a1 & 0x10000000000) == 0) == ((a3 >> 40) & 1)) {
        return result;
      }
    }
    uint64_t v6 = a3 & 0xFF000000000000;
    if ((a1 & 0xFF000000000000) == 0x3000000000000)
    {
      if (v6 != 0x3000000000000) {
        return 0;
      }
    }
    else if (v6 == 0x3000000000000 || ((a3 ^ a1) & 0xFF000000000000) != 0)
    {
      return 0;
    }
    unint64_t v7 = HIBYTE(a1);
    unint64_t v8 = HIBYTE(a3);
    if (v7 == 8)
    {
      if (v8 != 8) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if (v8 == 8 || v7 != v8) {
        return result;
      }
    }
    if (a2 == 2)
    {
      if (a4 != 2) {
        return 0;
      }
    }
    else if (a4 == 2 || ((((a2 & 1) == 0) ^ a4) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_10040B48C(unint64_t a1, int a2, unint64_t a3, int a4)
{
  int v4 = (((a3 ^ a1) & 0xFF000000000000) == 0) & ~(a1 ^ a3 | (a1 >> 8) & 1 ^ (a3 >> 8) & 1 | (a1 >> 16) & 1 ^ (a3 >> 16) & 1 | (a1 >> 24) & 1 ^ (a3 >> 24) & 1 | BYTE4(a1) & 1 ^ BYTE4(a3) & 1 | (a1 >> 40) & 1 ^ (a3 >> 40) & 1);
  if ((a3 ^ a1) >> 56) {
    int v4 = 0;
  }
  return v4 & (a2 ^ a4 ^ 1u);
}

uint64_t sub_10040B50C(unint64_t a1, uint64_t a2, unsigned int a3, unint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t result = 0;
  *(void *)&long long v10 = a2;
  BYTE8(v10) = a3;
  uint64_t v8 = *(void *)((char *)&v10 + 1);
  *(void *)int64_t v11 = a5;
  v11[8] = a6;
  if (((a1 ^ a4) & 1) == 0
    && ((a1 >> 8) & 1) == ((a4 >> 8) & 1)
    && ((a1 >> 16) & 1) == ((a4 >> 16) & 1)
    && ((a1 >> 24) & 1) == ((a4 >> 24) & 1)
    && (BYTE4(a1) & 1) == (BYTE4(a4) & 1)
    && ((a1 >> 40) & 1) == ((a4 >> 40) & 1))
  {
    unint64_t v9 = a4 ^ a1;
    if ((v9 & 0xFF000000000000) == 0 && !HIBYTE(v9) && ((a2 ^ a5) & 1) == 0)
    {
      if (v8 == 2)
      {
        if (BYTE1(a5) != 2) {
          return 0;
        }
      }
      else if (BYTE1(a5) == 2 {
             || (sub_10040B48C(v8 & 0xFFFF010101010101, (a3 >> 8) & 1, *(void *)&v11[1] & 0xFFFF010101010101, (a6 >> 8) & 1) & 1) == 0)
      }
      {
        return 0;
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_10040B60C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10040C040();
  uint64_t result = sub_1005E2280();
  uint64_t v7 = result;
  if (v2)
  {
    int v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_100409508(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_10040B684()
{
  unint64_t result = qword_1007148E0;
  if (!qword_1007148E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007148E0);
  }
  return result;
}

unint64_t sub_10040B6DC()
{
  unint64_t result = qword_1007148E8;
  if (!qword_1007148E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007148E8);
  }
  return result;
}

unint64_t sub_10040B734()
{
  unint64_t result = qword_1007148F0;
  if (!qword_1007148F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007148F0);
  }
  return result;
}

unint64_t sub_10040B78C()
{
  unint64_t result = qword_1007148F8;
  if (!qword_1007148F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007148F8);
  }
  return result;
}

unint64_t sub_10040B7E4()
{
  unint64_t result = qword_100714900;
  if (!qword_100714900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714900);
  }
  return result;
}

unint64_t sub_10040B83C()
{
  unint64_t result = qword_100714908;
  if (!qword_100714908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714908);
  }
  return result;
}

unint64_t sub_10040B894()
{
  unint64_t result = qword_100714910;
  if (!qword_100714910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714910);
  }
  return result;
}

uint64_t sub_10040B8E8()
{
  return sub_100007494(&qword_100714918, &qword_100714920);
}

uint64_t initializeBufferWithCopyOfBuffer for Flags(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Flags()
{
  return &type metadata for Flags;
}

unsigned char *storeEnumTagSinglePayload for Flags.JunkStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10040BA1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Flags.JunkStatus()
{
  return &type metadata for Flags.JunkStatus;
}

unsigned char *storeEnumTagSinglePayload for Flags.Label(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10040BB20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Flags.Label()
{
  return &type metadata for Flags.Label;
}

__n128 initializeBufferWithCopyOfBuffer for FlagsWithModifications(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FlagsWithModifications(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[18]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FlagsWithModifications(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagsWithModifications()
{
  return &type metadata for FlagsWithModifications;
}

uint64_t _s16IMAP2Persistence5FlagsVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[9]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s16IMAP2Persistence5FlagsVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagsUpdate()
{
  return &type metadata for FlagsUpdate;
}

uint64_t getEnumTagSinglePayload for FlagsUpdate.Label(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8)
  {
    unsigned int v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 8;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10040BD68);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 8;
  unsigned int v9 = v7 - 8;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for FlagsUpdate.Label(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF8) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v7 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10040BE50);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_10040BE78(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 8) {
    return v1 - 7;
  }
  else {
    return 0;
  }
}

unsigned char *sub_10040BE8C(unsigned char *result, int a2)
{
  if (a2) {
    *__n128 result = a2 + 7;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagsUpdate.Label()
{
  return &type metadata for FlagsUpdate.Label;
}

uint64_t getEnumTagSinglePayload for FlagKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FlagKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10040C008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlagKind()
{
  return &type metadata for FlagKind;
}

unint64_t sub_10040C040()
{
  unint64_t result = qword_1007149B8;
  if (!qword_1007149B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007149B8);
  }
  return result;
}

uint64_t static MessageHeader.== infix(_:_:)()
{
  uint64_t v0 = sub_1005E1710();
  uint64_t v1 = sub_1005E1710();
  if (*(void *)(v0 + 16) == *(void *)(v1 + 16)) {
    char v2 = sub_10040C138(v0, v1);
  }
  else {
    char v2 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10040C138(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000566C(&qword_100714A58);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unsigned int v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000566C(&qword_100714A60);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v55 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)&v51 - v13;
  uint64_t v14 = sub_1005E1700();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  int v54 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v64 = (char *)&v51 - v18;
  uint64_t v19 = sub_10000566C(&qword_100714A68);
  __chkstk_darwin(v19 - 8);
  uint64_t v57 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v15 + 16;
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v59 = *(void *)(a1 + 16);
  uint64_t v60 = v15;
  uint64_t v65 = v15 + 48;
  uint64_t v63 = (uint64_t (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  unint64_t v53 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v61 = a1;
  swift_bridgeObjectRetain();
  uint64_t v68 = a2;
  swift_bridgeObjectRetain();
  unint64_t v21 = 0;
  BOOL v52 = v9;
  while (1)
  {
    if (v59 == v21)
    {
      uint64_t v48 = v58;
      (*v67)(v58, 1, 1, v14);
      uint64_t v49 = (uint64_t)v48;
LABEL_18:
      uint64_t v50 = v57;
      sub_100007A48(v49, &qword_100714A60);
      BOOL v40 = 1;
      (*v56)(v50, 1, 1, v6);
      goto LABEL_19;
    }
    uint64_t v22 = v6;
    uint64_t v62 = v3;
    uint64_t v23 = v60;
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    unint64_t v25 = *(void *)(v60 + 72) * v21;
    Swift::Int v26 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
    uint64_t v27 = v58;
    v26(v58, v61 + v24 + v25, v14);
    uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
    v28(v27, 0, 1, v14);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    if (v29(v27, 1, v14) == 1)
    {
      uint64_t v49 = (uint64_t)v27;
LABEL_17:
      uint64_t v6 = v22;
      goto LABEL_18;
    }
    Swift::Int v30 = v27;
    uint64_t v31 = *v63;
    uint64_t result = (*v63)(v64, v30, v14);
    unint64_t v33 = *(void *)(v68 + 16);
    if (v21 == v33)
    {
      uint64_t v35 = v55;
      v28(v55, 1, 1, v14);
LABEL_16:
      (*(void (**)(char *, uint64_t))(v60 + 8))(v64, v14);
      uint64_t v49 = (uint64_t)v35;
      goto LABEL_17;
    }
    if (v21++ >= v33) {
      break;
    }
    unint64_t v34 = v68 + v24 + v25;
    uint64_t v35 = v55;
    v26(v55, v34, v14);
    v28(v35, 0, 1, v14);
    if (v29(v35, 1, v14) == 1) {
      goto LABEL_16;
    }
    uint64_t v36 = v54;
    v31(v54, v35, v14);
    uint64_t v6 = v22;
    uint64_t v37 = (uint64_t)v57;
    unint64_t v38 = &v57[*(int *)(v22 + 48)];
    v31(v57, v64, v14);
    v31(v38, v36, v14);
    (*v56)((char *)v37, 0, 1, v22);
    int v39 = (*v53)(v37, 1, v22);
    BOOL v40 = v39 == 1;
    if (v39 == 1) {
      goto LABEL_19;
    }
    uint64_t v41 = (uint64_t)v52;
    sub_10040C8C4(v37, (uint64_t)v52);
    uint64_t v42 = v41 + *(int *)(v6 + 48);
    uint64_t v43 = sub_1005E16D0();
    if (v43 != sub_1005E16D0() || (uint64_t v44 = sub_1005E16F0(), v45 = sub_1005E16F0(), v44 != v45))
    {
      sub_100007A48(v41, &qword_100714A58);
      BOOL v40 = 0;
LABEL_19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v40;
    }
    __chkstk_darwin(v45);
    *(&v51 - 2) = v42;
    uint64_t v46 = v62;
    sub_1005E16E0();
    uint64_t v3 = v46;
    char v47 = v69;
    sub_100007A48(v41, &qword_100714A58);
    if ((v47 & 1) == 0) {
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for MessageHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040C788);
}

uint64_t sub_10040C788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MessageHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040C808);
}

uint64_t sub_10040C808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MessageHeader()
{
  uint64_t result = qword_100714A20;
  if (!qword_100714A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10040C8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100714A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10040C92C()
{
  return sub_1004189F8();
}

uint64_t sub_10040C948(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v10 = v9;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin();
  int v39 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v25 - v13;
  __chkstk_darwin();
  unint64_t v32 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v16 - 8);
  uint64_t v31 = v16;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v25 - v17;
  uint64_t v33 = v8;
  uint64_t v19 = sub_1005E23B0();
  if (!v19) {
    return sub_1005E2130();
  }
  Swift::Int v20 = v19;
  Swift::Int v26 = v14;
  uint64_t v42 = sub_1005E2E40();
  uint64_t v34 = sub_1005E2E50();
  sub_1005E2D90(v20);
  BOOL v40 = v18;
  uint64_t result = sub_1005E2390();
  if (v20 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v22 = (void (**)(char *))(v35 + 2);
    ++v35;
    uint64_t v36 = v22;
    uint64_t v23 = v26;
    while (1)
    {
      unint64_t v24 = (void (*)(char *, void))sub_1005E24D0();
      (*v36)(v23);
      v24(v41, 0);
      v37(v23, v39);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v35)(v23, AssociatedTypeWitness);
      sub_1005E2E10();
      sub_1005E23F0();
      if (!--v20)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
        return v42;
      }
    }
    (*v35)(v23, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v39, v28);
  }
  return result;
}

uint64_t sub_10040D8A0()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10040D8B0()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10040D8C0()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_10040D8C8()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10040D8D8()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10040D8E8()
{
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t sub_10040D8F0()
{
  return _swift_deallocObject(v0, 25, 7);
}

int8x16_t sub_10040D900@<Q0>(int8x16_t *a1@<X8>)
{
  int v2 = *(unsigned __int8 *)(v1 + 20);
  int32x2_t v3 = vdup_n_s32((v2 & 1) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  int8x16_t v5 = (int8x16_t)vdupq_n_s64(3uLL);
  v6.i64[1] = v5.i64[1];
  v6.i64[0] = (uint64_t)"YES";
  int8x16_t v7 = (int8x16_t)vdupq_n_s64(2uLL);
  v7.i64[0] = (uint64_t)"NO";
  int8x16_t v8 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v7, v6);
  *(int32x2_t *)v6.i8 = vdup_n_s32(v2 == 2);
  v4.i64[0] = v6.u32[0];
  v4.i64[1] = v6.u32[1];
  v5.i64[0] = (uint64_t)"nil";
  int8x16_t result = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v5, v8);
  *a1 = result;
  a1[1].i8[0] = 2;
  return result;
}

uint64_t sub_10040D9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1005E0E30();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0D20();
  __chkstk_darwin();
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  sub_1005E0CF0();
  sub_1005E0E20();
  swift_retain();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = v12;
  sub_1005E0DB0();
  swift_release();
  sub_100411508((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for OSLogStringAlignment);
  sub_100411508((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for OSLogPrivacy);
  return swift_release();
}

uint64_t sub_10040E738@<X0>(uint64_t (*a1)(void)@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t result = a1();
  int64x2_t v4 = vdupq_n_s64(3uLL);
  v4.i64[0] = (uint64_t)"set";
  switch((char)result)
  {
    case 1:
      int64x2_t v4 = vdupq_n_s64(3uLL);
      int8x16_t v5 = "red";
      goto LABEL_10;
    case 2:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "orange";
      goto LABEL_10;
    case 3:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "yellow";
      goto LABEL_10;
    case 4:
      int64x2_t v4 = vdupq_n_s64(5uLL);
      int8x16_t v5 = "green";
      goto LABEL_10;
    case 5:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "blue";
      goto LABEL_10;
    case 6:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "purple";
      goto LABEL_10;
    case 7:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "gray";
      goto LABEL_10;
    case 8:
      goto LABEL_11;
    default:
      int64x2_t v4 = vdupq_n_s64(5uLL);
      int8x16_t v5 = "clear";
LABEL_10:
      v4.i64[0] = (uint64_t)v5;
LABEL_11:
      *a2 = v4;
      a2[1].i8[0] = 2;
      return result;
  }
}

uint64_t sub_10040EA90(uint64_t a1, uint64_t a2)
{
  sub_1005E0E30();
  __chkstk_darwin();
  int8x16_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0D20();
  __chkstk_darwin();
  int8x16_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_1005E0CF0();
  sub_10018A5D4();
  sub_1005E0DB0();
  sub_100411508((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for OSLogStringAlignment);
  sub_100411508((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for OSLogPrivacy);
  return swift_release();
}

uint64_t sub_10040EDC4(uint64_t (*a1)(void))
{
  uint64_t v11 = a1();
  swift_bridgeObjectRetain();
  sub_100410A78((char **)&v11);
  swift_bridgeObjectRelease();
  int64_t v1 = *(void *)(v11 + 16);
  if (v1)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    sub_10040A758(0, v1, 0);
    uint64_t v2 = 0;
    int32x2_t v3 = v13;
    do
    {
      uint64_t v11 = 35;
      unint64_t v12 = 0xE100000000000000;
      v14._countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v14);
      swift_bridgeObjectRelease();
      uint64_t v4 = v11;
      unint64_t v5 = v12;
      uint64_t v13 = v3;
      unint64_t v7 = v3[2];
      unint64_t v6 = v3[3];
      if (v7 >= v6 >> 1)
      {
        sub_10040A758((char *)(v6 > 1), v7 + 1, 1);
        int32x2_t v3 = v13;
      }
      ++v2;
      v3[2] = v7 + 1;
      uint64_t v8 = &v3[2 * v7];
      v8[4] = v4;
      v8[5] = v5;
    }
    while (v1 != v2);
    swift_release();
  }
  else
  {
    swift_release();
    int32x2_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v11 = (uint64_t)v3;
  sub_10000566C(&qword_1007148D0);
  sub_100411568();
  uint64_t v9 = sub_1005E1A80();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_10040EF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a4;
  sub_1005E0D20();
  __chkstk_darwin();
  unint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0E30();
  __chkstk_darwin();
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31._countAndFlagsBits = sub_1005E1D90("#", 1uLL, 1);
  sub_1005E0E10(v31);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v27 = sub_1002CE3B4();
  int v28 = v11;
  uint64_t v29 = v12;
  uint64_t v30 = v13;
  uint64_t v14 = v27;
  char v15 = v11 & 1;
  char v16 = BYTE1(v11) & 1;
  char v17 = BYTE2(v11) & 1;
  uint64_t v18 = v12;
  uint64_t v19 = v13;
  sub_10018A5D4();
  sub_1002CFCF0();
  v21[2] = v14;
  char v22 = v15;
  char v23 = v16;
  char v24 = v17;
  uint64_t v25 = v18;
  uint64_t v26 = v19;
  sub_1005E0DE0();
  sub_100411508((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for OSLogPrivacy);
  sub_100411508((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for OSLogStringAlignment);
  sub_10003E960(v18);
  return swift_release();
}

uint64_t OSLogInterpolation.appendInterpolation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005E0E30();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0D20();
  __chkstk_darwin();
  int v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a1;
  v12[5] = a2;
  sub_1005E0CF0();
  sub_10018A5D4();
  sub_1005E0DB0();
  sub_100411508((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for OSLogStringAlignment);
  sub_100411508((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for OSLogPrivacy);
  return swift_release();
}

uint64_t sub_10040F314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  int v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)v26 - v12;
  __chkstk_darwin();
  char v15 = (char *)v26 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a3);
  sub_1005E2490();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (sub_1005E23B0() < 6)
  {
    uint64_t v20 = sub_10040C948((void (*)(char *, char *))sub_10040F6D8, 0, AssociatedTypeWitness, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, AssociatedConformanceWitness, (uint64_t)&protocol witness table for Never, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, AssociatedTypeWitness);
    sub_1005E2490();
    uint64_t v19 = sub_10040C948((void (*)(char *, char *))sub_10040F6D8, 0, AssociatedTypeWitness, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, AssociatedConformanceWitness, (uint64_t)&protocol witness table for Never, v18);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, AssociatedTypeWitness);
    swift_bridgeObjectRetain();
    uint64_t v20 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_100408FD4(0, *(void *)(v19 + 16) + 1, 1, v19);
    }
    unint64_t v22 = *(void *)(v20 + 16);
    unint64_t v21 = *(void *)(v20 + 24);
    if (v22 >= v21 >> 1) {
      uint64_t v20 = sub_100408FD4(v21 > 1, v22 + 1, 1, v20);
    }
    *(void *)(v20 + 16) = v22 + 1;
    uint64_t v23 = v20 + 16 * v22;
    *(void *)(v23 + 32) = 10911970;
    *(void *)(v23 + 40) = 0xA300000000000000;
    swift_bridgeObjectRelease();
  }
  v26[0] = v20;
  sub_10000566C(&qword_1007148D0);
  sub_100411568();
  uint64_t v24 = sub_1005E1A80();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, AssociatedTypeWitness);
  return v24;
}

uint64_t sub_10040F6D8@<X0>(void *a1@<X8>)
{
  return sub_10040F6F0(a1);
}

uint64_t sub_10040F6F0@<X0>(void *a1@<X8>)
{
  v3._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 35;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_10040F770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = (void (*)(void))__chkstk_darwin();
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  uint64_t v8 = sub_10040F314((uint64_t)v7, a3, a3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8;
}

uint64_t sub_10040F8C0(void (*a1)(uint64_t))
{
  type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v2 = __chkstk_darwin();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v2);
  uint64_t v5 = Activity.MailboxStatus.debugDescription.getter();
  sub_100411508((uint64_t)v4, type metadata accessor for Activity.MailboxStatus);
  return v5;
}

uint64_t sub_100410824(uint64_t a1, uint64_t a2)
{
  sub_1005E0D20();
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E0E30();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_10018A5D4();
  sub_1002CFCF0();
  sub_1005E0DB0();
  sub_100411508((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for OSLogPrivacy);
  sub_100411508((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for OSLogStringAlignment);
  return swift_release();
}

uint64_t sub_10041097C(void (*a1)(void))
{
  a1();
  if (v1) {
    return 45;
  }
  sub_10000566C(&qword_100714A70);
  sub_1005E2E90();
  return 0;
}

uint64_t sub_100410A78(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100433110((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1004115C4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100410AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = (void (*)(void))__chkstk_darwin();
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  uint64_t v8 = sub_1005E3230();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8;
}

uint64_t sub_100410BD0()
{
  return sub_100410AE4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&type metadata for StaticString);
}

uint64_t sub_100410BE8()
{
  return _swift_deallocObject(v0, 25, 7);
}

int8x16_t sub_100410BF8@<Q0>(int8x16_t *a1@<X8>)
{
  int v2 = *(unsigned __int8 *)(v1 + 21);
  int32x2_t v3 = vdup_n_s32((v2 & 1) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  int8x16_t v5 = (int8x16_t)vdupq_n_s64(3uLL);
  v6.i64[1] = v5.i64[1];
  v6.i64[0] = (uint64_t)"YES";
  int8x16_t v7 = (int8x16_t)vdupq_n_s64(2uLL);
  v7.i64[0] = (uint64_t)"NO";
  int8x16_t v8 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v7, v6);
  *(int32x2_t *)v6.i8 = vdup_n_s32(v2 == 2);
  v4.i64[0] = v6.u32[0];
  v4.i64[1] = v6.u32[1];
  v5.i64[0] = (uint64_t)"nil";
  int8x16_t result = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v5, v8);
  *a1 = result;
  a1[1].i8[0] = 2;
  return result;
}

uint64_t sub_100410C78()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410C88()
{
  return *(unsigned __int8 *)(v0 + 22);
}

uint64_t sub_100410C94()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410CA4()
{
  return *(unsigned __int8 *)(v0 + 23);
}

uint64_t sub_100410CAC@<X0>(int64x2_t *a1@<X8>)
{
  return sub_10040E738(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100410CB4@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  int64x2_t v4 = vdupq_n_s64(3uLL);
  v4.i64[0] = (uint64_t)"nil";
  switch((char)result)
  {
    case 1:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "junk";
      goto LABEL_5;
    case 2:
      int64x2_t v4 = vdupq_n_s64(7uLL);
      int8x16_t v5 = "notJunk";
      goto LABEL_5;
    case 3:
      goto LABEL_6;
    default:
      int64x2_t v4 = vdupq_n_s64(7uLL);
      int8x16_t v5 = "unknown";
LABEL_5:
      v4.i64[0] = (uint64_t)v5;
LABEL_6:
      *a1 = v4;
      a1[1].i8[0] = 2;
      return result;
  }
}

uint64_t sub_100410D70()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410D80()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410D90()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410DA0()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410DB0()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410DC0()
{
  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t sub_100410DC8()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410DD8()
{
  return *(unsigned __int8 *)(v0 + 21);
}

uint64_t sub_100410DE0()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100410DF4()
{
  return _swift_deallocObject(v0, 25, 7);
}

double sub_100410E08@<D0>(int64x2_t *a1@<X8>)
{
  int v3 = (*(unsigned __int8 (**)(void))(v1 + 16))();
  if (v3)
  {
    if (v3 == 1)
    {
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "junk";
    }
    else
    {
      int64x2_t v4 = vdupq_n_s64(7uLL);
      int8x16_t v5 = "notJunk";
    }
  }
  else
  {
    int64x2_t v4 = vdupq_n_s64(7uLL);
    int8x16_t v5 = "unknown";
  }
  v4.i64[0] = (uint64_t)v5;
  *a1 = v4;
  a1[1].i8[0] = 2;
  return *(double *)v4.i64;
}

uint64_t sub_100410E8C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100410EC4@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  int64x2_t v4 = vdupq_n_s64(5uLL);
  v4.i64[0] = (uint64_t)"clear";
  switch((char)result)
  {
    case 1:
      int64x2_t v4 = vdupq_n_s64(3uLL);
      int8x16_t v5 = "red";
      goto LABEL_9;
    case 2:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "orange";
      goto LABEL_9;
    case 3:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "yellow";
      goto LABEL_9;
    case 4:
      int64x2_t v4 = vdupq_n_s64(5uLL);
      int8x16_t v5 = "green";
      goto LABEL_9;
    case 5:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "blue";
      goto LABEL_9;
    case 6:
      int64x2_t v4 = vdupq_n_s64(6uLL);
      int8x16_t v5 = "purple";
      goto LABEL_9;
    case 7:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "gray";
LABEL_9:
      v4.i64[0] = (uint64_t)v5;
      break;
    default:
      break;
  }
  *a1 = v4;
  a1[1].i8[0] = 2;
  return result;
}

uint64_t sub_100410FE0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_100411008()
{
  char v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return Action.Kind.description.getter(v1);
}

uint64_t sub_100411040()
{
  if ((*(uint64_t (**)(void))(v0 + 16))()) {
    return 6581810;
  }
  else {
    return 7631665;
  }
}

uint64_t sub_100411084()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1004110AC()
{
  return sub_10040EDC4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1004110B4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1004110DC()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100411114()
{
  return sub_10040F770(v0[4], v0[5], v0[2]);
}

uint64_t sub_100411120@<X0>(int64x2_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  int64x2_t v4 = vdupq_n_s64(8uLL);
  v4.i64[0] = (uint64_t)"periodic";
  switch((char)result)
  {
    case 1:
      int64x2_t v4 = vdupq_n_s64(4uLL);
      int8x16_t v5 = "push";
      goto LABEL_5;
    case 2:
      int64x2_t v4 = vdupq_n_s64(0xDuLL);
      int8x16_t v5 = "userInitiated";
      goto LABEL_5;
    case 3:
      int64x2_t v4 = vdupq_n_s64(8uLL);
      int8x16_t v5 = "backFill";
LABEL_5:
      v4.i64[0] = (uint64_t)v5;
      break;
    default:
      break;
  }
  *a1 = v4;
  a1[1].i8[0] = 2;
  return result;
}

uint64_t sub_1004111DC()
{
  return sub_10040F8C0(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1004111E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10041120C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041121C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041122C()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t sub_100411234()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 36, 7);
}

uint64_t sub_10041126C()
{
  return sub_1005E1CC0();
}

uint64_t sub_1004112AC()
{
  if (((*(uint64_t (**)(void))(v0 + 16))() & 0x100000000) != 0) {
    return 45;
  }
  else {
    return sub_1005E1CA0();
  }
}

uint64_t sub_100411300()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100411328()
{
  (*(void (**)(void))(v0 + 16))();
  uint64_t v1 = sub_10000566C(&qword_100714A70);
  return MessageIdentifierRange.debugDescription.getter(v1);
}

uint64_t sub_100411370()
{
  return sub_10041097C(*(void (**)(void))(v0 + 16));
}

uint64_t sub_100411378()
{
  char v1 = (*(uint64_t (**)(void))(v0 + 16))();
  uint64_t result = 7105633;
  switch(v1)
  {
    case 1:
      uint64_t result = 0x65766968637261;
      break;
    case 2:
      uint64_t result = 0x737466617264;
      break;
    case 3:
      uint64_t result = 0x64656767616C66;
      break;
    case 4:
      uint64_t result = 1802401130;
      break;
    case 5:
      uint64_t result = 1953391987;
      break;
    case 6:
      uint64_t result = 0x6873617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100411464()
{
  (*(void (**)(void))(v0 + 16))();
  return sub_1005E1CC0();
}

uint64_t sub_1004114A8()
{
  return sub_1004114C8();
}

uint64_t sub_1004114B8()
{
  return sub_1004114C8();
}

uint64_t sub_1004114C8()
{
  (*(void (**)(void))(v0 + 16))();
  return sub_1005E1CC0();
}

uint64_t sub_100411508(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100411568()
{
  unint64_t result = qword_1007148D8;
  if (!qword_1007148D8)
  {
    sub_10000744C(&qword_1007148D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007148D8);
  }
  return result;
}

uint64_t sub_1004115C4(void *a1)
{
  int v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v79 = *(_DWORD *)(v77 + 4 * i);
        uint64_t v80 = v76;
        do
        {
          unsigned int v81 = *(_DWORD *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(_DWORD *)(v77 + v80 + 4) = v81;
          *(_DWORD *)(v77 + v80) = v79;
          v80 -= 4;
        }
        while (v80 != -4);
        v76 += 4;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v93 = result;
    Swift::Int v94 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_1005E2150();
      *(void *)(result + 16) = v6;
      Swift::Int v3 = v94;
      unint64_t v92 = (void *)result;
      char v96 = (char *)(result + 32);
LABEL_13:
      Swift::Int v8 = 0;
      uint64_t v9 = *v2;
      unint64_t v90 = v2;
      uint64_t v91 = *v2 - 4;
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
      uint64_t v95 = *v2;
      while (1)
      {
        Swift::Int v12 = v8++;
        if (v8 < v3)
        {
          unsigned int v13 = *(_DWORD *)(v9 + 4 * v8);
          unsigned int v14 = *(_DWORD *)(v9 + 4 * v12);
          Swift::Int v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            unsigned int v15 = v13;
            while (1)
            {
              unsigned int v16 = *(_DWORD *)(v9 + 4 * v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              unsigned int v15 = v16;
              if (v3 == v8)
              {
                Swift::Int v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              Swift::Int v17 = v8 - 1;
              Swift::Int v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  int v19 = *(_DWORD *)(v9 + 4 * v18);
                  *(_DWORD *)(v9 + 4 * v18) = *(_DWORD *)(v9 + 4 * v17);
                  *(_DWORD *)(v9 + 4 * v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v93)
          {
            Swift::Int v20 = v12 + v93;
            if (__OFADD__(v12, v93)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              Swift::Int v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              unint64_t v21 = (unsigned int *)(v91 + 4 * v8);
              do
              {
                unsigned int v22 = *(_DWORD *)(v9 + 4 * v8);
                Swift::Int v23 = v12;
                uint64_t v24 = v21;
                do
                {
                  unsigned int v25 = *v24;
                  if (v22 >= *v24) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  *uint64_t v24 = v22;
                  v24[1] = v25;
                  --v24;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              Swift::Int v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100432FEC(0, *((void *)v10 + 2) + 1, 1, v10);
          uint64_t v10 = (char *)result;
        }
        unint64_t v27 = *((void *)v10 + 2);
        unint64_t v26 = *((void *)v10 + 3);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v95;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_100432FEC((char *)(v26 > 1), v27 + 1, 1, v10);
          uint64_t v9 = v95;
          uint64_t v10 = (char *)result;
        }
        *((void *)v10 + 2) = v11;
        int v28 = v10 + 32;
        uint64_t v29 = &v10[16 * v27 + 32];
        *(void *)uint64_t v29 = v12;
        *((void *)v29 + 1) = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              uint64_t v35 = &v28[2 * v11];
              uint64_t v36 = *(v35 - 8);
              uint64_t v37 = *(v35 - 7);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(v35 - 6);
              uint64_t v39 = *(v35 - 5);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              uint64_t v43 = &v28[2 * v11 - 4];
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                uint64_t v65 = &v28[2 * v30];
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *((void *)v10 + 4);
                uint64_t v60 = *((void *)v10 + 5);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *((void *)v10 + 4);
              uint64_t v31 = *((void *)v10 + 5);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            uint64_t v48 = &v28[2 * v11 - 4];
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            int v54 = &v28[2 * v30];
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            uint64_t v61 = &v28[2 * v30];
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v70 = &v28[2 * v69];
            uint64_t v71 = *v70;
            uint64_t v72 = v28;
            uint64_t v73 = &v28[2 * v30];
            uint64_t v74 = v73[1];
            uint64_t result = sub_100411C0C((char *)(v9 + 4 * *v70), (char *)(v9 + 4 * *v73), v9 + 4 * v74, v96);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *((void *)v10 + 2)) {
              goto LABEL_118;
            }
            *uint64_t v70 = v71;
            v72[2 * v69 + 1] = v74;
            unint64_t v75 = *((void *)v10 + 2);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            int v28 = v72;
            *((void *)v10 + 2) = v75 - 1;
            uint64_t v9 = v95;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        Swift::Int v3 = v94;
        if (v8 >= v94)
        {
          int8x16_t v7 = v92;
          int v2 = v90;
          goto LABEL_103;
        }
      }
    }
    int8x16_t v7 = _swiftEmptyArrayStorage;
    char v96 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      unint64_t v92 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    unint64_t v92 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = (uint64_t)v10;
        v85 = v10 + 32;
        uint64_t v86 = *(void *)&v10[16 * v83 + 32];
        uint64_t v87 = *(void *)&v10[16 * v11 + 24];
        uint64_t result = sub_100411C0C((char *)(v82 + 4 * v86), (char *)(v82 + 4 * v85[2 * v11 - 2]), v82 + 4 * v87, v96);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1004330E8(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        uint64_t v88 = (void *)(v84 + 32 + 16 * v83);
        *uint64_t v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = (char *)v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    v92[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100411C0C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  int64x2_t v4 = a4;
  uint64_t v6 = __src;
  int8x16_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 3;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 3;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 2;
  if (v10 >= v12 >> 2)
  {
    if (a4 != __src || &__src[4 * v13] <= a4) {
      memmove(a4, __src, 4 * v13);
    }
    unsigned int v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 4) {
      goto LABEL_39;
    }
    Swift::Int v17 = (char *)(a3 - 4);
    Swift::Int v18 = v6;
    while (1)
    {
      int v19 = v17 + 4;
      unsigned int v21 = *((_DWORD *)v18 - 1);
      v18 -= 4;
      unsigned int v20 = v21;
      if (*((_DWORD *)v14 - 1) < v21) {
        break;
      }
      unsigned int v20 = *((_DWORD *)v14 - 1);
      Swift::Int v18 = v6;
      if (v19 != v14)
      {
        v14 -= 4;
LABEL_35:
        *(_DWORD *)Swift::Int v17 = v20;
        goto LABEL_36;
      }
      BOOL v22 = v17 >= v14;
      v14 -= 4;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 4;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4) {
    memmove(a4, __dst, 4 * v10);
  }
  unsigned int v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 4)
  {
    while (1)
    {
      int v15 = *(_DWORD *)v6;
      if (*(_DWORD *)v6 >= *(_DWORD *)v4) {
        break;
      }
      BOOL v16 = v7 == v6;
      v6 += 4;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 4;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    int v15 = *(_DWORD *)v4;
    BOOL v16 = v7 == v4;
    v4 += 4;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(_DWORD *)int8x16_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 3uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFFCLL]) {
    memmove(v6, v4, 4 * (v23 >> 2));
  }
  return 1;
}

uint64_t MailboxOfInterest.id.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MailboxOfInterest.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

void MailboxOfInterest.metadata.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 36);
  uint64_t v3 = *(void *)(v1 + 40);
  char v4 = *(unsigned char *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  char v6 = *(unsigned char *)(v1 + 64);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 32);
  *(unsigned char *)(a1 + 4) = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
}

__n128 MailboxOfInterest.metadata.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  *(unsigned char *)(v1 + 64) = *(unsigned char *)(a1 + 32);
  return result;
}

uint64_t sub_100411F7C(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence17MailboxOfInterestV17LocalModificationO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)a1, *(_DWORD *)(a1 + 8), *(void *)a2, *(_DWORD *)(a2 + 8));
}

unint64_t MailboxOfInterest.localModification.getter()
{
  unint64_t v1 = *(void *)(v0 + 72);
  sub_100007810(v1);
  return v1;
}

unint64_t MailboxOfInterest.localModification.setter(uint64_t a1, int a2)
{
  unint64_t result = sub_1000078B0(*(void *)(v2 + 72));
  *(void *)(v2 + 72) = a1;
  *(_DWORD *)(v2 + 80) = a2;
  return result;
}

unint64_t MailboxOfInterest.latestLocalChange.getter()
{
  return *(unsigned int *)(v0 + 84) | ((unint64_t)*(unsigned __int8 *)(v0 + 88) << 32);
}

uint64_t MailboxOfInterest.latestLocalChange.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 84) = result;
  *(unsigned char *)(v1 + 88) = BYTE4(result) & 1;
  return result;
}

Swift::UInt32 (__swiftcall *MailboxOfInterest.latestLocalChange.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MailboxOfInterest.init(id:name:uidValidity:fetchedWindow:highestModificationSequenceValue:localModification:latestLocalChange:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, int a12, int a13, int a14, char a15)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(_DWORD *)(a9 + 24) = a4;
  *(_DWORD *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 36) = BYTE4(a5) & 1;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7 & 1;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10 & 1;
  *(void *)(a9 + 72) = a11;
  *(_DWORD *)(a9 + 80) = a12;
  *(_DWORD *)(a9 + 84) = a14;
  *(unsigned char *)(a9 + 88) = a15 & 1;
  return result;
}

uint64_t sub_1004120B8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v7[2] = a1[2];
  _OWORD v7[3] = v2;
  v8[0] = a1[4];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 73);
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a2[3];
  v9[2] = a2[2];
  v9[3] = v4;
  v10[0] = a2[4];
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 73);
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return _s16IMAP2Persistence17MailboxOfInterestV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9) & 1;
}

unint64_t MailboxOfInterest.uidValidity.getter()
{
  return *(unsigned int *)(v0 + 32) | ((unint64_t)(*(unsigned char *)(v0 + 36) & 1) << 32);
}

uint64_t MailboxOfInterest.uidValidity.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t *(*MailboxOfInterest.uidValidity.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 32);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + 36);
  return sub_10041218C;
}

uint64_t *sub_10041218C(uint64_t *result)
{
  uint64_t v1 = *result;
  char v2 = *((unsigned char *)result + 12);
  *(_DWORD *)(v1 + 32) = *((_DWORD *)result + 2);
  *(unsigned char *)(v1 + 36) = v2;
  return result;
}

uint64_t MailboxOfInterest.highestModificationSequenceValue.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t MailboxOfInterest.highestModificationSequenceValue.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*MailboxOfInterest.highestModificationSequenceValue.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 16) = v1;
  char v2 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v2;
  return sub_1004121F8;
}

uint64_t sub_1004121F8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 56) = *(void *)result;
  *(unsigned char *)(v1 + 64) = v2;
  return result;
}

void MailboxOfInterest.hash(into:)()
{
  sub_1005E3410(*(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned int *)(v0 + 24) << 32));
}

Swift::Int MailboxOfInterest.hashValue.getter()
{
  sub_1005E33F0();
  sub_1005E3410(*(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned int *)(v0 + 24) << 32));
  return sub_1005E3470();
}

Swift::Int sub_100412288()
{
  uint64_t v1 = *(unsigned int *)(v0 + 24);
  sub_1005E33F0();
  sub_1005E3410(v1 | (v1 << 32));
  return sub_1005E3470();
}

Swift::Int sub_1004122D0()
{
  uint64_t v1 = *(unsigned int *)(v0 + 24);
  sub_1005E33F0();
  sub_1005E3410(v1 | (v1 << 32));
  return sub_1005E3470();
}

uint64_t sub_100412314@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t _s16IMAP2Persistence17MailboxOfInterestV17LocalModificationO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, int a2, unint64_t a3, int a4)
{
  if (a1)
  {
    if (a1 == 1)
    {
      if (a3 == 1) {
        return 1;
      }
    }
    else if (a1 == 2)
    {
      if (a3 == 2) {
        return 1;
      }
    }
    else if (a3 >= 3 && a2 == a4 && sub_100357CFC(a1, a3))
    {
      return 1;
    }
  }
  else if (!a3)
  {
    return 1;
  }
  return 0;
}

uint64_t _s16IMAP2Persistence17MailboxOfInterestV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 0;
  }
  if (!_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(*(void *)a1, *(void *)a2)) {
    return 0;
  }
  if ((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned int *)(a1 + 24) << 32)) != (*(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned int *)(a2 + 24) << 32))) {
    return 0;
  }
  if (!sub_100357CFC(*(void *)(a1 + 16), *(void *)(a2 + 16))) {
    return 0;
  }
  long long v4 = *(_OWORD *)(a1 + 48);
  v10[0] = *(_OWORD *)(a1 + 32);
  v10[1] = v4;
  char v11 = *(unsigned char *)(a1 + 64);
  long long v5 = *(_OWORD *)(a2 + 48);
  v8[0] = *(_OWORD *)(a2 + 32);
  v8[1] = v5;
  char v9 = *(unsigned char *)(a2 + 64);
  if (!_s16IMAP2Persistence15MailboxMetadataV23__derived_struct_equalsySbAC_ACtFZ_0((BOOL)v10, (uint64_t)v8)
    || (_s16IMAP2Persistence17MailboxOfInterestV17LocalModificationO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)(a1 + 72), *(_DWORD *)(a1 + 80), *(void *)(a2 + 72), *(_DWORD *)(a2 + 80)) & 1) == 0)
  {
    return 0;
  }
  char v6 = *(unsigned char *)(a2 + 88);
  if (*(unsigned char *)(a1 + 88))
  {
    if ((*(unsigned char *)(a2 + 88) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 84) != *(_DWORD *)(a2 + 84)) {
      char v6 = 1;
    }
    if (v6) {
      return 0;
    }
  }
  return 1;
}

unint64_t sub_100412490()
{
  unint64_t result = qword_100714A78;
  if (!qword_100714A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714A78);
  }
  return result;
}

unint64_t sub_1004124E8()
{
  unint64_t result = qword_100714A80;
  if (!qword_100714A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714A80);
  }
  return result;
}

unint64_t destroy for MailboxOfInterest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 72);
  if (result >= 3)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MailboxOfInterest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = a2 + 72;
  unint64_t v6 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 >= 3)
  {
    *(void *)(a1 + 72) = v6;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)(a1 + 72) = *(void *)v7;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(v7 + 8);
  }
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for MailboxOfInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = (void *)(a1 + 72);
  char v9 = (void *)(a2 + 72);
  unint64_t v8 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) >= 3uLL)
  {
    if (v8 >= 3)
    {
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    else
    {
      sub_100412788(a1 + 72);
      int v11 = *(_DWORD *)(a2 + 80);
      *uint64_t v7 = *v9;
      *(_DWORD *)(a1 + 80) = v11;
    }
  }
  else if (v8 >= 3)
  {
    *(void *)(a1 + 72) = v8;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = *v9;
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *uint64_t v7 = v10;
  }
  int v12 = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 84) = v12;
  return a1;
}

uint64_t sub_100412788(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100714A88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 initializeWithTake for MailboxOfInterest(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MailboxOfInterest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(a2 + 72);
  unint64_t v6 = *(void *)(a1 + 72);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (v6 >= 3)
  {
    if (v5 >= 3)
    {
      *(void *)(a1 + 72) = v5;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_6;
    }
    sub_100412788(a1 + 72);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
LABEL_6:
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxOfInterest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailboxOfInterest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxOfInterest()
{
  return &type metadata for MailboxOfInterest;
}

uint64_t sub_1004129A4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(void *)a1 = *(void *)a2;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MailboxOfInterest.LocalModification(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    unint64_t v6 = *(void *)a2;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
    *(void *)a1 = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t initializeWithTake for MailboxOfInterest.LocalModification(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t assignWithTake for MailboxOfInterest.LocalModification(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(void *)a1 = *(void *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MailboxOfInterest.LocalModification(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 12)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MailboxOfInterest.LocalModification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 12) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_100412BCC(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(_DWORD *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MailboxOfInterest.LocalModification()
{
  return &type metadata for MailboxOfInterest.LocalModification;
}

uint64_t sub_100412BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      unsigned int v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        sub_100400248(v3, v10);
        sub_100400248(v4, v11);
        sub_100416298(v10, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1003FFBF0);
        sub_100416298(v11, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1003FFBF0);
        char v6 = _s16IMAP2Persistence11CredentialsO21__derived_enum_equalsySbAC_ACtFZ_0(v10, v11);
        sub_100416298(v11, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1003FFD68);
        sub_100416298(v10, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1003FFD68);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 5;
        v4 += 5;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_100412D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v56 = a2 + 32;
    uint64_t v57 = a1 + 32;
    while (1)
    {
      uint64_t v4 = v57 + 96 * v3;
      uint64_t v5 = v56 + 96 * v3;
      if (*(void *)(v4 + 8) != *(void *)(v5 + 8)) {
        break;
      }
      char v6 = *(unsigned __int8 **)v4;
      uint64_t v7 = *(unsigned __int8 **)v5;
      uint64_t v8 = *(void *)(*(void *)v4 + 16);
      if (v8 != *(void *)(*(void *)v5 + 16)) {
        break;
      }
      uint64_t result = *(void *)(v4 + 16);
      uint64_t v10 = *(unsigned int *)(v4 + 24);
      int v11 = *(_DWORD *)(v4 + 32);
      char v12 = *(unsigned char *)(v4 + 36);
      uint64_t v13 = *(void *)(v4 + 40);
      char v14 = *(unsigned char *)(v4 + 48);
      uint64_t v15 = *(void *)(v4 + 56);
      char v16 = *(unsigned char *)(v4 + 64);
      uint64_t v17 = *(void *)(v4 + 72);
      uint64_t v18 = *(unsigned int *)(v4 + 80);
      int v19 = *(_DWORD *)(v4 + 84);
      char v20 = *(unsigned char *)(v4 + 88);
      uint64_t v21 = *(void *)(v5 + 16);
      uint64_t v22 = *(unsigned int *)(v5 + 24);
      int v23 = *(_DWORD *)(v5 + 32);
      int v24 = *(unsigned __int8 *)(v5 + 36);
      uint64_t v25 = *(void *)(v5 + 40);
      int v26 = *(unsigned __int8 *)(v5 + 48);
      uint64_t v27 = *(void *)(v5 + 56);
      char v28 = *(unsigned char *)(v5 + 64);
      unint64_t v29 = *(void *)(v5 + 72);
      uint64_t v30 = *(unsigned int *)(v5 + 80);
      int v55 = *(_DWORD *)(v5 + 84);
      int v31 = *(unsigned __int8 *)(v5 + 88);
      if (v8 && v6 != v7)
      {
        if (v6[32] != v7[32]) {
          return 0;
        }
        if (v8 != 1)
        {
          if (v6[33] != v7[33]) {
            return 0;
          }
          uint64_t v35 = v6 + 34;
          uint64_t v36 = v7 + 34;
          for (uint64_t i = v8 - 2; i; --i)
          {
            int v39 = *v35++;
            int v38 = v39;
            int v40 = *v36++;
            if (v38 != v40) {
              return 0;
            }
          }
        }
      }
      if ((v10 | (v10 << 32)) != (v22 | (v22 << 32))) {
        break;
      }
      uint64_t v32 = *(void *)(result + 16);
      if (v32 != *(void *)(v21 + 16)) {
        break;
      }
      if (v32 && result != v21)
      {
        if (*(unsigned __int8 *)(result + 32) != *(unsigned __int8 *)(v21 + 32)) {
          return 0;
        }
        if (v32 != 1)
        {
          if (*(unsigned __int8 *)(result + 33) != *(unsigned __int8 *)(v21 + 33)) {
            return 0;
          }
          if (v32 != 2)
          {
            if (*(unsigned __int8 *)(result + 34) != *(unsigned __int8 *)(v21 + 34)) {
              return 0;
            }
            uint64_t v43 = (unsigned __int8 *)(result + 35);
            uint64_t v44 = (unsigned __int8 *)(v21 + 35);
            for (uint64_t j = v32 - 3; j; --j)
            {
              uint64_t result = 0;
              int v47 = *v43++;
              int v46 = v47;
              int v48 = *v44++;
              if (v46 != v48) {
                return result;
              }
            }
          }
        }
      }
      if (v12)
      {
        if (!v24) {
          return 0;
        }
      }
      else
      {
        if (v11 == v23) {
          char v33 = v24;
        }
        else {
          char v33 = 1;
        }
        if (v33) {
          return 0;
        }
      }
      if (v14)
      {
        if (!v26) {
          return 0;
        }
      }
      else
      {
        if (v25 == v13) {
          char v34 = v26;
        }
        else {
          char v34 = 1;
        }
        if (v34) {
          return 0;
        }
      }
      if (v16)
      {
        if ((v28 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v28) {
          return 0;
        }
        if ((v27 | v15) < 0)
        {
          __break(1u);
          return result;
        }
        if (v27 != v15) {
          return 0;
        }
      }
      if (v17)
      {
        if (v17 == 1)
        {
          if (v29 != 1) {
            return 0;
          }
        }
        else if (v17 == 2)
        {
          if (v29 != 2) {
            return 0;
          }
        }
        else
        {
          if (v29 < 3) {
            return 0;
          }
          if ((v18 | (v18 << 32)) != (v30 | (v30 << 32))) {
            return 0;
          }
          uint64_t v41 = *(void *)(v17 + 16);
          if (v41 != *(void *)(v29 + 16)) {
            return 0;
          }
          if (v41 && v17 != v29)
          {
            if (*(unsigned __int8 *)(v17 + 32) != *(unsigned __int8 *)(v29 + 32)) {
              return 0;
            }
            if (v41 != 1)
            {
              if (*(unsigned __int8 *)(v17 + 33) != *(unsigned __int8 *)(v29 + 33)) {
                return 0;
              }
              if (v41 != 2)
              {
                if (*(unsigned __int8 *)(v17 + 34) != *(unsigned __int8 *)(v29 + 34)) {
                  return 0;
                }
                uint64_t v49 = (unsigned __int8 *)(v17 + 35);
                uint64_t v50 = (unsigned __int8 *)(v29 + 35);
                for (uint64_t k = v41 - 3; k; --k)
                {
                  uint64_t result = 0;
                  int v53 = *v49++;
                  int v52 = v53;
                  int v54 = *v50++;
                  if (v52 != v54) {
                    return result;
                  }
                }
              }
            }
          }
        }
      }
      else if (v29)
      {
        return 0;
      }
      if (v20)
      {
        if (!v31) {
          return 0;
        }
      }
      else
      {
        if (v19 == v55) {
          char v42 = v31;
        }
        else {
          char v42 = 1;
        }
        if (v42) {
          return 0;
        }
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_100413060(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a1 + 32)) {
    return 0;
  }
  uint64_t v3 = 0;
  do
  {
    if (*(unsigned char *)(a2 + v3 + 48) == 1)
    {
      if (!*(unsigned char *)(a1 + v3 + 48)) {
        return 0;
      }
    }
    else if ((*(unsigned char *)(a1 + v3 + 48) & 1) != 0 || *(void *)(a1 + v3 + 40) != *(void *)(a2 + v3 + 40))
    {
      return 0;
    }
    if ((*(unsigned __int8 *)(a1 + v3 + 49) ^ *(unsigned __int8 *)(a2 + v3 + 49))) {
      break;
    }
    if (!--v2) {
      return 1;
    }
    uint64_t v4 = a1 + v3;
    uint64_t v5 = a2 + v3;
    v3 += 24;
  }
  while (*(_DWORD *)(v5 + 56) == *(_DWORD *)(v4 + 56));
  return 0;
}

uint64_t sub_100413120(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v7 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0) {
    return 0;
  }
  uint64_t v8 = a1 + 5;
  char v9 = a2 + 5;
  uint64_t v10 = v2 - 1;
  do
  {
    BOOL v11 = v10 == 0;
    if (!v10) {
      break;
    }
    uint64_t v13 = *v8++;
    uint64_t v12 = v13;
    uint64_t v14 = *v9++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v15 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v12, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v10;
  }
  while ((v15 & 1) != 0);
  return v11;
}

uint64_t sub_100413220(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v5 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      v3 += 2;
      v4 += 2;
      uint64_t v10 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
          }
          uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_13:
          sub_100008D24(v6, v5);
          sub_100008D24(v6, v5);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v6 + 16);
          uint64_t v11 = *(void *)(v6 + 24);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_13;
          }
          goto LABEL_123;
        case 3uLL:
          break;
        default:
          uint64_t v10 = BYTE6(v5);
          break;
      }
      unint64_t v13 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_124;
          }
          uint64_t v14 = (int)v14;
LABEL_19:
          if (v10 != v14)
          {
LABEL_120:
            sub_1000094D4(v6, v5);
            sub_1000094D4(v6, v5);
            return 0;
          }
          if (v10 < 1)
          {
LABEL_6:
            sub_1000094D4(v6, v5);
            sub_1000094D4(v6, v5);
          }
          else
          {
            switch((int)v9)
            {
              case 1:
                uint64_t v71 = v3;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_126;
                }
                sub_100008D24(v8, v7);
                sub_100008D24(v6, v5);
                sub_100008D24(v8, v7);
                int v23 = (char *)sub_1005E0550();
                if (!v23) {
                  goto LABEL_33;
                }
                uint64_t v24 = sub_1005E0580();
                if (__OFSUB__((int)v6, v24)) {
                  goto LABEL_128;
                }
                v23 += (int)v6 - v24;
LABEL_33:
                sub_1005E0570();
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v23) {
                    goto LABEL_156;
                  }
                  int v29 = memcmp(v23, __s1, BYTE6(v7));
LABEL_102:
                  sub_1000094D4(v6, v5);
                  goto LABEL_103;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_137;
                  }
                  swift_retain();
                  uint64_t v25 = (char *)sub_1005E0550();
                  if (v25)
                  {
                    uint64_t v26 = sub_1005E0580();
                    if (__OFSUB__((int)v8, v26)) {
                      goto LABEL_144;
                    }
                    v25 += (int)v8 - v26;
                  }
                  uint64_t v27 = sub_1005E0570();
                  if (v27 >= (v8 >> 32) - (int)v8) {
                    size_t v28 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v28 = v27;
                  }
                  if (!v23) {
                    goto LABEL_146;
                  }
                  if (!v25) {
                    goto LABEL_147;
                  }
                  int v29 = memcmp(v23, v25, v28);
                  sub_1000094D4(v8, v7);
                  goto LABEL_102;
                }
                uint64_t v62 = *(void *)(v8 + 16);
                unint64_t v69 = *(void **)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1005E0550();
                if (v63)
                {
                  uint64_t v64 = sub_1005E0580();
                  if (__OFSUB__(v62, v64)) {
                    goto LABEL_143;
                  }
                  v63 += v62 - v64;
                }
                if (__OFSUB__(v69, v62)) {
                  goto LABEL_138;
                }
                uint64_t v65 = sub_1005E0570();
                if (v65 >= (uint64_t)v69 - v62) {
                  size_t v66 = (size_t)v69 - v62;
                }
                else {
                  size_t v66 = v65;
                }
                uint64_t v3 = v71;
                if (!v23) {
                  goto LABEL_157;
                }
                if (!v63) {
                  goto LABEL_158;
                }
                int v53 = memcmp(v23, v63, v66);
                swift_release();
                swift_release();
                sub_1000094D4(v6, v5);
LABEL_116:
                sub_1000094D4(v8, v7);
LABEL_117:
                sub_1000094D4(v6, v5);
                sub_1000094D4(v8, v7);
                sub_1000094D4(v6, v5);
                if (v53) {
                  return 0;
                }
                break;
              case 2:
                uint64_t v72 = v3;
                uint64_t v30 = *(void *)(v6 + 16);
                sub_100008D24(v8, v7);
                sub_100008D24(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_1005E0550();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_1005E0580();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_127;
                  }
                  uint64_t v68 = (void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v68 = 0;
                }
                sub_1005E0570();
                uint64_t v3 = v72;
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v68) {
                    goto LABEL_153;
                  }
                  int v53 = memcmp(v68, __s1, BYTE6(v7));
                  swift_release();
                  swift_release();
                  goto LABEL_116;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_133;
                  }
                  swift_retain();
                  int v39 = (char *)sub_1005E0550();
                  if (v39)
                  {
                    uint64_t v40 = sub_1005E0580();
                    if (__OFSUB__((int)v8, v40)) {
                      goto LABEL_142;
                    }
                    v39 += (int)v8 - v40;
                  }
                  uint64_t v41 = sub_1005E0570();
                  if (v41 >= (v8 >> 32) - (int)v8) {
                    size_t v42 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v42 = v41;
                  }
                  if (!v68) {
                    goto LABEL_149;
                  }
                  uint64_t v3 = v72;
                  if (!v39) {
                    goto LABEL_150;
                  }
                  int v29 = memcmp(v68, v39, v42);
                  sub_1000094D4(v8, v7);
                  swift_release();
                  swift_release();
LABEL_103:
                  sub_1000094D4(v8, v7);
LABEL_104:
                  sub_1000094D4(v6, v5);
                  sub_1000094D4(v8, v7);
                  sub_1000094D4(v6, v5);
                  if (v29) {
                    return 0;
                  }
                }
                else
                {
                  uint64_t v55 = *(void *)(v8 + 16);
                  uint64_t v54 = *(void *)(v8 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v56 = (char *)sub_1005E0550();
                  if (v56)
                  {
                    uint64_t v57 = sub_1005E0580();
                    if (__OFSUB__(v55, v57)) {
                      goto LABEL_141;
                    }
                    v56 += v55 - v57;
                  }
                  BOOL v17 = __OFSUB__(v54, v55);
                  int64_t v58 = v54 - v55;
                  if (v17) {
                    goto LABEL_136;
                  }
                  uint64_t v59 = sub_1005E0570();
                  if (v59 >= v58) {
                    size_t v60 = v58;
                  }
                  else {
                    size_t v60 = v59;
                  }
                  uint64_t v3 = v72;
                  if (!v68) {
                    goto LABEL_154;
                  }
                  if (!v56) {
                    goto LABEL_155;
                  }
                  int v61 = memcmp(v68, v56, v60);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1000094D4(v8, v7);
                  sub_1000094D4(v6, v5);
                  sub_1000094D4(v8, v7);
                  sub_1000094D4(v6, v5);
                  if (v61) {
                    return 0;
                  }
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_58;
                }
                uint64_t v70 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_130;
                  }
                  sub_100008D24(v8, v7);
                  uint64_t v34 = sub_1005E0550();
                  if (!v34) {
                    goto LABEL_148;
                  }
                  uint64_t v20 = v34;
                  uint64_t v35 = sub_1005E0580();
                  uint64_t v22 = (int)v8 - v35;
                  if (__OFSUB__((int)v8, v35)) {
                    goto LABEL_132;
                  }
LABEL_53:
                  uint64_t v36 = sub_1005E0570();
                  if (v36 >= v18) {
                    size_t v37 = v18;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v20 + v22), v37);
                  sub_1000094D4(v6, v5);
                  sub_1000094D4(v8, v7);
                  sub_1000094D4(v6, v5);
                  uint64_t v3 = v70;
                  if (v38) {
                    return 0;
                  }
                  break;
                }
                uint64_t v49 = *(void *)(v8 + 16);
                uint64_t v50 = *(void *)(v8 + 24);
                sub_100008D24(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v45 = (char *)sub_1005E0550();
                if (v45)
                {
                  uint64_t v51 = sub_1005E0580();
                  if (__OFSUB__(v49, v51)) {
                    goto LABEL_140;
                  }
                  v45 += v49 - v51;
                }
                BOOL v17 = __OFSUB__(v50, v49);
                int64_t v47 = v50 - v49;
                if (v17) {
                  goto LABEL_135;
                }
                uint64_t v48 = sub_1005E0570();
                uint64_t v3 = v70;
                if (!v45) {
                  goto LABEL_152;
                }
LABEL_83:
                if (v48 >= v47) {
                  size_t v52 = v47;
                }
                else {
                  size_t v52 = v48;
                }
                int v53 = memcmp(__s1, v45, v52);
                swift_release();
                swift_release();
                goto LABEL_117;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_58:
                  uint64_t __s2 = v8;
                  __int16 v74 = v7;
                  char v75 = BYTE2(v7);
                  char v76 = BYTE3(v7);
                  char v77 = BYTE4(v7);
                  char v78 = BYTE5(v7);
                  sub_100008D24(v8, v7);
                  int v29 = memcmp(__s1, &__s2, BYTE6(v7));
                  goto LABEL_104;
                }
                uint64_t v70 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_129;
                  }
                  sub_100008D24(v8, v7);
                  uint64_t v19 = sub_1005E0550();
                  if (!v19)
                  {
                    sub_1005E0570();
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    sub_1005E0570();
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
                    JUMPOUT(0x100413C24);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_1005E0580();
                  uint64_t v22 = (int)v8 - v21;
                  if (__OFSUB__((int)v8, v21)) {
                    goto LABEL_131;
                  }
                  goto LABEL_53;
                }
                uint64_t v43 = *(void *)(v8 + 16);
                uint64_t v44 = *(void *)(v8 + 24);
                sub_100008D24(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v45 = (char *)sub_1005E0550();
                if (v45)
                {
                  uint64_t v46 = sub_1005E0580();
                  if (__OFSUB__(v43, v46)) {
                    goto LABEL_139;
                  }
                  v45 += v43 - v46;
                }
                BOOL v17 = __OFSUB__(v44, v43);
                int64_t v47 = v44 - v43;
                if (v17) {
                  goto LABEL_134;
                }
                uint64_t v48 = sub_1005E0570();
                uint64_t v3 = v70;
                if (!v45) {
                  goto LABEL_151;
                }
                goto LABEL_83;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v8 + 16);
          uint64_t v15 = *(void *)(v8 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_19;
          }
          goto LABEL_125;
        case 3uLL:
          if (!v10) {
            goto LABEL_6;
          }
          goto LABEL_120;
        default:
          uint64_t v14 = BYTE6(v7);
          goto LABEL_19;
      }
    }
  }
  return 1;
}

uint64_t sub_100413C54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  for (uint64_t i = 0; ; i += 32)
  {
    uint64_t result = 0;
    uint64_t v7 = a1 + i;
    uint64_t v8 = a2 + i;
    if (*(_DWORD *)(a2 + i + 32) != *(_DWORD *)(a1 + i + 32)
      || ((*(unsigned __int8 *)(v7 + 36) ^ *(unsigned __int8 *)(v8 + 36)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 37) ^ *(unsigned __int8 *)(v8 + 37)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 38) ^ *(unsigned __int8 *)(v8 + 38)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 39) ^ *(unsigned __int8 *)(v8 + 39)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 40) ^ *(unsigned __int8 *)(v8 + 40)) & 1) != 0
      || ((*(unsigned __int8 *)(v7 + 41) ^ *(unsigned __int8 *)(v8 + 41)) & 1) != 0
      || *(unsigned __int8 *)(v7 + 42) != *(unsigned __int8 *)(v8 + 42)
      || *(unsigned __int8 *)(v7 + 43) != *(unsigned __int8 *)(v8 + 43)
      || ((*(unsigned __int8 *)(v7 + 44) ^ *(unsigned __int8 *)(v8 + 44)) & 1) != 0)
    {
      break;
    }
    uint64_t v9 = *(void *)(v7 + 45);
    Swift::Int v10 = *(void *)(v7 + 56);
    unint64_t v11 = *(void *)(v8 + 45);
    if (v9 == 2)
    {
      if (v11 != 2) {
        return 0;
      }
    }
    else
    {
      if (v11 == 2) {
        return 0;
      }
      uint64_t result = 0;
      BOOL v12 = (*(unsigned char *)(v7 + 53) & 1) == 0;
      if (((v9 & 1) == 0) == (v11 & 1)) {
        return result;
      }
      if (((v9 & 0x100) == 0) == ((v11 >> 8) & 1)) {
        return result;
      }
      if (((v9 & 0x10000) == 0) == ((v11 >> 16) & 1)) {
        return result;
      }
      if (((v9 & 0x1000000) == 0) == ((v11 >> 24) & 1)) {
        return result;
      }
      if (((v9 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(v11) & 1)) {
        return result;
      }
      if (((v9 & 0x10000000000) == 0) == ((v11 >> 40) & 1)) {
        return result;
      }
      unint64_t v13 = v11 ^ v9;
      if ((v13 & 0xFF000000000000) != 0 || HIBYTE(v13) || ((v12 ^ *(unsigned __int8 *)(v8 + 53)) & 1) == 0) {
        return result;
      }
    }
    if ((sub_100013570(v10, *(void *)(v8 + 56)) & 1) == 0) {
      return 0;
    }
    if (!--v2) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_100413E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v84 = a2 + 32;
    uint64_t v85 = a1 + 32;
    uint64_t v83 = *(void *)(a1 + 16);
    while (1)
    {
      unint64_t v5 = (unsigned __int8 *)(v85 + 40 * v3);
      uint64_t v6 = (unsigned __int8 *)(v84 + 40 * v3);
      if (*v5 != *v6) {
        return 0;
      }
      if (*((_DWORD *)v6 + 1) != *((_DWORD *)v5 + 1)) {
        return 0;
      }
      if ((*((unsigned int *)v5 + 4) | ((unint64_t)*((unsigned int *)v5 + 4) << 32)) != (*((unsigned int *)v6 + 4) | ((unint64_t)*((unsigned int *)v6 + 4) << 32))) {
        return 0;
      }
      uint64_t v7 = *((void *)v5 + 1);
      uint64_t v8 = *((void *)v6 + 1);
      uint64_t v9 = *(void *)(v7 + 16);
      if (v9 != *(void *)(v8 + 16)) {
        return 0;
      }
      uint64_t v11 = *((void *)v5 + 3);
      unint64_t v10 = *((void *)v5 + 4);
      uint64_t v13 = *((void *)v6 + 3);
      unint64_t v12 = *((void *)v6 + 4);
      if (v9) {
        BOOL v14 = v7 == v8;
      }
      else {
        BOOL v14 = 1;
      }
      if (!v14)
      {
        if (*(unsigned __int8 *)(v7 + 32) != *(unsigned __int8 *)(v8 + 32)) {
          return 0;
        }
        if (v9 != 1)
        {
          if (*(unsigned __int8 *)(v7 + 33) != *(unsigned __int8 *)(v8 + 33)) {
            return 0;
          }
          if (v9 != 2)
          {
            if (*(unsigned __int8 *)(v7 + 34) != *(unsigned __int8 *)(v8 + 34)) {
              return 0;
            }
            uint64_t v45 = (unsigned __int8 *)(v7 + 35);
            uint64_t v46 = (unsigned __int8 *)(v8 + 35);
            for (uint64_t i = v9 - 3; i; --i)
            {
              int v49 = *v45++;
              int v48 = v49;
              int v50 = *v46++;
              if (v48 != v50) {
                return 0;
              }
            }
          }
        }
      }
      uint64_t v15 = v3 + 1;
      uint64_t v16 = 0;
      switch(v10 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v11), v11))
          {
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
          }
          uint64_t v16 = HIDWORD(v11) - (int)v11;
LABEL_26:
          sub_100008D24(v11, v10);
          break;
        case 2uLL:
          uint64_t v18 = *(void *)(v11 + 16);
          uint64_t v17 = *(void *)(v11 + 24);
          uint64_t v16 = v17 - v18;
          if (!__OFSUB__(v17, v18)) {
            goto LABEL_26;
          }
          goto LABEL_140;
        case 3uLL:
          break;
        default:
          uint64_t v16 = BYTE6(v10);
          break;
      }
      uint64_t v86 = v15;
      unint64_t v19 = v12 >> 62;
      switch(v12 >> 62)
      {
        case 1uLL:
          LODWORD(v20) = HIDWORD(v13) - v13;
          if (__OFSUB__(HIDWORD(v13), v13)) {
            goto LABEL_141;
          }
          uint64_t v20 = (int)v20;
LABEL_32:
          if (v16 != v20)
          {
LABEL_136:
            sub_1000094D4(v11, v10);
            return 0;
          }
          if (v16 < 1)
          {
LABEL_7:
            sub_1000094D4(v11, v10);
          }
          else
          {
            switch(v10 >> 62)
            {
              case 1uLL:
                if ((int)v11 > v11 >> 32) {
                  goto LABEL_143;
                }
                swift_bridgeObjectRetain();
                sub_100008D24(v11, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v13, v12);
                sub_100008D24(v13, v12);
                int v29 = (char *)sub_1005E0550();
                if (!v29) {
                  goto LABEL_46;
                }
                uint64_t v30 = sub_1005E0580();
                if (__OFSUB__((int)v11, v30)) {
                  goto LABEL_145;
                }
                v29 += (int)v11 - v30;
LABEL_46:
                uint64_t v2 = v83;
                sub_1005E0570();
                if (!v19)
                {
                  __s1[0] = v13;
                  LOWORD(__s1[1]) = v12;
                  BYTE2(__s1[1]) = BYTE2(v12);
                  BYTE3(__s1[1]) = BYTE3(v12);
                  BYTE4(__s1[1]) = BYTE4(v12);
                  BYTE5(__s1[1]) = BYTE5(v12);
                  if (!v29) {
                    goto LABEL_172;
                  }
                  int v35 = memcmp(v29, __s1, BYTE6(v12));
                  goto LABEL_120;
                }
                if (v19 == 1)
                {
                  if (v13 >> 32 < (int)v13) {
                    goto LABEL_154;
                  }
                  swift_retain();
                  uint64_t v31 = (char *)sub_1005E0550();
                  if (v31)
                  {
                    uint64_t v32 = sub_1005E0580();
                    if (__OFSUB__((int)v13, v32)) {
                      goto LABEL_161;
                    }
                    v31 += (int)v13 - v32;
                  }
                  uint64_t v33 = sub_1005E0570();
                  if (v33 >= (v13 >> 32) - (int)v13) {
                    size_t v34 = (v13 >> 32) - (int)v13;
                  }
                  else {
                    size_t v34 = v33;
                  }
                  if (!v29)
                  {
                    __break(1u);
LABEL_163:
                    __break(1u);
LABEL_164:
                    sub_1005E0570();
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    sub_1005E0570();
                    __break(1u);
                    JUMPOUT(0x100414A0CLL);
                  }
                  uint64_t v2 = v83;
                  if (!v31) {
                    goto LABEL_163;
                  }
                  int v35 = memcmp(v29, v31, v34);
                  sub_1000094D4(v13, v12);
                  goto LABEL_120;
                }
                uint64_t v75 = *(void *)(v13 + 16);
                uint64_t v82 = *(char **)(v13 + 24);
                swift_retain();
                swift_retain();
                uint64_t v76 = sub_1005E0550();
                if (v76)
                {
                  uint64_t v77 = sub_1005E0580();
                  if (__OFSUB__(v75, v77)) {
                    goto LABEL_160;
                  }
                  v76 += v75 - v77;
                }
                if (__OFSUB__(v82, v75)) {
                  goto LABEL_155;
                }
                uint64_t v78 = sub_1005E0570();
                if (v78 >= (uint64_t)&v82[-v75]) {
                  unsigned int v79 = &v82[-v75];
                }
                else {
                  unsigned int v79 = (char *)v78;
                }
                uint64_t v65 = v29;
                uint64_t v2 = v83;
                if (!v29) {
                  goto LABEL_173;
                }
                if (!v76) {
                  goto LABEL_174;
                }
                size_t v64 = (size_t)v79;
                size_t v66 = (const void *)v76;
LABEL_133:
                int v67 = memcmp(v65, v66, v64);
                swift_release();
                goto LABEL_134;
              case 2uLL:
                uint64_t v36 = *(void *)(v11 + 16);
                swift_bridgeObjectRetain();
                sub_100008D24(v11, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v13, v12);
                sub_100008D24(v13, v12);
                swift_retain();
                swift_retain();
                uint64_t v37 = sub_1005E0550();
                if (v37)
                {
                  uint64_t v38 = v37;
                  uint64_t v39 = sub_1005E0580();
                  if (__OFSUB__(v36, v39)) {
                    goto LABEL_144;
                  }
                  unsigned int v81 = (void *)(v38 + v36 - v39);
                }
                else
                {
                  unsigned int v81 = 0;
                }
                sub_1005E0570();
                uint64_t v2 = v83;
                if (v19)
                {
                  if (v19 == 1)
                  {
                    if (v13 >> 32 < (int)v13) {
                      goto LABEL_148;
                    }
                    swift_retain();
                    uint64_t v51 = (char *)sub_1005E0550();
                    if (v51)
                    {
                      uint64_t v52 = sub_1005E0580();
                      if (__OFSUB__((int)v13, v52)) {
                        goto LABEL_159;
                      }
                      v51 += (int)v13 - v52;
                    }
                    uint64_t v2 = v83;
                    uint64_t v53 = sub_1005E0570();
                    if (v53 >= (v13 >> 32) - (int)v13) {
                      size_t v54 = (v13 >> 32) - (int)v13;
                    }
                    else {
                      size_t v54 = v53;
                    }
                    if (!v81) {
                      goto LABEL_165;
                    }
                    if (!v51) {
                      goto LABEL_166;
                    }
                    int v35 = memcmp(v81, v51, v54);
                    sub_1000094D4(v13, v12);
                    swift_release();
                    swift_release();
LABEL_120:
                    sub_1000094D4(v13, v12);
LABEL_121:
                    sub_1000094D4(v11, v10);
                    swift_bridgeObjectRelease();
                    sub_1000094D4(v13, v12);
                    swift_bridgeObjectRelease();
                    sub_1000094D4(v11, v10);
                    if (v35) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v68 = *(void *)(v13 + 16);
                    uint64_t v80 = *(void *)(v13 + 24);
                    swift_retain();
                    swift_retain();
                    unint64_t v69 = (char *)sub_1005E0550();
                    if (v69)
                    {
                      uint64_t v70 = sub_1005E0580();
                      if (__OFSUB__(v68, v70)) {
                        goto LABEL_158;
                      }
                      v69 += v68 - v70;
                    }
                    BOOL v23 = __OFSUB__(v80, v68);
                    int64_t v71 = v80 - v68;
                    if (v23) {
                      goto LABEL_153;
                    }
                    uint64_t v72 = sub_1005E0570();
                    if (v72 >= v71) {
                      size_t v73 = v71;
                    }
                    else {
                      size_t v73 = v72;
                    }
                    if (!v81) {
                      goto LABEL_170;
                    }
                    if (!v69) {
                      goto LABEL_171;
                    }
                    int v74 = memcmp(v81, v69, v73);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_1000094D4(v13, v12);
                    sub_1000094D4(v11, v10);
                    swift_bridgeObjectRelease();
                    sub_1000094D4(v13, v12);
                    swift_bridgeObjectRelease();
                    sub_1000094D4(v11, v10);
                    if (v74) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v13;
                  LOWORD(__s1[1]) = v12;
                  BYTE2(__s1[1]) = BYTE2(v12);
                  BYTE3(__s1[1]) = BYTE3(v12);
                  BYTE4(__s1[1]) = BYTE4(v12);
                  BYTE5(__s1[1]) = BYTE5(v12);
                  if (!v81) {
                    goto LABEL_169;
                  }
                  int v67 = memcmp(v81, __s1, BYTE6(v12));
                  swift_release();
LABEL_134:
                  swift_release();
                  sub_1000094D4(v13, v12);
                  sub_1000094D4(v11, v10);
                  swift_bridgeObjectRelease();
                  sub_1000094D4(v13, v12);
                  swift_bridgeObjectRelease();
                  sub_1000094D4(v11, v10);
                  if (v67) {
                    return 0;
                  }
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v19) {
                  goto LABEL_76;
                }
                if (v19 == 1)
                {
                  uint64_t v24 = (v13 >> 32) - (int)v13;
                  if (v13 >> 32 < (int)v13) {
                    goto LABEL_147;
                  }
                  swift_bridgeObjectRetain();
                  sub_100008D24(v11, v10);
                  swift_bridgeObjectRetain();
                  sub_100008D24(v13, v12);
                  sub_100008D24(v13, v12);
                  uint64_t v40 = sub_1005E0550();
                  if (!v40) {
                    goto LABEL_164;
                  }
                  uint64_t v26 = v40;
                  uint64_t v41 = sub_1005E0580();
                  uint64_t v28 = (int)v13 - v41;
                  if (__OFSUB__((int)v13, v41)) {
                    goto LABEL_152;
                  }
LABEL_66:
                  uint64_t v42 = sub_1005E0570();
                  if (v42 >= v24) {
                    size_t v43 = v24;
                  }
                  else {
                    size_t v43 = v42;
                  }
                  int v44 = memcmp(__s1, (const void *)(v26 + v28), v43);
                  sub_1000094D4(v13, v12);
                  sub_1000094D4(v11, v10);
                  swift_bridgeObjectRelease();
                  sub_1000094D4(v13, v12);
                  swift_bridgeObjectRelease();
                  sub_1000094D4(v11, v10);
                  uint64_t v2 = v83;
                  if (v44) {
                    return 0;
                  }
                  break;
                }
                uint64_t v61 = *(void *)(v13 + 16);
                uint64_t v62 = *(void *)(v13 + 24);
                swift_bridgeObjectRetain();
                sub_100008D24(v11, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v13, v12);
                sub_100008D24(v13, v12);
                swift_retain();
                swift_retain();
                uint64_t v57 = sub_1005E0550();
                if (v57)
                {
                  uint64_t v63 = sub_1005E0580();
                  if (__OFSUB__(v61, v63)) {
                    goto LABEL_157;
                  }
                  v57 += v61 - v63;
                }
                BOOL v23 = __OFSUB__(v62, v61);
                int64_t v59 = v62 - v61;
                if (v23) {
                  goto LABEL_150;
                }
                uint64_t v60 = sub_1005E0570();
                uint64_t v2 = v83;
                if (!v57) {
                  goto LABEL_168;
                }
LABEL_101:
                if (v60 >= v59) {
                  size_t v64 = v59;
                }
                else {
                  size_t v64 = v60;
                }
                uint64_t v65 = __s1;
                size_t v66 = (const void *)v57;
                goto LABEL_133;
              default:
                __s1[0] = v11;
                LOWORD(__s1[1]) = v10;
                BYTE2(__s1[1]) = BYTE2(v10);
                BYTE3(__s1[1]) = BYTE3(v10);
                BYTE4(__s1[1]) = BYTE4(v10);
                BYTE5(__s1[1]) = BYTE5(v10);
                if (!v19)
                {
LABEL_76:
                  uint64_t __s2 = v13;
                  __int16 v88 = v12;
                  char v89 = BYTE2(v12);
                  char v90 = BYTE3(v12);
                  char v91 = BYTE4(v12);
                  char v92 = BYTE5(v12);
                  swift_bridgeObjectRetain();
                  sub_100008D24(v11, v10);
                  swift_bridgeObjectRetain();
                  sub_100008D24(v13, v12);
                  int v35 = memcmp(__s1, &__s2, BYTE6(v12));
                  goto LABEL_121;
                }
                if (v19 == 1)
                {
                  uint64_t v24 = (v13 >> 32) - (int)v13;
                  if (v13 >> 32 < (int)v13) {
                    goto LABEL_146;
                  }
                  swift_bridgeObjectRetain();
                  sub_100008D24(v11, v10);
                  swift_bridgeObjectRetain();
                  sub_100008D24(v13, v12);
                  sub_100008D24(v13, v12);
                  uint64_t v25 = sub_1005E0550();
                  if (!v25) {
                    goto LABEL_175;
                  }
                  uint64_t v26 = v25;
                  uint64_t v27 = sub_1005E0580();
                  uint64_t v28 = (int)v13 - v27;
                  if (__OFSUB__((int)v13, v27)) {
                    goto LABEL_151;
                  }
                  goto LABEL_66;
                }
                uint64_t v55 = *(void *)(v13 + 16);
                uint64_t v56 = *(void *)(v13 + 24);
                swift_bridgeObjectRetain();
                sub_100008D24(v11, v10);
                swift_bridgeObjectRetain();
                sub_100008D24(v13, v12);
                sub_100008D24(v13, v12);
                swift_retain();
                swift_retain();
                uint64_t v57 = sub_1005E0550();
                if (v57)
                {
                  uint64_t v58 = sub_1005E0580();
                  if (__OFSUB__(v55, v58)) {
                    goto LABEL_156;
                  }
                  v57 += v55 - v58;
                }
                BOOL v23 = __OFSUB__(v56, v55);
                int64_t v59 = v56 - v55;
                if (v23) {
                  goto LABEL_149;
                }
                uint64_t v60 = sub_1005E0570();
                uint64_t v2 = v83;
                if (!v57) {
                  goto LABEL_167;
                }
                goto LABEL_101;
            }
          }
          uint64_t result = 1;
          uint64_t v3 = v86;
          if (v86 == v2) {
            return result;
          }
          break;
        case 2uLL:
          uint64_t v22 = *(void *)(v13 + 16);
          uint64_t v21 = *(void *)(v13 + 24);
          BOOL v23 = __OFSUB__(v21, v22);
          uint64_t v20 = v21 - v22;
          if (!v23) {
            goto LABEL_32;
          }
          goto LABEL_142;
        case 3uLL:
          if (!v16) {
            goto LABEL_7;
          }
          goto LABEL_136;
        default:
          uint64_t v20 = BYTE6(v12);
          goto LABEL_32;
      }
    }
  }
  return 1;
}

uint64_t sub_100414A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
      return 0;
    }
    uint64_t v3 = (_DWORD *)(a2 + 56);
    for (uint64_t i = (_DWORD *)(a1 + 56); ; i += 6)
    {
      uint64_t v6 = *((void *)i - 2);
      unint64_t v5 = *((void *)i - 1);
      uint64_t v8 = *((void *)v3 - 2);
      unint64_t v7 = *((void *)v3 - 1);
      if ((v5 & 4) != 0)
      {
        if ((v7 & 4) == 0) {
          return 0;
        }
        sub_1004162EC(*((void *)v3 - 2), *((void *)v3 - 1));
        sub_1004162EC(v6, v5);
        char v9 = sub_100435E24(v6, v8);
      }
      else
      {
        if ((v7 & 4) != 0) {
          return 0;
        }
        sub_1004162EC(*((void *)v3 - 2), *((void *)v3 - 1));
        sub_1004162EC(v6, v5);
        swift_bridgeObjectRetain();
        sub_100416334(v5);
        swift_bridgeObjectRetain();
        sub_100416334(v7);
        if ((sub_100436304(v6, v8) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_1004163E4(v7);
          swift_bridgeObjectRelease();
          sub_1004163E4(v5);
          sub_10041639C(v8, v7);
          sub_10041639C(v6, v5);
          return 0;
        }
        char v9 = static SearchRequest.Predicate.__derived_enum_equals(_:_:)(v5, v7);
        swift_bridgeObjectRelease();
        sub_1004163E4(v7);
        swift_bridgeObjectRelease();
        sub_1004163E4(v5);
      }
      sub_10041639C(v8, v7);
      sub_10041639C(v6, v5);
      if ((v9 & 1) == 0) {
        return 0;
      }
      if (!--v2) {
        return 1;
      }
      uint64_t result = 0;
      int v12 = *v3;
      v3 += 6;
      int v11 = v12;
      int v13 = *i;
      if (v13 != v11) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_100414BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v100 = a2 + 32;
    uint64_t v101 = a1 + 32;
    uint64_t v99 = *(void *)(a1 + 16);
    while (1)
    {
      uint64_t v4 = v101 + 56 * v3;
      uint64_t v5 = v100 + 56 * v3;
      if (*(_DWORD *)v4 != *(_DWORD *)v5) {
        return 0;
      }
      if ((*(unsigned int *)(v4 + 16) | ((unint64_t)*(unsigned int *)(v4 + 16) << 32)) != (*(unsigned int *)(v5 + 16) | ((unint64_t)*(unsigned int *)(v5 + 16) << 32))) {
        return 0;
      }
      uint64_t v6 = *(void *)(v4 + 8);
      uint64_t v7 = *(void *)(v5 + 8);
      uint64_t v8 = *(void *)(v6 + 16);
      if (v8 != *(void *)(v7 + 16)) {
        return 0;
      }
      uint64_t v10 = *(void *)(v4 + 24);
      unint64_t v9 = *(void *)(v4 + 32);
      uint64_t v11 = *(void *)(v4 + 40);
      int v12 = *(unsigned __int8 *)(v4 + 48);
      uint64_t v14 = *(void *)(v5 + 24);
      unint64_t v13 = *(void *)(v5 + 32);
      uint64_t v15 = *(void *)(v5 + 40);
      if (v8) {
        BOOL v16 = v6 == v7;
      }
      else {
        BOOL v16 = 1;
      }
      int v17 = *(unsigned __int8 *)(v5 + 48);
      if (!v16)
      {
        if (*(unsigned __int8 *)(v6 + 32) != *(unsigned __int8 *)(v7 + 32)) {
          return 0;
        }
        if (v8 != 1)
        {
          if (*(unsigned __int8 *)(v6 + 33) != *(unsigned __int8 *)(v7 + 33)) {
            return 0;
          }
          if (v8 != 2)
          {
            if (*(unsigned __int8 *)(v6 + 34) != *(unsigned __int8 *)(v7 + 34)) {
              return 0;
            }
            int v48 = (unsigned __int8 *)(v6 + 35);
            int v49 = (unsigned __int8 *)(v7 + 35);
            for (uint64_t i = v8 - 3; i; --i)
            {
              uint64_t result = 0;
              int v53 = *v48++;
              int v52 = v53;
              int v54 = *v49++;
              if (v52 != v54) {
                return result;
              }
            }
          }
        }
      }
      int v103 = v17;
      int v104 = v12;
      uint64_t v102 = v3 + 1;
      uint64_t v18 = 0;
      switch(v9 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v10), v10))
          {
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
          }
          uint64_t v18 = HIDWORD(v10) - (int)v10;
LABEL_21:
          sub_100008D24(v10, v9);
          break;
        case 2uLL:
          uint64_t v20 = *(void *)(v10 + 16);
          uint64_t v19 = *(void *)(v10 + 24);
          uint64_t v18 = v19 - v20;
          if (!__OFSUB__(v19, v20)) {
            goto LABEL_21;
          }
          goto LABEL_151;
        case 3uLL:
          break;
        default:
          uint64_t v18 = BYTE6(v9);
          break;
      }
      uint64_t v105 = v15;
      unint64_t v21 = v13 >> 62;
      switch(v13 >> 62)
      {
        case 1uLL:
          LODWORD(v22) = HIDWORD(v14) - v14;
          if (__OFSUB__(HIDWORD(v14), v14)) {
            goto LABEL_152;
          }
          uint64_t v22 = (int)v22;
LABEL_27:
          if (v18 != v22)
          {
LABEL_146:
            sub_1000094D4(v10, v9);
            return 0;
          }
          if (v18 < 1)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            sub_100008D24(v10, v9);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_100008D24(v14, v13);
            uint64_t v30 = v105;
            swift_bridgeObjectRetain();
            sub_1000094D4(v10, v9);
          }
          else
          {
            switch(v9 >> 62)
            {
              case 1uLL:
                uint64_t v97 = v11;
                if ((int)v10 > v10 >> 32) {
                  goto LABEL_154;
                }
                swift_bridgeObjectRetain();
                sub_100008D24(v10, v9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_100008D24(v14, v13);
                swift_bridgeObjectRetain();
                sub_100008D24(v14, v13);
                uint64_t v31 = (char *)sub_1005E0550();
                if (!v31) {
                  goto LABEL_43;
                }
                uint64_t v32 = sub_1005E0580();
                if (__OFSUB__((int)v10, v32)) {
                  goto LABEL_156;
                }
                v31 += (int)v10 - v32;
LABEL_43:
                sub_1005E0570();
                if (!v21)
                {
                  __s1[0] = v14;
                  LOWORD(__s1[1]) = v13;
                  BYTE2(__s1[1]) = BYTE2(v13);
                  BYTE3(__s1[1]) = BYTE3(v13);
                  BYTE4(__s1[1]) = BYTE4(v13);
                  BYTE5(__s1[1]) = BYTE5(v13);
                  if (!v31) {
                    goto LABEL_177;
                  }
                  int v47 = memcmp(v31, __s1, BYTE6(v13));
                  goto LABEL_134;
                }
                uint64_t v93 = v31;
                if (v21 == 1)
                {
                  if (v14 >> 32 < (int)v14) {
                    goto LABEL_164;
                  }
                  swift_retain();
                  uint64_t v33 = sub_1005E0550();
                  if (v33)
                  {
                    uint64_t v34 = v33;
                    uint64_t v35 = sub_1005E0580();
                    if (__OFSUB__((int)v14, v35)) {
                      goto LABEL_172;
                    }
                    uint64_t v36 = (const void *)(v34 + (int)v14 - v35);
                  }
                  else
                  {
                    uint64_t v36 = 0;
                  }
                  uint64_t v86 = sub_1005E0570();
                  if (v86 >= (v14 >> 32) - (int)v14) {
                    size_t v87 = (v14 >> 32) - (int)v14;
                  }
                  else {
                    size_t v87 = v86;
                  }
                  if (!v93) {
                    goto LABEL_184;
                  }
                  if (!v36) {
                    goto LABEL_185;
                  }
                  int v47 = memcmp(v93, v36, v87);
                  sub_1000094D4(v14, v13);
LABEL_134:
                  sub_1000094D4(v14, v13);
                  sub_1000094D4(v10, v9);
LABEL_135:
                  uint64_t v30 = v105;
                  if (v47) {
                    goto LABEL_147;
                  }
                  break;
                }
                uint64_t v72 = *(void *)(v14 + 16);
                char v91 = *(char **)(v14 + 24);
                swift_retain();
                swift_retain();
                uint64_t v73 = sub_1005E0550();
                if (v73)
                {
                  uint64_t v74 = v73;
                  uint64_t v75 = sub_1005E0580();
                  if (__OFSUB__(v72, v75)) {
                    goto LABEL_171;
                  }
                  uint64_t v76 = (const void *)(v74 + v72 - v75);
                }
                else
                {
                  uint64_t v76 = 0;
                }
                BOOL v25 = __OFSUB__(v91, v72);
                uint64_t v83 = &v91[-v72];
                if (v25) {
                  goto LABEL_166;
                }
                uint64_t v84 = sub_1005E0570();
                if (v84 >= (uint64_t)v83) {
                  size_t v85 = (size_t)v83;
                }
                else {
                  size_t v85 = v84;
                }
                if (!v93) {
                  goto LABEL_186;
                }
                uint64_t v11 = v97;
                if (!v76) {
                  goto LABEL_183;
                }
                int v66 = memcmp(v93, v76, v85);
LABEL_123:
                swift_release();
LABEL_124:
                swift_release();
                sub_1000094D4(v14, v13);
                sub_1000094D4(v10, v9);
LABEL_125:
                uint64_t v30 = v105;
                if (v66) {
                  goto LABEL_147;
                }
                break;
              case 2uLL:
                char v89 = *(char **)(v10 + 16);
                swift_bridgeObjectRetain();
                sub_100008D24(v10, v9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_100008D24(v14, v13);
                swift_bridgeObjectRetain();
                sub_100008D24(v14, v13);
                swift_retain();
                swift_retain();
                uint64_t v37 = (char *)sub_1005E0550();
                if (!v37) {
                  goto LABEL_52;
                }
                uint64_t v38 = sub_1005E0580();
                if (__OFSUB__(v89, v38)) {
                  goto LABEL_155;
                }
                uint64_t v37 = &v89[(void)v37 - v38];
LABEL_52:
                sub_1005E0570();
                if (!v21)
                {
                  __s1[0] = v14;
                  LOWORD(__s1[1]) = v13;
                  BYTE2(__s1[1]) = BYTE2(v13);
                  BYTE3(__s1[1]) = BYTE3(v13);
                  BYTE4(__s1[1]) = BYTE4(v13);
                  BYTE5(__s1[1]) = BYTE5(v13);
                  if (!v37) {
                    goto LABEL_176;
                  }
                  int v66 = memcmp(v37, __s1, BYTE6(v13));
                  swift_release();
                  goto LABEL_124;
                }
                uint64_t v98 = v11;
                char v90 = v37;
                if (v21 == 1)
                {
                  if (v14 >> 32 < (int)v14) {
                    goto LABEL_159;
                  }
                  swift_retain();
                  uint64_t v39 = sub_1005E0550();
                  if (v39)
                  {
                    uint64_t v40 = v39;
                    uint64_t v41 = sub_1005E0580();
                    if (__OFSUB__((int)v14, v41)) {
                      goto LABEL_170;
                    }
                    uint64_t v42 = (const void *)(v40 + (int)v14 - v41);
                  }
                  else
                  {
                    uint64_t v42 = 0;
                  }
                  uint64_t v81 = sub_1005E0570();
                  if (v81 >= (v14 >> 32) - (int)v14) {
                    size_t v82 = (v14 >> 32) - (int)v14;
                  }
                  else {
                    size_t v82 = v81;
                  }
                  if (!v90) {
                    goto LABEL_181;
                  }
                  if (!v42) {
                    goto LABEL_182;
                  }
                  int v47 = memcmp(v90, v42, v82);
                  sub_1000094D4(v14, v13);
                  swift_release();
                  swift_release();
                  goto LABEL_134;
                }
                uint64_t v67 = *(void *)(v14 + 16);
                uint64_t v88 = *(void *)(v14 + 24);
                swift_retain();
                swift_retain();
                uint64_t v68 = sub_1005E0550();
                if (v68)
                {
                  uint64_t v69 = v68;
                  uint64_t v70 = sub_1005E0580();
                  if (__OFSUB__(v67, v70)) {
                    goto LABEL_169;
                  }
                  int64_t v71 = (const void *)(v69 + v67 - v70);
                }
                else
                {
                  int64_t v71 = 0;
                }
                BOOL v25 = __OFSUB__(v88, v67);
                int64_t v78 = v88 - v67;
                if (v25) {
                  goto LABEL_165;
                }
                uint64_t v79 = sub_1005E0570();
                if (v79 >= v78) {
                  size_t v80 = v78;
                }
                else {
                  size_t v80 = v79;
                }
                if (!v90) {
                  goto LABEL_179;
                }
                uint64_t v11 = v98;
                if (!v71) {
                  goto LABEL_180;
                }
                int v66 = memcmp(v90, v71, v80);
                swift_release();
                swift_release();
                goto LABEL_123;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v21) {
                  goto LABEL_72;
                }
                uint64_t v96 = v11;
                if (v21 == 1)
                {
                  char v92 = (void *)((v14 >> 32) - (int)v14);
                  if (v14 >> 32 < (int)v14) {
                    goto LABEL_158;
                  }
                  swift_bridgeObjectRetain();
                  sub_100008D24(v10, v9);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_100008D24(v14, v13);
                  swift_bridgeObjectRetain();
                  sub_100008D24(v14, v13);
                  uint64_t v43 = sub_1005E0550();
                  if (!v43) {
                    goto LABEL_174;
                  }
                  uint64_t v27 = v43;
                  uint64_t v44 = sub_1005E0580();
                  uint64_t v29 = (int)v14 - v44;
                  if (__OFSUB__((int)v14, v44)) {
                    goto LABEL_163;
                  }
LABEL_63:
                  uint64_t v45 = sub_1005E0570();
                  if (v45 >= (uint64_t)v92) {
                    size_t v46 = (size_t)v92;
                  }
                  else {
                    size_t v46 = v45;
                  }
                  int v47 = memcmp(__s1, (const void *)(v27 + v29), v46);
                  sub_1000094D4(v14, v13);
                  sub_1000094D4(v10, v9);
                  uint64_t v11 = v96;
                  goto LABEL_135;
                }
                uint64_t v62 = *(void *)(v14 + 16);
                uint64_t v95 = *(char **)(v14 + 24);
                swift_bridgeObjectRetain();
                sub_100008D24(v10, v9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_100008D24(v14, v13);
                swift_bridgeObjectRetain();
                sub_100008D24(v14, v13);
                swift_retain();
                swift_retain();
                uint64_t v61 = (char *)sub_1005E0550();
                if (v61)
                {
                  uint64_t v63 = sub_1005E0580();
                  if (__OFSUB__(v62, v63)) {
                    goto LABEL_168;
                  }
                  v61 += v62 - v63;
                }
                size_t v64 = &v95[-v62];
                if (__OFSUB__(v95, v62)) {
                  goto LABEL_160;
                }
                uint64_t v65 = sub_1005E0570();
                if (!v61) {
                  goto LABEL_175;
                }
LABEL_96:
                if (v65 >= (uint64_t)v64) {
                  size_t v77 = (size_t)v64;
                }
                else {
                  size_t v77 = v65;
                }
                int v66 = memcmp(__s1, v61, v77);
                swift_release();
                swift_release();
                sub_1000094D4(v14, v13);
                sub_1000094D4(v10, v9);
                uint64_t v11 = v96;
                goto LABEL_125;
              default:
                __s1[0] = v10;
                LOWORD(__s1[1]) = v9;
                BYTE2(__s1[1]) = BYTE2(v9);
                BYTE3(__s1[1]) = BYTE3(v9);
                BYTE4(__s1[1]) = BYTE4(v9);
                BYTE5(__s1[1]) = BYTE5(v9);
                if (!v21)
                {
LABEL_72:
                  uint64_t __s2 = v14;
                  __int16 v107 = v13;
                  char v108 = BYTE2(v13);
                  char v109 = BYTE3(v13);
                  char v110 = BYTE4(v13);
                  char v111 = BYTE5(v13);
                  swift_bridgeObjectRetain();
                  sub_100008D24(v10, v9);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_100008D24(v14, v13);
                  uint64_t v30 = v105;
                  swift_bridgeObjectRetain();
                  int v55 = memcmp(__s1, &__s2, BYTE6(v13));
                  sub_1000094D4(v10, v9);
                  if (v55) {
                    goto LABEL_147;
                  }
                  break;
                }
                uint64_t v96 = v11;
                if (v21 == 1)
                {
                  char v92 = (void *)((v14 >> 32) - (int)v14);
                  if (v14 >> 32 < (int)v14) {
                    goto LABEL_157;
                  }
                  swift_bridgeObjectRetain();
                  sub_100008D24(v10, v9);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_100008D24(v14, v13);
                  swift_bridgeObjectRetain();
                  sub_100008D24(v14, v13);
                  uint64_t v26 = sub_1005E0550();
                  if (!v26)
                  {
                    sub_1005E0570();
                    __break(1u);
LABEL_174:
                    sub_1005E0570();
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
LABEL_178:
                    __break(1u);
LABEL_179:
                    __break(1u);
LABEL_180:
                    __break(1u);
LABEL_181:
                    __break(1u);
LABEL_182:
                    __break(1u);
LABEL_183:
                    __break(1u);
LABEL_184:
                    __break(1u);
LABEL_185:
                    __break(1u);
LABEL_186:
                    __break(1u);
                    JUMPOUT(0x100415938);
                  }
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_1005E0580();
                  uint64_t v29 = (int)v14 - v28;
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_162;
                  }
                  goto LABEL_63;
                }
                uint64_t v56 = *(void *)(v14 + 16);
                Swift::Int v94 = *(char **)(v14 + 24);
                swift_bridgeObjectRetain();
                sub_100008D24(v10, v9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_100008D24(v14, v13);
                swift_bridgeObjectRetain();
                sub_100008D24(v14, v13);
                swift_retain();
                swift_retain();
                uint64_t v57 = sub_1005E0550();
                if (v57)
                {
                  uint64_t v58 = v57;
                  uint64_t v59 = sub_1005E0580();
                  if (__OFSUB__(v56, v59)) {
                    goto LABEL_167;
                  }
                  uint64_t v60 = v56;
                  uint64_t v61 = (char *)(v58 + v56 - v59);
                }
                else
                {
                  uint64_t v60 = v56;
                  uint64_t v61 = 0;
                }
                size_t v64 = &v94[-v60];
                if (__OFSUB__(v94, v60)) {
                  goto LABEL_161;
                }
                uint64_t v65 = sub_1005E0570();
                if (!v61) {
                  goto LABEL_178;
                }
                goto LABEL_96;
            }
          }
          if (v11)
          {
            if (!v30 || (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v11, v30) & 1) == 0)
            {
LABEL_147:
              swift_bridgeObjectRelease();
              sub_1000094D4(v14, v13);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1000094D4(v10, v9);
              swift_bridgeObjectRelease();
              return 0;
            }
          }
          else if (v30)
          {
            goto LABEL_147;
          }
          swift_bridgeObjectRelease();
          sub_1000094D4(v14, v13);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1000094D4(v10, v9);
          swift_bridgeObjectRelease();
          if (v104 != v103) {
            return 0;
          }
          uint64_t result = 1;
          uint64_t v3 = v102;
          if (v102 == v99) {
            return result;
          }
          break;
        case 2uLL:
          uint64_t v24 = *(void *)(v14 + 16);
          uint64_t v23 = *(void *)(v14 + 24);
          BOOL v25 = __OFSUB__(v23, v24);
          uint64_t v22 = v23 - v24;
          if (!v25) {
            goto LABEL_27;
          }
          goto LABEL_153;
        case 3uLL:
          if (!v18) {
            goto LABEL_38;
          }
          goto LABEL_146;
        default:
          uint64_t v22 = BYTE6(v13);
          goto LABEL_27;
      }
    }
  }
  return 1;
}

uint64_t sub_100415968(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    if (a1[5] == a2[5])
    {
      uint64_t v3 = a1 + 4;
      uint64_t v4 = a2 + 4;
      uint64_t v5 = a1[4];
      uint64_t v6 = a2[4];
      uint64_t v7 = *(void *)(v5 + 16);
      if (v7 == *(void *)(v6 + 16))
      {
        uint64_t v8 = 1;
        while (1)
        {
          if (v7 && v5 != v6)
          {
            if (*(unsigned __int8 *)(v5 + 32) != *(unsigned __int8 *)(v6 + 32)) {
              return 0;
            }
            if (v7 != 1)
            {
              if (*(unsigned __int8 *)(v5 + 33) != *(unsigned __int8 *)(v6 + 33)) {
                return 0;
              }
              if (v7 != 2)
              {
                if (*(unsigned __int8 *)(v5 + 34) != *(unsigned __int8 *)(v6 + 34)) {
                  return 0;
                }
                uint64_t v11 = (unsigned __int8 *)(v5 + 35);
                int v12 = (unsigned __int8 *)(v6 + 35);
                for (uint64_t i = v7 - 3; i; --i)
                {
                  uint64_t result = 0;
                  int v15 = *v11++;
                  int v14 = v15;
                  int v16 = *v12++;
                  if (v14 != v16) {
                    return result;
                  }
                }
              }
            }
          }
          if (v8 == v2) {
            return 1;
          }
          uint64_t v9 = 2 * v8;
          if (v3[2 * v8 + 1] != v4[2 * v8 + 1]) {
            break;
          }
          uint64_t result = 0;
          uint64_t v5 = v3[2 * v8++];
          uint64_t v6 = v4[v9];
          uint64_t v7 = *(void *)(v5 + 16);
          if (v7 != *(void *)(v6 + 16)) {
            return result;
          }
        }
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_100415A88(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MessageMetadata(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 == *(void *)(a2 + 16))
  {
    if (!v9 || a1 == a2)
    {
      char v13 = 1;
    }
    else
    {
      unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v11 = *(void *)(v6 + 72);
      uint64_t v12 = v9 - 1;
      do
      {
        sub_10041644C(a1 + v10, (uint64_t)v8);
        sub_10041644C(a2 + v10, (uint64_t)v5);
        char v13 = _s16IMAP2Persistence15MessageMetadataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v8, (uint64_t)v5);
        sub_1004164B0((uint64_t)v5);
        sub_1004164B0((uint64_t)v8);
        BOOL v15 = v12-- != 0;
        if ((v13 & 1) == 0) {
          break;
        }
        v10 += v11;
      }
      while (v15);
    }
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_100415BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 48);
    for (uint64_t i = (uint64_t *)(a1 + 48); *((_DWORD *)v3 - 4) == *((_DWORD *)i - 4); i += 3)
    {
      unint64_t v6 = *(uint64_t *)((char *)i - 12);
      uint64_t v7 = *i;
      unint64_t v8 = *(uint64_t *)((char *)v3 - 12);
      uint64_t v9 = *v3;
      if (v6 == 2)
      {
        if (v8 != 2) {
          return 0;
        }
      }
      else
      {
        if (v8 == 2) {
          return 0;
        }
        uint64_t result = 0;
        if (((v6 & 1) == 0) == (v8 & 1)
          || ((v6 & 0x100) == 0) == ((v8 >> 8) & 1)
          || ((v6 & 0x10000) == 0) == ((v8 >> 16) & 1)
          || ((v6 & 0x1000000) == 0) == ((v8 >> 24) & 1))
        {
          return result;
        }
        int v10 = *((unsigned __int8 *)i - 4);
        int v11 = *((unsigned __int8 *)v3 - 4);
        if ((v6 & 0xFF00000000) == 0x200000000)
        {
          if (BYTE4(v8) != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (BYTE4(v8) == 2 || ((v6 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(v8) & 1)) {
            return result;
          }
        }
        if ((v6 & 0xFF0000000000) == 0x20000000000)
        {
          if (BYTE5(v8) != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (BYTE5(v8) == 2 || ((v6 & 0x10000000000) == 0) == ((v8 >> 40) & 1)) {
            return result;
          }
        }
        uint64_t v12 = v8 & 0xFF000000000000;
        if ((v6 & 0xFF000000000000) == 0x3000000000000)
        {
          if (v12 != 0x3000000000000) {
            return 0;
          }
        }
        else if (v12 == 0x3000000000000 || ((v8 ^ v6) & 0xFF000000000000) != 0)
        {
          return 0;
        }
        unint64_t v13 = HIBYTE(v6);
        unint64_t v14 = HIBYTE(v8);
        if (v13 == 8)
        {
          if (v14 != 8) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v14 == 8 || v13 != v14) {
            return result;
          }
        }
        if (v10 == 2)
        {
          if (v11 != 2) {
            return 0;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v11 == 2 || ((((v10 & 1) == 0) ^ v11) & 1) == 0) {
            return result;
          }
        }
      }
      if (v7)
      {
        if (!v9) {
          return 0;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v15 = sub_100013754(v7, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else if (v9)
      {
        return 0;
      }
      v3 += 3;
      uint64_t result = 1;
      if (!--v2) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t static MailboxPriorityInfo.__derived_struct_equals(_:_:)(Swift::Int a1, void *a2, uint64_t a3, void *a4)
{
  if ((sub_100440580(a1, a3) & 1) == 0) {
    return 0;
  }
  return sub_100415968(a2, a4);
}

void *MailboxPriorityInfo.init()()
{
  return &_swiftEmptySetSingleton;
}

void MailboxPriorityInfo.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_1004160C0(a1, a2);
  swift_bridgeObjectRelease();
  Swift::UInt v6 = *(void *)(a3 + 16);
  sub_1005E3410(v6);
  if (v6)
  {
    uint64_t v7 = (Swift::UInt *)(a3 + 40);
    do
    {
      Swift::UInt v8 = *v7;
      v7 += 2;
      sub_1005E3410(v8);
      --v6;
    }
    while (v6);
  }
}

Swift::Int MailboxPriorityInfo.hashValue.getter(uint64_t a1, uint64_t a2)
{
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1004160C0((uint64_t)v8, a1);
  swift_bridgeObjectRelease();
  Swift::UInt v4 = *(void *)(a2 + 16);
  sub_1005E3410(v4);
  if (v4)
  {
    uint64_t v5 = (Swift::UInt *)(a2 + 40);
    do
    {
      Swift::UInt v6 = *v5;
      v5 += 2;
      sub_1005E3410(v6);
      --v4;
    }
    while (v4);
  }
  return sub_1005E3470();
}

Swift::Int sub_100415FCC()
{
  return MailboxPriorityInfo.hashValue.getter(*v0, v0[1]);
}

void sub_100415FD4(uint64_t a1)
{
  MailboxPriorityInfo.hash(into:)(a1, *v1, v1[1]);
}

Swift::Int sub_100415FDC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1005E33F0();
  swift_bridgeObjectRetain();
  sub_1004160C0((uint64_t)v7, v1);
  swift_bridgeObjectRelease();
  Swift::UInt v3 = *(void *)(v2 + 16);
  sub_1005E3410(v3);
  if (v3)
  {
    Swift::UInt v4 = (Swift::UInt *)(v2 + 40);
    do
    {
      Swift::UInt v5 = *v4;
      v4 += 2;
      sub_1005E3410(v5);
      --v3;
    }
    while (v3);
  }
  return sub_1005E3470();
}

uint64_t sub_100416064(Swift::Int *a1, uint64_t *a2)
{
  uint64_t v2 = (void *)a1[1];
  Swift::UInt v3 = (void *)a2[1];
  if ((sub_100440580(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_100415968(v2, v3);
}

void sub_1004160C0(uint64_t a1, uint64_t a2)
{
  sub_1005E3470();
  Swift::UInt v3 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v4++, 1)) {
      goto LABEL_19;
    }
    if (v4 >= v9)
    {
LABEL_17:
      sub_1005E3410(v3);
      return;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (!v14) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_5:
    Swift::UInt v12 = *(void *)(*(void *)(a2 + 48) + 16 * v11 + 8);
    sub_1005E33F0();
    sub_1005E3410(v12);
    v3 ^= sub_1005E3470();
  }
  int64_t v15 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_17;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    ++v4;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_17;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

unint64_t sub_100416234()
{
  unint64_t result = qword_100714A90;
  if (!qword_100714A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714A90);
  }
  return result;
}

ValueMetadata *type metadata accessor for MailboxPriorityInfo()
{
  return &type metadata for MailboxPriorityInfo;
}

void *sub_100416298(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_1004162EC(uint64_t a1, unint64_t a2)
{
  unint64_t result = swift_bridgeObjectRetain();
  if ((a2 & 4) == 0)
  {
    return sub_100416334(a2);
  }
  return result;
}

unint64_t sub_100416334(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10041639C(uint64_t a1, unint64_t a2)
{
  unint64_t result = swift_bridgeObjectRelease();
  if ((a2 & 4) == 0)
  {
    return sub_1004163E4(a2);
  }
  return result;
}

unint64_t sub_1004163E4(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10041644C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004164B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t MessageMetadata.flags.getter()
{
  uint64_t v1 = 256;
  if (!v0[17]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = v1 | v0[16];
  uint64_t v3 = 0x10000;
  if (!v0[18]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x1000000;
  if (!v0[19]) {
    uint64_t v4 = 0;
  }
  return v2 | v3 | v4 | ((unint64_t)v0[20] << 32) | ((unint64_t)v0[21] << 40) | ((unint64_t)v0[22] << 48) | ((unint64_t)v0[23] << 56);
}

uint64_t MessageMetadata.flags.setter(uint64_t result, char a2)
{
  v2[16] = result & 1;
  v2[17] = BYTE1(result) & 1;
  v2[18] = BYTE2(result) & 1;
  v2[19] = BYTE3(result) & 1;
  v2[20] = BYTE4(result);
  v2[21] = BYTE5(result);
  v2[22] = BYTE6(result);
  v2[23] = HIBYTE(result);
  v2[24] = a2;
  return result;
}

uint64_t MessageMetadata.messageHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageMetadata(0) + 32);
  return sub_100416620(v3, a1);
}

uint64_t type metadata accessor for MessageMetadata(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_100714B00);
}

uint64_t sub_100416620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100714A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MessageMetadata.messageHeader.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageMetadata(0) + 32);
  return sub_1004166CC(a1, v3);
}

uint64_t sub_1004166CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100714A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::UInt32 (__swiftcall *MessageMetadata.messageHeader.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageMetadata.messageSize.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for MessageMetadata(0) + 36));
}

uint64_t MessageMetadata.messageSize.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for MessageMetadata(0);
  *(void *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageMetadata.messageSize.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageMetadata.indexingHint.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MessageMetadata(0) + 40));
}

uint64_t MessageMetadata.indexingHint.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for MessageMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

Swift::UInt32 (__swiftcall *MessageMetadata.indexingHint.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageMetadata.init(uid:internalDate:flags:gmailLabels:messageHeader:messageSize:indexingHint:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  int v10 = a3;
  unint64_t v14 = HIDWORD(a3);
  unint64_t v15 = a3 >> 40;
  unint64_t v16 = HIWORD(a3);
  unint64_t v21 = HIBYTE(a3);
  *(void *)(a9 + 32) = 0;
  char v22 = a8 & 1;
  uint64_t v17 = (int *)type metadata accessor for MessageMetadata(0);
  uint64_t v18 = a9 + v17[8];
  uint64_t v19 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(_DWORD *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  sub_1004166CC(a6, v18);
  *(unsigned char *)(a9 + 16) = v10 & 1;
  *(unsigned char *)(a9 + 17) = BYTE1(v10) & 1;
  *(unsigned char *)(a9 + 18) = BYTE2(v10) & 1;
  *(unsigned char *)(a9 + 19) = HIBYTE(v10) & 1;
  *(unsigned char *)(a9 + 20) = v14;
  *(unsigned char *)(a9 + 21) = v15;
  *(unsigned char *)(a9 + 22) = v16;
  *(unsigned char *)(a9 + 23) = v21;
  *(unsigned char *)(a9 + 24) = a4;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + v17[9]) = a7;
  *(unsigned char *)(a9 + v17[10]) = v22;
  return result;
}

uint64_t type metadata accessor for MessageMetadata.UnparsedHeader(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714BB0);
}

uint64_t MessageMetadata.UnparsedHeader.underlying.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for MessageData.BodyData();
  __chkstk_darwin();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004170CC(v1, (uint64_t)v4);
  uint64_t v5 = sub_1005E17E0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, v4, v5);
}

uint64_t MessageMetadata.UnparsedHeader.count.getter()
{
  type metadata accessor for MessageData.BodyData();
  __chkstk_darwin();
  char v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005E17E0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004170CC(v0, (uint64_t)v2);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  uint64_t v7 = _s13IMAP2Protocol11MessageDataV04BodyD0V5countSivg_0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t _s16IMAP2Persistence15MessageMetadataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000566C(&qword_100714BE8);
  __chkstk_darwin();
  int v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100714A98);
  __chkstk_darwin();
  Swift::UInt v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v36 - v13;
  __chkstk_darwin();
  unint64_t v16 = (char *)&v36 - v15;
  if (*(_DWORD *)a2 != *(_DWORD *)a1 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    goto LABEL_36;
  }
  uint64_t v17 = *(unsigned char *)(a1 + 17) ? 256 : 0;
  uint64_t v18 = v17 | *(unsigned __int8 *)(a1 + 16);
  uint64_t v19 = *(unsigned char *)(a1 + 18) ? 0x10000 : 0;
  uint64_t v20 = *(unsigned char *)(a1 + 19) ? 0x1000000 : 0;
  unint64_t v21 = v18 | v19 | v20 | ((unint64_t)*(unsigned __int8 *)(a1 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a1 + 21) << 40) | ((unint64_t)*(unsigned __int8 *)(a1 + 22) << 48) | ((unint64_t)*(unsigned __int8 *)(a1 + 23) << 56);
  uint64_t v22 = *(unsigned char *)(a2 + 17) ? 256 : 0;
  uint64_t v23 = v22 | *(unsigned __int8 *)(a2 + 16);
  uint64_t v24 = *(unsigned char *)(a2 + 18) ? 0x10000 : 0;
  uint64_t v25 = *(unsigned char *)(a2 + 19) ? 0x1000000 : 0;
  if ((sub_10040B324(v21, *(unsigned char *)(a1 + 24), v23 | v24 | v25 | ((unint64_t)*(unsigned __int8 *)(a2 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 21) << 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 22) << 48) | ((unint64_t)*(unsigned __int8 *)(a2 + 23) << 56), *(unsigned char *)(a2 + 24)) & 1) == 0)goto LABEL_36; {
  uint64_t v38 = v5;
  }
  uint64_t v39 = v10;
  uint64_t v26 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (!v26) {
      goto LABEL_36;
    }
    swift_bridgeObjectRetain();
    uint64_t v27 = swift_bridgeObjectRetain();
    LODWORD(v37) = sub_100013754(v27, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0) {
      goto LABEL_36;
    }
  }
  else if (v26)
  {
LABEL_36:
    char v34 = 0;
    return v34 & 1;
  }
  uint64_t v28 = type metadata accessor for MessageMetadata(0);
  sub_100416620(a1 + *(int *)(v28 + 32), (uint64_t)v16);
  uint64_t v36 = v28;
  sub_100416620(a2 + *(int *)(v28 + 32), (uint64_t)v14);
  uint64_t v29 = (uint64_t)v39;
  uint64_t v30 = (uint64_t)&v39[*(int *)(v8 + 48)];
  sub_100416620((uint64_t)v16, (uint64_t)v39);
  uint64_t v37 = v30;
  sub_100416620((uint64_t)v14, v30);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v31(v29, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_100714A98);
    uint64_t v29 = (uint64_t)v39;
    sub_100007A48((uint64_t)v16, &qword_100714A98);
    if (v31(v37, 1, v4) == 1)
    {
      sub_100007A48(v29, &qword_100714A98);
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  sub_100416620(v29, (uint64_t)v12);
  if (v31(v37, 1, v4) == 1)
  {
    sub_100007A48((uint64_t)v14, &qword_100714A98);
    sub_100007A48((uint64_t)v16, &qword_100714A98);
    sub_1004177C8((uint64_t)v12);
LABEL_32:
    sub_100007A48(v29, &qword_100714BE8);
    goto LABEL_36;
  }
  sub_10041805C(v37, (uint64_t)v7);
  uint64_t v32 = v29;
  char v33 = static MessageData.BodyData.== infix(_:_:)(v12, v7);
  sub_1004177C8((uint64_t)v7);
  sub_100007A48((uint64_t)v14, &qword_100714A98);
  sub_100007A48((uint64_t)v16, &qword_100714A98);
  sub_1004177C8((uint64_t)v12);
  sub_100007A48(v32, &qword_100714A98);
  if ((v33 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_34:
  if (*(void *)(a1 + *(int *)(v36 + 36)) != *(void *)(a2 + *(int *)(v36 + 36))) {
    goto LABEL_36;
  }
  char v34 = *(unsigned char *)(a1 + *(int *)(v36 + 40)) ^ *(unsigned char *)(a2 + *(int *)(v36 + 40)) ^ 1;
  return v34 & 1;
}

uint64_t sub_1004170CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100417134()
{
  unint64_t result = qword_100714AA0;
  if (!qword_100714AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714AA0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MessageMetadata(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[8];
    uint64_t v9 = (void *)(a1 + v8);
    int v10 = (char *)a2 + v8;
    *(void *)(a1 + 32) = a2[4];
    uint64_t v11 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10000566C(&qword_100714A98);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1005E17E0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v17 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
  }
  return v4;
}

uint64_t destroy for MessageMetadata(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1005E17E0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v4, v7);
  }
  return result;
}

uint64_t initializeWithCopy for MessageMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10000566C(&qword_100714A98);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1005E17E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  return a1;
}

uint64_t assignWithCopy for MessageMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  *(unsigned char *)(a1 + 22) = *(unsigned char *)(a2 + 22);
  *(unsigned char *)(a1 + 23) = *(unsigned char *)(a2 + 23);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v17 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 24))(v7, v8, v17);
      goto LABEL_7;
    }
    sub_1004177C8((uint64_t)v7);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_10000566C(&qword_100714A98);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1005E17E0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1004177C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for MessageMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000566C(&qword_100714A98);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1005E17E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for MessageMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v18 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 40))(v7, v8, v18);
      goto LABEL_7;
    }
    sub_1004177C8((uint64_t)v7);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_10000566C(&qword_100714A98);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1005E17E0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100417BB4);
}

uint64_t sub_100417BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10000566C(&qword_100714A98);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for MessageMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100417C88);
}

uint64_t sub_100417C88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100714A98);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100417D34()
{
  sub_100417DFC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100417DFC()
{
  if (!qword_100714B10)
  {
    type metadata accessor for MessageMetadata.UnparsedHeader(255);
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100714B10);
    }
  }
}

uint64_t getEnumTagSinglePayload for MessageMetadata.UnparsedHeader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100417E68);
}

uint64_t sub_100417E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MessageMetadata.UnparsedHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100417EE8);
}

uint64_t sub_100417EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageData.BodyData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for MessageMetadata.IndexingHint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100418024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageMetadata.IndexingHint()
{
  return &type metadata for MessageMetadata.IndexingHint;
}

uint64_t sub_10041805C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageMetadata.UnparsedHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MessageSectionData.message.getter()
{
  return *(unsigned int *)(v0 + 12);
}

uint64_t MessageSectionData.segment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return sub_100418B60(v3, a1);
}

uint64_t MessageSectionData.segment.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return sub_100418BE4(a1, v3);
}

Swift::UInt32 (__swiftcall *MessageSectionData.segment.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageSectionData.init(mailbox:message:section:segment:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(_DWORD *)(a6 + 8) = a2;
  *(_DWORD *)(a6 + 12) = a3;
  *(void *)(a6 + 16) = a4;
  uint64_t v7 = a6 + *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return sub_100418C48(a5, v7);
}

uint64_t MessageSectionData.Segment.isFinal.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MessageSectionData.Segment(0) + 20));
}

uint64_t MessageSectionData.Segment.isFinal.setter(char a1)
{
  uint64_t result = type metadata accessor for MessageSectionData.Segment(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageSectionData.Segment.isFinal.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageSectionData.Segment.initial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MessageSectionData.Segment(0);
  return sub_1000079E4(v1 + *(int *)(v3 + 24), a1, &qword_100714490);
}

uint64_t MessageSectionData.Segment.initial.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData.Segment(0) + 24);
  return sub_100418CAC(a1, v3);
}

Swift::UInt32 (__swiftcall *MessageSectionData.Segment.initial.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t MessageSectionData.Segment.Initial.bodyStructure.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000079E4(v1, a1, &qword_100714498);
}

double MessageSectionData.Segment.Initial.bodyStructure.setter(uint64_t a1)
{
  sub_10001FDF0(a1, (uint64_t)v13, &qword_100714498);
  sub_10001FDF0((uint64_t)v13, (uint64_t)v14, &qword_100714498);
  sub_10001FDF0((uint64_t)v14, (uint64_t)v15, &qword_100714498);
  long long v2 = *(_OWORD *)(v1 + 144);
  v26[8] = *(_OWORD *)(v1 + 128);
  v26[9] = v2;
  v26[10] = *(_OWORD *)(v1 + 160);
  char v27 = *(unsigned char *)(v1 + 176);
  long long v3 = *(_OWORD *)(v1 + 80);
  v26[4] = *(_OWORD *)(v1 + 64);
  v26[5] = v3;
  long long v4 = *(_OWORD *)(v1 + 112);
  v26[6] = *(_OWORD *)(v1 + 96);
  v26[7] = v4;
  long long v5 = *(_OWORD *)(v1 + 16);
  v26[0] = *(_OWORD *)v1;
  v26[1] = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  void v26[2] = *(_OWORD *)(v1 + 32);
  v26[3] = v6;
  sub_10041904C((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
  long long v7 = v23;
  *(_OWORD *)(v1 + 128) = v22;
  *(_OWORD *)(v1 + 144) = v7;
  *(_OWORD *)(v1 + 160) = v24;
  *(unsigned char *)(v1 + 176) = v25;
  long long v8 = v19;
  *(_OWORD *)(v1 + 64) = v18;
  *(_OWORD *)(v1 + 80) = v8;
  long long v9 = v21;
  *(_OWORD *)(v1 + 96) = v20;
  *(_OWORD *)(v1 + 112) = v9;
  long long v10 = v15[1];
  *(_OWORD *)uint64_t v1 = v15[0];
  *(_OWORD *)(v1 + 16) = v10;
  double result = *(double *)&v16;
  long long v12 = v17;
  *(_OWORD *)(v1 + 32) = v16;
  *(_OWORD *)(v1 + 48) = v12;
  return result;
}

uint64_t MessageSectionData.Segment.Initial.init(bodyStructure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10001FDF0(a1, (uint64_t)v4, &qword_100714498);
  sub_10001FDF0((uint64_t)v4, (uint64_t)v5, &qword_100714498);
  return sub_10001FDF0((uint64_t)v5, a2, &qword_100714498);
}

uint64_t sub_100418518(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  v13[10] = *(_OWORD *)(a1 + 160);
  char v14 = *(unsigned char *)(a1 + 176);
  long long v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v7;
  v15[10] = *(_OWORD *)(a2 + 160);
  char v16 = *(unsigned char *)(a2 + 176);
  long long v8 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  _OWORD v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v11;
  return _s16IMAP2Persistence18MessageSectionDataV7SegmentV7InitialV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)v13, (uint64_t)v15) & 1;
}

uint64_t MessageSectionData.Segment.init(data:isFinal:initial:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for MessageSectionData.Segment(0);
  uint64_t v9 = a4 + *(int *)(v8 + 24);
  uint64_t v10 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  *(unsigned char *)(a4 + *(int *)(v8 + 20)) = a2;
  return sub_10001FDF0(a3, v9, &qword_100714490);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Segment(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) {
    goto LABEL_17;
  }
  uint64_t v5 = v4;
  sub_10001FDF0(a1 + *(int *)(v4 + 24), (uint64_t)v22, &qword_100714490);
  sub_10001FDF0(a2 + *(int *)(v5 + 24), (uint64_t)v23, &qword_100714490);
  sub_10001FDF0((uint64_t)v22, (uint64_t)v24, &qword_100714490);
  if (sub_10006196C((uint64_t)v24) != 1)
  {
    sub_10001FDF0((uint64_t)v23, (uint64_t)v19, &qword_100714490);
    if (sub_10006196C((uint64_t)v19) != 1)
    {
      sub_10001FDF0((uint64_t)v22, (uint64_t)v16, &qword_100714490);
      sub_10001FDF0((uint64_t)v23, (uint64_t)v17, &qword_100714490);
      sub_10001FDF0((uint64_t)v16, (uint64_t)v18, &qword_100714498);
      if (sub_10013AE98((uint64_t)v18) == 1)
      {
        sub_10001FDF0((uint64_t)v17, (uint64_t)v20, &qword_100714498);
        if (sub_10013AE98((uint64_t)v20) == 1)
        {
          sub_10041904C((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
          goto LABEL_14;
        }
      }
      else
      {
        sub_10001FDF0((uint64_t)v17, (uint64_t)v15, &qword_100714498);
        if (sub_10013AE98((uint64_t)v15) != 1)
        {
          sub_10001FDF0((uint64_t)v16, (uint64_t)v13, &qword_100714498);
          sub_10013AE3C((uint64_t)v13, (uint64_t)v25);
          sub_10001FDF0((uint64_t)v17, (uint64_t)v14, &qword_100714498);
          sub_10013AE3C((uint64_t)v14, (uint64_t)v20);
          sub_10041904C((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
          sub_10041904C((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
          static BodyStructure.__derived_enum_equals(_:_:)();
          char v8 = v7;
          sub_10041904C((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
          sub_10041904C((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
          if (v8) {
            goto LABEL_14;
          }
LABEL_17:
          char v11 = 0;
          return v11 & 1;
        }
      }
      sub_10001FDF0((uint64_t)v16, (uint64_t)v20, &qword_100714498);
      sub_10001FDF0((uint64_t)v17, (uint64_t)v21, &qword_100714498);
      sub_10041904C((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
      sub_10041904C((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
      long long v6 = sub_1000613BC;
LABEL_12:
      sub_100418F10((uint64_t)v20, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))v6);
      goto LABEL_17;
    }
LABEL_6:
    sub_10001FDF0((uint64_t)v22, (uint64_t)v20, &qword_100714490);
    sub_10001FDF0((uint64_t)v23, (uint64_t)v21, &qword_100714490);
    sub_10041904C((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
    sub_10041904C((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
    long long v6 = sub_10006133C;
    goto LABEL_12;
  }
  sub_10001FDF0((uint64_t)v23, (uint64_t)v20, &qword_100714490);
  if (sub_10006196C((uint64_t)v20) != 1) {
    goto LABEL_6;
  }
LABEL_14:
  uint64_t v9 = sub_1005E1710();
  uint64_t v10 = sub_1005E1710();
  if (*(void *)(v9 + 16) != *(void *)(v10 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  char v11 = sub_10040C138(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1004189F8()
{
  return sub_1005E16E0();
}

uint64_t sub_100418A48@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X3>, BOOL *a4@<X8>)
{
  if (__s1)
  {
    if (__s2)
    {
      uint64_t __s2 = memcmp(__s1, (const void *)__s2, a3 - (void)__s1);
      *a4 = __s2 == 0;
      return __s2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return __s2;
}

uint64_t _s16IMAP2Persistence18MessageSectionDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned int *)(a1 + 8) << 32)) != (*(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned int *)(a2 + 8) << 32))
    || !sub_100357CFC(*(void *)a1, *(void *)a2)
    || *(_DWORD *)(a2 + 12) != *(_DWORD *)(a1 + 12)
    || (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for MessageSectionData(0) + 28);
  return == infix(_:_:)(a1 + v4, a2 + v4);
}

uint64_t type metadata accessor for MessageSectionData(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714C48);
}

uint64_t sub_100418B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MessageSectionData.Segment(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714CE0);
}

uint64_t sub_100418BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100418C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MessageSectionData.Segment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100418CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100714490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s16IMAP2Persistence18MessageSectionDataV7SegmentV7InitialV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_10001FDF0(a1, (uint64_t)v13, &qword_100714498);
  sub_10001FDF0(a2, (uint64_t)v14, &qword_100714498);
  sub_10001FDF0((uint64_t)v13, (uint64_t)v15, &qword_100714498);
  if (sub_10013AE98((uint64_t)v15) != 1)
  {
    sub_10001FDF0((uint64_t)v14, (uint64_t)v9, &qword_100714498);
    if (sub_10013AE98((uint64_t)v9) != 1)
    {
      sub_10001FDF0((uint64_t)v13, (uint64_t)v7, &qword_100714498);
      sub_10013AE3C((uint64_t)v7, (uint64_t)v12);
      sub_10001FDF0((uint64_t)v14, (uint64_t)v8, &qword_100714498);
      sub_10013AE3C((uint64_t)v8, (uint64_t)v10);
      sub_10041904C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
      sub_10041904C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
      static BodyStructure.__derived_enum_equals(_:_:)();
      char v4 = v5;
      sub_10041904C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      sub_10041904C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000613BC);
      return v4 & 1;
    }
    goto LABEL_5;
  }
  sub_10001FDF0((uint64_t)v14, (uint64_t)v10, &qword_100714498);
  if (sub_10013AE98((uint64_t)v10) != 1)
  {
LABEL_5:
    sub_10001FDF0((uint64_t)v13, (uint64_t)v10, &qword_100714498);
    sub_10001FDF0((uint64_t)v14, (uint64_t)&v11, &qword_100714498);
    sub_10041904C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    sub_10041904C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    sub_100418F10((uint64_t)v10, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))sub_1000613BC);
    char v4 = 0;
    return v4 & 1;
  }
  sub_10041904C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
  char v4 = 1;
  return v4 & 1;
}

uint64_t sub_100418F10(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t, char))
{
  uint64_t v22 = *(void *)(a1 + 192);
  uint64_t v23 = *(void *)(a1 + 184);
  uint64_t v4 = *(void *)(a1 + 208);
  uint64_t v21 = *(void *)(a1 + 200);
  uint64_t v5 = *(void *)(a1 + 216);
  uint64_t v6 = *(void *)(a1 + 224);
  uint64_t v7 = *(void *)(a1 + 232);
  uint64_t v8 = *(void *)(a1 + 240);
  long long v19 = *(_OWORD *)(a1 + 264);
  long long v20 = *(_OWORD *)(a1 + 248);
  long long v18 = *(_OWORD *)(a1 + 280);
  long long v16 = *(_OWORD *)(a1 + 312);
  long long v17 = *(_OWORD *)(a1 + 296);
  long long v15 = *(_OWORD *)(a1 + 328);
  uint64_t v9 = *(void *)(a1 + 344);
  uint64_t v10 = *(void *)(a1 + 352);
  char v11 = *(unsigned char *)(a1 + 360);
  char v13 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v13);
  LOBYTE(v14) = v11;
  a2(v23, v22, v21, v4, v5, v6, v7, v8, v20, *((void *)&v20 + 1), v19, *((void *)&v19 + 1), v18, *((void *)&v18 + 1), v17, *((void *)&v17 + 1), v16, *((void *)&v16 + 1), v15,
    *((void *)&v15 + 1),
    v9,
    v10,
    v14);
  return a1;
}

uint64_t sub_10041904C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for MessageSectionData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1005E17E0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    uint64_t v11 = type metadata accessor for MessageSectionData.Segment(0);
    v7[*(int *)(v11 + 20)] = v8[*(int *)(v11 + 20)];
    uint64_t v12 = *(int *)(v11 + 24);
    char v13 = &v7[v12];
    int v14 = &v8[v12];
    int v15 = v14[176];
    if (v15 == 254 || v15 == 255)
    {
      long long v16 = *((_OWORD *)v14 + 9);
      *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
      *((_OWORD *)v13 + 9) = v16;
      *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
      v13[176] = v14[176];
      long long v17 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v17;
      long long v18 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v18;
      long long v19 = *((_OWORD *)v14 + 1);
      *(_OWORD *)char v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v19;
      long long v20 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v20;
    }
    else
    {
      char v44 = v15 & 1;
      uint64_t v21 = *((void *)v14 + 4);
      uint64_t v22 = *((void *)v14 + 5);
      uint64_t v23 = *((void *)v14 + 6);
      uint64_t v30 = *((void *)v14 + 8);
      uint64_t v31 = *((void *)v14 + 9);
      uint64_t v32 = *((void *)v14 + 10);
      uint64_t v33 = *((void *)v14 + 11);
      uint64_t v34 = *((void *)v14 + 12);
      uint64_t v35 = *((void *)v14 + 13);
      uint64_t v36 = *((void *)v14 + 14);
      uint64_t v37 = *((void *)v14 + 15);
      uint64_t v38 = *((void *)v14 + 16);
      uint64_t v39 = *((void *)v14 + 17);
      uint64_t v40 = *((void *)v14 + 18);
      uint64_t v41 = *((void *)v14 + 19);
      uint64_t v42 = *((void *)v14 + 20);
      uint64_t v43 = *((void *)v14 + 21);
      uint64_t v24 = *(void *)v14;
      uint64_t v25 = *((void *)v14 + 1);
      uint64_t v26 = *((void *)v14 + 2);
      uint64_t v27 = *((void *)v14 + 3);
      uint64_t v28 = *((void *)v14 + 7);
      sub_100136870(*(void *)v14, v25, v26, v27, v21, v22, v23, v28, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
        v41,
        v42,
        v43,
        v15 & 1);
      *(void *)char v13 = v24;
      *((void *)v13 + 1) = v25;
      *((void *)v13 + 2) = v26;
      *((void *)v13 + 3) = v27;
      *((void *)v13 + 4) = v21;
      *((void *)v13 + 5) = v22;
      *((void *)v13 + 6) = v23;
      *((void *)v13 + 7) = v28;
      *((void *)v13 + 8) = v30;
      *((void *)v13 + 9) = v31;
      *((void *)v13 + 10) = v32;
      *((void *)v13 + 11) = v33;
      *((void *)v13 + 12) = v34;
      *((void *)v13 + 13) = v35;
      *((void *)v13 + 14) = v36;
      *((void *)v13 + 15) = v37;
      *((void *)v13 + 16) = v38;
      *((void *)v13 + 17) = v39;
      *((void *)v13 + 18) = v40;
      *((void *)v13 + 19) = v41;
      *((void *)v13 + 20) = v42;
      *((void *)v13 + 21) = v43;
      v13[176] = v44;
    }
  }
  return v5;
}

void destroy for MessageSectionData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v4 + *(int *)(type metadata accessor for MessageSectionData.Segment(0) + 24);
  unsigned int v7 = *(unsigned __int8 *)(v6 + 176);
  if (v7 <= 0xFD) {
    sub_100061440(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 80), *(void *)(v6 + 88), *(void *)(v6 + 96), *(void *)(v6 + 104), *(void *)(v6 + 112), *(void *)(v6 + 120), *(void *)(v6 + 128), *(void *)(v6 + 136), *(void *)(v6 + 144),
  }
      *(void *)(v6 + 152),
      *(void *)(v6 + 160),
      *(void *)(v6 + 168),
      v7 & 1);
}

void *initializeWithCopy for MessageSectionData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005E17E0();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  uint64_t v9 = type metadata accessor for MessageSectionData.Segment(0);
  v5[*(int *)(v9 + 20)] = v6[*(int *)(v9 + 20)];
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  int v13 = v12[176];
  if (v13 == 254 || v13 == 255)
  {
    long long v14 = *((_OWORD *)v12 + 9);
    *((_OWORD *)v11 + 8) = *((_OWORD *)v12 + 8);
    *((_OWORD *)v11 + 9) = v14;
    *((_OWORD *)v11 + 10) = *((_OWORD *)v12 + 10);
    v11[176] = v12[176];
    long long v15 = *((_OWORD *)v12 + 5);
    *((_OWORD *)v11 + 4) = *((_OWORD *)v12 + 4);
    *((_OWORD *)v11 + 5) = v15;
    long long v16 = *((_OWORD *)v12 + 7);
    *((_OWORD *)v11 + 6) = *((_OWORD *)v12 + 6);
    *((_OWORD *)v11 + 7) = v16;
    long long v17 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v17;
    long long v18 = *((_OWORD *)v12 + 3);
    *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 3) = v18;
  }
  else
  {
    char v42 = v13 & 1;
    uint64_t v19 = *((void *)v12 + 4);
    uint64_t v20 = *((void *)v12 + 5);
    uint64_t v21 = *((void *)v12 + 6);
    uint64_t v28 = *((void *)v12 + 8);
    uint64_t v29 = *((void *)v12 + 9);
    uint64_t v30 = *((void *)v12 + 10);
    uint64_t v31 = *((void *)v12 + 11);
    uint64_t v32 = *((void *)v12 + 12);
    uint64_t v33 = *((void *)v12 + 13);
    uint64_t v34 = *((void *)v12 + 14);
    uint64_t v35 = *((void *)v12 + 15);
    uint64_t v36 = *((void *)v12 + 16);
    uint64_t v37 = *((void *)v12 + 17);
    uint64_t v38 = *((void *)v12 + 18);
    uint64_t v39 = *((void *)v12 + 19);
    uint64_t v40 = *((void *)v12 + 20);
    uint64_t v41 = *((void *)v12 + 21);
    uint64_t v22 = *(void *)v12;
    uint64_t v23 = *((void *)v12 + 1);
    uint64_t v24 = *((void *)v12 + 2);
    uint64_t v25 = *((void *)v12 + 3);
    uint64_t v26 = *((void *)v12 + 7);
    sub_100136870(*(void *)v12, v23, v24, v25, v19, v20, v21, v26, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
      v39,
      v40,
      v41,
      v13 & 1);
    *(void *)uint64_t v11 = v22;
    *((void *)v11 + 1) = v23;
    *((void *)v11 + 2) = v24;
    *((void *)v11 + 3) = v25;
    *((void *)v11 + 4) = v19;
    *((void *)v11 + 5) = v20;
    *((void *)v11 + 6) = v21;
    *((void *)v11 + 7) = v26;
    *((void *)v11 + 8) = v28;
    *((void *)v11 + 9) = v29;
    *((void *)v11 + 10) = v30;
    *((void *)v11 + 11) = v31;
    *((void *)v11 + 12) = v32;
    *((void *)v11 + 13) = v33;
    *((void *)v11 + 14) = v34;
    *((void *)v11 + 15) = v35;
    *((void *)v11 + 16) = v36;
    *((void *)v11 + 17) = v37;
    *((void *)v11 + 18) = v38;
    *((void *)v11 + 19) = v39;
    *((void *)v11 + 20) = v40;
    *((void *)v11 + 21) = v41;
    v11[176] = v42;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for MessageSectionData.Segment(0);
  *(unsigned char *)(v7 + *(int *)(v10 + 20)) = *(unsigned char *)(v8 + *(int *)(v10 + 20));
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = v7 + v11;
  int v13 = (long long *)(v8 + v11);
  int v14 = *(unsigned __int8 *)(v12 + 176);
  int v15 = *((unsigned __int8 *)v13 + 176);
  if (v14 == 254)
  {
    if (v15 == 254) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v15 == 254)
  {
    sub_100419A78(v12);
LABEL_12:
    long long v37 = v13[3];
    long long v39 = *v13;
    long long v38 = v13[1];
    *(_OWORD *)(v12 + 32) = v13[2];
    *(_OWORD *)(v12 + 48) = v37;
    *(_OWORD *)uint64_t v12 = v39;
    *(_OWORD *)(v12 + 16) = v38;
    long long v40 = v13[7];
    long long v42 = v13[4];
    long long v41 = v13[5];
    *(_OWORD *)(v12 + 96) = v13[6];
    *(_OWORD *)(v12 + 112) = v40;
    *(_OWORD *)(v12 + 64) = v42;
    *(_OWORD *)(v12 + 80) = v41;
    long long v44 = v13[9];
    long long v43 = v13[10];
    long long v45 = v13[8];
    *(unsigned char *)(v12 + 176) = *((unsigned char *)v13 + 176);
    *(_OWORD *)(v12 + 144) = v44;
    *(_OWORD *)(v12 + 160) = v43;
    *(_OWORD *)(v12 + 128) = v45;
    return a1;
  }
  if (v14 != 255)
  {
    if (v15 != 255)
    {
      char v105 = v15 & 1;
      uint64_t v47 = *((void *)v13 + 1);
      uint64_t v48 = *((void *)v13 + 2);
      uint64_t v49 = *((void *)v13 + 3);
      uint64_t v50 = *((void *)v13 + 4);
      uint64_t v51 = *((void *)v13 + 5);
      uint64_t v53 = *((void *)v13 + 6);
      uint64_t v52 = *((void *)v13 + 7);
      uint64_t v77 = *((void *)v13 + 8);
      uint64_t v79 = *((void *)v13 + 9);
      uint64_t v81 = *((void *)v13 + 10);
      uint64_t v83 = *((void *)v13 + 11);
      uint64_t v85 = *((void *)v13 + 12);
      uint64_t v87 = *((void *)v13 + 13);
      uint64_t v89 = *((void *)v13 + 14);
      uint64_t v91 = *((void *)v13 + 15);
      uint64_t v93 = *((void *)v13 + 16);
      uint64_t v95 = *((void *)v13 + 17);
      uint64_t v97 = *((void *)v13 + 18);
      uint64_t v99 = *((void *)v13 + 19);
      uint64_t v101 = *((void *)v13 + 20);
      uint64_t v103 = *((void *)v13 + 21);
      uint64_t v54 = *(void *)v13;
      uint64_t v55 = v47;
      uint64_t v56 = v48;
      uint64_t v57 = v49;
      uint64_t v58 = v52;
      sub_100136870(v54, v47, v48, v49, v50, v51, v53, v52, v77, v79, v81, v83, v85, v87, v89, v91, v93, v95, v97,
        v99,
        v101,
        v103,
        v15 & 1);
      uint64_t v59 = *(void *)v12;
      uint64_t v60 = *(void *)(v12 + 8);
      *(void *)uint64_t v12 = v54;
      *(void *)(v12 + 8) = v55;
      uint64_t v61 = *(void *)(v12 + 16);
      uint64_t v62 = *(void *)(v12 + 24);
      *(void *)(v12 + 16) = v56;
      *(void *)(v12 + 24) = v57;
      uint64_t v63 = *(void *)(v12 + 32);
      uint64_t v64 = *(void *)(v12 + 40);
      *(void *)(v12 + 32) = v50;
      *(void *)(v12 + 40) = v51;
      uint64_t v65 = *(void *)(v12 + 48);
      uint64_t v66 = *(void *)(v12 + 56);
      *(void *)(v12 + 48) = v53;
      *(void *)(v12 + 56) = v58;
      long long v67 = *(_OWORD *)(v12 + 64);
      long long v68 = *(_OWORD *)(v12 + 80);
      *(void *)(v12 + 64) = v77;
      *(void *)(v12 + 72) = v79;
      *(void *)(v12 + 80) = v81;
      *(void *)(v12 + 88) = v83;
      long long v69 = *(_OWORD *)(v12 + 96);
      long long v70 = *(_OWORD *)(v12 + 112);
      *(void *)(v12 + 96) = v85;
      *(void *)(v12 + 104) = v87;
      *(void *)(v12 + 112) = v89;
      *(void *)(v12 + 120) = v91;
      long long v71 = *(_OWORD *)(v12 + 128);
      long long v72 = *(_OWORD *)(v12 + 144);
      *(void *)(v12 + 128) = v93;
      *(void *)(v12 + 136) = v95;
      *(void *)(v12 + 144) = v97;
      *(void *)(v12 + 152) = v99;
      uint64_t v73 = *(void *)(v12 + 160);
      uint64_t v74 = *(void *)(v12 + 168);
      *(void *)(v12 + 160) = v101;
      *(void *)(v12 + 168) = v103;
      char v75 = *(unsigned char *)(v12 + 176);
      *(unsigned char *)(v12 + 176) = v105;
      sub_100061440(v59, v60, v61, v62, v63, v64, v65, v66, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v69, *((uint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72,
        *((uint64_t *)&v72 + 1),
        v73,
        v74,
        v75);
      return a1;
    }
    sub_100137364(v12);
    goto LABEL_12;
  }
LABEL_7:
  if (v15 != 255)
  {
    char v104 = v15 & 1;
    uint64_t v25 = *((void *)v13 + 1);
    uint64_t v26 = *((void *)v13 + 2);
    uint64_t v27 = *((void *)v13 + 3);
    uint64_t v28 = *((void *)v13 + 4);
    uint64_t v29 = *((void *)v13 + 5);
    uint64_t v31 = *((void *)v13 + 6);
    uint64_t v30 = *((void *)v13 + 7);
    uint64_t v76 = *((void *)v13 + 8);
    uint64_t v78 = *((void *)v13 + 9);
    uint64_t v80 = *((void *)v13 + 10);
    uint64_t v82 = *((void *)v13 + 11);
    uint64_t v84 = *((void *)v13 + 12);
    uint64_t v86 = *((void *)v13 + 13);
    uint64_t v88 = *((void *)v13 + 14);
    uint64_t v90 = *((void *)v13 + 15);
    uint64_t v92 = *((void *)v13 + 16);
    uint64_t v94 = *((void *)v13 + 17);
    uint64_t v96 = *((void *)v13 + 18);
    uint64_t v98 = *((void *)v13 + 19);
    uint64_t v100 = *((void *)v13 + 20);
    uint64_t v102 = *((void *)v13 + 21);
    uint64_t v32 = *(void *)v13;
    uint64_t v33 = v25;
    uint64_t v34 = v26;
    uint64_t v35 = v27;
    uint64_t v36 = v30;
    sub_100136870(v32, v25, v26, v27, v28, v29, v31, v30, v76, v78, v80, v82, v84, v86, v88, v90, v92, v94, v96,
      v98,
      v100,
      v102,
      v15 & 1);
    *(void *)uint64_t v12 = v32;
    *(void *)(v12 + 8) = v33;
    *(void *)(v12 + 16) = v34;
    *(void *)(v12 + 24) = v35;
    *(void *)(v12 + 32) = v28;
    *(void *)(v12 + 40) = v29;
    *(void *)(v12 + 48) = v31;
    *(void *)(v12 + 56) = v36;
    *(void *)(v12 + 64) = v76;
    *(void *)(v12 + 72) = v78;
    *(void *)(v12 + 80) = v80;
    *(void *)(v12 + 88) = v82;
    *(void *)(v12 + 96) = v84;
    *(void *)(v12 + 104) = v86;
    *(void *)(v12 + 112) = v88;
    *(void *)(v12 + 120) = v90;
    *(void *)(v12 + 128) = v92;
    *(void *)(v12 + 136) = v94;
    *(void *)(v12 + 144) = v96;
    *(void *)(v12 + 152) = v98;
    *(void *)(v12 + 160) = v100;
    *(void *)(v12 + 168) = v102;
    *(unsigned char *)(v12 + 176) = v104;
    return a1;
  }
LABEL_8:
  long long v16 = *v13;
  long long v17 = v13[1];
  long long v18 = v13[3];
  *(_OWORD *)(v12 + 32) = v13[2];
  *(_OWORD *)(v12 + 48) = v18;
  *(_OWORD *)uint64_t v12 = v16;
  *(_OWORD *)(v12 + 16) = v17;
  long long v19 = v13[4];
  long long v20 = v13[5];
  long long v21 = v13[7];
  *(_OWORD *)(v12 + 96) = v13[6];
  *(_OWORD *)(v12 + 112) = v21;
  *(_OWORD *)(v12 + 64) = v19;
  *(_OWORD *)(v12 + 80) = v20;
  long long v22 = v13[8];
  long long v23 = v13[9];
  long long v24 = v13[10];
  *(unsigned char *)(v12 + 176) = *((unsigned char *)v13 + 176);
  *(_OWORD *)(v12 + 144) = v23;
  *(_OWORD *)(v12 + 160) = v24;
  *(_OWORD *)(v12 + 128) = v22;
  return a1;
}

uint64_t sub_100419A78(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for MessageSectionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  int v4 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = type metadata accessor for MessageSectionData.Segment(0);
  *(unsigned char *)(v6 + *(int *)(v9 + 20)) = *(unsigned char *)(v7 + *(int *)(v9 + 20));
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  long long v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  long long v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  long long v15 = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v12 + 96);
  *(_OWORD *)(v11 + 112) = v15;
  long long v16 = *(_OWORD *)(v12 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(v12 + 64);
  *(_OWORD *)(v11 + 80) = v16;
  *(unsigned char *)(v11 + 176) = *(unsigned char *)(v12 + 176);
  long long v17 = *(_OWORD *)(v12 + 160);
  long long v18 = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(v11 + 144) = *(_OWORD *)(v12 + 144);
  *(_OWORD *)(v11 + 160) = v17;
  *(_OWORD *)(v11 + 128) = v18;
  return a1;
}

void *assignWithTake for MessageSectionData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005E17E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for MessageSectionData.Segment(0);
  v7[*(int *)(v10 + 20)] = v8[*(int *)(v10 + 20)];
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = (uint64_t)&v7[v11];
  long long v13 = &v8[v11];
  int v14 = *(unsigned __int8 *)(v12 + 176);
  if (v14 != 254)
  {
    int v15 = v13[176];
    if (v15 == 254)
    {
      sub_100419A78(v12);
    }
    else if (v14 != 255)
    {
      if (v15 != 255)
      {
        uint64_t v22 = *(void *)v12;
        uint64_t v23 = *(void *)(v12 + 8);
        uint64_t v24 = *(void *)(v12 + 16);
        uint64_t v25 = *(void *)(v12 + 24);
        uint64_t v26 = *(void *)(v12 + 32);
        uint64_t v27 = *(void *)(v12 + 40);
        uint64_t v28 = *(void *)(v12 + 48);
        uint64_t v29 = *(void *)(v12 + 56);
        long long v30 = *(_OWORD *)(v12 + 64);
        long long v31 = *(_OWORD *)(v12 + 80);
        long long v32 = *(_OWORD *)(v12 + 96);
        long long v33 = *(_OWORD *)(v12 + 112);
        long long v34 = *(_OWORD *)(v12 + 128);
        long long v35 = *(_OWORD *)(v12 + 144);
        uint64_t v36 = *(void *)(v12 + 160);
        uint64_t v37 = *(void *)(v12 + 168);
        long long v38 = *((_OWORD *)v13 + 1);
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        *(_OWORD *)(v12 + 16) = v38;
        long long v39 = *((_OWORD *)v13 + 3);
        *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
        *(_OWORD *)(v12 + 48) = v39;
        long long v40 = *((_OWORD *)v13 + 5);
        *(_OWORD *)(v12 + 64) = *((_OWORD *)v13 + 4);
        *(_OWORD *)(v12 + 80) = v40;
        long long v41 = *((_OWORD *)v13 + 7);
        *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
        *(_OWORD *)(v12 + 112) = v41;
        long long v42 = *((_OWORD *)v13 + 9);
        *(_OWORD *)(v12 + 128) = *((_OWORD *)v13 + 8);
        *(_OWORD *)(v12 + 144) = v42;
        *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
        *(unsigned char *)(v12 + 176) = v15 & 1;
        sub_100061440(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35,
          *((uint64_t *)&v35 + 1),
          v36,
          v37,
          v14 & 1);
        return a1;
      }
      sub_100137364(v12);
    }
  }
  long long v16 = *((_OWORD *)v13 + 9);
  *(_OWORD *)(v12 + 128) = *((_OWORD *)v13 + 8);
  *(_OWORD *)(v12 + 144) = v16;
  *(_OWORD *)(v12 + 160) = *((_OWORD *)v13 + 10);
  *(unsigned char *)(v12 + 176) = v13[176];
  long long v17 = *((_OWORD *)v13 + 5);
  *(_OWORD *)(v12 + 64) = *((_OWORD *)v13 + 4);
  *(_OWORD *)(v12 + 80) = v17;
  long long v18 = *((_OWORD *)v13 + 7);
  *(_OWORD *)(v12 + 96) = *((_OWORD *)v13 + 6);
  *(_OWORD *)(v12 + 112) = v18;
  long long v19 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v19;
  long long v20 = *((_OWORD *)v13 + 3);
  *(_OWORD *)(v12 + 32) = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v12 + 48) = v20;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100419D58);
}

uint64_t sub_100419D58(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MessageSectionData.Segment(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MessageSectionData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100419E1C);
}

void *sub_100419E1C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MessageSectionData.Segment(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100419EC4()
{
  uint64_t result = type metadata accessor for MessageSectionData.Segment(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MessageSectionData.Segment(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    int v11 = *((unsigned __int8 *)a2 + v8 + 176);
    if (v11 == 254 || v11 == 255)
    {
      long long v12 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v12;
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      v9[176] = v10[176];
      long long v13 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v13;
      long long v14 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v14;
      long long v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      long long v16 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v16;
    }
    else
    {
      char v41 = v11 & 1;
      uint64_t v18 = *((void *)v10 + 4);
      uint64_t v19 = *((void *)v10 + 5);
      uint64_t v20 = *((void *)v10 + 6);
      uint64_t v27 = *((void *)v10 + 8);
      uint64_t v28 = *((void *)v10 + 9);
      uint64_t v29 = *((void *)v10 + 10);
      uint64_t v30 = *((void *)v10 + 11);
      uint64_t v31 = *((void *)v10 + 12);
      uint64_t v32 = *((void *)v10 + 13);
      uint64_t v33 = *((void *)v10 + 14);
      uint64_t v34 = *((void *)v10 + 15);
      uint64_t v35 = *((void *)v10 + 16);
      uint64_t v36 = *((void *)v10 + 17);
      uint64_t v37 = *((void *)v10 + 18);
      uint64_t v38 = *((void *)v10 + 19);
      uint64_t v39 = *((void *)v10 + 20);
      uint64_t v40 = *((void *)v10 + 21);
      uint64_t v21 = *(void *)v10;
      uint64_t v22 = *((void *)v10 + 1);
      uint64_t v23 = *((void *)v10 + 2);
      uint64_t v24 = *((void *)v10 + 3);
      uint64_t v25 = *((void *)v10 + 7);
      sub_100136870(*(void *)v10, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v11 & 1);
      *(void *)uint64_t v9 = v21;
      *((void *)v9 + 1) = v22;
      *((void *)v9 + 2) = v23;
      *((void *)v9 + 3) = v24;
      *((void *)v9 + 4) = v18;
      *((void *)v9 + 5) = v19;
      *((void *)v9 + 6) = v20;
      *((void *)v9 + 7) = v25;
      *((void *)v9 + 8) = v27;
      *((void *)v9 + 9) = v28;
      *((void *)v9 + 10) = v29;
      *((void *)v9 + 11) = v30;
      *((void *)v9 + 12) = v31;
      *((void *)v9 + 13) = v32;
      *((void *)v9 + 14) = v33;
      *((void *)v9 + 15) = v34;
      *((void *)v9 + 16) = v35;
      *((void *)v9 + 17) = v36;
      *((void *)v9 + 18) = v37;
      *((void *)v9 + 19) = v38;
      *((void *)v9 + 20) = v39;
      *((void *)v9 + 21) = v40;
      v9[176] = v41;
    }
  }
  return a1;
}

void destroy for MessageSectionData.Segment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  unsigned int v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 <= 0xFD) {
    sub_100061440(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(void *)(v5 + 88), *(void *)(v5 + 96), *(void *)(v5 + 104), *(void *)(v5 + 112), *(void *)(v5 + 120), *(void *)(v5 + 128), *(void *)(v5 + 136), *(void *)(v5 + 144),
  }
      *(void *)(v5 + 152),
      *(void *)(v5 + 160),
      *(void *)(v5 + 168),
      v6 & 1);
}

uint64_t initializeWithCopy for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  int v10 = *(unsigned __int8 *)(a2 + v7 + 176);
  if (v10 == 254 || v10 == 255)
  {
    long long v11 = *((_OWORD *)v9 + 9);
    *(_OWORD *)(v8 + 128) = *((_OWORD *)v9 + 8);
    *(_OWORD *)(v8 + 144) = v11;
    *(_OWORD *)(v8 + 160) = *((_OWORD *)v9 + 10);
    *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
    long long v12 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 64) = *((_OWORD *)v9 + 4);
    *(_OWORD *)(v8 + 80) = v12;
    long long v13 = *((_OWORD *)v9 + 7);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v13;
    long long v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v14;
    long long v15 = *((_OWORD *)v9 + 3);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v15;
  }
  else
  {
    char v39 = v10 & 1;
    uint64_t v16 = v9[4];
    uint64_t v17 = v9[5];
    uint64_t v18 = v9[6];
    uint64_t v25 = v9[8];
    uint64_t v26 = v9[9];
    uint64_t v27 = v9[10];
    uint64_t v28 = v9[11];
    uint64_t v29 = v9[12];
    uint64_t v30 = v9[13];
    uint64_t v31 = v9[14];
    uint64_t v32 = v9[15];
    uint64_t v33 = v9[16];
    uint64_t v34 = v9[17];
    uint64_t v35 = v9[18];
    uint64_t v36 = v9[19];
    uint64_t v37 = v9[20];
    uint64_t v38 = v9[21];
    uint64_t v19 = *v9;
    uint64_t v20 = v9[1];
    uint64_t v21 = v9[2];
    uint64_t v22 = v9[3];
    uint64_t v23 = v9[7];
    sub_100136870(*v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(void *)uint64_t v8 = v19;
    *(void *)(v8 + 8) = v20;
    *(void *)(v8 + 16) = v21;
    *(void *)(v8 + 24) = v22;
    *(void *)(v8 + 32) = v16;
    *(void *)(v8 + 40) = v17;
    *(void *)(v8 + 48) = v18;
    *(void *)(v8 + 56) = v23;
    *(void *)(v8 + 64) = v25;
    *(void *)(v8 + 72) = v26;
    *(void *)(v8 + 80) = v27;
    *(void *)(v8 + 88) = v28;
    *(void *)(v8 + 96) = v29;
    *(void *)(v8 + 104) = v30;
    *(void *)(v8 + 112) = v31;
    *(void *)(v8 + 120) = v32;
    *(void *)(v8 + 128) = v33;
    *(void *)(v8 + 136) = v34;
    *(void *)(v8 + 144) = v35;
    *(void *)(v8 + 152) = v36;
    *(void *)(v8 + 160) = v37;
    *(void *)(v8 + 168) = v38;
    *(unsigned char *)(v8 + 176) = v39;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  int v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  int v11 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 254)
  {
    if (v11 == 254) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v11 == 254)
  {
    sub_100419A78(v8);
LABEL_12:
    long long v33 = v9[3];
    long long v35 = *v9;
    long long v34 = v9[1];
    *(_OWORD *)(v8 + 32) = v9[2];
    *(_OWORD *)(v8 + 48) = v33;
    *(_OWORD *)uint64_t v8 = v35;
    *(_OWORD *)(v8 + 16) = v34;
    long long v36 = v9[7];
    long long v38 = v9[4];
    long long v37 = v9[5];
    *(_OWORD *)(v8 + 96) = v9[6];
    *(_OWORD *)(v8 + 112) = v36;
    *(_OWORD *)(v8 + 64) = v38;
    *(_OWORD *)(v8 + 80) = v37;
    long long v40 = v9[9];
    long long v39 = v9[10];
    long long v41 = v9[8];
    *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
    *(_OWORD *)(v8 + 144) = v40;
    *(_OWORD *)(v8 + 160) = v39;
    *(_OWORD *)(v8 + 128) = v41;
    return a1;
  }
  if (v10 != 255)
  {
    if (v11 != 255)
    {
      char v101 = v11 & 1;
      uint64_t v43 = *((void *)v9 + 1);
      uint64_t v44 = *((void *)v9 + 2);
      uint64_t v45 = *((void *)v9 + 3);
      uint64_t v46 = *((void *)v9 + 4);
      uint64_t v47 = *((void *)v9 + 5);
      uint64_t v49 = *((void *)v9 + 6);
      uint64_t v48 = *((void *)v9 + 7);
      uint64_t v73 = *((void *)v9 + 8);
      uint64_t v75 = *((void *)v9 + 9);
      uint64_t v77 = *((void *)v9 + 10);
      uint64_t v79 = *((void *)v9 + 11);
      uint64_t v81 = *((void *)v9 + 12);
      uint64_t v83 = *((void *)v9 + 13);
      uint64_t v85 = *((void *)v9 + 14);
      uint64_t v87 = *((void *)v9 + 15);
      uint64_t v89 = *((void *)v9 + 16);
      uint64_t v91 = *((void *)v9 + 17);
      uint64_t v93 = *((void *)v9 + 18);
      uint64_t v95 = *((void *)v9 + 19);
      uint64_t v97 = *((void *)v9 + 20);
      uint64_t v99 = *((void *)v9 + 21);
      uint64_t v50 = *(void *)v9;
      uint64_t v51 = v43;
      uint64_t v52 = v44;
      uint64_t v53 = v45;
      uint64_t v54 = v48;
      sub_100136870(v50, v43, v44, v45, v46, v47, v49, v48, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      uint64_t v55 = *(void *)v8;
      uint64_t v56 = *(void *)(v8 + 8);
      *(void *)uint64_t v8 = v50;
      *(void *)(v8 + 8) = v51;
      uint64_t v57 = *(void *)(v8 + 16);
      uint64_t v58 = *(void *)(v8 + 24);
      *(void *)(v8 + 16) = v52;
      *(void *)(v8 + 24) = v53;
      uint64_t v59 = *(void *)(v8 + 32);
      uint64_t v60 = *(void *)(v8 + 40);
      *(void *)(v8 + 32) = v46;
      *(void *)(v8 + 40) = v47;
      uint64_t v61 = *(void *)(v8 + 48);
      uint64_t v62 = *(void *)(v8 + 56);
      *(void *)(v8 + 48) = v49;
      *(void *)(v8 + 56) = v54;
      long long v63 = *(_OWORD *)(v8 + 64);
      long long v64 = *(_OWORD *)(v8 + 80);
      *(void *)(v8 + 64) = v73;
      *(void *)(v8 + 72) = v75;
      *(void *)(v8 + 80) = v77;
      *(void *)(v8 + 88) = v79;
      long long v65 = *(_OWORD *)(v8 + 96);
      long long v66 = *(_OWORD *)(v8 + 112);
      *(void *)(v8 + 96) = v81;
      *(void *)(v8 + 104) = v83;
      *(void *)(v8 + 112) = v85;
      *(void *)(v8 + 120) = v87;
      long long v67 = *(_OWORD *)(v8 + 128);
      long long v68 = *(_OWORD *)(v8 + 144);
      *(void *)(v8 + 128) = v89;
      *(void *)(v8 + 136) = v91;
      *(void *)(v8 + 144) = v93;
      *(void *)(v8 + 152) = v95;
      uint64_t v69 = *(void *)(v8 + 160);
      uint64_t v70 = *(void *)(v8 + 168);
      *(void *)(v8 + 160) = v97;
      *(void *)(v8 + 168) = v99;
      char v71 = *(unsigned char *)(v8 + 176);
      *(unsigned char *)(v8 + 176) = v101;
      sub_100061440(v55, v56, v57, v58, v59, v60, v61, v62, v63, *((uint64_t *)&v63 + 1), v64, *((uint64_t *)&v64 + 1), v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1), v67, *((uint64_t *)&v67 + 1), v68,
        *((uint64_t *)&v68 + 1),
        v69,
        v70,
        v71);
      return a1;
    }
    sub_100137364(v8);
    goto LABEL_12;
  }
LABEL_7:
  if (v11 != 255)
  {
    char v100 = v11 & 1;
    uint64_t v21 = *((void *)v9 + 1);
    uint64_t v22 = *((void *)v9 + 2);
    uint64_t v23 = *((void *)v9 + 3);
    uint64_t v24 = *((void *)v9 + 4);
    uint64_t v25 = *((void *)v9 + 5);
    uint64_t v27 = *((void *)v9 + 6);
    uint64_t v26 = *((void *)v9 + 7);
    uint64_t v72 = *((void *)v9 + 8);
    uint64_t v74 = *((void *)v9 + 9);
    uint64_t v76 = *((void *)v9 + 10);
    uint64_t v78 = *((void *)v9 + 11);
    uint64_t v80 = *((void *)v9 + 12);
    uint64_t v82 = *((void *)v9 + 13);
    uint64_t v84 = *((void *)v9 + 14);
    uint64_t v86 = *((void *)v9 + 15);
    uint64_t v88 = *((void *)v9 + 16);
    uint64_t v90 = *((void *)v9 + 17);
    uint64_t v92 = *((void *)v9 + 18);
    uint64_t v94 = *((void *)v9 + 19);
    uint64_t v96 = *((void *)v9 + 20);
    uint64_t v98 = *((void *)v9 + 21);
    uint64_t v28 = *(void *)v9;
    uint64_t v29 = v21;
    uint64_t v30 = v22;
    uint64_t v31 = v23;
    uint64_t v32 = v26;
    sub_100136870(v28, v21, v22, v23, v24, v25, v27, v26, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    *(void *)uint64_t v8 = v28;
    *(void *)(v8 + 8) = v29;
    *(void *)(v8 + 16) = v30;
    *(void *)(v8 + 24) = v31;
    *(void *)(v8 + 32) = v24;
    *(void *)(v8 + 40) = v25;
    *(void *)(v8 + 48) = v27;
    *(void *)(v8 + 56) = v32;
    *(void *)(v8 + 64) = v72;
    *(void *)(v8 + 72) = v74;
    *(void *)(v8 + 80) = v76;
    *(void *)(v8 + 88) = v78;
    *(void *)(v8 + 96) = v80;
    *(void *)(v8 + 104) = v82;
    *(void *)(v8 + 112) = v84;
    *(void *)(v8 + 120) = v86;
    *(void *)(v8 + 128) = v88;
    *(void *)(v8 + 136) = v90;
    *(void *)(v8 + 144) = v92;
    *(void *)(v8 + 152) = v94;
    *(void *)(v8 + 160) = v96;
    *(void *)(v8 + 168) = v98;
    *(unsigned char *)(v8 + 176) = v100;
    return a1;
  }
LABEL_8:
  long long v12 = *v9;
  long long v13 = v9[1];
  long long v14 = v9[3];
  *(_OWORD *)(v8 + 32) = v9[2];
  *(_OWORD *)(v8 + 48) = v14;
  *(_OWORD *)uint64_t v8 = v12;
  *(_OWORD *)(v8 + 16) = v13;
  long long v15 = v9[4];
  long long v16 = v9[5];
  long long v17 = v9[7];
  *(_OWORD *)(v8 + 96) = v9[6];
  *(_OWORD *)(v8 + 112) = v17;
  *(_OWORD *)(v8 + 64) = v15;
  *(_OWORD *)(v8 + 80) = v16;
  long long v18 = v9[8];
  long long v19 = v9[9];
  long long v20 = v9[10];
  *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
  *(_OWORD *)(v8 + 144) = v19;
  *(_OWORD *)(v8 + 160) = v20;
  *(_OWORD *)(v8 + 128) = v18;
  return a1;
}

uint64_t initializeWithTake for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v10;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(unsigned char *)(v8 + 176) = *(unsigned char *)(v9 + 176);
  long long v11 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v11;
  long long v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  long long v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
  long long v14 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v14;
  return a1;
}

uint64_t assignWithTake for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  int v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  if (v10 != 254)
  {
    int v11 = *(unsigned __int8 *)(v9 + 176);
    if (v11 == 254)
    {
      sub_100419A78(v8);
    }
    else if (v10 != 255)
    {
      if (v11 != 255)
      {
        uint64_t v18 = *(void *)v8;
        uint64_t v19 = *(void *)(v8 + 8);
        uint64_t v20 = *(void *)(v8 + 16);
        uint64_t v21 = *(void *)(v8 + 24);
        uint64_t v22 = *(void *)(v8 + 32);
        uint64_t v23 = *(void *)(v8 + 40);
        uint64_t v24 = *(void *)(v8 + 48);
        uint64_t v25 = *(void *)(v8 + 56);
        long long v26 = *(_OWORD *)(v8 + 64);
        long long v27 = *(_OWORD *)(v8 + 80);
        long long v28 = *(_OWORD *)(v8 + 96);
        long long v29 = *(_OWORD *)(v8 + 112);
        long long v30 = *(_OWORD *)(v8 + 128);
        long long v31 = *(_OWORD *)(v8 + 144);
        uint64_t v32 = *(void *)(v8 + 160);
        uint64_t v33 = *(void *)(v8 + 168);
        long long v34 = *(_OWORD *)(v9 + 16);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *(_OWORD *)(v8 + 16) = v34;
        long long v35 = *(_OWORD *)(v9 + 48);
        *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
        *(_OWORD *)(v8 + 48) = v35;
        long long v36 = *(_OWORD *)(v9 + 80);
        *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
        *(_OWORD *)(v8 + 80) = v36;
        long long v37 = *(_OWORD *)(v9 + 112);
        *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
        *(_OWORD *)(v8 + 112) = v37;
        long long v38 = *(_OWORD *)(v9 + 144);
        *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
        *(_OWORD *)(v8 + 144) = v38;
        *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
        *(unsigned char *)(v8 + 176) = v11 & 1;
        sub_100061440(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
          *((uint64_t *)&v31 + 1),
          v32,
          v33,
          v10 & 1);
        return a1;
      }
      sub_100137364(v8);
    }
  }
  long long v12 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v12;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(unsigned char *)(v8 + 176) = *(unsigned char *)(v9 + 176);
  long long v13 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v13;
  long long v14 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v14;
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  long long v16 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v16;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041AA90);
}

uint64_t sub_10041AA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for MessageSectionData.Segment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041AB74);
}

uint64_t sub_10041AB74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005E17E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_10041AC30()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for MessageSectionData.Segment.Initial(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 176);
  if (v1 != 255) {
    sub_100061440(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
  }
      *(void *)(a1 + 152),
      *(void *)(a1 + 160),
      *(void *)(a1 + 168),
      v1 & 1);
}

uint64_t initializeWithCopy for MessageSectionData.Segment.Initial(uint64_t a1, uint64_t *a2)
{
  int v3 = *((unsigned __int8 *)a2 + 176);
  if (v3 == 255)
  {
    long long v4 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v4;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    long long v5 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v5;
    long long v6 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v6;
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    char v32 = v3 & 1;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    uint64_t v12 = a2[7];
    uint64_t v19 = a2[9];
    uint64_t v20 = a2[10];
    uint64_t v21 = a2[11];
    uint64_t v22 = a2[12];
    uint64_t v23 = a2[13];
    uint64_t v24 = a2[14];
    uint64_t v25 = a2[15];
    uint64_t v26 = a2[16];
    uint64_t v27 = a2[17];
    uint64_t v28 = a2[18];
    uint64_t v29 = a2[19];
    uint64_t v30 = a2[20];
    uint64_t v31 = a2[21];
    uint64_t v13 = a2[8];
    uint64_t v14 = *a2;
    uint64_t v15 = a2[1];
    uint64_t v16 = a2[2];
    uint64_t v17 = a2[3];
    sub_100136870(*a2, v15, v16, v17, v9, v10, v11, v12, v13, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,
      v29,
      v30,
      v31,
      v3 & 1);
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v15;
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v17;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v19;
    *(void *)(a1 + 80) = v20;
    *(void *)(a1 + 88) = v21;
    *(void *)(a1 + 96) = v22;
    *(void *)(a1 + 104) = v23;
    *(void *)(a1 + 112) = v24;
    *(void *)(a1 + 120) = v25;
    *(void *)(a1 + 128) = v26;
    *(void *)(a1 + 136) = v27;
    *(void *)(a1 + 144) = v28;
    *(void *)(a1 + 152) = v29;
    *(void *)(a1 + 160) = v30;
    *(void *)(a1 + 168) = v31;
    *(unsigned char *)(a1 + 176) = v32;
  }
  return a1;
}

uint64_t assignWithCopy for MessageSectionData.Segment.Initial(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 176);
  if (*(unsigned __int8 *)(a1 + 176) == 255)
  {
    if (v4 == 255)
    {
      long long v14 = *a2;
      long long v15 = a2[1];
      long long v16 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v16;
      *(_OWORD *)a1 = v14;
      *(_OWORD *)(a1 + 16) = v15;
      long long v17 = a2[4];
      long long v18 = a2[5];
      long long v19 = a2[7];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v19;
      *(_OWORD *)(a1 + 64) = v17;
      *(_OWORD *)(a1 + 80) = v18;
      long long v20 = a2[8];
      long long v21 = a2[9];
      long long v22 = a2[10];
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(_OWORD *)(a1 + 144) = v21;
      *(_OWORD *)(a1 + 160) = v22;
      *(_OWORD *)(a1 + 128) = v20;
    }
    else
    {
      char v86 = v4 & 1;
      uint64_t v49 = *((void *)a2 + 3);
      uint64_t v50 = *((void *)a2 + 4);
      uint64_t v51 = *((void *)a2 + 5);
      uint64_t v52 = *((void *)a2 + 6);
      uint64_t v60 = *((void *)a2 + 9);
      uint64_t v62 = *((void *)a2 + 10);
      uint64_t v64 = *((void *)a2 + 11);
      uint64_t v66 = *((void *)a2 + 12);
      uint64_t v68 = *((void *)a2 + 13);
      uint64_t v70 = *((void *)a2 + 14);
      uint64_t v72 = *((void *)a2 + 15);
      uint64_t v74 = *((void *)a2 + 16);
      uint64_t v76 = *((void *)a2 + 17);
      uint64_t v78 = *((void *)a2 + 18);
      uint64_t v80 = *((void *)a2 + 19);
      uint64_t v82 = *((void *)a2 + 20);
      uint64_t v84 = *((void *)a2 + 21);
      uint64_t v53 = *((void *)a2 + 8);
      uint64_t v54 = *(void *)a2;
      uint64_t v55 = *((void *)a2 + 1);
      uint64_t v56 = *((void *)a2 + 2);
      uint64_t v57 = *((void *)a2 + 7);
      sub_100136870(*(void *)a2, v55, v56, v49, v50, v51, v52, v57, v53, v60, v62, v64, v66, v68, v70, v72, v74, v76, v78,
        v80,
        v82,
        v84,
        v4 & 1);
      *(void *)a1 = v54;
      *(void *)(a1 + 8) = v55;
      *(void *)(a1 + 16) = v56;
      *(void *)(a1 + 24) = v49;
      *(void *)(a1 + 32) = v50;
      *(void *)(a1 + 40) = v51;
      *(void *)(a1 + 48) = v52;
      *(void *)(a1 + 56) = v57;
      *(void *)(a1 + 64) = v53;
      *(void *)(a1 + 72) = v60;
      *(void *)(a1 + 80) = v62;
      *(void *)(a1 + 88) = v64;
      *(void *)(a1 + 96) = v66;
      *(void *)(a1 + 104) = v68;
      *(void *)(a1 + 112) = v70;
      *(void *)(a1 + 120) = v72;
      *(void *)(a1 + 128) = v74;
      *(void *)(a1 + 136) = v76;
      *(void *)(a1 + 144) = v78;
      *(void *)(a1 + 152) = v80;
      *(void *)(a1 + 160) = v82;
      *(void *)(a1 + 168) = v84;
      *(unsigned char *)(a1 + 176) = v86;
    }
  }
  else if (v4 == 255)
  {
    sub_100137364(a1);
    long long v5 = a2[3];
    long long v7 = *a2;
    long long v6 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v6;
    long long v8 = a2[7];
    long long v10 = a2[4];
    long long v9 = a2[5];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v8;
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 80) = v9;
    long long v12 = a2[9];
    long long v11 = a2[10];
    long long v13 = a2[8];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(_OWORD *)(a1 + 144) = v12;
    *(_OWORD *)(a1 + 160) = v11;
    *(_OWORD *)(a1 + 128) = v13;
  }
  else
  {
    char v85 = v4 & 1;
    uint64_t v23 = *(void *)a2;
    uint64_t v24 = *((void *)a2 + 1);
    uint64_t v25 = *((void *)a2 + 2);
    uint64_t v26 = *((void *)a2 + 3);
    uint64_t v27 = *((void *)a2 + 4);
    uint64_t v28 = *((void *)a2 + 5);
    uint64_t v29 = *((void *)a2 + 6);
    uint64_t v30 = *((void *)a2 + 7);
    uint64_t v59 = *((void *)a2 + 9);
    uint64_t v61 = *((void *)a2 + 10);
    uint64_t v63 = *((void *)a2 + 11);
    uint64_t v65 = *((void *)a2 + 12);
    uint64_t v67 = *((void *)a2 + 13);
    uint64_t v69 = *((void *)a2 + 14);
    uint64_t v71 = *((void *)a2 + 15);
    uint64_t v73 = *((void *)a2 + 16);
    uint64_t v75 = *((void *)a2 + 17);
    uint64_t v77 = *((void *)a2 + 18);
    uint64_t v79 = *((void *)a2 + 19);
    uint64_t v81 = *((void *)a2 + 20);
    uint64_t v83 = *((void *)a2 + 21);
    uint64_t v31 = *((void *)a2 + 8);
    sub_100136870(*(void *)a2, v24, v25, v26, v27, v28, v29, v30, v31, v59, v61, v63, v65, v67, v69, v71, v73, v75, v77,
      v79,
      v81,
      v83,
      v4 & 1);
    uint64_t v32 = *(void *)a1;
    uint64_t v33 = *(void *)(a1 + 8);
    *(void *)a1 = v23;
    *(void *)(a1 + 8) = v24;
    uint64_t v34 = *(void *)(a1 + 16);
    uint64_t v35 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v25;
    *(void *)(a1 + 24) = v26;
    uint64_t v36 = *(void *)(a1 + 32);
    uint64_t v37 = *(void *)(a1 + 40);
    *(void *)(a1 + 32) = v27;
    *(void *)(a1 + 40) = v28;
    uint64_t v38 = *(void *)(a1 + 48);
    uint64_t v39 = *(void *)(a1 + 56);
    *(void *)(a1 + 48) = v29;
    *(void *)(a1 + 56) = v30;
    long long v40 = *(_OWORD *)(a1 + 64);
    long long v41 = *(_OWORD *)(a1 + 80);
    *(void *)(a1 + 64) = v31;
    *(void *)(a1 + 72) = v59;
    *(void *)(a1 + 80) = v61;
    *(void *)(a1 + 88) = v63;
    long long v42 = *(_OWORD *)(a1 + 96);
    long long v43 = *(_OWORD *)(a1 + 112);
    *(void *)(a1 + 96) = v65;
    *(void *)(a1 + 104) = v67;
    *(void *)(a1 + 112) = v69;
    *(void *)(a1 + 120) = v71;
    long long v44 = *(_OWORD *)(a1 + 128);
    long long v45 = *(_OWORD *)(a1 + 144);
    *(void *)(a1 + 128) = v73;
    *(void *)(a1 + 136) = v75;
    *(void *)(a1 + 144) = v77;
    *(void *)(a1 + 152) = v79;
    uint64_t v46 = *(void *)(a1 + 160);
    uint64_t v47 = *(void *)(a1 + 168);
    *(void *)(a1 + 160) = v81;
    *(void *)(a1 + 168) = v83;
    char v48 = *(unsigned char *)(a1 + 176);
    *(unsigned char *)(a1 + 176) = v85;
    sub_100061440(v32, v33, v34, v35, v36, v37, v38, v39, v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45,
      *((uint64_t *)&v45 + 1),
      v46,
      v47,
      v48);
  }
  return a1;
}

__n128 initializeWithTake for MessageSectionData.Segment.Initial(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for MessageSectionData.Segment.Initial(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 176);
  if (v4 != 255)
  {
    int v5 = *(unsigned __int8 *)(a2 + 176);
    if (v5 != 255)
    {
      uint64_t v11 = *(void *)a1;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(a1 + 48);
      uint64_t v18 = *(void *)(a1 + 56);
      long long v19 = *(_OWORD *)(a1 + 64);
      long long v20 = *(_OWORD *)(a1 + 80);
      long long v21 = *(_OWORD *)(a1 + 96);
      long long v22 = *(_OWORD *)(a1 + 112);
      long long v23 = *(_OWORD *)(a1 + 128);
      long long v24 = *(_OWORD *)(a1 + 144);
      uint64_t v25 = *(void *)(a1 + 160);
      uint64_t v26 = *(void *)(a1 + 168);
      long long v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v27;
      long long v28 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v28;
      long long v29 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v29;
      long long v30 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v30;
      long long v31 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v31;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 176) = v5 & 1;
      sub_100061440(v11, v12, v13, v14, v15, v16, v17, v18, v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
        *((uint64_t *)&v24 + 1),
        v25,
        v26,
        v4 & 1);
      return a1;
    }
    sub_100137364(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageSectionData.Segment.Initial(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 177)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 176);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageSectionData.Segment.Initial(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 177) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 176) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageSectionData.Segment.Initial()
{
  return &type metadata for MessageSectionData.Segment.Initial;
}

uint64_t sub_10041B40C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100418A48(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t MessageSectionData.Concatenator.init(expectedMessageSize:inMemoryThreshold:baseDirectory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  int v5 = (char *)a4 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
  uint64_t v6 = sub_1005E07F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a3, v6);
  _s12ConcatenatorV5StateOMa(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s12ConcatenatorV5StateO6NoDataVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714FD0);
}

uint64_t _s12ConcatenatorV5StateOMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714F40);
}

uint64_t MessageSectionData.Concatenator.appendData(_:)(uint64_t a1)
{
  return sub_10041B520(a1);
}

uint64_t sub_10041B520(uint64_t a1)
{
  uint64_t v2 = sub_1005E17E0();
  uint64_t v101 = *(void *)(v2 - 8);
  uint64_t v102 = v2;
  __chkstk_darwin();
  uint64_t v93 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  __chkstk_darwin();
  uint64_t v104 = (uint64_t)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v109 = (char *)&v92 - v5;
  uint64_t v6 = sub_1005E07F0();
  uint64_t v96 = *(void *)(v6 - 8);
  uint64_t v97 = v6;
  __chkstk_darwin();
  uint64_t v98 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = _s13TemporaryDataOMa();
  __chkstk_darwin();
  char v108 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  __int16 v107 = (char *)&v92 - v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v92 - v10;
  __chkstk_darwin();
  uint64_t v92 = (uint64_t)&v92 - v12;
  __chkstk_darwin();
  uint64_t v100 = (uint64_t)&v92 - v13;
  uint64_t v95 = _s12ConcatenatorV5StateO6NoDataVMa(0);
  __chkstk_darwin();
  uint64_t v99 = (uint64_t *)((char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = _s12ConcatenatorV5StateOMa(0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v19 = (char *)&v92 - v18;
  __chkstk_darwin();
  char v110 = (char *)&v92 - v20;
  uint64_t v21 = sub_10000566C(&qword_100715010) - 8;
  __chkstk_darwin();
  long long v23 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MessageSectionData.Segment(0);
  uint64_t v111 = a1 + *(int *)(v24 + 24);
  sub_1004213AC(v111, (uint64_t)v141);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v114 = a1;
  uint64_t v112 = v25;
  char v26 = *(unsigned char *)(a1 + v25);
  uint64_t v27 = (uint64_t)&v23[*(int *)(v21 + 56)];
  uint64_t v28 = *(int *)(v21 + 72);
  sub_100421530(v142, (uint64_t)v23, _s12ConcatenatorV5StateOMa);
  uint64_t v106 = v27;
  sub_1004213AC((uint64_t)v141, v27);
  v23[v28] = v26;
  uint64_t v29 = (uint64_t)v23;
  uint64_t v113 = v15;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v34 = (uint64_t)v11;
    uint64_t v35 = (uint64_t)v107;
    uint64_t v36 = (uint64_t)v108;
    uint64_t v37 = (uint64_t)v109;
    char v110 = v17;
    sub_100421530(v29, (uint64_t)v19, _s12ConcatenatorV5StateOMa);
    sub_1004213AC((uint64_t)v141, (uint64_t)&v129);
    if (sub_10006196C((uint64_t)&v129) != 1)
    {
      sub_1004213AC((uint64_t)v141, (uint64_t)v128);
      sub_100421598((uint64_t)v128, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
      sub_10041F32C(v142, _s12ConcatenatorV5StateOMa);
      uint64_t v32 = _s12ConcatenatorV5StateO9ReceivingVMa;
      uint64_t v33 = (uint64_t)v19;
      goto LABEL_13;
    }
    if ((v26 & 1) == 0)
    {
      uint64_t v56 = v37;
      sub_1004214C8((uint64_t)v19, v37, _s12ConcatenatorV5StateO9ReceivingVMa);
      sub_100421530(v37, v34, (uint64_t (*)(void))_s13TemporaryDataOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10041F32C(v37, (uint64_t (*)(void))_s13TemporaryDataOMa);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32))(v37, v34, v102);
        sub_1005E17A0();
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        uint64_t v67 = v105;
        sub_100421A8C();
        if (v67)
        {
          swift_release();
          uint64_t v68 = v37;
LABEL_28:
          sub_10041F32C(v68, _s12ConcatenatorV5StateO9ReceivingVMa);
LABEL_34:
          sub_1004213AC(v106, (uint64_t)v128);
          uint64_t v64 = v128;
LABEL_35:
          sub_100421598((uint64_t)v64, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
          return sub_10041F32C(v29, _s12ConcatenatorV5StateOMa);
        }
        swift_release();
      }
      uint64_t v71 = v142;
      sub_10041F32C(v142, _s12ConcatenatorV5StateOMa);
      sub_1004214C8(v56, v71, _s12ConcatenatorV5StateO9ReceivingVMa);
      swift_storeEnumTagMultiPayload();
      goto LABEL_34;
    }
    uint64_t v38 = v104;
    sub_1004214C8((uint64_t)v19, v104, _s12ConcatenatorV5StateO9ReceivingVMa);
    uint64_t v39 = v35;
    sub_100421530(v38, v35, (uint64_t (*)(void))_s13TemporaryDataOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10041F32C(v38, (uint64_t (*)(void))_s13TemporaryDataOMa);
      uint64_t v40 = v101;
      uint64_t v41 = v102;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32))(v38, v39, v102);
      sub_1005E17A0();
      uint64_t v42 = v104;
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = v105;
    }
    else
    {
      uint64_t v65 = v105;
      sub_100421A8C();
      uint64_t v43 = v65;
      if (v65)
      {
LABEL_27:
        swift_release();
        uint64_t v68 = v104;
        goto LABEL_28;
      }
      swift_release();
      uint64_t v40 = v101;
      uint64_t v41 = v102;
      uint64_t v42 = v104;
    }
    sub_100421530(v42, v36, (uint64_t (*)(void))_s13TemporaryDataOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v66 = v93;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v93, v36, v41);
LABEL_33:
      uint64_t v72 = v142;
      sub_10041F32C(v142, _s12ConcatenatorV5StateOMa);
      uint64_t v73 = v42 + *(int *)(v94 + 20);
      long long v74 = *(_OWORD *)(v73 + 144);
      long long v124 = *(_OWORD *)(v73 + 128);
      long long v125 = v74;
      long long v126 = *(_OWORD *)(v73 + 160);
      char v127 = *(unsigned char *)(v73 + 176);
      long long v75 = *(_OWORD *)(v73 + 80);
      long long v120 = *(_OWORD *)(v73 + 64);
      long long v121 = v75;
      long long v76 = *(_OWORD *)(v73 + 112);
      long long v122 = *(_OWORD *)(v73 + 96);
      long long v123 = v76;
      long long v77 = *(_OWORD *)(v73 + 48);
      long long v118 = *(_OWORD *)(v73 + 32);
      long long v119 = v77;
      long long v78 = *(_OWORD *)(v73 + 16);
      long long v116 = *(_OWORD *)v73;
      long long v117 = v78;
      sub_100421598((uint64_t)&v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
      sub_10041F32C(v42, _s12ConcatenatorV5StateO9ReceivingVMa);
      uint64_t v79 = (uint64_t)v110;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v110, v66, v41);
      uint64_t v80 = v79 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      long long v81 = v125;
      *(_OWORD *)(v80 + 128) = v124;
      *(_OWORD *)(v80 + 144) = v81;
      *(_OWORD *)(v80 + 160) = v126;
      *(unsigned char *)(v80 + 176) = v127;
      long long v82 = v121;
      *(_OWORD *)(v80 + 64) = v120;
      *(_OWORD *)(v80 + 80) = v82;
      long long v83 = v123;
      *(_OWORD *)(v80 + 96) = v122;
      *(_OWORD *)(v80 + 112) = v83;
      long long v84 = v117;
      *(_OWORD *)uint64_t v80 = v116;
      *(_OWORD *)(v80 + 16) = v84;
      long long v85 = v119;
      *(_OWORD *)(v80 + 32) = v118;
      *(_OWORD *)(v80 + 48) = v85;
      swift_storeEnumTagMultiPayload();
      sub_1004214C8(v79, v72, _s12ConcatenatorV5StateOMa);
      goto LABEL_34;
    }
    uint64_t v66 = v93;
    static DispatchData.makeMappedRead(fileDescriptor:count:)(*(_DWORD *)(*(void *)v36 + 16), *(void *)(*(void *)v36 + 24));
    if (!v43)
    {
      swift_release();
      uint64_t v42 = v104;
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  if (EnumCaseMultiPayload)
  {
    sub_100421598((uint64_t)v141, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AAE4);
    uint64_t v32 = _s12ConcatenatorV5StateOMa;
    uint64_t v33 = v142;
    goto LABEL_13;
  }
  uint64_t v31 = (uint64_t)v110;
  sub_100421530((uint64_t)v23, (uint64_t)v110, _s12ConcatenatorV5StateOMa);
  sub_1004213AC((uint64_t)v141, (uint64_t)&v129);
  if (sub_10006196C((uint64_t)&v129) == 1)
  {
    sub_10041F32C(v142, _s12ConcatenatorV5StateOMa);
    uint64_t v32 = _s12ConcatenatorV5StateO6NoDataVMa;
    uint64_t v33 = v31;
LABEL_13:
    sub_10041F32C(v33, v32);
    uint64_t v51 = v114;
    uint64_t v53 = v111;
    uint64_t v52 = v112;
    swift_storeEnumTagMultiPayload();
    sub_1004213AC(v53, (uint64_t)&v129);
    LOBYTE(v53) = sub_10006196C((uint64_t)&v129) == 0;
    LOBYTE(v52) = *(unsigned char *)(v51 + v52);
    sub_100421414();
    swift_allocError();
    *uint64_t v54 = v53;
    v54[1] = v52;
    swift_willThrow();
    return sub_100421468(v29);
  }
  if ((v26 & 1) == 0)
  {
    uint64_t v57 = v31;
    uint64_t v58 = v99;
    sub_1004214C8(v57, (uint64_t)v99, _s12ConcatenatorV5StateO6NoDataVMa);
    uint64_t v59 = *v58;
    uint64_t v60 = v58[1];
    uint64_t v61 = v98;
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v98, (char *)v58 + *(int *)(v95 + 24), v97);
    sub_1004213AC((uint64_t)v141, (uint64_t)&v116);
    sub_1004213AC((uint64_t)v141, (uint64_t)v128);
    sub_100421598((uint64_t)v128, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    sub_100421598((uint64_t)&v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
    uint64_t v62 = v100;
    uint64_t v63 = v105;
    sub_1004217C0(v59, v60, v61, v100);
    if (v63)
    {
      sub_10041F32C((uint64_t)v58, _s12ConcatenatorV5StateO6NoDataVMa);
      sub_100421598((uint64_t)v141, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
      sub_1004213AC(v106, (uint64_t)v115);
      uint64_t v64 = v115;
    }
    else
    {
      uint64_t v69 = v92;
      sub_100421530(v62, v92, (uint64_t (*)(void))_s13TemporaryDataOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10041F32C(v62, (uint64_t (*)(void))_s13TemporaryDataOMa);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32))(v62, v69, v102);
        sub_1005E17A0();
        swift_storeEnumTagMultiPayload();
        uint64_t v70 = v142;
      }
      else
      {
        sub_100421A8C();
        uint64_t v70 = v142;
        swift_release();
      }
      sub_10041F32C(v70, _s12ConcatenatorV5StateOMa);
      sub_10041F32C((uint64_t)v58, _s12ConcatenatorV5StateO6NoDataVMa);
      sub_1004214C8(v62, v70, (uint64_t (*)(void))_s13TemporaryDataOMa);
      uint64_t v86 = v70 + *(int *)(v94 + 20);
      long long v87 = v138;
      *(_OWORD *)(v86 + 128) = v137;
      *(_OWORD *)(v86 + 144) = v87;
      *(_OWORD *)(v86 + 160) = v139;
      *(unsigned char *)(v86 + 176) = v140;
      long long v88 = v134;
      *(_OWORD *)(v86 + 64) = v133;
      *(_OWORD *)(v86 + 80) = v88;
      long long v89 = v136;
      *(_OWORD *)(v86 + 96) = v135;
      *(_OWORD *)(v86 + 112) = v89;
      long long v90 = v130;
      *(_OWORD *)uint64_t v86 = v129;
      *(_OWORD *)(v86 + 16) = v90;
      long long v91 = v132;
      *(_OWORD *)(v86 + 32) = v131;
      *(_OWORD *)(v86 + 48) = v91;
      swift_storeEnumTagMultiPayload();
      sub_1004213AC(v106, (uint64_t)v115);
      uint64_t v64 = v115;
    }
    goto LABEL_35;
  }
  sub_1004213AC((uint64_t)v141, (uint64_t)&v116);
  sub_100421598((uint64_t)&v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
  uint64_t v44 = v142;
  sub_10041F32C(v142, _s12ConcatenatorV5StateOMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v44, v114, v102);
  uint64_t v45 = v44 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  long long v46 = v138;
  *(_OWORD *)(v45 + 128) = v137;
  *(_OWORD *)(v45 + 144) = v46;
  *(_OWORD *)(v45 + 160) = v139;
  *(unsigned char *)(v45 + 176) = v140;
  long long v47 = v134;
  *(_OWORD *)(v45 + 64) = v133;
  *(_OWORD *)(v45 + 80) = v47;
  long long v48 = v136;
  *(_OWORD *)(v45 + 96) = v135;
  *(_OWORD *)(v45 + 112) = v48;
  long long v49 = v130;
  *(_OWORD *)uint64_t v45 = v129;
  *(_OWORD *)(v45 + 16) = v49;
  long long v50 = v132;
  *(_OWORD *)(v45 + 32) = v131;
  *(_OWORD *)(v45 + 48) = v50;
  swift_storeEnumTagMultiPayload();
  sub_100421598((uint64_t)&v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10013AEB4);
  sub_10041F32C(v31, _s12ConcatenatorV5StateO6NoDataVMa);
  sub_1004213AC(v106, (uint64_t)v128);
  sub_100421598((uint64_t)v128, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10006133C);
  return sub_10041F32C(v29, _s12ConcatenatorV5StateOMa);
}

uint64_t MessageSectionData.Concatenator.completed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  _s12ConcatenatorV5StateOMa(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100421530(v2, (uint64_t)v5, _s12ConcatenatorV5StateOMa);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1004214C8((uint64_t)v5, a1, type metadata accessor for MessageSectionData.Concatenator.Completed);
    uint64_t v6 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {
    sub_10041F32C((uint64_t)v5, _s12ConcatenatorV5StateOMa);
    uint64_t v8 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t type metadata accessor for MessageSectionData.Concatenator.Completed(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714E08);
}

uint64_t MessageSectionData.Concatenator.Completed.initial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  return sub_10041C5A4(v3, a1);
}

uint64_t sub_10041C5A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MessageSectionData.Concatenator.Completed.initial.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  return sub_10041C644(a1, v3);
}

uint64_t sub_10041C644(uint64_t a1, uint64_t a2)
{
  return a2;
}

Swift::UInt32 (__swiftcall *MessageSectionData.Concatenator.Completed.initial.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

__n128 MessageSectionData.Concatenator.Completed.init(data:initial:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v7 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v7 + 144) = v8;
  *(_OWORD *)(v7 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(v7 + 176) = *(unsigned char *)(a2 + 176);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v7 + 80) = v9;
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v7 + 112) = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v11;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 48);
  *(__n128 *)(v7 + 32) = result;
  *(_OWORD *)(v7 + 48) = v13;
  return result;
}

uint64_t *_s12ConcatenatorVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(v4 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v14 = sub_1005E17E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      int v18 = v17[176];
      if (v18 == 255)
      {
LABEL_14:
        long long v20 = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
        *((_OWORD *)v16 + 9) = v20;
        *((_OWORD *)v16 + 10) = *((_OWORD *)v17 + 10);
        v16[176] = v17[176];
        long long v21 = *((_OWORD *)v17 + 5);
        *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
        *((_OWORD *)v16 + 5) = v21;
        long long v22 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v22;
        long long v23 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v23;
        long long v24 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v24;
        goto LABEL_16;
      }
LABEL_15:
      char v48 = v18 & 1;
      uint64_t v25 = *((void *)v17 + 5);
      uint64_t v26 = *((void *)v17 + 6);
      uint64_t v33 = *((void *)v17 + 7);
      uint64_t v34 = *((void *)v17 + 8);
      uint64_t v35 = *((void *)v17 + 9);
      uint64_t v36 = *((void *)v17 + 10);
      uint64_t v37 = *((void *)v17 + 11);
      uint64_t v38 = *((void *)v17 + 12);
      uint64_t v39 = *((void *)v17 + 13);
      uint64_t v40 = *((void *)v17 + 14);
      uint64_t v41 = *((void *)v17 + 15);
      uint64_t v42 = *((void *)v17 + 16);
      uint64_t v43 = *((void *)v17 + 17);
      uint64_t v44 = *((void *)v17 + 18);
      uint64_t v45 = *((void *)v17 + 19);
      uint64_t v46 = *((void *)v17 + 20);
      uint64_t v47 = *((void *)v17 + 21);
      uint64_t v27 = *(void *)v17;
      uint64_t v28 = *((void *)v17 + 1);
      uint64_t v29 = *((void *)v17 + 2);
      uint64_t v30 = *((void *)v17 + 3);
      uint64_t v31 = *((void *)v17 + 4);
      sub_100136870(*(void *)v17, v28, v29, v30, v31, v25, v26, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v18 & 1);
      *(void *)uint64_t v16 = v27;
      *((void *)v16 + 1) = v28;
      *((void *)v16 + 2) = v29;
      *((void *)v16 + 3) = v30;
      *((void *)v16 + 4) = v31;
      *((void *)v16 + 5) = v25;
      *((void *)v16 + 6) = v26;
      *((void *)v16 + 7) = v33;
      *((void *)v16 + 8) = v34;
      *((void *)v16 + 9) = v35;
      *((void *)v16 + 10) = v36;
      *((void *)v16 + 11) = v37;
      *((void *)v16 + 12) = v38;
      *((void *)v16 + 13) = v39;
      *((void *)v16 + 14) = v40;
      *((void *)v16 + 15) = v41;
      *((void *)v16 + 16) = v42;
      *((void *)v16 + 17) = v43;
      *((void *)v16 + 18) = v44;
      *((void *)v16 + 19) = v45;
      *((void *)v16 + 20) = v46;
      *((void *)v16 + 21) = v47;
      v16[176] = v48;
      goto LABEL_16;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = sub_1005E17E0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v19 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v16 = (char *)a1 + v19;
      uint64_t v17 = (char *)a2 + v19;
      int v18 = v17[176];
      if (v18 == 255) {
        goto LABEL_14;
      }
      goto LABEL_15;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      long long v9 = (char *)a1 + v8;
      long long v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1005E07F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t _s12ConcatenatorV5StateO9ReceivingVMa(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714E98);
}

void _s12ConcatenatorVwxx(uint64_t a1)
{
  _s12ConcatenatorV5StateOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = sub_1005E17E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        uint64_t v3 = a1 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        uint64_t v4 = sub_1005E07F0();
        int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
        v5(v3, v4);
      }
      return;
    }
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    }
    else
    {
      swift_release();
    }
    uint64_t v7 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  }
  uint64_t v9 = a1 + *(int *)(v7 + 20);
  int v10 = *(unsigned __int8 *)(v9 + 176);
  if (v10 != 255) {
    sub_100061440(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(void *)(v9 + 72), *(void *)(v9 + 80), *(void *)(v9 + 88), *(void *)(v9 + 96), *(void *)(v9 + 104), *(void *)(v9 + 112), *(void *)(v9 + 120), *(void *)(v9 + 128), *(void *)(v9 + 136), *(void *)(v9 + 144),
  }
      *(void *)(v9 + 152),
      *(void *)(v9 + 160),
      *(void *)(v9 + 168),
      v10 & 1);
}

void *_s12ConcatenatorVwcp(void *a1, void *a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      int v15 = v14[176];
      if (v15 == 255)
      {
LABEL_12:
        long long v17 = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
        *((_OWORD *)v13 + 9) = v17;
        *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        long long v18 = *((_OWORD *)v14 + 5);
        *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
        *((_OWORD *)v13 + 5) = v18;
        long long v19 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v19;
        long long v20 = *((_OWORD *)v14 + 1);
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v20;
        long long v21 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v21;
        goto LABEL_14;
      }
LABEL_13:
      char v45 = v15 & 1;
      uint64_t v22 = *((void *)v14 + 5);
      uint64_t v23 = *((void *)v14 + 6);
      uint64_t v30 = *((void *)v14 + 7);
      uint64_t v31 = *((void *)v14 + 8);
      uint64_t v32 = *((void *)v14 + 9);
      uint64_t v33 = *((void *)v14 + 10);
      uint64_t v34 = *((void *)v14 + 11);
      uint64_t v35 = *((void *)v14 + 12);
      uint64_t v36 = *((void *)v14 + 13);
      uint64_t v37 = *((void *)v14 + 14);
      uint64_t v38 = *((void *)v14 + 15);
      uint64_t v39 = *((void *)v14 + 16);
      uint64_t v40 = *((void *)v14 + 17);
      uint64_t v41 = *((void *)v14 + 18);
      uint64_t v42 = *((void *)v14 + 19);
      uint64_t v43 = *((void *)v14 + 20);
      uint64_t v44 = *((void *)v14 + 21);
      uint64_t v24 = *(void *)v14;
      uint64_t v25 = *((void *)v14 + 1);
      uint64_t v26 = *((void *)v14 + 2);
      uint64_t v27 = *((void *)v14 + 3);
      uint64_t v28 = *((void *)v14 + 4);
      sub_100136870(*(void *)v14, v25, v26, v27, v28, v22, v23, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
        v42,
        v43,
        v44,
        v15 & 1);
      *(void *)uint64_t v13 = v24;
      *((void *)v13 + 1) = v25;
      *((void *)v13 + 2) = v26;
      *((void *)v13 + 3) = v27;
      *((void *)v13 + 4) = v28;
      *((void *)v13 + 5) = v22;
      *((void *)v13 + 6) = v23;
      *((void *)v13 + 7) = v30;
      *((void *)v13 + 8) = v31;
      *((void *)v13 + 9) = v32;
      *((void *)v13 + 10) = v33;
      *((void *)v13 + 11) = v34;
      *((void *)v13 + 12) = v35;
      *((void *)v13 + 13) = v36;
      *((void *)v13 + 14) = v37;
      *((void *)v13 + 15) = v38;
      *((void *)v13 + 16) = v39;
      *((void *)v13 + 17) = v40;
      *((void *)v13 + 18) = v41;
      *((void *)v13 + 19) = v42;
      *((void *)v13 + 20) = v43;
      *((void *)v13 + 21) = v44;
      v13[176] = v45;
      goto LABEL_14;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_1005E17E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v13 = (char *)a1 + v16;
      uint64_t v14 = (char *)a2 + v16;
      int v15 = v14[176];
      if (v15 == 255) {
        goto LABEL_12;
      }
      goto LABEL_13;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1005E07F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

void *_s12ConcatenatorVwca(void *a1, void *a2)
{
  if (a1 == a2) {
    return a1;
  }
  sub_10041F32C((uint64_t)a1, _s12ConcatenatorV5StateOMa);
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      int v15 = v14[176];
      if (v15 == 255)
      {
LABEL_13:
        long long v17 = *(_OWORD *)v14;
        long long v18 = *((_OWORD *)v14 + 1);
        long long v19 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v19;
        *(_OWORD *)uint64_t v13 = v17;
        *((_OWORD *)v13 + 1) = v18;
        long long v20 = *((_OWORD *)v14 + 4);
        long long v21 = *((_OWORD *)v14 + 5);
        long long v22 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v22;
        *((_OWORD *)v13 + 4) = v20;
        *((_OWORD *)v13 + 5) = v21;
        long long v23 = *((_OWORD *)v14 + 8);
        long long v24 = *((_OWORD *)v14 + 9);
        long long v25 = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        *((_OWORD *)v13 + 9) = v24;
        *((_OWORD *)v13 + 10) = v25;
        *((_OWORD *)v13 + 8) = v23;
        goto LABEL_15;
      }
LABEL_14:
      char v49 = v15 & 1;
      uint64_t v26 = *((void *)v14 + 5);
      uint64_t v27 = *((void *)v14 + 6);
      uint64_t v34 = *((void *)v14 + 7);
      uint64_t v35 = *((void *)v14 + 8);
      uint64_t v36 = *((void *)v14 + 9);
      uint64_t v37 = *((void *)v14 + 10);
      uint64_t v38 = *((void *)v14 + 11);
      uint64_t v39 = *((void *)v14 + 12);
      uint64_t v40 = *((void *)v14 + 13);
      uint64_t v41 = *((void *)v14 + 14);
      uint64_t v42 = *((void *)v14 + 15);
      uint64_t v43 = *((void *)v14 + 16);
      uint64_t v44 = *((void *)v14 + 17);
      uint64_t v45 = *((void *)v14 + 18);
      uint64_t v46 = *((void *)v14 + 19);
      uint64_t v47 = *((void *)v14 + 20);
      uint64_t v48 = *((void *)v14 + 21);
      uint64_t v28 = *(void *)v14;
      uint64_t v29 = *((void *)v14 + 1);
      uint64_t v30 = *((void *)v14 + 2);
      uint64_t v31 = *((void *)v14 + 3);
      uint64_t v32 = *((void *)v14 + 4);
      sub_100136870(*(void *)v14, v29, v30, v31, v32, v26, v27, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
        v46,
        v47,
        v48,
        v15 & 1);
      *(void *)uint64_t v13 = v28;
      *((void *)v13 + 1) = v29;
      *((void *)v13 + 2) = v30;
      *((void *)v13 + 3) = v31;
      *((void *)v13 + 4) = v32;
      *((void *)v13 + 5) = v26;
      *((void *)v13 + 6) = v27;
      *((void *)v13 + 7) = v34;
      *((void *)v13 + 8) = v35;
      *((void *)v13 + 9) = v36;
      *((void *)v13 + 10) = v37;
      *((void *)v13 + 11) = v38;
      *((void *)v13 + 12) = v39;
      *((void *)v13 + 13) = v40;
      *((void *)v13 + 14) = v41;
      *((void *)v13 + 15) = v42;
      *((void *)v13 + 16) = v43;
      *((void *)v13 + 17) = v44;
      *((void *)v13 + 18) = v45;
      *((void *)v13 + 19) = v46;
      *((void *)v13 + 20) = v47;
      *((void *)v13 + 21) = v48;
      v13[176] = v49;
      goto LABEL_15;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = sub_1005E17E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v13 = (char *)a1 + v16;
      uint64_t v14 = (char *)a2 + v16;
      int v15 = v14[176];
      if (v15 == 255) {
        goto LABEL_13;
      }
      goto LABEL_14;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1005E07F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

_OWORD *_s12ConcatenatorVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v10 = sub_1005E17E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      long long v14 = *((_OWORD *)v13 + 9);
      *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
      *((_OWORD *)v12 + 9) = v14;
      *((_OWORD *)v12 + 10) = *((_OWORD *)v13 + 10);
      v12[176] = v13[176];
      long long v15 = *((_OWORD *)v13 + 5);
      *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
      *((_OWORD *)v12 + 5) = v15;
      long long v16 = *((_OWORD *)v13 + 7);
      *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
      *((_OWORD *)v12 + 7) = v16;
      long long v17 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v17;
      long long v18 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 3) = v18;
      goto LABEL_11;
    case 1:
      uint64_t v19 = _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v20 = sub_1005E17E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      uint64_t v21 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      long long v22 = (char *)a1 + v21;
      long long v23 = (char *)a2 + v21;
      long long v24 = *((_OWORD *)v23 + 9);
      *((_OWORD *)v22 + 8) = *((_OWORD *)v23 + 8);
      *((_OWORD *)v22 + 9) = v24;
      *((_OWORD *)v22 + 10) = *((_OWORD *)v23 + 10);
      v22[176] = v23[176];
      long long v25 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v25;
      long long v26 = *((_OWORD *)v23 + 7);
      *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
      *((_OWORD *)v22 + 7) = v26;
      long long v27 = *((_OWORD *)v23 + 1);
      *(_OWORD *)long long v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v27;
      long long v28 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v28;
      goto LABEL_11;
    case 0:
      *a1 = *a2;
      uint64_t v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1005E07F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

_OWORD *_s12ConcatenatorVwta(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_10041F32C((uint64_t)a1, _s12ConcatenatorV5StateOMa);
    uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v10 = sub_1005E17E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        long long v14 = *((_OWORD *)v13 + 9);
        *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
        *((_OWORD *)v12 + 9) = v14;
        *((_OWORD *)v12 + 10) = *((_OWORD *)v13 + 10);
        v12[176] = v13[176];
        long long v15 = *((_OWORD *)v13 + 5);
        *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
        *((_OWORD *)v12 + 5) = v15;
        long long v16 = *((_OWORD *)v13 + 7);
        *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
        *((_OWORD *)v12 + 7) = v16;
        long long v17 = *((_OWORD *)v13 + 1);
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v17;
        long long v18 = *((_OWORD *)v13 + 3);
        *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
        *((_OWORD *)v12 + 3) = v18;
        goto LABEL_12;
      case 1:
        uint64_t v19 = _s13TemporaryDataOMa();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v20 = sub_1005E17E0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        uint64_t v21 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
        long long v22 = (char *)a1 + v21;
        long long v23 = (char *)a2 + v21;
        long long v24 = *((_OWORD *)v23 + 9);
        *((_OWORD *)v22 + 8) = *((_OWORD *)v23 + 8);
        *((_OWORD *)v22 + 9) = v24;
        *((_OWORD *)v22 + 10) = *((_OWORD *)v23 + 10);
        v22[176] = v23[176];
        long long v25 = *((_OWORD *)v23 + 5);
        *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
        *((_OWORD *)v22 + 5) = v25;
        long long v26 = *((_OWORD *)v23 + 7);
        *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
        *((_OWORD *)v22 + 7) = v26;
        long long v27 = *((_OWORD *)v23 + 1);
        *(_OWORD *)long long v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v27;
        long long v28 = *((_OWORD *)v23 + 3);
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        *((_OWORD *)v22 + 3) = v28;
        goto LABEL_12;
      case 0:
        *a1 = *a2;
        uint64_t v6 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1005E07F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

uint64_t _s12ConcatenatorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041DCF0);
}

uint64_t sub_10041DCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s12ConcatenatorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041DD70);
}

uint64_t sub_10041DD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12ConcatenatorV5StateOMa(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MessageSectionData.Concatenator(uint64_t a1)
{
  return sub_10003B314(a1, qword_100714D78);
}

uint64_t sub_10041DE00()
{
  uint64_t result = _s12ConcatenatorV5StateOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s12ConcatenatorV9CompletedVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    int v11 = v10[176];
    if (v11 == 255)
    {
      long long v12 = *((_OWORD *)v10 + 9);
      *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
      *((_OWORD *)v9 + 9) = v12;
      *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
      v9[176] = v10[176];
      long long v13 = *((_OWORD *)v10 + 5);
      *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
      *((_OWORD *)v9 + 5) = v13;
      long long v14 = *((_OWORD *)v10 + 7);
      *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
      *((_OWORD *)v9 + 7) = v14;
      long long v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      long long v16 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v16;
    }
    else
    {
      char v41 = v11 & 1;
      uint64_t v18 = *((void *)v10 + 4);
      uint64_t v19 = *((void *)v10 + 5);
      uint64_t v20 = *((void *)v10 + 6);
      uint64_t v27 = *((void *)v10 + 8);
      uint64_t v28 = *((void *)v10 + 9);
      uint64_t v29 = *((void *)v10 + 10);
      uint64_t v30 = *((void *)v10 + 11);
      uint64_t v31 = *((void *)v10 + 12);
      uint64_t v32 = *((void *)v10 + 13);
      uint64_t v33 = *((void *)v10 + 14);
      uint64_t v34 = *((void *)v10 + 15);
      uint64_t v35 = *((void *)v10 + 16);
      uint64_t v36 = *((void *)v10 + 17);
      uint64_t v37 = *((void *)v10 + 18);
      uint64_t v38 = *((void *)v10 + 19);
      uint64_t v39 = *((void *)v10 + 20);
      uint64_t v40 = *((void *)v10 + 21);
      uint64_t v21 = *(void *)v10;
      uint64_t v22 = *((void *)v10 + 1);
      uint64_t v23 = *((void *)v10 + 2);
      uint64_t v24 = *((void *)v10 + 3);
      uint64_t v25 = *((void *)v10 + 7);
      sub_100136870(*(void *)v10, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v11 & 1);
      *(void *)uint64_t v9 = v21;
      *((void *)v9 + 1) = v22;
      *((void *)v9 + 2) = v23;
      *((void *)v9 + 3) = v24;
      *((void *)v9 + 4) = v18;
      *((void *)v9 + 5) = v19;
      *((void *)v9 + 6) = v20;
      *((void *)v9 + 7) = v25;
      *((void *)v9 + 8) = v27;
      *((void *)v9 + 9) = v28;
      *((void *)v9 + 10) = v29;
      *((void *)v9 + 11) = v30;
      *((void *)v9 + 12) = v31;
      *((void *)v9 + 13) = v32;
      *((void *)v9 + 14) = v33;
      *((void *)v9 + 15) = v34;
      *((void *)v9 + 16) = v35;
      *((void *)v9 + 17) = v36;
      *((void *)v9 + 18) = v37;
      *((void *)v9 + 19) = v38;
      *((void *)v9 + 20) = v39;
      *((void *)v9 + 21) = v40;
      v9[176] = v41;
    }
  }
  return a1;
}

void _s12ConcatenatorV9CompletedVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  int v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 != 255) {
    sub_100061440(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(void *)(v5 + 88), *(void *)(v5 + 96), *(void *)(v5 + 104), *(void *)(v5 + 112), *(void *)(v5 + 120), *(void *)(v5 + 128), *(void *)(v5 + 136), *(void *)(v5 + 144),
  }
      *(void *)(v5 + 152),
      *(void *)(v5 + 160),
      *(void *)(v5 + 168),
      v6 & 1);
}

uint64_t _s12ConcatenatorV9CompletedVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  int v10 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 255)
  {
    long long v11 = *((_OWORD *)v9 + 9);
    *(_OWORD *)(v8 + 128) = *((_OWORD *)v9 + 8);
    *(_OWORD *)(v8 + 144) = v11;
    *(_OWORD *)(v8 + 160) = *((_OWORD *)v9 + 10);
    *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
    long long v12 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 64) = *((_OWORD *)v9 + 4);
    *(_OWORD *)(v8 + 80) = v12;
    long long v13 = *((_OWORD *)v9 + 7);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v13;
    long long v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v14;
    long long v15 = *((_OWORD *)v9 + 3);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v15;
  }
  else
  {
    char v39 = v10 & 1;
    uint64_t v16 = v9[4];
    uint64_t v17 = v9[5];
    uint64_t v18 = v9[6];
    uint64_t v25 = v9[8];
    uint64_t v26 = v9[9];
    uint64_t v27 = v9[10];
    uint64_t v28 = v9[11];
    uint64_t v29 = v9[12];
    uint64_t v30 = v9[13];
    uint64_t v31 = v9[14];
    uint64_t v32 = v9[15];
    uint64_t v33 = v9[16];
    uint64_t v34 = v9[17];
    uint64_t v35 = v9[18];
    uint64_t v36 = v9[19];
    uint64_t v37 = v9[20];
    uint64_t v38 = v9[21];
    uint64_t v19 = *v9;
    uint64_t v20 = v9[1];
    uint64_t v21 = v9[2];
    uint64_t v22 = v9[3];
    uint64_t v23 = v9[7];
    sub_100136870(*v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(void *)uint64_t v8 = v19;
    *(void *)(v8 + 8) = v20;
    *(void *)(v8 + 16) = v21;
    *(void *)(v8 + 24) = v22;
    *(void *)(v8 + 32) = v16;
    *(void *)(v8 + 40) = v17;
    *(void *)(v8 + 48) = v18;
    *(void *)(v8 + 56) = v23;
    *(void *)(v8 + 64) = v25;
    *(void *)(v8 + 72) = v26;
    *(void *)(v8 + 80) = v27;
    *(void *)(v8 + 88) = v28;
    *(void *)(v8 + 96) = v29;
    *(void *)(v8 + 104) = v30;
    *(void *)(v8 + 112) = v31;
    *(void *)(v8 + 120) = v32;
    *(void *)(v8 + 128) = v33;
    *(void *)(v8 + 136) = v34;
    *(void *)(v8 + 144) = v35;
    *(void *)(v8 + 152) = v36;
    *(void *)(v8 + 160) = v37;
    *(void *)(v8 + 168) = v38;
    *(unsigned char *)(v8 + 176) = v39;
  }
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  int v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  int v11 = *((unsigned __int8 *)v9 + 176);
  if (v10 == 255)
  {
    if (v11 == 255)
    {
      long long v21 = *v9;
      long long v22 = v9[1];
      long long v23 = v9[3];
      *(_OWORD *)(v8 + 32) = v9[2];
      *(_OWORD *)(v8 + 48) = v23;
      *(_OWORD *)uint64_t v8 = v21;
      *(_OWORD *)(v8 + 16) = v22;
      long long v24 = v9[4];
      long long v25 = v9[5];
      long long v26 = v9[7];
      *(_OWORD *)(v8 + 96) = v9[6];
      *(_OWORD *)(v8 + 112) = v26;
      *(_OWORD *)(v8 + 64) = v24;
      *(_OWORD *)(v8 + 80) = v25;
      long long v27 = v9[8];
      long long v28 = v9[9];
      long long v29 = v9[10];
      *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
      *(_OWORD *)(v8 + 144) = v28;
      *(_OWORD *)(v8 + 160) = v29;
      *(_OWORD *)(v8 + 128) = v27;
    }
    else
    {
      char v101 = v11 & 1;
      uint64_t v59 = *((void *)v9 + 1);
      uint64_t v60 = *((void *)v9 + 2);
      uint64_t v61 = *((void *)v9 + 3);
      uint64_t v62 = *((void *)v9 + 4);
      uint64_t v63 = *((void *)v9 + 5);
      uint64_t v65 = *((void *)v9 + 6);
      uint64_t v64 = *((void *)v9 + 7);
      uint64_t v73 = *((void *)v9 + 8);
      uint64_t v75 = *((void *)v9 + 9);
      uint64_t v77 = *((void *)v9 + 10);
      uint64_t v79 = *((void *)v9 + 11);
      uint64_t v81 = *((void *)v9 + 12);
      uint64_t v83 = *((void *)v9 + 13);
      uint64_t v85 = *((void *)v9 + 14);
      uint64_t v87 = *((void *)v9 + 15);
      uint64_t v89 = *((void *)v9 + 16);
      uint64_t v91 = *((void *)v9 + 17);
      uint64_t v93 = *((void *)v9 + 18);
      uint64_t v95 = *((void *)v9 + 19);
      uint64_t v97 = *((void *)v9 + 20);
      uint64_t v99 = *((void *)v9 + 21);
      uint64_t v66 = *(void *)v9;
      uint64_t v67 = v59;
      uint64_t v68 = v60;
      uint64_t v69 = v61;
      uint64_t v70 = v64;
      sub_100136870(v66, v59, v60, v61, v62, v63, v65, v64, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      *(void *)uint64_t v8 = v66;
      *(void *)(v8 + 8) = v67;
      *(void *)(v8 + 16) = v68;
      *(void *)(v8 + 24) = v69;
      *(void *)(v8 + 32) = v62;
      *(void *)(v8 + 40) = v63;
      *(void *)(v8 + 48) = v65;
      *(void *)(v8 + 56) = v70;
      *(void *)(v8 + 64) = v73;
      *(void *)(v8 + 72) = v75;
      *(void *)(v8 + 80) = v77;
      *(void *)(v8 + 88) = v79;
      *(void *)(v8 + 96) = v81;
      *(void *)(v8 + 104) = v83;
      *(void *)(v8 + 112) = v85;
      *(void *)(v8 + 120) = v87;
      *(void *)(v8 + 128) = v89;
      *(void *)(v8 + 136) = v91;
      *(void *)(v8 + 144) = v93;
      *(void *)(v8 + 152) = v95;
      *(void *)(v8 + 160) = v97;
      *(void *)(v8 + 168) = v99;
      *(unsigned char *)(v8 + 176) = v101;
    }
  }
  else if (v11 == 255)
  {
    sub_100137364(v8);
    long long v12 = v9[3];
    long long v14 = *v9;
    long long v13 = v9[1];
    *(_OWORD *)(v8 + 32) = v9[2];
    *(_OWORD *)(v8 + 48) = v12;
    *(_OWORD *)uint64_t v8 = v14;
    *(_OWORD *)(v8 + 16) = v13;
    long long v15 = v9[7];
    long long v17 = v9[4];
    long long v16 = v9[5];
    *(_OWORD *)(v8 + 96) = v9[6];
    *(_OWORD *)(v8 + 112) = v15;
    *(_OWORD *)(v8 + 64) = v17;
    *(_OWORD *)(v8 + 80) = v16;
    long long v19 = v9[9];
    long long v18 = v9[10];
    long long v20 = v9[8];
    *(unsigned char *)(v8 + 176) = *((unsigned char *)v9 + 176);
    *(_OWORD *)(v8 + 144) = v19;
    *(_OWORD *)(v8 + 160) = v18;
    *(_OWORD *)(v8 + 128) = v20;
  }
  else
  {
    char v100 = v11 & 1;
    uint64_t v30 = *((void *)v9 + 1);
    uint64_t v31 = *((void *)v9 + 2);
    uint64_t v32 = *((void *)v9 + 3);
    uint64_t v33 = *((void *)v9 + 4);
    uint64_t v34 = *((void *)v9 + 5);
    uint64_t v36 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 7);
    uint64_t v72 = *((void *)v9 + 8);
    uint64_t v74 = *((void *)v9 + 9);
    uint64_t v76 = *((void *)v9 + 10);
    uint64_t v78 = *((void *)v9 + 11);
    uint64_t v80 = *((void *)v9 + 12);
    uint64_t v82 = *((void *)v9 + 13);
    uint64_t v84 = *((void *)v9 + 14);
    uint64_t v86 = *((void *)v9 + 15);
    uint64_t v88 = *((void *)v9 + 16);
    uint64_t v90 = *((void *)v9 + 17);
    uint64_t v92 = *((void *)v9 + 18);
    uint64_t v94 = *((void *)v9 + 19);
    uint64_t v96 = *((void *)v9 + 20);
    uint64_t v98 = *((void *)v9 + 21);
    uint64_t v37 = *(void *)v9;
    uint64_t v38 = v30;
    uint64_t v39 = v31;
    uint64_t v40 = v32;
    uint64_t v41 = v35;
    sub_100136870(v37, v30, v31, v32, v33, v34, v36, v35, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    uint64_t v42 = *(void *)v8;
    uint64_t v43 = *(void *)(v8 + 8);
    *(void *)uint64_t v8 = v37;
    *(void *)(v8 + 8) = v38;
    uint64_t v44 = *(void *)(v8 + 16);
    uint64_t v45 = *(void *)(v8 + 24);
    *(void *)(v8 + 16) = v39;
    *(void *)(v8 + 24) = v40;
    uint64_t v46 = *(void *)(v8 + 32);
    uint64_t v47 = *(void *)(v8 + 40);
    *(void *)(v8 + 32) = v33;
    *(void *)(v8 + 40) = v34;
    uint64_t v48 = *(void *)(v8 + 48);
    uint64_t v49 = *(void *)(v8 + 56);
    *(void *)(v8 + 48) = v36;
    *(void *)(v8 + 56) = v41;
    long long v50 = *(_OWORD *)(v8 + 64);
    long long v51 = *(_OWORD *)(v8 + 80);
    *(void *)(v8 + 64) = v72;
    *(void *)(v8 + 72) = v74;
    *(void *)(v8 + 80) = v76;
    *(void *)(v8 + 88) = v78;
    long long v52 = *(_OWORD *)(v8 + 96);
    long long v53 = *(_OWORD *)(v8 + 112);
    *(void *)(v8 + 96) = v80;
    *(void *)(v8 + 104) = v82;
    *(void *)(v8 + 112) = v84;
    *(void *)(v8 + 120) = v86;
    long long v54 = *(_OWORD *)(v8 + 128);
    long long v55 = *(_OWORD *)(v8 + 144);
    *(void *)(v8 + 128) = v88;
    *(void *)(v8 + 136) = v90;
    *(void *)(v8 + 144) = v92;
    *(void *)(v8 + 152) = v94;
    uint64_t v56 = *(void *)(v8 + 160);
    uint64_t v57 = *(void *)(v8 + 168);
    *(void *)(v8 + 160) = v96;
    *(void *)(v8 + 168) = v98;
    char v58 = *(unsigned char *)(v8 + 176);
    *(unsigned char *)(v8 + 176) = v100;
    sub_100061440(v42, v43, v44, v45, v46, v47, v48, v49, v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55,
      *((uint64_t *)&v55 + 1),
      v56,
      v57,
      v58);
  }
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v10;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(unsigned char *)(v8 + 176) = *(unsigned char *)(v9 + 176);
  long long v11 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v11;
  long long v12 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v12;
  long long v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
  long long v14 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v14;
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E17E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  int v10 = *(unsigned __int8 *)(a1 + v7 + 176);
  if (v10 != 255)
  {
    int v11 = *(unsigned __int8 *)(v9 + 176);
    if (v11 != 255)
    {
      uint64_t v17 = *(void *)v8;
      uint64_t v18 = *(void *)(v8 + 8);
      uint64_t v19 = *(void *)(v8 + 16);
      uint64_t v20 = *(void *)(v8 + 24);
      uint64_t v21 = *(void *)(v8 + 32);
      uint64_t v22 = *(void *)(v8 + 40);
      uint64_t v23 = *(void *)(v8 + 48);
      uint64_t v24 = *(void *)(v8 + 56);
      long long v25 = *(_OWORD *)(v8 + 64);
      long long v26 = *(_OWORD *)(v8 + 80);
      long long v27 = *(_OWORD *)(v8 + 96);
      long long v28 = *(_OWORD *)(v8 + 112);
      long long v29 = *(_OWORD *)(v8 + 128);
      long long v30 = *(_OWORD *)(v8 + 144);
      uint64_t v31 = *(void *)(v8 + 160);
      uint64_t v32 = *(void *)(v8 + 168);
      long long v33 = *(_OWORD *)(v9 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v33;
      long long v34 = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = v34;
      long long v35 = *(_OWORD *)(v9 + 80);
      *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 80) = v35;
      long long v36 = *(_OWORD *)(v9 + 112);
      *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
      *(_OWORD *)(v8 + 112) = v36;
      long long v37 = *(_OWORD *)(v9 + 144);
      *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
      *(_OWORD *)(v8 + 144) = v37;
      *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
      *(unsigned char *)(v8 + 176) = v11 & 1;
      sub_100061440(v17, v18, v19, v20, v21, v22, v23, v24, v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30,
        *((uint64_t *)&v30 + 1),
        v31,
        v32,
        v10 & 1);
      return a1;
    }
    sub_100137364(v8);
  }
  long long v12 = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(v8 + 128) = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v8 + 144) = v12;
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(unsigned char *)(v8 + 176) = *(unsigned char *)(v9 + 176);
  long long v13 = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(v9 + 64);
  *(_OWORD *)(v8 + 80) = v13;
  long long v14 = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 112) = v14;
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v15;
  long long v16 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v16;
  return a1;
}

uint64_t _s12ConcatenatorV9CompletedVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041E924);
}

uint64_t sub_10041E924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10041F68C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for DispatchData);
}

uint64_t _s12ConcatenatorV9CompletedVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041E950);
}

uint64_t sub_10041E950(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10041F77C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for DispatchData);
}

uint64_t sub_10041E968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10041F858(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchData);
}

uint64_t *sub_10041E980(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1005E17E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    int v10 = (char *)a1 + v9;
    int v11 = (char *)a2 + v9;
    int v12 = v11[176];
    if (v12 == 255)
    {
      long long v13 = *((_OWORD *)v11 + 9);
      *((_OWORD *)v10 + 8) = *((_OWORD *)v11 + 8);
      *((_OWORD *)v10 + 9) = v13;
      *((_OWORD *)v10 + 10) = *((_OWORD *)v11 + 10);
      v10[176] = v11[176];
      long long v14 = *((_OWORD *)v11 + 5);
      *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
      *((_OWORD *)v10 + 5) = v14;
      long long v15 = *((_OWORD *)v11 + 7);
      *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
      *((_OWORD *)v10 + 7) = v15;
      long long v16 = *((_OWORD *)v11 + 1);
      *(_OWORD *)int v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v16;
      long long v17 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v17;
    }
    else
    {
      char v41 = v12 & 1;
      uint64_t v18 = *((void *)v11 + 4);
      uint64_t v19 = *((void *)v11 + 5);
      uint64_t v20 = *((void *)v11 + 6);
      uint64_t v27 = *((void *)v11 + 8);
      uint64_t v28 = *((void *)v11 + 9);
      uint64_t v29 = *((void *)v11 + 10);
      uint64_t v30 = *((void *)v11 + 11);
      uint64_t v31 = *((void *)v11 + 12);
      uint64_t v32 = *((void *)v11 + 13);
      uint64_t v33 = *((void *)v11 + 14);
      uint64_t v34 = *((void *)v11 + 15);
      uint64_t v35 = *((void *)v11 + 16);
      uint64_t v36 = *((void *)v11 + 17);
      uint64_t v37 = *((void *)v11 + 18);
      uint64_t v38 = *((void *)v11 + 19);
      uint64_t v39 = *((void *)v11 + 20);
      uint64_t v40 = *((void *)v11 + 21);
      uint64_t v21 = *(void *)v11;
      uint64_t v22 = *((void *)v11 + 1);
      uint64_t v23 = *((void *)v11 + 2);
      uint64_t v24 = *((void *)v11 + 3);
      uint64_t v25 = *((void *)v11 + 7);
      sub_100136870(*(void *)v11, v22, v23, v24, v18, v19, v20, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
        v38,
        v39,
        v40,
        v12 & 1);
      *(void *)int v10 = v21;
      *((void *)v10 + 1) = v22;
      *((void *)v10 + 2) = v23;
      *((void *)v10 + 3) = v24;
      *((void *)v10 + 4) = v18;
      *((void *)v10 + 5) = v19;
      *((void *)v10 + 6) = v20;
      *((void *)v10 + 7) = v25;
      *((void *)v10 + 8) = v27;
      *((void *)v10 + 9) = v28;
      *((void *)v10 + 10) = v29;
      *((void *)v10 + 11) = v30;
      *((void *)v10 + 12) = v31;
      *((void *)v10 + 13) = v32;
      *((void *)v10 + 14) = v33;
      *((void *)v10 + 15) = v34;
      *((void *)v10 + 16) = v35;
      *((void *)v10 + 17) = v36;
      *((void *)v10 + 18) = v37;
      *((void *)v10 + 19) = v38;
      *((void *)v10 + 20) = v39;
      *((void *)v10 + 21) = v40;
      v10[176] = v41;
    }
  }
  return a1;
}

void sub_10041EC00(uint64_t a1, uint64_t a2)
{
  _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1005E17E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  int v6 = *(unsigned __int8 *)(v5 + 176);
  if (v6 != 255) {
    sub_100061440(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(void *)(v5 + 88), *(void *)(v5 + 96), *(void *)(v5 + 104), *(void *)(v5 + 112), *(void *)(v5 + 120), *(void *)(v5 + 128), *(void *)(v5 + 136), *(void *)(v5 + 144),
  }
      *(void *)(v5 + 152),
      *(void *)(v5 + 160),
      *(void *)(v5 + 168),
      v6 & 1);
}

void *sub_10041ECDC(void *a1, void *a2, uint64_t a3)
{
  _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1005E17E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  int v10 = v9[176];
  if (v10 == 255)
  {
    long long v11 = *((_OWORD *)v9 + 9);
    *((_OWORD *)v8 + 8) = *((_OWORD *)v9 + 8);
    *((_OWORD *)v8 + 9) = v11;
    *((_OWORD *)v8 + 10) = *((_OWORD *)v9 + 10);
    v8[176] = v9[176];
    long long v12 = *((_OWORD *)v9 + 5);
    *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
    *((_OWORD *)v8 + 5) = v12;
    long long v13 = *((_OWORD *)v9 + 7);
    *((_OWORD *)v8 + 6) = *((_OWORD *)v9 + 6);
    *((_OWORD *)v8 + 7) = v13;
    long long v14 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v14;
    long long v15 = *((_OWORD *)v9 + 3);
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    *((_OWORD *)v8 + 3) = v15;
  }
  else
  {
    char v39 = v10 & 1;
    uint64_t v16 = *((void *)v9 + 4);
    uint64_t v17 = *((void *)v9 + 5);
    uint64_t v18 = *((void *)v9 + 6);
    uint64_t v25 = *((void *)v9 + 8);
    uint64_t v26 = *((void *)v9 + 9);
    uint64_t v27 = *((void *)v9 + 10);
    uint64_t v28 = *((void *)v9 + 11);
    uint64_t v29 = *((void *)v9 + 12);
    uint64_t v30 = *((void *)v9 + 13);
    uint64_t v31 = *((void *)v9 + 14);
    uint64_t v32 = *((void *)v9 + 15);
    uint64_t v33 = *((void *)v9 + 16);
    uint64_t v34 = *((void *)v9 + 17);
    uint64_t v35 = *((void *)v9 + 18);
    uint64_t v36 = *((void *)v9 + 19);
    uint64_t v37 = *((void *)v9 + 20);
    uint64_t v38 = *((void *)v9 + 21);
    uint64_t v19 = *(void *)v9;
    uint64_t v20 = *((void *)v9 + 1);
    uint64_t v21 = *((void *)v9 + 2);
    uint64_t v22 = *((void *)v9 + 3);
    uint64_t v23 = *((void *)v9 + 7);
    sub_100136870(*(void *)v9, v20, v21, v22, v16, v17, v18, v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37,
      v38,
      v10 & 1);
    *(void *)uint64_t v8 = v19;
    *((void *)v8 + 1) = v20;
    *((void *)v8 + 2) = v21;
    *((void *)v8 + 3) = v22;
    *((void *)v8 + 4) = v16;
    *((void *)v8 + 5) = v17;
    *((void *)v8 + 6) = v18;
    *((void *)v8 + 7) = v23;
    *((void *)v8 + 8) = v25;
    *((void *)v8 + 9) = v26;
    *((void *)v8 + 10) = v27;
    *((void *)v8 + 11) = v28;
    *((void *)v8 + 12) = v29;
    *((void *)v8 + 13) = v30;
    *((void *)v8 + 14) = v31;
    *((void *)v8 + 15) = v32;
    *((void *)v8 + 16) = v33;
    *((void *)v8 + 17) = v34;
    *((void *)v8 + 18) = v35;
    *((void *)v8 + 19) = v36;
    *((void *)v8 + 20) = v37;
    *((void *)v8 + 21) = v38;
    v8[176] = v39;
  }
  return a1;
}

void *sub_10041EF0C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10041F32C((uint64_t)a1, (uint64_t (*)(void))_s13TemporaryDataOMa);
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  int v10 = *((unsigned __int8 *)a1 + v7 + 176);
  int v11 = v9[176];
  if (v10 == 255)
  {
    if (v11 == 255)
    {
      long long v21 = *(_OWORD *)v9;
      long long v22 = *((_OWORD *)v9 + 1);
      long long v23 = *((_OWORD *)v9 + 3);
      *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
      *(_OWORD *)(v8 + 48) = v23;
      *(_OWORD *)uint64_t v8 = v21;
      *(_OWORD *)(v8 + 16) = v22;
      long long v24 = *((_OWORD *)v9 + 4);
      long long v25 = *((_OWORD *)v9 + 5);
      long long v26 = *((_OWORD *)v9 + 7);
      *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
      *(_OWORD *)(v8 + 112) = v26;
      *(_OWORD *)(v8 + 64) = v24;
      *(_OWORD *)(v8 + 80) = v25;
      long long v27 = *((_OWORD *)v9 + 8);
      long long v28 = *((_OWORD *)v9 + 9);
      long long v29 = *((_OWORD *)v9 + 10);
      *(unsigned char *)(v8 + 176) = v9[176];
      *(_OWORD *)(v8 + 144) = v28;
      *(_OWORD *)(v8 + 160) = v29;
      *(_OWORD *)(v8 + 128) = v27;
    }
    else
    {
      char v101 = v11 & 1;
      uint64_t v59 = *((void *)v9 + 1);
      uint64_t v60 = *((void *)v9 + 2);
      uint64_t v61 = *((void *)v9 + 3);
      uint64_t v62 = *((void *)v9 + 4);
      uint64_t v63 = *((void *)v9 + 5);
      uint64_t v65 = *((void *)v9 + 6);
      uint64_t v64 = *((void *)v9 + 7);
      uint64_t v73 = *((void *)v9 + 8);
      uint64_t v75 = *((void *)v9 + 9);
      uint64_t v77 = *((void *)v9 + 10);
      uint64_t v79 = *((void *)v9 + 11);
      uint64_t v81 = *((void *)v9 + 12);
      uint64_t v83 = *((void *)v9 + 13);
      uint64_t v85 = *((void *)v9 + 14);
      uint64_t v87 = *((void *)v9 + 15);
      uint64_t v89 = *((void *)v9 + 16);
      uint64_t v91 = *((void *)v9 + 17);
      uint64_t v93 = *((void *)v9 + 18);
      uint64_t v95 = *((void *)v9 + 19);
      uint64_t v97 = *((void *)v9 + 20);
      uint64_t v99 = *((void *)v9 + 21);
      uint64_t v66 = *(void *)v9;
      uint64_t v67 = v59;
      uint64_t v68 = v60;
      uint64_t v69 = v61;
      uint64_t v70 = v64;
      sub_100136870(v66, v59, v60, v61, v62, v63, v65, v64, v73, v75, v77, v79, v81, v83, v85, v87, v89, v91, v93,
        v95,
        v97,
        v99,
        v11 & 1);
      *(void *)uint64_t v8 = v66;
      *(void *)(v8 + 8) = v67;
      *(void *)(v8 + 16) = v68;
      *(void *)(v8 + 24) = v69;
      *(void *)(v8 + 32) = v62;
      *(void *)(v8 + 40) = v63;
      *(void *)(v8 + 48) = v65;
      *(void *)(v8 + 56) = v70;
      *(void *)(v8 + 64) = v73;
      *(void *)(v8 + 72) = v75;
      *(void *)(v8 + 80) = v77;
      *(void *)(v8 + 88) = v79;
      *(void *)(v8 + 96) = v81;
      *(void *)(v8 + 104) = v83;
      *(void *)(v8 + 112) = v85;
      *(void *)(v8 + 120) = v87;
      *(void *)(v8 + 128) = v89;
      *(void *)(v8 + 136) = v91;
      *(void *)(v8 + 144) = v93;
      *(void *)(v8 + 152) = v95;
      *(void *)(v8 + 160) = v97;
      *(void *)(v8 + 168) = v99;
      *(unsigned char *)(v8 + 176) = v101;
    }
  }
  else if (v11 == 255)
  {
    sub_100137364(v8);
    long long v12 = *((_OWORD *)v9 + 3);
    long long v14 = *(_OWORD *)v9;
    long long v13 = *((_OWORD *)v9 + 1);
    *(_OWORD *)(v8 + 32) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 48) = v12;
    *(_OWORD *)uint64_t v8 = v14;
    *(_OWORD *)(v8 + 16) = v13;
    long long v15 = *((_OWORD *)v9 + 7);
    long long v17 = *((_OWORD *)v9 + 4);
    long long v16 = *((_OWORD *)v9 + 5);
    *(_OWORD *)(v8 + 96) = *((_OWORD *)v9 + 6);
    *(_OWORD *)(v8 + 112) = v15;
    *(_OWORD *)(v8 + 64) = v17;
    *(_OWORD *)(v8 + 80) = v16;
    long long v19 = *((_OWORD *)v9 + 9);
    long long v18 = *((_OWORD *)v9 + 10);
    long long v20 = *((_OWORD *)v9 + 8);
    *(unsigned char *)(v8 + 176) = v9[176];
    *(_OWORD *)(v8 + 144) = v19;
    *(_OWORD *)(v8 + 160) = v18;
    *(_OWORD *)(v8 + 128) = v20;
  }
  else
  {
    char v100 = v11 & 1;
    uint64_t v30 = *((void *)v9 + 1);
    uint64_t v31 = *((void *)v9 + 2);
    uint64_t v32 = *((void *)v9 + 3);
    uint64_t v33 = *((void *)v9 + 4);
    uint64_t v34 = *((void *)v9 + 5);
    uint64_t v36 = *((void *)v9 + 6);
    uint64_t v35 = *((void *)v9 + 7);
    uint64_t v72 = *((void *)v9 + 8);
    uint64_t v74 = *((void *)v9 + 9);
    uint64_t v76 = *((void *)v9 + 10);
    uint64_t v78 = *((void *)v9 + 11);
    uint64_t v80 = *((void *)v9 + 12);
    uint64_t v82 = *((void *)v9 + 13);
    uint64_t v84 = *((void *)v9 + 14);
    uint64_t v86 = *((void *)v9 + 15);
    uint64_t v88 = *((void *)v9 + 16);
    uint64_t v90 = *((void *)v9 + 17);
    uint64_t v92 = *((void *)v9 + 18);
    uint64_t v94 = *((void *)v9 + 19);
    uint64_t v96 = *((void *)v9 + 20);
    uint64_t v98 = *((void *)v9 + 21);
    uint64_t v37 = *(void *)v9;
    uint64_t v38 = v30;
    uint64_t v39 = v31;
    uint64_t v40 = v32;
    uint64_t v41 = v35;
    sub_100136870(v37, v30, v31, v32, v33, v34, v36, v35, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v11 & 1);
    uint64_t v42 = *(void *)v8;
    uint64_t v43 = *(void *)(v8 + 8);
    *(void *)uint64_t v8 = v37;
    *(void *)(v8 + 8) = v38;
    uint64_t v44 = *(void *)(v8 + 16);
    uint64_t v45 = *(void *)(v8 + 24);
    *(void *)(v8 + 16) = v39;
    *(void *)(v8 + 24) = v40;
    uint64_t v46 = *(void *)(v8 + 32);
    uint64_t v47 = *(void *)(v8 + 40);
    *(void *)(v8 + 32) = v33;
    *(void *)(v8 + 40) = v34;
    uint64_t v48 = *(void *)(v8 + 48);
    uint64_t v49 = *(void *)(v8 + 56);
    *(void *)(v8 + 48) = v36;
    *(void *)(v8 + 56) = v41;
    long long v50 = *(_OWORD *)(v8 + 64);
    long long v51 = *(_OWORD *)(v8 + 80);
    *(void *)(v8 + 64) = v72;
    *(void *)(v8 + 72) = v74;
    *(void *)(v8 + 80) = v76;
    *(void *)(v8 + 88) = v78;
    long long v52 = *(_OWORD *)(v8 + 96);
    long long v53 = *(_OWORD *)(v8 + 112);
    *(void *)(v8 + 96) = v80;
    *(void *)(v8 + 104) = v82;
    *(void *)(v8 + 112) = v84;
    *(void *)(v8 + 120) = v86;
    long long v54 = *(_OWORD *)(v8 + 128);
    long long v55 = *(_OWORD *)(v8 + 144);
    *(void *)(v8 + 128) = v88;
    *(void *)(v8 + 136) = v90;
    *(void *)(v8 + 144) = v92;
    *(void *)(v8 + 152) = v94;
    uint64_t v56 = *(void *)(v8 + 160);
    uint64_t v57 = *(void *)(v8 + 168);
    *(void *)(v8 + 160) = v96;
    *(void *)(v8 + 168) = v98;
    char v58 = *(unsigned char *)(v8 + 176);
    *(unsigned char *)(v8 + 176) = v100;
    sub_100061440(v42, v43, v44, v45, v46, v47, v48, v49, v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55,
      *((uint64_t *)&v55 + 1),
      v56,
      v57,
      v58);
  }
  return a1;
}

uint64_t sub_10041F32C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_10041F38C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = _s13TemporaryDataOMa();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1005E17E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  int v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 9);
  *((_OWORD *)v9 + 8) = *((_OWORD *)v10 + 8);
  *((_OWORD *)v9 + 9) = v11;
  *((_OWORD *)v9 + 10) = *((_OWORD *)v10 + 10);
  v9[176] = v10[176];
  long long v12 = *((_OWORD *)v10 + 5);
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  *((_OWORD *)v9 + 5) = v12;
  long long v13 = *((_OWORD *)v10 + 7);
  *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
  *((_OWORD *)v9 + 7) = v13;
  long long v14 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v14;
  long long v15 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v15;
  return a1;
}

unsigned __int8 *sub_10041F494(unsigned __int8 *a1, char *a2, uint64_t a3)
{
  if (a1 != (unsigned __int8 *)a2)
  {
    sub_10041F32C((uint64_t)a1, (uint64_t (*)(void))_s13TemporaryDataOMa);
    uint64_t v6 = _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1005E17E0();
      (*(void (**)(unsigned __int8 *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (uint64_t)&a1[v8];
  int v10 = &a2[v8];
  int v11 = a1[v8 + 176];
  if (v11 != 255)
  {
    int v12 = v10[176];
    if (v12 != 255)
    {
      uint64_t v18 = *(void *)v9;
      uint64_t v19 = *(void *)(v9 + 8);
      uint64_t v20 = *(void *)(v9 + 16);
      uint64_t v21 = *(void *)(v9 + 24);
      uint64_t v22 = *(void *)(v9 + 32);
      uint64_t v23 = *(void *)(v9 + 40);
      uint64_t v24 = *(void *)(v9 + 48);
      uint64_t v25 = *(void *)(v9 + 56);
      long long v26 = *(_OWORD *)(v9 + 64);
      long long v27 = *(_OWORD *)(v9 + 80);
      long long v28 = *(_OWORD *)(v9 + 96);
      long long v29 = *(_OWORD *)(v9 + 112);
      long long v30 = *(_OWORD *)(v9 + 128);
      long long v31 = *(_OWORD *)(v9 + 144);
      uint64_t v32 = *(void *)(v9 + 160);
      uint64_t v33 = *(void *)(v9 + 168);
      long long v34 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v34;
      long long v35 = *((_OWORD *)v10 + 3);
      *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
      *(_OWORD *)(v9 + 48) = v35;
      long long v36 = *((_OWORD *)v10 + 5);
      *(_OWORD *)(v9 + 64) = *((_OWORD *)v10 + 4);
      *(_OWORD *)(v9 + 80) = v36;
      long long v37 = *((_OWORD *)v10 + 7);
      *(_OWORD *)(v9 + 96) = *((_OWORD *)v10 + 6);
      *(_OWORD *)(v9 + 112) = v37;
      long long v38 = *((_OWORD *)v10 + 9);
      *(_OWORD *)(v9 + 128) = *((_OWORD *)v10 + 8);
      *(_OWORD *)(v9 + 144) = v38;
      *(_OWORD *)(v9 + 160) = *((_OWORD *)v10 + 10);
      *(unsigned char *)(v9 + 176) = v12 & 1;
      sub_100061440(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31,
        *((uint64_t *)&v31 + 1),
        v32,
        v33,
        v11 & 1);
      return a1;
    }
    sub_100137364(v9);
  }
  long long v13 = *((_OWORD *)v10 + 9);
  *(_OWORD *)(v9 + 128) = *((_OWORD *)v10 + 8);
  *(_OWORD *)(v9 + 144) = v13;
  *(_OWORD *)(v9 + 160) = *((_OWORD *)v10 + 10);
  *(unsigned char *)(v9 + 176) = v10[176];
  long long v14 = *((_OWORD *)v10 + 5);
  *(_OWORD *)(v9 + 64) = *((_OWORD *)v10 + 4);
  *(_OWORD *)(v9 + 80) = v14;
  long long v15 = *((_OWORD *)v10 + 7);
  *(_OWORD *)(v9 + 96) = *((_OWORD *)v10 + 6);
  *(_OWORD *)(v9 + 112) = v15;
  long long v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v16;
  long long v17 = *((_OWORD *)v10 + 3);
  *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
  *(_OWORD *)(v9 + 48) = v17;
  return a1;
}

uint64_t sub_10041F660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041F674);
}

uint64_t sub_10041F674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10041F68C(a1, a2, a3, (uint64_t (*)(void))_s13TemporaryDataOMa);
}

uint64_t sub_10041F68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 176);
    if (v11 <= 1) {
      return 0;
    }
    else {
      return v11 ^ 0xFF;
    }
  }
}

uint64_t sub_10041F750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041F764);
}

uint64_t sub_10041F764(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10041F77C(a1, a2, a3, a4, (uint64_t (*)(void))_s13TemporaryDataOMa);
}

uint64_t sub_10041F77C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 176) = ~(_BYTE)a2;
  }
  return result;
}

uint64_t sub_10041F840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10041F858(a1, a2, a3, (uint64_t (*)(uint64_t))_s13TemporaryDataOMa);
}

uint64_t sub_10041F858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10041F8F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v14 = sub_1005E17E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      long long v16 = (char *)a1 + v15;
      long long v17 = (char *)a2 + v15;
      int v18 = v17[176];
      if (v18 == 255)
      {
LABEL_14:
        long long v20 = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 8) = *((_OWORD *)v17 + 8);
        *((_OWORD *)v16 + 9) = v20;
        *((_OWORD *)v16 + 10) = *((_OWORD *)v17 + 10);
        v16[176] = v17[176];
        long long v21 = *((_OWORD *)v17 + 5);
        *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
        *((_OWORD *)v16 + 5) = v21;
        long long v22 = *((_OWORD *)v17 + 7);
        *((_OWORD *)v16 + 6) = *((_OWORD *)v17 + 6);
        *((_OWORD *)v16 + 7) = v22;
        long long v23 = *((_OWORD *)v17 + 1);
        *(_OWORD *)long long v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v23;
        long long v24 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v24;
        goto LABEL_16;
      }
LABEL_15:
      char v48 = v18 & 1;
      uint64_t v25 = *((void *)v17 + 5);
      uint64_t v26 = *((void *)v17 + 6);
      uint64_t v33 = *((void *)v17 + 7);
      uint64_t v34 = *((void *)v17 + 8);
      uint64_t v35 = *((void *)v17 + 9);
      uint64_t v36 = *((void *)v17 + 10);
      uint64_t v37 = *((void *)v17 + 11);
      uint64_t v38 = *((void *)v17 + 12);
      uint64_t v39 = *((void *)v17 + 13);
      uint64_t v40 = *((void *)v17 + 14);
      uint64_t v41 = *((void *)v17 + 15);
      uint64_t v42 = *((void *)v17 + 16);
      uint64_t v43 = *((void *)v17 + 17);
      uint64_t v44 = *((void *)v17 + 18);
      uint64_t v45 = *((void *)v17 + 19);
      uint64_t v46 = *((void *)v17 + 20);
      uint64_t v47 = *((void *)v17 + 21);
      uint64_t v27 = *(void *)v17;
      uint64_t v28 = *((void *)v17 + 1);
      uint64_t v29 = *((void *)v17 + 2);
      uint64_t v30 = *((void *)v17 + 3);
      uint64_t v31 = *((void *)v17 + 4);
      sub_100136870(*(void *)v17, v28, v29, v30, v31, v25, v26, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v18 & 1);
      *(void *)long long v16 = v27;
      *((void *)v16 + 1) = v28;
      *((void *)v16 + 2) = v29;
      *((void *)v16 + 3) = v30;
      *((void *)v16 + 4) = v31;
      *((void *)v16 + 5) = v25;
      *((void *)v16 + 6) = v26;
      *((void *)v16 + 7) = v33;
      *((void *)v16 + 8) = v34;
      *((void *)v16 + 9) = v35;
      *((void *)v16 + 10) = v36;
      *((void *)v16 + 11) = v37;
      *((void *)v16 + 12) = v38;
      *((void *)v16 + 13) = v39;
      *((void *)v16 + 14) = v40;
      *((void *)v16 + 15) = v41;
      *((void *)v16 + 16) = v42;
      *((void *)v16 + 17) = v43;
      *((void *)v16 + 18) = v44;
      *((void *)v16 + 19) = v45;
      *((void *)v16 + 20) = v46;
      *((void *)v16 + 21) = v47;
      v16[176] = v48;
      goto LABEL_16;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = sub_1005E17E0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v19 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      long long v16 = (char *)a1 + v19;
      long long v17 = (char *)a2 + v19;
      int v18 = v17[176];
      if (v18 == 255) {
        goto LABEL_14;
      }
      goto LABEL_15;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1005E07F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

void sub_10041FDD8(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = sub_1005E17E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = type metadata accessor for MessageSectionData.Concatenator.Completed(0);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (!EnumCaseMultiPayload)
      {
        uint64_t v3 = a1 + *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        uint64_t v4 = sub_1005E07F0();
        int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
        v5(v3, v4);
      }
      return;
    }
    _s13TemporaryDataOMa();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1005E17E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    }
    else
    {
      swift_release();
    }
    uint64_t v7 = _s12ConcatenatorV5StateO9ReceivingVMa(0);
  }
  uint64_t v9 = a1 + *(int *)(v7 + 20);
  int v10 = *(unsigned __int8 *)(v9 + 176);
  if (v10 != 255) {
    sub_100061440(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(void *)(v9 + 72), *(void *)(v9 + 80), *(void *)(v9 + 88), *(void *)(v9 + 96), *(void *)(v9 + 104), *(void *)(v9 + 112), *(void *)(v9 + 120), *(void *)(v9 + 128), *(void *)(v9 + 136), *(void *)(v9 + 144),
  }
      *(void *)(v9 + 152),
      *(void *)(v9 + 160),
      *(void *)(v9 + 168),
      v10 & 1);
}

void *sub_10041FF78(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v12 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      int v16 = v15[176];
      if (v16 == 255)
      {
LABEL_12:
        long long v18 = *((_OWORD *)v15 + 9);
        *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
        *((_OWORD *)v14 + 9) = v18;
        *((_OWORD *)v14 + 10) = *((_OWORD *)v15 + 10);
        v14[176] = v15[176];
        long long v19 = *((_OWORD *)v15 + 5);
        *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
        *((_OWORD *)v14 + 5) = v19;
        long long v20 = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 7) = v20;
        long long v21 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v21;
        long long v22 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v22;
        goto LABEL_14;
      }
LABEL_13:
      char v46 = v16 & 1;
      uint64_t v23 = *((void *)v15 + 5);
      uint64_t v24 = *((void *)v15 + 6);
      uint64_t v31 = *((void *)v15 + 7);
      uint64_t v32 = *((void *)v15 + 8);
      uint64_t v33 = *((void *)v15 + 9);
      uint64_t v34 = *((void *)v15 + 10);
      uint64_t v35 = *((void *)v15 + 11);
      uint64_t v36 = *((void *)v15 + 12);
      uint64_t v37 = *((void *)v15 + 13);
      uint64_t v38 = *((void *)v15 + 14);
      uint64_t v39 = *((void *)v15 + 15);
      uint64_t v40 = *((void *)v15 + 16);
      uint64_t v41 = *((void *)v15 + 17);
      uint64_t v42 = *((void *)v15 + 18);
      uint64_t v43 = *((void *)v15 + 19);
      uint64_t v44 = *((void *)v15 + 20);
      uint64_t v45 = *((void *)v15 + 21);
      uint64_t v25 = *(void *)v15;
      uint64_t v26 = *((void *)v15 + 1);
      uint64_t v27 = *((void *)v15 + 2);
      uint64_t v28 = *((void *)v15 + 3);
      uint64_t v29 = *((void *)v15 + 4);
      sub_100136870(*(void *)v15, v26, v27, v28, v29, v23, v24, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
        v43,
        v44,
        v45,
        v16 & 1);
      *(void *)uint64_t v14 = v25;
      *((void *)v14 + 1) = v26;
      *((void *)v14 + 2) = v27;
      *((void *)v14 + 3) = v28;
      *((void *)v14 + 4) = v29;
      *((void *)v14 + 5) = v23;
      *((void *)v14 + 6) = v24;
      *((void *)v14 + 7) = v31;
      *((void *)v14 + 8) = v32;
      *((void *)v14 + 9) = v33;
      *((void *)v14 + 10) = v34;
      *((void *)v14 + 11) = v35;
      *((void *)v14 + 12) = v36;
      *((void *)v14 + 13) = v37;
      *((void *)v14 + 14) = v38;
      *((void *)v14 + 15) = v39;
      *((void *)v14 + 16) = v40;
      *((void *)v14 + 17) = v41;
      *((void *)v14 + 18) = v42;
      *((void *)v14 + 19) = v43;
      *((void *)v14 + 20) = v44;
      *((void *)v14 + 21) = v45;
      v14[176] = v46;
      goto LABEL_14;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_1005E17E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v14 = (char *)a1 + v17;
      uint64_t v15 = (char *)a2 + v17;
      int v16 = v15[176];
      if (v16 == 255) {
        goto LABEL_12;
      }
      goto LABEL_13;
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1005E07F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_10042041C(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_10041F32C((uint64_t)a1, _s12ConcatenatorV5StateOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v12 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      int v16 = v15[176];
      if (v16 == 255)
      {
LABEL_13:
        long long v18 = *(_OWORD *)v15;
        long long v19 = *((_OWORD *)v15 + 1);
        long long v20 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v20;
        *(_OWORD *)uint64_t v14 = v18;
        *((_OWORD *)v14 + 1) = v19;
        long long v21 = *((_OWORD *)v15 + 4);
        long long v22 = *((_OWORD *)v15 + 5);
        long long v23 = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 7) = v23;
        *((_OWORD *)v14 + 4) = v21;
        *((_OWORD *)v14 + 5) = v22;
        long long v24 = *((_OWORD *)v15 + 8);
        long long v25 = *((_OWORD *)v15 + 9);
        long long v26 = *((_OWORD *)v15 + 10);
        v14[176] = v15[176];
        *((_OWORD *)v14 + 9) = v25;
        *((_OWORD *)v14 + 10) = v26;
        *((_OWORD *)v14 + 8) = v24;
        goto LABEL_15;
      }
LABEL_14:
      char v50 = v16 & 1;
      uint64_t v27 = *((void *)v15 + 5);
      uint64_t v28 = *((void *)v15 + 6);
      uint64_t v35 = *((void *)v15 + 7);
      uint64_t v36 = *((void *)v15 + 8);
      uint64_t v37 = *((void *)v15 + 9);
      uint64_t v38 = *((void *)v15 + 10);
      uint64_t v39 = *((void *)v15 + 11);
      uint64_t v40 = *((void *)v15 + 12);
      uint64_t v41 = *((void *)v15 + 13);
      uint64_t v42 = *((void *)v15 + 14);
      uint64_t v43 = *((void *)v15 + 15);
      uint64_t v44 = *((void *)v15 + 16);
      uint64_t v45 = *((void *)v15 + 17);
      uint64_t v46 = *((void *)v15 + 18);
      uint64_t v47 = *((void *)v15 + 19);
      uint64_t v48 = *((void *)v15 + 20);
      uint64_t v49 = *((void *)v15 + 21);
      uint64_t v29 = *(void *)v15;
      uint64_t v30 = *((void *)v15 + 1);
      uint64_t v31 = *((void *)v15 + 2);
      uint64_t v32 = *((void *)v15 + 3);
      uint64_t v33 = *((void *)v15 + 4);
      sub_100136870(*(void *)v15, v30, v31, v32, v33, v27, v28, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46,
        v47,
        v48,
        v49,
        v16 & 1);
      *(void *)uint64_t v14 = v29;
      *((void *)v14 + 1) = v30;
      *((void *)v14 + 2) = v31;
      *((void *)v14 + 3) = v32;
      *((void *)v14 + 4) = v33;
      *((void *)v14 + 5) = v27;
      *((void *)v14 + 6) = v28;
      *((void *)v14 + 7) = v35;
      *((void *)v14 + 8) = v36;
      *((void *)v14 + 9) = v37;
      *((void *)v14 + 10) = v38;
      *((void *)v14 + 11) = v39;
      *((void *)v14 + 12) = v40;
      *((void *)v14 + 13) = v41;
      *((void *)v14 + 14) = v42;
      *((void *)v14 + 15) = v43;
      *((void *)v14 + 16) = v44;
      *((void *)v14 + 17) = v45;
      *((void *)v14 + 18) = v46;
      *((void *)v14 + 19) = v47;
      *((void *)v14 + 20) = v48;
      *((void *)v14 + 21) = v49;
      v14[176] = v50;
      goto LABEL_15;
    case 1:
      _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = sub_1005E17E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      }
      else
      {
        *a1 = *a2;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      uint64_t v14 = (char *)a1 + v17;
      uint64_t v15 = (char *)a2 + v17;
      int v16 = v15[176];
      if (v16 == 255) {
        goto LABEL_13;
      }
      goto LABEL_14;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1005E07F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1004208EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_1005E17E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      long long v15 = *((_OWORD *)v14 + 9);
      *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
      *((_OWORD *)v13 + 9) = v15;
      *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
      v13[176] = v14[176];
      long long v16 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v16;
      long long v17 = *((_OWORD *)v14 + 7);
      *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      *((_OWORD *)v13 + 7) = v17;
      long long v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v18;
      long long v19 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v19;
      goto LABEL_11;
    case 1:
      uint64_t v20 = _s13TemporaryDataOMa();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v21 = sub_1005E17E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
      }
      uint64_t v22 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
      long long v23 = (char *)a1 + v22;
      long long v24 = (char *)a2 + v22;
      long long v25 = *((_OWORD *)v24 + 9);
      *((_OWORD *)v23 + 8) = *((_OWORD *)v24 + 8);
      *((_OWORD *)v23 + 9) = v25;
      *((_OWORD *)v23 + 10) = *((_OWORD *)v24 + 10);
      v23[176] = v24[176];
      long long v26 = *((_OWORD *)v24 + 5);
      *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
      *((_OWORD *)v23 + 5) = v26;
      long long v27 = *((_OWORD *)v24 + 7);
      *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
      *((_OWORD *)v23 + 7) = v27;
      long long v28 = *((_OWORD *)v24 + 1);
      *(_OWORD *)long long v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v28;
      long long v29 = *((_OWORD *)v24 + 3);
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
      *((_OWORD *)v23 + 3) = v29;
      goto LABEL_11;
    case 0:
      *a1 = *a2;
      uint64_t v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1005E07F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_100420B50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10041F32C((uint64_t)a1, _s12ConcatenatorV5StateOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v11 = sub_1005E17E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = *(int *)(type metadata accessor for MessageSectionData.Concatenator.Completed(0) + 20);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        long long v15 = *((_OWORD *)v14 + 9);
        *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
        *((_OWORD *)v13 + 9) = v15;
        *((_OWORD *)v13 + 10) = *((_OWORD *)v14 + 10);
        v13[176] = v14[176];
        long long v16 = *((_OWORD *)v14 + 5);
        *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
        *((_OWORD *)v13 + 5) = v16;
        long long v17 = *((_OWORD *)v14 + 7);
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
        *((_OWORD *)v13 + 7) = v17;
        long long v18 = *((_OWORD *)v14 + 1);
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v18;
        long long v19 = *((_OWORD *)v14 + 3);
        *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 3) = v19;
        goto LABEL_12;
      case 1:
        uint64_t v20 = _s13TemporaryDataOMa();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v21 = sub_1005E17E0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        uint64_t v22 = *(int *)(_s12ConcatenatorV5StateO9ReceivingVMa(0) + 20);
        long long v23 = (char *)a1 + v22;
        long long v24 = (char *)a2 + v22;
        long long v25 = *((_OWORD *)v24 + 9);
        *((_OWORD *)v23 + 8) = *((_OWORD *)v24 + 8);
        *((_OWORD *)v23 + 9) = v25;
        *((_OWORD *)v23 + 10) = *((_OWORD *)v24 + 10);
        v23[176] = v24[176];
        long long v26 = *((_OWORD *)v24 + 5);
        *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
        *((_OWORD *)v23 + 5) = v26;
        long long v27 = *((_OWORD *)v24 + 7);
        *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
        *((_OWORD *)v23 + 7) = v27;
        long long v28 = *((_OWORD *)v24 + 1);
        *(_OWORD *)long long v23 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = v28;
        long long v29 = *((_OWORD *)v24 + 3);
        *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
        *((_OWORD *)v23 + 3) = v29;
        goto LABEL_12;
      case 0:
        *a1 = *a2;
        uint64_t v7 = *(int *)(_s12ConcatenatorV5StateO6NoDataVMa(0) + 24);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_1005E07F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100420DD8()
{
  uint64_t result = _s12ConcatenatorV5StateO6NoDataVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = _s12ConcatenatorV5StateO9ReceivingVMa(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for MessageSectionData.Concatenator.Completed(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100420ED8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1005E07F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100420FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1005E07F0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_OWORD *sub_10042100C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005E07F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_100421088(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005E07F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_10042110C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005E07F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_100421188(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005E07F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100421204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100421218);
}

uint64_t sub_100421218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1005E07F0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_100421288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042129C);
}

uint64_t sub_10042129C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1005E07F0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_100421310()
{
  uint64_t result = sub_1005E07F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004213AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100714490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100421414()
{
  unint64_t result = qword_100715018;
  if (!qword_100715018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715018);
  }
  return result;
}

uint64_t sub_100421468(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100715010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004214C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100421530(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100421598(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

_WORD *_s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVwCP(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100421788);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVMa()
{
  return &_s12ConcatenatorV5StateO25ReceivedOutOfOrderSegmentVN;
}

uint64_t sub_1004217C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  long long v24 = a3;
  uint64_t v6 = sub_1005E07F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v22 - v10;
  _s13TemporaryDataOMa();
  __chkstk_darwin();
  uint64_t v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  long long v15 = (uint64_t *)((char *)&v22 - v14);
  if (a2 >= a1)
  {
    sub_1005E1790();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v24, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v24, v6);
    _s13TemporaryFileCMa();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 24) = 0;
    uint64_t v17 = v23;
    Swift::Int32 v18 = static URL.makeTemporaryFile(baseDirectory:pathExtension:)(v9);
    if (v17)
    {
      long long v19 = *(void (**)(char *, uint64_t))(v7 + 8);
      v19(v11, v6);
      swift_deallocPartialClassInstance();
      return ((uint64_t (*)(char *, uint64_t))v19)(v24, v6);
    }
    uint64_t v23 = 0;
    *(_DWORD *)(v16 + 16) = v18;
    sub_1005E1060(v18, 64, 2);
    sub_100421D38();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v11, v6);
    v21(v9, v6);
    v21(v24, v6);
    *uint64_t v13 = v16;
    swift_storeEnumTagMultiPayload();
    long long v15 = v13;
  }
  return sub_10042242C((uint64_t)v15, v22);
}

uint64_t sub_100421A8C()
{
  uint64_t v1 = sub_1005E1700();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  unsigned int v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100714A60);
  __chkstk_darwin();
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005E1710();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v10 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v9 = v2 + 16;
    unint64_t v11 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v12 = *(void *)(v9 + 56);
    v17[2] = v7;
    uint64_t v18 = v12;
    uint64_t v13 = v9;
    unint64_t v14 = v9 + 40;
    uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v23 = v10;
    uint64_t v24 = v13;
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v21 = (void (**)(char *, uint64_t))(v13 - 8);
    v17[1] = v14 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    long long v19 = (char *)&type metadata for () + 8;
    while (1)
    {
      v23(v6, v11, v1);
      long long v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v14;
      (*(void (**)(char *, void, uint64_t, uint64_t))v14)(v6, 0, 1, v1);
      if ((*v22)(v6, 1, v1) == 1) {
        break;
      }
      (*v20)(v4, v6, v1);
      sub_1005E16E0();
      if (v0)
      {
        (*v21)(v4, v1);
        return swift_bridgeObjectRelease();
      }
      (*v21)(v4, v1);
      v11 += v18;
      if (!--v8) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    long long v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_8:
    v15(v6, 1, 1, v1);
  }
  return swift_bridgeObjectRelease();
}

id sub_100421D38()
{
  id v0 = [self defaultManager];
  sub_1005E0770(v1);
  uint64_t v3 = v2;
  id v8 = 0;
  unsigned int v4 = [v0 removeItemAtURL:v2 error:&v8];

  id v5 = v8;
  if (v4)
  {
    return v5;
  }
  else
  {
    id v7 = v8;
    sub_1005E06F0();

    swift_willThrow();
    return (id)swift_errorRelease();
  }
}

uint64_t sub_100421E58()
{
  if ((sub_1005E1080() & 0x100000000) != 0)
  {
    sub_1004223D8();
    swift_willThrowTypedImpl();
  }
  return swift_deallocClassInstance();
}

uint64_t _s13TemporaryFileCMa()
{
  return self;
}

uint64_t *sub_100421ED0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1005E17E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100421FD0(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1005E17E0();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100422060(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1005E17E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100422110(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1004221D0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1005E17E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1004221D0(uint64_t a1)
{
  uint64_t v2 = _s13TemporaryDataOMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s13TemporaryDataOMa()
{
  uint64_t result = qword_100715138;
  if (!qword_100715138) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_100422278(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004221D0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1005E17E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100422340()
{
  uint64_t result = sub_1005E17E0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1004223D8()
{
  unint64_t result = qword_100715170;
  if (!qword_100715170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715170);
  }
  return result;
}

uint64_t sub_10042242C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13TemporaryDataOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100422490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1005E1090();
  int v5 = result;
  if (v6)
  {
    sub_1004223D8();
    swift_willThrowTypedImpl();
    uint64_t result = swift_allocError();
    _DWORD *v10 = v5;
  }
  else
  {
    uint64_t v7 = *(void *)(a3 + 24);
    BOOL v8 = __OFADD__(v7, result);
    uint64_t v9 = v7 + result;
    if (v8) {
      __break(1u);
    }
    else {
      *(void *)(a3 + 24) = v9;
    }
  }
  return result;
}

uint64_t sub_10042254C(uint64_t a1, uint64_t a2)
{
  return sub_100422490(a1, a2, v2);
}

Swift::Int sub_100422568()
{
  Swift::UInt v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1005E33F0();
  if (v2 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(v1);
  }
  return sub_1005E3470();
}

void sub_1004225D8()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    Swift::UInt v1 = *(void *)v0;
    sub_1005E3420(1u);
    sub_1005E3410(v1);
  }
}

Swift::Int sub_100422628()
{
  Swift::UInt v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_1005E33F0();
  if (v2 == 1)
  {
    sub_1005E3420(0);
  }
  else
  {
    sub_1005E3420(1u);
    sub_1005E3410(v1);
  }
  return sub_1005E3470();
}

BOOL sub_100422694(uint64_t a1, uint64_t a2)
{
  return sub_100077A0C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t MessageSize.init(rawValue:)(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  return result;
}

uint64_t *sub_1004226BC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  char v3 = *((unsigned char *)result + 8);
  if (v3) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_1004226DC(uint64_t a1@<X8>)
{
  char v2 = *((unsigned char *)v1 + 8);
  if (v2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *v1;
  }
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v2;
}

unint64_t sub_100422708()
{
  unint64_t result = qword_100715178;
  if (!qword_100715178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715178);
  }
  return result;
}

void *sub_10042275C()
{
  return &protocol witness table for Int;
}

void sub_100422768(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for MessageSize()
{
  return &type metadata for MessageSize;
}

uint64_t MessageToDownload.bodyStructure.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t MessageToDownload.bodyStructure.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result & 1;
  return result;
}

Swift::UInt32 (__swiftcall *MessageToDownload.bodyStructure.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t static MessageToDownload.__derived_struct_equals(_:_:)(int a1, uint64_t a2, __int16 a3, int a4, uint64_t a5, __int16 a6)
{
  return sub_10042283C(a1, a2, a3 & 0x101, a4, a5, a6 & 0x101);
}

uint64_t sub_1004227EC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 17)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  if (*(unsigned char *)(a2 + 17)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_10042283C(*(_DWORD *)a1, *(void *)(a1 + 8), v2 | *(unsigned __int8 *)(a1 + 16), *(_DWORD *)a2, *(void *)(a2 + 8), v3 | *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_10042283C(int a1, uint64_t a2, __int16 a3, int a4, uint64_t a5, __int16 a6)
{
  if (a4 != a1) {
    return 0;
  }
  if (a3)
  {
    if (a6) {
      return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
    }
    return 0;
  }
  uint64_t result = 0;
  if (a6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a5;
  }
  if ((a6 & 1) == 0 && v7 == a2) {
    return ((a3 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8);
  }
  return result;
}

unint64_t sub_10042288C()
{
  unint64_t result = qword_100715180;
  if (!qword_100715180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715180);
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for MessageToDownload(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MessageToDownload(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageToDownload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageToDownload()
{
  return &type metadata for MessageToDownload;
}

unsigned char *storeEnumTagSinglePayload for MessageToDownload.BodyStructure(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100422A58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageToDownload.BodyStructure()
{
  return &type metadata for MessageToDownload.BodyStructure;
}

void MoveOrCopy.Result.hash(into:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    sub_1005E3410(a2 != 0);
  }
  else
  {
    sub_1005E3410(2uLL);
    sub_1005E3440(a2);
    sub_1005E3440(HIDWORD(a2));
  }
}

uint64_t static MoveOrCopy.Result.__derived_enum_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  BOOL v4 = HIDWORD(a1) == HIDWORD(a3);
  if (a3 != a1) {
    BOOL v4 = 0;
  }
  if (a4) {
    BOOL v4 = 0;
  }
  unsigned int v5 = a4 & (a3 == 0);
  if (a1) {
    unsigned int v5 = a4 & (a3 != 0);
  }
  if (a2) {
    return v5;
  }
  else {
    return v4;
  }
}

Swift::Int MoveOrCopy.Result.hashValue.getter(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_1005E3410(a1 != 0);
  }
  else
  {
    sub_1005E3410(2uLL);
    sub_1005E3440(a1);
    sub_1005E3440(HIDWORD(a1));
  }
  return sub_1005E3470();
}

Swift::Int sub_100422BD0()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 8);
  sub_1005E33F0();
  if (v2 == 1)
  {
    sub_1005E3410(v1 != 0);
  }
  else
  {
    sub_1005E3410(2uLL);
    sub_1005E3440(v1);
    sub_1005E3440(HIDWORD(v1));
  }
  return sub_1005E3470();
}

void sub_100422C64()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 8) == 1)
  {
    sub_1005E3410(v1 != 0);
  }
  else
  {
    sub_1005E3410(2uLL);
    sub_1005E3440(v1);
    sub_1005E3440(HIDWORD(v1));
  }
}

Swift::Int sub_100422CD4()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 8);
  sub_1005E33F0();
  if (v2 == 1)
  {
    sub_1005E3410(v1 != 0);
  }
  else
  {
    sub_1005E3410(2uLL);
    sub_1005E3440(v1);
    sub_1005E3440(HIDWORD(v1));
  }
  return sub_1005E3470();
}

uint64_t sub_100422D64(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  unsigned int v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    BOOL v5 = v3 == 0;
    if (v3) {
      unsigned int v6 = 0;
    }
    else {
      unsigned int v6 = *((unsigned __int8 *)a2 + 8);
    }
    if (v5) {
      unsigned int v4 = 0;
    }
    if (v2) {
      return v4;
    }
    else {
      return v6;
    }
  }
  else if (v4)
  {
    return 0;
  }
  else
  {
    return v3 == v2 && HIDWORD(v2) == HIDWORD(v3);
  }
}

uint64_t MoveOrCopy.operation.setter(uint64_t result)
{
  unsigned char *v1 = result & 1;
  return result;
}

uint64_t MoveOrCopy.sourceMessage.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t MoveOrCopy.init(operation:sourceMessage:targetMailbox:targetMessage:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(unsigned char *)a7 = result & 1;
  *(_DWORD *)(a7 + 4) = a2;
  *(void *)(a7 + 8) = a3;
  *(_DWORD *)(a7 + 16) = a4;
  *(void *)(a7 + 24) = a5;
  *(void *)(a7 + 32) = a6;
  return result;
}

uint64_t MoveOrCopy.hash(into:)()
{
  sub_1005E3410(*v0);
  sub_1005E3440(*((_DWORD *)v0 + 1));
  sub_1005E3410(*((unsigned int *)v0 + 4) | ((unint64_t)*((unsigned int *)v0 + 4) << 32));
  long long v2 = *(_OWORD *)(v0 + 24);
  sub_10000FAA8((uint64_t)&v2);
  sub_1005E08B0();
  return sub_10000FAD8((uint64_t)&v2);
}

Swift::Int MoveOrCopy.hashValue.getter()
{
  sub_1005E33F0();
  sub_1005E3410(*v0);
  sub_1005E3440(*((_DWORD *)v0 + 1));
  sub_1005E3410(*((unsigned int *)v0 + 4) | ((unint64_t)*((unsigned int *)v0 + 4) << 32));
  long long v2 = *(_OWORD *)(v0 + 24);
  sub_10000FAA8((uint64_t)&v2);
  sub_1005E08B0();
  sub_10000FAD8((uint64_t)&v2);
  return sub_1005E3470();
}

Swift::Int sub_100422F00()
{
  Swift::UInt v1 = *v0;
  Swift::UInt32 v2 = *((_DWORD *)v0 + 1);
  uint64_t v3 = *((unsigned int *)v0 + 4);
  uint64_t v4 = *((void *)v0 + 3);
  unint64_t v5 = *((void *)v0 + 4);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3440(v2);
  sub_1005E3410(v3 | (v3 << 32));
  sub_100008D24(v4, v5);
  sub_1005E08B0();
  sub_1000094D4(v4, v5);
  return sub_1005E3470();
}

uint64_t sub_100422FA4()
{
  Swift::UInt32 v1 = *((_DWORD *)v0 + 1);
  uint64_t v2 = *((unsigned int *)v0 + 4);
  uint64_t v3 = *((void *)v0 + 3);
  unint64_t v4 = *((void *)v0 + 4);
  sub_1005E3410(*v0);
  sub_1005E3440(v1);
  sub_1005E3410(v2 | (v2 << 32));
  sub_100008D24(v3, v4);
  sub_1005E08B0();
  return sub_1000094D4(v3, v4);
}

Swift::Int sub_100423030()
{
  Swift::UInt v1 = *v0;
  Swift::UInt32 v2 = *((_DWORD *)v0 + 1);
  uint64_t v3 = *((unsigned int *)v0 + 4);
  uint64_t v4 = *((void *)v0 + 3);
  unint64_t v5 = *((void *)v0 + 4);
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3440(v2);
  sub_1005E3410(v3 | (v3 << 32));
  sub_100008D24(v4, v5);
  sub_1005E08B0();
  sub_1000094D4(v4, v5);
  return sub_1005E3470();
}

uint64_t sub_1004230D0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s16IMAP2Persistence10MoveOrCopyV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

uint64_t _s16IMAP2Persistence10MoveOrCopyV23__derived_struct_equalsySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2
    || *((_DWORD *)a2 + 1) != *((_DWORD *)a1 + 1)
    || (*((unsigned int *)a1 + 4) | ((unint64_t)*((unsigned int *)a1 + 4) << 32)) != (*((unsigned int *)a2 + 4) | ((unint64_t)*((unsigned int *)a2 + 4) << 32))
    || !sub_100357CFC(*((void *)a1 + 1), *((void *)a2 + 1)))
  {
    return 0;
  }
  uint64_t v5 = *((void *)a1 + 3);
  unint64_t v4 = *((void *)a1 + 4);
  uint64_t v7 = *((void *)a2 + 3);
  unint64_t v6 = *((void *)a2 + 4);
  sub_100008D24(v5, v4);
  sub_100008D24(v7, v6);
  char v8 = sub_100439A14(v5, v4, v7, v6);
  sub_1000094D4(v7, v6);
  sub_1000094D4(v5, v4);
  return v8 & 1;
}

unint64_t sub_1004231F8()
{
  unint64_t result = qword_100715188;
  if (!qword_100715188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715188);
  }
  return result;
}

unint64_t sub_100423250()
{
  unint64_t result = qword_100715190;
  if (!qword_100715190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715190);
  }
  return result;
}

unint64_t sub_1004232A8()
{
  unint64_t result = qword_100715198;
  if (!qword_100715198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715198);
  }
  return result;
}

uint64_t destroy for MoveOrCopy(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  return sub_1000094D4(v2, v3);
}

uint64_t initializeWithCopy for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  unint64_t v4 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_100008D24(v3, v4);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithCopy for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v4 = *(void *)(a2 + 32);
  sub_100008D24(v5, v4);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  sub_1000094D4(v6, v7);
  return a1;
}

__n128 initializeWithTake for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MoveOrCopy(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1000094D4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveOrCopy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for MoveOrCopy()
{
  return &type metadata for MoveOrCopy;
}

unsigned char *storeEnumTagSinglePayload for MoveOrCopy.Operation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004235B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveOrCopy.Operation()
{
  return &type metadata for MoveOrCopy.Operation;
}

ValueMetadata *type metadata accessor for MoveOrCopy.Result()
{
  return &type metadata for MoveOrCopy.Result;
}

BOOL static OpaqueMailboxID.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a2 == a4 && sub_100357CFC(a1, a3);
}

IMAP2Persistence::OpaqueMailboxID __swiftcall OpaqueMailboxID.init(rawValue:)(Swift::OpaquePointer rawValue)
{
  sub_1005E3480();
  sub_1005E3400();
  Swift::Int v2 = sub_1005E3460();
  int v3 = rawValue._rawValue;
  result.hashValue = v2;
  result.rawValue._rawValue = v3;
  return result;
}

Swift::Int sub_100423684@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1005E3480();
  sub_1005E3400();
  Swift::Int result = sub_1005E3460();
  *a2 = v3;
  a2[1] = result;
  return result;
}

uint64_t sub_100423700@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void *OpaqueMailboxID.init(_:)(uint64_t a1, unint64_t a2)
{
  unsigned int v4 = sub_100423920(a1, a2);
  sub_1005E3480();
  sub_1005E3400();
  sub_1005E3460();
  sub_1000094D4(a1, a2);
  return v4;
}

void OpaqueMailboxID.hash(into:)(uint64_t a1, uint64_t a2, Swift::UInt a3)
{
}

void sub_1004237CC()
{
  sub_1005E3410(*(void *)(v0 + 8));
}

Swift::Int sub_1004237F8()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  sub_1005E33F0();
  sub_1005E3410(v1);
  return sub_1005E3470();
}

BOOL sub_10042383C(uint64_t *a1, uint64_t *a2)
{
  return a1[1] == a2[1] && sub_100357CFC(*a1, *a2);
}

uint64_t OpaqueMailboxID.description.getter(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = result;
    sub_1005E1D10(2 * v1);
    if (v1)
    {
      uint64_t v3 = v2 + 32;
      sub_100423ADC();
      do
      {
        ++v3;
        v4._countAndFlagsBits = sub_1005E1F20();
        sub_1005E1E30(v4);
        swift_bridgeObjectRelease();
        --v1;
      }
      while (v1);
    }
    return 0;
  }
  return result;
}

uint64_t sub_100423918()
{
  return OpaqueMailboxID.description.getter(*v0);
}

void *sub_100423920(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1005E08D0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_10000566C(&qword_1007144B8);
          char v8 = (void *)swift_allocObject();
          size_t v12 = j__malloc_size(v8);
          _OWORD v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_100008D24(a1, a2);
        uint64_t v13 = sub_1005E0830();
        sub_1000094D4(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x100423ACCLL);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_100423ADC()
{
  unint64_t result = qword_1007151A0;
  if (!qword_1007151A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007151A0);
  }
  return result;
}

unint64_t sub_100423B34()
{
  unint64_t result = qword_1007151A8;
  if (!qword_1007151A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007151A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaqueMailboxID()
{
  return &type metadata for OpaqueMailboxID;
}

uint64_t OpaquePersistedMessageIdentifier.rawValue.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t OpaquePersistedMessageIdentifier.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000094D4(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_100423C00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_100008D24(v2, v3);
}

Swift::Int sub_100423C0C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1005E33F0();
  sub_100008D24(v1, v2);
  sub_1005E08B0();
  sub_1000094D4(v1, v2);
  return sub_1005E3470();
}

uint64_t sub_100423C70()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_100008D24(v2, v1);
  sub_1005E08B0();
  return sub_1000094D4(v2, v1);
}

Swift::Int sub_100423CD0()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1005E33F0();
  sub_100008D24(v1, v2);
  sub_1005E08B0();
  sub_1000094D4(v1, v2);
  return sub_1005E3470();
}

uint64_t sub_100423D30(void *a1, void *a2)
{
  return sub_100439A14(*a1, a1[1], *a2, a2[1]);
}

uint64_t OpaquePersistedMessageIdentifier.description.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  unint64_t v2 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_17;
      }
      uint64_t v5 = (int)v5;
LABEL_6:
      if (v5 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      sub_1005E1D10(2 * v5);
      if (v2)
      {
        if (v2 != 1)
        {
          uint64_t v10 = *(void *)(a1 + 16);
          uint64_t v11 = *(void *)(a1 + 24);
          swift_retain();
          swift_retain();
          sub_100424018(v10, v11);
          swift_release();
          swift_release();
          return v14;
        }
        if (a1 >> 32 >= (int)a1)
        {
          swift_retain();
          sub_100424018((int)a1, a1 >> 32);
          sub_1000094D4(a1, a2);
          return v14;
        }
LABEL_19:
        __break(1u);
      }
      v13[0] = a1;
      LOWORD(v13[1]) = a2;
      BYTE2(v13[1]) = BYTE2(a2);
      BYTE3(v13[1]) = BYTE3(a2);
      BYTE4(v13[1]) = BYTE4(a2);
      BYTE5(v13[1]) = BYTE5(a2);
      uint64_t v9 = (char *)v13 + BYTE6(a2);
LABEL_13:
      sub_100423F78((uint64_t)v13, (uint64_t)v9);
      return v14;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        goto LABEL_6;
      }
      goto LABEL_18;
    case 3uLL:
      sub_1005E1D10(0);
      memset(v13, 0, 14);
      uint64_t v9 = (char *)v13;
      goto LABEL_13;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100423F78(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = a2 - result;
    if (a2 != result)
    {
      sub_100423ADC();
      do
      {
        ++v2;
        v4._countAndFlagsBits = sub_1005E1F20();
        sub_1005E1E30(v4);
        uint64_t result = swift_bridgeObjectRelease();
        --v3;
      }
      while (v3);
    }
  }
  return result;
}

uint64_t sub_100424010()
{
  return OpaquePersistedMessageIdentifier.description.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_100424018(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1005E0550();
  uint64_t v5 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_1005E0570();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v5 + v9;
  if (v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  return sub_100423F78(v5, v11);
}

unint64_t sub_1004240C0()
{
  unint64_t result = qword_1007151B0;
  if (!qword_1007151B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007151B0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OpaquePersistedMessageIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_100008D24(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithCopy for OpaquePersistedMessageIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_100008D24(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1000094D4(v5, v6);
  return a1;
}

uint64_t *assignWithTake for OpaquePersistedMessageIdentifier(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1000094D4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpaquePersistedMessageIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for OpaquePersistedMessageIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpaquePersistedMessageIdentifier()
{
  return &type metadata for OpaquePersistedMessageIdentifier;
}

uint64_t MessageAttribute.BodyStructure.partsForHTMLBody()()
{
  uint64_t v1 = v0;
  sub_10013A988(v0, (uint64_t)v13);
  sub_10013A988((uint64_t)v13, (uint64_t)v16);
  sub_10013A988(v0, (uint64_t)v14);
  if (sub_10013AE98((uint64_t)v14) == 1)
  {
    sub_10000566C(&qword_100714968);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1005F6670;
    *(void *)(v2 + 32) = _swiftEmptyArrayStorage;
    return sub_100425308(v2);
  }
  else
  {
    sub_10013AE3C((uint64_t)v14, (uint64_t)v15);
    sub_10013A988((uint64_t)v16, (uint64_t)v12);
    sub_1001F95B8((uint64_t)v12);
    uint64_t v4 = sub_10042474C();
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    uint64_t v11 = &_swiftEmptySetSingleton;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10042C12C(v4, v6, v8, (uint64_t)&v11, v4, v6, v8);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v3 = sub_100424B00((uint64_t)v11, 65000, 15000, v9, v4, v6, v8);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10042C6D8(v1);
  }
  return v3;
}

uint64_t BodyStructure.partsForHTMLBody()()
{
  uint64_t v0 = sub_10042474C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v8 = &_swiftEmptySetSingleton;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10042C12C(v0, v2, v4, (uint64_t)&v8, v0, v2, v4);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = sub_100424B00((uint64_t)v8, 65000, 15000, v5, v0, v2, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t MessageAttribute.BodyStructure.partsForWatch()()
{
  uint64_t v1 = v0;
  sub_10013A988(v0, (uint64_t)v14);
  sub_10013A988((uint64_t)v14, (uint64_t)v17);
  sub_10013A988(v0, (uint64_t)v15);
  if (sub_10013AE98((uint64_t)v15) == 1)
  {
    sub_10000566C(&qword_100714968);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1005F6670;
    *(void *)(v2 + 32) = _swiftEmptyArrayStorage;
    return sub_100425308(v2);
  }
  else
  {
    sub_10013AE3C((uint64_t)v15, (uint64_t)v16);
    sub_10013A988((uint64_t)v17, (uint64_t)v13);
    sub_1001F95B8((uint64_t)v13);
    uint64_t v4 = sub_10042474C();
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    sub_100425718(v4, v5, v7);
    uint64_t v9 = sub_100424D50(v4, v6, v8);
    uint64_t v10 = sub_100424E98((uint64_t)v9, (uint64_t)&_swiftEmptySetSingleton);
    uint64_t v3 = sub_100424B00(v10, 65000, 15000, v11, v4, v6, v8);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_10042C6D8(v1);
  }
  return v3;
}

uint64_t BodyStructure.partsForWatch()()
{
  uint64_t v0 = sub_10042474C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100425718(v0, v1, v3);
  uint64_t v5 = sub_100424D50(v0, v2, v4);
  uint64_t v6 = sub_100424E98((uint64_t)v5, (uint64_t)&_swiftEmptySetSingleton);
  uint64_t v8 = sub_100424B00(v6, 65000, 15000, v7, v0, v2, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t sub_10042474C()
{
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = sub_10042BA90((uint64_t)_swiftEmptyArrayStorage);
  v0[3] = v1;
  v0[4] = v2;
  v9[2] = v0 + 2;
  BodyStructure.enumerateParts(_:)((void (*)(uint64_t, unsigned char *))sub_10042CA44, (uint64_t)v9);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v6 = sub_10042BC54(v3, v4, v5, (void (*)(long long *__return_ptr, uint64_t, long long *))sub_10042CA60);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = sub_10042BE70(v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

void *BodyStructure.singlePartsWithSizes.getter()
{
  uint64_t v2 = _swiftEmptyArrayStorage;
  v1[2] = &v2;
  BodyStructure.enumerateParts(_:)((void (*)(uint64_t, unsigned char *))sub_10042C744, (uint64_t)v1);
  return v2;
}

uint64_t sub_1004248C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10013AE3C(a2, (uint64_t)v14);
  sub_10013AE3C((uint64_t)v14, (uint64_t)v16);
  sub_10013AE3C(a2, (uint64_t)v15);
  if (sub_10013AEAC((uint64_t)v15) == 1) {
    return UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v15);
  }
  UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v15);
  sub_10013AE3C((uint64_t)v16, (uint64_t)v13);
  uint64_t v7 = *(void *)(UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v13) + 0x50);
  swift_bridgeObjectRetain();
  char v8 = BodyStructure.isAttachment.getter();
  uint64_t v9 = *a3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v9;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100409304(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
    uint64_t v9 = result;
    *a3 = result;
  }
  unint64_t v11 = *(void *)(v9 + 16);
  unint64_t v10 = *(void *)(v9 + 24);
  if (v11 >= v10 >> 1)
  {
    uint64_t result = (uint64_t)sub_100409304((char *)(v10 > 1), v11 + 1, 1, (char *)v9);
    uint64_t v9 = result;
    *a3 = result;
  }
  *(void *)(v9 + 16) = v11 + 1;
  unint64_t v12 = v9 + 24 * v11;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = v7;
  *(unsigned char *)(v12 + 48) = v8 & 1;
  return result;
}

uint64_t static BodyStructure.SinglePartWithSize.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(a1, a4) & (a2 == a5) & (a3 ^ a6 ^ 1);
}

uint64_t sub_100424A68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  return static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)a2) & (v2 == v4) & (v3 ^ v5 ^ 1);
}

BOOL sub_100424AC0(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t static BodyStructure.BodyPartListLimits.default.getter()
{
  return 65000;
}

uint64_t sub_100424B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (sub_10042C808(a6, a7))
  {
    sub_10000566C(&qword_100714968);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1005F6670;
    *(void *)(v12 + 32) = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_10042B49C(0, a1, a5, a6, a7);
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_100425010(a1, v13, a5, a6, a7);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    if (v14)
    {
      uint64_t v17 = v13 + a3;
      BOOL v18 = __OFADD__(v13, a3);
      do
      {
        if (v16 > a2)
        {
          if (v18)
          {
            __break(1u);
            uint64_t result = swift_release();
            __break(1u);
            return result;
          }
          if (v17 < v16)
          {
            swift_bridgeObjectRelease();
            break;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v19 = swift_bridgeObjectRetain();
        uint64_t v20 = sub_100425010(v19, v16, a5, a6, a7);
        uint64_t v16 = v21;
        swift_bridgeObjectRelease();
      }
      while (v20);
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = sub_100431DC0(v22);
    swift_bridgeObjectRelease();
    long long v26 = v23;
    sub_1004259CC((uint64_t *)&v26, (uint64_t (*)(uint64_t))sub_100433138, sub_100427508);
    swift_bridgeObjectRelease();
    uint64_t v12 = (uint64_t)v26;
  }
  return sub_100425308(v12);
}

void *sub_100424D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = _swiftEmptyArrayStorage;
  sub_100425494(a1, a2, a3, 2500000, &v12);
  sub_1004259CC((uint64_t *)&v12, (uint64_t (*)(uint64_t))sub_10042AFC8, sub_100427BAC);
  int v3 = v12;
  unint64_t v11 = &_swiftEmptySetSingleton;
  uint64_t v4 = v12[2];
  if (v4)
  {
    uint64_t result = (void *)swift_bridgeObjectRetain_n();
    uint64_t v6 = 0;
    for (uint64_t i = v3 + 5; ; i += 2)
    {
      uint64_t v8 = v6 + *i;
      if (__OFADD__(v6, *i)) {
        break;
      }
      if (v8 <= 3999999)
      {
        uint64_t v9 = *(i - 1);
        swift_bridgeObjectRetain_n();
        sub_100409628(&v10, v9);
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        uint64_t v6 = v8;
      }
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        return v11;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_100424E98(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v16 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(v2 + 48) + 8 * v10);
    swift_bridgeObjectRetain();
    sub_100409628(&v15, v11);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100425010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = &_swiftEmptySetSingleton;
  uint64_t v9 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v15 = 0;
  while (v12)
  {
    unint64_t v16 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v17 = v16 | (v15 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(*(void *)(a1 + 48) + 8 * v17);
    if (*(void *)(v21 + 16))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_1004272DC(1, v21);
      sub_100409628(&v35, v22);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v18);
  ++v15;
  if (v19) {
    goto LABEL_23;
  }
  int64_t v15 = v18 + 1;
  if (v18 + 1 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v15);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v15 = v18 + 2;
  if (v18 + 2 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v15);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v15 = v18 + 3;
  if (v18 + 3 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v15);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v15 = v18 + 4;
  if (v18 + 4 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v15);
  if (v19)
  {
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_24;
  }
  int64_t v20 = v18 + 5;
  if (v20 < v13)
  {
    unint64_t v19 = *(void *)(v9 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v15 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_38;
        }
        if (v15 >= v13) {
          goto LABEL_26;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v15);
        ++v20;
        if (v19) {
          goto LABEL_23;
        }
      }
    }
    int64_t v15 = v20;
    goto LABEL_23;
  }
LABEL_26:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t)v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)sub_10042B858(v23, a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v25 = v24[2];
  if (v25)
  {
    uint64_t v26 = v24[4];
    uint64_t v27 = v24[5];
    uint64_t v28 = v25 - 1;
    if (v25 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v29 = v24 + 7;
      uint64_t v30 = v26;
      uint64_t v31 = v24 + 7;
      do
      {
        uint64_t v33 = *v31;
        v31 += 2;
        uint64_t v32 = v33;
        if (v33 < v27)
        {
          uint64_t v30 = *(v29 - 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v27 = v32;
        }
        long long v29 = v31;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease();
      uint64_t v26 = v30;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v26;
}

uint64_t sub_100425308(uint64_t a1)
{
  uint64_t v3 = variable initialization expression of Cache._big5HkscsCanonicalName();
  uint64_t v4 = sub_1004287D8(&v12, a1, 0, 1, v3);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = v12;
  if (v12 == v5) {
    return v4;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v5 < v12)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    swift_bridgeObjectRelease();
    sub_100431CF0(a1, v1, 0, (2 * v6) | 1);
    uint64_t v9 = v11;
    goto LABEL_9;
  }
  uint64_t v1 = a1 + 32;
  sub_1005E3300();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  unint64_t v7 = (void *)swift_dynamicCastClass();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v7[2];
  swift_release();
  if (v8 != v6) {
    goto LABEL_14;
  }
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = v4;
  int64_t v14 = v9;
  if (*(void *)(a1 + 16) >= v5)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100428A60(a1, v1, v6, (2 * v5) | 1);
    swift_bridgeObjectRelease_n();
    swift_release();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100425494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v26 = a3 + 32;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v23 = v5;
    uint64_t v24 = a4;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v26 + 48 * v8);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      uint64_t v13 = v10[2];
      int v14 = *((unsigned __int8 *)v10 + 24);
      uint64_t v27 = v10[4];
      if (v7)
      {
        unint64_t v15 = *(void *)(v7 + 16);
        if (v15 < *(void *)(v11 + 16))
        {
          if (!v15) {
            goto LABEL_5;
          }
          if (*(void *)(v11 + 32) == *(void *)(v7 + 32))
          {
            unint64_t v16 = v15 - 1;
            if (!v16) {
              goto LABEL_5;
            }
            uint64_t v17 = 0;
            while (*(void *)(v11 + 40 + 8 * v17) == *(void *)(v7 + 8 * v17 + 40))
            {
              if (v16 == ++v17) {
                goto LABEL_5;
              }
            }
          }
        }
        swift_bridgeObjectRetain();
        sub_10042C7D8(v12, v13, v14);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v14 != 2)
        {
LABEL_18:
          if (v14 == 5 && !(v13 | v12))
          {
            swift_bridgeObjectRelease();
            uint64_t v7 = v11;
            goto LABEL_5;
          }
          if (v27 < a4)
          {
            int64_t v18 = *a5;
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a5 = v18;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              int64_t v18 = sub_1004091E0(0, v18[2] + 1, 1, v18);
              *a5 = v18;
            }
            unint64_t v21 = v18[2];
            unint64_t v20 = v18[3];
            if (v21 >= v20 >> 1)
            {
              int64_t v18 = sub_1004091E0((void *)(v20 > 1), v21 + 1, 1, v18);
              *a5 = v18;
            }
            v18[2] = v21 + 1;
            uint64_t v9 = &v18[2 * v21];
            void v9[4] = v11;
            v9[5] = v27;
            uint64_t v5 = v23;
            a4 = v24;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_10042C7D8(v12, v13, v14);
        swift_bridgeObjectRetain();
        if (v14 != 2) {
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease();
      sub_10042C7F0(v12, v13, v14);
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
LABEL_5:
      if (++v8 == v5)
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_100425718(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    uint64_t v21 = a3 + 32;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v9 = v21 + 48 * v5;
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      uint64_t v12 = *(void *)(v9 + 16);
      int v13 = *(unsigned __int8 *)(v9 + 24);
      if (v4)
      {
        unint64_t v14 = *(void *)(v4 + 16);
        if (v14 < *(void *)(v10 + 16))
        {
          if (!v14) {
            goto LABEL_5;
          }
          if (*(void *)(v10 + 32) == *(void *)(v4 + 32))
          {
            unint64_t v15 = v14 - 1;
            if (!v15) {
              goto LABEL_5;
            }
            uint64_t v16 = 0;
            while (*(void *)(v10 + 40 + 8 * v16) == *(void *)(v4 + 8 * v16 + 40))
            {
              if (v15 == ++v16) {
                goto LABEL_5;
              }
            }
          }
        }
        swift_bridgeObjectRetain();
        sub_10042C7D8(v11, v12, v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v13 != 2)
        {
LABEL_16:
          if (v13 == 5 && !(v12 | v11))
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v10;
            goto LABEL_5;
          }
          swift_bridgeObjectRelease();
          uint64_t v6 = v11;
          uint64_t v7 = v12;
          unsigned __int8 v8 = v13;
          goto LABEL_4;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_10042C7D8(v11, v12, v13);
        swift_bridgeObjectRetain();
        if (v13 != 2) {
          goto LABEL_16;
        }
      }
      if (sub_1005E1CB0() != v11 || v12 != v17)
      {
        char v18 = sub_1005E3290();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_24;
        }
        if (sub_1005E1CB0() != v11 || v12 != v19)
        {
          char v20 = sub_1005E3290();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0) {
            goto LABEL_25;
          }
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRetain();
      sub_100409628(&v22, v10);
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      uint64_t v6 = v11;
      uint64_t v7 = v12;
      unsigned __int8 v8 = 2;
LABEL_4:
      sub_10042C7F0(v6, v7, v8);
      swift_bridgeObjectRelease();
      uint64_t v4 = 0;
LABEL_5:
      if (++v5 == v3)
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1004259CC(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

unint64_t sub_100425A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  unint64_t result = sub_100428DFC(a1, a2, a3);
  if (v8)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v16 = 0;
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    goto LABEL_6;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(a4 + 16))
  {
    uint64_t v9 = a4 + 48 * result;
    uint64_t v10 = *(void *)(v9 + 32);
    uint64_t v11 = *(void *)(v9 + 40);
    uint64_t v12 = *(void *)(v9 + 48);
    uint64_t v14 = *(void *)(v9 + 64);
    uint64_t v13 = *(void *)(v9 + 72);
    unsigned __int8 v15 = *(unsigned char *)(v9 + 56);
    uint64_t v16 = v15;
    swift_bridgeObjectRetain();
    sub_10042C7D8(v11, v12, v15);
    unint64_t result = swift_bridgeObjectRetain();
LABEL_6:
    *a5 = v10;
    a5[1] = v11;
    a5[2] = v12;
    a5[3] = v16;
    a5[4] = v14;
    a5[5] = v13;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100425B10(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  return sub_100440804(*a1, *a2) & (v2 == v3);
}

uint64_t sub_100425B4C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_10040A758(0, v1, 0);
    uint64_t result = sub_1000D38CC(a1);
    uint64_t v4 = result;
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_13;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_14;
      }
      swift_bridgeObjectRetain();
      v15._countAndFlagsBits = 39;
      v15._object = (void *)0xE100000000000000;
      sub_1005E1E30(v15);
      sub_1005E2E90();
      v16._countAndFlagsBits = 39;
      v16._object = (void *)0xE100000000000000;
      sub_1005E1E30(v16);
      swift_bridgeObjectRelease();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10040A758((char *)(v9 > 1), v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = 0;
      _OWORD v11[5] = 0xE000000000000000;
      uint64_t result = sub_1000D3970(v4, v6, v8 & 1, a1);
      uint64_t v4 = result;
      uint64_t v6 = v12;
      char v8 = v13 & 1;
      if (!--v1)
      {
        sub_100060FF0(result, v12, v13 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_10000566C(&qword_1007148D0);
    sub_100411568();
    uint64_t v14 = sub_1005E1A80();
    swift_bridgeObjectRelease();
    v17._countAndFlagsBits = 10272;
    v17._object = (void *)0xE200000000000000;
    sub_1005E1E30(v17);
    v18._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v18);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 10537;
    v19._object = (void *)0xE200000000000000;
    sub_1005E1E30(v19);
    return v14;
  }
  return result;
}

uint64_t sub_100425DC8()
{
  return sub_100425B4C(*v0);
}

uint64_t sub_100425DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(*(void *)a1, *(void *)a2) & 1) == 0
    || (sub_10042AFDC(v2, v3, v4, v7, v8, v9) & 1) == 0
    || v6 != v11)
  {
    return 0;
  }
  return sub_100440804(v5, v10);
}

BOOL sub_100425E9C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  return (sub_100429E90(*a2, a2[1], *a1, a1[1]) & 1) != 0 && (sub_100429B14(v2, v3) & 1) != 0;
}

uint64_t sub_100425EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10040A758(0, v3, 0);
    uint64_t v5 = a3 + 72;
    do
    {
      uint64_t v6 = *(void *)(v5 - 32);
      uint64_t v7 = *(void *)(v5 - 24);
      unsigned __int8 v8 = *(unsigned char *)(v5 - 16);
      swift_bridgeObjectRetain();
      sub_10042C7D8(v6, v7, v8);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1004260BC();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_10042C7F0(v6, v7, v8);
      swift_bridgeObjectRelease();
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_10040A758((char *)(v12 > 1), v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      v14[5] = v11;
      v5 += 48;
      --v3;
    }
    while (v3);
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10000566C(&qword_1007148D0);
  sub_100411568();
  uint64_t v15 = sub_1005E1A80();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1004260B0()
{
  return sub_100425EF0(*v0, v0[1], v0[2]);
}

uint64_t sub_1004260BC()
{
  if (*(void *)(*(void *)(v0 + 40) + 16))
  {
    sub_1005E2C80(26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = sub_1005E1CC0();
    sub_1005E1E30(v8);
    swift_bridgeObjectRelease();
    v9._countAndFlagsBits = 2112039;
    v9._object = (void *)0xE300000000000000;
    sub_1005E1E30(v9);
    uint64_t v1 = *(void *)(v0 + 8);
    uint64_t v2 = *(void *)(v0 + 16);
    char v3 = *(unsigned char *)(v0 + 24);
    sub_10042C7D8(v1, v2, v3);
    v10._countAndFlagsBits = sub_1004267A8(v1, v2, v3);
    sub_1005E1E30(v10);
    swift_bridgeObjectRelease();
    sub_10042C7F0(v1, v2, v3);
    v11._countAndFlagsBits = 8236;
    v11._object = (void *)0xE200000000000000;
    sub_1005E1E30(v11);
    v12._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v12);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = 0x202C736574796220;
    v13._object = (void *)0xEC0000002E2E2E31;
    sub_1005E1E30(v13);
    v14._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E2C80(18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v15._countAndFlagsBits = sub_1005E1CC0();
    sub_1005E1E30(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 2112039;
    v16._object = (void *)0xE300000000000000;
    sub_1005E1E30(v16);
    uint64_t v4 = *(void *)(v0 + 8);
    uint64_t v5 = *(void *)(v0 + 16);
    char v6 = *(unsigned char *)(v0 + 24);
    sub_10042C7D8(v4, v5, v6);
    v17._countAndFlagsBits = sub_1004267A8(v4, v5, v6);
    sub_1005E1E30(v17);
    swift_bridgeObjectRelease();
    sub_10042C7F0(v4, v5, v6);
    v18._countAndFlagsBits = 8236;
    v18._object = (void *)0xE200000000000000;
    sub_1005E1E30(v18);
    v19._countAndFlagsBits = sub_1005E3230();
    sub_1005E1E30(v19);
    swift_bridgeObjectRelease();
    v20._countAndFlagsBits = 0x736574796220;
    v20._object = (void *)0xE600000000000000;
    sub_1005E1E30(v20);
  }
  return 39;
}

uint64_t sub_10042637C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (*(void *)(result + 16))
  {
    uint64_t v8 = result;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1004272DC(1, v8);
    sub_100425A50(v9, a2, a3, a4, v45);
    swift_bridgeObjectRelease();
    uint64_t result = sub_10001FDF0((uint64_t)v45, (uint64_t)v46, &qword_1007151B8);
    if (*(void *)&v46[0])
    {
      v47[0] = v46[0];
      v47[1] = v46[1];
      long long v48 = v46[2];
      uint64_t v49 = *(void *)&v46[0];
      sub_10042C9B0((_OWORD *)((char *)v47 + 8), (uint64_t)v50);
      sub_10042C9C8((uint64_t)v50);
      uint64_t v51 = *((void *)&v48 + 1);
      sub_10001D550((uint64_t)&v51);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v10 = swift_retain();
      uint64_t v11 = sub_10042C040(v10, v8);
      char v13 = v12;
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        uint64_t v14 = *(void *)(a4 + 16);
        if (v14)
        {
          uint64_t v15 = v49;
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v40 = v15;
          uint64_t v41 = 0;
          uint64_t v16 = 0;
          uint64_t v38 = (uint64_t *)(v15 + 40);
          uint64_t v44 = v11;
          uint64_t v43 = v14;
          while (1)
          {
            if (v11 >= v16) {
              goto LABEL_8;
            }
            uint64_t v17 = a4 + 32 + 48 * v16;
            Swift::String v18 = *(void **)v17;
            uint64_t v19 = *(void *)(v17 + 8);
            uint64_t v20 = *(void *)(v17 + 16);
            int v21 = *(unsigned __int8 *)(v17 + 24);
            swift_bridgeObjectRetain();
            sub_10042C7D8(v19, v20, v21);
            swift_bridgeObjectRetain();
            if (static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18, v8)) {
              break;
            }
            unint64_t v22 = *(void *)(v40 + 16);
            unint64_t v23 = v18[2];
            if (v22 >= v23) {
              goto LABEL_39;
            }
            if (v22)
            {
              if (v18[4] != *(void *)(v40 + 32)) {
                goto LABEL_39;
              }
              unint64_t v24 = v22 - 1;
              if (v24)
              {
                uint64_t v25 = v18 + 5;
                uint64_t v26 = v38;
                while (1)
                {
                  uint64_t v28 = *v26++;
                  uint64_t v27 = v28;
                  uint64_t v29 = *v25++;
                  if (v29 != v27) {
                    break;
                  }
                  if (!--v24) {
                    goto LABEL_18;
                  }
                }
LABEL_39:
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                sub_10001D550((uint64_t)&v49);
                swift_bridgeObjectRelease();
                sub_10042C7F0(v19, v20, v21);
                return swift_bridgeObjectRelease();
              }
            }
LABEL_18:
            if (v41)
            {
              unint64_t v30 = v41[2];
              if (v30 < v23)
              {
                if (!v30) {
                  break;
                }
                if (v18[4] == v41[4])
                {
                  unint64_t v31 = v30 - 1;
                  if (v30 == 1) {
                    break;
                  }
                  uint64_t v32 = v41 + 5;
                  uint64_t v33 = v18 + 5;
                  while (1)
                  {
                    uint64_t v35 = *v32++;
                    uint64_t v34 = v35;
                    uint64_t v36 = *v33++;
                    if (v36 != v34) {
                      break;
                    }
                    if (!--v31) {
                      goto LABEL_6;
                    }
                  }
                }
              }
              swift_bridgeObjectRelease();
            }
            if (v21 == 2)
            {
              if (sub_1005E1CB0() == v19 && v20 == v37)
              {
                swift_bridgeObjectRelease();
                goto LABEL_36;
              }
              char v42 = sub_1005E3290();
              swift_bridgeObjectRelease();
              if (v42) {
LABEL_36:
              }
                *a5 = 1;
              LOBYTE(v21) = 2;
LABEL_38:
              swift_bridgeObjectRelease();
              sub_10042C7F0(v19, v20, v21);
              swift_bridgeObjectRelease();
              uint64_t v41 = 0;
              goto LABEL_7;
            }
            if (v21 != 5 || v20 | v19) {
              goto LABEL_38;
            }
            swift_bridgeObjectRelease();
            uint64_t v41 = v18;
LABEL_7:
            uint64_t v11 = v44;
            uint64_t v14 = v43;
LABEL_8:
            if (++v16 == v14)
            {
              swift_release();
              swift_release();
              swift_release();
              goto LABEL_42;
            }
          }
LABEL_6:
          swift_bridgeObjectRelease();
          sub_10042C7F0(v19, v20, v21);
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
LABEL_42:
        swift_bridgeObjectRelease();
      }
      return sub_10001D550((uint64_t)&v49);
    }
  }
  return result;
}

uint64_t sub_10042678C(uint64_t a1, uint64_t a2)
{
  return sub_10042AFDC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1004267A8(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      v4._countAndFlagsBits = 0x2F6567616D69;
      v4._object = (void *)0xE600000000000000;
      goto LABEL_8;
    case 2:
      v4._countAndFlagsBits = 0x2F74786574;
      v4._object = (void *)0xE500000000000000;
      goto LABEL_8;
    case 3:
      uint64_t v3 = 1701079414;
      goto LABEL_6;
    case 4:
      v4._countAndFlagsBits = 0x72617069746C756DLL;
      v4._object = (void *)0xEA00000000002F74;
      goto LABEL_8;
    case 5:
      if (a1 | a2) {
        return 0x726568746FLL;
      }
      else {
        return 0x6567617373656DLL;
      }
    default:
      uint64_t v3 = 1768191329;
LABEL_6:
      v4._countAndFlagsBits = v3 & 0xFFFF0000FFFFFFFFLL | 0x2F6F00000000;
      v4._object = (void *)0xE600000000000000;
LABEL_8:
      sub_1005E1E30(v4);
      sub_1005E2E90();
      return 0;
  }
}

uint64_t sub_10042691C()
{
  return sub_1004267A8(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_100426928(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_100426AD0();
  uint64_t v6 = v5;
  unsigned __int8 v8 = v7;
  sub_10013AE3C(a2, (uint64_t)v20);
  int v9 = sub_10013AEAC((uint64_t)v20);
  uint64_t v10 = UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v20);
  if (v9 == 1) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(v10 + 80);
  }
  v21[0] = v4;
  v21[1] = v6;
  v21[2] = v8;
  void v21[3] = v11;
  v21[4] = v9 == 1;
  v21[5] = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t result = sub_100426D2C(v21, a1);
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1004272DC(1, a1);
    uint64_t v15 = sub_100427050(v19, v13);
    if (*(void *)(v14 + 40))
    {
      uint64_t v17 = *(void *)v14;
      uint64_t v16 = *(void *)(v14 + 8);
      unsigned __int8 v18 = *(unsigned char *)(v14 + 16);
      sub_10042C7D8(*(void *)v14, v16, v18);
      swift_bridgeObjectRetain();
      sub_10042C7F0(v17, v16, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_100409628(&v22, a1);
      ((void (*)(void *, void))v15)(v19, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(void *, void))v15)(v19, 0);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100426AD0()
{
  uint64_t v0 = BodyStructure.mediaType.getter();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = Media.TopLevelType.text.unsafeMutableAddressor();
  if (*v3 == v0 && v3[1] == v2) {
    goto LABEL_6;
  }
  if (sub_1005E3290()) {
    goto LABEL_6;
  }
  unsigned __int8 v8 = Media.TopLevelType.audio.unsafeMutableAddressor();
  if (*v8 == v0 && v8[1] == v2) {
    goto LABEL_6;
  }
  if (sub_1005E3290()) {
    goto LABEL_6;
  }
  int v9 = Media.TopLevelType.image.unsafeMutableAddressor();
  if (*v9 == v0 && v9[1] == v2) {
    goto LABEL_6;
  }
  if (sub_1005E3290()) {
    goto LABEL_6;
  }
  uint64_t v10 = Media.TopLevelType.message.unsafeMutableAddressor();
  if (*v10 == v0 && v10[1] == v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((uint64_t v11 = Media.TopLevelType.video.unsafeMutableAddressor(), *v11 == v0) && v11[1] == v2
    || (sub_1005E3290() & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    BodyStructure.mediaType.getter();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = Media.TopLevelType.multipart.unsafeMutableAddressor();
    if (*v12 == v0 && v12[1] == v2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_1005E3290();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        return 1;
      }
    }
    BodyStructure.mediaType.getter();
    uint64_t v6 = v14;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100426D2C(uint64_t *a1, uint64_t a2)
{
  sub_10001FDF0((uint64_t)a1, (uint64_t)v33, &qword_1007151C0);
  unsigned __int8 v5 = v34;
  uint64_t v29 = v33[0];
  uint64_t v30 = v33[1];
  uint64_t v6 = v37;
  uint64_t v27 = v35;
  char v28 = v36;
  uint64_t v8 = *v2;
  unint64_t v7 = v2[1];
  swift_retain();
  swift_retain();
  unint64_t v9 = sub_100428DFC(a2, v8, v7);
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  swift_release();
  if (v11)
  {
    sub_10001FDF0((uint64_t)a1, (uint64_t)v38, &qword_1007151C0);
    if (v39)
    {
      unsigned __int8 v15 = v5;
      sub_10042C7D8(v29, v30, v5);
      uint64_t v16 = v6;
      swift_bridgeObjectRetain();
      sub_100428FF0(a2);
      uint64_t v24 = v2[2];
      v2 += 2;
      uint64_t v23 = v24;
      sub_10042C7D8(v29, v30, v5);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10040A7D8(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = *v2;
      }
      unint64_t v7 = *(void *)(v23 + 16);
      unint64_t v17 = *(void *)(v23 + 24);
      unint64_t v9 = v7 + 1;
      if (v7 < v17 >> 1) {
        goto LABEL_12;
      }
      goto LABEL_18;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10001FDF0((uint64_t)a1, (uint64_t)v38, &qword_1007151C0);
    if (v39)
    {
      uint64_t v14 = (char *)v2[2];
      unsigned __int8 v15 = v5;
      sub_10042C7D8(v29, v30, v5);
      uint64_t v16 = v6;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_10043314C((uint64_t)v14);
      }
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v17 = *((void *)v14 + 2);
        if (v9 < v17)
        {
          unsigned __int8 v18 = &v14[48 * v9];
          uint64_t v19 = *((void *)v18 + 4);
          uint64_t v20 = *((void *)v18 + 5);
          unsigned __int8 v21 = v18[48];
          sub_10042C7D8(v29, v30, v15);
          swift_bridgeObjectRetain();
          sub_10042C7F0(v19, v20, v21);
          swift_bridgeObjectRelease();
          *((void *)v18 + 4) = v29;
          *((void *)v18 + 5) = v30;
          v18[48] = v15;
          *((void *)v18 + 7) = v27;
          v18[64] = v28 & 1;
          *((void *)v18 + 9) = v16;
          swift_bridgeObjectRelease();
          sub_10042CF6C(a1);
          sub_10042C7F0(v29, v30, v15);
          uint64_t result = swift_bridgeObjectRelease();
          v2[2] = (uint64_t)v14;
          return result;
        }
      }
      __break(1u);
LABEL_18:
      sub_10040A7D8((char *)(v17 > 1), v9, 1);
      uint64_t v23 = *v2;
LABEL_12:
      *(void *)(v23 + 16) = v9;
      unint64_t v26 = v23 + 48 * v7;
      *(void *)(v26 + 32) = v29;
      *(void *)(v26 + 40) = v30;
      *(unsigned char *)(v26 + 48) = v15;
      *(void *)(v26 + 56) = v27;
      *(unsigned char *)(v26 + 64) = v28 & 1;
      *(void *)(v26 + 72) = v16;
      swift_bridgeObjectRelease();
      sub_10042CF6C(a1);
      sub_10042C7F0(v29, v30, v15);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t *v2 = v23;
      return result;
    }
    sub_10042A038(v9, v13);
    swift_bridgeObjectRelease();
    sub_10042A1AC(v9, (uint64_t)v31);
    swift_bridgeObjectRelease();
    sub_10042C9B0(v31, (uint64_t)v41);
    sub_10042C9C8((uint64_t)v41);
    uint64_t v40 = v32;
    return sub_10001D550((uint64_t)&v40);
  }
}

void (*sub_100427050(void *a1, uint64_t a2))(uint64_t **a1)
{
  unsigned __int8 v5 = malloc(0x58uLL);
  *a1 = v5;
  v5[6] = a2;
  v5[7] = v2;
  *(_OWORD *)unsigned __int8 v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  unint64_t v6 = sub_10042A300(a2, v5);
  *((unsigned char *)v5 + 80) = v7;
  v5[8] = v6;
  unsigned char v5[9] = v8;
  return sub_1004270CC;
}

void sub_1004270CC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_10042A5FC((*a1)[6], (*a1)[8], (*a1)[10] & 1, (*a1)[9], *a1);
  sub_10042CEEC(*v1, v1[1], v1[2], v1[3], v1[4], v1[5]);
  free(v1);
}

unint64_t sub_100427128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 16);
  swift_beginAccess();
  uint64_t v11 = a3[2];
  uint64_t v12 = a3[3];
  uint64_t v13 = a3[4];
  swift_bridgeObjectRetain_n();
  sub_10042C7D8(v8, v9, v10);
  unint64_t result = sub_100428DFC(a1, v11, v12);
  unsigned __int8 v26 = v10;
  if (v15)
  {
    swift_endAccess();
    uint64_t v20 = 0;
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(a2 + 40);
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = a1;
    *(void *)(a4 + 16) = v8;
    *(void *)(a4 + 24) = v9;
    *(unsigned char *)(a4 + 32) = v26;
    *(void *)(a4 + 40) = v20;
    *(void *)(a4 + 48) = v23;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v13 + 16))
  {
    uint64_t v24 = v9;
    uint64_t v25 = v8;
    uint64_t v16 = v13 + 48 * result;
    uint64_t v18 = *(void *)(v16 + 32);
    uint64_t v17 = *(void *)(v16 + 40);
    unsigned __int8 v19 = *(unsigned char *)(v16 + 48);
    uint64_t v20 = *(void *)(v16 + 56);
    char v21 = *(unsigned char *)(v16 + 64);
    uint64_t v22 = *(void *)(v16 + 72);
    swift_endAccess();
    swift_bridgeObjectRetain();
    sub_10042C7D8(v18, v17, v19);
    swift_bridgeObjectRelease();
    if (v21)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v20 = sub_10042CA9C(0, v22, a3);
      swift_release();
      sub_10042C7F0(v18, v17, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10042C7F0(v18, v17, v19);
    }
    uint64_t v9 = v24;
    uint64_t v8 = v25;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004272DC(uint64_t result, uint64_t a2)
{
  if (result < 0) {
    goto LABEL_29;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (!result) {
    return v2;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v7 = a2 + 32;
  uint64_t v19 = v4 - 1;
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v17 = result;
  uint64_t v18 = a2 + 32;
  do
  {
    uint64_t v11 = *(void *)(v7 + 8 * v5);
    uint64_t v12 = v8[2];
    if (v12 < v3)
    {
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_10040A818(0, v12 + 1, 1);
        uint64_t v7 = v18;
      }
      unint64_t v10 = v8[2];
      unint64_t v9 = v8[3];
      if (v10 >= v9 >> 1)
      {
        unint64_t result = (uint64_t)sub_10040A818((char *)(v9 > 1), v10 + 1, 1);
        uint64_t v7 = v18;
      }
      _OWORD v8[2] = v10 + 1;
      v8[v10 + 4] = v11;
LABEL_8:
      if (v19 == v5) {
        goto LABEL_24;
      }
      goto LABEL_9;
    }
    if (v6 >= v12) {
      goto LABEL_27;
    }
    uint64_t v13 = v2;
    uint64_t v14 = v8[v6 + 4];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10040A818(0, _swiftEmptyArrayStorage[2] + 1, 1);
      uint64_t v7 = v18;
    }
    unint64_t v16 = _swiftEmptyArrayStorage[2];
    unint64_t v15 = _swiftEmptyArrayStorage[3];
    if (v16 >= v15 >> 1)
    {
      sub_10040A818((char *)(v15 > 1), v16 + 1, 1);
      uint64_t v7 = v18;
    }
    _swiftEmptyArrayStorage[2] = v16 + 1;
    _swiftEmptyArrayStorage[v16 + 4] = v14;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (uint64_t)sub_100433124((uint64_t)v8);
      uint64_t v8 = (void *)result;
    }
    uint64_t v2 = v13;
    uint64_t v3 = v17;
    if (v6 >= v8[2]) {
      goto LABEL_28;
    }
    v8[v6++ + 4] = v11;
    if ((uint64_t)v6 < v17) {
      goto LABEL_8;
    }
    if (v19 == v5) {
      goto LABEL_24;
    }
    unint64_t v6 = 0;
LABEL_9:
    ++v5;
  }
  while (v5 < *(void *)(v2 + 16));
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100427508(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  uint64_t result = sub_1005E3210(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_134;
    }
    if (v4) {
      return sub_100428234(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_133;
  }
  uint64_t v97 = result;
  uint64_t v93 = a1;
  if (v4 <= 1)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    __dst = &_swiftEmptyArrayStorage[4];
    uint64_t v96 = _swiftEmptyArrayStorage;
    if (v4 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_99:
      uint64_t result = (uint64_t)v8;
      if (v11 >= 2)
      {
        uint64_t v86 = *v93;
        do
        {
          unint64_t v87 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_128;
          }
          if (!v86) {
            goto LABEL_141;
          }
          uint64_t v88 = result;
          uint64_t v89 = *(void *)(result + 32 + 16 * v87);
          uint64_t v90 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_100428310((uint64_t *)(v86 + 8 * v89), (uint64_t *)(v86 + 8 * *(void *)(result + 32 + 16 * (v11 - 1))), v86 + 8 * v90, __dst);
          if (v2) {
            break;
          }
          if (v90 < v89) {
            goto LABEL_129;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1004330E8(v88);
            uint64_t v88 = result;
          }
          if (v87 >= *(void *)(v88 + 16)) {
            goto LABEL_130;
          }
          uint64_t v91 = (void *)(v88 + 32 + 16 * v87);
          void *v91 = v89;
          v91[1] = v90;
          unint64_t v92 = *(void *)(v88 + 16);
          if (v11 > v92) {
            goto LABEL_131;
          }
          memmove((void *)(v88 + 32 + 16 * (v11 - 1)), (const void *)(v88 + 32 + 16 * v11), 16 * (v92 - v11));
          uint64_t result = v88;
          *(void *)(v88 + 16) = v92 - 1;
          unint64_t v11 = v92 - 1;
        }
        while (v92 > 2);
      }
LABEL_96:
      swift_bridgeObjectRelease();
      v96[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = v1;
  }
  else
  {
    uint64_t v103 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t result = sub_1005E2150();
    *(void *)(result + 16) = v7;
    uint64_t v96 = (void *)result;
    __dst = (uint64_t *)(result + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v94 = *a1 - 8;
  uint64_t v95 = *a1 + 16;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v98 = v4;
  while (1)
  {
    Swift::Int v12 = v9++;
    Swift::Int v101 = v12;
    if (v9 < v4)
    {
      uint64_t v13 = *(void *)(v10 + 8 * v9);
      uint64_t v14 = *(void *)(v10 + 8 * v12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v15 = static SectionSpecifier.Part.< infix(_:_:)(v13, v14);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v4)
      {
        unint64_t v16 = (uint64_t *)(v95 + 8 * v12);
        while (1)
        {
          uint64_t v18 = *(v16 - 1);
          uint64_t v17 = *v16;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          BOOL v19 = static SectionSpecifier.Part.< infix(_:_:)(v17, v18);
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if ((v15 ^ v19)) {
            break;
          }
          ++v9;
          ++v16;
          if (v4 == v9)
          {
            Swift::Int v9 = v4;
            break;
          }
        }
        Swift::Int v12 = v101;
      }
      if (v15)
      {
        if (v9 < v12) {
          goto LABEL_135;
        }
        if (v12 < v9)
        {
          uint64_t v20 = (uint64_t *)(v94 + 8 * v9);
          Swift::Int v21 = v9;
          Swift::Int v22 = v12;
          uint64_t v23 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v22 != --v21)
            {
              if (!v10) {
                goto LABEL_140;
              }
              uint64_t v24 = *v23;
              *uint64_t v23 = *v20;
              *uint64_t v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v9 >= v4) {
      goto LABEL_48;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_132;
    }
    if (v9 - v12 >= v97) {
      goto LABEL_48;
    }
    if (__OFADD__(v12, v97)) {
      goto LABEL_136;
    }
    Swift::Int v25 = v12 + v97 >= v4 ? v4 : v12 + v97;
    if (v25 < v12) {
      break;
    }
    if (v9 != v25)
    {
      unsigned __int8 v26 = (uint64_t *)(v94 + 8 * v9);
      Swift::Int v99 = v25;
      do
      {
        uint64_t v27 = *(void *)(v10 + 8 * v9);
        Swift::Int v28 = v12;
        uint64_t v29 = v26;
        do
        {
          uint64_t v30 = *v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          BOOL v31 = static SectionSpecifier.Part.< infix(_:_:)(v27, v30);
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v31) {
            break;
          }
          if (!v10) {
            goto LABEL_138;
          }
          uint64_t v32 = *v29;
          uint64_t v27 = v29[1];
          *uint64_t v29 = v27;
          v29[1] = v32;
          --v29;
          ++v28;
        }
        while (v9 != v28);
        ++v9;
        ++v26;
        Swift::Int v12 = v101;
      }
      while (v9 != v99);
      Swift::Int v9 = v99;
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_127;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100432FEC(0, *((void *)v8 + 2) + 1, 1, v8);
      uint64_t v8 = (char *)result;
    }
    unint64_t v34 = *((void *)v8 + 2);
    unint64_t v33 = *((void *)v8 + 3);
    unint64_t v11 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      uint64_t result = (uint64_t)sub_100432FEC((char *)(v33 > 1), v34 + 1, 1, v8);
      uint64_t v8 = (char *)result;
    }
    *((void *)v8 + 2) = v11;
    uint64_t v102 = v8 + 32;
    uint64_t v35 = &v8[16 * v34 + 32];
    *(void *)uint64_t v35 = v12;
    *((void *)v35 + 1) = v9;
    if (v34)
    {
      uint64_t v36 = v8 + 32;
      while (1)
      {
        unint64_t v37 = v11 - 1;
        if (v11 >= 4)
        {
          char v42 = &v36[2 * v11];
          uint64_t v43 = *(v42 - 8);
          uint64_t v44 = *(v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_116;
          }
          uint64_t v47 = *(v42 - 6);
          uint64_t v46 = *(v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_117;
          }
          unint64_t v49 = v11 - 2;
          char v50 = &v36[2 * v11 - 4];
          uint64_t v52 = *v50;
          uint64_t v51 = v50[1];
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_118;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_120;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v36[2 * v37];
            uint64_t v74 = *v72;
            uint64_t v73 = v72[1];
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_126;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v66 = *((void *)v8 + 4);
            uint64_t v67 = *((void *)v8 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_80;
          }
          uint64_t v39 = *((void *)v8 + 4);
          uint64_t v38 = *((void *)v8 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_119;
        }
        unint64_t v49 = v11 - 2;
        long long v55 = &v36[2 * v11 - 4];
        uint64_t v57 = *v55;
        uint64_t v56 = v55[1];
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_121;
        }
        uint64_t v61 = &v36[2 * v37];
        uint64_t v63 = *v61;
        uint64_t v62 = v61[1];
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_123;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_125;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_86:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v60) {
          goto LABEL_122;
        }
        uint64_t v68 = &v36[2 * v37];
        uint64_t v70 = *v68;
        uint64_t v69 = v68[1];
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_124;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_88:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v11)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        uint64_t v77 = v10;
        if (!v10) {
          goto LABEL_139;
        }
        uint64_t v78 = v8;
        uint64_t v79 = v36;
        uint64_t v80 = &v36[2 * v76];
        uint64_t v81 = *v80;
        uint64_t v82 = &v79[2 * v37];
        uint64_t v83 = v82[1];
        uint64_t v84 = v77;
        uint64_t result = sub_100428310((uint64_t *)(v77 + 8 * *v80), (uint64_t *)(v77 + 8 * *v82), v77 + 8 * v83, __dst);
        if (v103) {
          goto LABEL_96;
        }
        if (v83 < v81) {
          goto LABEL_113;
        }
        if (v37 > *((void *)v78 + 2)) {
          goto LABEL_114;
        }
        *uint64_t v80 = v81;
        uint64_t v36 = v102;
        v102[2 * v76 + 1] = v83;
        unint64_t v85 = *((void *)v78 + 2);
        if (v37 >= v85) {
          goto LABEL_115;
        }
        uint64_t v8 = v78;
        unint64_t v11 = v85 - 1;
        uint64_t result = (uint64_t)memmove(v82, v82 + 2, 16 * (v85 - 1 - v37));
        *((void *)v78 + 2) = v85 - 1;
        uint64_t v10 = v84;
        if (v85 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v4 = v98;
    if (v9 >= v98)
    {
      uint64_t v2 = v103;
      goto LABEL_99;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
  return result;
}

uint64_t sub_100427BAC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = 0;
      uint64_t v84 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v86 = *(void *)(v84 + 16 * i + 8);
        uint64_t v87 = v83;
        do
        {
          uint64_t v88 = v84 + v87;
          if (v86 >= *(void *)(v84 + v87 + 8)) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v89 = *(void *)(v88 + 16);
          *(_OWORD *)(v88 + 16) = *(_OWORD *)v88;
          *(void *)uint64_t v88 = v89;
          *(void *)(v88 + 8) = v86;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v6 = result;
    uint64_t v97 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_10000566C(&qword_100714960);
      uint64_t result = sub_1005E2150();
      *(void *)(result + 16) = v7;
      Swift::Int v99 = (void *)result;
      uint64_t v103 = (char *)(result + 32);
LABEL_13:
      Swift::Int v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v98 = *a1 + 40;
      unint64_t v11 = (char *)_swiftEmptyArrayStorage;
      uint64_t v100 = v6;
      Swift::Int v101 = v3;
      uint64_t v102 = v10;
      while (1)
      {
        Swift::Int v13 = v9++;
        if (v9 < v3)
        {
          uint64_t v14 = *(void *)(v10 + 16 * v9 + 8);
          uint64_t v15 = *(void *)(v10 + 16 * v13 + 8);
          Swift::Int v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            unint64_t v16 = (uint64_t *)(v98 + 16 * v13);
            uint64_t v17 = v14;
            while (1)
            {
              uint64_t v19 = *v16;
              v16 += 2;
              uint64_t v18 = v19;
              if (v14 < v15 == v19 >= v17) {
                break;
              }
              ++v9;
              uint64_t v17 = v18;
              if (v3 == v9)
              {
                Swift::Int v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_138;
            }
            if (v13 < v9)
            {
              uint64_t v20 = 16 * v9;
              uint64_t v21 = 16 * v13;
              Swift::Int v22 = v9;
              Swift::Int v23 = v13;
              do
              {
                if (v23 != --v22)
                {
                  if (!v10) {
                    goto LABEL_144;
                  }
                  uint64_t v24 = v10 + v20;
                  uint64_t v25 = *(void *)(v10 + v21);
                  uint64_t v26 = *(void *)(v10 + v21 + 8);
                  *(_OWORD *)(v10 + v21) = *(_OWORD *)(v10 + v20 - 16);
                  *(void *)(v24 - 16) = v25;
                  *(void *)(v24 - 8) = v26;
                }
                ++v23;
                v20 -= 16;
                v21 += 16;
              }
              while (v23 < v22);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_135;
          }
          if (v9 - v13 < v6)
          {
            Swift::Int v27 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_139;
            }
            if (v27 >= v3) {
              Swift::Int v27 = v3;
            }
            if (v27 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v9 != v27)
            {
              Swift::Int v28 = (void *)(v10 + 16 * v9);
              do
              {
                uint64_t v29 = *(void *)(v10 + 16 * v9 + 8);
                Swift::Int v30 = v13;
                BOOL v31 = v28;
                do
                {
                  if (v29 >= *(v31 - 1)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_142;
                  }
                  uint64_t v32 = *v31;
                  *(_OWORD *)BOOL v31 = *((_OWORD *)v31 - 1);
                  *(v31 - 1) = v29;
                  *(v31 - 2) = v32;
                  v31 -= 2;
                  ++v30;
                }
                while (v9 != v30);
                ++v9;
                v28 += 2;
              }
              while (v9 != v27);
              Swift::Int v9 = v27;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100432FEC(0, *((void *)v11 + 2) + 1, 1, v11);
          unint64_t v11 = (char *)result;
        }
        unint64_t v34 = *((void *)v11 + 2);
        unint64_t v33 = *((void *)v11 + 3);
        unint64_t v12 = v34 + 1;
        uint64_t v10 = v102;
        if (v34 >= v33 >> 1)
        {
          uint64_t result = (uint64_t)sub_100432FEC((char *)(v33 > 1), v34 + 1, 1, v11);
          uint64_t v10 = v102;
          unint64_t v11 = (char *)result;
        }
        *((void *)v11 + 2) = v12;
        uint64_t v35 = v11 + 32;
        uint64_t v36 = &v11[16 * v34 + 32];
        *(void *)uint64_t v36 = v13;
        *((void *)v36 + 1) = v9;
        if (v34)
        {
          while (1)
          {
            unint64_t v37 = v12 - 1;
            if (v12 >= 4)
            {
              char v42 = &v35[2 * v12];
              uint64_t v43 = *(v42 - 8);
              uint64_t v44 = *(v42 - 7);
              BOOL v48 = __OFSUB__(v44, v43);
              uint64_t v45 = v44 - v43;
              if (v48) {
                goto LABEL_119;
              }
              uint64_t v47 = *(v42 - 6);
              uint64_t v46 = *(v42 - 5);
              BOOL v48 = __OFSUB__(v46, v47);
              uint64_t v40 = v46 - v47;
              char v41 = v48;
              if (v48) {
                goto LABEL_120;
              }
              unint64_t v49 = v12 - 2;
              char v50 = &v35[2 * v12 - 4];
              uint64_t v52 = *v50;
              uint64_t v51 = v50[1];
              BOOL v48 = __OFSUB__(v51, v52);
              uint64_t v53 = v51 - v52;
              if (v48) {
                goto LABEL_121;
              }
              BOOL v48 = __OFADD__(v40, v53);
              uint64_t v54 = v40 + v53;
              if (v48) {
                goto LABEL_123;
              }
              if (v54 >= v45)
              {
                uint64_t v72 = &v35[2 * v37];
                uint64_t v74 = *v72;
                uint64_t v73 = v72[1];
                BOOL v48 = __OFSUB__(v73, v74);
                uint64_t v75 = v73 - v74;
                if (v48) {
                  goto LABEL_129;
                }
                BOOL v65 = v40 < v75;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v66 = *((void *)v11 + 4);
                uint64_t v67 = *((void *)v11 + 5);
                BOOL v48 = __OFSUB__(v67, v66);
                uint64_t v59 = v67 - v66;
                char v60 = v48;
                goto LABEL_77;
              }
              uint64_t v39 = *((void *)v11 + 4);
              uint64_t v38 = *((void *)v11 + 5);
              BOOL v48 = __OFSUB__(v38, v39);
              uint64_t v40 = v38 - v39;
              char v41 = v48;
            }
            if (v41) {
              goto LABEL_122;
            }
            unint64_t v49 = v12 - 2;
            long long v55 = &v35[2 * v12 - 4];
            uint64_t v57 = *v55;
            uint64_t v56 = v55[1];
            BOOL v58 = __OFSUB__(v56, v57);
            uint64_t v59 = v56 - v57;
            char v60 = v58;
            if (v58) {
              goto LABEL_124;
            }
            uint64_t v61 = &v35[2 * v37];
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v48 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v48) {
              goto LABEL_126;
            }
            if (__OFADD__(v59, v64)) {
              goto LABEL_128;
            }
            if (v59 + v64 >= v40)
            {
              BOOL v65 = v40 < v64;
LABEL_83:
              if (v65) {
                unint64_t v37 = v49;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v60) {
              goto LABEL_125;
            }
            uint64_t v68 = &v35[2 * v37];
            uint64_t v70 = *v68;
            uint64_t v69 = v68[1];
            BOOL v48 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v48) {
              goto LABEL_127;
            }
            if (v71 < v59) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v76 = v37 - 1;
            if (v37 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10) {
              goto LABEL_143;
            }
            uint64_t v77 = v11;
            uint64_t v78 = &v35[2 * v76];
            uint64_t v79 = *v78;
            uint64_t v80 = &v35[2 * v37];
            uint64_t v81 = v80[1];
            uint64_t result = sub_1004285B0((char *)(v10 + 16 * *v78), (char *)(v10 + 16 * *v80), v10 + 16 * v81, v103);
            if (v1) {
              goto LABEL_93;
            }
            if (v81 < v79) {
              goto LABEL_116;
            }
            if (v37 > *((void *)v77 + 2)) {
              goto LABEL_117;
            }
            uint64_t *v78 = v79;
            v35[2 * v76 + 1] = v81;
            unint64_t v82 = *((void *)v77 + 2);
            if (v37 >= v82) {
              goto LABEL_118;
            }
            unint64_t v11 = v77;
            unint64_t v12 = v82 - 1;
            uint64_t result = (uint64_t)memmove(&v35[2 * v37], v80 + 2, 16 * (v82 - 1 - v37));
            *((void *)v77 + 2) = v82 - 1;
            uint64_t v10 = v102;
            if (v82 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v100;
        Swift::Int v3 = v101;
        if (v9 >= v101)
        {
          uint64_t v8 = v99;
          goto LABEL_102;
        }
      }
    }
    uint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v103 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      Swift::Int v99 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v12 = _swiftEmptyArrayStorage[2];
    unint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
    uint64_t result = (uint64_t)v11;
    Swift::Int v99 = v8;
    if (v12 >= 2)
    {
      uint64_t v90 = *v97;
      do
      {
        unint64_t v91 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_131;
        }
        if (!v90) {
          goto LABEL_145;
        }
        uint64_t v92 = result;
        uint64_t v93 = *(void *)(result + 32 + 16 * v91);
        uint64_t v94 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_1004285B0((char *)(v90 + 16 * v93), (char *)(v90 + 16 * *(void *)(result + 32 + 16 * (v12 - 1))), v90 + 16 * v94, v103);
        if (v1) {
          break;
        }
        if (v94 < v93) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1004330E8(v92);
          uint64_t v92 = result;
        }
        if (v91 >= *(void *)(v92 + 16)) {
          goto LABEL_133;
        }
        uint64_t v95 = (void *)(v92 + 32 + 16 * v91);
        void *v95 = v93;
        v95[1] = v94;
        unint64_t v96 = *(void *)(v92 + 16);
        if (v12 > v96) {
          goto LABEL_134;
        }
        memmove((void *)(v92 + 32 + 16 * (v12 - 1)), (const void *)(v92 + 32 + 16 * v12), 16 * (v96 - v12));
        uint64_t result = v92;
        *(void *)(v92 + 16) = v96 - 1;
        unint64_t v12 = v96 - 1;
      }
      while (v96 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    v99[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100428234(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v14 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v8 = *(void *)(v6 + 8 * v4);
    uint64_t v9 = v14;
    uint64_t v10 = (uint64_t *)v7;
    while (1)
    {
      uint64_t v11 = *v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v12 = static SectionSpecifier.Part.< infix(_:_:)(v8, v11);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v12)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v13 = *v10;
      uint64_t v8 = v10[1];
      uint64_t *v10 = v8;
      v10[1] = v13;
      --v10;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100428310(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 < v12 >> 3)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    if ((unint64_t)v6 >= a3 || v8 < 8)
    {
      uint64_t v6 = v7;
      uint64_t v14 = &v4[v10];
      goto LABEL_44;
    }
    uint64_t v14 = &v4[v10];
    while (1)
    {
      uint64_t v15 = *v6;
      uint64_t v16 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v17 = static SectionSpecifier.Part.< infix(_:_:)(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v17) {
        break;
      }
      uint64_t v18 = v6;
      BOOL v19 = v7 == v6++;
      if (!v19) {
        goto LABEL_17;
      }
LABEL_18:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
      {
        uint64_t v6 = v7;
        goto LABEL_44;
      }
    }
    uint64_t v18 = v4;
    BOOL v19 = v7 == v4++;
    if (v19) {
      goto LABEL_18;
    }
LABEL_17:
    *uint64_t v7 = *v18;
    goto LABEL_18;
  }
  if (__dst != a2 || &a2[v13] <= __dst) {
    memmove(__dst, a2, 8 * v13);
  }
  uint64_t v14 = &v4[v13];
  if (v7 < v6 && v11 >= 8)
  {
    uint64_t v20 = (uint64_t *)(a3 - 8);
    uint64_t v29 = v4;
    Swift::Int v28 = v7;
    while (1)
    {
      uint64_t v21 = v20 + 1;
      uint64_t v22 = *(v14 - 1);
      Swift::Int v23 = v6 - 1;
      uint64_t v24 = *(v6 - 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v25 = static SectionSpecifier.Part.< infix(_:_:)(v22, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25)
      {
        if (v21 != v6)
        {
          --v6;
LABEL_38:
          uint64_t v4 = v29;
LABEL_39:
          *uint64_t v20 = *v23;
          goto LABEL_40;
        }
        BOOL v26 = v20 >= v6--;
        uint64_t v4 = v29;
        if (v26) {
          goto LABEL_39;
        }
      }
      else
      {
        Swift::Int v23 = v14 - 1;
        if (v21 != v14)
        {
          --v14;
          goto LABEL_38;
        }
        BOOL v26 = v20 >= v14--;
        uint64_t v4 = v29;
        if (v26) {
          goto LABEL_39;
        }
      }
LABEL_40:
      if (v6 > v28)
      {
        --v20;
        if (v14 > v4) {
          continue;
        }
      }
      break;
    }
  }
LABEL_44:
  if (v6 != v4
    || v6 >= (uint64_t *)((char *)v4
                       + (((char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0)) & 0xFFFFFFFFFFFFFFF8)))
  {
    memmove(v6, v4, 8 * (v14 - v4));
  }
  return 1;
}

uint64_t sub_1004285B0(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_43;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      BOOL v19 = v18 + 16;
      if (*((void *)v14 - 1) >= *((void *)v6 - 1))
      {
        uint64_t v20 = v14 - 16;
        if (v19 != v14)
        {
          v14 -= 16;
          goto LABEL_40;
        }
        BOOL v21 = v18 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v20 = v6 - 16;
        if (v19 != v6)
        {
          v6 -= 16;
LABEL_40:
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
          goto LABEL_41;
        }
        BOOL v21 = v18 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_40;
        }
      }
LABEL_41:
      if (v6 > v7)
      {
        v18 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_43;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      if (*((void *)v6 + 1) >= *((void *)v4 + 1))
      {
        BOOL v17 = v4 + 16;
        uint64_t v16 = v4;
        uint64_t v15 = v6;
        if (v7 == v4)
        {
          v4 += 16;
          if (v7 < v17) {
            goto LABEL_20;
          }
        }
        else
        {
          v4 += 16;
        }
      }
      else
      {
        uint64_t v15 = v6 + 16;
        uint64_t v16 = v6;
        if (v7 == v6 && v7 < v15) {
          goto LABEL_20;
        }
      }
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
LABEL_20:
      v7 += 16;
      if (v4 < v14)
      {
        uint64_t v6 = v15;
        if ((unint64_t)v15 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_43:
  int64_t v22 = v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0);
  if (v6 != v4 || v6 >= &v4[v22 & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * (v22 >> 4));
  }
  return 1;
}

uint64_t sub_1004287D8(unint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = sub_1005E0BD0();
  if (a4) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = a3;
  }
  if (v12 <= v11) {
    uint64_t v12 = v11;
  }
  if (v12 <= a5) {
    uint64_t v13 = a5;
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13 > 4)
  {
    uint64_t v14 = sub_1005E0BE0();
    sub_10042950C(&v32, a2, (void *)(v14 + 16), v14 + 32);
    *a1 = v32;
    return v14;
  }
  if (v10 < 2)
  {
    uint64_t v14 = 0;
    *a1 = v10;
    return v14;
  }
  BOOL v31 = a1;
  uint64_t result = (uint64_t)sub_1004090DC(0, v10, 0, (char *)_swiftEmptyArrayStorage);
  uint64_t v16 = (char *)result;
  unint64_t v17 = 0;
  uint64_t v18 = a2 + 32;
  while (v17 != v10)
  {
    uint64_t v19 = *(void *)(v18 + 8 * v17);
    uint64_t v20 = *((void *)v16 + 2);
    if (v20)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = swift_bridgeObjectRetain();
      char v22 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v21, v19);
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_32;
      }
      if (v20 != 1)
      {
        uint64_t v23 = swift_bridgeObjectRetain();
        char v24 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v23, v19);
        uint64_t result = swift_bridgeObjectRelease();
        if (v24)
        {
LABEL_32:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v14 = 0;
          *BOOL v31 = v17;
          return v14;
        }
        if (v20 != 2)
        {
          uint64_t v25 = 6;
          while (1)
          {
            uint64_t v26 = v25 - 3;
            if (__OFADD__(v25 - 4, 1)) {
              break;
            }
            uint64_t v27 = swift_bridgeObjectRetain();
            char v28 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v27, v19);
            uint64_t result = swift_bridgeObjectRelease();
            if (v28) {
              goto LABEL_32;
            }
            ++v25;
            if (v26 == v20) {
              goto LABEL_24;
            }
          }
          __break(1u);
          break;
        }
      }
LABEL_24:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = sub_1004090DC(0, *((void *)v16 + 2) + 1, 1, v16);
    }
    unint64_t v30 = *((void *)v16 + 2);
    unint64_t v29 = *((void *)v16 + 3);
    if (v30 >= v29 >> 1) {
      uint64_t v16 = sub_1004090DC((char *)(v29 > 1), v30 + 1, 1, v16);
    }
    ++v17;
    *((void *)v16 + 2) = v30 + 1;
    *(void *)&v16[8 * v30 + 32] = v19;
    uint64_t result = swift_bridgeObjectRelease();
    if (v17 == v10)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = 0;
      *BOOL v31 = v10;
      return v14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100428A60(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v5 = a4 >> 1;
  if (a4 >> 1 == a3) {
    return result;
  }
  uint64_t v6 = v4;
  uint64_t v7 = a3;
  int64_t v8 = v4 + 1;
  uint64_t result = swift_unknownObjectRetain();
  uint64_t v38 = v5;
  while (v7 < v5)
  {
    uint64_t v12 = *(void *)(a2 + 8 * v7);
    uint64_t v14 = *v6;
    Swift::Int v13 = v6[1];
    uint64_t v15 = *(void *)(v13 + 16);
    if (*v6)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1004293A0(v12, v13 + 32, v15, (void *)(v14 + 16), v14 + 32);
      char v17 = v16;
      swift_release();
      if ((v17 & 1) == 0) {
        goto LABEL_7;
      }
    }
    else if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = swift_bridgeObjectRetain();
      char v19 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18, v12);
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_7;
      }
      if (v15 != 1)
      {
        uint64_t v26 = swift_bridgeObjectRetain();
        char v27 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v26, v12);
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_7;
        }
        if (v15 != 2)
        {
          uint64_t v28 = swift_bridgeObjectRetain();
          char v29 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v28, v12);
          swift_bridgeObjectRelease();
          if (v29) {
            goto LABEL_7;
          }
          if (v15 != 3)
          {
            uint64_t v30 = swift_bridgeObjectRetain();
            char v31 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v30, v12);
            swift_bridgeObjectRelease();
            if (v31) {
              goto LABEL_7;
            }
            if (v15 != 4)
            {
              uint64_t v32 = swift_bridgeObjectRetain();
              char v33 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v32, v12);
              swift_bridgeObjectRelease();
              if (v33) {
                goto LABEL_7;
              }
              uint64_t v34 = v15 - 5;
              Swift::Int v35 = v13 + 72;
              while (v34)
              {
                v35 += 8;
                uint64_t v36 = swift_bridgeObjectRetain();
                char v37 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v36, v12);
                swift_bridgeObjectRelease();
                --v34;
                if (v37) {
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *int64_t v8 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10040A798(0, *(void *)(v13 + 16) + 1, 1);
      Swift::Int v13 = *v8;
    }
    unint64_t v22 = *(void *)(v13 + 16);
    unint64_t v21 = *(void *)(v13 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_10040A798((char *)(v21 > 1), v22 + 1, 1);
      Swift::Int v13 = *v8;
    }
    *(void *)(v13 + 16) = v22 + 1;
    *(void *)(v13 + 8 * v22 + 32) = v12;
    v6[1] = v13;
    uint64_t v23 = *v6;
    if (*v6)
    {
      swift_beginAccess();
      if (sub_1005E0BA0() <= (uint64_t)v22)
      {
        uint64_t v25 = *(void *)(v23 + 24) & 0x3FLL;
        if (v22 > 0xE || v25) {
          goto LABEL_3;
        }
        swift_release();
        *uint64_t v6 = 0;
      }
      else
      {
        uint64_t result = swift_isUniquelyReferenced_native();
        uint64_t v24 = *v6;
        if ((result & 1) == 0)
        {
          if (!v24) {
            goto LABEL_48;
          }
          uint64_t v24 = sub_1005E0BC0();
          uint64_t result = swift_release();
          *uint64_t v6 = v24;
        }
        if (!v24) {
          goto LABEL_47;
        }
        sub_1005E0B60();
      }
    }
    else if (v22 > 0xE)
    {
      uint64_t v25 = 0;
LABEL_3:
      uint64_t v9 = sub_1005E0BD0();
      if (v25 <= v9) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v25;
      }
      uint64_t v11 = sub_100429204(v13, v10, 0, v25);
      swift_release();
      *uint64_t v6 = v11;
    }
LABEL_7:
    ++v7;
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v5 = v38;
    if (v7 == v38) {
      return swift_unknownObjectRelease();
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_100428DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 32;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!a2)
  {
    if (v5)
    {
      uint64_t v9 = swift_bridgeObjectRetain();
      char v10 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v9, a1);
      swift_bridgeObjectRelease();
      if (v10) {
        return 0;
      }
      if (v5 == 1) {
        return 0;
      }
      uint64_t v11 = swift_bridgeObjectRetain();
      char v12 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v11, a1);
      swift_bridgeObjectRelease();
      if (v12) {
        return 1;
      }
      if (v5 != 2)
      {
        uint64_t v14 = swift_bridgeObjectRetain();
        char v15 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v14, a1);
        swift_bridgeObjectRelease();
        if (v15) {
          return 2;
        }
        if (v5 != 3)
        {
          uint64_t v16 = swift_bridgeObjectRetain();
          char v17 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v16, a1);
          swift_bridgeObjectRelease();
          if (v17) {
            return 3;
          }
          uint64_t v18 = 0;
          while (v5 - 4 != v18)
          {
            uint64_t v19 = swift_bridgeObjectRetain();
            char v20 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v19, a1);
            swift_bridgeObjectRelease();
            ++v18;
            if (v20) {
              return v18 + 3;
            }
          }
          return 0;
        }
      }
    }
    return 0;
  }
  uint64_t v6 = (void *)(a2 + 16);
  uint64_t v7 = a2 + 32;
  swift_retain();
  Swift::Int v8 = sub_1004293A0(a1, v4, v5, v6, v7);
  swift_release();
  return v8;
}

uint64_t sub_100428FF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v6 = v1[1];
  uint64_t v4 = v1 + 1;
  uint64_t v5 = v6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v4 = v6;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10040A798(0, *(void *)(v5 + 16) + 1, 1);
    uint64_t v5 = *v4;
  }
  unint64_t v9 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v5 + 24);
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_10040A798((char *)(v8 > 1), v9 + 1, 1);
    uint64_t v5 = *v4;
  }
  *(void *)(v5 + 16) = v9 + 1;
  *(void *)(v5 + 8 * v9 + 32) = a1;
  v2[1] = v5;
  if (*v2)
  {
    swift_beginAccess();
    if (sub_1005E0BA0() > (uint64_t)v9)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v10 = *v2;
      if (!result)
      {
        if (!v10)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v10 = sub_1005E0BC0();
        uint64_t result = swift_release();
        uint64_t *v2 = v10;
      }
      if (v10) {
        return sub_1005E0B60();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if (v9 < 0xF)
  {
    return result;
  }
  return sub_100429160();
}

uint64_t sub_100429160()
{
  uint64_t v1 = *v0;
  Swift::Int v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24) & 0x3FLL;
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = *(void *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    uint64_t v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v6 = sub_1005E0BD0();
  if (v3 <= v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  uint64_t v5 = sub_100429204(v2, v7, 0, v3);
LABEL_11:
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_100429204(Swift::Int a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_1005E0BD0();
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = sub_1005E0BE0();
    sub_10042928C(a1, (void *)(v9 + 16), v9 + 32);
  }
  return v9;
}

Swift::Int sub_10042928C(Swift::Int result, void *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = 0;
    Swift::Int v7 = result + 32;
    while (1)
    {
      uint64_t v8 = *(void *)(v7 + 8 * v6);
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      SectionSpecifier.Part.hash(into:)((uint64_t)v18, v8);
      uint64_t result = sub_1005E3470();
      uint64_t v9 = 1 << *a2;
      BOOL v10 = __OFSUB__(v9, 1);
      uint64_t v11 = v9 - 1;
      if (v10) {
        break;
      }
      Swift::Int v12 = v11 & result;
      uint64_t v13 = sub_1005E0B40();
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      v18[0] = a2;
      v18[1] = a3;
      v18[2] = v12;
      uint64_t v19 = v13;
      uint64_t v20 = v15;
      uint64_t v21 = v17;
      char v22 = 0;
      while (v19)
        sub_1005E0B90();
      uint64_t result = sub_1005E0B80();
      if (++v6 == v3) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

Swift::Int sub_1004293A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  sub_1005E33F0();
  SectionSpecifier.Part.hash(into:)((uint64_t)&v27, a1);
  Swift::Int result = sub_1005E3470();
  uint64_t v9 = 1 << *a4;
  BOOL v10 = __OFSUB__(v9, 1);
  uint64_t v11 = v9 - 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    Swift::Int v12 = v11 & result;
    uint64_t v13 = sub_1005E0B40();
    *(void *)&long long v27 = a4;
    *((void *)&v27 + 1) = a5;
    *(void *)&long long v28 = v12;
    *((void *)&v28 + 1) = v13;
    *(void *)&long long v29 = v14;
    *((void *)&v29 + 1) = v15;
    char v30 = 0;
    uint64_t v16 = sub_1005E0B70();
    long long v23 = v27;
    long long v24 = v28;
    long long v25 = v29;
    char v26 = v30;
    if ((v17 & 1) == 0)
    {
      uint64_t v18 = swift_bridgeObjectRetain();
      char v19 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18, a1);
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        do
        {
          sub_1005E0B90();
          long long v31 = v23;
          long long v32 = v24;
          long long v33 = v25;
          char v34 = v26;
          uint64_t v16 = sub_1005E0B70();
          if (v20) {
            break;
          }
          uint64_t v21 = swift_bridgeObjectRetain();
          char v22 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v21, a1);
          swift_bridgeObjectRelease();
        }
        while ((v22 & 1) == 0);
      }
    }
    return v16;
  }
  return result;
}

unint64_t sub_10042950C(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    unint64_t v7 = 0;
    uint64_t v8 = a2 + 32;
    while (1)
    {
      uint64_t v9 = *(void *)(v8 + 8 * v7);
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      SectionSpecifier.Part.hash(into:)((uint64_t)v25, v9);
      unint64_t result = sub_1005E3470();
      uint64_t v11 = 1 << *a3;
      BOOL v12 = __OFSUB__(v11, 1);
      uint64_t v13 = v11 - 1;
      if (v12) {
        break;
      }
      unint64_t v14 = v13 & result;
      uint64_t v15 = sub_1005E0B40();
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      *(void *)&long long v26 = a3;
      *((void *)&v26 + 1) = a4;
      *(void *)&long long v27 = v14;
      *((void *)&v27 + 1) = v15;
      *(void *)&long long v28 = v17;
      *((void *)&v28 + 1) = v19;
      char v29 = 0;
      char v33 = 0;
      long long v30 = v26;
      long long v31 = v27;
      long long v32 = v28;
      while (1)
      {
        unint64_t result = sub_1005E0B70();
        if (v20) {
          break;
        }
        if (result >= v4)
        {
          __break(1u);
          goto LABEL_14;
        }
        uint64_t v21 = *(void *)(v8 + 8 * result);
        uint64_t v22 = *(void *)(v8 + 8 * v7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v23 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v21, v22);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23)
        {
          unint64_t result = 0;
          *a1 = v7;
          return result;
        }
        sub_1005E0B90();
        long long v30 = v26;
        long long v31 = v27;
        long long v32 = v28;
        char v33 = v29;
      }
      sub_1005E0B80();
      if (++v7 == v4) {
        goto LABEL_11;
      }
    }
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    *a1 = v4;
    return 1;
  }
  return result;
}

uint64_t sub_1004296BC(uint64_t result, char a2)
{
  if (result < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = v2;
  int64_t v5 = result;
  Swift::Int v8 = v2[1];
  uint64_t v6 = v2 + 1;
  Swift::Int v7 = v8;
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v8;
  if (isUniquelyReferenced_nonNull_native && (unint64_t)v5 <= *(void *)(v7 + 24) >> 1)
  {
    uint64_t v10 = *v3;
    if (*v3) {
      goto LABEL_5;
    }
  }
  else
  {
    if (*(void *)(v7 + 16) <= v5) {
      int64_t v15 = v5;
    }
    else {
      int64_t v15 = *(void *)(v7 + 16);
    }
    sub_10040A798(isUniquelyReferenced_nonNull_native, v15, 0);
    Swift::Int v7 = *v6;
    uint64_t v10 = *v3;
    if (*v3)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16) & 0x3FLL;
      uint64_t v12 = sub_1005E0BD0();
      uint64_t v13 = v12;
      if (a2)
      {
        uint64_t v14 = v12;
        if (v11 >= v12) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_beginAccess();
        uint64_t v14 = *(void *)(v10 + 24) & 0x3FLL;
        if (v11 >= v13) {
          goto LABEL_20;
        }
      }
LABEL_16:
      if (v14 <= v13) {
        uint64_t v17 = v13;
      }
      else {
        uint64_t v17 = v14;
      }
      goto LABEL_30;
    }
  }
  uint64_t v16 = sub_1005E0BD0();
  uint64_t v13 = v16;
  uint64_t v11 = 0;
  if (a2) {
    uint64_t v14 = v16;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v16 > 0) {
    goto LABEL_16;
  }
LABEL_20:
  if (v14 <= v13) {
    uint64_t v18 = v13;
  }
  else {
    uint64_t v18 = v14;
  }
  unint64_t result = sub_1005E0BD0();
  if (result <= v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = result;
  }
  if (v19 < v11)
  {
    if (v14 <= v19) {
      uint64_t v17 = v19;
    }
    else {
      uint64_t v17 = v14;
    }
LABEL_30:
    uint64_t v20 = sub_100429204(v7, v17, 0, v14);
    unint64_t result = swift_release();
    uint64_t *v3 = v20;
    return result;
  }
  if (!v10 || (unint64_t result = swift_isUniquelyReferenced_native(), result))
  {
    uint64_t v21 = *v3;
    if (*v3) {
      goto LABEL_35;
    }
LABEL_39:
    if (!v14) {
      return result;
    }
    __break(1u);
    goto LABEL_41;
  }
  unint64_t result = *v3;
  if (!*v3)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  uint64_t v21 = sub_1005E0BC0();
  unint64_t result = swift_release();
  uint64_t *v3 = v21;
  if (!v21) {
    goto LABEL_39;
  }
LABEL_35:
  unint64_t result = swift_beginAccess();
  if ((*(void *)(v21 + 24) & 0x3FLL) != v14) {
    *(void *)(v21 + 24) = *(void *)(v21 + 24) & 0xFFFFFFFFFFFFFFC0 | v14 & 0x3F;
  }
  return result;
}

uint64_t sub_1004298A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10000566C(&qword_100714950);
  uint64_t result = sub_1005E2C30();
  uint64_t v9 = (unsigned char *)result;
  long long v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    SectionSpecifier.Part.hash(into:)((uint64_t)v29, v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << v9[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*((void *)v9 + 6) + 8 * v22) = v18;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100429B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
LABEL_47:
    char v14 = 0;
    return v14 & 1;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = v2 - 1;
    uint64_t v4 = (uint64_t *)(a2 + 72);
    uint64_t v5 = a1 + 40;
    while (1)
    {
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(void *)v5;
      uint64_t v8 = *(void *)(v5 + 8);
      uint64_t v9 = *(unsigned __int8 *)(v5 + 16);
      uint64_t v10 = *(void *)(v5 + 32);
      uint64_t v12 = *(v4 - 5);
      uint64_t v11 = *(v4 - 4);
      uint64_t v23 = *(void *)(v5 + 24);
      uint64_t v24 = *(v4 - 3);
      int v13 = *((unsigned __int8 *)v4 - 16);
      uint64_t v21 = v3;
      uint64_t v22 = *(v4 - 1);
      uint64_t v19 = v4;
      uint64_t v20 = *v4;
      swift_bridgeObjectRetain();
      sub_10042C7D8(v7, v8, v9);
      swift_bridgeObjectRetain();
      if ((static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v6, v12) & 1) == 0) {
        break;
      }
      v5 += 48;
      switch(v9)
      {
        case 1:
          if (v13 == 1 && (v7 == v11 && v8 == v24 || (sub_1005E3290() & 1) != 0)) {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          uint64_t v15 = v7;
          uint64_t v16 = v8;
          unsigned __int8 v17 = 1;
          goto LABEL_45;
        case 2:
          if (v13 == 2 && (v7 == v11 && v8 == v24 || (sub_1005E3290() & 1) != 0)) {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          uint64_t v15 = v7;
          uint64_t v16 = v8;
          unsigned __int8 v17 = 2;
          goto LABEL_45;
        case 3:
          if (v13 == 3 && (v7 == v11 && v8 == v24 || (sub_1005E3290() & 1) != 0)) {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          uint64_t v15 = v7;
          uint64_t v16 = v8;
          unsigned __int8 v17 = 3;
          goto LABEL_45;
        case 4:
          if (v13 == 4 && (v7 == v11 && v8 == v24 || (sub_1005E3290() & 1) != 0)) {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          uint64_t v15 = v7;
          uint64_t v16 = v8;
          unsigned __int8 v17 = 4;
          goto LABEL_45;
        case 5:
          if (v7 | v8)
          {
            if (v13 != 5 || v11 != 1 || v24) {
              goto LABEL_54;
            }
          }
          else if (v13 != 5 || v24 | v11)
          {
LABEL_54:
            swift_bridgeObjectRelease();
            goto LABEL_46;
          }
LABEL_39:
          if (v23 != v22) {
            goto LABEL_44;
          }
          char v14 = sub_100440804(v10, v20);
          swift_bridgeObjectRelease();
          sub_10042C7F0(v7, v8, v9);
          swift_bridgeObjectRelease();
          uint64_t v3 = v21 - 1;
          if ((v14 & 1) == 0) {
            return v14 & 1;
          }
          uint64_t v4 = v19 + 6;
          if (!v21) {
            return v14 & 1;
          }
          break;
        default:
          if (!v13 && (v7 == v11 && v8 == v24 || (sub_1005E3290() & 1) != 0)) {
            goto LABEL_39;
          }
          swift_bridgeObjectRelease();
          uint64_t v15 = v7;
          uint64_t v16 = v8;
          unsigned __int8 v17 = 0;
          goto LABEL_45;
      }
    }
LABEL_44:
    swift_bridgeObjectRelease();
    uint64_t v15 = v7;
    uint64_t v16 = v8;
    unsigned __int8 v17 = v9;
LABEL_45:
    sub_10042C7F0(v15, v16, v17);
LABEL_46:
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_100429E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = a4 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v9 = 0;
  unint64_t v10 = 0;
  while (v10 == v5)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unint64_t v10 = v5;
    if (v6 == v9) {
      goto LABEL_16;
    }
LABEL_8:
    if (v6 == v9)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      return result;
    }
    uint64_t v12 = *(void *)(a2 + 8 * v9 + 32);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_16;
    }
    if (!v12) {
      goto LABEL_14;
    }
    char v13 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v11, v12);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    ++v9;
    if ((v13 & 1) == 0)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return 0;
    }
  }
  if (v10 >= v5) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)(v7 + 8 * v10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v6 != v9)
  {
    ++v10;
    goto LABEL_8;
  }
  if (v11)
  {
LABEL_14:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_17;
  }
  uint64_t v12 = 0;
LABEL_16:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v12)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

unint64_t sub_10042A038(int64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2[1] + 16);
  uint64_t v5 = *v2;
  if (!*v2)
  {
    if (v4) {
      return sub_10042A27C(a1);
    }
    goto LABEL_15;
  }
  swift_beginAccess();
  if ((*(void *)(v5 + 16) & 0x3FLL) == (*(void *)(v5 + 24) & 0x3FLL))
  {
    if (!v4) {
      goto LABEL_15;
    }
  }
  else if (v4 <= sub_1005E0BB0())
  {
LABEL_15:
    uint64_t v10 = sub_10042A27C(a1);
    sub_100429160();
    return v10;
  }
  unint64_t result = swift_isUniquelyReferenced_native();
  uint64_t v8 = *v2;
  if (!result)
  {
    if (!v8) {
      goto LABEL_20;
    }
    uint64_t v8 = sub_1005E0BC0();
    unint64_t result = swift_release();
    uint64_t *v2 = v8;
  }
  if (v8)
  {
    swift_retain();
    unint64_t result = sub_10042A948(a2, (void *)(v8 + 16), v8 + 32, (uint64_t)v2);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      uint64_t v9 = v2[1];
      swift_retain();
      sub_10042AB28(a1, a1 + 1, v9, (void *)(v8 + 16), v8 + 32);
      swift_release();
      swift_release();
      return sub_10042A27C(a1);
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10042A1AC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10043314C(v5);
    uint64_t v5 = result;
  }
  unint64_t v7 = *(void *)(v5 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v5 + 48 * a1;
    long long v10 = *(_OWORD *)(v9 + 32);
    v9 += 32;
    char v11 = *(unsigned char *)(v9 + 16);
    uint64_t v12 = *(void *)(v9 + 24);
    char v13 = *(unsigned char *)(v9 + 32);
    uint64_t v14 = *(void *)(v9 + 40);
    uint64_t result = (uint64_t)memmove((void *)v9, (const void *)(v9 + 48), 48 * (v7 - 1 - a1));
    *(void *)(v5 + 16) = v8;
    uint64_t *v2 = v5;
    *(_OWORD *)a2 = v10;
    *(unsigned char *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    *(unsigned char *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v14;
  }
  return result;
}

uint64_t sub_10042A27C(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100433138(v3);
    uint64_t v3 = result;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = v3 + 8 * a1;
    uint64_t v8 = *(void *)(v7 + 32);
    memmove((void *)(v7 + 32), (const void *)(v7 + 40), 8 * (v5 - 1 - a1));
    *(void *)(v3 + 16) = v6;
    uint64_t *v1 = v3;
    return v8;
  }
  return result;
}

unint64_t sub_10042A300(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = sub_100428DFC(a1, *v2, v2[1]);
  if (v5) {
    return v4;
  }
  sub_10042CEEC(*a2, a2[1], a2[2], a2[3], a2[4], a2[5]);
  uint64_t v7 = v2[2];
  unint64_t v6 = v2 + 2;
  unint64_t result = sub_10042A3F0(v4, *(void *)(v7 + 16) - 1);
  uint64_t v9 = *v6;
  if (*(void *)(*v6 + 16))
  {
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (unint64_t)sub_10043314C(v9);
      uint64_t v9 = result;
    }
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = v10 - 1;
      uint64_t v12 = v9 + 48 * v11;
      char v13 = *(unsigned char *)(v12 + 48);
      uint64_t v14 = *(void *)(v12 + 56);
      char v15 = *(unsigned char *)(v12 + 64);
      uint64_t v16 = *(void *)(v12 + 72);
      long long v17 = *(_OWORD *)(v12 + 32);
      *(void *)(v9 + 16) = v11;
      *unint64_t v6 = v9;
      *(_OWORD *)a2 = v17;
      *((unsigned char *)a2 + 16) = v13;
      a2[3] = v14;
      *((unsigned char *)a2 + 32) = v15;
      a2[5] = v16;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_10042A3F0(unint64_t result, unint64_t a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = *v2;
      unint64_t v5 = *(void *)(*v2 + 16);
      if (v5 > result)
      {
        if (v5 > a2)
        {
          uint64_t v7 = v4 + 32 + 48 * result;
          unsigned __int8 v8 = *(unsigned char *)(v7 + 16);
          uint64_t v28 = *(void *)(v7 + 24);
          char v27 = *(unsigned char *)(v7 + 32);
          uint64_t v9 = *(void *)(v7 + 40);
          uint64_t v10 = v4 + 32 + 48 * a2;
          uint64_t v11 = *(void *)v10;
          uint64_t v12 = *(void *)(v10 + 8);
          unsigned __int8 v13 = *(unsigned char *)(v10 + 16);
          uint64_t v30 = *(void *)(v10 + 24);
          char v29 = *(unsigned char *)(v10 + 32);
          uint64_t v14 = *(void *)(v10 + 40);
          uint64_t v25 = *(void *)(v7 + 8);
          uint64_t v26 = *(void *)v7;
          sub_10042C7D8(*(void *)v7, v25, v8);
          swift_bridgeObjectRetain();
          sub_10042C7D8(v11, v12, v13);
          swift_bridgeObjectRetain();
          unint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            unint64_t result = (unint64_t)sub_10043314C(v4);
            uint64_t v4 = result;
          }
          if (*(void *)(v4 + 16) > v3)
          {
            unsigned __int8 v23 = v8;
            uint64_t v24 = v2;
            uint64_t v15 = v4 + 32 + 48 * v3;
            uint64_t v17 = *(void *)v15;
            uint64_t v16 = *(void *)(v15 + 8);
            *(void *)uint64_t v15 = v11;
            *(void *)(v15 + 8) = v12;
            unsigned __int8 v18 = *(unsigned char *)(v15 + 16);
            *(unsigned char *)(v15 + 16) = v13;
            *(void *)(v15 + 24) = v30;
            *(unsigned char *)(v15 + 32) = v29;
            *(void *)(v15 + 40) = v14;
            swift_retain();
            sub_10042C7F0(v17, v16, v18);
            swift_release();
            unint64_t result = swift_bridgeObjectRelease();
            if (*(void *)(v4 + 16) > a2)
            {
              uint64_t v19 = v4 + 32 + 48 * a2;
              uint64_t v20 = *(void *)v19;
              uint64_t v21 = *(void *)(v19 + 8);
              *(void *)uint64_t v19 = v26;
              *(void *)(v19 + 8) = v25;
              unsigned __int8 v22 = *(unsigned char *)(v19 + 16);
              *(unsigned char *)(v19 + 16) = v23;
              *(void *)(v19 + 24) = v28;
              *(unsigned char *)(v19 + 32) = v27;
              *(void *)(v19 + 40) = v9;
              swift_retain();
              sub_10042C7F0(v20, v21, v22);
              swift_release();
              unint64_t result = swift_bridgeObjectRelease();
              *uint64_t v24 = v4;
              return result;
            }
LABEL_15:
            __break(1u);
            return result;
          }
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_10042A5FC(uint64_t result, int64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v9 = *a5;
  uint64_t v8 = a5[1];
  uint64_t v10 = a5[2];
  uint64_t v11 = a5[3];
  uint64_t v13 = a5[4];
  uint64_t v12 = a5[5];
  if (a3)
  {
    if (v12)
    {
      uint64_t v20 = result;
      sub_10042C7D8(*a5, a5[1], a5[2]);
      swift_bridgeObjectRetain();
      sub_100428FF0(v20);
      uint64_t v23 = *(void *)(v6 + 16);
      uint64_t v21 = (uint64_t *)(v6 + 16);
      uint64_t v22 = v23;
      sub_10042C7D8(v9, v8, v10);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v21 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10040A7D8(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = *v21;
      }
      unint64_t v26 = *(void *)(v22 + 16);
      unint64_t v25 = *(void *)(v22 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_10040A7D8((char *)(v25 > 1), v26 + 1, 1);
        uint64_t v22 = *v21;
      }
      *(void *)(v22 + 16) = v26 + 1;
      uint64_t v27 = v22 + 48 * v26;
      *(void *)(v27 + 32) = v9;
      *(void *)(v27 + 40) = v8;
      *(unsigned char *)(v27 + 48) = v10;
      *(void *)(v27 + 56) = v11;
      *(unsigned char *)(v27 + 64) = v13 & 1;
      *(void *)(v27 + 72) = v12;
      sub_10042C7F0(v9, v8, v10);
      unint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = v22;
    }
  }
  else if (v12)
  {
    unint64_t v37 = a2;
    uint64_t v14 = (uint64_t *)(v5 + 16);
    uint64_t v15 = *(void *)(v5 + 16);
    sub_10042CF2C(v9, v8, v10, v11, v13, v12);
    sub_10042C7D8(v9, v8, v10);
    swift_bridgeObjectRetain();
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v14 = v15;
    if ((v16 & 1) == 0)
    {
      sub_10040A7D8(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = *v14;
    }
    unint64_t v18 = *(void *)(v15 + 16);
    unint64_t v17 = *(void *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_10040A7D8((char *)(v17 > 1), v18 + 1, 1);
      uint64_t v15 = *v14;
    }
    *(void *)(v15 + 16) = v18 + 1;
    uint64_t v19 = v15 + 48 * v18;
    *(void *)(v19 + 32) = v9;
    *(void *)(v19 + 40) = v8;
    *(unsigned char *)(v19 + 48) = v10;
    *(void *)(v19 + 56) = v11;
    *(unsigned char *)(v19 + 64) = v13 & 1;
    *(void *)(v19 + 72) = v12;
    uint64_t *v14 = v15;
    sub_10042A3F0(v37, *(void *)(v15 + 16) - 1);
    sub_10042C7F0(v9, v8, v10);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = (uint64_t *)(v5 + 16);
    if (*(void *)(*(void *)(v6 + 16) + 16) > a2)
    {
      int64_t v29 = a2;
      sub_10042A1AC(a2, (uint64_t)v38);
      sub_10042C9B0(v38, (uint64_t)v41);
      uint64_t v40 = *((void *)&v39 + 1);
      uint64_t v30 = *v28;
      sub_10042CA68((uint64_t)v41);
      sub_10002292C((uint64_t)&v40);
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v28 = v30;
      if ((v31 & 1) == 0)
      {
        sub_10040A7D8(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = *v28;
      }
      unint64_t v33 = *(void *)(v30 + 16);
      unint64_t v32 = *(void *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_10040A7D8((char *)(v32 > 1), v33 + 1, 1);
        uint64_t v30 = *v28;
      }
      *(void *)(v30 + 16) = v33 + 1;
      char v34 = (_OWORD *)(v30 + 48 * v33);
      long long v35 = v38[0];
      long long v36 = v39;
      v34[3] = v38[1];
      v34[4] = v36;
      v34[2] = v35;
      sub_10042C9C8((uint64_t)v41);
      sub_10001D550((uint64_t)&v40);
      *uint64_t v28 = v30;
      a2 = v29;
    }
    sub_10042A038(a2, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10042A948(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1;
  *(void *)&long long v25 = a2;
  *((void *)&v25 + 1) = a3;
  uint64_t v26 = a1;
  uint64_t v27 = sub_1005E0B40();
  uint64_t v28 = v7;
  uint64_t v29 = v8;
  char v30 = 0;
  sub_1005E0B90();
  uint64_t v9 = v27;
  if (v27)
  {
    char v10 = v30;
    uint64_t v11 = v28;
    uint64_t v12 = v29;
    uint64_t v13 = v26;
    uint64_t v14 = sub_1005E0B50();
    long long v15 = v25;
    uint64_t v16 = v14;
    do
    {
      long long v31 = v15;
      uint64_t v32 = v13;
      uint64_t v33 = v9;
      uint64_t v34 = v11;
      uint64_t v35 = v12;
      char v36 = v10 & 1;
      unint64_t result = sub_1005E0B70();
      if (v18)
      {
LABEL_20:
        __break(1u);
        return result;
      }
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v19 = *(void *)(a4 + 8);
      if (result >= *(void *)(v19 + 16)) {
        goto LABEL_18;
      }
      uint64_t v20 = *(void *)(v19 + 8 * result + 32);
      sub_1005E33F0();
      swift_bridgeObjectRetain();
      SectionSpecifier.Part.hash(into:)((uint64_t)v24, v20);
      Swift::Int v21 = sub_1005E3470();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v22 = 1 << *a2;
      if (__OFSUB__(v22, 1)) {
        goto LABEL_19;
      }
      uint64_t v23 = (v22 - 1) & v21;
      if (v6 >= v16)
      {
        if (v23 < v16) {
          goto LABEL_3;
        }
      }
      else if (v23 >= v16)
      {
        goto LABEL_13;
      }
      if (v6 >= v23)
      {
LABEL_13:
        sub_1005E0B70();
        sub_1005E0B60();
        uint64_t v6 = v13;
      }
LABEL_3:
      sub_1005E0B90();
      long long v15 = v25;
      uint64_t v13 = v26;
      uint64_t v9 = v27;
      uint64_t v11 = v28;
      uint64_t v12 = v29;
      char v10 = v30;
    }
    while (v27);
  }
  return sub_1005E0B60();
}

void sub_10042AB28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v6 >= 1)
  {
    unint64_t v11 = *(void *)(a3 + 16);
    uint64_t v12 = v11 - v6;
    if ((uint64_t)v11 < v6) {
      ++v12;
    }
    if (a1 < v12 >> 1)
    {
      if (sub_1005E0BA0() / 3 > a1)
      {
        if (a1 < 0)
        {
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
        if (v11 < a1)
        {
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        if (a1)
        {
          swift_retain();
          uint64_t v13 = 0;
          while (1)
          {
            uint64_t v14 = *(void *)(a3 + 32 + 8 * v13);
            sub_1005E33F0();
            swift_bridgeObjectRetain();
            SectionSpecifier.Part.hash(into:)((uint64_t)&v53, v14);
            Swift::Int v15 = sub_1005E3470();
            uint64_t v16 = 1 << *a4;
            BOOL v17 = __OFSUB__(v16, 1);
            uint64_t v18 = v16 - 1;
            if (v17) {
              break;
            }
            Swift::Int v19 = v18 & v15;
            uint64_t v20 = sub_1005E0B40();
            *(void *)&long long v53 = a4;
            *((void *)&v53 + 1) = a5;
            Swift::Int v54 = v19;
            *(void *)&long long v55 = v20;
            *((void *)&v55 + 1) = v21;
            uint64_t v56 = v22;
            char v57 = 0;
            if (v20)
            {
              char v23 = 0;
              uint64_t v24 = a4;
              uint64_t v25 = a5;
              do
              {
                *(void *)&long long v58 = v24;
                *((void *)&v58 + 1) = v25;
                Swift::Int v59 = v19;
                *(void *)&long long v60 = v20;
                *((void *)&v60 + 1) = v21;
                uint64_t v61 = v22;
                char v62 = v23 & 1;
                uint64_t v26 = sub_1005E0B70();
                if ((v27 & 1) == 0 && v26 == v13) {
                  break;
                }
                sub_1005E0B90();
                uint64_t v25 = *((void *)&v53 + 1);
                uint64_t v24 = (void *)v53;
                Swift::Int v19 = v54;
                uint64_t v21 = *((void *)&v55 + 1);
                uint64_t v20 = v55;
                uint64_t v22 = v56;
                char v23 = v57;
              }
              while ((void)v55);
            }
            if (__OFADD__(v13, v6)) {
              goto LABEL_58;
            }
            ++v13;
            sub_1005E0B80();
            swift_bridgeObjectRelease();
            if (v13 == a1)
            {
              swift_release();
              goto LABEL_20;
            }
          }
          __break(1u);
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        goto LABEL_20;
      }
      *(void *)&long long v58 = a4;
      *((void *)&v58 + 1) = a5;
      Swift::Int v59 = 0;
      *(void *)&long long v60 = sub_1005E0B40();
      *((void *)&v60 + 1) = v32;
      uint64_t v61 = v33;
      char v62 = 0;
      long long v53 = v58;
      Swift::Int v54 = 0;
      long long v55 = v60;
      uint64_t v56 = v61;
      char v57 = v62;
      uint64_t v34 = sub_1005E0B70();
      if ((v35 & 1) != 0 || v34 >= a1)
      {
LABEL_32:
        sub_1005E0B90();
LABEL_20:
        uint64_t v28 = a4[1];
        if (__OFSUB__(v28 >> 6, v6))
        {
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
        uint64_t v29 = 1 << *a4;
        BOOL v17 = __OFSUB__(v29, 1);
        uint64_t v30 = v29 - 1;
        if (v17)
        {
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        uint64_t v31 = (v30 & (((v28 >> 6) - v6) >> 63)) + (v28 >> 6) - v6;
        if (v31 < v30) {
          uint64_t v30 = 0;
        }
        a4[1] = a4[1] & 0x3FLL | ((v31 - v30) << 6);
        return;
      }
      if (!__OFADD__(v34, v6))
      {
        sub_1005E0B80();
        goto LABEL_32;
      }
      __break(1u);
LABEL_38:
      *(void *)&long long v58 = a4;
      *((void *)&v58 + 1) = a5;
      Swift::Int v59 = 0;
      *(void *)&long long v60 = sub_1005E0B40();
      *((void *)&v60 + 1) = v36;
      uint64_t v61 = v37;
      char v62 = 0;
      long long v53 = v58;
      Swift::Int v54 = 0;
      long long v55 = v60;
      uint64_t v56 = v61;
      char v57 = v62;
      uint64_t v38 = sub_1005E0B70();
      if ((v39 & 1) == 0 && v38 >= v5)
      {
        if (__OFSUB__(v38, v6))
        {
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        sub_1005E0B80();
      }
      sub_1005E0B90();
      return;
    }
    uint64_t v5 = a2;
    if (__OFSUB__(v11, a2))
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if ((uint64_t)(v11 - a2) >= sub_1005E0BA0() / 3) {
      goto LABEL_38;
    }
    if ((uint64_t)v11 < v5)
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if (v5 < 0)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    if (v11 != v5)
    {
      if (v11 <= v5)
      {
LABEL_70:
        __break(1u);
        return;
      }
      swift_retain();
      while (1)
      {
        uint64_t v40 = *(void *)(a3 + 32 + 8 * v5);
        sub_1005E33F0();
        swift_bridgeObjectRetain();
        SectionSpecifier.Part.hash(into:)((uint64_t)&v53, v40);
        Swift::Int v41 = sub_1005E3470();
        uint64_t v42 = 1 << *a4;
        BOOL v17 = __OFSUB__(v42, 1);
        uint64_t v43 = v42 - 1;
        if (v17) {
          goto LABEL_60;
        }
        Swift::Int v44 = v43 & v41;
        uint64_t v45 = sub_1005E0B40();
        *(void *)&long long v53 = a4;
        *((void *)&v53 + 1) = a5;
        Swift::Int v54 = v44;
        *(void *)&long long v55 = v45;
        *((void *)&v55 + 1) = v46;
        uint64_t v56 = v47;
        char v57 = 0;
        if (v45)
        {
          char v48 = 0;
          unint64_t v49 = a4;
          uint64_t v50 = a5;
          do
          {
            *(void *)&long long v58 = v49;
            *((void *)&v58 + 1) = v50;
            Swift::Int v59 = v44;
            *(void *)&long long v60 = v45;
            *((void *)&v60 + 1) = v46;
            uint64_t v61 = v47;
            char v62 = v48 & 1;
            uint64_t v51 = sub_1005E0B70();
            if ((v52 & 1) == 0 && v51 == v5) {
              break;
            }
            sub_1005E0B90();
            uint64_t v50 = *((void *)&v53 + 1);
            unint64_t v49 = (void *)v53;
            Swift::Int v44 = v54;
            uint64_t v46 = *((void *)&v55 + 1);
            uint64_t v45 = v55;
            uint64_t v47 = v56;
            char v48 = v57;
          }
          while ((void)v55);
        }
        if (__OFSUB__(v5, v6)) {
          goto LABEL_61;
        }
        ++v5;
        sub_1005E0B80();
        swift_bridgeObjectRelease();
        if (v5 == v11)
        {
          swift_release();
          return;
        }
      }
    }
  }
}

void *sub_10042AFC8(void *a1)
{
  return sub_1004091E0(0, a1[2], 0, a1);
}

uint64_t sub_10042AFDC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_31;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_22;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a6 != 2) {
        goto LABEL_31;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_22;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a6 != 3) {
        goto LABEL_31;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_22;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a6 != 4) {
        goto LABEL_31;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_22;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a1 | a2)
      {
        if (a6 != 5 || a4 != 1 || a5) {
          goto LABEL_31;
        }
        uint64_t result = 1;
      }
      else
      {
        if (a6 != 5 || a5 | a4) {
          goto LABEL_31;
        }
        uint64_t result = 1;
      }
      break;
    default:
      if (a6)
      {
LABEL_31:
        uint64_t result = 0;
      }
      else if (a1 == a4 && a2 == a5)
      {
        uint64_t result = 1;
      }
      else
      {
LABEL_22:
        uint64_t result = sub_1005E3290();
      }
      break;
  }
  return result;
}

uint64_t sub_10042B124(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = 0;
  int64_t v8 = 0;
  uint64_t v9 = a3 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
LABEL_5:
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v8 << 6);
LABEL_21:
    uint64_t v20 = *(void *)(*(void *)(a3 + 48) + 8 * v16);
    unint64_t v21 = *(void *)(a4 + 16);
    if (v21 >= *(void *)(v20 + 16))
    {
LABEL_4:
      *(unint64_t *)((char *)v6 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v7++, 1)) {
        goto LABEL_29;
      }
    }
    else if (v21)
    {
      uint64_t v22 = (uint64_t *)(v20 + 32);
      char v23 = (uint64_t *)(a4 + 32);
      while (1)
      {
        uint64_t v24 = *v23++;
        uint64_t result = v24;
        uint64_t v25 = *v22++;
        if (v25 != result) {
          goto LABEL_4;
        }
        if (!--v21) {
          goto LABEL_5;
        }
      }
    }
  }
  int64_t v17 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v17 >= v13) {
      goto LABEL_27;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v8;
    if (!v18)
    {
      int64_t v8 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_27;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v8);
      if (!v18)
      {
        int64_t v8 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_27;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v8);
        if (!v18)
        {
          int64_t v19 = v17 + 3;
          if (v19 >= v13)
          {
LABEL_27:
            swift_retain();
            return sub_1004298A0(v6, a2, v7, a3);
          }
          unint64_t v18 = *(void *)(v9 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v8 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_30;
              }
              if (v8 >= v13) {
                goto LABEL_27;
              }
              unint64_t v18 = *(void *)(v9 + 8 * v8);
              ++v19;
              if (v18) {
                goto LABEL_20;
              }
            }
          }
          int64_t v8 = v19;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
    goto LABEL_21;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10042B2D0(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (swift_stdlib_isStackAllocationSafe() & 1) != 0)
  {
    __chkstk_darwin();
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10042B124((uint64_t)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10042B124((uint64_t)v10, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v9;
}

uint64_t sub_10042B49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5;
  uint64_t v8 = a2;
  uint64_t v40 = a2 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a2 + 56);
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v44 = a4 + 32;
  uint64_t v41 = a3 + 32;
  uint64_t v42 = (void *)(a3 + 16);
  uint64_t v39 = a5 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v38 = v5;
  do
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (i << 6);
    }
    else
    {
      int64_t v19 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_52;
      }
      if (v19 >= v43) {
        goto LABEL_49;
      }
      unint64_t v20 = *(void *)(v40 + 8 * v19);
      ++i;
      if (!v20)
      {
        int64_t i = v19 + 1;
        if (v19 + 1 >= v43) {
          goto LABEL_49;
        }
        unint64_t v20 = *(void *)(v40 + 8 * i);
        if (!v20)
        {
          int64_t i = v19 + 2;
          if (v19 + 2 >= v43) {
            goto LABEL_49;
          }
          unint64_t v20 = *(void *)(v40 + 8 * i);
          if (!v20)
          {
            int64_t i = v19 + 3;
            if (v19 + 3 >= v43) {
              goto LABEL_49;
            }
            unint64_t v20 = *(void *)(v40 + 8 * i);
            if (!v20)
            {
              int64_t v21 = v19 + 4;
              if (v21 >= v43) {
                goto LABEL_49;
              }
              unint64_t v20 = *(void *)(v40 + 8 * v21);
              for (int64_t i = v21; !v20; ++v21)
              {
                int64_t i = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_53;
                }
                if (i >= v43) {
                  goto LABEL_49;
                }
                unint64_t v20 = *(void *)(v40 + 8 * i);
              }
            }
          }
        }
      }
      unint64_t v12 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (i << 6);
    }
    uint64_t v22 = *(void *)(*(void *)(v8 + 48) + 8 * v18);
    uint64_t v15 = *(void *)(a4 + 16);
    if (a3)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v23 = sub_1004293A0(v22, v44, v15, v42, v41);
      char v25 = v24;
      uint64_t result = swift_release();
      if (v25)
      {
        uint64_t v15 = 0;
        goto LABEL_5;
      }
      if ((v23 & 0x8000000000000000) != 0)
      {
LABEL_48:
        __break(1u);
LABEL_49:
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v15)
      {
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
      uint64_t v26 = v8;
      swift_bridgeObjectRetain();
      uint64_t v27 = swift_bridgeObjectRetain();
      char v28 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v27, v22);
      uint64_t result = swift_bridgeObjectRelease();
      if (v28)
      {
        unint64_t v23 = 0;
      }
      else
      {
        if (v15 == 1) {
          goto LABEL_38;
        }
        uint64_t v29 = swift_bridgeObjectRetain();
        char v30 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v29, v22);
        uint64_t result = swift_bridgeObjectRelease();
        if (v30)
        {
          unint64_t v23 = 1;
        }
        else
        {
          if (v15 == 2) {
            goto LABEL_38;
          }
          uint64_t v31 = swift_bridgeObjectRetain();
          char v32 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v31, v22);
          uint64_t result = swift_bridgeObjectRelease();
          if (v32)
          {
            unint64_t v23 = 2;
          }
          else
          {
            if (v15 == 3) {
              goto LABEL_38;
            }
            uint64_t v33 = swift_bridgeObjectRetain();
            char v34 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v33, v22);
            uint64_t result = swift_bridgeObjectRelease();
            if ((v34 & 1) == 0)
            {
              uint64_t v35 = 0;
              while (v15 - 4 != v35)
              {
                uint64_t v36 = swift_bridgeObjectRetain();
                char v37 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v36, v22);
                uint64_t result = swift_bridgeObjectRelease();
                ++v35;
                if (v37)
                {
                  unint64_t v23 = v35 + 3;
                  uint64_t v8 = v26;
                  uint64_t v5 = v38;
                  if ((v23 & 0x8000000000000000) == 0) {
                    goto LABEL_42;
                  }
                  goto LABEL_48;
                }
              }
LABEL_38:
              uint64_t v15 = 0;
              uint64_t v8 = v26;
              uint64_t v5 = v38;
              goto LABEL_5;
            }
            unint64_t v23 = 3;
          }
        }
      }
      uint64_t v8 = v26;
      uint64_t v5 = v38;
    }
LABEL_42:
    if (v23 >= *(void *)(v5 + 16)) {
      goto LABEL_51;
    }
    uint64_t v15 = *(void *)(v39 + 48 * v23 + 32);
LABEL_5:
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v16 = __OFADD__(a1, v15);
    a1 += v15;
  }
  while (!v16);
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_10042B858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  char v34 = _swiftEmptyArrayStorage;
  sub_10040A7F8(0, v8, 0);
  uint64_t v9 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000D38CC(a1);
  uint64_t v13 = result;
  char v15 = v14 & 1;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v12) {
      goto LABEL_14;
    }
    char v29 = v15;
    uint64_t v30 = v12;
    uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8 * v13);
    swift_bridgeObjectRetain_n();
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = v7;
    uint64_t v31 = v9;
    uint64_t v19 = sub_10042B2D0(v17, v16);
    swift_bridgeObjectRelease();
    uint64_t v33 = v19;
    swift_bridgeObjectRetain();
    sub_100409628(&v32, v16);
    swift_bridgeObjectRelease();
    uint64_t v20 = v33;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v21 = sub_10042B49C(0, v20, a4, a5, a6);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v9 = v31;
    swift_release();
    swift_release();
    char v34 = v31;
    unint64_t v23 = v31[2];
    unint64_t v22 = v31[3];
    if (v23 >= v22 >> 1)
    {
      sub_10040A7F8((char *)(v22 > 1), v23 + 1, 1);
      uint64_t v9 = v34;
    }
    void v9[2] = v23 + 1;
    char v24 = &v9[2 * v23];
    v24[4] = v20;
    v24[5] = v21;
    uint64_t result = sub_1000D3970(v13, v30, v29 & 1, a1);
    uint64_t v13 = result;
    char v15 = v25 & 1;
    --v8;
    uint64_t v7 = v18;
    if (!v8)
    {
      sub_100060FF0(result, v12, v15);
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_10042BA90(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1004296BC(v2, 0);
  sub_10040A7D8(0, v2, 0);
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)(a1 + 80);
  while (1)
  {
    uint64_t v5 = v3;
    uint64_t v6 = *(v4 - 6);
    uint64_t v7 = *(v4 - 5);
    uint64_t v8 = *(v4 - 4);
    unsigned __int8 v9 = *((unsigned char *)v4 - 24);
    uint64_t v17 = *(v4 - 2);
    uint64_t v18 = v2;
    uint64_t v10 = *v4;
    char v16 = *((unsigned char *)v4 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10042C7D8(v7, v8, v9);
    uint64_t result = sub_100428DFC(v6, 0, (uint64_t)_swiftEmptyArrayStorage);
    if ((v12 & 1) == 0) {
      break;
    }
    sub_100428FF0(v6);
    sub_10042C7D8(v7, v8, v9);
    unint64_t v14 = v3[2];
    unint64_t v13 = v3[3];
    swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      sub_10040A7D8((char *)(v13 > 1), v14 + 1, 1);
    }
    _OWORD v5[2] = v14 + 1;
    char v15 = &v5[6 * v14];
    v15[4] = v7;
    v15[5] = v8;
    *((unsigned char *)v15 + 48) = v9;
    v15[7] = v17;
    *((unsigned char *)v15 + 64) = v16;
    v15[9] = v10;
    sub_10042C7F0(v7, v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 += 7;
    uint64_t v2 = v18 - 1;
    unint64_t v3 = v5;
    if (v18 == 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10042BC54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(long long *__return_ptr, uint64_t, long long *))
{
  int64_t v6 = *(void *)(a3 + 16);
  uint64_t v36 = _swiftEmptyArrayStorage;
  sub_10040A7B8(0, v6, 0);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    unsigned __int8 v9 = (uint64_t *)(a2 + 32);
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    uint64_t v11 = (void *)(a3 + 72);
    while (v8)
    {
      uint64_t v12 = *v9;
      char v29 = v7;
      uint64_t v14 = *(v11 - 4);
      uint64_t v15 = *(v11 - 2);
      uint64_t v16 = *((unsigned __int8 *)v11 - 8);
      uint64_t v17 = *v11;
      unsigned __int8 v18 = *((unsigned char *)v11 - 24);
      *(void *)&long long v37 = *(v11 - 5);
      uint64_t v13 = v37;
      *((void *)&v37 + 1) = v14;
      uint64_t v38 = v18;
      uint64_t v39 = v15;
      uint64_t v40 = v16;
      uint64_t v41 = v17;
      sub_10042C9B0(&v37, (uint64_t)v42);
      uint64_t v43 = v41;
      swift_bridgeObjectRetain();
      sub_10042C7D8(v13, v14, v18);
      swift_bridgeObjectRetain();
      a4(&v30, v12, &v37);
      uint64_t v7 = v29;
      long long v28 = v30;
      uint64_t v19 = v32;
      char v20 = v33;
      uint64_t v26 = v34;
      uint64_t v27 = v31;
      uint64_t v25 = v35;
      swift_bridgeObjectRelease();
      sub_10042C9C8((uint64_t)v42);
      uint64_t result = sub_10001D550((uint64_t)&v43);
      uint64_t v36 = v29;
      unint64_t v22 = v29[2];
      unint64_t v21 = v29[3];
      if (v22 >= v21 >> 1)
      {
        uint64_t result = (uint64_t)sub_10040A7B8((void *)(v21 > 1), v22 + 1, 1);
        uint64_t v7 = v36;
      }
      _OWORD v7[2] = v22 + 1;
      unint64_t v23 = &v7[7 * v22];
      *((_OWORD *)v23 + 2) = v28;
      v23[6] = v27;
      v23[7] = v19;
      *((unsigned char *)v23 + 64) = v20;
      v23[9] = v26;
      v23[10] = v25;
      --v8;
      v11 += 6;
      ++v9;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_9:
    swift_release();
    swift_release();
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_10042BE70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1004296BC(v2, 0);
  sub_10040A778(0, v2, 0);
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)(a1 + 80);
  while (1)
  {
    uint64_t v5 = v3;
    uint64_t v18 = v2;
    uint64_t v6 = *(v4 - 6);
    uint64_t v7 = *(v4 - 5);
    uint64_t v8 = *(v4 - 4);
    uint64_t v9 = *(v4 - 3);
    unsigned __int8 v10 = *((unsigned char *)v4 - 16);
    uint64_t v11 = *v4;
    uint64_t v17 = *(v4 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10042C7D8(v8, v9, v10);
    uint64_t result = sub_100428DFC(v6, 0, (uint64_t)_swiftEmptyArrayStorage);
    if ((v13 & 1) == 0) {
      break;
    }
    sub_100428FF0(v6);
    swift_bridgeObjectRetain();
    sub_10042C7D8(v8, v9, v10);
    unint64_t v14 = v3[2];
    unint64_t v15 = v5[3];
    int64_t v19 = v14 + 1;
    swift_bridgeObjectRetain();
    if (v14 >= v15 >> 1) {
      sub_10040A778((char *)(v15 > 1), v19, 1);
    }
    v4 += 7;
    _OWORD v5[2] = v19;
    uint64_t v16 = &v5[6 * v14];
    v16[4] = v7;
    v16[5] = v8;
    v16[6] = v9;
    *((unsigned char *)v16 + 56) = v10;
    v16[8] = v17;
    v16[9] = v11;
    swift_bridgeObjectRelease();
    sub_10042C7F0(v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v18 - 1;
    unint64_t v3 = v5;
    if (v18 == 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10042C040(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  for (uint64_t i = a1 + 40; ; i += 48)
  {
    uint64_t v5 = *(void *)(i - 8);
    uint64_t v6 = *(void *)i;
    uint64_t v7 = *(void *)(i + 8);
    unsigned __int8 v8 = *(unsigned char *)(i + 16);
    swift_bridgeObjectRetain();
    sub_10042C7D8(v6, v7, v8);
    swift_bridgeObjectRetain();
    char v9 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v5, a2);
    swift_bridgeObjectRelease();
    sub_10042C7F0(v6, v7, v8);
    swift_bridgeObjectRelease();
    if (v9) {
      break;
    }
    if (v2 == ++v3) {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10042C12C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = *(void *)(a3 + 16);
  if (!v7) {
    return result;
  }
  uint64_t v9 = a3 + 32;
  uint64_t v53 = a6 + 32;
  uint64_t v51 = (void *)(a5 + 16);
  uint64_t v49 = a7 + 32;
  uint64_t v50 = a5 + 32;
  swift_retain();
  swift_retain();
  uint64_t v10 = v9;
  swift_retain();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v55 = a6;
  uint64_t v56 = v9;
  while (1)
  {
    uint64_t v13 = v10 + 48 * v12;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    uint64_t v16 = *(void *)(v13 + 16);
    int v17 = *(unsigned __int8 *)(v13 + 24);
    if (!v11) {
      break;
    }
    unint64_t v18 = *(void *)(v11 + 16);
    if (v18 >= *(void *)(v14 + 16)) {
      goto LABEL_14;
    }
    if (v18)
    {
      if (*(void *)(v14 + 32) != *(void *)(v11 + 32)) {
        goto LABEL_14;
      }
      unint64_t v19 = v18 - 1;
      if (v19)
      {
        uint64_t v20 = 0;
        while (*(void *)(v14 + 40 + 8 * v20) == *(void *)(v11 + 8 * v20 + 40))
        {
          if (v19 == ++v20) {
            goto LABEL_4;
          }
        }
LABEL_14:
        swift_bridgeObjectRetain();
        sub_10042C7D8(v15, v16, v17);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v17 != 2) {
          goto LABEL_15;
        }
        goto LABEL_19;
      }
    }
LABEL_4:
    if (++v12 == v7)
    {
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  sub_10042C7D8(v15, v16, v17);
  swift_bridgeObjectRetain();
  if (v17 != 2)
  {
LABEL_15:
    if (v17 != 5 || v16 | v15)
    {
      swift_bridgeObjectRelease();
      sub_10042C7F0(v15, v16, v17);
      swift_bridgeObjectRelease();
      uint64_t v11 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v14;
    }
    goto LABEL_4;
  }
LABEL_19:
  if (sub_1005E1CB0() == v15 && v16 == v21) {
    goto LABEL_21;
  }
  char v22 = sub_1005E3290();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0 || !*(void *)(v14 + 16)) {
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1004272DC(1, v14);
  uint64_t v24 = *(void *)(v55 + 16);
  if (a5)
  {
    swift_retain();
    Swift::Int v46 = sub_1004293A0(v23, v53, v24, v51, v50);
    char v26 = v25;
    uint64_t result = swift_release();
    if (v26) {
      goto LABEL_21;
    }
    unint64_t v27 = v46;
    uint64_t v28 = a7;
    if (v46 < 0) {
      goto LABEL_65;
    }
  }
  else
  {
    if (!v24) {
      goto LABEL_21;
    }
    uint64_t v29 = swift_bridgeObjectRetain();
    char v30 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v29, v23);
    uint64_t result = swift_bridgeObjectRelease();
    if (v30)
    {
      unint64_t v27 = 0;
    }
    else
    {
      if (v24 == 1) {
        goto LABEL_21;
      }
      uint64_t v37 = swift_bridgeObjectRetain();
      char v38 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v37, v23);
      uint64_t result = swift_bridgeObjectRelease();
      if (v38)
      {
        unint64_t v27 = 1;
      }
      else
      {
        if (v24 == 2) {
          goto LABEL_21;
        }
        uint64_t v39 = swift_bridgeObjectRetain();
        char v40 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v39, v23);
        uint64_t result = swift_bridgeObjectRelease();
        if (v40)
        {
          unint64_t v27 = 2;
        }
        else
        {
          if (v24 == 3) {
            goto LABEL_21;
          }
          uint64_t v41 = swift_bridgeObjectRetain();
          char v42 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v41, v23);
          uint64_t result = swift_bridgeObjectRelease();
          if ((v42 & 1) == 0)
          {
            uint64_t v43 = 0;
            uint64_t v47 = v24 - 4;
            while (v47 != v43)
            {
              uint64_t v44 = swift_bridgeObjectRetain();
              char v45 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v44, v23);
              uint64_t result = swift_bridgeObjectRelease();
              ++v43;
              if (v45)
              {
                unint64_t v27 = v43 + 3;
                uint64_t v28 = a7;
                if (((v43 + 3) & 0x8000000000000000) == 0) {
                  goto LABEL_32;
                }
                goto LABEL_65;
              }
            }
            goto LABEL_21;
          }
          unint64_t v27 = 3;
        }
      }
    }
    uint64_t v28 = a7;
  }
LABEL_32:
  if (v27 < *(void *)(v28 + 16))
  {
    unint64_t v31 = v49 + 48 * v27;
    uint64_t v32 = *(void *)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
    int v34 = *(unsigned __int8 *)(v31 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10042C7D8(v32, v33, v34);
    swift_bridgeObjectRelease();
    if (v34 == 4)
    {
      uint64_t v35 = Media.Subtype.alternative.unsafeMutableAddressor();
      if (*v35 == v32 && v33 == v35[1])
      {
        swift_bridgeObjectRelease();
        sub_10042C7F0(v32, v33, 4u);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v48 = sub_1005E3290();
        swift_bridgeObjectRelease();
        sub_10042C7F0(v32, v33, 4u);
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0) {
          goto LABEL_46;
        }
      }
      LOBYTE(v57) = 0;
      sub_10042637C(v14, a5, v55, a7, &v57);
      if (v57)
      {
LABEL_47:
        swift_bridgeObjectRelease();
        sub_10042C7F0(v15, v16, 2u);
        swift_bridgeObjectRelease();
        uint64_t v11 = 0;
        uint64_t v10 = v56;
        goto LABEL_4;
      }
LABEL_46:
      swift_bridgeObjectRetain();
      sub_100409628(&v57, v14);
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
    sub_10042C7F0(v32, v33, v34);
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_10042C6D8(uint64_t a1)
{
  sub_1000613BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
  return a1;
}

uint64_t sub_10042C744(uint64_t a1, uint64_t a2)
{
  return sub_1004248C8(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t _s18SinglePartWithSizeVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for BodyStructure.SinglePartWithSize()
{
  return &type metadata for BodyStructure.SinglePartWithSize;
}

ValueMetadata *type metadata accessor for BodyStructure.BodyPartListLimits()
{
  return &type metadata for BodyStructure.BodyPartListLimits;
}

uint64_t sub_10042C7D8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10042C7F0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10042C808(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(result + 16) >= v2) {
    uint64_t v3 = *(void *)(a2 + 16);
  }
  else {
    uint64_t v3 = *(void *)(result + 16);
  }
  uint64_t v4 = (unsigned char *)(a2 + 56);
  while (v3)
  {
    if (*v4 == 4)
    {
      uint64_t v5 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      BOOL v7 = v5 == 0x64656E676973 && v6 == 0xE600000000000000;
      if (v7 || (sub_1005E3290() & 1) != 0 || v5 == 0x6574707972636E65 && v6 == 0xE900000000000064) {
        return 1;
      }
      uint64_t result = sub_1005E3290();
      if (result) {
        return 1;
      }
    }
    --v3;
    v4 += 48;
    if (!--v2) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10042C930(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (unsigned int *)(a1 + 40);
    do
    {
      uint64_t v4 = *((void *)v3 - 1);
      unsigned int v5 = *v3;
      v3 += 4;
      swift_bridgeObjectRetain();
      sub_1004097BC((uint64_t)&v7, v4, v5);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t sub_10042C9B0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_10042C9C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10042C9FC()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10042CA44(uint64_t a1, uint64_t a2)
{
  return sub_100426928(a1, a2);
}

unint64_t sub_10042CA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100427128(a1, a2, v3, a3);
}

uint64_t sub_10042CA68(uint64_t a1)
{
  return a1;
}

uint64_t sub_10042CA9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v44 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  do
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v47 = v8;
      unint64_t v12 = v11 | (v8 << 6);
    }
    else
    {
      BOOL v10 = __OFADD__(v8, 1);
      int64_t v13 = v8 + 1;
      if (v10) {
        goto LABEL_55;
      }
      if (v13 >= v44)
      {
LABEL_51:
        swift_release();
        return a1;
      }
      unint64_t v14 = *(void *)(v43 + 8 * v13);
      if (!v14)
      {
        int64_t v15 = v13 + 1;
        if (v13 + 1 >= v44) {
          goto LABEL_51;
        }
        unint64_t v14 = *(void *)(v43 + 8 * v15);
        if (v14) {
          goto LABEL_18;
        }
        int64_t v15 = v13 + 2;
        if (v13 + 2 >= v44) {
          goto LABEL_51;
        }
        unint64_t v14 = *(void *)(v43 + 8 * v15);
        if (v14) {
          goto LABEL_18;
        }
        int64_t v15 = v13 + 3;
        if (v13 + 3 >= v44) {
          goto LABEL_51;
        }
        unint64_t v14 = *(void *)(v43 + 8 * v15);
        if (v14)
        {
LABEL_18:
          int64_t v13 = v15;
        }
        else
        {
          int64_t v32 = v13 + 4;
          if (v13 + 4 >= v44) {
            goto LABEL_51;
          }
          unint64_t v14 = *(void *)(v43 + 8 * v32);
          for (v13 += 4; !v14; ++v32)
          {
            int64_t v13 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_56;
            }
            if (v13 >= v44) {
              goto LABEL_51;
            }
            unint64_t v14 = *(void *)(v43 + 8 * v13);
          }
        }
      }
      unint64_t v6 = (v14 - 1) & v14;
      int64_t v47 = v13;
      unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    }
    uint64_t v16 = *(void *)(*(void *)(a2 + 48) + 8 * v12);
    swift_beginAccess();
    uint64_t v17 = a3[2];
    uint64_t v18 = a3[3];
    uint64_t v19 = a3[4];
    uint64_t v20 = *(void *)(v18 + 16);
    if (v17)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      unint64_t v21 = sub_1004293A0(v16, v18 + 32, v20, (void *)(v17 + 16), v17 + 32);
      char v23 = v22;
      uint64_t result = swift_release();
      if (v23) {
        goto LABEL_5;
      }
      if ((v21 & 0x8000000000000000) != 0) {
        goto LABEL_53;
      }
    }
    else
    {
      if (!v20)
      {
        swift_bridgeObjectRetain_n();
LABEL_5:
        int64_t v8 = v47;
        swift_endAccess();
        uint64_t v9 = 0;
        goto LABEL_6;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRetain();
      char v25 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v24, v16);
      uint64_t result = swift_bridgeObjectRelease();
      if (v25)
      {
        unint64_t v21 = 0;
      }
      else
      {
        if (v20 == 1) {
          goto LABEL_5;
        }
        uint64_t v26 = swift_bridgeObjectRetain();
        char v27 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v26, v16);
        uint64_t result = swift_bridgeObjectRelease();
        if (v27)
        {
          unint64_t v21 = 1;
        }
        else
        {
          if (v20 == 2) {
            goto LABEL_5;
          }
          uint64_t v28 = swift_bridgeObjectRetain();
          char v29 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v28, v16);
          uint64_t result = swift_bridgeObjectRelease();
          if (v29)
          {
            unint64_t v21 = 2;
          }
          else
          {
            if (v20 == 3) {
              goto LABEL_5;
            }
            uint64_t v30 = swift_bridgeObjectRetain();
            char v31 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v30, v16);
            uint64_t result = swift_bridgeObjectRelease();
            if ((v31 & 1) == 0)
            {
              uint64_t v33 = 0;
              uint64_t v34 = v20 - 4;
              while (v34 != v33)
              {
                uint64_t v35 = swift_bridgeObjectRetain();
                char v36 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v35, v16);
                uint64_t result = swift_bridgeObjectRelease();
                ++v33;
                if (v36)
                {
                  unint64_t v21 = v33 + 3;
                  if (v33 + 3 < 0) {
                    goto LABEL_53;
                  }
                  goto LABEL_46;
                }
              }
              goto LABEL_5;
            }
            unint64_t v21 = 3;
          }
        }
      }
    }
LABEL_46:
    if (v21 >= *(void *)(v19 + 16)) {
      goto LABEL_54;
    }
    uint64_t v37 = v19 + 48 * v21;
    uint64_t v39 = *(void *)(v37 + 32);
    uint64_t v38 = *(void *)(v37 + 40);
    unsigned __int8 v40 = *(unsigned char *)(v37 + 48);
    uint64_t v9 = *(void *)(v37 + 56);
    char v41 = *(unsigned char *)(v37 + 64);
    uint64_t v42 = *(void *)(v37 + 72);
    swift_endAccess();
    swift_bridgeObjectRetain();
    sub_10042C7D8(v39, v38, v40);
    swift_bridgeObjectRelease();
    if (v41)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v9 = sub_10042CA9C(0, v42, a3);
      swift_release();
      sub_10042C7F0(v39, v38, v40);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10042C7F0(v39, v38, v40);
    }
    int64_t v8 = v47;
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v10 = __OFADD__(a1, v9);
    a1 += v9;
  }
  while (!v10);
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_10042CEEC(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_10042C7F0(result, a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10042CF2C(uint64_t result, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_10042C7D8(result, a2, a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_10042CF6C(uint64_t *a1)
{
  return a1;
}

uint64_t _s7ElementVwxx(uint64_t a1)
{
  sub_10042C7F0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s7ElementVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_10042C7D8(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7ElementVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 16);
  sub_10042C7D8(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_10042C7F0(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s4TreeV4NodeVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s7ElementVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_10042C7F0(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s7ElementVMa()
{
  return &_s7ElementVN;
}

ValueMetadata *_s4TreeV14PartCollectionVMa()
{
  return &_s4TreeV14PartCollectionVN;
}

ValueMetadata *_s4TreeVMa()
{
  return &_s4TreeVN;
}

uint64_t _s4TreeV4NodeVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_10042C7F0(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t _s4TreeV4NodeVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_10042C7D8(v4, v5, v6);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4TreeV4NodeVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10042C7D8(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10042C7F0(v7, v8, v9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4TreeV4NodeVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10042C7F0(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s4TreeV4NodeVMa()
{
  return &_s4TreeV4NodeVN;
}

uint64_t _s4TreeV9MediaKindOwxx(uint64_t a1)
{
  return sub_10042C7F0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s4TreeV9MediaKindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10042C7D8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s4TreeV9MediaKindOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10042C7D8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10042C7F0(v6, v7, v8);
  return a1;
}

uint64_t _s4TreeV9MediaKindOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10042C7F0(v4, v5, v6);
  return a1;
}

uint64_t _s4TreeV9MediaKindOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s4TreeV9MediaKindOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10042D4E8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_10042D500(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)__n128 result = a2 - 5;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s4TreeV9MediaKindOMa()
{
  return &_s4TreeV9MediaKindON;
}

uint64_t RemoteMailbox.path.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteMailbox.path.setter(uint64_t a1, unint64_t a2)
{
  int v3 = a2;
  unint64_t v5 = HIDWORD(a2);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v2 = a1;
  *(_DWORD *)(v2 + 8) = v3;
  *(unsigned char *)(v2 + 12) = v5;
  return result;
}

uint64_t RemoteMailbox.attributes.getter()
{
  return *(unsigned __int16 *)(v0 + 14);
}

uint64_t RemoteMailbox.attributes.setter(uint64_t result)
{
  *(_WORD *)(v1 + 14) = result;
  return result;
}

Swift::UInt32 (__swiftcall *RemoteMailbox.attributes.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

__n128 RemoteMailbox.status.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  char v3 = *(unsigned char *)(v1 + 64);
  char v4 = *(unsigned char *)(v1 + 65);
  __n128 result = *(__n128 *)(v1 + 24);
  long long v6 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 41) = v4;
  return result;
}

uint64_t RemoteMailbox.status.setter(uint64_t a1)
{
  return sub_10001FDF0(a1, v1 + 24, &qword_1007151C8);
}

__n128 RemoteMailbox.init(path:attributes:specialUse:status:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, __int16 a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v8 = a2;
  unint64_t v11 = HIDWORD(a2);
  sub_10001FDF0(a5, (uint64_t)v17, &qword_1007151C8);
  uint64_t v12 = v18;
  char v13 = v19;
  char v14 = v20;
  __n128 result = (__n128)v17[0];
  long long v16 = v17[1];
  *(void *)a6 = a1;
  *(_DWORD *)(a6 + 8) = v8;
  *(unsigned char *)(a6 + 12) = v11;
  *(_WORD *)(a6 + 14) = a3;
  *(unsigned char *)(a6 + 16) = a4;
  *(__n128 *)(a6 + 24) = result;
  *(_OWORD *)(a6 + 40) = v16;
  *(void *)(a6 + 56) = v12;
  *(unsigned char *)(a6 + 64) = v13;
  *(unsigned char *)(a6 + 65) = v14;
  return result;
}

uint64_t RemoteMailbox.name.getter()
{
  uint64_t v1 = *v0;
  sub_10002292C((uint64_t)v0);
  return v1;
}

uint64_t sub_10042D6EC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  _OWORD v7[3] = v2;
  __int16 v8 = *(_WORD *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  __int16 v10 = *(_WORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s16IMAP2Persistence13RemoteMailboxV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t RemoteMailbox.Status.nextUID.getter()
{
  return *(unsigned int *)(v0 + 8);
}

void __swiftcall RemoteMailbox.Status.init(messageCount:nextUID:uidValidity:unreadMessagesCount:highestModificationSequence:)(IMAP2Persistence::RemoteMailbox::Status *__return_ptr retstr, Swift::Int messageCount, NIOIMAPCore2::UID nextUID, NIOIMAPCore2::UIDValidity uidValidity, Swift::Int_optional unreadMessagesCount, NIOIMAPCore2::ModificationSequenceValue_optional highestModificationSequence)
{
  retstr->messageCount = messageCount;
  retstr->nextUID = nextUID;
  retstr->uidValidity = uidValidity;
  retstr->unreadMessagesCount.value = unreadMessagesCount.value;
  retstr->unreadMessagesCount.is_nil = unreadMessagesCount.is_nil;
  retstr->highestModificationSequence.value.value = highestModificationSequence.value.value;
  retstr->highestModificationSequence.is_nil = highestModificationSequence.is_nil;
}

BOOL sub_10042D778(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return _s16IMAP2Persistence13RemoteMailboxV6StatusV23__derived_struct_equalsySbAE_AEtFZ_0((BOOL)&v5, (uint64_t)&v7);
}

__n128 RemoteMailbox.withStatus(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10001FDF0(a1, (uint64_t)v15, &qword_1007151C8);
  __n128 v13 = (__n128)v15[1];
  long long v14 = v15[0];
  uint64_t v4 = v16;
  char v5 = v17;
  char v6 = v18;
  uint64_t v7 = *(void *)v2;
  int v8 = *(_DWORD *)(v2 + 8);
  char v9 = *(unsigned char *)(v2 + 12);
  __int16 v10 = *(_WORD *)(v2 + 14);
  char v11 = *(unsigned char *)(v2 + 16);
  sub_10002292C(v2);
  *(void *)a2 = v7;
  *(_DWORD *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 12) = v9;
  *(_WORD *)(a2 + 14) = v10;
  *(unsigned char *)(a2 + 16) = v11;
  *(_OWORD *)(a2 + 24) = v14;
  __n128 result = v13;
  *(__n128 *)(a2 + 40) = v13;
  *(void *)(a2 + 56) = v4;
  *(unsigned char *)(a2 + 64) = v5;
  *(unsigned char *)(a2 + 65) = v6;
  return result;
}

void __swiftcall RemoteMailbox.Status.init(_:)(IMAP2Persistence::RemoteMailbox::Status_optional *__return_ptr retstr, NIOIMAPCore2::MailboxStatus *a2)
{
  sub_10001FDF0((uint64_t)a2, (uint64_t)v14, &qword_1007151D0);
  sub_10001FDF0((uint64_t)v14, (uint64_t)&v15, &qword_1007151D0);
  if ((v16 & 1) != 0
    || (Swift::Int v4 = v15,
        sub_10001FDF0((uint64_t)&a2->nextUID, (uint64_t)v13, &qword_1007151D8),
        sub_10001FDF0((uint64_t)v13, (uint64_t)&v17, &qword_1007151D8),
        (v18 & 1) != 0)
    || (uint64_t v5 = v17,
        sub_10001FDF0((uint64_t)&a2->uidValidity, (uint64_t)&v12, &qword_1007151E0),
        sub_10001FDF0((uint64_t)&v12, (uint64_t)&v19, &qword_1007151E0),
        (v20 & 1) != 0))
  {
    Swift::Int v4 = 0;
    unint64_t v6 = 0;
    Swift::Int value = 0;
    BOOL is_nil = 0;
    Swift::UInt64 v9 = 0;
    Swift::Bool v10 = 0;
    Swift::Bool v11 = 1;
  }
  else
  {
    Swift::Bool v11 = 0;
    Swift::Int value = a2->unseenCount.value;
    BOOL is_nil = a2->unseenCount.is_nil;
    Swift::UInt64 v9 = a2->highestModificationSequence.value.value;
    Swift::Bool v10 = a2->highestModificationSequence.is_nil;
    unint64_t v6 = v5 | ((unint64_t)v19 << 32);
  }
  retstr->value.messageCount = v4;
  *(void *)&retstr->value.nextUID.rawValue = v6;
  retstr->value.unreadMessagesCount.Swift::Int value = value;
  *(void *)&retstr->value.unreadMessagesCount.BOOL is_nil = is_nil;
  retstr->value.highestModificationSequence.value.Swift::Int value = v9;
  retstr->value.highestModificationSequence.BOOL is_nil = v10;
  retstr->BOOL is_nil = v11;
}

double RemoteMailbox.init(attributes:path:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __int16 v9 = 0;
    uint64_t v10 = a1 + 40;
    unint64_t v11 = *(void *)(a1 + 16);
    while (2)
    {
      swift_bridgeObjectRetain();
      char v13 = _s16IMAP2Persistence13RemoteMailboxV9AttributeO3nioAESg12NIOIMAPCore20D4InfoVADV_tcfC_0();
      v10 += 16;
      __int16 v12 = 1;
      switch(v13)
      {
        case 1:
          __int16 v12 = 2;
          goto LABEL_4;
        case 2:
          __int16 v12 = 4;
          goto LABEL_4;
        case 3:
          __int16 v12 = 8;
          goto LABEL_4;
        case 4:
          __int16 v12 = 16;
          goto LABEL_4;
        case 5:
          __int16 v12 = 32;
          goto LABEL_4;
        case 6:
          __int16 v12 = 64;
          goto LABEL_4;
        case 7:
          __int16 v12 = 128;
          goto LABEL_4;
        case 8:
          __int16 v12 = 256;
          goto LABEL_4;
        case 9:
          goto LABEL_5;
        default:
LABEL_4:
          v9 |= v12;
LABEL_5:
          if (--v11) {
            continue;
          }
          uint64_t v14 = a1 + 40;
          break;
      }
      break;
    }
    while (1)
    {
      swift_bridgeObjectRetain();
      if (_s16IMAP2Persistence13RemoteMailboxV10SpecialUseOyAESg12NIOIMAPCore20D4InfoV9AttributeVcfC_0() != 7) {
        break;
      }
      ++v11;
      v14 += 16;
      if (v8 == v11) {
        goto LABEL_20;
      }
    }
    if (v8 != v11)
    {
      if (v11 < *(void *)(a1 + 16))
      {
        swift_bridgeObjectRetain();
        char v15 = _s16IMAP2Persistence13RemoteMailboxV10SpecialUseOyAESg12NIOIMAPCore20D4InfoV9AttributeVcfC_0();
        swift_bridgeObjectRelease();
        if (v15 != 7) {
          goto LABEL_21;
        }
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x10042DB5CLL);
    }
  }
  else
  {
    __int16 v9 = 0;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  char v15 = 7;
LABEL_21:
  *(void *)a4 = a2;
  *(_DWORD *)(a4 + 8) = a3;
  *(unsigned char *)(a4 + 12) = BYTE4(a3);
  *(_WORD *)(a4 + 14) = v9;
  *(unsigned char *)(a4 + 16) = v15;
  double result = 0.0;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_OWORD *)(a4 + 49) = 0u;
  *(unsigned char *)(a4 + 65) = 1;
  return result;
}

BOOL RemoteMailbox.isInbox.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(unsigned int *)(v0 + 8);
  long long v3 = MailboxName.inbox.unsafeMutableAddressor();
  return (*((unsigned int *)v3 + 2) | ((unint64_t)*((unsigned int *)v3 + 2) << 32)) == (v2 | (v2 << 32))
      && sub_100357CFC(*v3, v1);
}

BOOL _s16IMAP2Persistence13RemoteMailboxV6StatusV23__derived_struct_equalsySbAE_AEtFZ_0(BOOL result, uint64_t a2)
{
  if (*(void *)result != *(void *)a2
    || *(_DWORD *)(a2 + 8) != *(_DWORD *)(result + 8)
    || *(_DWORD *)(result + 12) != *(_DWORD *)(a2 + 12))
  {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(result + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(unsigned char *)(result + 40)) {
    return (*(unsigned char *)(a2 + 40) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 40)) {
    return 0;
  }
  uint64_t v3 = *(void *)(result + 32);
  uint64_t v4 = *(void *)(a2 + 32);
  if (((v4 | v3) & 0x8000000000000000) == 0) {
    return v4 == v3;
  }
  __break(1u);
  return result;
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((static MailboxPath.__derived_struct_equals(_:_:)(*(void *)a1, *(unsigned int *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 12) << 32), *(void *)a2, *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32)) & 1) == 0|| *(unsigned __int16 *)(a1 + 14) != *(unsigned __int16 *)(a2 + 14))
  {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v4 != 7)
  {
    if (v5 == 7 || (sub_100439B90(v4, v5) & 1) == 0) {
      return 0;
    }
LABEL_8:
    if (*(unsigned char *)(a1 + 65))
    {
      if ((*(unsigned char *)(a2 + 65) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(unsigned char *)(a2 + 65)) {
        return 0;
      }
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = *(void *)(a1 + 56);
      char v10 = *(unsigned char *)(a1 + 64);
      uint64_t v11 = *(void *)(a2 + 24);
      uint64_t v12 = *(void *)(a2 + 32);
      uint64_t v13 = *(void *)(a2 + 40);
      uint64_t v14 = *(void *)(a2 + 48);
      uint64_t v15 = *(void *)(a2 + 56);
      char v16 = *(unsigned char *)(a2 + 64);
      v18[0] = *(void *)(a1 + 24);
      v18[1] = v6;
      v18[2] = v7;
      char v19 = v8 & 1;
      uint64_t v20 = v9;
      char v21 = v10 & 1;
      v22[0] = v11;
      v22[1] = v12;
      v22[2] = v13;
      char v23 = v14 & 1;
      uint64_t v24 = v15;
      char v25 = v16 & 1;
      if (!_s16IMAP2Persistence13RemoteMailboxV6StatusV23__derived_struct_equalsySbAE_AEtFZ_0((BOOL)v18, (uint64_t)v22))return 0; {
    }
      }
    return 1;
  }
  if (v5 == 7) {
    goto LABEL_8;
  }
  return 0;
}

uint64_t initializeWithCopy for RemoteMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 50) = *(_OWORD *)(a2 + 50);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RemoteMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 50) = *(_OWORD *)(a2 + 50);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 initializeWithTake for RemoteMailbox(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for RemoteMailbox(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_WORD *)(a1 + 14) = *(_WORD *)(a2 + 14);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 50) = *(_OWORD *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteMailbox(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 66)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteMailbox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 66) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 66) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteMailbox()
{
  return &type metadata for RemoteMailbox;
}

__n128 initializeWithCopy for RemoteMailbox.Status(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteMailbox.Status(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RemoteMailbox.Status(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RemoteMailbox.Status()
{
  return &type metadata for RemoteMailbox.Status;
}

uint64_t sub_10042E048()
{
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

uint64_t RemoteMailbox.Attributes.init(_:)(char a1)
{
  return word_100624D34[a1];
}

_UNKNOWN **static RemoteMailbox.Attribute.allCases.getter()
{
  return &off_1006EEE88;
}

uint64_t RemoteMailbox.Attribute.rawValue.getter(char a1)
{
  uint64_t result = 0x7463656C65536F6ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x64656B72616DLL;
      break;
    case 2:
      uint64_t result = 0x64656B72616D6E75;
      break;
    case 3:
      uint64_t result = 0x74736978456E6F6ELL;
      break;
    case 4:
      uint64_t result = 0x697265666E496F6ELL;
      break;
    case 5:
      uint64_t result = 0x6269726373627573;
      break;
    case 6:
      uint64_t result = 0x65746F6D6572;
      break;
    case 7:
      uint64_t result = 0x646C696843736168;
      break;
    case 8:
      uint64_t result = 0x6968436F4E736168;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10042E31C(unsigned __int8 *a1, char *a2)
{
  return sub_100439D9C(*a1, *a2);
}

uint64_t sub_10042E328@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s16IMAP2Persistence13RemoteMailboxV9AttributeO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10042E358@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RemoteMailbox.Attribute.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_10042E384()
{
  return sub_1005E3470();
}

uint64_t sub_10042E3CC()
{
  return sub_10042E048();
}

Swift::Int sub_10042E3D4()
{
  return sub_1005E3470();
}

void sub_10042E418(void *a1@<X8>)
{
  *a1 = &off_1006EEE88;
}

void *RemoteMailbox.Attributes.noSelect.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.noSelect;
}

void *RemoteMailbox.Attributes.marked.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.marked;
}

void *RemoteMailbox.Attributes.unmarked.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.unmarked;
}

void *RemoteMailbox.Attributes.nonExistent.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.nonExistent;
}

void *RemoteMailbox.Attributes.noInferiors.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.noInferiors;
}

uint64_t static RemoteMailbox.Attributes.noInferiors.getter()
{
  return 16;
}

void *RemoteMailbox.Attributes.subscribed.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.subscribed;
}

void *RemoteMailbox.Attributes.remote.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.remote;
}

uint64_t static RemoteMailbox.Attributes.remote.getter()
{
  return 64;
}

void *RemoteMailbox.Attributes.hasChildren.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.hasChildren;
}

void *RemoteMailbox.Attributes.hasNoChildren.unsafeMutableAddressor()
{
  return &static RemoteMailbox.Attributes.hasNoChildren;
}

uint64_t static RemoteMailbox.Attributes.hasNoChildren.getter()
{
  return 256;
}

_WORD *sub_10042E4AC@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_10042E4B8(_WORD *a1@<X8>)
{
  *a1 = 0;
}

_WORD *sub_10042E4C0@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_WORD *sub_10042E4D4@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_WORD *sub_10042E4E8@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10042E4FC(_WORD *a1, unsigned __int16 *a2)
{
  int v3 = *a2;
  int v4 = (unsigned __int16)*v2;
  if ((v4 & v3) != v3) {
    _WORD *v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int16 *sub_10042E52C@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = (unsigned __int16)*v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    _WORD *v2 = v4 & ~(_WORD)v3;
  }
  *(_WORD *)a2 = v5;
  *(unsigned char *)(a2 + 2) = v5 == 0;
  return result;
}

unsigned __int16 *sub_10042E558@<X0>(unsigned __int16 *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = (unsigned __int16)*v2;
  _WORD *v2 = v4 | v3;
  int v5 = v4 & v3;
  *(_WORD *)a2 = v5;
  *(unsigned char *)(a2 + 2) = v5 == 0;
  return result;
}

_WORD *sub_10042E57C(_WORD *result)
{
  *v1 |= *result;
  return result;
}

_WORD *sub_10042E590(_WORD *result)
{
  *v1 &= *result;
  return result;
}

_WORD *sub_10042E5A4(_WORD *result)
{
  *v1 ^= *result;
  return result;
}

_WORD *sub_10042E5B8@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10042E5CC(unsigned __int16 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10042E5E0(_WORD *a1)
{
  return (unsigned __int16)(*v1 & *a1) == 0;
}

BOOL sub_10042E5F4(unsigned __int16 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_10042E608()
{
  return *v0 == 0;
}

_WORD *sub_10042E618(_WORD *result)
{
  *v1 &= ~*result;
  return result;
}

_WORD *sub_10042E62C@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(unsigned char *)(a2 + 2) = 0;
  return result;
}

void sub_10042E63C(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10042E648@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  __int16 v3 = sub_10042F5C4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t RemoteMailbox.Attributes.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  char v10 = &v14[-v9];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  sub_1005E1F60();
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = 0;
  while (1)
  {
    sub_1005E2950();
    int v12 = 1;
    switch(v14[15])
    {
      case 0:
        goto LABEL_3;
      case 1:
        uint64_t v11 = v11 | 2;
        continue;
      case 2:
        uint64_t v11 = v11 | 4;
        continue;
      case 3:
        uint64_t v11 = v11 | 8;
        continue;
      case 4:
        uint64_t v11 = v11 | 0x10;
        continue;
      case 5:
        uint64_t v11 = v11 | 0x20;
        continue;
      case 6:
        uint64_t v11 = v11 | 0x40;
        continue;
      case 7:
        uint64_t v11 = v11 | 0x80;
        continue;
      case 8:
        int v12 = 256;
LABEL_3:
        uint64_t v11 = v12 | v11;
        break;
      case 9:
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
        return v11;
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t RemoteMailbox.Attributes.allAttributes.getter@<X0>(__int16 a1@<W0>, void *a2@<X8>)
{
  uint64_t result = swift_allocObject();
  *(_WORD *)(result + 16) = a1;
  *a2 = &off_1006EEE88;
  a2[1] = sub_10042F260;
  a2[2] = result;
  return result;
}

uint64_t RemoteMailbox.Attributes.debugDescription.getter(__int16 a1)
{
  sub_10040A758(0, 0, 0);
  uint64_t v2 = 9;
  __int16 v3 = &byte_1006EEEA8;
  do
  {
    int v7 = *v3++;
    switch(v7)
    {
      case 1:
        if ((a1 & 2) != 0)
        {
          unint64_t v8 = 0xE600000000000000;
          uint64_t v9 = 0x64656B72616DLL;
          goto LABEL_2;
        }
        break;
      case 2:
        if ((a1 & 4) != 0)
        {
          unint64_t v8 = 0xE800000000000000;
          uint64_t v9 = 0x64656B72616D6E75;
          goto LABEL_2;
        }
        break;
      case 3:
        if ((a1 & 8) != 0)
        {
          unint64_t v8 = 0xEB00000000746E65;
          uint64_t v9 = 0x74736978456E6F6ELL;
          goto LABEL_2;
        }
        break;
      case 4:
        if ((a1 & 0x10) != 0)
        {
          unint64_t v8 = 0xEB0000000073726FLL;
          uint64_t v9 = 0x697265666E496F6ELL;
          goto LABEL_2;
        }
        break;
      case 5:
        if ((a1 & 0x20) != 0)
        {
          unint64_t v8 = 0xEA00000000006465;
          uint64_t v9 = 0x6269726373627573;
          goto LABEL_2;
        }
        break;
      case 6:
        if ((a1 & 0x40) != 0)
        {
          unint64_t v8 = 0xE600000000000000;
          uint64_t v9 = 0x65746F6D6572;
          goto LABEL_2;
        }
        break;
      case 7:
        if ((a1 & 0x80) != 0)
        {
          unint64_t v8 = 0xEB000000006E6572;
          uint64_t v9 = 0x646C696843736168;
          goto LABEL_2;
        }
        break;
      case 8:
        if ((a1 & 0x100) != 0)
        {
          unint64_t v8 = 0xED00006E6572646CLL;
          uint64_t v9 = 0x6968436F4E736168;
          goto LABEL_2;
        }
        break;
      default:
        if (a1)
        {
          unint64_t v8 = 0xE800000000000000;
          uint64_t v9 = 0x7463656C65536F6ELL;
LABEL_2:
          unint64_t v5 = _swiftEmptyArrayStorage[2];
          unint64_t v4 = _swiftEmptyArrayStorage[3];
          if (v5 >= v4 >> 1) {
            sub_10040A758((char *)(v4 > 1), v5 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v5 + 1;
          uint64_t v6 = &_swiftEmptyArrayStorage[2 * v5];
          v6[4] = v9;
          v6[5] = v8;
        }
        break;
    }
    --v2;
  }
  while (v2);
  sub_10000566C(&qword_1007148D0);
  sub_100007494((unint64_t *)&qword_1007148D8, &qword_1007148D0);
  uint64_t v10 = sub_1005E1A80();
  swift_release();
  return v10;
}

uint64_t sub_10042EC18()
{
  return RemoteMailbox.Attributes.debugDescription.getter(*v0);
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV9AttributeO3nioAESg12NIOIMAPCore20D4InfoVADV_tcfC_0()
{
  uint64_t v0 = sub_1005E1CB0();
  uint64_t v2 = v1;
  if (v0 == sub_1005E1CB0() && v2 == v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v5 = sub_1005E3290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v8 = sub_1005E1CB0();
  uint64_t v10 = v9;
  if (v8 == sub_1005E1CB0() && v10 == v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v12 = sub_1005E3290();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      uint64_t v13 = sub_1005E1CB0();
      uint64_t v15 = v14;
      if (v13 == sub_1005E1CB0() && v15 == v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = 2;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v17 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17)
        {
          swift_bridgeObjectRelease();
          return 2;
        }
        else
        {
          uint64_t v18 = sub_1005E1CB0();
          uint64_t v20 = v19;
          if (v18 == sub_1005E1CB0() && v20 == v21)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return 3;
          }
          else
          {
            char v22 = sub_1005E3290();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v22)
            {
              swift_bridgeObjectRelease();
              return 3;
            }
            else
            {
              uint64_t v23 = sub_1005E1CB0();
              uint64_t v25 = v24;
              if (v23 == sub_1005E1CB0() && v25 == v26)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                return 4;
              }
              else
              {
                char v27 = sub_1005E3290();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v27)
                {
                  swift_bridgeObjectRelease();
                  return 4;
                }
                else
                {
                  uint64_t v28 = sub_1005E1CB0();
                  uint64_t v30 = v29;
                  if (v28 == sub_1005E1CB0() && v30 == v31)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    return 5;
                  }
                  else
                  {
                    char v32 = sub_1005E3290();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v32)
                    {
                      swift_bridgeObjectRelease();
                      return 5;
                    }
                    else
                    {
                      uint64_t v33 = sub_1005E1CB0();
                      uint64_t v35 = v34;
                      if (v33 == sub_1005E1CB0() && v35 == v36)
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease_n();
                        return 6;
                      }
                      else
                      {
                        char v37 = sub_1005E3290();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if (v37)
                        {
                          swift_bridgeObjectRelease();
                          return 6;
                        }
                        else
                        {
                          uint64_t v38 = sub_1005E1CB0();
                          uint64_t v40 = v39;
                          if (v38 == sub_1005E1CB0() && v40 == v41)
                          {
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease_n();
                            return 7;
                          }
                          else
                          {
                            char v42 = sub_1005E3290();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if (v42)
                            {
                              swift_bridgeObjectRelease();
                              return 7;
                            }
                            else
                            {
                              uint64_t v43 = sub_1005E1CB0();
                              uint64_t v45 = v44;
                              if (v43 == sub_1005E1CB0() && v45 == v46)
                              {
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease_n();
                                return 8;
                              }
                              else
                              {
                                char v47 = sub_1005E3290();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                if (v47) {
                                  return 8;
                                }
                                else {
                                  return 9;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v6;
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV9AttributeO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1006EED90;
  v6._object = a2;
  unint64_t v4 = sub_1005E3050(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

uint64_t sub_10042F250()
{
  return _swift_deallocObject(v0, 18, 7);
}

BOOL sub_10042F260(char *a1)
{
  return (unsigned __int16)(word_100624D34[*a1] & *(_WORD *)(v1 + 16)) != 0;
}

unint64_t sub_10042F284()
{
  unint64_t result = qword_1007151E8;
  if (!qword_1007151E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007151E8);
  }
  return result;
}

uint64_t sub_10042F2D8()
{
  return sub_100007494(&qword_1007151F0, &qword_1007151F8);
}

unint64_t sub_10042F318()
{
  unint64_t result = qword_100715200;
  if (!qword_100715200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715200);
  }
  return result;
}

unint64_t sub_10042F370()
{
  unint64_t result = qword_100715208;
  if (!qword_100715208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715208);
  }
  return result;
}

unint64_t sub_10042F3C8()
{
  unint64_t result = qword_100715210;
  if (!qword_100715210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715210);
  }
  return result;
}

unint64_t sub_10042F420()
{
  unint64_t result = qword_100715218;
  if (!qword_100715218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715218);
  }
  return result;
}

unsigned char *_s9AttributeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10042F540);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteMailbox.Attribute()
{
  return &type metadata for RemoteMailbox.Attribute;
}

ValueMetadata *type metadata accessor for RemoteMailbox.Attributes()
{
  return &type metadata for RemoteMailbox.Attributes;
}

uint64_t sub_10042F588()
{
  return sub_100007494(&qword_100715220, &qword_100715228);
}

uint64_t sub_10042F5C4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  int v3 = (unsigned __int16 *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    unint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

Swift::Int sub_10042F600(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100433160((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  Swift::Int result = sub_100432048(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10042F66C(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1[3];
  uint64_t result = (uint64_t)sub_10040A838(0, v4 & ~(v4 >> 63), 0);
  uint64_t v6 = v3[4];
  uint64_t v7 = v3[3] + v6;
  if (v3[2] < v7) {
    uint64_t v7 = v3[2];
  }
  char v32 = v3;
  uint64_t v33 = v3[4];
  uint64_t v34 = v7;
  if (v4 < 0) {
    goto LABEL_21;
  }
  swift_retain();
  if (!v4)
  {
    uint64_t v8 = v6;
    goto LABEL_17;
  }
  while (v6 != v34)
  {
LABEL_8:
    uint64_t v8 = v6 + 1;
    uint64_t v33 = v6 + 1;
    uint64_t v9 = &v3[4 * v6];
    uint64_t v10 = v9[7];
    int v11 = *((_DWORD *)v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    char v12 = sub_100430FEC(v10, v11, a2, a3);
    int v29 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v15 = _swiftEmptyArrayStorage[2];
    unint64_t v14 = _swiftEmptyArrayStorage[3];
    if (v15 >= v14 >> 1) {
      sub_10040A838((char *)(v14 > 1), v15 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v15 + 1;
    uint64_t v16 = &_swiftEmptyArrayStorage[4 * v15];
    v16[4] = v10;
    *((_DWORD *)v16 + 10) = v11;
    v16[6] = v12;
    *((_DWORD *)v16 + 14) = v29;
    ++v6;
    if (!--v4)
    {
      while (1)
      {
LABEL_17:
        if (v8 == v34)
        {
          char v28 = sub_100434C94();
          char v17 = v32;
          if ((v28 & 1) == 0)
          {
            swift_release();
            return (uint64_t)_swiftEmptyArrayStorage;
          }
        }
        else
        {
          char v17 = v32;
        }
        uint64_t v18 = v33;
        uint64_t v8 = ++v33;
        uint64_t v19 = &v17[4 * v18];
        uint64_t v20 = v19[7];
        int v21 = *((_DWORD *)v19 + 16);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        char v22 = sub_100430FEC(v20, v21, a2, a3);
        int v24 = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v26 = _swiftEmptyArrayStorage[2];
        unint64_t v25 = _swiftEmptyArrayStorage[3];
        if (v26 >= v25 >> 1) {
          sub_10040A838((char *)(v25 > 1), v26 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v26 + 1;
        char v27 = &_swiftEmptyArrayStorage[4 * v26];
        v27[4] = v20;
        *((_DWORD *)v27 + 10) = v21;
        v27[6] = v22;
        *((_DWORD *)v27 + 14) = v24;
      }
    }
  }
  uint64_t result = sub_100434C94();
  if (result)
  {
    uint64_t v3 = v32;
    uint64_t v6 = v33;
    goto LABEL_8;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

BOOL sub_10042F8E0(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence14RenameRollbackO4StepO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)a1, *(_DWORD *)(a1 + 8), *(void *)(a1 + 16), *(_DWORD *)(a1 + 24), *(void *)a2, *(_DWORD *)(a2 + 8), *(void *)(a2 + 16), *(_DWORD *)(a2 + 24));
}

uint64_t static RenameRollback.makeSteps(failedRenames:allMailboxes:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = (void *)sub_1005E0BF0();
  uint64_t v8 = (void *)*v7;
  uint64_t v73 = (void *)*v7;
  swift_retain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = (char *)sub_100431EA8(v9);
  swift_bridgeObjectRelease();
  uint64_t v70 = v10;
  sub_10042F600(&v70);
  int v11 = v70;
  unint64_t v12 = *((void *)v70 + 2);
  if (v12)
  {
    sub_10000566C(&qword_100715230);
    int v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 40;
    if (v14 < 40) {
      uint64_t v15 = v14 - 9;
    }
    v13[2] = v15 >> 5;
    void v13[3] = 0;
    v13[4] = 0;
    sub_100433174((uint64_t)(v13 + 2), (uint64_t)(v13 + 5), v12, (uint64_t)v11);
  }
  else
  {
    int v13 = (void *)*v7;
    swift_retain();
  }
  BOOL v65 = a4;
  swift_release();
  uint64_t v66 = v13;
  uint64_t v72 = v13;
  int64_t v16 = *(void *)(a1 + 16);
  char v17 = (char *)_swiftEmptyArrayStorage;
  if (v16)
  {
    uint64_t v63 = a2;
    uint64_t v64 = v8;
    uint64_t v70 = (char *)_swiftEmptyArrayStorage;
    sub_10040A868(0, v16, 0);
    char v17 = v70;
    uint64_t v18 = sub_1000D38CC(a1);
    uint64_t v20 = v19;
    char v22 = v21 & 1;
    uint64_t v67 = a1 + 56;
    while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v67 + (((unint64_t)v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_62;
      }
      if (*(_DWORD *)(a1 + 36) != v20) {
        goto LABEL_63;
      }
      char v69 = v22;
      uint64_t v23 = *(void *)(a1 + 48) + 32 * v18;
      uint64_t v24 = *(void *)(v23 + 16);
      int v25 = *(_DWORD *)(v23 + 24);
      uint64_t v70 = v17;
      uint64_t v26 = a1;
      unint64_t v27 = *((void *)v17 + 2);
      unint64_t v28 = *((void *)v17 + 3);
      swift_bridgeObjectRetain();
      if (v27 >= v28 >> 1)
      {
        sub_10040A868((char *)(v28 > 1), v27 + 1, 1);
        char v17 = v70;
      }
      *((void *)v17 + 2) = v27 + 1;
      int v29 = &v17[16 * v27];
      *((void *)v29 + 4) = v24;
      *((_DWORD *)v29 + 10) = v25;
      uint64_t v30 = sub_1000D3970(v18, v20, v69 & 1, v26);
      uint64_t v18 = v30;
      uint64_t v20 = v31;
      char v22 = v32 & 1;
      --v16;
      a1 = v26;
      if (!v16)
      {
        sub_100060FF0(v30, v31, v22);
        a2 = v63;
        uint64_t v8 = v64;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_10042C930((uint64_t)v17, a2);
  swift_bridgeObjectRelease();
  v71[0] = v33;
  uint64_t v34 = v66[3];
  if (v34)
  {
    uint64_t v35 = v8[3];
    swift_beginAccess();
    swift_beginAccess();
    while (1)
    {
      int64_t v36 = sub_10042FE64((uint64_t *)&v72, v71)[2];
      uint64_t v37 = v73[3];
      Swift::Int v38 = v37 + v36;
      if (__OFADD__(v37, v36)) {
        goto LABEL_64;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v40 = v73;
      if (v73[2] >= v38 && (isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if (!v36) {
          goto LABEL_38;
        }
      }
      else
      {
        sub_1004331E0(v38, 0, (uint64_t)&type metadata for RenameRollback.Step, &qword_100715258);
        uint64_t v40 = v73;
        if (!v36) {
          goto LABEL_38;
        }
      }
      uint64_t v41 = v40[3];
      uint64_t v42 = v41 + v36;
      if (__OFADD__(v41, v36)) {
        goto LABEL_65;
      }
      v40[3] = v42;
      if (v42 < v41) {
        goto LABEL_66;
      }
      uint64_t v43 = v40[4];
      uint64_t v44 = v43 + v41;
      uint64_t v45 = v40[2];
      if (v43 + v41 >= v45) {
        uint64_t v46 = v40[2];
      }
      else {
        uint64_t v46 = 0;
      }
      uint64_t v47 = v43 + v42;
      if (v47 >= v45) {
        uint64_t v48 = v40[2];
      }
      else {
        uint64_t v48 = 0;
      }
      int64_t v49 = v36;
      if (__OFSUB__(v42, v41)) {
        goto LABEL_67;
      }
      uint64_t v50 = v44 - v46;
      uint64_t v51 = v47 - v48;
      if (v44 - v46 < v47 - v48) {
        goto LABEL_36;
      }
      int64_t v49 = v45 - v50;
      if (__OFSUB__(v45, v50)) {
        goto LABEL_69;
      }
      if (v47 == v48)
      {
LABEL_36:
        if (v49 < v36) {
          goto LABEL_68;
        }
LABEL_37:
        swift_arrayInitWithCopy();
        goto LABEL_38;
      }
      if (v49 < 0) {
        goto LABEL_70;
      }
      if (v49) {
        swift_arrayInitWithCopy();
      }
      if (__OFADD__(v49, v36 - v49)) {
        goto LABEL_71;
      }
      if (v36 < (unint64_t)v49 || v36 < v49) {
        goto LABEL_72;
      }
      if (v36 != v49)
      {
        if (v51 < v36 - v49) {
          goto LABEL_73;
        }
        goto LABEL_37;
      }
LABEL_38:
      swift_bridgeObjectRelease();
      uint64_t v52 = v72[3];
      BOOL v54 = v52 == v34 && v73[3] == v35;
      if (v52)
      {
        uint64_t v35 = v73[3];
        uint64_t v34 = v72[3];
        if (!v54) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v55 = (void *)swift_retain();
  uint64_t v56 = sub_10042F66C(v55, a3, v71);
  swift_release();
  swift_beginAccess();
  uint64_t v57 = *(void *)(v56 + 16);
  uint64_t v58 = v73[3];
  Swift::Int v59 = v58 + v57;
  if (__OFADD__(v58, v57))
  {
LABEL_74:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  char v60 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = v73;
  if (v73[2] < v59 || (v60 & 1) == 0)
  {
    sub_1004331E0(v59, 0, (uint64_t)&type metadata for RenameRollback.Step, &qword_100715258);
    uint64_t v61 = v73;
  }
  sub_1004333B0((uint64_t)(v61 + 2), (uint64_t)(v61 + 5), v56 + 32, v57);
  swift_endAccess();
  swift_bridgeObjectRelease();
  *BOOL v65 = v73;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

void *sub_10042FE64(uint64_t *a1, uint64_t *a2)
{
  uint64_t v161 = a2;
  uint64_t v156 = 0;
  uint64_t v155 = sub_1005E08D0();
  uint64_t v3 = *(void *)(v155 - 8);
  __chkstk_darwin();
  uint64_t v154 = (char *)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E1C90();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v159 = (char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = *(void **)sub_1005E0BF0();
  uint64_t v167 = v166;
  if (*(void *)(*a1 + 24))
  {
    uint64_t v158 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v153 = (void (**)(char *, uint64_t))(v3 + 8);
    swift_retain_n();
    uint64_t v160 = a1;
    uint64_t v157 = v5;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100434DF4();
      }
      int v13 = (void *)*a1;
      uint64_t v14 = *(void *)(*a1 + 24);
      BOOL v126 = __OFSUB__(v14, 1);
      uint64_t v15 = v14 - 1;
      if (v126)
      {
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
        goto LABEL_176;
      }
      uint64_t v16 = v13[4] + v15;
      uint64_t v17 = v13[2];
      if (v16 < v17) {
        uint64_t v17 = 0;
      }
      uint64_t v18 = &v13[4 * (v16 - v17)];
      uint64_t v19 = v18[5];
      uint64_t v20 = *((unsigned int *)v18 + 12);
      uint64_t v21 = v18[7];
      uint64_t v22 = *((unsigned int *)v18 + 16);
      void v13[3] = v15;
      char v23 = sub_1003F5560(v19, v20, *v161);
      uint64_t v162 = v20;
      if (v23) {
        goto LABEL_37;
      }
      uint64_t v24 = v22;
      uint64_t v25 = v21;
      uint64_t v26 = *a1;
      int64_t v27 = *(void *)(*a1 + 32);
      int64_t v28 = *(void *)(*a1 + 24) + v27;
      if (*(void *)(*a1 + 16) < v28) {
        int64_t v28 = *(void *)(*a1 + 16);
      }
      uint64_t v169 = *a1;
      int64_t v170 = v27;
      int64_t v171 = v28;
      uint64_t v29 = v20 | (v20 << 32);
      uint64_t v30 = v26;
      while (1)
      {
        if (v27 != v28) {
          goto LABEL_19;
        }
        if ((sub_100434C94() & 1) == 0) {
          break;
        }
        uint64_t v30 = v169;
        int64_t v27 = v170;
LABEL_19:
        uint64_t v31 = v30 + 32 * v27++;
        int64_t v170 = v27;
        if ((*(unsigned int *)(v31 + 48) | ((unint64_t)*(unsigned int *)(v31 + 48) << 32)) == v29)
        {
          uint64_t v32 = *(void *)(v31 + 40);
          uint64_t v33 = *(void *)(v32 + 16);
          if (v33 == *(void *)(v19 + 16))
          {
            if (v33) {
              BOOL v34 = v32 == v19;
            }
            else {
              BOOL v34 = 1;
            }
            if (v34) {
              goto LABEL_36;
            }
            if (*(unsigned __int8 *)(v32 + 32) == *(unsigned __int8 *)(v19 + 32))
            {
              if (v33 == 1) {
                goto LABEL_36;
              }
              if (*(unsigned __int8 *)(v32 + 33) == *(unsigned __int8 *)(v19 + 33))
              {
                if (v33 == 2) {
                  goto LABEL_36;
                }
                if (*(unsigned __int8 *)(v32 + 34) == *(unsigned __int8 *)(v19 + 34))
                {
                  if (v33 == 3) {
                    goto LABEL_36;
                  }
                  if (*(unsigned __int8 *)(v32 + 35) == *(unsigned __int8 *)(v19 + 35))
                  {
                    uint64_t v35 = (unsigned __int8 *)(v32 + 36);
                    uint64_t v36 = v33 - 4;
                    uint64_t v37 = (unsigned __int8 *)(v19 + 36);
                    while (v36)
                    {
                      int v39 = *v35++;
                      int v38 = v39;
                      int v40 = *v37++;
                      --v36;
                      if (v38 != v40) {
                        goto LABEL_15;
                      }
                    }
LABEL_36:
                    swift_retain();
                    swift_release();
                    a1 = v160;
                    LODWORD(v20) = v162;
                    uint64_t v21 = v25;
                    uint64_t v22 = v24;
                    uint64_t v5 = v157;
LABEL_37:
                    if (sub_1004313BC(v19, v20, v21, v22, a1, &v166))
                    {
                      LODWORD(v152) = v22;
                      swift_bridgeObjectRetain();
                      uint64_t v41 = v21;
                      swift_bridgeObjectRetain();
                      while (1)
                      {
                        do
LABEL_40:
                          uint64_t v42 = 90000 * PCG32Random.next()();
                        while (v42 < 0x12DF0);
                        int v43 = HIDWORD(v42) + 10000;
                        v168._rawValue = (void *)sub_100431A48(v19);
                        uint64_t v169 = 45;
                        int64_t v170 = 0xE100000000000000;
                        int v165 = v43;
                        swift_bridgeObjectRetain();
                        v176._countAndFlagsBits = sub_1005E3230();
                        sub_1005E1E30(v176);
                        swift_bridgeObjectRelease();
                        uint64_t v44 = v159;
                        sub_1005E1C70();
                        uint64_t v45 = sub_1005E1C10();
                        unint64_t v47 = v46;
                        swift_bridgeObjectRelease();
                        (*v158)(v44, v5);
                        if (v47 >> 60 == 15) {
                          goto LABEL_198;
                        }
                        uint64_t v48 = _swiftEmptyArrayStorage;
                        switch(v47 >> 62)
                        {
                          case 1uLL:
                            if (__OFSUB__(HIDWORD(v45), v45)) {
                              goto LABEL_174;
                            }
                            uint64_t v49 = HIDWORD(v45) - (int)v45;
LABEL_47:
                            if (v49)
                            {
                              if (v49 >= 1)
                              {
                                sub_10000566C(&qword_1007144B8);
                                uint64_t v48 = (void *)swift_allocObject();
                                size_t v52 = j__malloc_size(v48);
                                v48[2] = v49;
                                v48[3] = 2 * v52 - 64;
                              }
                              sub_100008D24(v45, v47);
                              uint64_t v53 = v154;
                              uint64_t v54 = sub_1005E0830();
                              sub_100057EFC(v45, v47);
                              (*v153)(v53, v155);
                              BOOL v34 = v54 == v49;
                              a1 = v160;
                              uint64_t v5 = v157;
                              if (!v34) {
                                goto LABEL_173;
                              }
                            }
LABEL_52:
                            sub_100057EFC(v45, v47);
                            sub_100431C0C((uint64_t)v48);
                            NIOIMAPCore2::MailboxName v175 = MailboxName.init(_:)(v168);
                            rawValue = (char *)v175.bytes._rawValue;
                            Swift::UInt32 value = v175._hashValue._value;
                            swift_bridgeObjectRelease();
                            if ((sub_1003F5560((uint64_t)rawValue, value, *v161) & 1) == 0)
                            {
                              uint64_t v57 = *a1;
                              int64_t v58 = *(void *)(*a1 + 32);
                              int64_t v59 = *(void *)(*a1 + 24) + v58;
                              if (*(void *)(*a1 + 16) < v59) {
                                int64_t v59 = *(void *)(*a1 + 16);
                              }
                              uint64_t v169 = *a1;
                              int64_t v170 = v58;
                              int64_t v171 = v59;
                              uint64_t v60 = v57;
                              while (1)
                              {
                                if (v58 == v59)
                                {
                                  if ((sub_100434C94() & 1) == 0)
                                  {
                                    swift_retain();
                                    swift_bridgeObjectRelease();
                                    swift_release();
                                    swift_beginAccess();
                                    uint64_t v83 = v167[3];
                                    Swift::Int v84 = v83 + 1;
                                    if (!__OFADD__(v83, 1))
                                    {
                                      swift_bridgeObjectRetain_n();
                                      swift_bridgeObjectRetain();
                                      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                                      uint64_t v86 = v167;
                                      if (v167[2] < v84 || (isUniquelyReferenced_nonNull_native & 1) == 0)
                                      {
                                        sub_1004331E0(v84, 0, (uint64_t)&type metadata for RenameRollback.Step, &qword_100715258);
                                        uint64_t v86 = v167;
                                      }
                                      uint64_t v87 = v41;
                                      unsigned int v88 = v152;
                                      uint64_t v89 = v156;
                                      sub_100433FF4(v86 + 2, (uint64_t)(v86 + 5), v87, v152, (uint64_t)rawValue, value);
                                      uint64_t v156 = v89;
                                      swift_endAccess();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      uint64_t v90 = swift_bridgeObjectRetain();
                                      sub_1003F8378(v90, v88);
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRetain();
                                      sub_1004097BC((uint64_t)&v169, (uint64_t)rawValue, value);
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRetain();
                                      swift_bridgeObjectRelease();
                                      a1 = v160;
                                      uint64_t v91 = *(void *)(*v160 + 24);
                                      Swift::Int v92 = v91 + 1;
                                      if (!__OFADD__(v91, 1))
                                      {
                                        char v93 = swift_isUniquelyReferenced_nonNull_native();
                                        uint64_t v94 = (void *)*a1;
                                        if (*(void *)(*a1 + 16) >= v92 && (v93 & 1) != 0)
                                        {
                                          uint64_t v95 = v94[4];
                                          if (v95) {
                                            goto LABEL_98;
                                          }
LABEL_102:
                                          uint64_t v97 = v94[2];
                                          BOOL v126 = __OFSUB__(v97, 1);
                                          uint64_t v96 = v97 - 1;
                                          if (!v126) {
                                            goto LABEL_103;
                                          }
LABEL_184:
                                          __break(1u);
LABEL_185:
                                          __break(1u);
LABEL_186:
                                          __break(1u);
LABEL_187:
                                          __break(1u);
LABEL_188:
                                          __break(1u);
                                          goto LABEL_189;
                                        }
                                        sub_1004331E0(v92, 0, (uint64_t)&type metadata for MailboxToRename, &qword_100715230);
                                        uint64_t v94 = (void *)*a1;
                                        uint64_t v95 = *(void *)(*a1 + 32);
                                        if (!v95) {
                                          goto LABEL_102;
                                        }
LABEL_98:
                                        BOOL v126 = __OFSUB__(v95, 1);
                                        uint64_t v96 = v95 - 1;
                                        if (!v126)
                                        {
LABEL_103:
                                          uint64_t v98 = &v94[4 * v96];
                                          v98[5] = v19;
                                          *((_DWORD *)v98 + 12) = v162;
                                          v98[7] = rawValue;
                                          *((_DWORD *)v98 + 16) = value;
                                          v94[4] = v96;
                                          uint64_t v99 = v94[3];
                                          BOOL v126 = __OFADD__(v99, 1);
                                          uint64_t v100 = v99 + 1;
                                          if (!v126)
                                          {
                                            v94[3] = v100;
                                            swift_bridgeObjectRelease();
                                            goto LABEL_5;
                                          }
LABEL_181:
                                          __break(1u);
                                        }
                                        __break(1u);
LABEL_183:
                                        __break(1u);
                                        goto LABEL_184;
                                      }
LABEL_180:
                                      __break(1u);
                                      goto LABEL_181;
                                    }
LABEL_179:
                                    __break(1u);
                                    goto LABEL_180;
                                  }
                                  uint64_t v60 = v169;
                                  int64_t v58 = v170;
                                }
                                uint64_t v61 = v60 + 32 * v58++;
                                int64_t v170 = v58;
                                if ((*(unsigned int *)(v61 + 48) | ((unint64_t)*(unsigned int *)(v61 + 48) << 32)) == (value | ((unint64_t)value << 32)))
                                {
                                  char v62 = *(char **)(v61 + 40);
                                  uint64_t v63 = *((void *)v62 + 2);
                                  if (v63 == *((void *)rawValue + 2))
                                  {
                                    if (v63) {
                                      BOOL v64 = v62 == rawValue;
                                    }
                                    else {
                                      BOOL v64 = 1;
                                    }
                                    if (v64) {
                                      goto LABEL_79;
                                    }
                                    if (v62[32] == rawValue[32])
                                    {
                                      if (v63 == 1) {
                                        goto LABEL_79;
                                      }
                                      if (v62[33] == rawValue[33])
                                      {
                                        if (v63 == 2) {
                                          goto LABEL_79;
                                        }
                                        if (v62[34] == rawValue[34])
                                        {
                                          if (v63 == 3) {
                                            goto LABEL_79;
                                          }
                                          if (v62[35] == rawValue[35])
                                          {
                                            if (v63 == 4) {
                                              goto LABEL_79;
                                            }
                                            if (v62[36] == rawValue[36])
                                            {
                                              BOOL v65 = (unsigned __int8 *)(v62 + 37);
                                              uint64_t v66 = v63 - 5;
                                              uint64_t v67 = (unsigned __int8 *)(rawValue + 37);
                                              while (v66)
                                              {
                                                int v69 = *v65++;
                                                int v68 = v69;
                                                int v70 = *v67++;
                                                --v66;
                                                if (v68 != v70) {
                                                  goto LABEL_56;
                                                }
                                              }
LABEL_79:
                                              swift_retain();
                                              swift_bridgeObjectRelease();
                                              swift_release();
                                              a1 = v160;
                                              goto LABEL_40;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
LABEL_56:
                                int64_t v59 = v171;
                              }
                            }
                            swift_bridgeObjectRelease();
                            break;
                          case 2uLL:
                            uint64_t v51 = *(void *)(v45 + 16);
                            uint64_t v50 = *(void *)(v45 + 24);
                            uint64_t v49 = v50 - v51;
                            if (!__OFSUB__(v50, v51)) {
                              goto LABEL_47;
                            }
                            goto LABEL_175;
                          case 3uLL:
                            goto LABEL_52;
                          default:
                            uint64_t v49 = BYTE6(v47);
                            goto LABEL_47;
                        }
                      }
                    }
                    swift_beginAccess();
                    uint64_t v71 = v166[3];
                    Swift::Int v72 = v71 + 1;
                    if (!__OFADD__(v71, 1))
                    {
                      uint64_t v152 = v21;
                      char v73 = swift_isUniquelyReferenced_nonNull_native();
                      uint64_t v74 = (uint64_t)v166;
                      Swift::Int v75 = v166[2];
                      if (v75 >= v72 && (v73 & 1) != 0) {
                        goto LABEL_130;
                      }
                      if (v75 < v72)
                      {
                        char v76 = swift_isUniquelyReferenced_nonNull_native();
                        uint64_t v77 = (char *)v166;
                        sub_1005E0C00(v72, 0);
                        if (v76)
                        {
                          uint64_t v78 = *((void *)v77 + 3);
                          sub_10000566C(&qword_100715230);
                          uint64_t v74 = swift_allocObject();
                          int64_t v79 = j__malloc_size((const void *)v74);
                          uint64_t v80 = v79 - 40;
                          if (v79 < 40) {
                            uint64_t v80 = v79 - 9;
                          }
                          *(void *)(v74 + 16) = v80 >> 5;
                          *(void *)(v74 + 24) = v78;
                          *(void *)(v74 + 32) = 0;
                          if (v78 > 0)
                          {
                            swift_retain();
                            int v81 = v22;
                            uint64_t v22 = v156;
                            sub_100433C90(v74 + 16, (char *)(v74 + 40), (void *)v77 + 2, v77 + 40);
                            uint64_t v156 = v22;
                            LODWORD(v22) = v81;
                            *((void *)v77 + 3) = 0;
                            swift_release();
                          }
                          a1 = v160;
                          int v82 = v162;
                          swift_release();
                          uint64_t v166 = (void *)v74;
LABEL_132:
                          uint64_t v122 = *(void *)(v74 + 24);
                          uint64_t v123 = *(void *)(v74 + 32);
                          BOOL v126 = __OFADD__(v123, v122);
                          uint64_t v124 = v123 + v122;
                          if (!v126)
                          {
                            if (v122 < 0)
                            {
                              if (v124 < 0)
                              {
                                uint64_t v128 = *(void *)(v74 + 16);
                                BOOL v126 = __OFADD__(v124, v128);
                                v124 += v128;
                                if (v126) {
                                  goto LABEL_187;
                                }
                              }
                            }
                            else
                            {
                              uint64_t v125 = *(void *)(v74 + 16);
                              BOOL v126 = __OFSUB__(v124, v125);
                              uint64_t v127 = v124 - v125;
                              if (v127 < 0 == v126)
                              {
                                uint64_t v124 = v127;
                                if (v126) {
                                  goto LABEL_185;
                                }
                              }
                            }
                            uint64_t v129 = v74 + 32 * v124;
                            *(void *)(v129 + 40) = v19;
                            *(_DWORD *)(v129 + 48) = v82;
                            *(void *)(v129 + 56) = v152;
                            *(_DWORD *)(v129 + 64) = v22;
                            BOOL v126 = __OFADD__(v122, 1);
                            uint64_t v130 = v122 + 1;
                            if (!v126)
                            {
                              *(void *)(v74 + 24) = v130;
                              swift_endAccess();
                              goto LABEL_5;
                            }
LABEL_178:
                            __break(1u);
                            goto LABEL_179;
                          }
LABEL_177:
                          __break(1u);
                          goto LABEL_178;
                        }
                        sub_10000566C(&qword_100715230);
                        uint64_t v74 = swift_allocObject();
                        int64_t v113 = j__malloc_size((const void *)v74);
                        uint64_t v114 = v113 - 40;
                        if (v113 < 40) {
                          uint64_t v114 = v113 - 9;
                        }
                        uint64_t v115 = *((void *)v77 + 3);
                        *(void *)(v74 + 16) = v114 >> 5;
                        *(void *)(v74 + 24) = v115;
                        *(void *)(v74 + 32) = 0;
                        uint64_t v116 = *((void *)v77 + 3);
                        if (v116 <= 0) {
                          goto LABEL_148;
                        }
                        uint64_t v117 = *((void *)v77 + 2);
                        uint64_t v118 = *((void *)v77 + 4);
                        uint64_t v119 = v117 - v118;
                        if (!__OFSUB__(v117, v118))
                        {
                          long long v120 = v77 + 40;
                          if (v119 >= v116)
                          {
                            uint64_t v121 = 0;
                            uint64_t v151 = 0;
                            goto LABEL_143;
                          }
                          uint64_t v121 = v116 - v119;
                          if (!__OFSUB__(v116, v119))
                          {
                            uint64_t v151 = v120;
                            if (v119 >= 1) {
LABEL_143:
                            }
                              swift_arrayInitWithCopy();
                            if (v119 < v116 && v121 >= 1)
                            {
                              if (v151)
                              {
                                swift_arrayInitWithCopy();
                                goto LABEL_148;
                              }
LABEL_200:
                              __break(1u);
                              JUMPOUT(0x100430FDCLL);
                            }
LABEL_148:
                            swift_release();
                            uint64_t v166 = (void *)v74;
                            a1 = v160;
LABEL_131:
                            int v82 = v162;
                            goto LABEL_132;
                          }
LABEL_194:
                          __break(1u);
LABEL_195:
                          __break(1u);
                          goto LABEL_196;
                        }
LABEL_190:
                        __break(1u);
LABEL_191:
                        __break(1u);
LABEL_192:
                        __break(1u);
LABEL_193:
                        __break(1u);
                        goto LABEL_194;
                      }
                      sub_10000566C(&qword_100715230);
                      uint64_t v104 = swift_allocObject();
                      long long v105 = *(_OWORD *)(v74 + 24);
                      *(void *)(v104 + 16) = v75;
                      *(_OWORD *)(v104 + 24) = v105;
                      uint64_t v106 = *(void *)(v74 + 24);
                      if (v106 <= 0) {
                        goto LABEL_129;
                      }
                      uint64_t v107 = *(void *)(v74 + 16);
                      uint64_t v108 = *(void *)(v74 + 32);
                      uint64_t v109 = v107 - v108;
                      if (__OFSUB__(v107, v108)) {
                        goto LABEL_186;
                      }
                      uint64_t v110 = v74 + 40;
                      if (v109 >= v106)
                      {
                        uint64_t v111 = 0;
                        uint64_t v112 = 0;
                      }
                      else
                      {
                        uint64_t v111 = v106 - v109;
                        if (__OFSUB__(v106, v109)) {
                          goto LABEL_191;
                        }
                        uint64_t v112 = v110;
                        if (v109 < 1)
                        {
LABEL_125:
                          if (v109 < v106 && v111 >= 1)
                          {
                            if (v110)
                            {
                              swift_arrayInitWithCopy();
                              goto LABEL_129;
                            }
LABEL_199:
                            __break(1u);
                            goto LABEL_200;
                          }
LABEL_129:
                          swift_release();
                          uint64_t v166 = (void *)v104;
                          uint64_t v74 = v104;
LABEL_130:
                          a1 = v160;
                          goto LABEL_131;
                        }
                      }
                      swift_arrayInitWithCopy();
                      uint64_t v110 = v112;
                      goto LABEL_125;
                    }
LABEL_176:
                    __break(1u);
                    goto LABEL_177;
                  }
                }
              }
            }
          }
        }
LABEL_15:
        int64_t v28 = v171;
      }
      swift_retain();
      swift_release();
      swift_beginAccess();
      uint64_t v101 = v167[3];
      Swift::Int v102 = v101 + 1;
      if (__OFADD__(v101, 1)) {
        goto LABEL_183;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v103 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v8 = v167;
      if (v167[2] < v102 || (v103 & 1) == 0)
      {
        sub_1004331E0(v102, 0, (uint64_t)&type metadata for RenameRollback.Step, &qword_100715258);
        uint64_t v8 = v167;
      }
      uint64_t v9 = v25;
      unsigned int v10 = v162;
      uint64_t v11 = v156;
      sub_100433FF4(v8 + 2, (uint64_t)(v8 + 5), v9, v24, v19, v162);
      uint64_t v156 = v11;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = swift_bridgeObjectRetain();
      sub_1003F8378(v12, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1004097BC((uint64_t)&v169, v19, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v160;
      uint64_t v5 = v157;
LABEL_5:
      if (!*(void *)(*a1 + 24)) {
        goto LABEL_151;
      }
    }
  }
  swift_retain_n();
LABEL_151:
  swift_beginAccess();
  long long v131 = v166;
  swift_retain();
  if (sub_10043487C(v131 + 2, (uint64_t)(v131 + 5), (uint64_t **)a1))
  {
    uint64_t v132 = v131[3];
    if (v132 > 0)
    {
      uint64_t v133 = *(void *)(*a1 + 24);
      Swift::Int v134 = v133 + v132;
      if (__OFADD__(v133, v132)) {
        goto LABEL_192;
      }
      char v135 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v136 = *a1;
      if (*(void *)(*a1 + 16) < v134 || (v135 & 1) == 0)
      {
        sub_1004331E0(v134, 0, (uint64_t)&type metadata for MailboxToRename, &qword_100715230);
        uint64_t v136 = *a1;
      }
      sub_1004334B0((void *)(v136 + 16), v136 + 40, (uint64_t)&v168);
      sub_10043355C(v132, (uint64_t)&v169);
      sub_10001FDF0((uint64_t)&v171, (uint64_t)v172, &qword_100715260);
      sub_10001FDF0((uint64_t)v172, (uint64_t)v173, &qword_100715260);
      if (v174)
      {
        uint64_t v137 = v169;
        uint64_t v138 = v170;
        swift_retain();
        swift_retain();
        sub_1004339E8(v131, v137, v138);
LABEL_164:
        swift_release();
        uint64_t v144 = *(void *)(v136 + 24);
        BOOL v126 = __OFADD__(v144, v132);
        uint64_t v145 = v144 + v132;
        if (v126) {
          goto LABEL_193;
        }
        *(void *)(v136 + 24) = v145;
        swift_release();
        goto LABEL_166;
      }
      uint64_t v139 = v170;
      if (v170 < 0) {
        goto LABEL_195;
      }
      if (v131[3] < v170)
      {
LABEL_196:
        __break(1u);
      }
      else
      {
        uint64_t v140 = v173[0];
        uint64_t v141 = v173[1];
        uint64_t v142 = v169;
        swift_retain();
        swift_retain();
        sub_100433834(0, v139, v131, v142, v139);
        uint64_t v143 = v131[3];
        if (v143 >= v139)
        {
          swift_retain();
          sub_100433834(v139, v143, v131, v140, v141);
          swift_release();
          goto LABEL_164;
        }
      }
      __break(1u);
LABEL_198:
      __break(1u);
      goto LABEL_199;
    }
  }
LABEL_166:
  swift_release();
  swift_beginAccess();
  uint64_t v146 = v167;
  uint64_t v147 = v167[3];
  if (v147 < 0) {
    goto LABEL_188;
  }
  swift_retain();
  if (v147)
  {
    uint64_t v148 = (void *)sub_1005E2150();
    v148[2] = v147;
  }
  else
  {
    uint64_t v148 = _swiftEmptyArrayStorage;
  }
  uint64_t v164 = 0;
  v163[0] = (uint64_t)(v148 + 4);
  v163[1] = v147;
  sub_100434AA8(v146 + 2, (uint64_t)(v146 + 5), v163, &v164);
  if (v147 < v164)
  {
LABEL_189:
    __break(1u);
    goto LABEL_190;
  }
  v148[2] = v164;
  swift_release();
  swift_release();
  swift_release();
  return v148;
}

void *sub_100430FEC(uint64_t a1, int a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v36 = a4;
  int v35 = a2;
  uint64_t v34 = a1;
  uint64_t v31 = sub_1005E08D0();
  uint64_t v4 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E1C90();
  uint64_t v6 = __chkstk_darwin();
  uint64_t v33 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (void (**)(char *, uint64_t))(v8 + 8);
  int64_t v28 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v29 = v6;
  uint64_t v9 = v6;
  do
LABEL_2:
    uint64_t v10 = 90000 * PCG32Random.next()();
  while (v10 < 0x12DF0);
  int v11 = HIDWORD(v10) + 10000;
  uint64_t v12 = (void *)sub_100431A48(v34);
  v38[0] = 45;
  v38[1] = 0xE100000000000000;
  v39._rawValue = v12;
  int v37 = v11;
  swift_bridgeObjectRetain();
  v41._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v41);
  swift_bridgeObjectRelease();
  int v13 = v33;
  sub_1005E1C70();
  uint64_t v14 = sub_1005E1C10();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  (*v32)(v13, v9);
  if (v16 >> 60 == 15) {
    goto LABEL_19;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  switch(v16 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v14), v14)) {
        goto LABEL_17;
      }
      uint64_t v18 = HIDWORD(v14) - (int)v14;
LABEL_9:
      if (v18)
      {
        if (v18 >= 1)
        {
          sub_10000566C(&qword_1007144B8);
          uint64_t v17 = (void *)swift_allocObject();
          size_t v21 = j__malloc_size(v17);
          _OWORD v17[2] = v18;
          void v17[3] = 2 * v21 - 64;
        }
        sub_100008D24(v14, v16);
        uint64_t v22 = v30;
        uint64_t v23 = sub_1005E0830();
        sub_100057EFC(v14, v16);
        (*v28)(v22, v31);
        uint64_t v9 = v29;
        if (v23 != v18)
        {
          __break(1u);
LABEL_17:
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
          JUMPOUT(0x1004313ACLL);
        }
      }
LABEL_13:
      sub_100057EFC(v14, v16);
      sub_100431C0C((uint64_t)v17);
      NIOIMAPCore2::MailboxName v40 = MailboxName.init(_:)(v39);
      rawValue = v40.bytes._rawValue;
      Swift::UInt32 value = v40._hashValue._value;
      swift_bridgeObjectRelease();
      if (sub_1003F5560((uint64_t)rawValue, value, *v36))
      {
        swift_bridgeObjectRelease();
        goto LABEL_2;
      }
      swift_bridgeObjectRetain();
      sub_1004097BC((uint64_t)v38, (uint64_t)rawValue, value);
      swift_bridgeObjectRelease();
      return rawValue;
    case 2uLL:
      uint64_t v20 = *(void *)(v14 + 16);
      uint64_t v19 = *(void *)(v14 + 24);
      uint64_t v18 = v19 - v20;
      if (!__OFSUB__(v19, v20)) {
        goto LABEL_9;
      }
      goto LABEL_18;
    case 3uLL:
      goto LABEL_13;
    default:
      uint64_t v18 = BYTE6(v16);
      goto LABEL_9;
  }
}

uint64_t sub_1004313BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v72 = a5;
  int v74 = a4;
  uint64_t v12 = sub_1004350E4(a1, a2, a3, a4, a5, a6, a3, a4);
  int v73 = v13;
  uint64_t v15 = v14;
  int v67 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v12) {
    return 0;
  }
  int v69 = a6;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v70 = a3;
  uint64_t v71 = v12;
  char v62 = (unsigned __int8 *)(v12 + 36);
  uint64_t v63 = (unsigned __int8 *)(a3 + 36);
  uint64_t v68 = v15;
  uint64_t v64 = v15 + 36;
  uint64_t v65 = a1;
  int v66 = a2;
  unsigned int v17 = a2;
  while (1)
  {
    if (v17 != v74 || (uint64_t v18 = *(void *)(a3 + 16), v18 != *(void *)(a1 + 16)))
    {
LABEL_22:
      unint64_t v29 = v17 | ((unint64_t)v17 << 32);
      uint64_t v30 = *(void *)(*v72 + 32);
      uint64_t v31 = *(void *)(*v72 + 24) + v30;
      if (*(void *)(*v72 + 16) < v31) {
        uint64_t v31 = *(void *)(*v72 + 16);
      }
      uint64_t v75 = *v72;
      uint64_t v77 = *(void *)(*v72 + 32);
      uint64_t v79 = v31;
      uint64_t v32 = *v72;
      while (1)
      {
        if (v30 == v31)
        {
          if ((sub_100434C94() & 1) == 0)
          {
            swift_retain();
            swift_release();
            uint64_t v39 = *(void *)(*v69 + 32);
            uint64_t v40 = *(void *)(*v69 + 24) + v39;
            if (*(void *)(*v69 + 16) < v40) {
              uint64_t v40 = *(void *)(*v69 + 16);
            }
            uint64_t v76 = *v69;
            uint64_t v78 = *(void *)(*v69 + 32);
            uint64_t v80 = v40;
            uint64_t v41 = *v69;
            while (1)
            {
              if (v39 == v40)
              {
                if ((sub_100434C94() & 1) == 0)
                {
                  swift_retain();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  return 0;
                }
                uint64_t v41 = v76;
                uint64_t v39 = v78;
              }
              uint64_t v42 = v41 + 32 * v39++;
              uint64_t v78 = v39;
              uint64_t v43 = *(unsigned int *)(v42 + 64);
              if ((v43 | (v43 << 32)) == v29)
              {
                uint64_t v21 = *(void *)(v42 + 56);
                uint64_t v44 = *(void *)(v21 + 16);
                if (v44 == *(void *)(a1 + 16))
                {
                  uint64_t v20 = *(void *)(v42 + 40);
                  unsigned int v17 = *(_DWORD *)(v42 + 48);
                  if (!v44) {
                    goto LABEL_69;
                  }
                  if (v21 == a1)
                  {
                    uint64_t v21 = a1;
LABEL_69:
                    a3 = v70;
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_release();
                    LODWORD(v22) = v43;
                    goto LABEL_70;
                  }
                  if (*(unsigned __int8 *)(v21 + 32) == *(unsigned __int8 *)(a1 + 32))
                  {
                    if (v44 == 1) {
                      goto LABEL_69;
                    }
                    if (*(unsigned __int8 *)(v21 + 33) == *(unsigned __int8 *)(a1 + 33))
                    {
                      if (v44 == 2) {
                        goto LABEL_69;
                      }
                      if (*(unsigned __int8 *)(v21 + 34) == *(unsigned __int8 *)(a1 + 34))
                      {
                        if (v44 == 3) {
                          goto LABEL_69;
                        }
                        if (*(unsigned __int8 *)(v21 + 35) == *(unsigned __int8 *)(a1 + 35))
                        {
                          uint64_t v45 = 0;
                          uint64_t v46 = v44 - 4;
                          while (v46 != v45)
                          {
                            int v47 = *(unsigned __int8 *)(v21 + v45 + 36);
                            int v48 = *(unsigned __int8 *)(a1 + 36 + v45++);
                            if (v47 != v48) {
                              goto LABEL_47;
                            }
                          }
                          goto LABEL_69;
                        }
                      }
                    }
                  }
                }
              }
LABEL_47:
              uint64_t v40 = v80;
            }
          }
          uint64_t v32 = v75;
          uint64_t v30 = v77;
        }
        uint64_t v33 = v32 + 32 * v30++;
        uint64_t v77 = v30;
        uint64_t v22 = *(unsigned int *)(v33 + 64);
        if ((v22 | (v22 << 32)) == v29)
        {
          uint64_t v21 = *(void *)(v33 + 56);
          uint64_t v34 = *(void *)(v21 + 16);
          if (v34 == *(void *)(a1 + 16))
          {
            uint64_t v20 = *(void *)(v33 + 40);
            unsigned int v17 = *(_DWORD *)(v33 + 48);
            if (!v34) {
              goto LABEL_67;
            }
            if (v21 == a1)
            {
              uint64_t v21 = a1;
              goto LABEL_67;
            }
            if (*(unsigned __int8 *)(v21 + 32) == *(unsigned __int8 *)(a1 + 32))
            {
              if (v34 == 1) {
                goto LABEL_67;
              }
              if (*(unsigned __int8 *)(v21 + 33) == *(unsigned __int8 *)(a1 + 33))
              {
                if (v34 == 2) {
                  goto LABEL_67;
                }
                if (*(unsigned __int8 *)(v21 + 34) == *(unsigned __int8 *)(a1 + 34))
                {
                  if (v34 == 3) {
                    goto LABEL_67;
                  }
                  if (*(unsigned __int8 *)(v21 + 35) == *(unsigned __int8 *)(a1 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
LABEL_25:
        uint64_t v31 = v79;
      }
      uint64_t v35 = 0;
      uint64_t v36 = v34 - 4;
      while (v36 != v35)
      {
        int v37 = *(unsigned __int8 *)(v21 + v35 + 36);
        int v38 = *(unsigned __int8 *)(a1 + 36 + v35++);
        if (v37 != v38) {
          goto LABEL_25;
        }
      }
LABEL_67:
      a3 = v70;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_70;
    }
    if (v18) {
      BOOL v19 = a1 == a3;
    }
    else {
      BOOL v19 = 1;
    }
    if (!v19)
    {
      if (*(unsigned __int8 *)(a3 + 32) != *(unsigned __int8 *)(a1 + 32)) {
        goto LABEL_22;
      }
      if (v18 != 1)
      {
        if (*(unsigned __int8 *)(a3 + 33) != *(unsigned __int8 *)(a1 + 33)) {
          goto LABEL_22;
        }
        if (v18 != 2)
        {
          if (*(unsigned __int8 *)(a3 + 34) != *(unsigned __int8 *)(a1 + 34)) {
            goto LABEL_22;
          }
          if (v18 != 3)
          {
            if (*(unsigned __int8 *)(a3 + 35) != *(unsigned __int8 *)(a1 + 35)) {
              goto LABEL_22;
            }
            uint64_t v23 = (unsigned __int8 *)(a1 + 36);
            uint64_t v24 = v18 - 4;
            uint64_t v25 = v63;
            while (v24)
            {
              int v27 = *v25++;
              int v26 = v27;
              int v28 = *v23++;
              --v24;
              if (v26 != v28) {
                goto LABEL_22;
              }
            }
          }
        }
      }
    }
    uint64_t v20 = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned int v17 = v66;
    uint64_t v21 = a3;
    LODWORD(v22) = v74;
LABEL_70:
    if (v17 == v73)
    {
      uint64_t v49 = *(void *)(v20 + 16);
      if (v49 == *(void *)(v71 + 16))
      {
        if (v49 && v20 != v71)
        {
          if (*(unsigned __int8 *)(v20 + 32) != *(unsigned __int8 *)(v71 + 32)) {
            goto LABEL_3;
          }
          if (v49 != 1)
          {
            if (*(unsigned __int8 *)(v20 + 33) != *(unsigned __int8 *)(v71 + 33)) {
              goto LABEL_3;
            }
            if (v49 != 2)
            {
              if (*(unsigned __int8 *)(v20 + 34) != *(unsigned __int8 *)(v71 + 34)) {
                goto LABEL_3;
              }
              if (v49 != 3)
              {
                if (*(unsigned __int8 *)(v20 + 35) != *(unsigned __int8 *)(v71 + 35)) {
                  goto LABEL_3;
                }
                uint64_t v55 = (unsigned __int8 *)(v20 + 36);
                uint64_t v56 = v49 - 4;
                uint64_t v57 = v62;
                while (v56)
                {
                  int v59 = *v55++;
                  int v58 = v59;
                  int v60 = *v57++;
                  --v56;
                  if (v58 != v60) {
                    goto LABEL_3;
                  }
                }
              }
            }
          }
        }
        if (v22 == v67)
        {
          uint64_t v50 = *(void *)(v21 + 16);
          if (v50 == *(void *)(v68 + 16))
          {
            if (!v50 || v21 == v68) {
              goto LABEL_102;
            }
            if (*(unsigned __int8 *)(v21 + 32) == *(unsigned __int8 *)(v68 + 32))
            {
              if (v50 == 1) {
                goto LABEL_102;
              }
              if (*(unsigned __int8 *)(v21 + 33) == *(unsigned __int8 *)(v68 + 33))
              {
                if (v50 == 2) {
                  goto LABEL_102;
                }
                if (*(unsigned __int8 *)(v21 + 34) == *(unsigned __int8 *)(v68 + 34))
                {
                  if (v50 == 3) {
                    goto LABEL_102;
                  }
                  if (*(unsigned __int8 *)(v21 + 35) == *(unsigned __int8 *)(v68 + 35)) {
                    break;
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v20;
  }
  uint64_t v51 = 0;
  uint64_t v52 = v50 - 4;
  while (v52 != v51)
  {
    int v53 = *(unsigned __int8 *)(v21 + v51 + 36);
    int v54 = *(unsigned __int8 *)(v64 + v51++);
    if (v53 != v54) {
      goto LABEL_3;
    }
  }
LABEL_102:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_100431A48(uint64_t a1)
{
  uint64_t v1 = a1;
  int64_t v2 = *(void *)(a1 + 16);
  if ((unint64_t)v2 >= 6) {
    uint64_t v3 = v2 - 6;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = a1 + 32;
  uint64_t result = sub_100434F00(45, a1 + 32, v3, (2 * v2) | 1);
  if (v6) {
    goto LABEL_23;
  }
  uint64_t v7 = v2 - result;
  if (__OFSUB__(v2, result)) {
    goto LABEL_31;
  }
  if (v7 < 1) {
    goto LABEL_23;
  }
  int64_t v8 = result + 1;
  if (__OFADD__(result, 1)) {
    goto LABEL_32;
  }
  if (v2 < v8)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v8 < v3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v8 == v2) {
    goto LABEL_11;
  }
  if (v8 >= v2)
  {
    __break(1u);
    return result;
  }
  if (*(unsigned __int8 *)(v4 + v8) - 58 < 0xFFFFFFF6)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    return v1;
  }
  if (result + 2 != v2)
  {
    while (result + 2 < v2)
    {
      if (*(unsigned __int8 *)(v1 + 34 + result) - 58 < 0xFFFFFFF6) {
        goto LABEL_23;
      }
      if (v2 - 2 == ++result) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_11:
  unint64_t v9 = *(void *)(v1 + 16);
  BOOL v10 = v9 >= v7;
  uint64_t v11 = v9 - v7;
  if (v10) {
    uint64_t v3 = v11;
  }
  else {
    uint64_t v3 = 0;
  }
  sub_1005E3300();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = v12[2];
  swift_release();
  if (v13 == v3)
  {
    uint64_t v14 = (void *)swift_dynamicCastClass();
    if (!v14)
    {
      swift_unknownObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    goto LABEL_19;
  }
LABEL_35:
  swift_unknownObjectRelease();
  sub_100431F90(v1, v4, 0, (2 * v3) | 1);
LABEL_19:
  unint64_t v15 = (unint64_t)MailboxName.init(_:)((Swift::OpaquePointer)v14);
  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_100431C0C(uint64_t result)
{
  int64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = (uint64_t)sub_10040941C((char *)result, v11, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)memcpy((void *)(v3 + v7 + 32), (const void *)(v6 + 32), v2);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return result;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_100431CF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      sub_10000566C(&qword_100714968);
      uint64_t v7 = (void *)swift_allocObject();
      int64_t v8 = j__malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 25;
      }
      _OWORD v7[2] = v5;
      _OWORD v7[3] = 2 * (v9 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

void *sub_100431DC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100714968);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_100434338((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_100431EA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10000566C(&qword_100714940);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_100434534((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_10003BC80();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void sub_100431F90(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  int64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_9:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    else
    {
      sub_10000566C(&qword_1007144B8);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      _OWORD v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3)
      {
LABEL_5:
        memcpy(v8 + 4, (const void *)(a2 + a3), v5);
        return;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
}

Swift::Int sub_100432048(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int result = sub_1005E3210(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_155;
    }
    if (v4) {
      return sub_1004329BC(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_154;
  }
  Swift::Int v127 = result;
  uint64_t v125 = a1;
  if (v4 <= 1)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    Swift::Int v134 = (char *)&_swiftEmptyArrayStorage[4];
    if (v4 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      int64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      uint64_t v129 = v8;
      if (v12 >= 2)
      {
        uint64_t v118 = *v125;
        do
        {
          unint64_t v119 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_149;
          }
          if (!v118) {
            goto LABEL_162;
          }
          uint64_t v120 = *(void *)&v11[16 * v119 + 32];
          uint64_t v121 = *(void *)&v11[16 * v12 + 24];
          sub_100432BBC((char *)(v118 + 32 * v120), (char *)(v118 + 32 * *(void *)&v11[16 * v12 + 16]), v118 + 32 * v121, v134);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_150;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v11 = sub_1004330E8((uint64_t)v11);
          }
          if (v119 >= *((void *)v11 + 2)) {
            goto LABEL_151;
          }
          uint64_t v122 = &v11[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v11 + 2);
          if (v12 > v123) {
            goto LABEL_152;
          }
          memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v123 - v12));
          *((void *)v11 + 2) = v123 - 1;
          unint64_t v12 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      v129[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = (void *)sub_1005E2150();
    _OWORD v8[2] = v7;
    Swift::Int v134 = (char *)(v8 + 4);
  }
  uint64_t v129 = v8;
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v126 = *a1 + 48;
  int64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v131 = v4;
  uint64_t v135 = *a1;
LABEL_15:
  Swift::Int v13 = v9;
  Swift::Int v14 = v9 + 1;
  Swift::Int v132 = v9;
  if (v9 + 1 < v4)
  {
    uint64_t v128 = v11;
    uint64_t v15 = v2;
    uint64_t v16 = v10 + 32 * v14;
    uint64_t v17 = *(void *)v16;
    unsigned int v18 = *(_DWORD *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(unsigned int *)(v16 + 24);
    uint64_t v21 = v10 + 32 * v9;
    uint64_t v22 = *(void *)v21;
    unsigned int v23 = *(_DWORD *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = static MailboxName.stableOrderCompare(_:_:)(v19, v20, v24);
    type metadata accessor for ComparisonResult(0);
    if (v25 == -1)
    {
      BOOL v139 = 1;
    }
    else if (v25 == 1)
    {
      BOOL v139 = 0;
    }
    else
    {
      if (v25) {
        goto LABEL_163;
      }
      BOOL v139 = static MailboxName.stableOrder(_:_:)(v17, v18, v22, v23);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::Int v4 = v131;
    Swift::Int v13 = v132;
    Swift::Int v14 = v132 + 2;
    uint64_t v2 = v15;
    if (v132 + 2 < v131)
    {
      uint64_t v26 = v126 + 32 * v132;
      uint64_t v27 = v26;
      while (1)
      {
        Swift::Int v136 = v14;
        uint64_t v28 = *(void *)(v26 + 16);
        uint64_t v29 = *(void *)(v27 + 32);
        v27 += 32;
        unsigned int v30 = *(_DWORD *)(v26 + 24);
        uint64_t v31 = *(unsigned int *)(v26 + 40);
        uint64_t v32 = *(void *)(v26 - 16);
        unsigned int v33 = *(_DWORD *)(v26 - 8);
        uint64_t v34 = *(void *)v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v35 = static MailboxName.stableOrderCompare(_:_:)(v29, v31, v34);
        if (v35 == -1)
        {
          BOOL v36 = 1;
        }
        else if (v35 == 1)
        {
          BOOL v36 = 0;
        }
        else
        {
          if (v35) {
            goto LABEL_163;
          }
          BOOL v36 = static MailboxName.stableOrder(_:_:)(v28, v30, v32, v33);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v139 ^ v36)) {
          break;
        }
        Swift::Int v14 = v136 + 1;
        uint64_t v26 = v27;
        Swift::Int v4 = v131;
        if (v131 == v136 + 1)
        {
          Swift::Int v14 = v131;
          goto LABEL_34;
        }
      }
      Swift::Int v4 = v131;
      Swift::Int v14 = v136;
LABEL_34:
      Swift::Int v13 = v132;
    }
    int64_t v11 = v128;
    if (v139)
    {
      if (v14 < v13) {
        goto LABEL_156;
      }
      if (v13 < v14)
      {
        uint64_t v37 = 32 * v14 - 32;
        uint64_t v38 = 32 * v13;
        Swift::Int v39 = v14;
        Swift::Int v40 = v13;
        do
        {
          if (v40 != --v39)
          {
            if (!v135) {
              goto LABEL_161;
            }
            uint64_t v43 = (_OWORD *)(v135 + v38);
            uint64_t v44 = (_OWORD *)(v135 + v37);
            uint64_t v45 = *(void *)(v135 + v38);
            int v46 = *(_DWORD *)(v135 + v38 + 8);
            uint64_t v47 = *(void *)(v135 + v38 + 16);
            int v48 = *(_DWORD *)(v135 + v38 + 24);
            if (v38 != v37 || v43 >= v44 + 2)
            {
              long long v41 = v44[1];
              _OWORD *v43 = *v44;
              v43[1] = v41;
            }
            uint64_t v42 = v135 + v37;
            *(void *)uint64_t v42 = v45;
            *(_DWORD *)(v42 + 8) = v46;
            *(void *)(v42 + 16) = v47;
            *(_DWORD *)(v42 + 24) = v48;
          }
          ++v40;
          v37 -= 32;
          v38 += 32;
        }
        while (v40 < v39);
      }
    }
  }
  if (v14 >= v4) {
    goto LABEL_71;
  }
  if (__OFSUB__(v14, v13)) {
    goto LABEL_153;
  }
  if (v14 - v13 >= v127) {
    goto LABEL_71;
  }
  if (__OFADD__(v13, v127)) {
    goto LABEL_157;
  }
  if (v13 + v127 >= v4) {
    Swift::Int v49 = v4;
  }
  else {
    Swift::Int v49 = v13 + v127;
  }
  if (v49 >= v13)
  {
    if (v14 == v49) {
      goto LABEL_71;
    }
    uint64_t v124 = v2;
    type metadata accessor for ComparisonResult(0);
    uint64_t v50 = v135 + 32 * v14;
    Swift::Int v130 = v49;
LABEL_59:
    Swift::Int v52 = v13;
    uint64_t v133 = v50;
    uint64_t v53 = v50;
    Swift::Int v137 = v14;
    while (1)
    {
      uint64_t v54 = *(void *)v53;
      unsigned int v140 = *(_DWORD *)(v53 + 8);
      uint64_t v55 = *(void *)(v53 + 16);
      uint64_t v56 = *(unsigned int *)(v53 + 24);
      uint64_t v57 = *(void *)(v53 - 32);
      unsigned int v58 = *(_DWORD *)(v53 - 24);
      uint64_t v59 = *(void *)(v53 - 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v60 = static MailboxName.stableOrderCompare(_:_:)(v55, v56, v59);
      if (v60 == -1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v60)
        {
          if (v60 != 1) {
            goto LABEL_163;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_57:
          Swift::Int v51 = v137;
LABEL_58:
          Swift::Int v14 = v51 + 1;
          Swift::Int v13 = v132;
          uint64_t v50 = v133 + 32;
          if (v14 != v130) {
            goto LABEL_59;
          }
          Swift::Int v14 = v130;
          uint64_t v2 = v124;
LABEL_71:
          if (v14 < v13) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v11 = sub_100432FEC(0, *((void *)v11 + 2) + 1, 1, v11);
          }
          unint64_t v68 = *((void *)v11 + 2);
          unint64_t v67 = *((void *)v11 + 3);
          unint64_t v12 = v68 + 1;
          uint64_t v10 = v135;
          if (v68 >= v67 >> 1)
          {
            uint64_t v117 = sub_100432FEC((char *)(v67 > 1), v68 + 1, 1, v11);
            uint64_t v10 = v135;
            int64_t v11 = v117;
          }
          *((void *)v11 + 2) = v12;
          int v69 = v11 + 32;
          uint64_t v70 = &v11[16 * v68 + 32];
          *(void *)uint64_t v70 = v132;
          *((void *)v70 + 1) = v14;
          Swift::Int v138 = v14;
          if (v68)
          {
LABEL_77:
            unint64_t v71 = v12 - 1;
            if (v12 >= 4)
            {
              uint64_t v76 = &v69[16 * v12];
              uint64_t v77 = *((void *)v76 - 8);
              uint64_t v78 = *((void *)v76 - 7);
              BOOL v82 = __OFSUB__(v78, v77);
              uint64_t v79 = v78 - v77;
              if (v82) {
                goto LABEL_137;
              }
              uint64_t v81 = *((void *)v76 - 6);
              uint64_t v80 = *((void *)v76 - 5);
              BOOL v82 = __OFSUB__(v80, v81);
              uint64_t v74 = v80 - v81;
              char v75 = v82;
              if (v82) {
                goto LABEL_138;
              }
              unint64_t v83 = v12 - 2;
              Swift::Int v84 = &v69[16 * v12 - 32];
              uint64_t v86 = *(void *)v84;
              uint64_t v85 = *((void *)v84 + 1);
              BOOL v82 = __OFSUB__(v85, v86);
              uint64_t v87 = v85 - v86;
              if (v82) {
                goto LABEL_140;
              }
              BOOL v82 = __OFADD__(v74, v87);
              uint64_t v88 = v74 + v87;
              if (v82) {
                goto LABEL_143;
              }
              if (v88 >= v79)
              {
                uint64_t v106 = &v69[16 * v71];
                uint64_t v108 = *(void *)v106;
                uint64_t v107 = *((void *)v106 + 1);
                BOOL v82 = __OFSUB__(v107, v108);
                uint64_t v109 = v107 - v108;
                if (v82) {
                  goto LABEL_147;
                }
                BOOL v99 = v74 < v109;
              }
              else
              {
LABEL_90:
                if (v75) {
                  goto LABEL_139;
                }
                unint64_t v83 = v12 - 2;
                uint64_t v89 = &v69[16 * v12 - 32];
                uint64_t v91 = *(void *)v89;
                uint64_t v90 = *((void *)v89 + 1);
                BOOL v92 = __OFSUB__(v90, v91);
                uint64_t v93 = v90 - v91;
                char v94 = v92;
                if (v92) {
                  goto LABEL_142;
                }
                uint64_t v95 = &v69[16 * v71];
                uint64_t v97 = *(void *)v95;
                uint64_t v96 = *((void *)v95 + 1);
                BOOL v82 = __OFSUB__(v96, v97);
                uint64_t v98 = v96 - v97;
                if (v82) {
                  goto LABEL_145;
                }
                if (__OFADD__(v93, v98)) {
                  goto LABEL_146;
                }
                if (v93 + v98 < v74) {
                  goto LABEL_102;
                }
                BOOL v99 = v74 < v98;
              }
              if (v99) {
                unint64_t v71 = v83;
              }
            }
            else
            {
              if (v12 == 3)
              {
                uint64_t v73 = *((void *)v11 + 4);
                uint64_t v72 = *((void *)v11 + 5);
                BOOL v82 = __OFSUB__(v72, v73);
                uint64_t v74 = v72 - v73;
                char v75 = v82;
                goto LABEL_90;
              }
              uint64_t v100 = *((void *)v11 + 4);
              uint64_t v101 = *((void *)v11 + 5);
              BOOL v82 = __OFSUB__(v101, v100);
              uint64_t v93 = v101 - v100;
              char v94 = v82;
LABEL_102:
              if (v94) {
                goto LABEL_141;
              }
              Swift::Int v102 = &v69[16 * v71];
              uint64_t v104 = *(void *)v102;
              uint64_t v103 = *((void *)v102 + 1);
              BOOL v82 = __OFSUB__(v103, v104);
              uint64_t v105 = v103 - v104;
              if (v82) {
                goto LABEL_144;
              }
              if (v105 < v93) {
                goto LABEL_14;
              }
            }
            unint64_t v110 = v71 - 1;
            if (v71 - 1 >= v12)
            {
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
              break;
            }
            if (!v10) {
              goto LABEL_160;
            }
            uint64_t v111 = v11;
            uint64_t v112 = &v69[16 * v110];
            uint64_t v113 = *(void *)v112;
            uint64_t v114 = &v69[16 * v71];
            uint64_t v115 = *((void *)v114 + 1);
            sub_100432BBC((char *)(v10 + 32 * *(void *)v112), (char *)(v10 + 32 * *(void *)v114), v10 + 32 * v115, v134);
            if (v2) {
              goto LABEL_131;
            }
            if (v115 < v113) {
              goto LABEL_134;
            }
            if (v71 > *((void *)v111 + 2)) {
              goto LABEL_135;
            }
            *(void *)uint64_t v112 = v113;
            *(void *)&v69[16 * v110 + 8] = v115;
            unint64_t v116 = *((void *)v111 + 2);
            if (v71 >= v116) {
              goto LABEL_136;
            }
            int64_t v11 = v111;
            unint64_t v12 = v116 - 1;
            memmove(&v69[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
            *((void *)v11 + 2) = v116 - 1;
            uint64_t v10 = v135;
            if (v116 <= 2) {
              goto LABEL_14;
            }
            goto LABEL_77;
          }
          unint64_t v12 = 1;
LABEL_14:
          Swift::Int v4 = v131;
          Swift::Int v9 = v138;
          uint64_t v8 = v129;
          if (v138 >= v131) {
            goto LABEL_120;
          }
          goto LABEL_15;
        }
        BOOL v61 = static MailboxName.stableOrder(_:_:)(v54, v140, v57, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v61) {
          goto LABEL_57;
        }
      }
      Swift::Int v51 = v137;
      if (!v135) {
        goto LABEL_159;
      }
      uint64_t v62 = *(void *)v53;
      int v63 = *(_DWORD *)(v53 + 8);
      uint64_t v64 = *(void *)(v53 + 16);
      int v65 = *(_DWORD *)(v53 + 24);
      long long v66 = *(_OWORD *)(v53 - 16);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)(v53 - 32);
      *(_OWORD *)(v53 + 16) = v66;
      *(_DWORD *)(v53 - 24) = v63;
      *(void *)(v53 - 16) = v64;
      *(_DWORD *)(v53 - 8) = v65;
      *(void *)(v53 - 32) = v62;
      v53 -= 32;
      if (v137 == ++v52) {
        goto LABEL_58;
      }
    }
  }
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  Swift::Int result = sub_1005E3330();
  __break(1u);
  return result;
}

uint64_t sub_1004329BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v21 = result;
  uint64_t v24 = a3;
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    type metadata accessor for ComparisonResult(0);
    uint64_t v23 = v4;
    uint64_t v5 = v4 + 32 * v24;
LABEL_5:
    uint64_t v6 = v21;
    uint64_t v22 = v5;
    while (1)
    {
      uint64_t v7 = *(void *)v5;
      unsigned int v25 = *(_DWORD *)(v5 + 8);
      uint64_t v8 = *(void *)(v5 + 16);
      uint64_t v9 = *(unsigned int *)(v5 + 24);
      uint64_t v10 = *(void *)(v5 - 32);
      unsigned int v11 = *(_DWORD *)(v5 - 24);
      uint64_t v12 = *(void *)(v5 - 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = static MailboxName.stableOrderCompare(_:_:)(v8, v9, v12);
      if (v13 == -1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int result = swift_bridgeObjectRelease();
      }
      else
      {
        if (v13)
        {
          if (v13 != 1) {
            goto LABEL_17;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          Swift::Int result = swift_bridgeObjectRelease();
LABEL_4:
          uint64_t v5 = v22 + 32;
          if (++v24 == a2) {
            return result;
          }
          goto LABEL_5;
        }
        BOOL v14 = static MailboxName.stableOrder(_:_:)(v7, v25, v10, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        Swift::Int result = swift_bridgeObjectRelease();
        if (!v14) {
          goto LABEL_4;
        }
      }
      if (!v23) {
        break;
      }
      uint64_t v15 = *(void *)v5;
      int v16 = *(_DWORD *)(v5 + 8);
      uint64_t v17 = *(void *)(v5 + 16);
      int v18 = *(_DWORD *)(v5 + 24);
      long long v19 = *(_OWORD *)(v5 - 16);
      *(_OWORD *)uint64_t v5 = *(_OWORD *)(v5 - 32);
      *(_OWORD *)(v5 + 16) = v19;
      *(_DWORD *)(v5 - 24) = v16;
      *(void *)(v5 - 16) = v17;
      *(_DWORD *)(v5 - 8) = v18;
      *(void *)(v5 - 32) = v15;
      v5 -= 32;
      if (v24 == ++v6) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_17:
    Swift::Int result = sub_1005E3330();
    __break(1u);
  }
  return result;
}

uint64_t sub_100432BBC(char *__src, char *__dst, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = __dst;
  uint64_t v6 = __src;
  int64_t v7 = __dst - __src;
  int64_t v8 = __dst - __src + 31;
  if (__dst - __src >= 0) {
    int64_t v8 = __dst - __src;
  }
  uint64_t v9 = v8 >> 5;
  uint64_t v10 = a3 - (void)__dst;
  uint64_t v11 = a3 - (void)__dst + 31;
  if ((uint64_t)(a3 - (void)__dst) >= 0) {
    uint64_t v11 = a3 - (void)__dst;
  }
  uint64_t v12 = v11 >> 5;
  if (v9 >= v12)
  {
    uint64_t v29 = 32 * v12;
    if (a4 != __dst || &__dst[v29] <= a4) {
      memmove(a4, __dst, 32 * v12);
    }
    BOOL v14 = &v4[v29];
    if (v6 >= v5 || v10 < 32) {
      goto LABEL_52;
    }
    type metadata accessor for ComparisonResult(0);
    unsigned int v30 = (char *)(a3 - 32);
    int v46 = v6;
    uint64_t v47 = v4;
    while (1)
    {
      unint64_t v51 = (unint64_t)v14;
      uint64_t v53 = v5;
      uint64_t v31 = v14 - 32;
      uint64_t v32 = *((void *)v14 - 4);
      unsigned int v49 = *((_DWORD *)v14 - 6);
      uint64_t v33 = *((void *)v14 - 2);
      uint64_t v34 = *((unsigned int *)v14 - 2);
      uint64_t v35 = v5 - 32;
      uint64_t v36 = *((void *)v5 - 4);
      unsigned int v37 = *((_DWORD *)v35 + 2);
      uint64_t v38 = *((void *)v35 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = static MailboxName.stableOrderCompare(_:_:)(v33, v34, v38);
      if (v39 == -1)
      {
        BOOL v40 = 1;
      }
      else if (v39 == 1)
      {
        BOOL v40 = 0;
      }
      else
      {
        if (v39)
        {
LABEL_56:
          uint64_t result = sub_1005E3330();
          __break(1u);
          return result;
        }
        BOOL v40 = static MailboxName.stableOrder(_:_:)(v32, v49, v36, v37);
      }
      long long v41 = v30 + 32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40)
      {
        unint64_t v42 = (unint64_t)v46;
        if (v41 == v53)
        {
          uint64_t v5 = v35;
          uint64_t v4 = v47;
          BOOL v14 = (char *)v51;
          if (v30 < v53) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v5 = v35;
          uint64_t v4 = v47;
          BOOL v14 = (char *)v51;
        }
      }
      else
      {
        uint64_t v5 = v53;
        unint64_t v42 = (unint64_t)v46;
        uint64_t v35 = v31;
        if (v41 == (char *)v51)
        {
          BOOL v14 = v31;
          uint64_t v4 = v47;
          if ((unint64_t)v30 < v51) {
            goto LABEL_48;
          }
        }
        else
        {
          BOOL v14 = v31;
          uint64_t v4 = v47;
        }
      }
      long long v43 = *((_OWORD *)v35 + 1);
      *(_OWORD *)unsigned int v30 = *(_OWORD *)v35;
      *((_OWORD *)v30 + 1) = v43;
LABEL_48:
      if ((unint64_t)v5 > v42)
      {
        v30 -= 32;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_52;
    }
  }
  size_t v13 = 32 * v9;
  if (a4 != __src || &__src[v13] <= a4) {
    memmove(a4, __src, v13);
  }
  BOOL v14 = &v4[v13];
  if ((unint64_t)v5 < a3 && v7 >= 32)
  {
    type metadata accessor for ComparisonResult(0);
    unint64_t v50 = (unint64_t)v14;
    while (1)
    {
      uint64_t v15 = v6;
      uint64_t v16 = *(void *)v5;
      unsigned int v17 = *((_DWORD *)v5 + 2);
      uint64_t v18 = *((void *)v5 + 2);
      Swift::Int v52 = v5;
      uint64_t v19 = *((unsigned int *)v5 + 6);
      uint64_t v20 = *(void *)v4;
      unsigned int v21 = *((_DWORD *)v4 + 2);
      uint64_t v22 = *((void *)v4 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = static MailboxName.stableOrderCompare(_:_:)(v18, v19, v22);
      if (v23 == 1) {
        break;
      }
      if (v23)
      {
        if (v23 != -1) {
          goto LABEL_56;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unsigned int v25 = v15;
      }
      else
      {
        BOOL v24 = static MailboxName.stableOrder(_:_:)(v16, v17, v20, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unsigned int v25 = v15;
        if (!v24) {
          goto LABEL_17;
        }
      }
      uint64_t v26 = v52;
      uint64_t v5 = v52 + 32;
      if (v25 != v52) {
        goto LABEL_18;
      }
LABEL_19:
      uint64_t v6 = v25 + 32;
      BOOL v14 = (char *)v50;
      if ((unint64_t)v4 >= v50 || (unint64_t)v5 >= a3) {
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v25 = v15;
LABEL_17:
    uint64_t v26 = v4;
    BOOL v27 = v25 == v4;
    v4 += 32;
    uint64_t v5 = v52;
    if (v27) {
      goto LABEL_19;
    }
LABEL_18:
    long long v28 = *((_OWORD *)v26 + 1);
    *(_OWORD *)unsigned int v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v28;
    goto LABEL_19;
  }
LABEL_51:
  uint64_t v5 = v6;
LABEL_52:
  size_t v44 = (v14 - v4 + (v14 - v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
  if (v5 != v4 || v5 >= &v4[v44]) {
    memmove(v5, v4, v44);
  }
  return 1;
}

char *sub_100432FEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715290);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1004330E8(uint64_t a1)
{
  return sub_100432FEC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1004330FC(uint64_t a1)
{
  return sub_10040A888(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100433110(uint64_t a1)
{
  return sub_10040A98C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100433124(uint64_t a1)
{
  return sub_10040B008(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100433138(uint64_t a1)
{
  return sub_10040ABA4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_10043314C(uint64_t a1)
{
  return sub_10040ADE8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100433160(uint64_t a1)
{
  return sub_10040B208(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100433174(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    unint64_t v6 = *(void *)(a4 + 16);
    if (!v6)
    {
LABEL_5:
      *(void *)(v5 + 8) = a3;
      return result;
    }
    if (v6 <= a3)
    {
      uint64_t result = swift_arrayInitWithCopy();
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004331E0(Swift::Int a1, char a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *v4;
  int64_t v7 = (Swift::Int *)(*v4 + 16);
  Swift::Int v8 = *v7;
  if (*v7 >= a1)
  {
    sub_10000566C(a4);
    uint64_t v14 = swift_allocObject();
    long long v17 = *(_OWORD *)(v6 + 24);
    *(void *)(v14 + 16) = v8;
    *(_OWORD *)(v14 + 24) = v17;
    if ((uint64_t)v17 >= 1) {
      sub_100433EA0(v14 + 16, v14 + 40, v7, v6 + 40);
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    sub_1005E0C00(a1, a2 & 1);
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v13 = *(void *)(v12 + 24);
      sub_10000566C(a4);
      uint64_t v14 = swift_allocObject();
      int64_t v15 = j__malloc_size((const void *)v14);
      uint64_t v16 = v15 - 40;
      if (v15 < 40) {
        uint64_t v16 = v15 - 9;
      }
      *(void *)(v14 + 16) = v16 >> 5;
      *(void *)(v14 + 24) = v13;
      *(void *)(v14 + 32) = 0;
      if (v13 >= 1)
      {
        swift_retain();
        sub_100433C90(v14 + 16, (char *)(v14 + 40), (void *)(v12 + 16), (char *)(v12 + 40));
        *(void *)(v12 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      sub_10000566C(a4);
      uint64_t v14 = swift_allocObject();
      int64_t v18 = j__malloc_size((const void *)v14);
      uint64_t v19 = v18 - 40;
      if (v18 < 40) {
        uint64_t v19 = v18 - 9;
      }
      uint64_t v20 = *(void *)(v12 + 24);
      *(void *)(v14 + 16) = v19 >> 5;
      *(void *)(v14 + 24) = v20;
      *(void *)(v14 + 32) = 0;
      if (v20 >= 1) {
        sub_100433DC0(v14 + 16, v14 + 40, (void *)(v12 + 16), v12 + 40);
      }
    }
  }
  uint64_t result = swift_release();
  uint64_t *v4 = v14;
  return result;
}

uint64_t sub_1004333B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 < 1) {
    return result;
  }
  int64_t v7 = (uint64_t *)result;
  uint64_t result = *(void *)(result + 8);
  uint64_t v8 = result + a4;
  if (__OFADD__(result, a4))
  {
    __break(1u);
    goto LABEL_9;
  }
  v7[1] = v8;
  if (v8 < result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  sub_100433F7C(result, v8, v7, a2, (uint64_t)&v11);
  long long v15 = v11;
  sub_10001FDF0((uint64_t)&v15, (uint64_t)v16, &qword_100715270);
  sub_10001FDF0((uint64_t)v16, (uint64_t)&v22, &qword_100715270);
  uint64_t v9 = v12;
  uint64_t v10 = v13;
  if (v14 & 1 | (v13 == 0))
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v17 = v22;
  uint64_t v18 = *((void *)&v15 + 1);
  uint64_t v19 = v9;
  uint64_t v20 = v10;
  char v21 = v14 & 1 | (v13 == 0);
  return sub_1004336A4(a3, a4, &qword_100715248, &qword_100715250);
}

void *sub_1004334B0@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = result[1];
  uint64_t v3 = result[2];
  uint64_t v5 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = *result;
    BOOL v7 = __OFSUB__(v5, *result);
    if (v5 < *result) {
      goto LABEL_9;
    }
    v5 -= *result;
    if (!v7) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v6 = *result;
  if (v5 < 0)
  {
    BOOL v7 = __OFADD__(v5, v6);
    v5 += v6;
    if (v7) {
      goto LABEL_26;
    }
  }
LABEL_9:
  if (v4 >= v6) {
    goto LABEL_14;
  }
  if (v5 < v3)
  {
    uint64_t v8 = v3 - v5;
    if (!__OFSUB__(v3, v5)) {
      goto LABEL_15;
    }
    __break(1u);
LABEL_14:
    uint64_t v8 = 0;
LABEL_15:
    uint64_t v9 = 0;
    uint64_t v3 = 0;
    BOOL v10 = 1;
LABEL_22:
    *(void *)a3 = a2 + 32 * v5;
    *(void *)(a3 + 8) = v8;
    *(void *)(a3 + 16) = v9;
    *(void *)(a3 + 24) = v3;
    *(unsigned char *)(a3 + 32) = v10;
    return result;
  }
  uint64_t v8 = v6 - v5;
  if (!__OFSUB__(v6, v5))
  {
    if ((v3 & 0x8000000000000000) == 0 && v6 >= v5)
    {
      BOOL v10 = v3 == 0;
      if (v3) {
        uint64_t v9 = a2;
      }
      else {
        uint64_t v9 = 0;
      }
      goto LABEL_22;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10043355C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  char v9 = *((unsigned char *)v2 + 32);
  sub_10001FDF0((uint64_t)(v2 + 2), (uint64_t)v19, &qword_100715260);
  uint64_t result = sub_10001FDF0((uint64_t)v19, (uint64_t)v23, &qword_100715260);
  if (v25) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v24;
  }
  uint64_t v12 = v2[1];
  BOOL v13 = __OFADD__(v12, v11);
  uint64_t v14 = v12 + v11;
  if (v13)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v14 <= a1)
  {
    char v18 = v9 & 1;
    a1 = v6;
    goto LABEL_26;
  }
  uint64_t v5 = *v2;
  if (v12 >= a1)
  {
    if (a1 < 0)
    {
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    char v18 = 1;
LABEL_26:
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = a1;
    *(void *)(a2 + 16) = v7;
    *(void *)(a2 + 24) = v8;
    *(unsigned char *)(a2 + 32) = v18;
    return result;
  }
  uint64_t result = sub_10001FDF0((uint64_t)v19, (uint64_t)&v20, &qword_100715260);
  if ((v22 & 1) == 0)
  {
    uint64_t v15 = a1 - v12;
    if (!__OFSUB__(a1, v12))
    {
      if ((v15 & 0x8000000000000000) == 0)
      {
        if (v21 >= v15) {
          uint64_t v16 = a1 - v12;
        }
        else {
          uint64_t v16 = v21;
        }
        if (v21 >= 0) {
          uint64_t v17 = v16;
        }
        else {
          uint64_t v17 = a1 - v12;
        }
        if (v15) {
          uint64_t v8 = v17;
        }
        else {
          uint64_t v8 = 0;
        }
        char v18 = v8 == 0;
        if (v8) {
          uint64_t v7 = v20;
        }
        else {
          uint64_t v7 = 0;
        }
        a1 = v12;
        goto LABEL_26;
      }
      goto LABEL_30;
    }
    goto LABEL_28;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1004336A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  sub_10001FDF0((uint64_t)(v4 + 1), (uint64_t)v15, a3);
  uint64_t result = sub_10001FDF0((uint64_t)v15, (uint64_t)&v16, a3);
  if ((v17 & 1) == 0)
  {
    long long v18 = v16;
    long long v13 = *v4;
    uint64_t v10 = *((void *)&v13 + 1);
    if ((*((void *)&v13 + 1) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if (a1)
      {
        if (*((void *)&v13 + 1))
        {
          sub_10001FDF0((uint64_t)&v13, (uint64_t)v14, a4);
          sub_10001FDF0((uint64_t)v14, (uint64_t)&v19, a4);
          uint64_t result = v19;
          if (v19) {
            uint64_t result = swift_arrayInitWithCopy();
          }
        }
      }
      uint64_t v11 = a2;
      if (!__OFADD__(v10, a2 - v10))
      {
        if (a2 >= v10)
        {
          if (a1)
          {
            uint64_t v12 = a2 - v10;
            if (v11 != v10)
            {
              if (*((uint64_t *)&v18 + 1) >= v12)
              {
                sub_10001FDF0((uint64_t)&v18, (uint64_t)v20, a4);
                sub_10001FDF0((uint64_t)v20, (uint64_t)&v21, a4);
                uint64_t result = v21;
                if (!v21) {
                  return result;
                }
                return swift_arrayInitWithCopy();
              }
LABEL_24:
              __break(1u);
              return result;
            }
          }
          return result;
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  if (a1 && a2)
  {
    long long v18 = *v4;
    if (*((uint64_t *)&v18 + 1) >= a2)
    {
      sub_10001FDF0((uint64_t)&v18, (uint64_t)&v21, a4);
      sub_10001FDF0((uint64_t)&v21, (uint64_t)&v13, a4);
      uint64_t result = v13;
      if (!(void)v13) {
        return result;
      }
      return swift_arrayInitWithCopy();
    }
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_100433834(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v10 = a3 + 2;
  uint64_t v11 = (uint64_t)(a3 + 5);
  swift_retain();
  uint64_t v12 = sub_100434760(v10, v11, (void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_100435070);
  LOBYTE(v11) = v13;
  swift_release();
  if ((v11 & 1) == 0) {
    return (uint64_t)v12;
  }
  swift_retain();
  uint64_t result = sub_100434088(&v18, a4, a5, a1, a2, a3);
  uint64_t v12 = (void *)result;
  if (v21 == v19)
  {
    sub_1000852BC(0);
LABEL_11:
    swift_release();
    return (uint64_t)v12;
  }
  if (v21 >= v19 || v21 < v18) {
    goto LABEL_14;
  }
  if (v21 < 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v21 < v20[3])
  {
    uint64_t v15 = v20[4] + v21;
    uint64_t v16 = v20[2];
    if (v15 < v16) {
      uint64_t v16 = 0;
    }
    uint64_t v17 = v20[4 * (v15 - v16) + 5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000852BC(v17);
    if (!v17) {
      goto LABEL_11;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

void *sub_1004339E8(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = result + 2;
  uint64_t v5 = result[2];
  uint64_t v8 = result[3];
  uint64_t v7 = result[4];
  uint64_t v9 = v8 + v7;
  if (v5 >= v8 + v7)
  {
    uint64_t v16 = result[3];
    if (v9 >= v7)
    {
      if (!__OFSUB__(v9, v7))
      {
        if (!v8) {
          return (void *)v16;
        }
        if (v8 <= a3)
        {
          if (a2) {
            swift_arrayInitWithCopy();
          }
          return (void *)v16;
        }
        goto LABEL_52;
      }
      goto LABEL_49;
    }
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  BOOL v10 = __OFSUB__(v5, v7);
  uint64_t v11 = v5 - v7;
  if (v10)
  {
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v12 = (uint64_t)result;
  if (v11 < v8)
  {
    uint64_t v14 = v8 - v11;
    if (__OFSUB__(v8, v11))
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    uint64_t v15 = v11;
    char v13 = result + 5;
  }
  else
  {
    char v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = result[3];
  }
  v31[0] = v13;
  v31[1] = v14;
  BOOL v32 = v11 >= v8;
  if (v15 >= a3) {
    uint64_t v16 = a3;
  }
  else {
    uint64_t v16 = v15;
  }
  if (v16 < 0) {
    goto LABEL_50;
  }
  if (v16) {
    uint64_t v17 = a3;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v17 >= v15) {
    uint64_t v18 = v15;
  }
  else {
    uint64_t v18 = v17;
  }
  if (v18 < 0) {
    goto LABEL_51;
  }
  sub_100434A14(0, v18, (uint64_t)&result[4 * v7 + 5], v15, 0, v16, a2);
  if (v15 >= a3
    || (sub_10001FDF0((uint64_t)v31, (uint64_t)v33, &qword_100715268),
        uint64_t result = (void *)sub_10001FDF0((uint64_t)v33, (uint64_t)&v34, &qword_100715268),
        (v36 & 1) != 0))
  {
    uint64_t v19 = sub_1004353E4(v6, v16, v12);
    uint64_t v21 = v20;
    uint64_t v23 = v22;
LABEL_40:
    swift_retain();
    if (v21 != v23 || (sub_100434C94() & 1) != 0)
    {
      uint64_t v30 = v19[4 * v21 + 5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000852BC(v30);
      if (!v30)
      {
LABEL_45:
        swift_release();
        return (void *)v16;
      }
      __break(1u);
    }
    sub_1000852BC(0);
    goto LABEL_45;
  }
  uint64_t v24 = a3 - v16;
  if (a3 - v16 >= v35) {
    uint64_t v25 = v35;
  }
  else {
    uint64_t v25 = a3 - v16;
  }
  uint64_t v26 = v16 + v25;
  if (__OFADD__(v16, v25)) {
    goto LABEL_54;
  }
  if (v26 < v16)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v25 < 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (!v25) {
    uint64_t v24 = 0;
  }
  if (v24 >= v35) {
    uint64_t v27 = v35;
  }
  else {
    uint64_t v27 = v24;
  }
  if ((v27 & 0x8000000000000000) == 0)
  {
    sub_100434A14(0, v27, v34, v35, v16, v16 + v25, a2);
    uint64_t v19 = sub_1004353E4(v6, v26, v12);
    uint64_t v21 = v28;
    uint64_t v23 = v29;
    uint64_t v16 = v26;
    goto LABEL_40;
  }
LABEL_57:
  __break(1u);
  return result;
}

void sub_100433C90(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      BOOL v10 = a4;
      goto LABEL_6;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  BOOL v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    uint64_t v14 = v10;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v16 = &a4[32 * v4];
  size_t v17 = 32 * v9;
  if (v16 != __dst || &v16[v17] <= __dst) {
    memmove(__dst, v16, v17);
  }
LABEL_18:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v18 = &__dst[32 * v9];
  if (v18 != v14 || v18 >= &v14[32 * v15])
  {
    memmove(v18, v14, 32 * v15);
  }
}

uint64_t sub_100433DC0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = a3[1];
  if (v5 < v6)
  {
    uint64_t v7 = v6 - v5;
    if (!__OFSUB__(v6, v5))
    {
      uint64_t v8 = a4;
      if (v5 < 1) {
        goto LABEL_9;
      }
      goto LABEL_7;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = 0;
  uint64_t v7 = 0;
  if (v6 >= 1)
  {
LABEL_7:
    if (a4)
    {
      uint64_t result = swift_arrayInitWithCopy();
      goto LABEL_9;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_9:
  if (v5 < v6 && v7 >= 1)
  {
    if (v8) {
      return swift_arrayInitWithCopy();
    }
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_100433EA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = a3[1];
  if (v5 >= v6)
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    if (v6 < 1) {
      goto LABEL_9;
    }
LABEL_7:
    if (a4)
    {
      uint64_t result = swift_arrayInitWithCopy();
      goto LABEL_9;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = a4;
  if (v5 >= 1) {
    goto LABEL_7;
  }
LABEL_9:
  if (v5 < v6 && v7 >= 1)
  {
    if (v8) {
      return swift_arrayInitWithCopy();
    }
LABEL_19:
    __break(1u);
  }
  return result;
}

uint64_t sub_100433F7C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = v5 + result;
  uint64_t v7 = *a3;
  if (v5 + result >= *a3) {
    uint64_t v8 = *a3;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v5 + a2;
  if (v5 + a2 >= v7) {
    uint64_t v10 = *a3;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = v6 - v8;
    uint64_t v13 = v9 - v10;
    if (v11) {
      BOOL v14 = v12 < v13;
    }
    else {
      BOOL v14 = 1;
    }
    int v15 = v14;
    if (v15 == 1)
    {
      uint64_t v16 = 0;
      uint64_t v13 = 0;
LABEL_18:
      *(void *)a5 = a4 + 32 * v12;
      *(void *)(a5 + 8) = v11;
      *(void *)(a5 + 16) = v16;
      *(void *)(a5 + 24) = v13;
      *(unsigned char *)(a5 + 32) = v15;
      return result;
    }
    uint64_t v11 = v7 - v12;
    if (!__OFSUB__(v7, v12))
    {
      uint64_t v16 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

void *sub_100433FF4(void *result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6 = result[1];
  uint64_t v7 = result[2];
  BOOL v9 = __OFADD__(v7, v6);
  uint64_t v8 = v7 + v6;
  if (!v9)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      BOOL v9 = __OFSUB__(v8, *result);
      if (v8 < *result || (v8 -= *result, !v9))
      {
LABEL_9:
        uint64_t v10 = a2 + 32 * v8;
        *(void *)uint64_t v10 = a3;
        *(_DWORD *)(v10 + 8) = a4;
        *(void *)(v10 + 16) = a5;
        *(_DWORD *)(v10 + 24) = a6;
        BOOL v9 = __OFADD__(v6, 1);
        uint64_t v11 = v6 + 1;
        if (!v9)
        {
          result[1] = v11;
          swift_bridgeObjectRetain();
          return (void *)swift_bridgeObjectRetain();
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v8 < 0)
    {
      BOOL v9 = __OFADD__(v8, *result);
      v8 += *result;
      if (v9) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_100434088(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = a6 + 2;
  uint64_t v11 = (uint64_t)(a6 + 5);
  swift_retain();
  sub_1004347E8(v10, v11, (void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_1004350C4);
  uint64_t v13 = v12;
  LOBYTE(v11) = v14;
  uint64_t result = swift_release();
  if ((v11 & 1) == 0)
  {
    uint64_t v6 = a4 + v13;
    if (!__OFADD__(a4, v13))
    {
      uint64_t v16 = a5;
      size_t v17 = a6;
LABEL_26:
      *a1 = a4;
      a1[1] = v16;
      a1[2] = (uint64_t)v17;
      a1[3] = v6;
      return v13;
    }
    goto LABEL_29;
  }
  uint64_t v16 = a5;
  size_t v17 = a6;
  if (!a2)
  {
LABEL_8:
    uint64_t v13 = 0;
    uint64_t v6 = a4;
    goto LABEL_26;
  }
  if (!a3)
  {
    uint64_t v6 = a4;
    uint64_t v13 = 0;
    goto LABEL_26;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (a5 != a4)
    {
      uint64_t v28 = a3;
      if (a5 <= a4)
      {
LABEL_23:
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = v28;
        goto LABEL_26;
      }
      uint64_t v18 = 0;
      uint64_t v20 = a6[3];
      uint64_t v19 = a6[4];
      uint64_t v21 = a6[2];
      if (v20 <= a4) {
        uint64_t v20 = a4;
      }
      uint64_t v30 = v20 - a4;
      uint64_t v29 = v19 + a4;
      uint64_t v22 = 4 * (v19 + a4);
      while ((a4 & 0x8000000000000000) == 0)
      {
        if (v30 == v18) {
          goto LABEL_28;
        }
        if (v29 + v18 >= v21) {
          uint64_t v23 = v21;
        }
        else {
          uint64_t v23 = 0;
        }
        uint64_t v24 = &a6[v22 + -4 * v23];
        uint64_t v25 = v24[5];
        uint64_t v26 = v24[7];
        int v27 = *((_DWORD *)v24 + 16);
        LODWORD(v24) = *((_DWORD *)v24 + 12);
        uint64_t v6 = a4 + v18 + 1;
        *(void *)a2 = v25;
        *(_DWORD *)(a2 + 8) = v24;
        *(void *)(a2 + 16) = v26;
        *(_DWORD *)(a2 + 24) = v27;
        if (v28 - 1 == v18) {
          goto LABEL_24;
        }
        if (!(a4 - a5 + 1 + v18))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v6 = a5;
          uint64_t v13 = a5 - a4;
          goto LABEL_26;
        }
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRetain();
        if (v6 >= a4)
        {
          ++v18;
          v22 += 4;
          a2 += 32;
          if (v6 < a5) {
            continue;
          }
        }
        goto LABEL_23;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    goto LABEL_8;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1004342B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 && a4)
  {
    if (a2 >= a4) {
      uint64_t v5 = a4;
    }
    else {
      uint64_t v5 = a2;
    }
    swift_arrayInitWithCopy();
    a1 += 32 * v5;
  }
  return a1;
}

uint64_t sub_100434338(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    _OWORD v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 48) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100434534(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    _OWORD v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 32 * v16;
    uint64_t v21 = *(void *)v20;
    int v22 = *(_DWORD *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    LODWORD(v20) = *(_DWORD *)(v20 + 24);
    *(void *)uint64_t v11 = v21;
    *(_DWORD *)(v11 + 8) = v22;
    *(void *)(v11 + 16) = v23;
    *(_DWORD *)(v11 + 24) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 32;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_100434760(void *result, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, void))
{
  uint64_t v4 = result[2];
  uint64_t v5 = result[1] + v4;
  if (*result < v5) {
    return 0;
  }
  if (v5 < v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (__OFSUB__(v5, v4))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t result = a3(&v6, a2 + 32 * v4, result[1]);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

void *sub_1004347E8(void *result, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, void))
{
  uint64_t v4 = result[2];
  uint64_t v5 = result[1] + v4;
  if (*result < v5) {
    return 0;
  }
  if (v5 < v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (__OFSUB__(v5, v4))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t result = a3(&v6, a2 + 32 * v4, result[1]);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t *sub_10043487C(uint64_t *result, uint64_t a2, uint64_t **a3)
{
  uint64_t v3 = result[2];
  uint64_t v4 = *result;
  uint64_t v5 = result[1] + v3;
  if (*result < v5) {
    return (uint64_t *)(v4 < v5);
  }
  uint64_t v6 = result[1];
  if (v5 < v3)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(v5, v3))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = *a3;
  uint64_t v8 = (*a3)[3];
  Swift::Int v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (*a3)[2] >= v9 && (isUniquelyReferenced_nonNull_native)
  {
    if (v6 < 1) {
      return (uint64_t *)(v4 < v5);
    }
  }
  else
  {
    sub_1004331E0(v9, 0, (uint64_t)&type metadata for MailboxToRename, &qword_100715230);
    if (v6 < 1) {
      return (uint64_t *)(v4 < v5);
    }
  }
  int64_t v12 = *a3;
  uint64_t result = (uint64_t *)(*a3)[3];
  uint64_t v13 = (uint64_t)result + v6;
  if (__OFADD__(result, v6)) {
    goto LABEL_19;
  }
  v12[3] = v13;
  if (v13 >= (uint64_t)result)
  {
    sub_100433F7C((uint64_t)result, v13, v12 + 2, (uint64_t)(v12 + 5), (uint64_t)&v16);
    long long v20 = v16;
    sub_10001FDF0((uint64_t)&v20, (uint64_t)v21, &qword_100715280);
    sub_10001FDF0((uint64_t)v21, (uint64_t)&v27, &qword_100715280);
    uint64_t v14 = v17;
    uint64_t v15 = v18;
    if (v19 & 1 | (v18 == 0))
    {
      uint64_t v14 = 0;
      uint64_t v15 = 0;
    }
    uint64_t v22 = v27;
    uint64_t v23 = *((void *)&v20 + 1);
    uint64_t v24 = v14;
    uint64_t v25 = v15;
    char v26 = v19 & 1 | (v18 == 0);
    sub_1004336A4(a2 + 32 * v3, v5 - v3, &qword_100715260, &qword_100715288);
    return (uint64_t *)(v4 < v5);
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_100434A14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7 + 32 * a5;
  if (!a7) {
    uint64_t v7 = 0;
  }
  if (__OFADD__(result, a2 - result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2 < result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a3)
  {
    uint64_t v9 = a2 - result;
    if (a2 != result)
    {
      if (a6 - a5 < v9)
      {
LABEL_16:
        __break(1u);
        return result;
      }
      if (v7) {
        swift_arrayInitWithCopy();
      }
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t result = a5 + v9;
  if (__OFADD__(a5, v9))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

void *sub_100434AA8(void *result, uint64_t a2, uint64_t *a3, void *a4)
{
  uint64_t v4 = result[2];
  uint64_t v5 = *result - v4;
  if (__OFSUB__(*result, v4))
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v8 = result[1];
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (__OFSUB__(v8, v5))
    {
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v11 = *result - v4;
    uint64_t v9 = a2;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = result[1];
  }
  *(void *)&long long v16 = a2 + 32 * v4;
  *((void *)&v16 + 1) = v11;
  v17[0] = v9;
  v17[1] = v10;
  BOOL v18 = v5 >= v8;
  long long v20 = v16;
  uint64_t v12 = v11;
  if (v11 < 0) {
    goto LABEL_26;
  }
  uint64_t v13 = *a3;
  sub_10001FDF0((uint64_t)&v20, (uint64_t)v21, &qword_100715270);
  uint64_t result = (void *)sub_10001FDF0((uint64_t)v21, (uint64_t)&v22, &qword_100715270);
  if (v22 && v12 && v13) {
    uint64_t result = (void *)swift_arrayInitWithCopy();
  }
  if (__OFADD__(*a4, v12)) {
    goto LABEL_27;
  }
  *a4 += v12;
  sub_10001FDF0((uint64_t)v17, (uint64_t)v19, &qword_100715278);
  uint64_t result = (void *)sub_10001FDF0((uint64_t)v19, (uint64_t)&v23, &qword_100715278);
  if (v24) {
    return result;
  }
  long long v25 = v23;
  uint64_t v14 = *((void *)&v23 + 1);
  if (__OFADD__(v12, *((void *)&v23 + 1))) {
    goto LABEL_29;
  }
  if (v12 + *((void *)&v23 + 1) < v12)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    __break(1u);
    return result;
  }
  if (*a3) {
    uint64_t v15 = *a3 + 32 * v12;
  }
  else {
    uint64_t v15 = 0;
  }
  sub_10001FDF0((uint64_t)&v25, (uint64_t)v26, &qword_100715270);
  uint64_t result = (void *)sub_10001FDF0((uint64_t)v26, (uint64_t)&v27, &qword_100715270);
  if (v27 && v14)
  {
    if (v15) {
      uint64_t result = (void *)swift_arrayInitWithCopy();
    }
  }
  if (__OFADD__(*a4, v14)) {
    goto LABEL_31;
  }
  *a4 += v14;
  return result;
}

uint64_t sub_100434C94()
{
  uint64_t v1 = *v0;
  uint64_t v3 = *(void *)(*v0 + 24);
  uint64_t v2 = *(void *)(*v0 + 32);
  BOOL v6 = __OFADD__(v2, v3);
  uint64_t v4 = v2 + v3;
  if (v6)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 0)
  {
LABEL_7:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    uint64_t v7 = *(void *)(v1 + 16);
    BOOL v6 = __OFADD__(v4, v7);
    v4 += v7;
    if (!v6) {
      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v5 = *(void *)(v1 + 16);
  BOOL v6 = __OFSUB__(v4, v5);
  uint64_t v1 = v4 - v5;
  if (v1 < 0 == v6)
  {
    uint64_t v4 = v1;
    if (v6)
    {
      __break(1u);
      goto LABEL_7;
    }
  }
LABEL_9:
  if (!v4 || v4 == v0[1]) {
    return 0;
  }
  v0[1] = 0;
  v0[2] = v4;
  return 1;
}

void *sub_100434CFC@<X0>(void *result@<X0>, void *a2@<X2>, void *(*a3)(long long *__return_ptr, void *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  BOOL v8 = __OFSUB__(v7, *a2);
  uint64_t v9 = v7 - *a2;
  if (v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v8 = __OFADD__(v6, v9);
  uint64_t v10 = v6 + v9;
  if (v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = v10 - v6;
  if (v10 < v6)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = &result[4 * v6];
  if (result) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t result = a3(&v15, v13, v11);
  if (!v4)
  {
    uint64_t v14 = v16;
    *(_OWORD *)a4 = v15;
    *(void *)(a4 + 16) = v14;
  }
  return result;
}

void *sub_100434D7C@<X0>(void *result@<X0>, void *a2@<X2>, void *(*a3)(uint64_t *__return_ptr, void *, uint64_t)@<X3>, void *a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  BOOL v8 = __OFSUB__(v7, *a2);
  uint64_t v9 = v7 - *a2;
  if (v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v8 = __OFADD__(v6, v9);
  uint64_t v10 = v6 + v9;
  if (v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = v10 - v6;
  if (v10 < v6)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = &result[4 * v6];
  if (result) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t result = a3(&v14, v13, v11);
  if (!v4) {
    *a4 = v14;
  }
  return result;
}

uint64_t sub_100434DF4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t *)(*v0 + 16);
  uint64_t v3 = *v2;
  sub_10000566C(&qword_100715230);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1) {
    sub_100433EA0(v4 + 16, v4 + 40, v2, v1 + 40);
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v4;
  return result;
}

BOOL _s16IMAP2Persistence14RenameRollbackO4StepO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return a2 == a6 && sub_100357CFC(a1, a5) && a4 == a8 && sub_100357CFC(a3, a7);
}

uint64_t sub_100434F00(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v4 = a4 >> 1;
  if (a4 >> 1 == a3) {
    return 0;
  }
  if ((uint64_t)(a4 >> 1) > a3)
  {
    if (*(unsigned __int8 *)(a2 + a3) == result) {
      return a3;
    }
    int64_t v5 = a3 + 1;
    while (1)
    {
      if (v4 == v5) {
        return 0;
      }
      if (v5 >= v4) {
        break;
      }
      int v6 = *(unsigned __int8 *)(a2 + v5++);
      if (v6 == result) {
        return v5 - 1;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for RenameRollback()
{
  return &type metadata for RenameRollback;
}

ValueMetadata *type metadata accessor for RenameRollback.Step()
{
  return &type metadata for RenameRollback.Step;
}

unint64_t sub_100434FA0()
{
  unint64_t result = qword_100715238;
  if (!qword_100715238)
  {
    sub_10000744C(&qword_100715240);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715238);
  }
  return result;
}

uint64_t sub_100434FFC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (!result)
  {
    uint64_t v5 = 0;
    goto LABEL_7;
  }
  uint64_t v5 = a2;
  if (!a2)
  {
LABEL_7:
    *a3 = v5;
    return result;
  }
  if (*(void *)(v3 + 24) >= a2)
  {
    unint64_t result = *(void *)(v3 + 16);
    if (result) {
      unint64_t result = swift_arrayInitWithCopy();
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void *sub_100435070@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_100434D7C(a1, *(void **)(v2 + 16), *(void *(**)(uint64_t *__return_ptr, void *, uint64_t))(v2 + 24), a2);
}

uint64_t sub_100435090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1004342B8(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24));
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
  }
  return result;
}

void *sub_1004350C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100434CFC(a1, *(void **)(v2 + 16), *(void *(**)(long long *__return_ptr, void *, uint64_t))(v2 + 24), a2);
}

uint64_t sub_1004350E4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, uint64_t a7, unsigned int a8)
{
  if (a2 == a8)
  {
    uint64_t v12 = a1;
    if (sub_100357CFC(a1, a7))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v12;
    }
  }
  unint64_t v13 = a8 | ((unint64_t)a8 << 32);
  uint64_t v14 = *(void *)(*a5 + 32);
  uint64_t v15 = *(void *)(*a5 + 24) + v14;
  if (*(void *)(*a5 + 16) < v15) {
    uint64_t v15 = *(void *)(*a5 + 16);
  }
  uint64_t v36 = *a5;
  uint64_t v37 = *(void *)(*a5 + 32);
  uint64_t v38 = v15;
  uint64_t v16 = *a5;
  while (1)
  {
    if (v14 != v15) {
      goto LABEL_11;
    }
    if ((sub_100434C94() & 1) == 0) {
      break;
    }
    uint64_t v16 = v36;
    uint64_t v14 = v37;
LABEL_11:
    uint64_t v17 = v16 + 32 * v14++;
    uint64_t v37 = v14;
    if ((*(unsigned int *)(v17 + 48) | ((unint64_t)*(unsigned int *)(v17 + 48) << 32)) == v13)
    {
      uint64_t v12 = *(void *)(v17 + 40);
      uint64_t v18 = *(void *)(v12 + 16);
      if (v18 == *(void *)(a7 + 16))
      {
        if (!v18) {
          goto LABEL_41;
        }
        if (v12 == a7)
        {
          uint64_t v12 = a7;
          goto LABEL_41;
        }
        if (*(unsigned __int8 *)(v12 + 32) == *(unsigned __int8 *)(a7 + 32))
        {
          if (v18 == 1) {
            goto LABEL_41;
          }
          if (*(unsigned __int8 *)(v12 + 33) == *(unsigned __int8 *)(a7 + 33))
          {
            uint64_t v19 = 0;
            uint64_t v20 = v18 - 2;
            while (v20 != v19)
            {
              int v21 = *(unsigned __int8 *)(v12 + v19 + 34);
              int v22 = *(unsigned __int8 *)(a7 + 34 + v19++);
              if (v21 != v22) {
                goto LABEL_7;
              }
            }
            goto LABEL_41;
          }
        }
      }
    }
LABEL_7:
    uint64_t v15 = v38;
  }
  swift_retain();
  swift_release();
  swift_beginAccess();
  long long v23 = (void *)*a6;
  uint64_t v24 = v23[4];
  uint64_t v25 = v23[3] + v24;
  if (v23[2] < v25) {
    uint64_t v25 = v23[2];
  }
  uint64_t v34 = v23[4];
  uint64_t v35 = v25;
  char v26 = v23;
  while (1)
  {
    if (v24 == v25)
    {
      if ((sub_100434C94() & 1) == 0)
      {
        swift_retain();
        swift_release();
        return 0;
      }
      char v26 = v23;
      uint64_t v24 = v34;
    }
    uint64_t v27 = &v26[4 * v24++];
    uint64_t v34 = v24;
    if ((*((unsigned int *)v27 + 12) | ((unint64_t)*((unsigned int *)v27 + 12) << 32)) == v13)
    {
      uint64_t v12 = v27[5];
      uint64_t v28 = *(void *)(v12 + 16);
      if (v28 == *(void *)(a7 + 16))
      {
        if (!v28) {
          goto LABEL_41;
        }
        if (v12 == a7)
        {
          uint64_t v12 = a7;
          goto LABEL_41;
        }
        if (*(unsigned __int8 *)(v12 + 32) == *(unsigned __int8 *)(a7 + 32))
        {
          if (v28 == 1) {
            goto LABEL_41;
          }
          if (*(unsigned __int8 *)(v12 + 33) == *(unsigned __int8 *)(a7 + 33)) {
            break;
          }
        }
      }
    }
LABEL_25:
    uint64_t v25 = v35;
  }
  uint64_t v29 = 0;
  uint64_t v30 = v28 - 2;
  while (v30 != v29)
  {
    int v31 = *(unsigned __int8 *)(v12 + v29 + 34);
    int v32 = *(unsigned __int8 *)(a7 + 34 + v29++);
    if (v31 != v32) {
      goto LABEL_25;
    }
  }
LABEL_41:
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  return v12;
}

uint64_t *sub_1004353E4(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result[1];
  uint64_t v3 = result[2];
  uint64_t v5 = *result;
  if (v4 == a2) {
    return (uint64_t *)a3;
  }
  uint64_t v6 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      BOOL v7 = __OFSUB__(v6, v5);
      if (v6 < v5) {
        return (uint64_t *)a3;
      }
      v6 -= v5;
      if (!v7) {
        return (uint64_t *)a3;
      }
      __break(1u);
    }
    if ((v6 & 0x8000000000000000) == 0 || !__OFADD__(v6, v5)) {
      return (uint64_t *)a3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100435454(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ConnectionStatus.Error(0);
  __chkstk_darwin();
  uint64_t v5 = (unsigned __int8 *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10000566C(&qword_100714688);
  __chkstk_darwin();
  BOOL v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Activity.MailboxStatus(0);
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  __chkstk_darwin();
  unsigned int v58 = (unsigned __int8 *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v59 = (unsigned __int8 *)&v53 - v10;
  __chkstk_darwin();
  uint64_t v66 = (uint64_t)&v53 - v11;
  __chkstk_darwin();
  unint64_t v13 = (char *)&v53 - v12;
  sub_10000566C(&qword_1007152C8);
  __chkstk_darwin();
  uint64_t v15 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v53 - v16);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v63 = 0;
  uint64_t v60 = a1;
  BOOL v61 = v13;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v55 = v5;
  uint64_t v56 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v57 = (unint64_t)(v19 + 63) >> 6;
  int64_t v54 = v57 - 1;
  while (2)
  {
    if (!v21)
    {
      int64_t v29 = v63 + 1;
      if (__OFADD__(v63, 1))
      {
        __break(1u);
LABEL_56:
        __break(1u);
        JUMPOUT(0x100435BD0);
      }
      if (v29 >= v57) {
        goto LABEL_28;
      }
      unint64_t v30 = *(void *)(v56 + 8 * v29);
      if (v30) {
        goto LABEL_14;
      }
      int64_t v31 = v63 + 2;
      ++v63;
      if (v29 + 1 >= v57) {
        goto LABEL_28;
      }
      unint64_t v30 = *(void *)(v56 + 8 * v31);
      if (!v30)
      {
        int64_t v63 = v29 + 1;
        if (v29 + 2 >= v57) {
          goto LABEL_28;
        }
        unint64_t v30 = *(void *)(v56 + 8 * (v29 + 2));
        if (v30)
        {
          v29 += 2;
          goto LABEL_14;
        }
        int64_t v31 = v29 + 3;
        int64_t v63 = v29 + 2;
        if (v29 + 3 >= v57) {
          goto LABEL_28;
        }
        unint64_t v30 = *(void *)(v56 + 8 * v31);
        if (!v30)
        {
          while (1)
          {
            int64_t v29 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_56;
            }
            if (v29 >= v57) {
              break;
            }
            unint64_t v30 = *(void *)(v56 + 8 * v29);
            ++v31;
            if (v30) {
              goto LABEL_14;
            }
          }
          int64_t v63 = v54;
LABEL_28:
          uint64_t v32 = sub_10000566C(&qword_1007152D0);
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v15, 1, 1, v32);
          unint64_t v21 = 0;
          goto LABEL_29;
        }
      }
      int64_t v29 = v31;
LABEL_14:
      unint64_t v21 = (v30 - 1) & v30;
      unint64_t v23 = __clz(__rbit64(v30)) + (v29 << 6);
      int64_t v63 = v29;
      goto LABEL_10;
    }
    unint64_t v22 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    unint64_t v23 = v22 | (v63 << 6);
LABEL_10:
    uint64_t v24 = (uint64_t *)(*(void *)(v60 + 48) + 16 * v23);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(void *)(v60 + 56) + *(void *)(v64 + 72) * v23;
    uint64_t v28 = sub_10000566C(&qword_1007152D0);
    sub_1004398D8(v27, (uint64_t)v15 + *(int *)(v28 + 48));
    *uint64_t v15 = v25;
    v15[1] = v26;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 0, 1, v28);
    swift_bridgeObjectRetain();
LABEL_29:
    sub_10001FDF0((uint64_t)v15, (uint64_t)v17, &qword_1007152C8);
    uint64_t v33 = sub_10000566C(&qword_1007152D0);
    uint64_t v34 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v17, 1, v33) == 1) {
      return v34;
    }
    uint64_t v35 = (uint64_t)v17 + *(int *)(v33 + 48);
    uint64_t v36 = *v17;
    Swift::UInt v37 = v17[1];
    sub_10043999C(v35, (uint64_t)v13, type metadata accessor for Activity.MailboxStatus);
    unint64_t v38 = sub_1003F643C(v36, v37);
    char v40 = v39;
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0) {
      goto LABEL_52;
    }
    uint64_t v41 = v66;
    sub_1004398D8(*(void *)(a2 + 56) + *(void *)(v64 + 72) * v38, v66);
    unint64_t v42 = &v7[*(int *)(v62 + 48)];
    sub_1004398D8(v41, (uint64_t)v7);
    sub_1004398D8((uint64_t)v13, (uint64_t)v42);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unsigned int v49 = v58;
        sub_1004398D8((uint64_t)v7, (uint64_t)v58);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_10043993C((uint64_t)v49, type metadata accessor for ConnectionStatus.Error);
LABEL_50:
          sub_100007A48((uint64_t)v7, &qword_100714688);
          goto LABEL_51;
        }
        unint64_t v50 = v55;
        sub_10043999C((uint64_t)v42, (uint64_t)v55, type metadata accessor for ConnectionStatus.Error);
        BOOL v51 = _s16IMAP2Persistence16ConnectionStatusO5ErrorV23__derived_struct_equalsySbAE_AEtFZ_0(v49, v50);
        sub_10043993C((uint64_t)v49, type metadata accessor for ConnectionStatus.Error);
        sub_10043993C((uint64_t)v50, type metadata accessor for ConnectionStatus.Error);
        if (!v51) {
          goto LABEL_47;
        }
        goto LABEL_7;
      case 2u:
        if (swift_getEnumCaseMultiPayload() != 2) {
          goto LABEL_50;
        }
        goto LABEL_7;
      case 3u:
        if (swift_getEnumCaseMultiPayload() == 3) {
          goto LABEL_7;
        }
        goto LABEL_50;
      default:
        long long v43 = v59;
        sub_1004398D8((uint64_t)v7, (uint64_t)v59);
        uint64_t v45 = *((void *)v43 + 1);
        uint64_t v44 = *((void *)v43 + 2);
        unsigned __int8 v46 = v43[24];
        int v47 = v43[25];
        if (swift_getEnumCaseMultiPayload()) {
          goto LABEL_50;
        }
        if (*v59 != *v42) {
          goto LABEL_47;
        }
        int v48 = v42[25];
        if (v46)
        {
          if (!v42[24] || ((v47 ^ v48) & 1) != 0) {
            goto LABEL_47;
          }
LABEL_7:
          sub_10043993C((uint64_t)v7, type metadata accessor for Activity.MailboxStatus);
          sub_10043993C(v66, type metadata accessor for Activity.MailboxStatus);
          unint64_t v13 = v61;
          sub_10043993C((uint64_t)v61, type metadata accessor for Activity.MailboxStatus);
          continue;
        }
        if ((v42[24] & 1) == 0 && v45 == *((void *)v42 + 1) && v44 == *((void *)v42 + 2) && v47 == v48) {
          goto LABEL_7;
        }
LABEL_47:
        sub_10043993C((uint64_t)v7, type metadata accessor for Activity.MailboxStatus);
LABEL_51:
        sub_10043993C(v66, type metadata accessor for Activity.MailboxStatus);
        unint64_t v13 = v61;
LABEL_52:
        sub_10043993C((uint64_t)v13, type metadata accessor for Activity.MailboxStatus);
        return 0;
    }
  }
}

uint64_t sub_100435BE0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v25 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v27 = result;
  while (v7)
  {
    uint64_t v28 = (v7 - 1) & v7;
    int64_t v29 = v4;
    unint64_t v8 = __clz(__rbit64(v7)) | (v4 << 6);
LABEL_24:
    unint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(v3 + 56) + 24 * v8;
    int v17 = *(_DWORD *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    int v19 = *(unsigned __int8 *)(v16 + 16);
    int v20 = *(unsigned __int8 *)(v16 + 17);
    sub_100008D24(*v13, v15);
    unint64_t v21 = sub_1003F64B0(v14, v15);
    char v23 = v22;
    sub_1000094D4(v14, v15);
    if ((v23 & 1) == 0) {
      return 0;
    }
    uint64_t v24 = *(void *)(a2 + 56) + 24 * v21;
    if (v17 != *(_DWORD *)v24) {
      return 0;
    }
    if (*(unsigned char *)(v24 + 16) == 1)
    {
      uint64_t result = 0;
      if (!v19) {
        return result;
      }
    }
    else
    {
      if (v19) {
        return 0;
      }
      uint64_t result = 0;
      if (*(void *)(v24 + 8) != v18) {
        return result;
      }
    }
    uint64_t v3 = v27;
    unint64_t v7 = v28;
    int64_t v4 = v29;
    if ((v20 ^ *(unsigned __int8 *)(v24 + 17))) {
      return result;
    }
  }
  int64_t v9 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v9 >= v26) {
    return 1;
  }
  unint64_t v10 = *(void *)(v25 + 8 * v9);
  int64_t v11 = v4 + 1;
  if (v10) {
    goto LABEL_23;
  }
  int64_t v11 = v9 + 1;
  if (v9 + 1 >= v26) {
    return 1;
  }
  unint64_t v10 = *(void *)(v25 + 8 * v11);
  if (v10) {
    goto LABEL_23;
  }
  int64_t v11 = v9 + 2;
  if (v9 + 2 >= v26) {
    return 1;
  }
  unint64_t v10 = *(void *)(v25 + 8 * v11);
  if (v10)
  {
LABEL_23:
    uint64_t v28 = (v10 - 1) & v10;
    int64_t v29 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_24;
  }
  int64_t v12 = v9 + 3;
  if (v12 >= v26) {
    return 1;
  }
  unint64_t v10 = *(void *)(v25 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v26) {
      return 1;
    }
    unint64_t v10 = *(void *)(v25 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_23;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100435E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(sub_10000566C(&qword_1007144E0) - 8);
  __chkstk_darwin();
  uint64_t v54 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v46 - v6;
  sub_10000566C(&qword_1007152B8);
  __chkstk_darwin();
  int64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin();
  int64_t v12 = (char *)&v46 - v11;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v51 = v4;
  uint64_t v52 = a2;
  int64_t v55 = 0;
  uint64_t v50 = a1;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = a1 + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v48 = v14;
  int64_t v49 = (unint64_t)(v16 + 63) >> 6;
  int64_t v47 = v49 - 1;
  uint64_t v53 = v7;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v55 << 6);
LABEL_8:
      uint64_t v21 = *(void *)(v50 + 48) + 16 * v20;
      uint64_t v22 = *(void *)v21;
      int v23 = *(_DWORD *)(v21 + 8);
      uint64_t v24 = *(void *)(v50 + 56) + *(void *)(v4 + 72) * v20;
      uint64_t v25 = sub_10000566C(&qword_1007152C0);
      sub_1000079E4(v24, (uint64_t)&v9[*(int *)(v25 + 48)], &qword_1007144E0);
      *(void *)int64_t v9 = v22;
      *((_DWORD *)v9 + 2) = v23;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 0, 1, v25);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v26 = v55 + 1;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v26 < v49)
    {
      unint64_t v27 = *(void *)(v48 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v55 + 2;
      ++v55;
      if (v26 + 1 < v49)
      {
        unint64_t v27 = *(void *)(v48 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v55 = v26 + 1;
        if (v26 + 2 < v49)
        {
          unint64_t v27 = *(void *)(v48 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v55 = v26 + 2;
          if (v26 + 3 < v49) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = sub_10000566C(&qword_1007152C0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
    unint64_t v18 = 0;
LABEL_27:
    sub_10001FDF0((uint64_t)v9, (uint64_t)v12, &qword_1007152B8);
    uint64_t v30 = sub_10000566C(&qword_1007152C0);
    int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v12, 1, v30);
    BOOL v32 = v31 == 1;
    if (v31 == 1) {
      return 1;
    }
    uint64_t v33 = (uint64_t)&v12[*(int *)(v30 + 48)];
    uint64_t v34 = *(void *)v12;
    uint64_t v35 = v12;
    unsigned int v36 = *((_DWORD *)v12 + 2);
    uint64_t v37 = (uint64_t)v53;
    sub_10001FDF0(v33, (uint64_t)v53, &qword_1007144E0);
    uint64_t v38 = v52;
    unint64_t v39 = sub_1003F6540(v34, v36);
    char v41 = v40;
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
    {
      sub_100007A48(v37, &qword_1007144E0);
      return 0;
    }
    BOOL v42 = v32;
    uint64_t v43 = *(void *)(v38 + 56);
    uint64_t v4 = v51;
    uint64_t v44 = v54;
    sub_1000079E4(v43 + *(void *)(v51 + 72) * v39, v54, &qword_1007144E0);
    sub_100405034();
    char v45 = sub_1005E35A0();
    sub_100007A48(v44, &qword_1007144E0);
    uint64_t result = sub_100007A48(v37, &qword_1007144E0);
    int64_t v12 = v35;
    if ((v45 & 1) == 0) {
      return v42;
    }
  }
  unint64_t v27 = *(void *)(v48 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v18 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v55 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v49)
    {
      int64_t v55 = v47;
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v48 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100436304(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v35 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    unint64_t v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    int64_t v37 = v4;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_26:
    uint64_t v15 = *(void *)(v3 + 48) + 16 * v10;
    uint64_t v16 = *(void *)v15;
    unsigned int v17 = *(_DWORD *)(v15 + 8);
    uint64_t v18 = *(void *)(v3 + 56) + 24 * v10;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(unsigned char *)(v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1003F6540(v16, v17);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0
      || (uint64_t v25 = *(void *)(a2 + 56) + 24 * v22,
          int64_t v26 = *(_DWORD **)v25,
          uint64_t v27 = *(void *)(*(void *)v25 + 16),
          v27 != *(void *)(v19 + 16)))
    {
LABEL_44:
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v28 = *(void *)(v25 + 8);
    char v29 = *(unsigned char *)(v25 + 16);
    if (v27) {
      BOOL v30 = v26 == (_DWORD *)v19;
    }
    else {
      BOOL v30 = 1;
    }
    if (!v30)
    {
      if (*(_DWORD *)(v19 + 32) != v26[8] || *(_DWORD *)(v19 + 36) != v26[9]) {
        goto LABEL_44;
      }
      uint64_t v31 = v27 - 1;
      if (v31)
      {
        if (*(_DWORD *)(v19 + 40) != v26[10] || *(_DWORD *)(v19 + 44) != v26[11]) {
          goto LABEL_44;
        }
        uint64_t v32 = 0;
        while (--v31)
        {
          uint64_t v33 = &v26[v32];
          uint64_t v34 = v19 + v32 * 4;
          if (*(_DWORD *)(v19 + v32 * 4 + 48) == v26[v32 + 12])
          {
            v32 += 2;
            if (*(_DWORD *)(v34 + 52) == v33[13]) {
              continue;
            }
          }
          goto LABEL_44;
        }
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v29)
    {
      int64_t v4 = v37;
      if ((v21 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v28 == v20) {
        char v8 = v21;
      }
      else {
        char v8 = 1;
      }
      int64_t v4 = v37;
      if (v8) {
        return 0;
      }
    }
  }
  int64_t v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v11 >= v36) {
    return 1;
  }
  unint64_t v12 = *(void *)(v35 + 8 * v11);
  int64_t v13 = v4 + 1;
  if (v12) {
    goto LABEL_25;
  }
  int64_t v13 = v4 + 2;
  if (v4 + 2 >= v36) {
    return 1;
  }
  unint64_t v12 = *(void *)(v35 + 8 * v13);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v13 = v4 + 3;
  if (v4 + 3 >= v36) {
    return 1;
  }
  unint64_t v12 = *(void *)(v35 + 8 * v13);
  if (v12)
  {
LABEL_25:
    unint64_t v7 = (v12 - 1) & v12;
    int64_t v37 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_26;
  }
  uint64_t v14 = v4 + 4;
  if (v4 + 4 >= v36) {
    return 1;
  }
  unint64_t v12 = *(void *)(v35 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v4 + 4;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v36) {
      return 1;
    }
    unint64_t v12 = *(void *)(v35 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_25;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1004365D0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v38 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v39 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      uint64_t v54 = (v7 - 1) & v7;
      int64_t v55 = v4;
      unint64_t v8 = __clz(__rbit64(v7)) | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
      JUMPOUT(0x100436BB0);
    }
    if (v9 >= v39) {
      return 1;
    }
    unint64_t v10 = *(void *)(v38 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (v10) {
      goto LABEL_24;
    }
    int64_t v11 = v9 + 1;
    if (v9 + 1 >= v39) {
      return 1;
    }
    unint64_t v10 = *(void *)(v38 + 8 * v11);
    if (v10) {
      goto LABEL_24;
    }
    int64_t v11 = v9 + 2;
    if (v9 + 2 >= v39) {
      return 1;
    }
    unint64_t v10 = *(void *)(v38 + 8 * v11);
    if (v10) {
      goto LABEL_24;
    }
    int64_t v11 = v9 + 3;
    if (v9 + 3 >= v39) {
      return 1;
    }
    unint64_t v10 = *(void *)(v38 + 8 * v11);
    if (v10) {
      goto LABEL_24;
    }
    int64_t v12 = v9 + 4;
    if (v12 >= v39) {
      return 1;
    }
    unint64_t v10 = *(void *)(v38 + 8 * v12);
    if (!v10)
    {
      while (1)
      {
        int64_t v11 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_81;
        }
        if (v11 >= v39) {
          return 1;
        }
        unint64_t v10 = *(void *)(v38 + 8 * v11);
        ++v12;
        if (v10) {
          goto LABEL_24;
        }
      }
    }
    int64_t v11 = v12;
LABEL_24:
    uint64_t v54 = (v10 - 1) & v10;
    int64_t v55 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_25:
    uint64_t v13 = *(void *)(v3 + 48) + 16 * v8;
    uint64_t v14 = *(void *)v13;
    unsigned int v15 = *(_DWORD *)(v13 + 8);
    uint64_t v16 = *(void *)(v3 + 56) + 72 * v8;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(unsigned int *)(v16 + 8);
    uint64_t v19 = *(unsigned __int8 *)(v16 + 12);
    int v20 = *(unsigned __int16 *)(v16 + 14);
    int v21 = *(unsigned __int8 *)(v16 + 16);
    uint64_t v52 = *(void *)(v16 + 32);
    uint64_t v53 = *(void *)(v16 + 24);
    uint64_t v51 = *(void *)(v16 + 48);
    uint64_t v44 = *(void *)(v16 + 56);
    uint64_t v45 = *(void *)(v16 + 40);
    char v49 = *(unsigned char *)(v16 + 64);
    char v56 = *(unsigned char *)(v16 + 65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1003F6540(v14, v15);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_76;
    }
    uint64_t v25 = *(void *)(v2 + 56) + 72 * v22;
    int v26 = *(unsigned __int16 *)(v25 + 14);
    uint64_t v27 = *(unsigned __int8 *)(v25 + 16);
    uint64_t v50 = *(void *)(v25 + 24);
    uint64_t v48 = *(void *)(v25 + 32);
    uint64_t v43 = *(void *)(v25 + 40);
    uint64_t v47 = *(void *)(v25 + 48);
    uint64_t v42 = *(void *)(v25 + 56);
    char v46 = *(unsigned char *)(v25 + 64);
    char v28 = *(unsigned char *)(v25 + 65);
    unint64_t v29 = v57 & 0xFFFFFF0000000000 | *(unsigned int *)(v25 + 8) | ((unint64_t)*(unsigned __int8 *)(v25 + 12) << 32);
    uint64_t v30 = swift_bridgeObjectRetain();
    unint64_t v57 = v29;
    unint64_t v58 = v58 & 0xFFFFFF0000000000 | v18 | (v19 << 32);
    if ((static MailboxPath.__derived_struct_equals(_:_:)(v30, v29, v17, v58) & 1) == 0 || v26 != v20) {
      break;
    }
    if (v27 == 7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21 != 7) {
        return 0;
      }
LABEL_54:
      if ((v28 & 1) == 0) {
        goto LABEL_55;
      }
LABEL_6:
      uint64_t v3 = a1;
      uint64_t v2 = a2;
      int64_t v4 = v55;
      unint64_t v7 = v54;
      if ((v56 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      unint64_t v31 = 0xE300000000000000;
      uint64_t v32 = 7105633;
      switch(v27)
      {
        case 1:
          unint64_t v31 = 0xE700000000000000;
          uint64_t v32 = 0x65766968637261;
          break;
        case 2:
          unint64_t v31 = 0xE600000000000000;
          uint64_t v32 = 0x737466617264;
          break;
        case 3:
          unint64_t v31 = 0xE700000000000000;
          uint64_t v32 = 0x64656767616C66;
          break;
        case 4:
          unint64_t v31 = 0xE400000000000000;
          uint64_t v32 = 1802401130;
          break;
        case 5:
          unint64_t v31 = 0xE400000000000000;
          uint64_t v32 = 1953391987;
          break;
        case 6:
          unint64_t v31 = 0xE500000000000000;
          uint64_t v32 = 0x6873617274;
          break;
        default:
          break;
      }
      unint64_t v33 = 0xE300000000000000;
      uint64_t v34 = 7105633;
      switch(v21)
      {
        case 0:
          goto LABEL_48;
        case 1:
          unint64_t v33 = 0xE700000000000000;
          if (v32 != 0x65766968637261) {
            goto LABEL_53;
          }
          goto LABEL_49;
        case 2:
          unint64_t v33 = 0xE600000000000000;
          if (v32 != 0x737466617264) {
            goto LABEL_53;
          }
          goto LABEL_49;
        case 3:
          unint64_t v33 = 0xE700000000000000;
          if (v32 != 0x64656767616C66) {
            goto LABEL_53;
          }
          goto LABEL_49;
        case 4:
          unint64_t v33 = 0xE400000000000000;
          if (v32 != 1802401130) {
            goto LABEL_53;
          }
          goto LABEL_49;
        case 5:
          unint64_t v33 = 0xE400000000000000;
          uint64_t v34 = 1953391987;
LABEL_48:
          if (v32 == v34) {
            goto LABEL_49;
          }
          goto LABEL_53;
        case 6:
          unint64_t v33 = 0xE500000000000000;
          if (v32 != 0x6873617274) {
            goto LABEL_53;
          }
LABEL_49:
          if (v31 != v33)
          {
LABEL_53:
            char v35 = sub_1005E3290();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v35 & 1) == 0) {
              return 0;
            }
            goto LABEL_54;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          if (v28) {
            goto LABEL_6;
          }
          break;
        default:
          goto LABEL_75;
      }
LABEL_55:
      if ((v56 & 1) != 0 || v50 != v53) {
        return 0;
      }
      if (v48 != v52 || HIDWORD(v48) != HIDWORD(v52)) {
        return 0;
      }
      if (v47)
      {
        uint64_t v3 = a1;
        uint64_t v2 = a2;
        int64_t v4 = v55;
        unint64_t v7 = v54;
        if ((v51 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        uint64_t result = 0;
        uint64_t v3 = a1;
        uint64_t v2 = a2;
        int64_t v4 = v55;
        unint64_t v7 = v54;
        if ((v51 & 1) != 0 || v43 != v45) {
          return result;
        }
      }
      if (v46)
      {
        if ((v49 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v49) {
          return 0;
        }
        if ((v42 | v44) < 0) {
          goto LABEL_80;
        }
        if (v44 != v42) {
          return 0;
        }
      }
    }
  }
LABEL_75:
  swift_bridgeObjectRelease();
LABEL_76:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100436BE8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    Swift::UInt v15 = *(void *)(*(void *)(v3 + 48) + 16 * v11 + 8);
    uint64_t v16 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    uint64_t v17 = swift_bridgeObjectRetain();
    unint64_t v18 = sub_1003F643C(v17, v15);
    char v20 = v19;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0 || *(void *)(*(void *)(a2 + 56) + 8 * v18) != v16) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

Swift::Int sub_100436D90(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    unint64_t v16 = sub_1003F6668(*(_DWORD *)(*(void *)(v3 + 48) + 4 * v11));
    if (v17)
    {
      uint64_t result = sub_100013570(*(void *)(*(void *)(a2 + 56) + 8 * v16), v15);
      if (result) {
        continue;
      }
    }
    return 0;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100436F14(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_28:
    uint64_t v15 = (unsigned __int8 *)(*(void *)(v3 + 48) + 40 * v11);
    uint64_t v16 = *((void *)v15 + 1);
    uint64_t v17 = *((unsigned int *)v15 + 4);
    uint64_t v18 = *((void *)v15 + 3);
    unint64_t v19 = *((void *)v15 + 4);
    uint64_t v20 = *(void *)(v3 + 56) + 12 * v11;
    uint64_t v21 = *(void *)v20;
    char v22 = *(unsigned char *)(v20 + 8);
    v30[0] = *v15 | ((unint64_t)*((unsigned int *)v15 + 1) << 32);
    v30[1] = v16;
    v30[2] = v17;
    v30[3] = v18;
    v30[4] = v19;
    swift_bridgeObjectRetain();
    sub_100008D24(v18, v19);
    unint64_t v23 = sub_1003F65B8((unsigned __int8 *)v30);
    LOBYTE(v19) = v24;
    uint64_t result = sub_100026F04((uint64_t)v30);
    if ((v19 & 1) == 0) {
      return 0;
    }
    uint64_t v25 = *(void *)(a2 + 56) + 12 * v23;
    uint64_t v26 = *(void *)v25;
    if (*(unsigned char *)(v25 + 8) == 1)
    {
      if (v26)
      {
        if (v21) {
          char v27 = v22;
        }
        else {
          char v27 = 0;
        }
        if ((v27 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v21) {
          char v9 = 0;
        }
        else {
          char v9 = v22;
        }
        if ((v9 & 1) == 0) {
          return 0;
        }
      }
    }
    else
    {
      if (v22) {
        return 0;
      }
      if (v26 != v21 || HIDWORD(v26) != HIDWORD(v21)) {
        return 0;
      }
    }
  }
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v12 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_27;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_27;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_27;
  }
  int64_t v4 = v12 + 3;
  if (v12 + 3 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_27:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_28;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v29) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v29) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_27;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_10043715C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v28 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      uint64_t v30 = (v6 - 1) & v6;
      int64_t v31 = v3;
      unint64_t v8 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_28;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v9 >= v29) {
      return 1;
    }
    unint64_t v10 = *(void *)(v28 + 8 * v9);
    int64_t v11 = v3 + 1;
    if (!v10)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v29) {
        return 1;
      }
      unint64_t v10 = *(void *)(v28 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v29) {
          return 1;
        }
        unint64_t v10 = *(void *)(v28 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v3 + 4;
          if (v3 + 4 >= v29) {
            return 1;
          }
          unint64_t v10 = *(void *)(v28 + 8 * v11);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v30 = (v10 - 1) & v10;
    int64_t v31 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_28:
    uint64_t v13 = result;
    Swift::UInt v14 = *(void *)(*(void *)(result + 48) + 16 * v8 + 8);
    uint64_t v15 = *(void *)(result + 56) + 24 * v8;
    int v16 = *(_DWORD *)v15;
    int v17 = *(unsigned __int8 *)(v15 + 4);
    uint64_t v18 = *(void *)(v15 + 8);
    char v19 = *(unsigned char *)(v15 + 16);
    uint64_t v20 = swift_bridgeObjectRetain();
    unint64_t v21 = sub_1003F643C(v20, v14);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      return 0;
    }
    uint64_t v24 = *(void *)(a2 + 56) + 24 * v21;
    uint64_t v25 = *(void *)(v24 + 8);
    char v26 = *(unsigned char *)(v24 + 16);
    if (*(unsigned char *)(v24 + 4))
    {
      if (!v17) {
        return 0;
      }
    }
    else
    {
      if (*(_DWORD *)v24 == v16) {
        char v27 = v17;
      }
      else {
        char v27 = 1;
      }
      if (v27) {
        return 0;
      }
    }
    if (v26)
    {
      uint64_t result = v13;
      unint64_t v6 = v30;
      int64_t v3 = v31;
      if ((v19 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v25 == v18) {
        char v7 = v19;
      }
      else {
        char v7 = 1;
      }
      uint64_t result = v13;
      unint64_t v6 = v30;
      int64_t v3 = v31;
      if (v7) {
        return 0;
      }
    }
  }
  uint64_t v12 = v3 + 5;
  if (v3 + 5 >= v29) {
    return 1;
  }
  unint64_t v10 = *(void *)(v28 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v3 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v29) {
      return 1;
    }
    unint64_t v10 = *(void *)(v28 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_27;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1004373B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(sub_10000566C(&qword_1007144D8) - 8);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v7 = (char *)&v42 - v6;
  sub_10000566C(&qword_1007152D8);
  __chkstk_darwin();
  int64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin();
  uint64_t v12 = (char *)&v42 - v11;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v49 = 0;
  uint64_t v46 = a1;
  uint64_t v47 = v4;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v14 = a1 + 64;
  uint64_t v13 = v15;
  uint64_t v16 = 1 << *(unsigned char *)(v14 - 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v13;
  uint64_t v44 = v14;
  int64_t v45 = (unint64_t)(v16 + 63) >> 6;
  int64_t v43 = v45 - 1;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v49 << 6);
LABEL_8:
      uint64_t v21 = *(void *)(v46 + 56);
      uint64_t v22 = *(void *)(v46 + 48) + 16 * v20;
      uint64_t v23 = *(void *)v22;
      LODWORD(v22) = *(_DWORD *)(v22 + 8);
      *(void *)int64_t v9 = v23;
      *((_DWORD *)v9 + 2) = v22;
      uint64_t v24 = v21 + *(void *)(v4 + 72) * v20;
      uint64_t v25 = sub_10000566C(&qword_1007152E0);
      sub_1000079E4(v24, (uint64_t)&v9[*(int *)(v25 + 48)], &qword_1007144D8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 0, 1, v25);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    int64_t v26 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v26 < v45)
    {
      unint64_t v27 = *(void *)(v44 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v49 + 2;
      ++v49;
      if (v26 + 1 < v45)
      {
        unint64_t v27 = *(void *)(v44 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v49 = v26 + 1;
        if (v26 + 2 < v45)
        {
          unint64_t v27 = *(void *)(v44 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v49 = v26 + 2;
          if (v26 + 3 < v45)
          {
            unint64_t v27 = *(void *)(v44 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_12;
            }
            int64_t v28 = v26 + 4;
            int64_t v49 = v26 + 3;
            if (v26 + 4 < v45) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v29 = sub_10000566C(&qword_1007152E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
    unint64_t v18 = 0;
LABEL_30:
    sub_10001FDF0((uint64_t)v9, (uint64_t)v12, &qword_1007152D8);
    uint64_t v30 = sub_10000566C(&qword_1007152E0);
    int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v12, 1, v30);
    BOOL v32 = v31 == 1;
    if (v31 == 1) {
      return v32;
    }
    uint64_t v33 = (uint64_t)&v12[*(int *)(v30 + 48)];
    uint64_t v34 = *(void *)v12;
    unsigned int v35 = *((_DWORD *)v12 + 2);
    sub_10001FDF0(v33, (uint64_t)v7, &qword_1007144D8);
    unint64_t v36 = sub_1003F6540(v34, v35);
    char v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      sub_100007A48((uint64_t)v7, &qword_1007144D8);
      return 0;
    }
    uint64_t v4 = v47;
    uint64_t v39 = *(void *)(a2 + 56) + *(void *)(v47 + 72) * v36;
    uint64_t v40 = v48;
    sub_1000079E4(v39, v48, &qword_1007144D8);
    sub_100405034();
    char v41 = sub_1005E35A0();
    sub_100007A48(v40, &qword_1007144D8);
    uint64_t result = sub_100007A48((uint64_t)v7, &qword_1007144D8);
    if ((v41 & 1) == 0) {
      return v32;
    }
  }
  unint64_t v27 = *(void *)(v44 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v18 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v49 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v45)
    {
      int64_t v49 = v43;
      goto LABEL_29;
    }
    unint64_t v27 = *(void *)(v44 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100437884()
{
  sub_100405034();
  return sub_1005E35A0();
}

unint64_t SearchRequest.Query.predicate.getter(uint64_t a1, unint64_t a2)
{
  return a2;
}

unint64_t SearchRequest.Query.predicate.setter(uint64_t a1)
{
  unint64_t result = sub_1004163E4(*(void *)(v1 + 8));
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t static SearchRequest.Query.__derived_struct_equals(_:_:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((sub_100436304(a1, a3) & 1) == 0) {
    return 0;
  }
  return static SearchRequest.Predicate.__derived_enum_equals(_:_:)(a2, a4);
}

uint64_t static SearchRequest.Predicate.__derived_enum_equals(_:_:)(unint64_t a1, unint64_t a2)
{
  switch(a1 >> 60)
  {
    case 1uLL:
      if (a2 >> 60 == 1) {
        return *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
      }
            && *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18)
            && *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      goto LABEL_60;
    case 2uLL:
      if (a2 >> 60 != 2) {
        goto LABEL_60;
      }
      goto LABEL_47;
    case 3uLL:
      if (a2 >> 60 != 3) {
        goto LABEL_60;
      }
      goto LABEL_47;
    case 4uLL:
      if (a2 >> 60 != 4) {
        goto LABEL_60;
      }
      return *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL)
                                                                                           + 0x10);
    case 5uLL:
      if (a2 >> 60 != 5) {
        goto LABEL_60;
      }
      goto LABEL_47;
    case 6uLL:
      if (a2 >> 60 != 6) {
        goto LABEL_60;
      }
      uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        || *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) != *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
      {
        char v15 = sub_1005E3290();
        uint64_t result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
      if (v10 != v12 || v11 != v13) {
        goto LABEL_51;
      }
      goto LABEL_56;
    case 7uLL:
      if (a2 >> 60 != 7) {
        goto LABEL_60;
      }
      unint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_100416334(v17);
      sub_100416334(v18);
      char v19 = static SearchRequest.Predicate.__derived_enum_equals(_:_:)(v17, v18);
      sub_1004163E4(v18);
      sub_1004163E4(v17);
      return v19 & 1;
    case 8uLL:
      if (a2 >> 60 != 8) {
        goto LABEL_60;
      }
      unint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      goto LABEL_44;
    case 9uLL:
      if (a2 >> 60 != 9) {
        goto LABEL_60;
      }
      return *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
          && *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18)
          && *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
    case 0xAuLL:
      if (a2 >> 60 == 10) {
        goto LABEL_47;
      }
      goto LABEL_60;
    case 0xBuLL:
      if (a2 >> 60 != 11) {
        goto LABEL_60;
      }
LABEL_47:
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        && *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
      {
LABEL_56:
        uint64_t result = 1;
      }
      else
      {
LABEL_51:
        uint64_t result = sub_1005E3290();
      }
      break;
    case 0xCuLL:
      *((void *)&v7 + 1) = a1;
      *(void *)&long long v7 = a1 + 0x4000000000000000;
      switch((unint64_t)(v7 >> 3))
      {
        case 1uLL:
          if (a2 == 0xC000000000000008) {
            goto LABEL_56;
          }
          goto LABEL_60;
        case 2uLL:
          if (a2 != 0xC000000000000010) {
            goto LABEL_60;
          }
          goto LABEL_56;
        case 3uLL:
          if (a2 != 0xC000000000000018) {
            goto LABEL_60;
          }
          goto LABEL_56;
        default:
          if (a2 == 0xC000000000000000) {
            goto LABEL_56;
          }
          goto LABEL_60;
      }
    default:
      if (a2 >> 60) {
        goto LABEL_60;
      }
      unint64_t v2 = *(void *)(a1 + 16);
      unint64_t v3 = *(void *)(a1 + 24);
      unint64_t v4 = *(void *)(a2 + 16);
      unint64_t v5 = *(void *)(a2 + 24);
LABEL_44:
      sub_100416334(v2);
      sub_100416334(v4);
      sub_100416334(v3);
      sub_100416334(v5);
      if (static SearchRequest.Predicate.__derived_enum_equals(_:_:)(v2, v4))
      {
        char v20 = static SearchRequest.Predicate.__derived_enum_equals(_:_:)(v3, v5);
        sub_1004163E4(v5);
        sub_1004163E4(v3);
        sub_1004163E4(v4);
        sub_1004163E4(v2);
        uint64_t result = v20 & 1;
      }
      else
      {
        sub_1004163E4(v5);
        sub_1004163E4(v3);
        sub_1004163E4(v4);
        sub_1004163E4(v2);
LABEL_60:
        uint64_t result = 0;
      }
      break;
  }
  return result;
}

uint64_t sub_100437D10(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = a2[1];
  if ((sub_100436304(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return static SearchRequest.Predicate.__derived_enum_equals(_:_:)(v2, v3);
}

uint64_t sub_100437D70(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence13SearchRequestV4KindO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t SearchRequest.kind.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return a2;
}

unint64_t SearchRequest.kind.setter(uint64_t a1, uint64_t a2)
{
  unint64_t result = sub_10041639C(*(void *)(v2 + 8), *(void *)(v2 + 16));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t static SearchRequest.fetchMessages(id:messages:)(uint64_t a1)
{
  return a1;
}

uint64_t sub_100437E30(uint64_t a1, uint64_t a2)
{
  return _s16IMAP2Persistence13SearchRequestV23__derived_struct_equalsySbAC_ACtFZ_0(*(_DWORD *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(_DWORD *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

Swift::Int sub_100437E4C()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  Swift::UInt v3 = v0[2];
  sub_1005E33F0();
  sub_1005E3410(v1);
  sub_1005E3410(v2);
  sub_1005E3410(v3);
  return sub_1005E3470();
}

void sub_100437EB8()
{
  Swift::UInt v1 = v0[1];
  Swift::UInt v2 = v0[2];
  sub_1005E3410(*v0);
  sub_1005E3410(v1);
  sub_1005E3410(v2);
}

void SearchRequest.Predicate.hash(into:)(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 60)
  {
    case 1uLL:
      Swift::UInt v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      Swift::UInt v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      Swift::UInt v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      Swift::UInt v11 = 2;
      goto LABEL_9;
    case 2uLL:
      Swift::UInt v12 = 3;
      goto LABEL_22;
    case 3uLL:
      Swift::UInt v12 = 4;
      goto LABEL_22;
    case 4uLL:
      Swift::UInt v6 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1005E3410(7uLL);
      Swift::UInt v7 = v6;
      goto LABEL_10;
    case 5uLL:
      Swift::UInt v12 = 8;
      goto LABEL_22;
    case 6uLL:
      sub_1005E3410(9uLL);
      sub_1005E1DB0();
      goto LABEL_23;
    case 7uLL:
      unint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1005E3410(0xAuLL);
      sub_100416334(v14);
      SearchRequest.Predicate.hash(into:)(a1, v14);
      unint64_t v15 = v14;
      goto LABEL_18;
    case 8uLL:
      unint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      Swift::UInt v5 = 11;
      goto LABEL_17;
    case 9uLL:
      Swift::UInt v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      Swift::UInt v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      Swift::UInt v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      Swift::UInt v11 = 13;
LABEL_9:
      sub_1005E3410(v11);
      sub_1005E3410(v8);
      sub_1005E3410(v9);
      Swift::UInt v7 = v10;
      goto LABEL_10;
    case 0xAuLL:
      Swift::UInt v12 = 14;
      goto LABEL_22;
    case 0xBuLL:
      Swift::UInt v12 = 15;
LABEL_22:
      sub_1005E3410(v12);
LABEL_23:
      sub_1005E1DB0();
      break;
    case 0xCuLL:
      *((void *)&v13 + 1) = a2;
      *(void *)&long long v13 = a2 + 0x4000000000000000;
      switch((unint64_t)(v13 >> 3))
      {
        case 1uLL:
          Swift::UInt v7 = 5;
          break;
        case 2uLL:
          Swift::UInt v7 = 6;
          break;
        case 3uLL:
          Swift::UInt v7 = 12;
          break;
        default:
          Swift::UInt v7 = 1;
          break;
      }
LABEL_10:
      sub_1005E3410(v7);
      break;
    default:
      unint64_t v3 = *(void *)(a2 + 16);
      unint64_t v4 = *(void *)(a2 + 24);
      Swift::UInt v5 = 0;
LABEL_17:
      sub_1005E3410(v5);
      sub_100416334(v3);
      sub_100416334(v4);
      SearchRequest.Predicate.hash(into:)(a1, v3);
      SearchRequest.Predicate.hash(into:)(a1, v4);
      sub_1004163E4(v3);
      unint64_t v15 = v4;
LABEL_18:
      sub_1004163E4(v15);
      break;
  }
}

Swift::Int SearchRequest.Predicate.hashValue.getter(unint64_t a1)
{
  sub_1005E33F0();
  SearchRequest.Predicate.hash(into:)((uint64_t)v3, a1);
  return sub_1005E3470();
}

Swift::Int sub_1004381D8()
{
  unint64_t v1 = *v0;
  sub_1005E33F0();
  SearchRequest.Predicate.hash(into:)((uint64_t)v3, v1);
  return sub_1005E3470();
}

void sub_100438220(uint64_t a1)
{
  SearchRequest.Predicate.hash(into:)(a1, *v1);
}

Swift::Int sub_100438228()
{
  unint64_t v1 = *v0;
  sub_1005E33F0();
  SearchRequest.Predicate.hash(into:)((uint64_t)v3, v1);
  return sub_1005E3470();
}

uint64_t sub_10043826C(unint64_t *a1, unint64_t *a2)
{
  return static SearchRequest.Predicate.__derived_enum_equals(_:_:)(*a1, *a2);
}

unint64_t static SearchRequest.Predicate.and(_:)(unint64_t result)
{
  unint64_t v1 = (void *)result;
  uint64_t v2 = *(void *)(result + 16);
  if (v2 == 1)
  {
LABEL_9:
    unint64_t v4 = v1[4];
    unint64_t v5 = v4;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 32 + 8 * v2 - 8);
    unint64_t v4 = *(void *)(result + 32 + 8 * (v2 - 2));
    unint64_t result = swift_allocObject();
    unint64_t v5 = result;
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v3;
    if (v2 != 2)
    {
      unint64_t v11 = v3;
      Swift::UInt v6 = (char *)(v1 + 1);
      unint64_t v1 = &unk_1006F1F98;
      uint64_t v7 = v2;
      while (v7 - 3 < v2)
      {
        unint64_t v8 = *(void *)&v6[8 * v7];
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = v8;
        *(void *)(v9 + 24) = v5;
        uint64_t v10 = v7 - 3;
        if (v7 == 3)
        {
          sub_100416334(v11);
          sub_100416334(v4);
          unint64_t v4 = v8;
          unint64_t v5 = v9;
          goto LABEL_12;
        }
        unint64_t result = sub_100416334(v8);
        --v7;
        unint64_t v5 = v9;
        if (v2 - 2 < v10)
        {
          __break(1u);
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_14;
    }
    sub_100416334(v3);
LABEL_12:
    sub_100416334(v4);
    return v5;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t static SearchRequest.Predicate.or(_:)(unint64_t result)
{
  unint64_t v1 = (void *)result;
  uint64_t v2 = *(void *)(result + 16);
  if (v2 == 1)
  {
LABEL_9:
    unint64_t v4 = v1[4];
    unint64_t v5 = v4;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 32 + 8 * v2 - 8);
    unint64_t v4 = *(void *)(result + 32 + 8 * (v2 - 2));
    unint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v3;
    unint64_t v5 = result | 0x8000000000000000;
    if (v2 != 2)
    {
      Swift::UInt v6 = (char *)(v1 + 1);
      unint64_t v1 = &unk_1006F1F98;
      uint64_t v7 = v2;
      while (v7 - 3 < v2)
      {
        unint64_t v8 = *(void *)&v6[8 * v7];
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = v8;
        *(void *)(v9 + 24) = v5;
        unint64_t v5 = v9 | 0x8000000000000000;
        uint64_t v10 = v7 - 3;
        if (v7 == 3)
        {
          sub_100416334(v3);
          sub_100416334(v4);
          unint64_t v4 = v8;
          goto LABEL_12;
        }
        unint64_t result = sub_100416334(v8);
        --v7;
        if (v2 - 2 < v10)
        {
          __break(1u);
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_14;
    }
    sub_100416334(v3);
LABEL_12:
    sub_100416334(v4);
    return v5;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t SearchRequest.Predicate.Color.description.getter(char a1)
{
  uint64_t result = 6579570;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65676E61726FLL;
      break;
    case 2:
      uint64_t result = 0x776F6C6C6579;
      break;
    case 3:
      uint64_t result = 0x6E65657267;
      break;
    case 4:
      uint64_t result = 1702194274;
      break;
    case 5:
      uint64_t result = 0x656C70727570;
      break;
    case 6:
      uint64_t result = 2036429415;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100438584()
{
  uint64_t result = 6579570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65676E61726FLL;
      break;
    case 2:
      uint64_t result = 0x776F6C6C6579;
      break;
    case 3:
      uint64_t result = 0x6E65657267;
      break;
    case 4:
      uint64_t result = 1702194274;
      break;
    case 5:
      uint64_t result = 0x656C70727570;
      break;
    case 6:
      uint64_t result = 2036429415;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t SearchRequest.Predicate.Day.description.getter()
{
  uint64_t v1 = sub_1005E3230();
  v2._countAndFlagsBits = 45;
  v2._object = (void *)0xE100000000000000;
  sub_1005E1E30(v2);
  v3._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 45;
  v4._object = (void *)0xE100000000000000;
  sub_1005E1E30(v4);
  v5._countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v5);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100438718()
{
  return SearchRequest.Predicate.Day.description.getter();
}

uint64_t SearchRequest.Predicate.description.getter(unint64_t a1)
{
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v12 = 0x2845524F464542;
      goto LABEL_15;
    case 2uLL:
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFFFLL;
      v7._uint64_t countAndFlagsBits = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v7._object = *(void **)(v6 + 24);
      uint64_t v8 = 1497648962;
      goto LABEL_18;
    case 3uLL:
      uint64_t v17 = a1 & 0xFFFFFFFFFFFFFFFLL;
      v7._uint64_t countAndFlagsBits = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v7._object = *(void **)(v17 + 24);
      unint64_t v14 = 2638659;
      goto LABEL_27;
    case 4uLL:
      uint64_t v9 = *(unsigned __int8 *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = (void *)0xE600000000000000;
      uint64_t countAndFlagsBits = 0x28524F4C4F43;
      v11._uint64_t countAndFlagsBits = 0x65676E61726FLL;
      switch(v9)
      {
        case 1:
          break;
        case 2:
          v11._uint64_t countAndFlagsBits = 0x776F6C6C6579;
          break;
        case 3:
          uint64_t v10 = (void *)0xE500000000000000;
          v11._uint64_t countAndFlagsBits = 0x6E65657267;
          break;
        case 4:
          uint64_t v10 = (void *)0xE400000000000000;
          v11._uint64_t countAndFlagsBits = 1702194274;
          break;
        case 5:
          v11._uint64_t countAndFlagsBits = 0x656C70727570;
          break;
        case 6:
          uint64_t v10 = (void *)0xE400000000000000;
          v11._uint64_t countAndFlagsBits = 2036429415;
          break;
        default:
          uint64_t v10 = (void *)0xE300000000000000;
          v11._uint64_t countAndFlagsBits = 6579570;
          break;
      }
      v11._object = v10;
      goto LABEL_37;
    case 5uLL:
      uint64_t v18 = a1 & 0xFFFFFFFFFFFFFFFLL;
      v7._uint64_t countAndFlagsBits = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v7._object = *(void **)(v18 + 24);
      uint64_t v8 = 1297044038;
LABEL_18:
      unint64_t v14 = v8 & 0xFFFF0000FFFFFFFFLL | 0x2800000000;
      goto LABEL_27;
    case 6uLL:
      uint64_t v19 = a1 & 0xFFFFFFFFFFFFFFFLL;
      v28._uint64_t countAndFlagsBits = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v28._object = *(void **)(v19 + 24);
      uint64_t v20 = *(void *)(v19 + 32);
      uint64_t v21 = *(void **)(v19 + 40);
      uint64_t countAndFlagsBits = 0x28524544414548;
      sub_1005E1E30(v28);
      v29._uint64_t countAndFlagsBits = 61;
      v29._object = (void *)0xE100000000000000;
      sub_1005E1E30(v29);
      v7._uint64_t countAndFlagsBits = v20;
      v7._object = v21;
      goto LABEL_28;
    case 7uLL:
      unint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t countAndFlagsBits = 542396238;
      sub_100416334(v1);
      v30._uint64_t countAndFlagsBits = SearchRequest.Predicate.description.getter(v1);
      sub_1005E1E30(v30);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 8uLL:
      unint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      sub_100416334(v1);
      sub_100416334(v2);
      v22._uint64_t countAndFlagsBits = SearchRequest.Predicate.description.getter(v1);
      if (!(v1 >> 60))
      {
        sub_1005E1E30(v22);
        swift_bridgeObjectRelease();
        v31._uint64_t countAndFlagsBits = 41;
        v31._object = (void *)0xE100000000000000;
        sub_1005E1E30(v31);
        v22._uint64_t countAndFlagsBits = 40;
      }
      uint64_t countAndFlagsBits = v22._countAndFlagsBits;
      v32._uint64_t countAndFlagsBits = 542265120;
      v32._object = (void *)0xE400000000000000;
      sub_1005E1E30(v32);
      v4._uint64_t countAndFlagsBits = SearchRequest.Predicate.description.getter(v2);
      object = v4._object;
      if (v2 >> 60) {
        goto LABEL_6;
      }
      goto LABEL_5;
    case 9uLL:
      uint64_t v12 = 0x2845434E4953;
LABEL_15:
      uint64_t countAndFlagsBits = v12;
      v11._uint64_t countAndFlagsBits = SearchRequest.Predicate.Day.description.getter();
LABEL_37:
      sub_1005E1E30(v11);
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 0xAuLL:
      uint64_t v23 = a1 & 0xFFFFFFFFFFFFFFFLL;
      v7._uint64_t countAndFlagsBits = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v7._object = *(void **)(v23 + 24);
      unint64_t v14 = 0x285443454A425553;
      goto LABEL_27;
    case 0xBuLL:
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFFFLL;
      v7._uint64_t countAndFlagsBits = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v7._object = *(void **)(v13 + 24);
      unint64_t v14 = 2641748;
LABEL_27:
      uint64_t countAndFlagsBits = v14;
LABEL_28:
      sub_1005E1E30(v7);
LABEL_38:
      v33._uint64_t countAndFlagsBits = 41;
      v33._object = (void *)0xE100000000000000;
      sub_1005E1E30(v33);
      return countAndFlagsBits;
    case 0xCuLL:
      *((void *)&v15 + 1) = a1;
      *(void *)&long long v15 = a1 + 0x4000000000000000;
      uint64_t result = 0x4445524557534E41;
      switch((unint64_t)(v15 >> 3))
      {
        case 1uLL:
          uint64_t result = 0x444554454C4544;
          break;
        case 2uLL:
          uint64_t result = 0x44454747414C46;
          break;
        case 3uLL:
          uint64_t result = 1145128274;
          break;
        default:
          return result;
      }
      return result;
    default:
      unint64_t v1 = *(void *)(a1 + 16);
      unint64_t v2 = *(void *)(a1 + 24);
      sub_100416334(v1);
      sub_100416334(v2);
      v3._uint64_t countAndFlagsBits = SearchRequest.Predicate.description.getter(v1);
      if (v1 >> 60 == 8)
      {
        sub_1005E1E30(v3);
        swift_bridgeObjectRelease();
        v25._uint64_t countAndFlagsBits = 41;
        v25._object = (void *)0xE100000000000000;
        sub_1005E1E30(v25);
        v3._uint64_t countAndFlagsBits = 40;
      }
      uint64_t countAndFlagsBits = v3._countAndFlagsBits;
      v26._uint64_t countAndFlagsBits = 0x20444E4120;
      v26._object = (void *)0xE500000000000000;
      sub_1005E1E30(v26);
      v4._uint64_t countAndFlagsBits = SearchRequest.Predicate.description.getter(v2);
      object = v4._object;
      if (v2 >> 60 == 8)
      {
LABEL_5:
        v4._object = object;
        sub_1005E1E30(v4);
        swift_bridgeObjectRelease();
        v27._uint64_t countAndFlagsBits = 41;
        v27._object = (void *)0xE100000000000000;
        sub_1005E1E30(v27);
        v4._uint64_t countAndFlagsBits = 40;
        object = (void *)0xE100000000000000;
      }
LABEL_6:
      v4._object = object;
      sub_1005E1E30(v4);
      swift_bridgeObjectRelease();
      sub_1004163E4(v2);
LABEL_21:
      sub_1004163E4(v1);
      return countAndFlagsBits;
  }
}

uint64_t sub_100438C14()
{
  return SearchRequest.Predicate.description.getter(*v0);
}

uint64_t SearchRequest.Predicate.requiresBody.getter(unint64_t a1)
{
  uint64_t v1 = 0;
  switch(a1 >> 60)
  {
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
      return v1;
    case 2uLL:
      return 1;
    case 7uLL:
      unint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_100416334(v3);
      goto LABEL_8;
    case 8uLL:
      a1 &= 0xFFFFFFFFFFFFFFFuLL;
      goto LABEL_5;
    default:
LABEL_5:
      unint64_t v4 = *(void *)(a1 + 16);
      unint64_t v3 = *(void *)(a1 + 24);
      sub_100416334(v4);
      sub_100416334(v3);
      char v5 = SearchRequest.Predicate.requiresBody.getter(v4);
      sub_1004163E4(v4);
      if (v5)
      {
        sub_1004163E4(v3);
        return 1;
      }
      else
      {
LABEL_8:
        char v6 = SearchRequest.Predicate.requiresBody.getter(v3);
        sub_1004163E4(v3);
        return v6 & 1;
      }
  }
}

uint64_t static SearchRequest.RangesToExclude.__derived_struct_equals(_:_:)(int32x2_t *a1, uint64_t a2, char a3, int32x2_t *a4, uint64_t a5, char a6)
{
  sub_100079AB0(a1, a4);
  if (v10)
  {
    if (a3)
    {
      if (a6) {
        return 1;
      }
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100438D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  sub_100079AB0(*(int32x2_t **)a1, *(int32x2_t **)a2);
  if (v6)
  {
    if (v3)
    {
      if (v5) {
        return 1;
      }
    }
    else
    {
      if (v2 == v4) {
        char v8 = v5;
      }
      else {
        char v8 = 1;
      }
      if ((v8 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t _s16IMAP2Persistence13SearchRequestV4KindO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a2 & 4) == 0)
  {
    if ((a4 & 4) == 0)
    {
      swift_bridgeObjectRetain();
      sub_100416334(a2);
      swift_bridgeObjectRetain();
      sub_100416334(a4);
      if (sub_100436304(a1, a3))
      {
        char v8 = static SearchRequest.Predicate.__derived_enum_equals(_:_:)(a2, a4);
        swift_bridgeObjectRelease();
        sub_1004163E4(a4);
        swift_bridgeObjectRelease();
        sub_1004163E4(a2);
        if (v8) {
          return 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1004163E4(a4);
        swift_bridgeObjectRelease();
        sub_1004163E4(a2);
      }
    }
    return 0;
  }
  if ((a4 & 4) == 0) {
    return 0;
  }
  return sub_100435E24(a1, a3);
}

uint64_t _s16IMAP2Persistence13SearchRequestV23__derived_struct_equalsySbAC_ACtFZ_0(int a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  if (a1 != a4) {
    return 0;
  }
  if ((a3 & 4) != 0)
  {
    if (a6 & 4) != 0 && (sub_100435E24(a2, a5)) {
      return 1;
    }
  }
  else if ((a6 & 4) == 0)
  {
    swift_bridgeObjectRetain();
    sub_100416334(a3);
    swift_bridgeObjectRetain();
    sub_100416334(a6);
    if (sub_100436304(a2, a5))
    {
      char v10 = static SearchRequest.Predicate.__derived_enum_equals(_:_:)(a3, a6);
      swift_bridgeObjectRelease();
      sub_1004163E4(a6);
      swift_bridgeObjectRelease();
      sub_1004163E4(a3);
      if (v10) {
        return 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1004163E4(a6);
      swift_bridgeObjectRelease();
      sub_1004163E4(a3);
    }
  }
  return 0;
}

uint64_t sub_100438FD8()
{
  sub_1004163E4(*(void *)(v0 + 16));
  sub_1004163E4(*(void *)(v0 + 24));
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10043901C()
{
  unint64_t result = qword_100715298;
  if (!qword_100715298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715298);
  }
  return result;
}

unint64_t sub_100439074()
{
  unint64_t result = qword_1007152A0;
  if (!qword_1007152A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007152A0);
  }
  return result;
}

unint64_t sub_1004390CC()
{
  unint64_t result = qword_1007152A8;
  if (!qword_1007152A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007152A8);
  }
  return result;
}

unint64_t sub_100439124()
{
  unint64_t result = qword_1007152B0;
  if (!qword_1007152B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007152B0);
  }
  return result;
}

unint64_t destroy for SearchRequest(uint64_t a1)
{
  return sub_10041639C(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s16IMAP2Persistence13SearchRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_1004162EC(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for SearchRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_1004162EC(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_10041639C(v5, v6);
  return a1;
}

uint64_t assignWithTake for SearchRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_10041639C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 7 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 7);
  }
  unsigned int v3 = ((*(_DWORD *)(a1 + 16) >> 2) & 1 | (2 * (*(_DWORD *)(a1 + 16) & 3))) ^ 7;
  if (v3 >= 6) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SearchRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 6)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 7;
    if (a3 >= 7) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 7) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (-a2 >> 1) & 3 | (4 * (-a2 & 1));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchRequest()
{
  return &type metadata for SearchRequest;
}

{
  return &type metadata for SearchRequest;
}

unint64_t destroy for SearchRequest.Query(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 8);
  return sub_1004163E4(v2);
}

void *_s16IMAP2Persistence13SearchRequestV5QueryVwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  sub_100416334(v3);
  a1[1] = v3;
  return a1;
}

void *assignWithCopy for SearchRequest.Query(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a2[1];
  sub_100416334(v4);
  unint64_t v5 = a1[1];
  a1[1] = v4;
  sub_1004163E4(v5);
  return a1;
}

void *assignWithTake for SearchRequest.Query(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = a1[1];
  a1[1] = a2[1];
  sub_1004163E4(v4);
  return a1;
}

ValueMetadata *type metadata accessor for SearchRequest.Query()
{
  return &type metadata for SearchRequest.Query;
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchRequest.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1004162EC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

unint64_t destroy for SearchRequest.Kind(uint64_t a1)
{
  return sub_10041639C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for SearchRequest.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1004162EC(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_10041639C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SearchRequest.Kind(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10041639C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 7 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 7);
  }
  unsigned int v3 = ((*(_DWORD *)(a1 + 8) >> 2) & 1 | (2 * (*(_DWORD *)(a1 + 8) & 3))) ^ 7;
  if (v3 >= 6) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SearchRequest.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 6)
  {
    *(void *)unint64_t result = a2 - 7;
    *(void *)(result + 8) = 0;
    if (a3 >= 7) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 7) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (-a2 >> 1) & 3 | (4 * (-a2 & 1));
    }
  }
  return result;
}

uint64_t sub_1004395AC(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 8) >> 2) & 1;
}

uint64_t sub_1004395B8(uint64_t result)
{
  *(void *)(result + 8) &= ~4uLL;
  return result;
}

uint64_t sub_1004395C8(uint64_t result, char a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xFFFFFFFFFFFFFFF8 | (4 * (a2 & 1u));
  return result;
}

ValueMetadata *type metadata accessor for SearchRequest.Kind()
{
  return &type metadata for SearchRequest.Kind;
}

ValueMetadata *type metadata accessor for SearchRequest.ID()
{
  return &type metadata for SearchRequest.ID;
}

unint64_t *initializeBufferWithCopyOfBuffer for SearchRequest.Predicate(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_100416334(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for SearchRequest.Predicate(unint64_t *a1)
{
  return sub_1004163E4(*a1);
}

unint64_t *assignWithCopy for SearchRequest.Predicate(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_100416334(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1004163E4(v4);
  return a1;
}

unint64_t *assignWithTake for SearchRequest.Predicate(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1004163E4(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchRequest.Predicate(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x74 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 116);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x73) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SearchRequest.Predicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x73)
  {
    *(void *)unint64_t result = a2 - 116;
    if (a3 >= 0x74) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x74) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_10043974C(void *a1)
{
  uint64_t v1 = *a1 >> 60;
  if (v1 <= 0xB) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 12;
  }
}

void *sub_100439768(void *result)
{
  *result &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_100439778(unint64_t *result, uint64_t a2)
{
  if (a2 < 0xC)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 60;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 12);
    unint64_t v3 = 0xC000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for SearchRequest.Predicate()
{
  return &type metadata for SearchRequest.Predicate;
}

unsigned char *storeEnumTagSinglePayload for SearchRequest.Predicate.Color(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100439880);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchRequest.Predicate.Color()
{
  return &type metadata for SearchRequest.Predicate.Color;
}

ValueMetadata *type metadata accessor for SearchRequest.Predicate.Day()
{
  return &type metadata for SearchRequest.Predicate.Day;
}

ValueMetadata *type metadata accessor for SearchRequest.RangesToExclude()
{
  return &type metadata for SearchRequest.RangesToExclude;
}

uint64_t sub_1004398D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Activity.MailboxStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10043993C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10043999C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100439A18(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x100439B70);
      }
      uint64_t v8 = HIDWORD(a1) - (int)a1;
LABEL_6:
      sub_100008D24(a1, a2);
LABEL_7:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v11) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_21;
          }
          uint64_t v11 = (int)v11;
LABEL_12:
          if (v8 == v11)
          {
            if (v8 < 1)
            {
LABEL_17:
              char v15 = 1;
            }
            else
            {
              sub_100008D24(a3, a4);
              char v15 = sub_10043A794(a1, a2, a3, a4);
            }
          }
          else
          {
LABEL_16:
            char v15 = 0;
          }
          sub_1000094D4(a1, a2);
          return v15 & 1;
        case 2uLL:
          uint64_t v13 = *(void *)(a3 + 16);
          uint64_t v12 = *(void *)(a3 + 24);
          BOOL v14 = __OFSUB__(v12, v13);
          uint64_t v11 = v12 - v13;
          if (!v14) {
            goto LABEL_12;
          }
          goto LABEL_22;
        case 3uLL:
          if (v8) {
            goto LABEL_16;
          }
          goto LABEL_17;
        default:
          uint64_t v11 = BYTE6(a4);
          goto LABEL_12;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v8 = v9 - v10;
      if (!__OFSUB__(v9, v10)) {
        goto LABEL_6;
      }
      goto LABEL_20;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_7;
  }
}

uint64_t sub_100439B90(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7105633;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7105633;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x65766968637261;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x737466617264;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x64656767616C66;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1802401130;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1953391987;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6873617274;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x65766968637261) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x737466617264) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x64656767616C66) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1802401130) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1953391987;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6873617274) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100439D9C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7463656C65536F6ELL;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7463656C65536F6ELL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x64656B72616DLL;
      break;
    case 2:
      uint64_t v5 = 0x64656B72616D6E75;
      break;
    case 3:
      uint64_t v5 = 0x74736978456E6F6ELL;
      unint64_t v3 = 0xEB00000000746E65;
      break;
    case 4:
      uint64_t v5 = 0x697265666E496F6ELL;
      unint64_t v3 = 0xEB0000000073726FLL;
      break;
    case 5:
      uint64_t v5 = 0x6269726373627573;
      unint64_t v3 = 0xEA00000000006465;
      break;
    case 6:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x65746F6D6572;
      break;
    case 7:
      uint64_t v5 = 0x646C696843736168;
      unint64_t v3 = 0xEB000000006E6572;
      break;
    case 8:
      uint64_t v5 = 0x6968436F4E736168;
      unint64_t v3 = 0xED00006E6572646CLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x64656B72616DLL) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      if (v5 != 0x64656B72616D6E75) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      uint64_t v7 = 0x74736978456E6F6ELL;
      uint64_t v8 = 7630437;
      goto LABEL_17;
    case 4:
      uint64_t v7 = 0x697265666E496F6ELL;
      uint64_t v8 = 7565935;
LABEL_17:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v7) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEA00000000006465;
      if (v5 != 0x6269726373627573) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x65746F6D6572) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x646C696843736168;
      unint64_t v6 = 0xEB000000006E6572;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xED00006E6572646CLL;
      if (v5 != 0x6968436F4E736168) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_28:
      }
        char v9 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_10043A094(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 6581810;
  }
  else {
    uint64_t v2 = 7631665;
  }
  if (a2) {
    uint64_t v3 = 6581810;
  }
  else {
    uint64_t v3 = 7631665;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1005E3290();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

Swift::Int sub_10043A104()
{
  return sub_1005E3470();
}

uint64_t RemoteMailbox.SpecialUse.rawValue.getter(char a1)
{
  uint64_t result = 7105633;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65766968637261;
      break;
    case 2:
      uint64_t result = 0x737466617264;
      break;
    case 3:
      uint64_t result = 0x64656767616C66;
      break;
    case 4:
      uint64_t result = 1802401130;
      break;
    case 5:
      uint64_t result = 1953391987;
      break;
    case 6:
      uint64_t result = 0x6873617274;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **static RemoteMailbox.SpecialUse.allCases.getter()
{
  return &off_1006EEF80;
}

uint64_t sub_10043A2EC(unsigned __int8 *a1, char *a2)
{
  return sub_100439B90(*a1, *a2);
}

uint64_t sub_10043A2F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s16IMAP2Persistence13RemoteMailboxV10SpecialUseO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10043A328(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 7105633;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x65766968637261;
      goto LABEL_3;
    case 2:
      *a1 = 0x737466617264;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x64656767616C66;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 1802401130;
      a1[1] = 0xE400000000000000;
      break;
    case 5:
      *a1 = 1953391987;
      a1[1] = 0xE400000000000000;
      break;
    case 6:
      *a1 = 0x6873617274;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

Swift::Int sub_10043A404()
{
  return sub_10043A104();
}

uint64_t sub_10043A410()
{
  sub_1005E1DB0();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10043A508()
{
  return sub_10043A104();
}

void sub_10043A510(void *a1@<X8>)
{
  *a1 = &off_1006EEF80;
}

uint64_t sub_10043A520@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100008D24(a2, a3);
      uint64_t v10 = (char *)sub_1005E0550();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1005E0580();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1005E0570();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10043A784);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1000094D4(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1005E0550();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1005E0580();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1005E0570();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_10043A794(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_100008D24(a1, a2);
      char v5 = sub_10043A9C4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1000094D4(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_10043A9C4(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1000094D4(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_10043A520((uint64_t)__s1, a3, a4, &v14);
      sub_1000094D4(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_10043A9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1005E0550();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1005E0570();
  sub_10043A520(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV10SpecialUseOyAESg12NIOIMAPCore20D4InfoV9AttributeVcfC_0()
{
  UseAttribute.all.unsafeMutableAddressor();
  uint64_t v0 = sub_1005E1CB0();
  uint64_t v2 = v1;
  if (v0 == sub_1005E1CB0() && v2 == v3)
  {
    uint64_t v6 = 0;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v5 = sub_1005E3290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    UseAttribute.archive.unsafeMutableAddressor();
    uint64_t v8 = sub_1005E1CB0();
    uint64_t v10 = v9;
    if (v8 == sub_1005E1CB0() && v10 == v11)
    {
      uint64_t v6 = 1;
    }
    else
    {
      char v12 = sub_1005E3290();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
        uint64_t v6 = 1;
        goto LABEL_9;
      }
      UseAttribute.drafts.unsafeMutableAddressor();
      uint64_t v13 = sub_1005E1CB0();
      uint64_t v15 = v14;
      if (v13 == sub_1005E1CB0() && v15 == v16)
      {
        uint64_t v6 = 2;
      }
      else
      {
        char v17 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17)
        {
          uint64_t v6 = 2;
          goto LABEL_9;
        }
        UseAttribute.flagged.unsafeMutableAddressor();
        uint64_t v18 = sub_1005E1CB0();
        uint64_t v20 = v19;
        if (v18 == sub_1005E1CB0() && v20 == v21)
        {
          uint64_t v6 = 3;
        }
        else
        {
          char v22 = sub_1005E3290();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v22)
          {
            uint64_t v6 = 3;
            goto LABEL_9;
          }
          UseAttribute.junk.unsafeMutableAddressor();
          uint64_t v23 = sub_1005E1CB0();
          uint64_t v25 = v24;
          if (v23 == sub_1005E1CB0() && v25 == v26)
          {
            uint64_t v6 = 4;
          }
          else
          {
            char v27 = sub_1005E3290();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v27)
            {
              uint64_t v6 = 4;
              goto LABEL_9;
            }
            UseAttribute.sent.unsafeMutableAddressor();
            uint64_t v28 = sub_1005E1CB0();
            uint64_t v30 = v29;
            if (v28 == sub_1005E1CB0() && v30 == v31)
            {
              uint64_t v6 = 5;
            }
            else
            {
              char v32 = sub_1005E3290();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v32)
              {
                uint64_t v6 = 5;
                goto LABEL_9;
              }
              UseAttribute.trash.unsafeMutableAddressor();
              uint64_t v33 = sub_1005E1CB0();
              uint64_t v35 = v34;
              uint64_t v6 = 6;
              if (v33 != sub_1005E1CB0() || v35 != v36)
              {
                if (sub_1005E3290()) {
                  uint64_t v6 = 6;
                }
                else {
                  uint64_t v6 = 7;
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_8;
  }
  uint64_t v6 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s16IMAP2Persistence13RemoteMailboxV10SpecialUseO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1006EEEB8;
  v6._object = a2;
  unint64_t v4 = sub_1005E3050(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

unint64_t sub_10043AE54()
{
  unint64_t result = qword_1007152E8;
  if (!qword_1007152E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007152E8);
  }
  return result;
}

unint64_t sub_10043AEAC()
{
  unint64_t result = qword_1007152F0;
  if (!qword_1007152F0)
  {
    sub_10000744C(&qword_1007152F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007152F0);
  }
  return result;
}

unsigned char *_s10SpecialUseOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10043AFD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteMailbox.SpecialUse()
{
  return &type metadata for RemoteMailbox.SpecialUse;
}

uint64_t ConnectionStatus.Error.details.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ConnectionStatus.Error(0);
  return sub_1000079E4(v1 + *(int *)(v3 + 20), a1, &qword_100714520);
}

uint64_t ConnectionStatus.Error.details.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionStatus.Error(0);
  return sub_10036C7E8(a1, v1 + *(int *)(v3 + 20), &qword_100714520);
}

Swift::UInt32 (__swiftcall *ConnectionStatus.Error.details.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t ConnectionStatus.Error.backedOffUntil.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ConnectionStatus.Error(0);
  return sub_1000079E4(v1 + *(int *)(v3 + 24), a1, &qword_100714528);
}

uint64_t ConnectionStatus.Error.backedOffUntil.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionStatus.Error(0);
  return sub_10036C7E8(a1, v1 + *(int *)(v3 + 24), &qword_100714528);
}

Swift::UInt32 (__swiftcall *ConnectionStatus.Error.backedOffUntil.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t ConnectionStatus.Error.init(kind:details:backedOffUntil:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v9 = (uint64_t)&a4[*(int *)(v8 + 20)];
  uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = (uint64_t)&a4[*(int *)(v8 + 24)];
  uint64_t v12 = sub_1005E0970();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *a4 = a1;
  sub_10036C7E8(a2, v9, &qword_100714520);
  return sub_10036C7E8(a3, v11, &qword_100714528);
}

_UNKNOWN **static ConnectionStatus.Error.Kind.allCases.getter()
{
  return &off_1006EEFA8;
}

void sub_10043B2B0(void *a1@<X8>)
{
  *a1 = &off_1006EEFA8;
}

uint64_t ConnectionStatus.Error.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v44 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v42 - v5;
  uint64_t v7 = sub_1005E0970();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  int64_t v43 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = sub_10000566C(&qword_100715300) - 8;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ConnectionStatus.Error(0);
  uint64_t v16 = (uint64_t)&v1[*(int *)(v15 + 24)];
  uint64_t v17 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1000079E4((uint64_t)&v1[*(int *)(v15 + 20)], (uint64_t)v14, &qword_100714520);
  sub_1000079E4(v16, v17, &qword_100714528);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v45 = v2;
  uint64_t v19 = v8;
  LODWORD(v16) = v18(v14, 1, v2);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v17, 1, v7);
  if (v16 == 1)
  {
    if (v20 == 1)
    {
      uint64_t v46 = 0;
      unint64_t v47 = 0xE000000000000000;
      uint64_t v21 = (void *)0x80000001005EA620;
      v22._uint64_t countAndFlagsBits = 0xD000000000000011;
      switch(*v1)
      {
        case 1:
          unsigned int v23 = 1987208563;
          goto LABEL_17;
        case 2:
          uint64_t v35 = "serverUnavailable";
          goto LABEL_14;
        case 3:
          v22._uint64_t countAndFlagsBits = 0xD000000000000014;
          uint64_t v35 = "authenticationFailed";
LABEL_14:
          uint64_t v21 = (void *)((unint64_t)(v35 - 32) | 0x8000000000000000);
          break;
        case 4:
          uint64_t v21 = (void *)0xE700000000000000;
          v22._uint64_t countAndFlagsBits = 0x6B726F7774656ELL;
          break;
        case 5:
          unsigned int v23 = 1936875888;
LABEL_17:
          v22._uint64_t countAndFlagsBits = v23 | 0x7245726500000000;
          uint64_t v21 = (void *)0xEB00000000726F72;
          break;
        default:
          break;
      }
      v22._object = v21;
      sub_1005E1E30(v22);
      swift_bridgeObjectRelease();
      return v46;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v11, v17, v7);
      uint64_t v46 = 0;
      unint64_t v47 = 0xE000000000000000;
      sub_1005E2C80(18);
      char v27 = (void *)0x80000001005EA620;
      v28._uint64_t countAndFlagsBits = 0xD000000000000011;
      switch(*v1)
      {
        case 1:
          unsigned int v29 = 1987208563;
          goto LABEL_31;
        case 2:
          uint64_t v39 = "serverUnavailable";
          goto LABEL_28;
        case 3:
          v28._uint64_t countAndFlagsBits = 0xD000000000000014;
          uint64_t v39 = "authenticationFailed";
LABEL_28:
          char v27 = (void *)((unint64_t)(v39 - 32) | 0x8000000000000000);
          break;
        case 4:
          char v27 = (void *)0xE700000000000000;
          v28._uint64_t countAndFlagsBits = 0x6B726F7774656ELL;
          break;
        case 5:
          unsigned int v29 = 1936875888;
LABEL_31:
          v28._uint64_t countAndFlagsBits = v29 | 0x7245726500000000;
          char v27 = (void *)0xEB00000000726F72;
          break;
        default:
          break;
      }
      v28._object = v27;
      sub_1005E1E30(v28);
      swift_bridgeObjectRelease();
      v50._uint64_t countAndFlagsBits = 0x64656B6361627B20;
      v50._object = (void *)0xED0000203A66664FLL;
      sub_1005E1E30(v50);
      sub_10044053C(&qword_100715308);
      v51._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v51);
      swift_bridgeObjectRelease();
      v52._uint64_t countAndFlagsBits = 125;
      v52._object = (void *)0xE100000000000000;
      sub_1005E1E30(v52);
      uint64_t v36 = v46;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v7);
    }
  }
  else
  {
    if (v20 == 1)
    {
      sub_1004404D4((uint64_t)v14, (uint64_t)v6, type metadata accessor for ConnectionStatus.Error.Details);
      uint64_t v46 = 0;
      unint64_t v47 = 0xE000000000000000;
      sub_1005E2C80(16);
      uint64_t v24 = (void *)0x80000001005EA620;
      v25._uint64_t countAndFlagsBits = 0xD000000000000011;
      switch(*v1)
      {
        case 1:
          unsigned int v26 = 1987208563;
          goto LABEL_24;
        case 2:
          char v37 = "serverUnavailable";
          goto LABEL_21;
        case 3:
          v25._uint64_t countAndFlagsBits = 0xD000000000000014;
          char v37 = "authenticationFailed";
LABEL_21:
          uint64_t v24 = (void *)((unint64_t)(v37 - 32) | 0x8000000000000000);
          break;
        case 4:
          uint64_t v24 = (void *)0xE700000000000000;
          v25._uint64_t countAndFlagsBits = 0x6B726F7774656ELL;
          break;
        case 5:
          unsigned int v26 = 1936875888;
LABEL_24:
          v25._uint64_t countAndFlagsBits = v26 | 0x7245726500000000;
          uint64_t v24 = (void *)0xEB00000000726F72;
          break;
        default:
          break;
      }
      v25._object = v24;
      sub_1005E1E30(v25);
      swift_bridgeObjectRelease();
      v48._uint64_t countAndFlagsBits = 0x6C69617465647B20;
      v48._object = (void *)0xEB00000000203A73;
      sub_1005E1E30(v48);
      sub_1005E2E90();
      v49._uint64_t countAndFlagsBits = 125;
      v49._object = (void *)0xE100000000000000;
      sub_1005E1E30(v49);
      uint64_t v36 = v46;
      uint64_t v38 = (uint64_t)v6;
    }
    else
    {
      uint64_t v30 = v44;
      sub_1004404D4((uint64_t)v14, v44, type metadata accessor for ConnectionStatus.Error.Details);
      uint64_t v31 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v43, v17, v7);
      uint64_t v46 = 0;
      unint64_t v47 = 0xE000000000000000;
      sub_1005E2C80(31);
      char v32 = (void *)0x80000001005EA620;
      v33._uint64_t countAndFlagsBits = 0xD000000000000011;
      switch(*v1)
      {
        case 1:
          unsigned int v34 = 1987208563;
          goto LABEL_38;
        case 2:
          uint64_t v40 = "serverUnavailable";
          goto LABEL_35;
        case 3:
          v33._uint64_t countAndFlagsBits = 0xD000000000000014;
          uint64_t v40 = "authenticationFailed";
LABEL_35:
          char v32 = (void *)((unint64_t)(v40 - 32) | 0x8000000000000000);
          break;
        case 4:
          char v32 = (void *)0xE700000000000000;
          v33._uint64_t countAndFlagsBits = 0x6B726F7774656ELL;
          break;
        case 5:
          unsigned int v34 = 1936875888;
LABEL_38:
          v33._uint64_t countAndFlagsBits = v34 | 0x7245726500000000;
          char v32 = (void *)0xEB00000000726F72;
          break;
        default:
          break;
      }
      v33._object = v32;
      sub_1005E1E30(v33);
      swift_bridgeObjectRelease();
      v53._uint64_t countAndFlagsBits = 0x6C69617465647B20;
      v53._object = (void *)0xEB00000000203A73;
      sub_1005E1E30(v53);
      sub_1005E2E90();
      v54._uint64_t countAndFlagsBits = 0x64656B636162202CLL;
      v54._object = (void *)0xED0000203A66664FLL;
      sub_1005E1E30(v54);
      sub_10044053C(&qword_100715308);
      v55._uint64_t countAndFlagsBits = sub_1005E3230();
      sub_1005E1E30(v55);
      swift_bridgeObjectRelease();
      v56._uint64_t countAndFlagsBits = 125;
      v56._object = (void *)0xE100000000000000;
      sub_1005E1E30(v56);
      uint64_t v36 = v46;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v7);
      uint64_t v38 = v30;
    }
    sub_10043D2E4(v38, type metadata accessor for ConnectionStatus.Error.Details);
  }
  return v36;
}

uint64_t ConnectionStatus.Error.Kind.description.getter(char a1)
{
  uint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1987208563;
      goto LABEL_6;
    case 3:
      uint64_t result = 0xD000000000000014;
      break;
    case 4:
      uint64_t result = 0x6B726F7774656ELL;
      break;
    case 5:
      unsigned int v3 = 1936875888;
LABEL_6:
      uint64_t result = v3 | 0x7245726500000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10043BC08()
{
  return ConnectionStatus.Error.Kind.description.getter(*v0);
}

unint64_t ConnectionStatus.Error.Details.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1650();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for ConnectionStatus.Error.Details(0);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)&v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10043D27C(v1, (uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = *v7;
      uint64_t v16 = (void *)v7[1];
      uint64_t v17 = v7[2];
      uint64_t v18 = (void *)v7[3];
      unint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      sub_1005E2C80(45);
      swift_bridgeObjectRelease();
      unint64_t v25 = 0xD00000000000001DLL;
      unint64_t v26 = 0x80000001005EA680;
      v29._uint64_t countAndFlagsBits = v15;
      v29._object = v16;
      sub_1005E1E30(v29);
      swift_bridgeObjectRelease();
      v30._uint64_t countAndFlagsBits = 0x3A74786574202C27;
      v30._object = (void *)0xEA00000000002720;
      sub_1005E1E30(v30);
      v31._uint64_t countAndFlagsBits = v17;
      v31._object = v18;
      sub_1005E1E30(v31);
      goto LABEL_8;
    case 2u:
      uint64_t v11 = *v7;
      uint64_t v12 = (void *)v7[1];
      unint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      sub_1005E2C80(25);
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD000000000000015;
      uint64_t v14 = "serverMessage(text: '";
      goto LABEL_6;
    case 3u:
      uint64_t v11 = *v7;
      uint64_t v12 = (void *)v7[1];
      unint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      sub_1005E2C80(22);
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD000000000000012;
      uint64_t v14 = "serverCode(code: '";
LABEL_6:
      unint64_t v25 = v13;
      unint64_t v26 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      v28._uint64_t countAndFlagsBits = v11;
      v28._object = v12;
      sub_1005E1E30(v28);
LABEL_8:
      swift_bridgeObjectRelease();
      v10._uint64_t countAndFlagsBits = 10535;
      goto LABEL_9;
    default:
      int v8 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v7, v2);
      if (v8 == enum case for NWError.posix(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v7, v2);
        int v9 = *(_DWORD *)v7;
        unint64_t v25 = 0;
        unint64_t v26 = 0xE000000000000000;
        sub_1005E2C80(24);
        v27._uint64_t countAndFlagsBits = 0xD000000000000014;
        v27._object = (void *)0x80000001005EA6E0;
        sub_1005E1E30(v27);
        int v24 = v9;
        sub_1005E2E90();
        v10._uint64_t countAndFlagsBits = 10537;
LABEL_9:
        v10._object = (void *)0xE200000000000000;
        sub_1005E1E30(v10);
        return v25;
      }
      if (v8 == enum case for NWError.dns(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v7, v2);
        int v21 = *(_DWORD *)v7;
        unint64_t v25 = 0;
        unint64_t v26 = 0xE000000000000000;
        sub_1005E2C80(22);
        swift_bridgeObjectRelease();
        Swift::String v22 = "networkError(.dns(";
LABEL_15:
        unint64_t v25 = 0xD000000000000012;
        unint64_t v26 = (unint64_t)(v22 - 32) | 0x8000000000000000;
        int v24 = v21;
        v32._uint64_t countAndFlagsBits = sub_1005E3230();
        sub_1005E1E30(v32);
        swift_bridgeObjectRelease();
        v10._uint64_t countAndFlagsBits = 10537;
        goto LABEL_9;
      }
      if (v8 == enum case for NWError.tls(_:))
      {
        (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v7, v2);
        int v21 = *(_DWORD *)v7;
        unint64_t v25 = 0;
        unint64_t v26 = 0xE000000000000000;
        sub_1005E2C80(22);
        swift_bridgeObjectRelease();
        Swift::String v22 = "networkError(.tls(";
        goto LABEL_15;
      }
      (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v3 + 32))(v5, v7, v2);
      unint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      sub_1005E2C80(16);
      v33._uint64_t countAndFlagsBits = 0x456B726F7774656ELL;
      v33._object = (void *)0xED000028726F7272;
      sub_1005E1E30(v33);
      sub_1005E2E90();
      v34._uint64_t countAndFlagsBits = 41;
      v34._object = (void *)0xE100000000000000;
      sub_1005E1E30(v34);
      unint64_t v19 = v25;
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      return v19;
  }
}

uint64_t ConnectionStatus.mailbox.getter()
{
  uint64_t v1 = type metadata accessor for ConnectionStatus(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10043D27C(v0, (uint64_t)v3, type metadata accessor for ConnectionStatus);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2) {
    return *(void *)v3;
  }
  if (EnumCaseMultiPayload - 3 >= 2) {
    sub_10043D2E4((uint64_t)v3, type metadata accessor for ConnectionStatus);
  }
  return 0;
}

uint64_t _s16IMAP2Persistence16ConnectionStatusO5ErrorV7DetailsO21__derived_enum_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005E1650();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  __chkstk_darwin();
  uint64_t v38 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConnectionStatus.Error.Details(0);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  int v9 = (uint64_t *)((char *)&v37 - v8);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v37 - v10);
  __chkstk_darwin();
  unint64_t v13 = (char *)&v37 - v12;
  sub_10000566C(&qword_100715528);
  uint64_t v14 = __chkstk_darwin();
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v16[*(int *)(v14 + 56)];
  sub_10043D27C(a1, (uint64_t)v16, type metadata accessor for ConnectionStatus.Error.Details);
  sub_10043D27C(a2, (uint64_t)v17, type metadata accessor for ConnectionStatus.Error.Details);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10043D27C((uint64_t)v16, (uint64_t)v11, type metadata accessor for ConnectionStatus.Error.Details);
      uint64_t v22 = *v11;
      uint64_t v21 = v11[1];
      uint64_t v24 = v11[2];
      uint64_t v23 = v11[3];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      uint64_t v26 = *((void *)v17 + 2);
      uint64_t v25 = *((void *)v17 + 3);
      if (v22 == *(void *)v17 && v21 == *((void *)v17 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v28 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
      }
      if (v24 == v26 && v23 == v25) {
        goto LABEL_31;
      }
      goto LABEL_29;
    case 2u:
      sub_10043D27C((uint64_t)v16, (uint64_t)v9, type metadata accessor for ConnectionStatus.Error.Details);
      uint64_t v19 = *v9;
      uint64_t v18 = v9[1];
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_20;
      }
      goto LABEL_7;
    case 3u:
      sub_10043D27C((uint64_t)v16, (uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
      uint64_t v19 = *v7;
      uint64_t v18 = v7[1];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
LABEL_7:
      if (v19 == *(void *)v17 && v18 == *((void *)v17 + 1))
      {
LABEL_31:
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_29:
        char v35 = sub_1005E3290();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {
LABEL_30:
          sub_10043D2E4((uint64_t)v16, type metadata accessor for ConnectionStatus.Error.Details);
          goto LABEL_22;
        }
      }
      sub_10043D2E4((uint64_t)v16, type metadata accessor for ConnectionStatus.Error.Details);
      char v29 = 1;
      break;
    default:
      sub_10043D27C((uint64_t)v16, (uint64_t)v13, type metadata accessor for ConnectionStatus.Error.Details);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
LABEL_21:
        sub_100007A48((uint64_t)v16, &qword_100715528);
LABEL_22:
        char v29 = 0;
      }
      else
      {
        Swift::String v31 = v38;
        uint64_t v30 = v39;
        uint64_t v32 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v17, v40);
        char v29 = sub_1005E1640();
        Swift::String v33 = *(void (**)(char *, uint64_t))(v30 + 8);
        v33(v31, v32);
        v33(v13, v32);
        sub_10043D2E4((uint64_t)v16, type metadata accessor for ConnectionStatus.Error.Details);
      }
      break;
  }
  return v29 & 1;
}

BOOL _s16IMAP2Persistence16ConnectionStatusO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ConnectionStatus.Error(0);
  __chkstk_darwin();
  uint64_t v5 = (unsigned __int8 *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConnectionStatus(0);
  __chkstk_darwin();
  uint64_t v7 = (unsigned __int8 *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v9 = (char *)&v21 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v21 - v10;
  sub_10000566C(&qword_100715520);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10043D27C(a1, (uint64_t)v14, type metadata accessor for ConnectionStatus);
  sub_10043D27C(a2, v15, type metadata accessor for ConnectionStatus);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10043D27C((uint64_t)v14, (uint64_t)v9, type metadata accessor for ConnectionStatus);
      uint64_t v16 = *(void *)v9;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_9;
      }
      uint64_t v17 = *((unsigned int *)v9 + 2);
      goto LABEL_6;
    case 2u:
      sub_10043D27C((uint64_t)v14, (uint64_t)v7, type metadata accessor for ConnectionStatus);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1004404D4(v15, (uint64_t)v5, type metadata accessor for ConnectionStatus.Error);
        BOOL v19 = _s16IMAP2Persistence16ConnectionStatusO5ErrorV23__derived_struct_equalsySbAE_AEtFZ_0(v7, v5);
        sub_10043D2E4((uint64_t)v5, type metadata accessor for ConnectionStatus.Error);
        sub_10043D2E4((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
        sub_10043D2E4((uint64_t)v14, type metadata accessor for ConnectionStatus);
        return v19;
      }
      sub_10043D2E4((uint64_t)v7, type metadata accessor for ConnectionStatus.Error);
      goto LABEL_17;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_17;
      }
      goto LABEL_15;
    case 4u:
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_15;
      }
      goto LABEL_17;
    default:
      sub_10043D27C((uint64_t)v14, (uint64_t)v11, type metadata accessor for ConnectionStatus);
      uint64_t v16 = *(void *)v11;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_9:
        swift_bridgeObjectRelease();
LABEL_17:
        sub_100007A48((uint64_t)v14, &qword_100715520);
      }
      else
      {
        uint64_t v17 = *((unsigned int *)v11 + 2);
LABEL_6:
        if ((v17 | (v17 << 32)) == (*(unsigned int *)(v15 + 8) | ((unint64_t)*(unsigned int *)(v15 + 8) << 32)))
        {
          BOOL v18 = sub_100357CFC(v16, *(void *)v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v18)
          {
LABEL_15:
            sub_10043D2E4((uint64_t)v14, type metadata accessor for ConnectionStatus);
            return 1;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_10043D2E4((uint64_t)v14, type metadata accessor for ConnectionStatus);
      }
      return 0;
  }
}

BOOL _s16IMAP2Persistence16ConnectionStatusO5ErrorV23__derived_struct_equalsySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v60 = a2;
  uint64_t v57 = sub_1005E0970();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin();
  Swift::String v53 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000566C(&qword_100714888);
  __chkstk_darwin();
  uint64_t v56 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100714528);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v47 - v7;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
  unint64_t v58 = *(unsigned __int8 **)(v11 - 8);
  uint64_t v59 = v11;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_100715530);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000566C(&qword_100714520);
  __chkstk_darwin();
  __chkstk_darwin();
  BOOL v18 = (char *)&v47 - v17;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = a1;
  int v23 = *a1;
  uint64_t v24 = v60;
  if (v23 != *v60) {
    return 0;
  }
  Swift::String v51 = v10;
  uint64_t v52 = v19;
  Swift::String v49 = v13;
  Swift::String v50 = v8;
  Swift::String v48 = v6;
  uint64_t v25 = type metadata accessor for ConnectionStatus.Error(0);
  sub_1000079E4((uint64_t)&v22[*(int *)(v25 + 20)], (uint64_t)v21, &qword_100714520);
  uint64_t v26 = v24;
  sub_1000079E4((uint64_t)&v24[*(int *)(v25 + 20)], (uint64_t)v18, &qword_100714520);
  uint64_t v27 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1000079E4((uint64_t)v21, (uint64_t)v16, &qword_100714520);
  sub_1000079E4((uint64_t)v18, v27, &qword_100714520);
  uint64_t v28 = v59;
  char v29 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v58 + 6);
  if (v29((uint64_t)v16, 1, v59) != 1)
  {
    uint64_t v30 = v52;
    sub_1000079E4((uint64_t)v16, v52, &qword_100714520);
    if (v29(v27, 1, v28) != 1)
    {
      unint64_t v58 = v22;
      uint64_t v33 = (uint64_t)v49;
      sub_1004404D4(v27, (uint64_t)v49, type metadata accessor for ConnectionStatus.Error.Details);
      char v34 = _s16IMAP2Persistence16ConnectionStatusO5ErrorV7DetailsO21__derived_enum_equalsySbAG_AGtFZ_0(v30, v33);
      sub_10043D2E4(v33, type metadata accessor for ConnectionStatus.Error.Details);
      sub_100007A48((uint64_t)v18, &qword_100714520);
      sub_100007A48((uint64_t)v21, &qword_100714520);
      sub_10043D2E4(v30, type metadata accessor for ConnectionStatus.Error.Details);
      sub_100007A48((uint64_t)v16, &qword_100714520);
      uint64_t v26 = v60;
      if ((v34 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
    sub_100007A48((uint64_t)v18, &qword_100714520);
    sub_100007A48((uint64_t)v21, &qword_100714520);
    sub_10043D2E4(v30, type metadata accessor for ConnectionStatus.Error.Details);
LABEL_7:
    Swift::String v31 = &qword_100715530;
    uint64_t v32 = (uint64_t)v16;
LABEL_15:
    sub_100007A48(v32, v31);
    return 0;
  }
  unint64_t v58 = v22;
  sub_100007A48((uint64_t)v18, &qword_100714520);
  sub_100007A48((uint64_t)v21, &qword_100714520);
  if (v29(v27, 1, v28) != 1) {
    goto LABEL_7;
  }
  sub_100007A48((uint64_t)v16, &qword_100714520);
LABEL_9:
  uint64_t v35 = (uint64_t)v51;
  sub_1000079E4((uint64_t)&v58[*(int *)(v25 + 24)], (uint64_t)v51, &qword_100714528);
  uint64_t v36 = (uint64_t)v50;
  sub_1000079E4((uint64_t)&v26[*(int *)(v25 + 24)], (uint64_t)v50, &qword_100714528);
  uint64_t v37 = v56;
  uint64_t v38 = v56 + *(int *)(v54 + 48);
  sub_1000079E4(v35, v56, &qword_100714528);
  sub_1000079E4(v36, v38, &qword_100714528);
  uint64_t v39 = v55;
  uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  uint64_t v41 = v57;
  if (v40(v37, 1, v57) == 1)
  {
    sub_100007A48(v36, &qword_100714528);
    sub_100007A48(v35, &qword_100714528);
    if (v40(v38, 1, v41) == 1)
    {
      sub_100007A48(v37, &qword_100714528);
      return 1;
    }
    goto LABEL_14;
  }
  uint64_t v42 = (uint64_t)v48;
  sub_1000079E4(v37, (uint64_t)v48, &qword_100714528);
  if (v40(v38, 1, v41) == 1)
  {
    sub_100007A48(v36, &qword_100714528);
    sub_100007A48(v35, &qword_100714528);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v41);
LABEL_14:
    Swift::String v31 = &qword_100714888;
    uint64_t v32 = v37;
    goto LABEL_15;
  }
  uint64_t v44 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v53, v38, v41);
  sub_10044053C((unint64_t *)&qword_1007148A8);
  char v45 = sub_1005E1BC0();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v46(v44, v41);
  sub_100007A48(v36, &qword_100714528);
  sub_100007A48(v35, &qword_100714528);
  v46((char *)v42, v41);
  sub_100007A48(v37, &qword_100714528);
  return (v45 & 1) != 0;
}

uint64_t type metadata accessor for ConnectionStatus.Error(uint64_t a1)
{
  return sub_10003B314(a1, (uint64_t *)&unk_100715428);
}

uint64_t type metadata accessor for ConnectionStatus.Error.Details(uint64_t a1)
{
  return sub_10003B314(a1, qword_1007154E8);
}

uint64_t type metadata accessor for ConnectionStatus(uint64_t a1)
{
  return sub_10003B314(a1, qword_100715398);
}

uint64_t sub_10043D27C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10043D2E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10043D348()
{
  unint64_t result = qword_100715310;
  if (!qword_100715310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715310);
  }
  return result;
}

unint64_t sub_10043D3A0()
{
  unint64_t result = qword_100715318;
  if (!qword_100715318)
  {
    sub_10000744C(&qword_100715320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715318);
  }
  return result;
}

_DWORD *initializeBufferWithCopyOfBuffer for ConnectionStatus(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (_DWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      uint64_t v14 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_10000566C(&qword_100714520);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v19 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v19;
            uint64_t v20 = v13[2];
            uint64_t v21 = v13[3];
            v12[2] = v20;
            v12[3] = v21;
            swift_bridgeObjectRetain();
            goto LABEL_14;
          case 2u:
          case 3u:
            uint64_t v17 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v17;
LABEL_14:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v18 = sub_1005E1650();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v22 = *(int *)(v10 + 24);
      int v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = sub_1005E0970();
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        uint64_t v27 = sub_10000566C(&qword_100714528);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for ConnectionStatus(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v4 = a1 + *(int *)(v3 + 20);
    uint64_t v5 = type metadata accessor for ConnectionStatus.Error.Details(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v6 = sub_1005E1650();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
          break;
        case 1u:
          swift_bridgeObjectRelease();
          goto LABEL_10;
        case 2u:
        case 3u:
LABEL_10:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
    }
    uint64_t v7 = a1 + *(int *)(v3 + 24);
    uint64_t v8 = sub_1005E0970();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
    if (!result)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v9(v7, v8);
    }
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_DWORD *initializeWithCopy for ConnectionStatus(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_10000566C(&qword_100714520);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v16 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v16;
          uint64_t v17 = v10[2];
          uint64_t v18 = v10[3];
          void v9[2] = v17;
          v9[3] = v18;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 2u:
        case 3u:
          uint64_t v14 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v14;
LABEL_11:
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v15 = sub_1005E1650();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v19 = *(int *)(v7 + 24);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_1005E0970();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_10000566C(&qword_100714528);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    goto LABEL_16;
  }
  if (EnumCaseMultiPayload <= 1)
  {
    *(void *)a1 = *(void *)a2;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
LABEL_16:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_DWORD *assignWithCopy for ConnectionStatus(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10043D2E4((uint64_t)a1, type metadata accessor for ConnectionStatus);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_10000566C(&qword_100714520);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *uint64_t v9 = *v10;
            v9[1] = v10[1];
            void v9[2] = v10[2];
            v9[3] = v10[3];
            swift_bridgeObjectRetain();
            goto LABEL_12;
          case 2u:
          case 3u:
            *uint64_t v9 = *v10;
            v9[1] = v10[1];
LABEL_12:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v14 = sub_1005E1650();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v15 = *(int *)(v7 + 24);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_1005E0970();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_10000566C(&qword_100714528);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      goto LABEL_17;
    }
    if (EnumCaseMultiPayload <= 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *initializeWithTake for ConnectionStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10000566C(&qword_100714520);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      else
      {
        uint64_t v13 = sub_1005E1650();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_1005E0970();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_10000566C(&qword_100714528);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for ConnectionStatus(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10043D2E4((uint64_t)a1, type metadata accessor for ConnectionStatus);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ConnectionStatus.Error(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_10000566C(&qword_100714520);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v8, v9, *(void *)(v11 + 64));
        }
        else
        {
          uint64_t v13 = sub_1005E1650();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1005E0970();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_10000566C(&qword_100714528);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10043E63C()
{
  uint64_t result = type metadata accessor for ConnectionStatus.Error(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ConnectionStatus.Error(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for ConnectionStatus.Error.Details(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10000566C(&qword_100714520);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v16 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v16;
          uint64_t v17 = v9[2];
          uint64_t v18 = v9[3];
          _OWORD v8[2] = v17;
          v8[3] = v18;
          swift_bridgeObjectRetain();
          goto LABEL_9;
        case 2u:
        case 3u:
          uint64_t v14 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v14;
LABEL_9:
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v15 = sub_1005E1650();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_1005E0970();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_10000566C(&qword_100714528);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
  }
  return v4;
}

uint64_t destroy for ConnectionStatus.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ConnectionStatus.Error.Details(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1005E1650();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
        break;
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      case 2u:
      case 3u:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1005E0970();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

unsigned char *initializeWithCopy for ConnectionStatus.Error(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000566C(&qword_100714520);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v14;
        uint64_t v15 = v8[2];
        uint64_t v16 = v8[3];
        _OWORD v7[2] = v15;
        _OWORD v7[3] = v16;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 2u:
      case 3u:
        uint64_t v12 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v12;
LABEL_7:
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v13 = sub_1005E1650();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_1005E0970();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_10000566C(&qword_100714528);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

unsigned char *assignWithCopy for ConnectionStatus.Error(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
          _OWORD v7[2] = v8[2];
          _OWORD v7[3] = v8[3];
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 2u:
        case 3u:
          *uint64_t v7 = *v8;
          v7[1] = v8[1];
LABEL_13:
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v16 = sub_1005E1650();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v7, v8, v16);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v14 = sub_10000566C(&qword_100714520);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_15;
  }
  if (v13)
  {
    sub_10043D2E4((uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10043D2E4((uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        _OWORD v7[2] = v8[2];
        _OWORD v7[3] = v8[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v15 = sub_1005E1650();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v7, v8, v15);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_15:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_1005E0970();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 24))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_20;
  }
  if (v24)
  {
LABEL_20:
    uint64_t v25 = sub_10000566C(&qword_100714528);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

unsigned char *initializeWithTake for ConnectionStatus.Error(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000566C(&qword_100714520);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    else
    {
      uint64_t v12 = sub_1005E1650();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1005E0970();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_10000566C(&qword_100714528);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

unsigned char *assignWithTake for ConnectionStatus.Error(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for ConnectionStatus.Error.Details(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_10043D2E4((uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v26 = sub_1005E1650();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(v7, v8, v26);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v14 = *(void *)(v10 + 64);
LABEL_8:
      memcpy(v7, v8, v14);
      goto LABEL_14;
    }
    sub_10043D2E4((uint64_t)v7, type metadata accessor for ConnectionStatus.Error.Details);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(sub_10000566C(&qword_100714520) - 8) + 64);
    goto LABEL_8;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  else
  {
    uint64_t v15 = sub_1005E1650();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v7, v8, v15);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_1005E0970();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 40))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_19;
  }
  if (v23)
  {
LABEL_19:
    uint64_t v24 = sub_10000566C(&qword_100714528);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectionStatus.Error(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043F8F8);
}

uint64_t sub_10043F8F8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 250)
  {
    unsigned int v4 = *a1;
    if (v4 >= 6) {
      return v4 - 5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100714520);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &a1[*(int *)(a3 + 20)];
      int v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100714528);
      size_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = &a1[*(int *)(a3 + 24)];
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ConnectionStatus.Error(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10043FA38);
}

unsigned char *sub_10043FA38(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 250)
  {
    *uint64_t result = a2 + 5;
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100714520);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 20)];
      int v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000566C(&qword_100714528);
      size_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = &v5[*(int *)(a4 + 24)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10043FB68()
{
  sub_10043FC74(319, &qword_100715438, (void (*)(uint64_t))type metadata accessor for ConnectionStatus.Error.Details);
  if (v0 <= 0x3F)
  {
    sub_10043FC74(319, (unint64_t *)&unk_100715440, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10043FC74(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1005E28C0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ConnectionStatus.Error.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10043FD94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectionStatus.Error.Kind()
{
  return &type metadata for ConnectionStatus.Error.Kind;
}

uint64_t *initializeBufferWithCopyOfBuffer for ConnectionStatus.Error.Details(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        uint64_t v10 = a2[2];
        uint64_t v11 = a2[3];
        a1[2] = v10;
        a1[3] = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
      case 3u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = sub_1005E1650();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ConnectionStatus.Error.Details(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_1005E1650();
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
    case 3:
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for ConnectionStatus.Error.Details(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[2];
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
    case 3u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = sub_1005E1650();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ConnectionStatus.Error.Details(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10043D2E4((uint64_t)a1, type metadata accessor for ConnectionStatus.Error.Details);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = sub_1005E1650();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ConnectionStatus.Error.Details(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1005E1650();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ConnectionStatus.Error.Details(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10043D2E4((uint64_t)a1, type metadata accessor for ConnectionStatus.Error.Details);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1005E1650();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100440438()
{
  uint64_t result = sub_1005E1650();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1004404D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10044053C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1005E0970();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_100440580(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v31 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  while (1)
  {
LABEL_7:
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v12 >= v31) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v31) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v31) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_23:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v17 = *v15;
    Swift::UInt v16 = v15[1];
    sub_1005E33F0();
    sub_1005E3410(v16);
    uint64_t result = sub_1005E3470();
    uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v19 = result & ~v18;
    if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      return 0;
    }
    uint64_t v20 = ~v18;
    while (1)
    {
      uint64_t v21 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v19);
      if (v21[1] == v16)
      {
        uint64_t v22 = *v21;
        uint64_t v23 = *(void *)(v22 + 16);
        if (v23 == *(void *)(v17 + 16))
        {
          if (v23) {
            BOOL v24 = v22 == v17;
          }
          else {
            BOOL v24 = 1;
          }
          if (v24) {
            goto LABEL_7;
          }
          if (*(unsigned __int8 *)(v22 + 32) == *(unsigned __int8 *)(v17 + 32))
          {
            if (v23 == 1) {
              goto LABEL_7;
            }
            if (*(unsigned __int8 *)(v22 + 33) == *(unsigned __int8 *)(v17 + 33))
            {
              if (v23 == 2) {
                goto LABEL_7;
              }
              if (*(unsigned __int8 *)(v22 + 34) == *(unsigned __int8 *)(v17 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v19 = (v19 + 1) & v20;
      if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        return 0;
      }
    }
    uint64_t v25 = (unsigned __int8 *)(v22 + 35);
    uint64_t v26 = v23 - 3;
    uint64_t v27 = (unsigned __int8 *)(v17 + 35);
    while (v26)
    {
      int v29 = *v25++;
      int v28 = v29;
      int v30 = *v27++;
      --v26;
      if (v28 != v30) {
        goto LABEL_25;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v31) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v31) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100440804(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v23 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v24 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v11 >= v24) {
      return 1;
    }
    unint64_t v12 = *(void *)(v23 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v24) {
        return 1;
      }
      unint64_t v12 = *(void *)(v23 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v24) {
          return 1;
        }
        unint64_t v12 = *(void *)(v23 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    uint64_t v14 = *(void *)(*(void *)(v3 + 48) + 8 * v10);
    sub_1005E33F0();
    swift_bridgeObjectRetain();
    SectionSpecifier.Part.hash(into:)((uint64_t)v25, v14);
    Swift::Int v15 = sub_1005E3470();
    uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v17 = v15 & ~v16;
    if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
      goto LABEL_31;
    }
    uint64_t v18 = swift_bridgeObjectRetain();
    char v19 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v18, v14);
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      uint64_t v20 = ~v16;
      while (1)
      {
        unint64_t v17 = (v17 + 1) & v20;
        if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
          break;
        }
        uint64_t v21 = swift_bridgeObjectRetain();
        char v22 = static SectionSpecifier.Part.__derived_struct_equals(_:_:)(v21, v14);
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_7;
        }
      }
LABEL_31:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v24) {
    return 1;
  }
  unint64_t v12 = *(void *)(v23 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v24) {
      return 1;
    }
    unint64_t v12 = *(void *)(v23 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

Swift::Int sub_100440A70(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v32 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  while (1)
  {
LABEL_7:
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v12 >= v32) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v32) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v32) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v32) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    uint64_t v15 = *(void *)(v3 + 48) + 16 * v11;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(unsigned int *)(v15 + 8);
    sub_1005E33F0();
    Swift::UInt v18 = v17 | (v17 << 32);
    sub_1005E3410(v18);
    uint64_t result = sub_1005E3470();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = result & ~v19;
    if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      return 0;
    }
    uint64_t v21 = ~v19;
    while (1)
    {
      uint64_t v22 = *(void *)(a2 + 48) + 16 * v20;
      if ((*(unsigned int *)(v22 + 8) | ((unint64_t)*(unsigned int *)(v22 + 8) << 32)) == v18)
      {
        uint64_t v23 = *(void *)v22;
        uint64_t v24 = *(void *)(v23 + 16);
        if (v24 == *(void *)(v16 + 16))
        {
          if (v24) {
            BOOL v25 = v23 == v16;
          }
          else {
            BOOL v25 = 1;
          }
          if (v25) {
            goto LABEL_7;
          }
          if (*(unsigned __int8 *)(v23 + 32) == *(unsigned __int8 *)(v16 + 32))
          {
            if (v24 == 1) {
              goto LABEL_7;
            }
            if (*(unsigned __int8 *)(v23 + 33) == *(unsigned __int8 *)(v16 + 33))
            {
              if (v24 == 2) {
                goto LABEL_7;
              }
              if (*(unsigned __int8 *)(v23 + 34) == *(unsigned __int8 *)(v16 + 34)) {
                break;
              }
            }
          }
        }
      }
LABEL_27:
      unint64_t v20 = (v20 + 1) & v21;
      if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        return 0;
      }
    }
    uint64_t v26 = (unsigned __int8 *)(v23 + 35);
    uint64_t v27 = v24 - 3;
    int v28 = (unsigned __int8 *)(v16 + 35);
    while (v27)
    {
      int v30 = *v26++;
      int v29 = v30;
      int v31 = *v28++;
      --v27;
      if (v29 != v31) {
        goto LABEL_27;
      }
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v32) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v32) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_100440D18(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v83 = a1;
  uint64_t v84 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v85 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  uint64_t v91 = a2 + 56;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v86 = (v6 - 1) & v6;
  int64_t v87 = v3;
  unint64_t v8 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_24:
  unint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
  uint64_t v14 = *v13;
  unint64_t v15 = v13[1];
  sub_1005E33F0();
  sub_100008D24(v14, v15);
  sub_100008D24(v14, v15);
  sub_1005E08B0();
  sub_1000094D4(v14, v15);
  Swift::Int v16 = sub_1005E3470();
  uint64_t v17 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v18 = v16 & ~v17;
  if (((*(void *)(v7 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
  {
LABEL_141:
    sub_1000094D4(v14, v15);
    return 0;
  }
  unint64_t v19 = v15 >> 62;
  uint64_t v94 = ~v17;
  BOOL v20 = __OFSUB__(HIDWORD(v14), v14);
  BOOL v92 = v20;
  unint64_t v93 = v15 >> 62;
  uint64_t v89 = (v14 >> 32) - (int)v14;
  uint64_t v90 = v14 >> 32;
  while (2)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v18);
    uint64_t v23 = *v21;
    unint64_t v22 = v21[1];
    uint64_t v24 = 0;
    switch(v22 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v23), v23))
        {
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
          goto LABEL_167;
        }
        uint64_t v24 = HIDWORD(v23) - (int)v23;
LABEL_37:
        sub_100008D24(v23, v22);
        sub_100008D24(v23, v22);
        break;
      case 2uLL:
        uint64_t v26 = *(void *)(v23 + 16);
        uint64_t v25 = *(void *)(v23 + 24);
        uint64_t v24 = v25 - v26;
        if (!__OFSUB__(v25, v26)) {
          goto LABEL_37;
        }
        goto LABEL_144;
      case 3uLL:
        break;
      default:
        uint64_t v24 = BYTE6(v22);
        break;
    }
    uint64_t v27 = BYTE6(v15);
    switch((int)v19)
    {
      case 1:
        uint64_t v27 = HIDWORD(v14) - (int)v14;
        if (v92) {
          goto LABEL_145;
        }
        goto LABEL_42;
      case 2:
        uint64_t v29 = *(void *)(v14 + 16);
        uint64_t v28 = *(void *)(v14 + 24);
        BOOL v30 = __OFSUB__(v28, v29);
        uint64_t v27 = v28 - v29;
        if (!v30) {
          goto LABEL_42;
        }
        goto LABEL_146;
      case 3:
        if (v24) {
          goto LABEL_30;
        }
        goto LABEL_137;
      default:
LABEL_42:
        if (v24 != v27)
        {
LABEL_30:
          sub_1000094D4(v23, v22);
          sub_1000094D4(v23, v22);
          goto LABEL_31;
        }
        if (v24 >= 1)
        {
          switch(v22 >> 62)
          {
            case 1uLL:
              if ((int)v23 > v23 >> 32) {
                goto LABEL_147;
              }
              sub_100008D24(v14, v15);
              uint64_t v35 = sub_1005E0550();
              if (v35)
              {
                uint64_t v36 = v35;
                uint64_t v37 = sub_1005E0580();
                if (__OFSUB__((int)v23, v37)) {
                  goto LABEL_149;
                }
                uint64_t v38 = (const void *)(v36 + (int)v23 - v37);
              }
              else
              {
                uint64_t v38 = 0;
              }
              sub_1005E0570();
              if (v93)
              {
                if (v93 == 1)
                {
                  if (v90 < (int)v14) {
                    goto LABEL_158;
                  }
                  swift_retain();
                  Swift::String v53 = (char *)sub_1005E0550();
                  if (v53)
                  {
                    uint64_t v54 = sub_1005E0580();
                    if (__OFSUB__((int)v14, v54)) {
                      goto LABEL_166;
                    }
                    v53 += (int)v14 - v54;
                  }
                  uint64_t v55 = sub_1005E0570();
                  size_t v56 = (v14 >> 32) - (int)v14;
                  if (v55 < v89) {
                    size_t v56 = v55;
                  }
                  if (!v38) {
                    goto LABEL_172;
                  }
                  if (!v53) {
                    goto LABEL_173;
                  }
                  int v46 = memcmp(v38, v53, v56);
                  sub_1000094D4(v14, v15);
                }
                else
                {
                  uint64_t v75 = *(void *)(v14 + 16);
                  uint64_t v74 = *(void *)(v14 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v76 = (char *)sub_1005E0550();
                  if (v76)
                  {
                    uint64_t v77 = sub_1005E0580();
                    if (__OFSUB__(v75, v77)) {
                      goto LABEL_165;
                    }
                    v76 += v75 - v77;
                  }
                  BOOL v30 = __OFSUB__(v74, v75);
                  int64_t v78 = v74 - v75;
                  if (v30) {
                    goto LABEL_159;
                  }
                  uint64_t v79 = sub_1005E0570();
                  if (v79 >= v78) {
                    size_t v80 = v78;
                  }
                  else {
                    size_t v80 = v79;
                  }
                  if (!v38) {
                    goto LABEL_180;
                  }
                  uint64_t v2 = a2;
                  if (!v76) {
                    goto LABEL_181;
                  }
                  int v46 = memcmp(v38, v76, v80);
LABEL_134:
                  swift_release();
                  swift_release();
                }
              }
              else
              {
                *(void *)__s1 = v14;
                *(_WORD *)&__s1[8] = v15;
                __s1[10] = BYTE2(v15);
                __s1[11] = BYTE3(v15);
                __s1[12] = BYTE4(v15);
                __s1[13] = BYTE5(v15);
                if (!v38) {
                  goto LABEL_179;
                }
                int v46 = memcmp(v38, __s1, BYTE6(v15));
              }
              sub_1000094D4(v14, v15);
              sub_1000094D4(v23, v22);
              sub_1000094D4(v23, v22);
              uint64_t v7 = v91;
              LODWORD(v19) = v15 >> 62;
              if (!v46) {
                goto LABEL_138;
              }
              break;
            case 2uLL:
              uint64_t v39 = *(void *)(v23 + 16);
              sub_100008D24(v14, v15);
              swift_retain();
              swift_retain();
              uint64_t v40 = (char *)sub_1005E0550();
              if (!v40) {
                goto LABEL_59;
              }
              uint64_t v41 = sub_1005E0580();
              if (__OFSUB__(v39, v41)) {
                goto LABEL_148;
              }
              v40 += v39 - v41;
LABEL_59:
              sub_1005E0570();
              if (v93)
              {
                if (v93 == 1)
                {
                  if (v90 < (int)v14) {
                    goto LABEL_152;
                  }
                  swift_retain();
                  uint64_t v42 = (char *)sub_1005E0550();
                  if (v42)
                  {
                    uint64_t v43 = sub_1005E0580();
                    if (__OFSUB__((int)v14, v43)) {
                      goto LABEL_164;
                    }
                    v42 += (int)v14 - v43;
                  }
                  uint64_t v44 = sub_1005E0570();
                  size_t v45 = (v14 >> 32) - (int)v14;
                  if (v44 < v89) {
                    size_t v45 = v44;
                  }
                  if (!v40) {
                    goto LABEL_169;
                  }
                  if (!v42) {
                    goto LABEL_170;
                  }
                  int v46 = memcmp(v40, v42, v45);
                  sub_1000094D4(v14, v15);
                }
                else
                {
                  uint64_t v68 = *(void *)(v14 + 16);
                  uint64_t v82 = *(void *)(v14 + 24);
                  swift_retain();
                  swift_retain();
                  int v69 = (char *)sub_1005E0550();
                  if (v69)
                  {
                    uint64_t v70 = sub_1005E0580();
                    if (__OFSUB__(v68, v70)) {
                      goto LABEL_163;
                    }
                    v69 += v68 - v70;
                  }
                  BOOL v30 = __OFSUB__(v82, v68);
                  int64_t v71 = v82 - v68;
                  if (v30) {
                    goto LABEL_157;
                  }
                  uint64_t v72 = sub_1005E0570();
                  if (v72 >= v71) {
                    size_t v73 = v71;
                  }
                  else {
                    size_t v73 = v72;
                  }
                  if (!v40) {
                    goto LABEL_177;
                  }
                  uint64_t v2 = a2;
                  if (!v69) {
                    goto LABEL_178;
                  }
                  int v46 = memcmp(v40, v69, v73);
                  swift_release();
                  swift_release();
                }
              }
              else
              {
                *(void *)__s1 = v14;
                *(_WORD *)&__s1[8] = v15;
                __s1[10] = BYTE2(v15);
                __s1[11] = BYTE3(v15);
                __s1[12] = BYTE4(v15);
                __s1[13] = BYTE5(v15);
                if (!v40) {
                  goto LABEL_176;
                }
                int v46 = memcmp(v40, __s1, BYTE6(v15));
              }
              goto LABEL_134;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v19) {
                goto LABEL_80;
              }
              if (v19 == 1)
              {
                if (v90 < (int)v14) {
                  goto LABEL_151;
                }
                sub_100008D24(v14, v15);
                uint64_t v47 = sub_1005E0550();
                if (!v47) {
                  goto LABEL_171;
                }
                uint64_t v32 = v47;
                uint64_t v48 = sub_1005E0580();
                uint64_t v34 = (int)v14 - v48;
                if (__OFSUB__((int)v14, v48)) {
                  goto LABEL_156;
                }
LABEL_75:
                uint64_t v49 = sub_1005E0570();
                if (v49 >= v89) {
                  size_t v50 = (v14 >> 32) - (int)v14;
                }
                else {
                  size_t v50 = v49;
                }
                int v51 = memcmp(__s1, (const void *)(v32 + v34), v50);
                sub_1000094D4(v14, v15);
                sub_1000094D4(v23, v22);
                sub_1000094D4(v23, v22);
                uint64_t v2 = a2;
                if (!v51) {
                  goto LABEL_138;
                }
              }
              else
              {
                uint64_t v63 = *(void *)(v14 + 16);
                uint64_t v64 = *(void *)(v14 + 24);
                sub_100008D24(v14, v15);
                swift_retain();
                swift_retain();
                uint64_t v59 = (char *)sub_1005E0550();
                if (v59)
                {
                  uint64_t v65 = sub_1005E0580();
                  if (__OFSUB__(v63, v65)) {
                    goto LABEL_162;
                  }
                  v59 += v63 - v65;
                }
                BOOL v30 = __OFSUB__(v64, v63);
                int64_t v61 = v64 - v63;
                if (v30) {
                  goto LABEL_154;
                }
                uint64_t v62 = sub_1005E0570();
                if (!v59) {
                  goto LABEL_175;
                }
LABEL_105:
                if (v62 >= v61) {
                  size_t v66 = v61;
                }
                else {
                  size_t v66 = v62;
                }
                int v67 = memcmp(__s1, v59, v66);
                swift_release();
                swift_release();
                sub_1000094D4(v14, v15);
                sub_1000094D4(v23, v22);
                sub_1000094D4(v23, v22);
                uint64_t v7 = v91;
                LODWORD(v19) = v15 >> 62;
                if (!v67) {
                  goto LABEL_138;
                }
              }
              break;
            default:
              *(void *)__s1 = v23;
              *(_WORD *)&__s1[8] = v22;
              __s1[10] = BYTE2(v22);
              __s1[11] = BYTE3(v22);
              __s1[12] = BYTE4(v22);
              __s1[13] = BYTE5(v22);
              if (!v19)
              {
LABEL_80:
                uint64_t __s2 = v14;
                __int16 v96 = v15;
                char v97 = BYTE2(v15);
                char v98 = BYTE3(v15);
                char v99 = BYTE4(v15);
                char v100 = BYTE5(v15);
                int v52 = memcmp(__s1, &__s2, BYTE6(v15));
                sub_1000094D4(v23, v22);
                sub_1000094D4(v23, v22);
                if (!v52) {
                  goto LABEL_138;
                }
                break;
              }
              if (v19 == 1)
              {
                if (v90 < (int)v14) {
                  goto LABEL_150;
                }
                sub_100008D24(v14, v15);
                uint64_t v31 = sub_1005E0550();
                if (!v31)
                {
                  sub_1005E0570();
                  __break(1u);
LABEL_169:
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  sub_1005E0570();
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
                  JUMPOUT(0x1004418C4);
                }
                uint64_t v32 = v31;
                uint64_t v33 = sub_1005E0580();
                uint64_t v34 = (int)v14 - v33;
                if (__OFSUB__((int)v14, v33)) {
                  goto LABEL_155;
                }
                goto LABEL_75;
              }
              uint64_t v57 = *(void *)(v14 + 16);
              uint64_t v58 = *(void *)(v14 + 24);
              sub_100008D24(v14, v15);
              swift_retain();
              swift_retain();
              uint64_t v59 = (char *)sub_1005E0550();
              if (v59)
              {
                uint64_t v60 = sub_1005E0580();
                if (__OFSUB__(v57, v60)) {
                  goto LABEL_161;
                }
                v59 += v57 - v60;
              }
              BOOL v30 = __OFSUB__(v58, v57);
              int64_t v61 = v58 - v57;
              if (v30) {
                goto LABEL_153;
              }
              uint64_t v62 = sub_1005E0570();
              if (!v59) {
                goto LABEL_174;
              }
              goto LABEL_105;
          }
LABEL_31:
          unint64_t v18 = (v18 + 1) & v94;
          if (((*(void *)(v7 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            goto LABEL_141;
          }
          continue;
        }
LABEL_137:
        sub_1000094D4(v23, v22);
        sub_1000094D4(v23, v22);
LABEL_138:
        sub_1000094D4(v14, v15);
        a1 = v83;
        unint64_t v6 = v86;
        int64_t v3 = v87;
        if (v86) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v9 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_160;
        }
        if (v9 < v85)
        {
          unint64_t v10 = *(void *)(v84 + 8 * v9);
          int64_t v11 = v3 + 1;
          if (v10) {
            goto LABEL_23;
          }
          int64_t v11 = v9 + 1;
          if (v9 + 1 < v85)
          {
            unint64_t v10 = *(void *)(v84 + 8 * v11);
            if (v10) {
              goto LABEL_23;
            }
            int64_t v11 = v9 + 2;
            if (v9 + 2 < v85)
            {
              unint64_t v10 = *(void *)(v84 + 8 * v11);
              if (v10) {
                goto LABEL_23;
              }
              int64_t v11 = v9 + 3;
              if (v9 + 3 < v85)
              {
                unint64_t v10 = *(void *)(v84 + 8 * v11);
                if (v10) {
                  goto LABEL_23;
                }
                int64_t v12 = v9 + 4;
                if (v12 < v85)
                {
                  unint64_t v10 = *(void *)(v84 + 8 * v12);
                  if (v10)
                  {
                    int64_t v11 = v12;
LABEL_23:
                    uint64_t v86 = (v10 - 1) & v10;
                    int64_t v87 = v11;
                    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
                    goto LABEL_24;
                  }
                  while (1)
                  {
                    int64_t v11 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      break;
                    }
                    if (v11 >= v85) {
                      return 1;
                    }
                    unint64_t v10 = *(void *)(v84 + 8 * v11);
                    ++v12;
                    if (v10) {
                      goto LABEL_23;
                    }
                  }
LABEL_167:
                  __break(1u);
                }
              }
            }
          }
        }
        return 1;
    }
  }
}

Swift::Int sub_1004418F4(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 3;
    if (v13 + 3 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_35;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_24;
        }
      }
    }
    int64_t v4 = v15;
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    Swift::UInt32 v16 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v12);
    sub_1005E33F0();
    sub_1005E3440(v16);
    uint64_t result = sub_1005E3470();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(_DWORD *)(v19 + 4 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(_DWORD *)(v19 + 4 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t static SyncRequest.__derived_struct_equals(_:_:)(char a1, Swift::Int a2, char a3, char a4, uint64_t a5, char a6)
{
  if (a1 != a4) {
    return 0;
  }
  if (a2)
  {
    if (a5 && (sub_100440580(a2, a5) & 1) != 0) {
      goto LABEL_5;
    }
LABEL_8:
    char v8 = 0;
    return v8 & 1;
  }
  if (a5) {
    goto LABEL_8;
  }
LABEL_5:
  char v8 = a3 ^ a6 ^ 1;
  return v8 & 1;
}

Swift::Bool __swiftcall SyncRequest.includes(_:)(IMAP2Persistence::OpaqueMailboxID a1)
{
  if (v1) {
    return sub_1003F5408((uint64_t)a1.rawValue._rawValue, a1.hashValue, v1);
  }
  else {
    return 1;
  }
}

void SyncRequest.hash(into:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, char a4)
{
  if (a3)
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1004160C0(a1, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  sub_1005E3420(a4 & 1);
}

Swift::Int SyncRequest.hashValue.getter(unsigned __int8 a1, uint64_t a2, char a3)
{
  sub_1005E33F0();
  sub_1005E3410(a1);
  if (a2)
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1004160C0((uint64_t)v7, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  sub_1005E3420(a3 & 1);
  return sub_1005E3470();
}

Swift::Int sub_100441C7C()
{
  return SyncRequest.hashValue.getter(*(unsigned char *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100441C8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *((void *)v2 + 1);
  Swift::UInt8 v5 = v2[16];
  sub_1005E3410(*v2);
  if (v4)
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1004160C0(a1, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  sub_1005E3420(v5);
}

Swift::Int sub_100441D04()
{
  Swift::UInt v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  Swift::UInt8 v3 = v0[16];
  sub_1005E33F0();
  sub_1005E3410(v1);
  if (v2)
  {
    sub_1005E3420(1u);
    swift_bridgeObjectRetain();
    sub_1004160C0((uint64_t)v5, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E3420(0);
  }
  sub_1005E3420(v3);
  return sub_1005E3470();
}

uint64_t sub_100441D9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    Swift::Int v4 = *((void *)a1 + 1);
    int v5 = a1[16];
    uint64_t v6 = *((void *)a2 + 1);
    int v7 = a2[16];
    if (v4)
    {
      if (v6 && (sub_100440580(v4, v6) & 1) != 0) {
        return v5 ^ v7 ^ 1u;
      }
    }
    else if (!v6)
    {
      return v5 ^ v7 ^ 1u;
    }
  }
  return 0;
}

void *SyncRequest.ID.serverTriggered.unsafeMutableAddressor()
{
  return &static SyncRequest.ID.serverTriggered;
}

IMAP2Persistence::SyncRequest::ID __swiftcall SyncRequest.ID.makeNext()()
{
  if ((v0 + 1) > 1) {
    return (IMAP2Persistence::SyncRequest::ID)(v0 + 1);
  }
  else {
    return (IMAP2Persistence::SyncRequest::ID)1;
  }
}

BOOL SyncRequest.Kind.isBackgroundSync.getter(unsigned __int8 a1)
{
  return a1 < 2u;
}

_UNKNOWN **static SyncRequest.Kind.allCases.getter()
{
  return &off_1006EEFD0;
}

void sub_100441E40(void *a1@<X8>)
{
  *a1 = &off_1006EEFF8;
}

unint64_t SyncRequest.Kind.description.getter(char a1)
{
  unint64_t result = 0x6369646F69726570;
  switch(a1)
  {
    case 1:
      unint64_t result = 1752397168;
      break;
    case 2:
      unint64_t result = 0x74696E4972657375;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100441EEC()
{
  unint64_t result = 0x6369646F69726570;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1752397168;
      break;
    case 2:
      unint64_t result = 0x74696E4972657375;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int Set<>.makeNonEmpty()(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return sub_100441FEC((uint64_t)&off_1006EF020);
  }
}

void Set<>.formNonEmpty()()
{
  Swift::Int v1 = *v0;
  if (!*(void *)(*v0 + 16))
  {
    Swift::Int v2 = sub_100441FEC((uint64_t)&off_1006EF048);
    swift_bridgeObjectRelease();
    Swift::Int v1 = v2;
  }
  Swift::Int *v0 = v1;
}

Swift::Int sub_100441FEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000566C(qword_100715560);
    uint64_t v3 = sub_1005E2C30();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt32 v7 = *(_DWORD *)(v6 + 4 * v4);
      sub_1005E33F0();
      sub_1005E3440(v7);
      Swift::Int result = sub_1005E3470();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_DWORD *)(v14 + 4 * v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(_DWORD *)(v14 + 4 * v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(_DWORD *)(v14 + 4 * v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_100442134()
{
  unint64_t result = qword_100715538;
  if (!qword_100715538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715538);
  }
  return result;
}

unint64_t sub_10044218C()
{
  unint64_t result = qword_100715540;
  if (!qword_100715540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715540);
  }
  return result;
}

unint64_t sub_1004421E4()
{
  unint64_t result = qword_100715548;
  if (!qword_100715548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715548);
  }
  return result;
}

unint64_t sub_10044223C()
{
  unint64_t result = qword_100715550;
  if (!qword_100715550)
  {
    sub_10000744C(&qword_100715558);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715550);
  }
  return result;
}

uint64_t sub_10044229C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SyncRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SyncRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncRequest()
{
  return &type metadata for SyncRequest;
}

ValueMetadata *type metadata accessor for SyncRequest.ID()
{
  return &type metadata for SyncRequest.ID;
}

unsigned char *storeEnumTagSinglePayload for SyncRequest.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100442518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncRequest.Kind()
{
  return &type metadata for SyncRequest.Kind;
}

uint64_t UIDValidityWith.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t UIDValidityWith.value.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

Swift::UInt32 (__swiftcall *UIDValidityWith.value.modify())(IMAP2Persistence::CredentialsRequestID)
{
  return UInt32.init(_:);
}

uint64_t UIDValidityWith.init(uidValidity:value:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  *a4 = a1;
  unsigned int v6 = (char *)a4 + *(int *)(type metadata accessor for UIDValidityWith() + 28);
  Swift::UInt32 v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v7(v6, a2, a3);
}

uint64_t type metadata accessor for UIDValidityWith()
{
  return sub_1000DAF2C();
}

uint64_t static UIDValidityWith<A>.__derived_struct_equals(_:_:)(_DWORD *a1, _DWORD *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  type metadata accessor for UIDValidityWith();
  return sub_1005E1BC0() & 1;
}

uint64_t sub_1004426F8(_DWORD *a1, _DWORD *a2)
{
  return static UIDValidityWith<A>.__derived_struct_equals(_:_:)(a1, a2);
}

uint64_t sub_100442704()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004427A4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 4) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 4) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_100442920(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 4) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x100442B54);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 4] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

Swift::Int sub_100442B7C()
{
  Swift::UInt v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_1005E33F0();
  Swift::UInt v3 = 0;
  if ((v2 & 1) == 0)
  {
    sub_1005E3410(1uLL);
    Swift::UInt v3 = v1;
  }
  sub_1005E3410(v3);
  return sub_1005E3470();
}

void sub_100442BDC()
{
  if (*(unsigned char *)(v0 + 8))
  {
    Swift::UInt v1 = 0;
  }
  else
  {
    Swift::UInt v1 = *(void *)v0;
    sub_1005E3410(1uLL);
  }
  sub_1005E3410(v1);
}

NIOIMAPCore2::SequenceNumber __swiftcall WindowOfInterestSize.lowestSequenceNumber(messageCount:)(Swift::Int messageCount)
{
  if (v2)
  {
    LODWORD(messageCount) = 1;
    return (NIOIMAPCore2::SequenceNumber)messageCount;
  }
  Swift::Int v3 = messageCount - v1;
  if (__OFSUB__(messageCount, v1))
  {
    __break(1u);
    goto LABEL_9;
  }
  BOOL v4 = __OFADD__(v3, 1);
  Swift::Int v5 = v3 + 1;
  if (v4)
  {
LABEL_9:
    __break(1u);
    return (NIOIMAPCore2::SequenceNumber)messageCount;
  }
  if ((unint64_t)(v5 - 0x100000000) < 0xFFFFFFFF00000001) {
    LODWORD(messageCount) = 1;
  }
  else {
    LODWORD(messageCount) = v5;
  }
  return (NIOIMAPCore2::SequenceNumber)messageCount;
}

uint64_t WindowOfInterestSize.limit(serverNextUID:windowOfInterest:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, char a5)
{
  BOOL v5 = (a1 & (unint64_t)&_mh_execute_header) == 0;
  if (a3) {
    BOOL v5 = 0;
  }
  if (a5) {
    BOOL v5 = 0;
  }
  if (!v5) {
    return 0;
  }
  unint64_t v6 = ~HIDWORD(a2) + a1;
  uint64_t result = a4 - v6;
  if (__OFSUB__(a4, v6)) {
    __break(1u);
  }
  return result;
}

unint64_t sub_100442CB0()
{
  unint64_t result = qword_1007155E8;
  if (!qword_1007155E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007155E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WindowOfInterestSize()
{
  return &type metadata for WindowOfInterestSize;
}

BOOL sub_100442D14(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = a2[1];
  BOOL v4 = v3 >> 60 == 15 && v2 >> 60 == 15;
  if (v2 >> 60 == 15 || v3 >> 60 == 15) {
    return v4;
  }
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  sub_100057EE8(*a1, v2);
  sub_100057EE8(v6, v3);
  char v8 = sub_10044B1A8(v7, v2, v6, v3);
  sub_100057EFC(v6, v3);
  sub_100057EFC(v7, v2);
  return v8 & 1;
}

BOOL sub_100442DC8(uint64_t a1, uint64_t a2)
{
  sub_100443AD4(a1, (uint64_t)v10);
  uint64_t v4 = *(void *)(a1 + 80);
  unint64_t v5 = *(void *)(a1 + 88);
  sub_100443AD4(a2, (uint64_t)v11);
  uint64_t v7 = *(void *)(a2 + 80);
  unint64_t v6 = *(void *)(a2 + 88);
  if ((sub_100455D6C((uint64_t)v10, (uint64_t)v11) & 1) == 0) {
    return 0;
  }
  if (v5 >> 60 != 15)
  {
    if (v6 >> 60 == 15) {
      return 0;
    }
    sub_100057EE8(v4, v5);
    sub_100057EE8(v7, v6);
    char v8 = sub_10044B1A8(v4, v5, v7, v6);
    sub_100057EFC(v7, v6);
    sub_100057EFC(v4, v5);
    return (v8 & 1) != 0;
  }
  return v6 >> 60 == 15;
}

uint64_t sub_100442EB0()
{
  if (*(void *)(v0 + 88) >> 60 == 15)
  {
    sub_100443A80();
    swift_allocError();
    *(_OWORD *)uint64_t v1 = xmmword_1005F6950;
    *(unsigned char *)(v1 + 16) = 1;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = *(void *)(v0 + 80);
    *(_OWORD *)(v0 + 80) = xmmword_1005F66D0;
  }
  return result;
}

uint64_t sub_100442F34()
{
  sub_100443A80();
  swift_allocError();
  *(void *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 0;
  *(unsigned char *)(v0 + 16) = 1;
  return swift_willThrow();
}

void *variable initialization expression of CommandConnection.runningCommands()
{
  return &_swiftEmptyArrayStorage;
}

double variable initialization expression of CommandConnection.idle@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 44) = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100442FB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005E1650();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of SelectedMailbox.modificationSequenceValue()
{
  return 0;
}

__n128 initializeWithTake for RegisterForPush(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_10044305C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1004430B8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

void type metadata accessor for z_stream_s(uint64_t a1)
{
}

uint64_t sub_10044313C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11)
{
  uint64_t v27 = a8 | 0x2000000000000000;
  sub_10000566C(&qword_100715650);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = a1;
  uint64_t v26 = a3;
  *(_OWORD *)(inited + 16) = xmmword_1005F6720;
  *(void *)(inited + 40) = a2;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 64) = a3;
  *(void *)(inited + 72) = a4;
  *(void *)(inited + 80) = a5;
  *(void *)(inited + 88) = a6;
  *(void *)(inited + 96) = a7;
  *(void *)(inited + 104) = a8;
  *(void *)(inited + 112) = a10;
  *(void *)(inited + 120) = a11;
  sub_100008D24(a1, a2);
  sub_100008D24(a1, a2);
  sub_100008D24(a3, a4);
  sub_100008D24(a5, a6);
  sub_100008D24(a7, a8);
  sub_100008D24(a10, a11);
  uint64_t v21 = sub_100443C18(inited);
  uint64_t v23 = v22;
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  *a9 = a1;
  a9[1] = a2;
  a9[2] = v26;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = v27;
  a9[8] = a10;
  a9[9] = a11;
  a9[10] = v21;
  a9[11] = v23;
  return result;
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void _s3__C8SecTrustCMa_0(uint64_t a1)
{
}

void type metadata accessor for tls_ciphersuite_t(uint64_t a1)
{
}

void type metadata accessor for tls_protocol_version_t(uint64_t a1)
{
}

uint64_t sub_100443318(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
    case 4uLL:
      sub_100008D24(result, a2);
      uint64_t result = a3;
      a2 = a4;
      goto LABEL_7;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_100008D24(result, a2);
      sub_100008D24(a3, a4);
      sub_100008D24(a5, a6);
      sub_100008D24(a7, v15);
      uint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_7;
    case 2uLL:
LABEL_7:
      uint64_t result = sub_100008D24(result, a2);
      break;
    case 3uLL:
    case 5uLL:
    case 6uLL:
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s10AppleTokenVwxx(uint64_t *a1)
{
  uint64_t result = sub_1004434DC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  unint64_t v3 = a1[11];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[10];
    return sub_1000094D4(v4, v3);
  }
  return result;
}

uint64_t sub_1004434DC(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
    case 4uLL:
      sub_1000094D4(result, a2);
      uint64_t result = a3;
      a2 = a4;
      goto LABEL_7;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1000094D4(result, a2);
      sub_1000094D4(a3, a4);
      sub_1000094D4(a5, a6);
      sub_1000094D4(a7, v15);
      uint64_t result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_7;
    case 2uLL:
LABEL_7:
      uint64_t result = sub_1000094D4(result, a2);
      break;
    case 3uLL:
    case 5uLL:
    case 6uLL:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s10AppleTokenVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v16 = a2[8];
  unint64_t v17 = a2[9];
  sub_100443318(*a2, v5, v6, v7, v8, v9, v10, v11, v16, v17);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v17;
  int v12 = a2 + 10;
  unint64_t v13 = a2[11];
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_100008D24(*v12, v13);
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v13;
  }
  return a1;
}

uint64_t *_s10AppleTokenVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v29 = a2[8];
  unint64_t v30 = a2[9];
  sub_100443318(*a2, v5, v6, v7, v8, v9, v10, v11, v29, v30);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = a1[8];
  unint64_t v21 = a1[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v29;
  a1[9] = v30;
  sub_1004434DC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v22 = a2 + 10;
  unint64_t v23 = a2[11];
  if ((unint64_t)a1[11] >> 60 != 15)
  {
    if (v23 >> 60 != 15)
    {
      uint64_t v25 = *v22;
      sub_100008D24(*v22, v23);
      uint64_t v26 = a1[10];
      unint64_t v27 = a1[11];
      a1[10] = v25;
      a1[11] = v23;
      sub_1000094D4(v26, v27);
      return a1;
    }
    sub_10044384C((uint64_t)(a1 + 10));
    goto LABEL_6;
  }
  if (v23 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v22;
    return a1;
  }
  uint64_t v24 = *v22;
  sub_100008D24(*v22, v23);
  a1[10] = v24;
  a1[11] = v23;
  return a1;
}

uint64_t sub_10044384C(uint64_t a1)
{
  return a1;
}

__n128 _s10AppleTokenVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t *_s10AppleTokenVwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7];
  uint64_t v12 = a1[8];
  unint64_t v13 = a1[9];
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v15;
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_1004434DC(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v16 = (uint64_t *)(a2 + 80);
  unint64_t v17 = a1[11];
  if (v17 >> 60 != 15)
  {
    unint64_t v18 = *(void *)(a2 + 88);
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = a1[10];
      a1[10] = *v16;
      a1[11] = v18;
      sub_1000094D4(v19, v17);
      return a1;
    }
    sub_10044384C((uint64_t)(a1 + 10));
  }
  *((_OWORD *)a1 + 5) = *(_OWORD *)v16;
  return a1;
}

uint64_t _s10AppleTokenVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3A && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 58);
  }
  unsigned int v3 = (*(void *)(a1 + 56) >> 58) & 0xC;
  unsigned int v4 = (((*(unsigned char *)(a1 + 79) & 0x30 | v3) >> 3) & 0xFFFFFFC7 | (8 * (v3 & 7 | (*(void *)(a1 + 40) >> 60) & 3))) ^ 0x3F;
  if (v4 >= 0x39) {
    unsigned int v4 = -1;
  }
  return v4 + 1;
}

uint64_t _s10AppleTokenVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x39)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 58;
    if (a3 >= 0x3A) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3A) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      uint64_t v3 = (-a2 >> 3) & 7 | (8 * (-a2 & 0x3F));
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = (unint64_t)((-a2 >> 3) & 3) << 60;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = (v3 << 58) & 0x3000000000000000;
      *(void *)(result + 64) = 0;
      *(void *)(result + 72) = (v3 << 56) & 0x3000000000000000;
    }
  }
  return result;
}

ValueMetadata *_s10AppleTokenVMa()
{
  return &_s10AppleTokenVN;
}

unint64_t sub_100443A80()
{
  unint64_t result = qword_100715678;
  if (!qword_100715678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715678);
  }
  return result;
}

uint64_t sub_100443AD4(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for ConnectionUsage(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t _s10AppleTokenV5StateOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s10AppleTokenV5StateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 12;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *_s10AppleTokenV5StateOMa()
{
  return &_s10AppleTokenV5StateON;
}

ValueMetadata *_s11AppleToken2VMa()
{
  return &_s11AppleToken2VN;
}

ValueMetadata *_s11AppleToken2V5StateOMa()
{
  return &_s11AppleToken2V5StateON;
}

uint64_t sub_100443C18(uint64_t a1)
{
  long long v21 = xmmword_100622570;
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1 - 1;
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = (unint64_t *)(v3 + 40);
  while (2)
  {
    uint64_t v6 = *(v5 - 1);
    unint64_t v7 = *v5;
    uint64_t v16 = v4;
    uint64_t v8 = v4 + 1;
    uint64_t v19 = &type metadata for Data;
    uint64_t v20 = &protocol witness table for Data;
    v18[0] = v6;
    v18[1] = v7;
    unint64_t v9 = sub_10003BCDC(v18, (uint64_t)&type metadata for Data);
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    v5 += 2;
    uint64_t v17 = v8;
    switch(v11 >> 62)
    {
      case 1uLL:
        if (v10 >> 32 < (int)v10)
        {
          __break(1u);
LABEL_19:
          __break(1u);
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
        }
        sub_100008D24(v6, v7);
        sub_100008D24(v6, v7);
        sub_100008D24(v10, v11);
        if (sub_1005E0550() && __OFSUB__((int)v10, sub_1005E0580())) {
          goto LABEL_21;
        }
        sub_1005E0570();
        sub_1005E0870();
        sub_1000094D4(v10, v11);
        uint64_t v2 = v1 - 1;
LABEL_14:
        _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v18);
        if (v16 < v2)
        {
          uint64_t v13 = sub_10000566C(&qword_100715758);
          uint64_t v19 = (void *)v13;
          uint64_t v20 = (void *)sub_100007494((unint64_t *)&qword_100715760, &qword_100715758);
          v18[0] = &off_1006F2758;
          sub_10003BCDC(v18, v13);
          sub_1005E0870();
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v18);
        }
        sub_1000094D4(v6, v7);
        uint64_t v4 = v17;
        if (v1 != v17) {
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t result = v21;
        break;
      case 2uLL:
        uint64_t v12 = *(void *)(v10 + 16);
        uint64_t v15 = *(void *)(v10 + 24);
        sub_100008D24(v6, v7);
        sub_100008D24(v6, v7);
        swift_retain();
        swift_retain();
        if (sub_1005E0550() && __OFSUB__(v12, sub_1005E0580())) {
          goto LABEL_20;
        }
        if (__OFSUB__(v15, v12)) {
          goto LABEL_19;
        }
        sub_1005E0570();
        sub_1005E0870();
        swift_release();
        swift_release();
        goto LABEL_14;
      default:
        sub_100008D24(v6, v7);
        sub_100008D24(v6, v7);
        sub_1005E0870();
        goto LABEL_14;
    }
    return result;
  }
}

uint64_t sub_100444008(void *a1, void *a2)
{
  return sub_10044B1A8(*a1, a1[1], *a2, a2[1]);
}

void *sub_10044401C(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = _swiftEmptyArrayStorage;
  unint64_t v4 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v5) {
        return v3;
      }
      uint64_t v36 = _swiftEmptyArrayStorage;
      int64_t v8 = v5 & ~(v5 >> 63);
      sub_1004B885C(0, v8, 0);
      uint64_t v3 = _swiftEmptyArrayStorage;
      uint64_t v30 = (int)v4;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v9 = (int)v4;
        }
        else {
          uint64_t v9 = *(void *)(v4 + 16);
        }
        if (v5 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v5 < 0) {
          goto LABEL_45;
        }
        uint64_t v9 = 0;
      }
      uint64_t v29 = (uint64_t)v4 >> 32;
      unint64_t v27 = v4 >> 16;
      unint64_t v28 = v4 >> 8;
      unint64_t v25 = HIDWORD(v4);
      unint64_t v26 = v4 >> 24;
      unint64_t v23 = HIWORD(v4);
      unint64_t v24 = v4 >> 40;
      unint64_t v22 = HIBYTE(v4);
      int v32 = v2;
      unint64_t v33 = v4;
      do
      {
        if (!v8)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v9 < v30 || v9 >= v29) {
              goto LABEL_36;
            }
            uint64_t v10 = sub_1005E0550();
            if (!v10) {
              goto LABEL_46;
            }
            uint64_t v11 = v10;
            uint64_t v12 = sub_1005E0580();
            uint64_t v13 = v9 - v12;
            if (__OFSUB__(v9, v12)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v9 < *(void *)(v4 + 16)) {
              goto LABEL_38;
            }
            if (v9 >= *(void *)(v4 + 24)) {
              goto LABEL_40;
            }
            uint64_t v15 = sub_1005E0550();
            if (!v15) {
              goto LABEL_47;
            }
            uint64_t v11 = v15;
            uint64_t v16 = sub_1005E0580();
            uint64_t v13 = v9 - v16;
            if (__OFSUB__(v9, v16)) {
              goto LABEL_41;
            }
          }
          char v14 = *(unsigned char *)(v11 + v13);
        }
        else
        {
          if (v9 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          LOBYTE(v34) = v4;
          BYTE1(v34) = v28;
          BYTE2(v34) = v27;
          BYTE3(v34) = v26;
          BYTE4(v34) = v25;
          BYTE5(v34) = v24;
          BYTE6(v34) = v23;
          HIBYTE(v34) = v22;
          LODWORD(v35) = a2;
          WORD2(v35) = WORD2(a2);
          char v14 = *((unsigned char *)&v34 + v9);
        }
        LOBYTE(v34) = v14;
        sub_10044446C();
        v37._uint64_t countAndFlagsBits = sub_1005E1F20();
        uint64_t v34 = 30768;
        unint64_t v35 = 0xE200000000000000;
        sub_1005E1E30(v37);
        swift_bridgeObjectRelease();
        unint64_t v2 = v34;
        unint64_t v17 = v35;
        uint64_t v36 = v3;
        unint64_t v19 = v3[2];
        unint64_t v18 = v3[3];
        if (v19 >= v18 >> 1)
        {
          sub_1004B885C(v18 > 1, v19 + 1, 1);
          uint64_t v3 = v36;
        }
        v3[2] = v19 + 1;
        uint64_t v20 = &v3[2 * v19];
        v20[4] = v2;
        v20[5] = v17;
        ++v9;
        --v8;
        --v5;
        LODWORD(v2) = v32;
        unint64_t v4 = v33;
      }
      while (v5);
      return v3;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1004443A0()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_100008D24(v1, v2);
  sub_10044401C(v1, v2);
  sub_1000094D4(v1, v2);
  sub_10000566C(&qword_100715740);
  sub_100007494((unint64_t *)&qword_100715748, &qword_100715740);
  uint64_t v3 = sub_1005E1A80();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_10044446C()
{
  unint64_t result = qword_100715750;
  if (!qword_100715750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715750);
  }
  return result;
}

uint64_t sub_1004444C0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = a1;
  if ((a3 & 1) == 0)
  {
    uint64_t v5 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      if (a1 == 32 && a2 == 0xE100000000000000)
      {
        uint64_t v6 = 32;
        unint64_t v7 = 0xE100000000000000;
LABEL_10:
        sub_1004445F8(v6, v7, 0);
        return 0;
      }
      if ((sub_1005E3290() & 1) == 0)
      {
        sub_1004445A4();
        swift_allocError();
        swift_willThrow();
        sub_1004445F8(v4, a2, 0);
        return v4;
      }
    }
    uint64_t v6 = v4;
    unint64_t v7 = a2;
    goto LABEL_10;
  }
  return v4;
}

unint64_t sub_1004445A4()
{
  unint64_t result = qword_100715768;
  if (!qword_100715768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715768);
  }
  return result;
}

uint64_t sub_1004445F8(uint64_t a1, unint64_t a2, char a3)
{
  if (a3) {
    return sub_1000094D4(a1, a2);
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

ValueMetadata *type metadata accessor for Authentication.Challenge.ReceivedTextAsAuthenticationQuery()
{
  return &type metadata for Authentication.Challenge.ReceivedTextAsAuthenticationQuery;
}

uint64_t sub_10044461C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (a2 >> 60) & 3;
  if (v2 == 1) {
    return swift_errorRetain();
  }
  if (!v2) {
    return sub_100008D24(a1, a2);
  }
  return a1;
}

uint64_t destroy for Authentication.Error(uint64_t result)
{
  if (*(unsigned char *)(result + 16))
  {
    if (*(void *)result == -2)
    {
      unint64_t v1 = *(void *)(result + 8);
      uint64_t v2 = *(void *)result;
      return sub_100444674(v2, v1);
    }
  }
  else
  {
    unint64_t v1 = *(void *)(result + 8);
    if ((~v1 & 0x3000000000000000) != 0)
    {
      uint64_t v2 = *(void *)result;
      return sub_100444674(v2, v1);
    }
  }
  return result;
}

uint64_t sub_100444674(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (a2 >> 60) & 3;
  if (v2 == 1) {
    return swift_errorRelease();
  }
  if (!v2) {
    return sub_1000094D4(a1, a2);
  }
  return a1;
}

uint64_t _s15IMAP2Connection14AuthenticationO5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v3 = *(void *)a2;
    if (*(void *)a2 == -2)
    {
      unint64_t v4 = *(void *)(a2 + 8);
LABEL_7:
      sub_10044461C(v3, v4);
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v4;
      *(unsigned char *)(a1 + 16) = 0;
      return a1;
    }
  }
  else
  {
    unint64_t v4 = *(void *)(a2 + 8);
    if ((~v4 & 0x3000000000000000) != 0)
    {
      uint64_t v3 = *(void *)a2;
      goto LABEL_7;
    }
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithCopy for Authentication.Error(uint64_t a1, long long *a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(_DWORD *)a1 == -2)
    {
      unint64_t v4 = *(void *)(a1 + 8);
LABEL_8:
      if (*((unsigned char *)a2 + 16))
      {
        uint64_t v7 = *(void *)a2;
        if (*(void *)a2 == -2)
        {
          unint64_t v8 = *((void *)a2 + 1);
LABEL_18:
          sub_10044461C(v7, v8);
          uint64_t v10 = *(void *)a1;
          unint64_t v11 = *(void *)(a1 + 8);
          *(void *)a1 = v7;
          *(void *)(a1 + 8) = v8;
          sub_100444674(v10, v11);
          return a1;
        }
      }
      else
      {
        unint64_t v8 = *((void *)a2 + 1);
        if ((~v8 & 0x3000000000000000) != 0)
        {
          uint64_t v7 = *(void *)a2;
          goto LABEL_18;
        }
      }
      sub_100444674(*(void *)a1, v4);
      goto LABEL_16;
    }
  }
  else
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if ((~v4 & 0x3000000000000000) != 0) {
      goto LABEL_8;
    }
  }
  if (!*((unsigned char *)a2 + 16))
  {
    unint64_t v6 = *((void *)a2 + 1);
    if ((~v6 & 0x3000000000000000) != 0)
    {
      uint64_t v5 = *(void *)a2;
      goto LABEL_13;
    }
LABEL_16:
    long long v9 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v9;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  if (*(void *)a2 != -2) {
    goto LABEL_16;
  }
  unint64_t v6 = *((void *)a2 + 1);
LABEL_13:
  sub_10044461C(v5, v6);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = 0;
  return a1;
}

__n128 initializeWithTake for Authentication.Error(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Authentication.Error(uint64_t a1, uint64_t *a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(_DWORD *)a1 == -2)
    {
      unint64_t v4 = *(void *)(a1 + 8);
LABEL_8:
      if (*((unsigned char *)a2 + 16))
      {
        uint64_t v5 = *a2;
        if (*a2 == -2)
        {
          uint64_t v6 = a2[1];
LABEL_17:
          uint64_t v7 = *(void *)a1;
          *(void *)a1 = v5;
          *(void *)(a1 + 8) = v6;
          sub_100444674(v7, v4);
          return a1;
        }
      }
      else
      {
        uint64_t v6 = a2[1];
        if ((~v6 & 0x3000000000000000) != 0)
        {
          uint64_t v5 = *a2;
          goto LABEL_17;
        }
      }
      sub_100444674(*(void *)a1, v4);
      goto LABEL_15;
    }
  }
  else
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if ((~v4 & 0x3000000000000000) != 0) {
      goto LABEL_8;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    if (*(_DWORD *)a2 != -2) {
      goto LABEL_15;
    }
  }
  else if ((~a2[1] & 0x3000000000000000) == 0)
  {
LABEL_15:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = 0;
  return a1;
}

uint64_t storeEnumTagSinglePayload for Authentication.Error(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_100444944(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if ((~*(void *)(a1 + 8) & 0x3000000000000000) != 0) {
    int v2 = -1;
  }
  else {
    int v2 = 0;
  }
  return (v2 + 1);
}

uint64_t sub_100444974(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      *(_OWORD *)__n128 result = xmmword_1005F6770;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Authentication.Error()
{
  return &type metadata for Authentication.Error;
}

ValueMetadata *type metadata accessor for Authentication.Challenge()
{
  return &type metadata for Authentication.Challenge;
}

ValueMetadata *type metadata accessor for Authentication.Response()
{
  return &type metadata for Authentication.Response;
}

ValueMetadata *type metadata accessor for Authentication()
{
  return &type metadata for Authentication;
}

uint64_t sub_100444A08@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1004480CC(a1, a2, (void (*)(uint64_t, unint64_t))sub_100057EFC, a3);
}

uint64_t sub_100444A34@<X0>(char a1@<W0>, uint64_t a2@<X1>, void (*a3)(uint64_t, unint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  unint64_t v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005E0ED0();
  __chkstk_darwin();
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    uint64_t v28 = *v4;
    unint64_t v29 = v4[1];
    uint64_t v31 = v4[2];
    unint64_t v30 = v4[3];
    uint64_t v32 = v4[4];
    unint64_t v33 = v4[5];
    unint64_t v35 = (void *)v4[6];
    uint64_t v34 = v4[7];
    uint64_t v36 = v4[8];
    unint64_t v37 = v4[9];
    uint64_t v82 = v34;
    switch((v37 >> 59) & 6 | ((v34 & 0x2000000000000000) != 0))
    {
      case 1uLL:
        uint64_t v60 = v32;
        unint64_t v76 = v82 & 0xDFFFFFFFFFFFFFFFLL;
        unint64_t v78 = v37 & 0xCFFFFFFFFFFFFFFFLL;
        uint64_t v79 = v28;
        uint64_t v61 = v36;
        sub_100008D24(v28, v29);
        uint64_t v77 = v31;
        sub_100008D24(v31, v30);
        uint64_t v81 = v60;
        sub_100008D24(v60, v33);
        size_t v80 = v35;
        uint64_t v62 = (uint64_t)v35;
        uint64_t v63 = v61;
        sub_100008D24(v62, v76);
        sub_100008D24(v61, v78);
        unint64_t v64 = v33;
        if (qword_1007155F0 != -1) {
          swift_once();
        }
        uint64_t v43 = qword_1007621B0;
        uint64_t v42 = *(void *)algn_1007621B8;
        swift_bridgeObjectRetain();
        uint64_t result = sub_1004434DC(v79, v29, v77, v30, v81, v64, (uint64_t)v80, v82, v63, v37);
        break;
      case 2uLL:
        size_t v80 = v35;
        uint64_t v81 = v32;
        unint64_t v78 = v33;
        uint64_t v79 = v36;
        uint64_t v77 = v31;
        uint64_t v65 = v28;
        sub_100008D24(v28, v29);
        if (qword_1007155F8 != -1) {
          swift_once();
        }
        uint64_t v43 = qword_1007621C0;
        uint64_t v42 = *(void *)algn_1007621C8;
        swift_bridgeObjectRetain();
        unint64_t v74 = v37;
        uint64_t v73 = v79;
        uint64_t v66 = v65;
        goto LABEL_22;
      case 3uLL:
        size_t v80 = v35;
        uint64_t v81 = v32;
        uint64_t v67 = v36;
        uint64_t v77 = v31;
        unint64_t v78 = v33;
        uint64_t v79 = v28;
        uint64_t v68 = qword_100715608;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v68 != -1) {
          swift_once();
        }
        uint64_t v43 = qword_1007621E0;
        uint64_t v42 = *(void *)algn_1007621E8;
        swift_bridgeObjectRetain();
        uint64_t v73 = v67;
        unint64_t v74 = v37;
        uint64_t v66 = v79;
LABEL_22:
        unint64_t v69 = v29;
        uint64_t v70 = v77;
        goto LABEL_26;
      case 4uLL:
        size_t v80 = v35;
        uint64_t v81 = v32;
        unint64_t v78 = v33;
        uint64_t v79 = v36;
        uint64_t v71 = v28;
        sub_100008D24(v28, v29);
        sub_100008D24(v31, v30);
        uint64_t v72 = v31;
        if (qword_100715610 != -1) {
          swift_once();
        }
        uint64_t v43 = qword_1007621F0;
        uint64_t v42 = *(void *)algn_1007621F8;
        swift_bridgeObjectRetain();
        unint64_t v74 = v37;
        uint64_t v73 = v79;
        uint64_t v66 = v71;
        unint64_t v69 = v29;
        uint64_t v70 = v72;
LABEL_26:
        uint64_t result = sub_1004434DC(v66, v69, v70, v30, v81, v78, (uint64_t)v80, v82, v73, v74);
        break;
      case 5uLL:
      case 6uLL:
        uint64_t v38 = v28;
        uint64_t v79 = v36;
        unint64_t v39 = v30;
        uint64_t v81 = v32;
        sub_100443318(v28, v29, v31, v30, v32, v33, (uint64_t)v35, v82, v36, v37);
        uint64_t v40 = v31;
        unint64_t v41 = v33;
        if (qword_100715600 != -1) {
          swift_once();
        }
        uint64_t v43 = qword_1007621D0;
        uint64_t v42 = *(void *)algn_1007621D8;
        swift_bridgeObjectRetain();
        uint64_t result = sub_1004434DC(v38, v29, v40, v39, v81, v41, (uint64_t)v35, v82, v79, v37);
        break;
      default:
        uint64_t v55 = v28;
        uint64_t v79 = v36;
        size_t v80 = v35;
        uint64_t v56 = v32;
        sub_100008D24(v28, v29);
        sub_100008D24(v31, v30);
        uint64_t v57 = AuthenticationMechanism.plain.unsafeMutableAddressor();
        unint64_t v58 = v33;
        uint64_t v59 = v31;
        uint64_t v43 = *(void *)v57;
        uint64_t v42 = *((void *)v57 + 1);
        swift_bridgeObjectRetain();
        uint64_t result = sub_1004434DC(v55, v29, v59, v30, v56, v58, (uint64_t)v80, v82, v79, v37);
        break;
    }
    uint64_t v49 = 0;
    uint64_t v51 = 0;
    uint64_t v54 = 0;
    goto LABEL_28;
  }
  unint64_t v16 = v4[11];
  if (v16 >> 60 != 15)
  {
    uint64_t v45 = v4[10];
    *((_OWORD *)v4 + 5) = xmmword_1005F66D0;
    long long v46 = *((_OWORD *)v4 + 1);
    long long v85 = *(_OWORD *)v4;
    long long v86 = v46;
    long long v47 = *((_OWORD *)v4 + 3);
    long long v87 = *((_OWORD *)v4 + 2);
    long long v88 = v47;
    long long v89 = *((_OWORD *)v4 + 4);
    long long v90 = xmmword_1005F66D0;
    sub_100008D24(v45, v16);
    uint64_t v43 = sub_100447824();
    uint64_t v42 = v48;
    sub_100008D24(v45, v16);
    uint64_t v49 = sub_100448198(v45, v16, (uint64_t (*)(void))j__malloc_2, (uint64_t)j__realloc_2, (uint64_t)sub_10044817C, (uint64_t)sub_10044818C);
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    a3(v45, v16);
    a3(v45, v16);
    uint64_t result = sub_1000094D4(v45, v16);
    uint64_t v54 = v53 & 0xFFFFFFFFFFFFFFLL;
LABEL_28:
    *(void *)a4 = v43;
    *(void *)(a4 + 8) = v42;
    *(void *)(a4 + 16) = v49;
    *(void *)(a4 + 24) = v51;
    *(void *)(a4 + 32) = v54;
    *(void *)(a4 + 40) = 0;
    *(void *)(a4 + 48) = 0;
    *(void *)(a4 + 56) = 0;
    *(unsigned char *)(a4 + 64) = 1;
    return result;
  }
  uint64_t v17 = v13;
  sub_100443A80();
  swift_allocError();
  *(_OWORD *)uint64_t v18 = xmmword_1005F6950;
  *(unsigned char *)(v18 + 16) = 1;
  swift_willThrow();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a2, v12);
  sub_100447F0C(a2, (uint64_t)v11);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v19 = sub_1005E0EB0();
  os_log_type_t v20 = sub_1005E25A0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v82 = (uint64_t)v19;
    uint64_t v22 = v21;
    size_t v80 = (void *)swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v91 = v83;
    *(_DWORD *)uint64_t v22 = 68158466;
    LODWORD(v84) = 2;
    sub_1005E2960();
    *(_WORD *)(v22 + 8) = 256;
    unint64_t v23 = &v11[*(int *)(v9 + 20)];
    LOBYTE(v84) = *v23;
    sub_1005E2960();
    *(_WORD *)(v22 + 11) = 2082;
    uint64_t v81 = v17;
    uint64_t v24 = ConnectionID.debugDescription.getter(*((unsigned int *)v23 + 1));
    uint64_t v84 = sub_100481E54(v24, v25, &v91);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100448118((uint64_t)v11);
    *(_WORD *)(v22 + 21) = 2112;
    uint64_t v26 = sub_1005E06E0();
    uint64_t v84 = v26;
    sub_1005E2960();
    *size_t v80 = v26;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v27 = (os_log_t)v82;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v82, v20, "[%.*hhx-%{public}s] Authentication failed: %@", (uint8_t *)v22, 0x1Fu);
    sub_10000566C(&qword_100717A10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v81 + 8))(v15, v12);
  }
  else
  {
    sub_100448118((uint64_t)v11);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v12);
  }
  return swift_willThrow();
}

uint64_t sub_10044532C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    uint64_t v27 = *v3;
    unint64_t v26 = v3[1];
    unint64_t v29 = (void *)v3[2];
    unint64_t v28 = v3[3];
    uint64_t v30 = v3[4];
    unint64_t v31 = v3[5];
    uint64_t v32 = v3[6];
    uint64_t v33 = v3[7];
    uint64_t v34 = v3[8];
    unint64_t v35 = v3[9];
    switch((v35 >> 59) & 6 | ((v33 & 0x2000000000000000) != 0))
    {
      case 1uLL:
        unint64_t v86 = v33 & 0xDFFFFFFFFFFFFFFFLL;
        uint64_t v87 = v33;
        unint64_t v66 = v28;
        os_log_t v89 = (os_log_t)(v35 & 0xCFFFFFFFFFFFFFFFLL);
        uint64_t v67 = v34;
        unint64_t v91 = v26;
        unint64_t v68 = v66;
        sub_100008D24(v27, v26);
        long long v90 = v29;
        sub_100008D24((uint64_t)v29, v68);
        unint64_t v88 = v31;
        sub_100008D24(v30, v31);
        uint64_t v69 = (uint64_t)v32;
        uint64_t v70 = (uint64_t)v32;
        uint64_t v71 = v67;
        sub_100008D24(v70, v86);
        sub_100008D24(v67, (unint64_t)v89);
        if (qword_1007155F0 != -1) {
          swift_once();
        }
        uint64_t v39 = qword_1007621B0;
        uint64_t v40 = *(void *)algn_1007621B8;
        swift_bridgeObjectRetain();
        uint64_t result = sub_1004434DC(v27, v91, (uint64_t)v90, v68, v30, v88, v69, v87, v71, v35);
        goto LABEL_32;
      case 2uLL:
        long long v90 = v29;
        unint64_t v91 = v34;
        unint64_t v86 = v28;
        uint64_t v87 = v33;
        unint64_t v88 = v31;
        os_log_t v89 = v32;
        uint64_t v72 = v27;
        uint64_t v73 = v27;
        unint64_t v74 = v26;
        sub_100008D24(v72, v26);
        if (qword_1007155F8 != -1) {
          swift_once();
        }
        uint64_t v39 = qword_1007621C0;
        uint64_t v40 = *(void *)algn_1007621C8;
        swift_bridgeObjectRetain();
        unint64_t v83 = v35;
        uint64_t v82 = v91;
        uint64_t v41 = v73;
        unint64_t v42 = v74;
        uint64_t v43 = v90;
        unint64_t v44 = v86;
        uint64_t v45 = v30;
        goto LABEL_30;
      case 3uLL:
        long long v90 = v29;
        unint64_t v91 = v34;
        unint64_t v86 = v27;
        uint64_t v87 = v33;
        uint64_t v85 = v30;
        unint64_t v88 = v31;
        os_log_t v89 = v32;
        uint64_t v75 = qword_100715608;
        unint64_t v76 = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v77 = v28;
        if (v75 != -1) {
          swift_once();
        }
        uint64_t v39 = qword_1007621E0;
        uint64_t v40 = *(void *)algn_1007621E8;
        swift_bridgeObjectRetain();
        unint64_t v83 = v35;
        uint64_t v82 = v91;
        uint64_t v41 = v86;
        unint64_t v42 = v76;
        uint64_t v43 = v90;
        goto LABEL_29;
      case 4uLL:
        unint64_t v91 = v34;
        uint64_t v87 = v33;
        uint64_t v85 = v30;
        unint64_t v88 = v31;
        os_log_t v89 = v32;
        uint64_t v78 = v27;
        uint64_t v79 = v27;
        unint64_t v80 = v26;
        sub_100008D24(v78, v26);
        sub_100008D24((uint64_t)v29, v28);
        unint64_t v77 = v28;
        uint64_t v81 = v29;
        if (qword_100715610 != -1) {
          swift_once();
        }
        uint64_t v39 = qword_1007621F0;
        uint64_t v40 = *(void *)algn_1007621F8;
        swift_bridgeObjectRetain();
        unint64_t v83 = v35;
        uint64_t v82 = v91;
        uint64_t v41 = v79;
        unint64_t v42 = v80;
        uint64_t v43 = v81;
LABEL_29:
        unint64_t v44 = v77;
        uint64_t v45 = v85;
LABEL_30:
        unint64_t v46 = v88;
        os_log_t v47 = v89;
        uint64_t v65 = v87;
        goto LABEL_31;
      case 5uLL:
      case 6uLL:
        unint64_t v91 = v34;
        uint64_t v36 = v27;
        unint64_t v86 = v27;
        unint64_t v37 = v26;
        sub_100443318(v36, v26, (uint64_t)v29, v28, v30, v31, (uint64_t)v32, v33, v34, v35);
        long long v90 = v29;
        unint64_t v38 = v28;
        if (qword_100715600 != -1) {
          swift_once();
        }
        uint64_t v39 = qword_1007621D0;
        uint64_t v40 = *(void *)algn_1007621D8;
        swift_bridgeObjectRetain();
        unint64_t v83 = v35;
        uint64_t v82 = v91;
        uint64_t v41 = v86;
        unint64_t v42 = v37;
        uint64_t v43 = v90;
        unint64_t v44 = v38;
        uint64_t v45 = v30;
        unint64_t v46 = v31;
        os_log_t v47 = v32;
        goto LABEL_16;
      default:
        unint64_t v91 = v34;
        uint64_t v60 = v27;
        unint64_t v86 = v27;
        unint64_t v61 = v26;
        os_log_t v89 = v32;
        sub_100008D24(v60, v26);
        sub_100008D24((uint64_t)v29, v28);
        uint64_t v62 = AuthenticationMechanism.plain.unsafeMutableAddressor();
        unint64_t v63 = v28;
        unint64_t v64 = v29;
        uint64_t v39 = *(void *)v62;
        uint64_t v40 = *((void *)v62 + 1);
        swift_bridgeObjectRetain();
        unint64_t v83 = v35;
        uint64_t v82 = v91;
        uint64_t v41 = v86;
        unint64_t v42 = v61;
        uint64_t v43 = v64;
        unint64_t v44 = v63;
        uint64_t v45 = v30;
        unint64_t v46 = v31;
        os_log_t v47 = v89;
LABEL_16:
        uint64_t v65 = v33;
LABEL_31:
        uint64_t result = sub_1004434DC(v41, v42, (uint64_t)v43, v44, v45, v46, (uint64_t)v47, v65, v82, v83);
LABEL_32:
        uint64_t v53 = 0;
        uint64_t v55 = 0;
        uint64_t v59 = 0;
        break;
    }
    goto LABEL_33;
  }
  uint64_t v15 = v3[10];
  unint64_t v14 = v3[11];
  if (v14 >> 60 == 11)
  {
    uint64_t v48 = 0;
    unint64_t v49 = 0xC000000000000000;
LABEL_12:
    long long v50 = *((_OWORD *)v3 + 1);
    long long v94 = *(_OWORD *)v3;
    long long v95 = v50;
    long long v51 = *((_OWORD *)v3 + 3);
    long long v96 = *((_OWORD *)v3 + 2);
    long long v97 = v51;
    long long v98 = *((_OWORD *)v3 + 4);
    uint64_t v99 = v15;
    unint64_t v100 = v14;
    sub_100008D24(v48, v49);
    uint64_t v39 = sub_100447824();
    uint64_t v40 = v52;
    sub_100008D24(v48, v49);
    uint64_t v53 = sub_100448198(v48, v49, (uint64_t (*)(void))j__malloc_2, (uint64_t)j__realloc_2, (uint64_t)sub_10044817C, (uint64_t)sub_10044818C);
    uint64_t v55 = v54;
    uint64_t v57 = v56;
    sub_100057EFC(v48, v49);
    sub_100057EFC(v48, v49);
    uint64_t result = sub_1000094D4(v48, v49);
    uint64_t v59 = v57 & 0xFFFFFFFFFFFFFFLL;
LABEL_33:
    *(void *)a3 = v39;
    *(void *)(a3 + 8) = v40;
    *(void *)(a3 + 16) = v53;
    *(void *)(a3 + 24) = v55;
    *(void *)(a3 + 32) = v59;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 56) = 0;
    *(unsigned char *)(a3 + 64) = 1;
    return result;
  }
  if (v14 >> 60 != 15)
  {
    *((_OWORD *)v3 + 5) = xmmword_1005F66D0;
    uint64_t v48 = v15;
    unint64_t v49 = v14;
    unint64_t v14 = 0xF000000000000000;
    uint64_t v15 = 0;
    goto LABEL_12;
  }
  sub_100443A80();
  uint64_t v16 = swift_allocError();
  *(_OWORD *)uint64_t v17 = xmmword_1005F6950;
  *(unsigned char *)(v17 + 16) = 1;
  swift_willThrow();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  sub_100447F0C(a2, (uint64_t)v9);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v18 = sub_1005E0EB0();
  os_log_type_t v19 = sub_1005E25A0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    long long v90 = (void *)swift_slowAlloc();
    unint64_t v91 = swift_slowAlloc();
    unint64_t v101 = v91;
    *(_DWORD *)uint64_t v20 = 68158466;
    LODWORD(v93) = 2;
    uint64_t v92 = v16;
    sub_1005E2960();
    *(_WORD *)(v20 + 8) = 256;
    uint64_t v21 = *(int *)(v7 + 20);
    os_log_t v89 = v18;
    uint64_t v22 = &v9[v21];
    LOBYTE(v93) = v9[v21];
    sub_1005E2960();
    *(_WORD *)(v20 + 11) = 2082;
    uint64_t v23 = ConnectionID.debugDescription.getter(*((unsigned int *)v22 + 1));
    uint64_t v93 = sub_100481E54(v23, v24, (uint64_t *)&v101);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100448118((uint64_t)v9);
    *(_WORD *)(v20 + 21) = 2112;
    uint64_t v25 = sub_1005E06E0();
    uint64_t v93 = v25;
    sub_1005E2960();
    *long long v90 = v25;
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v18 = v89;
    _os_log_impl((void *)&_mh_execute_header, v89, v19, "[%.*hhx-%{public}s] Authentication failed: %@", (uint8_t *)v20, 0x1Fu);
    sub_10000566C(&qword_100717A10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100448118((uint64_t)v9);
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_willThrow();
}

uint64_t sub_100445C58@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  uint64_t v8 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v10 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v114 - v11;
  sub_1005E0ED0();
  __chkstk_darwin();
  unint64_t v14 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  if ((a1 & 1) == 0)
  {
    uint64_t v33 = *((void *)v4 + 5);
    uint64_t v32 = *((void *)v4 + 6);
    uint64_t v34 = *((void *)v4 + 7);
    unint64_t v35 = *((void *)v4 + 8);
    uint64_t v36 = *((void *)v4 + 9);
    unint64_t v37 = *((void *)v4 + 10);
    uint64_t v39 = *((void *)v4 + 11);
    uint64_t v38 = *((void *)v4 + 12);
    uint64_t v40 = *((void *)v4 + 13);
    unint64_t v41 = *((void *)v4 + 14);
    switch((v41 >> 59) & 6 | ((v38 & 0x2000000000000000) != 0))
    {
      case 1uLL:
        unint64_t v115 = v38 & 0xDFFFFFFFFFFFFFFFLL;
        uint64_t v118 = v41 & 0xCFFFFFFFFFFFFFFFLL;
        uint64_t v119 = v33;
        uint64_t v84 = (uint64_t)v40;
        uint64_t v120 = v38;
        os_log_t v121 = v32;
        unint64_t v85 = v41;
        sub_100008D24(v33, (unint64_t)v32);
        unint64_t v116 = v35;
        sub_100008D24(v34, v35);
        uint64_t v114 = v36;
        uint64_t v117 = (void *)v37;
        unint64_t v86 = v37;
        uint64_t v87 = v84;
        sub_100008D24(v36, v86);
        sub_100008D24(v39, v115);
        sub_100008D24(v84, v118);
        if (qword_1007155F0 != -1) {
          swift_once();
        }
        uint64_t v46 = qword_1007621B0;
        uint64_t v44 = *(void *)algn_1007621B8;
        swift_bridgeObjectRetain();
        uint64_t result = sub_1004434DC(v119, (unint64_t)v121, v34, v116, v114, (unint64_t)v117, v39, v120, v87, v85);
        break;
      case 2uLL:
        unint64_t v115 = *((void *)v4 + 14);
        unint64_t v116 = v35;
        uint64_t v120 = v38;
        os_log_t v121 = v40;
        uint64_t v117 = (void *)v37;
        uint64_t v118 = v39;
        uint64_t v88 = v33;
        unint64_t v89 = (unint64_t)v32;
        sub_100008D24(v33, (unint64_t)v32);
        if (qword_1007155F8 != -1) {
          swift_once();
        }
        uint64_t v90 = qword_1007621C0;
        uint64_t v44 = *(void *)algn_1007621C8;
        swift_bridgeObjectRetain();
        uint64_t v91 = v88;
        uint64_t v46 = v90;
        uint64_t result = sub_1004434DC(v91, v89, v34, v116, v36, (unint64_t)v117, v118, v120, (uint64_t)v121, v115);
        break;
      case 3uLL:
        unint64_t v92 = *((void *)v4 + 14);
        uint64_t v120 = v38;
        os_log_t v121 = v40;
        uint64_t v118 = v39;
        uint64_t v119 = v33;
        unint64_t v116 = v34;
        uint64_t v117 = (void *)v37;
        uint64_t v114 = v36;
        uint64_t v93 = qword_100715608;
        unint64_t v94 = (unint64_t)v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v95 = v35;
        if (v93 != -1) {
          swift_once();
        }
        uint64_t v96 = qword_1007621E0;
        uint64_t v44 = *(void *)algn_1007621E8;
        swift_bridgeObjectRetain();
        unint64_t v113 = v92;
        uint64_t v46 = v96;
        uint64_t result = sub_1004434DC(v119, v94, v116, v95, v114, (unint64_t)v117, v118, v120, (uint64_t)v121, v113);
        break;
      case 4uLL:
        uint64_t v114 = *((void *)v4 + 9);
        unint64_t v115 = v41;
        uint64_t v120 = v38;
        os_log_t v121 = v40;
        uint64_t v117 = (void *)v37;
        uint64_t v118 = v39;
        uint64_t v97 = v33;
        unint64_t v98 = (unint64_t)v32;
        sub_100008D24(v33, (unint64_t)v32);
        sub_100008D24(v34, v35);
        unint64_t v99 = v35;
        if (qword_100715610 != -1) {
          swift_once();
        }
        uint64_t v100 = qword_1007621F0;
        uint64_t v44 = *(void *)algn_1007621F8;
        swift_bridgeObjectRetain();
        uint64_t v101 = v97;
        uint64_t v46 = v100;
        uint64_t result = sub_1004434DC(v101, v98, v34, v99, v114, (unint64_t)v117, v118, v120, (uint64_t)v121, v115);
        break;
      case 5uLL:
      case 6uLL:
        os_log_t v121 = (os_log_t)*((void *)v4 + 13);
        uint64_t v119 = v33;
        unint64_t v42 = v32;
        unint64_t v115 = v41;
        sub_100443318(v33, (unint64_t)v32, v34, v35, v36, v37, v39, v38, (uint64_t)v121, v41);
        unint64_t v116 = v35;
        if (qword_100715600 != -1) {
          swift_once();
        }
        uint64_t v43 = qword_1007621D0;
        uint64_t v44 = *(void *)algn_1007621D8;
        swift_bridgeObjectRetain();
        unint64_t v45 = (unint64_t)v42;
        uint64_t v46 = v43;
        uint64_t result = sub_1004434DC(v119, v45, v34, v116, v36, v37, v39, v38, (uint64_t)v121, v115);
        break;
      default:
        uint64_t v77 = *((void *)v4 + 5);
        uint64_t v118 = *((void *)v4 + 11);
        uint64_t v119 = v33;
        uint64_t v120 = v38;
        os_log_t v121 = v40;
        uint64_t v78 = v32;
        unint64_t v79 = v41;
        sub_100008D24(v77, (unint64_t)v32);
        sub_100008D24(v34, v35);
        unint64_t v80 = AuthenticationMechanism.plain.unsafeMutableAddressor();
        unint64_t v81 = v35;
        uint64_t v82 = *(void *)v80;
        uint64_t v44 = *((void *)v80 + 1);
        swift_bridgeObjectRetain();
        unint64_t v83 = (unint64_t)v78;
        uint64_t v46 = v82;
        uint64_t result = sub_1004434DC(v119, v83, v34, v81, v36, v37, v118, v120, (uint64_t)v121, v79);
        break;
    }
    goto LABEL_30;
  }
  os_log_t v121 = v8;
  uint64_t v18 = v4 + 120;
  uint64_t v19 = *((void *)v4 + 15);
  uint64_t v20 = *((void *)v4 + 18);
  if ((unint64_t)(v20 - 1) < 2)
  {
    uint64_t v21 = v16;
    uint64_t v22 = v17;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v14, a2, v16);
    sub_100447F0C(a2, (uint64_t)v10);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v23 = sub_1005E0EB0();
    os_log_type_t v24 = sub_1005E2580();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v119 = v22;
      uint64_t v27 = v26;
      uint64_t v118 = swift_slowAlloc();
      uint64_t v123 = v118;
      *(_DWORD *)uint64_t v27 = 68158210;
      LODWORD(v122) = 2;
      sub_1005E2960();
      *(_WORD *)(v27 + 8) = 256;
      uint64_t isa_high = SHIDWORD(v121[2].isa);
      LODWORD(v121) = v25;
      unint64_t v29 = &v10[isa_high];
      LOBYTE(v122) = v10[isa_high];
      sub_1005E2960();
      *(_WORD *)(v27 + 11) = 2082;
      uint64_t v120 = v21;
      uint64_t v30 = ConnectionID.debugDescription.getter(*((unsigned int *)v29 + 1));
      uint64_t v122 = sub_100481E54(v30, v31, &v123);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100448118((uint64_t)v10);
      _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v121, "[%.*hhx-%{public}s] Authentication implementation has no initial response", (uint8_t *)v27, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v119 + 8))(v14, v120);
    }
    else
    {
      sub_100448118((uint64_t)v10);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v21);
    }
    long long v55 = *((_OWORD *)v4 + 9);
    long long v157 = *((_OWORD *)v4 + 8);
    v158[0] = v55;
    *(_OWORD *)((char *)v158 + 12) = *(_OWORD *)(v4 + 156);
    long long v56 = *((_OWORD *)v4 + 5);
    long long v153 = *((_OWORD *)v4 + 4);
    long long v154 = v56;
    long long v57 = *((_OWORD *)v4 + 7);
    long long v155 = *((_OWORD *)v4 + 6);
    long long v156 = v57;
    long long v58 = *((_OWORD *)v4 + 1);
    long long v149 = *(_OWORD *)v4;
    long long v150 = v58;
    long long v59 = *((_OWORD *)v4 + 3);
    long long v151 = *((_OWORD *)v4 + 2);
    long long v152 = v59;
    uint64_t result = sub_100447558();
    uint64_t v46 = result;
    uint64_t v44 = v60;
LABEL_30:
    uint64_t v102 = 0;
    uint64_t v103 = 0;
    uint64_t v104 = 0;
LABEL_31:
    *(void *)a3 = v46;
    *(void *)(a3 + 8) = v44;
    *(void *)(a3 + 16) = v102;
    *(void *)(a3 + 24) = v103;
    *(void *)(a3 + 32) = v104;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 56) = 0;
    *(unsigned char *)(a3 + 64) = 1;
    return result;
  }
  unint64_t v49 = v4 + 152;
  uint64_t v48 = (void (*)(void *, char *, uint64_t))*((void *)v4 + 19);
  if (!v20)
  {
    *uint64_t v18 = 0;
    *((void *)v4 + 16) = 0;
    *((void *)v4 + 17) = 0;
    uint64_t v50 = 1;
    *((void *)v4 + 18) = 1;
    *unint64_t v49 = 0;
    *((void *)v4 + 20) = 0;
    *((_DWORD *)v4 + 42) = 0;
    char v51 = *v4;
    uint64_t v144 = 0;
    unint64_t v145 = 0xE000000000000000;
    uint64_t v146 = 0;
    unint64_t v147 = 0xE000000000000000;
    char v148 = v51 ^ 1;
    uint64_t v52 = sub_100457A64();
    unint64_t v54 = v53;
LABEL_33:
    long long v106 = *(_OWORD *)(v4 + 8);
    uint64_t v107 = *((void *)v4 + 3);
    uint64_t v108 = *((void *)v4 + 4);
    char v128 = v51;
    long long v129 = v106;
    uint64_t v130 = v107;
    uint64_t v131 = v108;
    long long v132 = *(_OWORD *)(v4 + 40);
    long long v133 = *(_OWORD *)(v4 + 56);
    long long v134 = *(_OWORD *)(v4 + 72);
    long long v135 = *(_OWORD *)(v4 + 88);
    long long v136 = *(_OWORD *)(v4 + 104);
    uint64_t v137 = 0;
    uint64_t v138 = 0;
    uint64_t v139 = 0;
    uint64_t v140 = v50;
    uint64_t v141 = 0;
    uint64_t v142 = 0;
    int v143 = 0;
    sub_100057EE8(v52, v54);
    uint64_t v46 = sub_100447558();
    uint64_t v44 = v109;
    sub_100008D24(v52, v54);
    uint64_t v102 = sub_100448198(v52, v54, (uint64_t (*)(void))j__malloc_2, (uint64_t)j__realloc_2, (uint64_t)sub_10044817C, (uint64_t)sub_10044818C);
    uint64_t v103 = v110;
    uint64_t v112 = v111;
    sub_100057EFC(v52, v54);
    sub_100057EFC(v52, v54);
    uint64_t result = sub_1000094D4(v52, v54);
    uint64_t v104 = v112 & 0xFFFFFFFFFFFFFFLL;
    goto LABEL_31;
  }
  uint64_t v118 = (uint64_t)&v114 - v15;
  uint64_t v119 = v17;
  uint64_t v120 = v16;
  unint64_t v116 = *((void *)v4 + 16);
  unint64_t v61 = (void *)*((void *)v4 + 20);
  LODWORD(v115) = v4[136];
  *uint64_t v18 = 0;
  *((void *)v4 + 16) = 0;
  *((void *)v4 + 17) = 0;
  *((void *)v4 + 18) = 2;
  *unint64_t v49 = 0;
  *((void *)v4 + 20) = 0;
  *((_DWORD *)v4 + 42) = 0;
  uint64_t v62 = *((void *)v4 + 1);
  uint64_t v63 = *((void *)v4 + 2);
  uint64_t v64 = *((void *)v4 + 3);
  unint64_t v65 = *((void *)v4 + 4);
  LODWORD(v114) = *v4;
  uint64_t v117 = v48;
  uint64_t v66 = v170;
  sub_10045D9C8(v62, v63, v64, v65, v20, v48, v61, (uint64_t)v124, v114);
  if (!v66)
  {
    uint64_t v170 = 0;
    sub_100448844(v19, v116, v115);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_t v121 = v125;
    uint64_t v159 = v125;
    uint64_t v160 = v126;
    uint64_t v161 = v124[2];
    uint64_t v162 = v124[3];
    uint64_t v163 = v124[0];
    uint64_t v164 = v124[1];
    uint64_t v165 = 0;
    unint64_t v166 = 0xE000000000000000;
    uint64_t v167 = 0;
    int v168 = v127 & 0x80201;
    char v169 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_100458810();
    unint64_t v54 = v105;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100448858((uint64_t)v124);
    uint64_t v50 = 2;
    char v51 = v114;
    goto LABEL_33;
  }
  sub_100448844(v19, v116, v115);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = v119;
  uint64_t v68 = v120;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16))(v118, a2, v120);
  sub_100447F0C(a2, (uint64_t)v12);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v69 = sub_1005E0EB0();
  os_log_type_t v70 = sub_1005E25A0();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = swift_slowAlloc();
    uint64_t v117 = (void *)swift_slowAlloc();
    uint64_t v170 = swift_slowAlloc();
    uint64_t v123 = v170;
    *(_DWORD *)uint64_t v71 = 68158466;
    LODWORD(v122) = 2;
    sub_1005E2960();
    *(_WORD *)(v71 + 8) = 256;
    uint64_t v72 = &v12[SHIDWORD(v121[2].isa)];
    LOBYTE(v122) = *v72;
    sub_1005E2960();
    *(_WORD *)(v71 + 11) = 2082;
    os_log_t v121 = v69;
    uint64_t v73 = ConnectionID.debugDescription.getter(*((unsigned int *)v72 + 1));
    uint64_t v122 = sub_100481E54(v73, v74, &v123);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100448118((uint64_t)v12);
    *(_WORD *)(v71 + 21) = 2112;
    uint64_t v75 = sub_1005E06E0();
    uint64_t v122 = v75;
    sub_1005E2960();
    *uint64_t v117 = v75;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v76 = v121;
    _os_log_impl((void *)&_mh_execute_header, v121, v70, "[%.*hhx-%{public}s] Authentication failed: %@", (uint8_t *)v71, 0x1Fu);
    sub_10000566C(&qword_100717A10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v118, v120);
  }
  else
  {
    sub_100448118((uint64_t)v12);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v118, v68);
  }
  return swift_willThrow();
}

uint64_t sub_10044699C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  *(void *)&long long v109 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v101 - v10;
  sub_1005E0ED0();
  __chkstk_darwin();
  uint64_t v13 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v101 - v16;
  if ((a1 & 1) == 0)
  {
    uint64_t v33 = *(void *)v4;
    unint64_t v32 = *((void *)v4 + 1);
    uint64_t v34 = *((void *)v4 + 2);
    unint64_t v35 = *((void *)v4 + 3);
    uint64_t v36 = *((void *)v4 + 4);
    unint64_t v37 = *((void *)v4 + 5);
    uint64_t v38 = *((void *)v4 + 6);
    uint64_t v39 = *((void *)v4 + 8);
    unint64_t v40 = *((void *)v4 + 9);
    *(void *)&long long v109 = *((void *)v4 + 7);
    switch((v40 >> 59) & 6 | ((v109 & 0x2000000000000000) != 0))
    {
      case 1uLL:
        unint64_t v88 = v109 & 0xDFFFFFFFFFFFFFFFLL;
        unint64_t v102 = v40 & 0xCFFFFFFFFFFFFFFFLL;
        uint64_t v89 = v33;
        uint64_t v90 = v39;
        uint64_t v105 = v89;
        unint64_t v107 = v40;
        unint64_t v108 = v32;
        sub_100008D24(v89, v32);
        unint64_t v104 = v35;
        sub_100008D24(v34, v35);
        uint64_t v103 = v36;
        long long v106 = (void *)v37;
        sub_100008D24(v36, v37);
        sub_100008D24(v38, v88);
        sub_100008D24(v90, v102);
        if (qword_1007155F0 != -1) {
          swift_once();
        }
        uint64_t v45 = qword_1007621B0;
        uint64_t v43 = *(void *)algn_1007621B8;
        swift_bridgeObjectRetain();
        uint64_t result = sub_1004434DC(v105, v108, v34, v104, v103, (unint64_t)v106, v38, v109, v90, v107);
        goto LABEL_33;
      case 2uLL:
        unint64_t v107 = v40;
        unint64_t v108 = v39;
        unint64_t v104 = v35;
        uint64_t v105 = v38;
        long long v106 = (void *)v37;
        unint64_t v91 = v32;
        sub_100008D24(v33, v32);
        if (qword_1007155F8 != -1) {
          swift_once();
        }
        uint64_t v92 = qword_1007621C0;
        uint64_t v43 = *(void *)algn_1007621C8;
        swift_bridgeObjectRetain();
        unint64_t v100 = v107;
        uint64_t v99 = v108;
        uint64_t v84 = v33;
        unint64_t v85 = v91;
        uint64_t v45 = v92;
        uint64_t v86 = v34;
        unint64_t v87 = v104;
        goto LABEL_24;
      case 3uLL:
        unint64_t v107 = v40;
        unint64_t v108 = v39;
        uint64_t v103 = v36;
        unint64_t v104 = v34;
        uint64_t v105 = v38;
        long long v106 = (void *)v37;
        uint64_t v94 = qword_100715608;
        unint64_t v95 = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v96 = v35;
        if (v94 != -1) {
          swift_once();
        }
        uint64_t v45 = qword_1007621E0;
        uint64_t v43 = *(void *)algn_1007621E8;
        swift_bridgeObjectRetain();
        unint64_t v100 = v107;
        uint64_t v99 = v108;
        uint64_t v84 = v33;
        unint64_t v85 = v95;
        uint64_t v86 = v104;
        goto LABEL_31;
      case 4uLL:
        unint64_t v107 = v40;
        unint64_t v108 = v39;
        uint64_t v103 = v36;
        uint64_t v105 = v38;
        long long v106 = (void *)v37;
        unint64_t v97 = v32;
        sub_100008D24(v33, v32);
        sub_100008D24(v34, v35);
        unint64_t v96 = v35;
        if (qword_100715610 != -1) {
          swift_once();
        }
        uint64_t v98 = qword_1007621F0;
        uint64_t v43 = *(void *)algn_1007621F8;
        swift_bridgeObjectRetain();
        unint64_t v100 = v107;
        uint64_t v99 = v108;
        uint64_t v84 = v33;
        unint64_t v85 = v97;
        uint64_t v45 = v98;
        uint64_t v86 = v34;
LABEL_31:
        unint64_t v87 = v96;
        uint64_t v93 = v103;
        goto LABEL_32;
      case 5uLL:
      case 6uLL:
        unint64_t v107 = v40;
        unint64_t v108 = v39;
        unint64_t v41 = v32;
        sub_100443318(v33, v32, v34, v35, v36, v37, v38, v109, v39, v40);
        unint64_t v104 = v35;
        if (qword_100715600 != -1) {
          swift_once();
        }
        uint64_t v42 = qword_1007621D0;
        uint64_t v43 = *(void *)algn_1007621D8;
        swift_bridgeObjectRetain();
        unint64_t v44 = v41;
        uint64_t v45 = v42;
        uint64_t result = sub_1004434DC(v33, v44, v34, v104, v36, v37, v38, v109, v108, v107);
        goto LABEL_33;
      default:
        unint64_t v108 = v39;
        unint64_t v79 = v32;
        uint64_t v105 = v38;
        long long v106 = (void *)v37;
        unint64_t v80 = v40;
        sub_100008D24(v33, v32);
        sub_100008D24(v34, v35);
        unint64_t v81 = AuthenticationMechanism.plain.unsafeMutableAddressor();
        unint64_t v82 = v35;
        uint64_t v83 = *(void *)v81;
        uint64_t v43 = *((void *)v81 + 1);
        swift_bridgeObjectRetain();
        unint64_t v100 = v80;
        uint64_t v99 = v108;
        uint64_t v84 = v33;
        unint64_t v85 = v79;
        uint64_t v45 = v83;
        uint64_t v86 = v34;
        unint64_t v87 = v82;
LABEL_24:
        uint64_t v93 = v36;
LABEL_32:
        uint64_t result = sub_1004434DC(v84, v85, v86, v87, v93, (unint64_t)v106, v105, v109, v99, v100);
        break;
    }
    goto LABEL_33;
  }
  unint64_t v18 = *((void *)v4 + 11);
  if (v18 >> 60 == 15)
  {
    unint64_t v47 = v14;
    uint64_t v48 = v15;
    (*(void (**)(char *, uint64_t, unint64_t))(v15 + 16))(v13, a2, v14);
    sub_100447F0C(a2, (uint64_t)v9);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v49 = sub_1005E0EB0();
    os_log_type_t v50 = sub_1005E2580();
    int v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = swift_slowAlloc();
      LODWORD(v106) = v51;
      uint64_t v53 = v52;
      unint64_t v107 = swift_slowAlloc();
      unint64_t v130 = v107;
      *(_DWORD *)uint64_t v53 = 68158210;
      LODWORD(v111) = 2;
      sub_1005E2960();
      *(_WORD *)(v53 + 8) = 256;
      uint64_t v54 = *(int *)(v109 + 20);
      unint64_t v108 = v47;
      long long v55 = &v9[v54];
      LOBYTE(v111) = v9[v54];
      sub_1005E2960();
      *(_WORD *)(v53 + 11) = 2082;
      *(void *)&long long v109 = v48;
      uint64_t v56 = ConnectionID.debugDescription.getter(*((unsigned int *)v55 + 1));
      uint64_t v111 = sub_100481E54(v56, v57, (uint64_t *)&v130);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100448118((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v106, "[%.*hhx-%{public}s] Authentication implementation has no initial response", (uint8_t *)v53, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, unint64_t))(v109 + 8))(v13, v108);
    }
    else
    {
      sub_100448118((uint64_t)v9);

      (*(void (**)(char *, unint64_t))(v48 + 8))(v13, v47);
    }
    long long v74 = v4[5];
    long long v116 = v4[4];
    long long v117 = v74;
    long long v75 = v4[7];
    long long v118 = v4[6];
    long long v119 = v75;
    long long v76 = v4[1];
    long long v112 = *v4;
    long long v113 = v76;
    long long v77 = v4[3];
    long long v114 = v4[2];
    long long v115 = v77;
    uint64_t result = sub_100447AF0();
    uint64_t v45 = result;
    uint64_t v43 = v78;
LABEL_33:
    uint64_t v68 = 0;
    uint64_t v70 = 0;
    uint64_t v73 = 0;
    goto LABEL_34;
  }
  if (v18 >> 60 != 11)
  {
    long long v58 = (void *)*((void *)v4 + 10);
    long long v109 = xmmword_1005F6760;
    _OWORD v4[5] = xmmword_1005F6760;
    uint64_t v59 = *((void *)v4 + 12);
    unint64_t v60 = *((void *)v4 + 13);
    uint64_t v61 = *((void *)v4 + 14);
    unint64_t v107 = *((void *)v4 + 15);
    unint64_t v108 = v61;
    uint64_t v62 = sub_100453AE4(v59, v60, v61, v107, v58, v18);
    unint64_t v64 = v63;
    sub_10003E070((uint64_t)v58, v18);
    long long v65 = v4[1];
    long long v120 = *v4;
    long long v121 = v65;
    long long v66 = v4[3];
    long long v122 = v4[2];
    long long v123 = v66;
    long long v124 = v4[4];
    long long v125 = v109;
    uint64_t v126 = v59;
    unint64_t v127 = v60;
    unint64_t v128 = v108;
    unint64_t v129 = v107;
    sub_100008D24((uint64_t)v62, v64);
    uint64_t v45 = sub_100447AF0();
    uint64_t v43 = v67;
    sub_100008D24((uint64_t)v62, v64);
    uint64_t v68 = sub_100448198((uint64_t)v62, v64, (uint64_t (*)(void))j__malloc_2, (uint64_t)j__realloc_2, (uint64_t)sub_10044817C, (uint64_t)sub_10044818C);
    uint64_t v70 = v69;
    uint64_t v72 = v71;
    sub_1000094D4((uint64_t)v62, v64);
    sub_1000094D4((uint64_t)v62, v64);
    uint64_t result = sub_1000094D4((uint64_t)v62, v64);
    uint64_t v73 = v72 & 0xFFFFFFFFFFFFFFLL;
LABEL_34:
    *(void *)a3 = v45;
    *(void *)(a3 + 8) = v43;
    *(void *)(a3 + 16) = v68;
    *(void *)(a3 + 24) = v70;
    *(void *)(a3 + 32) = v73;
    *(void *)(a3 + 40) = 0;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 56) = 0;
    *(unsigned char *)(a3 + 64) = 1;
    return result;
  }
  unint64_t v19 = v14;
  uint64_t v20 = v15;
  sub_100443A80();
  uint64_t v21 = swift_allocError();
  *(_OWORD *)uint64_t v22 = xmmword_1005F6950;
  *(unsigned char *)(v22 + 16) = 1;
  swift_willThrow();
  (*(void (**)(char *, uint64_t, unint64_t))(v20 + 16))(v17, a2, v19);
  sub_100447F0C(a2, (uint64_t)v11);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v23 = sub_1005E0EB0();
  os_log_type_t v24 = sub_1005E25A0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    unint64_t v108 = v19;
    uint64_t v26 = v25;
    long long v106 = (void *)swift_slowAlloc();
    unint64_t v107 = swift_slowAlloc();
    unint64_t v130 = v107;
    *(_DWORD *)uint64_t v26 = 68158466;
    LODWORD(v111) = 2;
    uint64_t v110 = v21;
    sub_1005E2960();
    *(_WORD *)(v26 + 8) = 256;
    uint64_t v27 = &v11[*(int *)(v109 + 20)];
    LOBYTE(v111) = *v27;
    sub_1005E2960();
    *(_WORD *)(v26 + 11) = 2082;
    *(void *)&long long v109 = v23;
    uint64_t v28 = ConnectionID.debugDescription.getter(*((unsigned int *)v27 + 1));
    uint64_t v111 = sub_100481E54(v28, v29, (uint64_t *)&v130);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_100448118((uint64_t)v11);
    *(_WORD *)(v26 + 21) = 2112;
    uint64_t v30 = sub_1005E06E0();
    uint64_t v111 = v30;
    sub_1005E2960();
    *long long v106 = v30;
    swift_errorRelease();
    swift_errorRelease();
    unint64_t v31 = (void *)v109;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v109, v24, "[%.*hhx-%{public}s] Authentication failed: %@", (uint8_t *)v26, 0x1Fu);
    sub_10000566C(&qword_100717A10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, unint64_t))(v20 + 8))(v17, v108);
  }
  else
  {
    sub_100448118((uint64_t)v11);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, unint64_t))(v20 + 8))(v17, v19);
  }
  return swift_willThrow();
}

uint64_t sub_100447558()
{
  uint64_t v1 = v0[5];
  unint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  unint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[13];
  unint64_t v8 = v0[14];
  unint64_t v15 = v0[10];
  uint64_t v16 = v5;
  switch((v8 >> 59) & 6 | ((v7 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      unint64_t v11 = v0[10];
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      sub_100008D24(v5, v11);
      sub_100008D24(v6, v7 & 0xDFFFFFFFFFFFFFFFLL);
      sub_100008D24(v9, v8 & 0xCFFFFFFFFFFFFFFFLL);
      if (qword_1007155F0 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621B0;
      break;
    case 2uLL:
      sub_100008D24(v1, v2);
      if (qword_1007155F8 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621C0;
      break;
    case 3uLL:
      uint64_t v12 = qword_100715608;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621E0;
      break;
    case 4uLL:
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      if (qword_100715610 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621F0;
      break;
    case 5uLL:
    case 6uLL:
      sub_100443318(v1, v2, v3, v4, v5, v0[10], v6, v7, v9, v8);
      if (qword_100715600 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621D0;
      break;
    default:
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      uint64_t v10 = (uint64_t *)AuthenticationMechanism.plain.unsafeMutableAddressor();
      break;
  }
  uint64_t v13 = *v10;
  swift_bridgeObjectRetain();
  sub_1004434DC(v1, v2, v3, v4, v16, v15, v6, v7, v9, v8);
  return v13;
}

uint64_t sub_100447824()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v9 = v0[8];
  unint64_t v8 = v0[9];
  unint64_t v15 = v0[5];
  uint64_t v16 = v5;
  switch((v8 >> 59) & 6 | ((v7 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      unint64_t v11 = v0[5];
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      sub_100008D24(v5, v11);
      sub_100008D24(v6, v7 & 0xDFFFFFFFFFFFFFFFLL);
      sub_100008D24(v9, v8 & 0xCFFFFFFFFFFFFFFFLL);
      if (qword_1007155F0 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621B0;
      break;
    case 2uLL:
      sub_100008D24(v1, v2);
      if (qword_1007155F8 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621C0;
      break;
    case 3uLL:
      uint64_t v12 = qword_100715608;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621E0;
      break;
    case 4uLL:
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      if (qword_100715610 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621F0;
      break;
    case 5uLL:
    case 6uLL:
      sub_100443318(v1, v2, v3, v4, v5, v0[5], v6, v7, v9, v8);
      if (qword_100715600 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621D0;
      break;
    default:
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      uint64_t v10 = (uint64_t *)AuthenticationMechanism.plain.unsafeMutableAddressor();
      break;
  }
  uint64_t v13 = *v10;
  swift_bridgeObjectRetain();
  sub_1004434DC(v1, v2, v3, v4, v16, v15, v6, v7, v9, v8);
  return v13;
}

uint64_t sub_100447AF0()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v9 = v0[8];
  unint64_t v8 = v0[9];
  unint64_t v15 = v0[5];
  uint64_t v16 = v5;
  switch((v8 >> 59) & 6 | ((v7 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      unint64_t v11 = v0[5];
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      sub_100008D24(v5, v11);
      sub_100008D24(v6, v7 & 0xDFFFFFFFFFFFFFFFLL);
      sub_100008D24(v9, v8 & 0xCFFFFFFFFFFFFFFFLL);
      if (qword_1007155F0 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621B0;
      break;
    case 2uLL:
      sub_100008D24(v1, v2);
      if (qword_1007155F8 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621C0;
      break;
    case 3uLL:
      uint64_t v12 = qword_100715608;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621E0;
      break;
    case 4uLL:
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      if (qword_100715610 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621F0;
      break;
    case 5uLL:
    case 6uLL:
      sub_100443318(v1, v2, v3, v4, v5, v0[5], v6, v7, v9, v8);
      if (qword_100715600 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1007621D0;
      break;
    default:
      sub_100008D24(v1, v2);
      sub_100008D24(v3, v4);
      uint64_t v10 = (uint64_t *)AuthenticationMechanism.plain.unsafeMutableAddressor();
      break;
  }
  uint64_t v13 = *v10;
  swift_bridgeObjectRetain();
  sub_1004434DC(v1, v2, v3, v4, v16, v15, v6, v7, v9, v8);
  return v13;
}

uint64_t sub_100447DBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  unint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  unint64_t v8 = v1[5];
  uint64_t v10 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v12 = v1[8];
  unint64_t v11 = v1[9];
  uint64_t v14 = v9 | 0x1000000000000000;
  uint64_t result = sub_100443318(v3, v4, v5, v6, v7, v8, v10, v9, v12, v11);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v14;
  a1[8] = v12;
  a1[9] = v11;
  return result;
}

uint64_t sub_100447E5C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_10044699C(a1, a2, (uint64_t)v6);
  if (!v3) {
    return sub_100447EA4((uint64_t)v6, a3);
  }
  return result;
}

uint64_t sub_100447EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100447F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr1006B94C1C6LoggerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100447F70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[5];
  unint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  unint64_t v6 = v1[8];
  uint64_t v7 = v1[9];
  unint64_t v8 = v1[10];
  uint64_t v10 = v1[11];
  uint64_t v9 = v1[12];
  uint64_t v12 = v1[13];
  unint64_t v11 = v1[14];
  uint64_t v14 = v9 | 0x1000000000000000;
  uint64_t result = sub_100443318(v3, v4, v5, v6, v7, v8, v10, v9, v12, v11);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v10;
  a1[7] = v14;
  a1[8] = v12;
  a1[9] = v11;
  return result;
}

uint64_t sub_100448010@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_100445C58(a1, a2, (uint64_t)v6);
  if (!v3) {
    return sub_100447EA4((uint64_t)v6, a3);
  }
  return result;
}

uint64_t sub_100448058@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_10044532C(a1, a2, (uint64_t)v6);
  if (!v3) {
    return sub_100447EA4((uint64_t)v6, a3);
  }
  return result;
}

uint64_t sub_1004480A0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1004480CC(a1, a2, (void (*)(uint64_t, unint64_t))sub_1004488AC, a3);
}

uint64_t sub_1004480CC@<X0>(char a1@<W0>, uint64_t a2@<X1>, void (*a3)(uint64_t, unint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t result = sub_100444A34(a1, a2, a3, (uint64_t)v7);
  if (!v4) {
    return sub_100447EA4((uint64_t)v7, a4);
  }
  return result;
}

uint64_t sub_100448118(uint64_t a1)
{
  uint64_t v2 = _s14descr1006B94C1C6LoggerVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10044817C(void *a1)
{
}

void *sub_10044818C(void *__dst, const void *__src, size_t __len)
{
  if ((__len & 0x8000000000000000) == 0) {
    return memmove(__dst, __src, __len);
  }
  __break(1u);
  return __dst;
}

uint64_t sub_100448198(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_23;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9 < 0)
      {
        __break(1u);
        goto LABEL_22;
      }
LABEL_7:
      if (v9)
      {
        uint64_t v12 = sub_100375158(v9, a3, a4, a5, a6);
        swift_beginAccess();
        int v13 = 0;
        Swift::UInt32 v14 = 0;
        __int16 v15 = 0;
        char v16 = 0;
        int v17 = *(_DWORD *)(v12 + 16);
      }
      else
      {
LABEL_9:
        unint64_t v18 = ByteBufferAllocator.zeroCapacityWithDefaultAllocator.unsafeMutableAddressor();
        uint64_t v12 = *v18;
        int v13 = *((_DWORD *)v18 + 2);
        Swift::UInt32 v14 = *((_DWORD *)v18 + 3);
        int v17 = *((_DWORD *)v18 + 4);
        __int16 v15 = *((_WORD *)v18 + 10);
        char v16 = *((unsigned char *)v18 + 22);
        swift_retain();
      }
      uint64_t v27 = v12;
      int v28 = v13;
      Swift::UInt32 v29 = v14;
      int v30 = v17;
      __int16 v31 = v15;
      char v32 = v16;
      __chkstk_darwin();
      switch((int)v6)
      {
        case 0:
          v26[0] = a1;
          LOWORD(v26[1]) = a2;
          BYTE2(v26[1]) = BYTE2(a2);
          BYTE3(v26[1]) = BYTE3(a2);
          BYTE4(v26[1]) = BYTE4(a2);
          BYTE5(v26[1]) = BYTE5(a2);
          unint64_t v19 = (char *)v26 + BYTE6(a2);
          goto LABEL_15;
        case 1:
          if (a1 >> 32 < (int)a1) {
            goto LABEL_25;
          }
          sub_100008D24(a1, a2);
          uint64_t v24 = sub_100375088((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1001FC670);
          sub_1000094D4(a1, a2);
          LODWORD(v22) = v24;
          if ((v24 & 0x100000000) != 0) {
LABEL_18:
          }
            LODWORD(v22) = sub_100448530(a1, a2, v14);
          break;
        case 2:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v21 = *(void *)(a1 + 24);
          swift_retain();
          swift_retain();
          uint64_t v22 = sub_100375088(v20, v21, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1001FC670);
          swift_release();
          swift_release();
          if ((v22 & 0x100000000) == 0) {
            break;
          }
          goto LABEL_18;
        case 3:
          memset(v26, 0, 14);
          unint64_t v19 = (char *)v26;
LABEL_15:
          ByteBuffer._setBytes(_:at:)((uint64_t)v26, (uint64_t)v19, v14);
          LODWORD(v22) = v23;
          break;
        default:
          JUMPOUT(0);
      }
      if (__CFADD__(v29, v22))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
      }
      return v27;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_24;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_7;
  }
}

unint64_t sub_100448530(uint64_t a1, unint64_t a2, Swift::UInt32 a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = sub_1005E08D0();
  uint64_t v8 = *(void *)(v31 - 8);
  __chkstk_darwin();
  int v30 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((_UNKNOWN *)sub_10000566C(&qword_100715778) == &type metadata for Data) {
    goto LABEL_27;
  }
  unint64_t v10 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_25;
      }
      unint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_7:
      unsigned int v13 = a3 + v10;
      if (__CFADD__(a3, v10)) {
        goto LABEL_24;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        unsigned int v14 = *(_DWORD *)(v4 + 16);
        BOOL v15 = v13 >= v14;
        Swift::UInt32 v16 = v13 - v14;
        if (v15) {
          Swift::UInt32 v17 = v16;
        }
        else {
          Swift::UInt32 v17 = 0;
        }
        char v18 = variable initialization expression of Engine.isProcessingUpdates();
        ByteBuffer._copyStorageAndRebase(extraCapacity:resetIndices:)(v17, v18 & 1);
      }
      uint64_t v29 = v8;
      sub_10037412C(v10, (uint64_t *)v4, a3);
      sub_100008D24(a1, a2);
      uint64_t v19 = sub_1005E0830();
      sub_1000094D4(a1, a2);
      sub_1004487EC();
      sub_1005E2950();
      if (v33 != 1)
      {
        Swift::UInt32 v21 = a3;
        uint64_t v22 = a3;
        while (1)
        {
          unint64_t v20 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            break;
          }
          if ((v20 & 0x8000000000000000) != 0) {
            goto LABEL_22;
          }
          if (HIDWORD(v20)) {
            goto LABEL_23;
          }
          char v23 = v32;
          ByteBuffer._ensureAvailableCapacity(_:at:)(v19 + 1, v21);
          uint64_t v24 = *(void *)v4;
          uint64_t v25 = *(unsigned __int16 *)(v4 + 20);
          uint64_t v26 = *(unsigned __int8 *)(v4 + 22);
          swift_beginAccess();
          *(unsigned char *)(*(void *)(v24 + 24) + (v26 | (v25 << 8)) + v22 + v19) = v23;
          sub_1005E2950();
          ++v19;
          if (v33 == 1) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x1004487DCLL);
      }
      unint64_t v20 = v19;
LABEL_20:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      return v20;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      unint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_7;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_7;
    default:
      unint64_t v10 = BYTE6(a2);
      goto LABEL_7;
  }
}

unint64_t sub_1004487EC()
{
  unint64_t result = qword_100715780;
  if (!qword_100715780)
  {
    sub_1005E08D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715780);
  }
  return result;
}

uint64_t sub_100448844(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_1002173AC(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_100448858(uint64_t a1)
{
  return a1;
}

void *sub_1004488B0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[5];
    unint64_t v9 = a2[6];
    sub_10044461C(v8, v9);
    _OWORD v4[5] = v8;
    v4[6] = v9;
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_1005E0ED0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = _s14descr1006B94C1C6LoggerVMa();
    *(void *)&v11[*(int *)(v14 + 20)] = *(void *)(v12 + *(int *)(v14 + 20));
    uint64_t v15 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100448A0C(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  sub_100444674(*(void *)(a1 + 40), *(void *)(a1 + 48));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100448A9C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 40);
  unint64_t v8 = *(void *)(a2 + 48);
  sub_10044461C(v7, v8);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = _s14descr1006B94C1C6LoggerVMa();
  *(void *)(v10 + *(int *)(v13 + 20)) = *(void *)(v11 + *(int *)(v13 + 20));
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_100448BA0(uint64_t *a1, uint64_t *a2, int *a3)
{
  sub_100022498(a1, a2);
  uint64_t v6 = a2[5];
  unint64_t v7 = a2[6];
  sub_10044461C(v6, v7);
  uint64_t v8 = a1[5];
  unint64_t v9 = a1[6];
  a1[5] = v6;
  a1[6] = v7;
  sub_100444674(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1005E0ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = *(int *)(_s14descr1006B94C1C6LoggerVMa() + 20);
  uint64_t v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  *uint64_t v15 = *v16;
  *((_DWORD *)v15 + 1) = *((_DWORD *)v16 + 1);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100448C9C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = _s14descr1006B94C1C6LoggerVMa();
  *(void *)(v8 + *(int *)(v11 + 20)) = *(void *)(v9 + *(int *)(v11 + 20));
  uint64_t v12 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100448D6C(uint64_t a1, uint64_t a2, int *a3)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  unint64_t v8 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100444674(v7, v8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(_s14descr1006B94C1C6LoggerVMa() + 20);
  uint64_t v14 = v10 + v13;
  uint64_t v15 = v11 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  uint64_t v16 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100448E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100448E74);
}

uint64_t sub_100448E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = _s14descr1006B94C1C6LoggerVMa();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100448F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100448F38);
}

uint64_t sub_100448F38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = _s14descr1006B94C1C6LoggerVMa();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AuthenticationTask()
{
  uint64_t result = qword_1007157E0;
  if (!qword_1007157E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10044902C()
{
  uint64_t result = _s14descr1006B94C1C6LoggerVMa();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004490E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  long long v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  sub_10003BCDC(v1, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v49, v9, v10);
  sub_10044AF60((uint64_t)v49, (uint64_t)v59);
  uint64_t v11 = v60;
  v60 &= ~0x1000000000000000uLL;
  uint64_t v45 = v4;
  uint64_t v46 = a1;
  if ((v11 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)v59, (uint64_t)v61);
    uint64_t v50 = 0x204C534153;
    unint64_t v51 = 0xE500000000000000;
    sub_100443AD4((uint64_t)v61, (uint64_t)v62);
    switch((v64 >> 59) & 6 | ((v63 & 0x2000000000000000) != 0))
    {
      case 1uLL:
        v63 &= ~0x2000000000000000uLL;
        v64 &= 0xCFFFFFFFFFFFFFFFLL;
        if (qword_1007155F0 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1007621B0;
        break;
      case 2uLL:
        v63 &= ~0x2000000000000000uLL;
        v64 &= 0xCFFFFFFFFFFFFFFFLL;
        if (qword_1007155F8 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1007621C0;
        break;
      case 3uLL:
        v63 &= ~0x2000000000000000uLL;
        v64 &= 0xCFFFFFFFFFFFFFFFLL;
        if (qword_100715608 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1007621E0;
        break;
      case 4uLL:
        v63 &= ~0x2000000000000000uLL;
        v64 &= 0xCFFFFFFFFFFFFFFFLL;
        if (qword_100715610 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1007621F0;
        break;
      case 5uLL:
      case 6uLL:
        v63 &= ~0x2000000000000000uLL;
        v64 &= 0xCFFFFFFFFFFFFFFFLL;
        if (qword_100715600 != -1) {
          swift_once();
        }
        uint64_t v14 = &qword_1007621D0;
        break;
      default:
        v63 &= ~0x2000000000000000uLL;
        v64 &= 0xCFFFFFFFFFFFFFFFLL;
        uint64_t v14 = (uint64_t *)AuthenticationMechanism.plain.unsafeMutableAddressor();
        break;
    }
    uint64_t v16 = *v14;
    uint64_t v15 = (void *)v14[1];
    swift_bridgeObjectRetain();
    v65._uint64_t countAndFlagsBits = v16;
    v65._object = v15;
    sub_1005E1E30(v65);
    swift_bridgeObjectRelease();
    sub_10044AFBC((uint64_t)v49);
    uint64_t v13 = v50;
    unint64_t v12 = v51;
  }
  else
  {
    sub_10044AFBC((uint64_t)v49);
    unint64_t v12 = 0xE500000000000000;
    uint64_t v13 = 0x4E49474F4CLL;
  }
  uint64_t v17 = type metadata accessor for AuthenticationTask();
  sub_10044B074((uint64_t)v1 + *(int *)(v17 + 20), (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  sub_10044B074((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain();
  char v18 = sub_1005E0EB0();
  os_log_type_t v19 = sub_1005E25C0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  unint64_t v47 = v8;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v50 = v43;
    *(_DWORD *)uint64_t v21 = 68158466;
    LODWORD(v48) = 2;
    uint64_t v44 = v17;
    sub_1005E2960();
    *(_WORD *)(v21 + 8) = 256;
    uint64_t v22 = *(int *)(v45 + 20);
    uint64_t v45 = v13;
    char v23 = &v6[v22];
    LOBYTE(v48) = v6[v22];
    sub_1005E2960();
    *(_WORD *)(v21 + 11) = 2082;
    uint64_t v24 = ConnectionID.debugDescription.getter(*((unsigned int *)v23 + 1));
    uint64_t v48 = sub_100481E54(v24, v25, &v50);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10044B0DC((uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    *(_WORD *)(v21 + 21) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_100481E54(v45, v12, &v50);
    uint64_t v17 = v44;
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%.*hhx-%{public}s] Using authentication mechanism '%{public}s'.", (uint8_t *)v21, 0x1Fu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10044B0DC((uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = v2[6];
  if ((v26 & 0x3000000000000000) != 0x2000000000000000 || v26 != 0x2000000000000000 || v2[5])
  {
    sub_1005E2F20();
    __break(1u);
    JUMPOUT(0x1004497D0);
  }
  uint64_t v27 = *((unsigned __int8 *)v2 + *(int *)(v17 + 24));
  if (*((unsigned char *)v2 + *(int *)(v17 + 24))) {
    uint64_t v28 = 2;
  }
  else {
    uint64_t v28 = 1;
  }
  v2[5] = v28;
  v2[6] = 0x2000000000000000;
  uint64_t v29 = v2[3];
  uint64_t v30 = v2[4];
  sub_100057374((uint64_t)v2, v29);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, char *, uint64_t, uint64_t))(v30 + 16))(&v50, v27, v47, v29, v30);
  uint64_t v32 = v50;
  unint64_t v31 = v51;
  uint64_t v33 = v52;
  uint64_t v34 = v53;
  uint64_t v35 = v54;
  uint64_t v36 = v55;
  uint64_t v38 = v56;
  uint64_t v37 = v57;
  char v39 = v58;
  uint64_t result = sub_10044B0DC((uint64_t)v47, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  unint64_t v41 = v46;
  *uint64_t v46 = v32;
  v41[1] = v31;
  v41[2] = v33;
  v41[3] = v34;
  v41[4] = v35;
  v41[5] = v36;
  v41[6] = v38;
  v41[7] = v37;
  *((unsigned char *)v41 + 64) = v39;
  return result;
}

uint64_t sub_1004497EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  long long v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v35 - v7;
  type metadata accessor for UntaggedResponse(0);
  __chkstk_darwin();
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10044B074(a1, (uint64_t)v10, type metadata accessor for UntaggedResponse);
  if (swift_getEnumCaseMultiPayload() != 5) {
    return sub_10044B0DC((uint64_t)v10, type metadata accessor for UntaggedResponse);
  }
  uint64_t v11 = *v10;
  uint64_t v12 = type metadata accessor for AuthenticationTask();
  sub_10044B074(v2 + *(int *)(v12 + 20), (uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  sub_10044B074((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1005E0EB0();
  int v14 = sub_1005E25C0();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    int v37 = v14;
    os_log_t v38 = v13;
    uint64_t v39 = v12;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v42 = v36;
    *(_DWORD *)uint64_t v15 = 68158466;
    LODWORD(v41) = 2;
    sub_1005E2960();
    *(_WORD *)(v15 + 8) = 256;
    uint64_t v16 = *(int *)(v4 + 20);
    uint64_t v40 = v11;
    uint64_t v17 = &v6[v16];
    LOBYTE(v41) = v6[v16];
    sub_1005E2960();
    *(_WORD *)(v15 + 11) = 2082;
    uint64_t v18 = *((unsigned int *)v17 + 1);
    uint64_t v11 = v40;
    uint64_t v19 = ConnectionID.debugDescription.getter(v18);
    unint64_t v41 = (void *)sub_100481E54(v19, v20, &v42);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10044B0DC((uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    *(_WORD *)(v15 + 21) = 2080;
    int64_t v21 = *(void *)(v11 + 16);
    uint64_t v22 = _swiftEmptyArrayStorage;
    if (v21)
    {
      uint64_t v35 = v2;
      unint64_t v41 = _swiftEmptyArrayStorage;
      sub_1004B885C(0, v21, 0);
      uint64_t v22 = v41;
      char v23 = (uint64_t *)(v11 + 40);
      do
      {
        uint64_t v25 = *(v23 - 1);
        uint64_t v24 = *v23;
        unint64_t v41 = v22;
        unint64_t v27 = v22[2];
        unint64_t v26 = v22[3];
        swift_bridgeObjectRetain();
        if (v27 >= v26 >> 1)
        {
          sub_1004B885C(v26 > 1, v27 + 1, 1);
          uint64_t v22 = v41;
        }
        v23 += 4;
        v22[2] = v27 + 1;
        uint64_t v28 = &v22[2 * v27];
        v28[4] = v25;
        v28[5] = v24;
        --v21;
      }
      while (v21);
      uint64_t v2 = v35;
      uint64_t v11 = v40;
    }
    unint64_t v41 = v22;
    sub_10000566C(&qword_100715740);
    sub_10044B13C();
    uint64_t v30 = sub_1005E1A80();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    unint64_t v41 = (void *)sub_100481E54(v30, v32, &v42);
    sub_1005E2960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v33 = v38;
    _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v37, "[%.*hhx-%{public}s] Got capabilities during auth: %s.", (uint8_t *)v15, 0x1Fu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10044B0DC((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v12 = v39;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    sub_10044B0DC((uint64_t)v6, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10044B0DC((uint64_t)v8, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  }
  uint64_t v34 = *(int *)(v12 + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v34) = v11;
  return result;
}

double sub_100449CB0@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  *(void *)&long long v66 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v10 = __chkstk_darwin(v66);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v65 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = type metadata accessor for AuthenticationTask();
  sub_10044B074((uint64_t)v5 + *(int *)(v18 + 20), (uint64_t)v17, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  a3 &= 1u;
  sub_10044B198(a1, a2, a3);
  uint64_t v19 = sub_1004444C0(a1, a2, a3);
  *(void *)&long long v69 = v5;
  uint64_t v20 = v19;
  unint64_t v22 = v21;
  *(void *)&long long v68 = v15;
  *(void *)&long long v67 = v17;
  sub_10044B324(v19, v21, (uint64_t)v17);
  sub_1000094D4(v20, v22);
  uint64_t v35 = v5[5];
  unint64_t v36 = v5[6];
  uint64_t v52 = (v36 >> 60) & 3;
  if (!v52)
  {
    *(_OWORD *)(v5 + 5) = xmmword_100625730;
    sub_10044B0DC(v67, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10013E020((uint64_t)&v70);
    sub_10001FDF0((uint64_t)&v70, (uint64_t)v89, &qword_100715828);
    char v37 = 1;
    goto LABEL_7;
  }
  uint64_t v30 = v67;
  if (v52 == 1)
  {
    uint64_t v53 = v5[5];
  }
  else
  {
    if (__PAIR128__(v36 - 0x2000000000000000, v35) >= 3)
    {
      uint64_t v55 = v68;
      sub_10044B074(v67, v68, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v56 = sub_1005E0EB0();
      os_log_type_t v57 = sub_1005E25B0();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = v55;
        uint64_t v59 = swift_slowAlloc();
        *(void *)&long long v70 = swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = 68158210;
        LODWORD(v89[0]) = 2;
        sub_1005E2960();
        *(_WORD *)(v59 + 8) = 256;
        uint64_t v60 = v58 + *(int *)(v66 + 20);
        LOBYTE(v89[0]) = *(unsigned char *)v60;
        sub_1005E2960();
        *(_WORD *)(v59 + 11) = 2082;
        uint64_t v61 = ConnectionID.debugDescription.getter(*(unsigned int *)(v60 + 4));
        v89[0] = sub_100481E54(v61, v62, (uint64_t *)&v70);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_10044B0DC(v68, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "[%.*hhx-%{public}s] Authentication plugin failed generating response", (uint8_t *)v59, 0x15u);
        swift_arrayDestroy();
        uint64_t v5 = (void *)v69;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10044B0DC(v55, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      }

      uint64_t v63 = v5[3];
      uint64_t v64 = v5[4];
      sub_10003BCDC(v5, v63);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v64 + 8))(&v83, v63, v64);
      long long v68 = v84;
      long long v69 = v83;
      long long v65 = v86;
      long long v66 = v85;
      uint64_t v33 = v87;
      uint64_t v34 = v88;
      sub_10044B0DC(v67, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      long long v74 = v69;
      long long v75 = v68;
      long long v76 = v66;
      goto LABEL_6;
    }
    sub_100443A80();
    uint64_t v53 = swift_allocError();
    *(void *)uint64_t v54 = v35;
    *(void *)(v54 + 8) = v36;
    *(unsigned char *)(v54 + 16) = 0;
  }
  sub_10044461C(v35, v36);
  *(void *)&long long v68 = v53;
  swift_willThrow();
  sub_10044B074(v30, (uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  char v23 = sub_1005E0EB0();
  os_log_type_t v24 = sub_1005E25A0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(void *)&long long v67 = v30;
    *(void *)&long long v70 = v26;
    *(_DWORD *)uint64_t v25 = 68158210;
    LODWORD(v89[0]) = 2;
    sub_1005E2960();
    *(_WORD *)(v25 + 8) = 256;
    unint64_t v27 = &v12[*(int *)(v66 + 20)];
    LOBYTE(v89[0]) = *v27;
    sub_1005E2960();
    *(_WORD *)(v25 + 11) = 2082;
    uint64_t v28 = ConnectionID.debugDescription.getter(*((unsigned int *)v27 + 1));
    v89[0] = sub_100481E54(v28, v29, (uint64_t *)&v70);
    sub_1005E2960();
    swift_bridgeObjectRelease();
    sub_10044B0DC((uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%.*hhx-%{public}s] Caught error processing Handshake query", (uint8_t *)v25, 0x15u);
    swift_arrayDestroy();
    uint64_t v30 = v67;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10044B0DC((uint64_t)v12, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  }

  uint64_t v31 = *(void *)(v69 + 24);
  uint64_t v32 = *(void *)(v69 + 32);
  sub_10003BCDC((void *)v69, v31);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v83, v31, v32);
  long long v69 = v83;
  long long v66 = v85;
  long long v67 = v84;
  long long v65 = v86;
  uint64_t v33 = v87;
  uint64_t v34 = v88;
  swift_errorRelease();
  sub_10044B0DC(v30, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  long long v74 = v69;
  long long v75 = v67;
  long long v76 = v66;
LABEL_6:
  long long v77 = v65;
  uint64_t v78 = v33;
  uint64_t v79 = v34;
  uint64_t v81 = 0;
  uint64_t v82 = 0;
  uint64_t v80 = 0;
  sub_10044AEF8((uint64_t)&v74);
  sub_10044AF04((uint64_t)&v74, (uint64_t)&v70);
  UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)&v70);
  sub_10001FDF0((uint64_t)&v70, (uint64_t)v89, &qword_100715828);
  uint64_t v35 = 0;
  unint64_t v36 = 0;
  char v37 = -1;
LABEL_7:
  *(void *)&long long v70 = v35;
  *((void *)&v70 + 1) = v36;
  char v71 = v37;
  sub_10001FDF0((uint64_t)v89, (uint64_t)v72, &qword_100715828);
  char v38 = v71;
  char v39 = v73;
  double result = *(double *)&v70;
  long long v41 = v72[0];
  long long v42 = v72[1];
  long long v43 = v72[2];
  long long v44 = v72[3];
  long long v45 = v72[4];
  long long v46 = v72[5];
  long long v47 = v72[6];
  long long v48 = v72[7];
  long long v49 = v72[8];
  long long v50 = v72[9];
  long long v51 = v72[10];
  *(_OWORD *)a4 = v70;
  *(unsigned char *)(a4 + 16) = v38;
  *(_OWORD *)(a4 + 24) = v41;
  *(_OWORD *)(a4 + 40) = v42;
  *(_OWORD *)(a4 + 56) = v43;
  *(_OWORD *)(a4 + 72) = v44;
  *(_OWORD *)(a4 + 88) = v45;
  *(_OWORD *)(a4 + 104) = v46;
  *(_OWORD *)(a4 + 120) = v47;
  *(_OWORD *)(a4 + 136) = v48;
  *(_OWORD *)(a4 + 152) = v49;
  *(_OWORD *)(a4 + 168) = v50;
  *(_OWORD *)(a4 + 184) = v51;
  *(unsigned char *)(a4 + 200) = v39;
  return result;
}

uint64_t sub_10044A488@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v53 = a5;
  int v9 = a4;
  uint64_t v10 = type metadata accessor for AuthenticationTask();
  __chkstk_darwin();
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  *(void *)&long long v52 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v45 - v15;
  sub_10044B074((uint64_t)v5 + *(int *)(v10 + 20), (uint64_t)&v45 - v15, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  if (v9)
  {
    sub_10044AE60(a1);
    swift_bridgeObjectRetain();
    uint64_t v17 = a3;
    uint64_t v18 = v5[3];
    uint64_t v19 = v5[4];
    sub_10003BCDC(v5, v18);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v19 + 8))(v68, v18, v19);
    long long v51 = v68[1];
    long long v52 = v68[0];
    long long v49 = v69;
    long long v50 = v68[2];
    uint64_t v20 = v70;
    unint64_t v21 = v71;
    sub_10044B0DC((uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    long long v54 = v52;
    long long v55 = v51;
    long long v56 = v50;
    long long v57 = v49;
    uint64_t v58 = v20;
    unint64_t v59 = v21;
    unint64_t v60 = a1;
    uint64_t v61 = a2;
    uint64_t v62 = v17;
    sub_10044AEF8((uint64_t)&v54);
    sub_10044AF04((uint64_t)&v54, (uint64_t)v63);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v63);
  }
  else
  {
    *(void *)&long long v50 = v10;
    *(void *)&long long v51 = a2;
    sub_10044B074((uint64_t)v16, v52, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_10044AE60(a1);
    swift_bridgeObjectRetain();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    unint64_t v22 = v5;
    sub_10044B074((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    char v23 = sub_1005E0EB0();
    int v24 = sub_1005E25C0();
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      int v46 = v24;
      os_log_t v47 = v23;
      uint64_t v48 = a3;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      v63[0] = v45;
      *(_DWORD *)uint64_t v25 = 68158466;
      LODWORD(v72) = 2;
      *(void *)&long long v49 = v12;
      sub_1005E2960();
      *(_WORD *)(v25 + 8) = 256;
      uint64_t v26 = *(int *)(v13 + 20);
      uint64_t v27 = v52;
      uint64_t v28 = v52 + v26;
      LOBYTE(v72) = *(unsigned char *)(v52 + v26);
      sub_1005E2960();
      *(_WORD *)(v25 + 11) = 2082;
      uint64_t v29 = ConnectionID.debugDescription.getter(*(unsigned int *)(v28 + 4));
      uint64_t v72 = sub_100481E54(v29, v30, v63);
      uint64_t v31 = (void *)v49;
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10044B0DC(v27, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      *(_WORD *)(v25 + 21) = 2082;
      uint64_t v32 = v31[3];
      uint64_t v33 = v31[4];
      sub_10003BCDC(v31, v32);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v33 + 8))(v64, v32, v33);
      sub_10044AF60((uint64_t)v64, (uint64_t)v65);
      uint64_t v34 = v66;
      v66 &= ~0x1000000000000000uLL;
      if ((v34 & 0x1000000000000000) != 0)
      {
        sub_100443AD4((uint64_t)v65, (uint64_t)v67);
        uint64_t v72 = 0x204C534153;
        unint64_t v73 = 0xE500000000000000;
        sub_100443AD4((uint64_t)v67, (uint64_t)v68);
        uint64_t v38 = v50;
        switch((v71 >> 59) & 6 | ((*((void *)&v69 + 1) & 0x2000000000000000) != 0))
        {
          case 1uLL:
            *((void *)&v69 + 1) &= ~0x2000000000000000uLL;
            v71 &= 0xCFFFFFFFFFFFFFFFLL;
            if (qword_1007155F0 != -1) {
              swift_once();
            }
            char v39 = &qword_1007621B0;
            break;
          case 2uLL:
            *((void *)&v69 + 1) &= ~0x2000000000000000uLL;
            v71 &= 0xCFFFFFFFFFFFFFFFLL;
            if (qword_1007155F8 != -1) {
              swift_once();
            }
            char v39 = &qword_1007621C0;
            break;
          case 3uLL:
            *((void *)&v69 + 1) &= ~0x2000000000000000uLL;
            v71 &= 0xCFFFFFFFFFFFFFFFLL;
            if (qword_100715608 != -1) {
              swift_once();
            }
            char v39 = &qword_1007621E0;
            break;
          case 4uLL:
            *((void *)&v69 + 1) &= ~0x2000000000000000uLL;
            v71 &= 0xCFFFFFFFFFFFFFFFLL;
            if (qword_100715610 != -1) {
              swift_once();
            }
            char v39 = &qword_1007621F0;
            break;
          case 5uLL:
          case 6uLL:
            *((void *)&v69 + 1) &= ~0x2000000000000000uLL;
            v71 &= 0xCFFFFFFFFFFFFFFFLL;
            if (qword_100715600 != -1) {
              swift_once();
            }
            char v39 = &qword_1007621D0;
            break;
          default:
            *((void *)&v69 + 1) &= ~0x2000000000000000uLL;
            v71 &= 0xCFFFFFFFFFFFFFFFLL;
            char v39 = (uint64_t *)AuthenticationMechanism.plain.unsafeMutableAddressor();
            break;
        }
        uint64_t v41 = *v39;
        uint64_t v40 = (void *)v39[1];
        swift_bridgeObjectRetain();
        v74._uint64_t countAndFlagsBits = v41;
        v74._object = v40;
        sub_1005E1E30(v74);
        swift_bridgeObjectRelease();
        sub_10044AFBC((uint64_t)v64);
        uint64_t v36 = v72;
        unint64_t v35 = v73;
        uint64_t v37 = v51;
      }
      else
      {
        sub_10044AFBC((uint64_t)v64);
        unint64_t v35 = 0xE500000000000000;
        uint64_t v36 = 0x4E49474F4CLL;
        uint64_t v37 = v51;
        uint64_t v38 = v50;
      }
      uint64_t v72 = sub_100481E54(v36, v35, v63);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_10044B0DC(v49, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
      os_log_t v42 = v47;
      _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v46, "[%.*hhx-%{public}s] Authenticated with '%{public}s'.", (uint8_t *)v25, 0x1Fu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10044B0DC((uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      a3 = v48;
    }
    else
    {

      sub_10044B0DC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
      sub_10044B0DC(v52, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      sub_10044B0DC((uint64_t)v16, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      uint64_t v37 = v51;
      uint64_t v38 = v50;
    }
    uint64_t v43 = *(void *)((char *)v22 + *(int *)(v38 + 28));
    *(void *)&long long v54 = a1;
    *((void *)&v54 + 1) = v37;
    *(void *)&long long v55 = a3;
    *((void *)&v55 + 1) = v43;
    sub_1002E18C8((uint64_t)&v54);
    sub_10044AF04((uint64_t)&v54, (uint64_t)v63);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v63);
    swift_bridgeObjectRetain();
  }
  sub_10001FDF0((uint64_t)v63, (uint64_t)&v72, &qword_100715828);
  return sub_10001FDF0((uint64_t)&v72, v53, &qword_100715828);
}

uint64_t sub_10044AC60(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_10044AC6C@<X0>(uint64_t a1@<X8>)
{
  sub_1004490E0(v3);
  return sub_10001FDF0((uint64_t)v3, a1, &qword_100715770);
}

uint64_t sub_10044ACB4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  sub_10044A488(a1, a2, a3, a4, (uint64_t)v7);
  return sub_10001FDF0((uint64_t)v7, a5, &qword_100715828);
}

uint64_t sub_10044ACF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin();
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)__chkstk_darwin();
  uint64_t v10 = (char *)&v17 - v9;
  char v12 = sub_10044BACC(v8, v11);
  sub_10044B074(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  sub_10044B074(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  if (v12)
  {
    char v13 = v10[*(int *)(a3 + 24)];
    sub_10044B0DC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    char v14 = v7[*(int *)(a3 + 24)];
    sub_10044B0DC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    char v15 = v13 ^ v14 ^ 1;
  }
  else
  {
    sub_10044B0DC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    sub_10044B0DC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    char v15 = 0;
  }
  return v15 & 1;
}

unint64_t sub_10044AE60(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_10044AE74(result);
  }
  return result;
}

unint64_t sub_10044AE74(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
      double result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10044AEF8(uint64_t result)
{
  *(unsigned char *)(result + 176) = 2;
  return result;
}

uint64_t sub_10044AF04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10044AF60(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10044AFBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10044B008(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if ((a8 & 0x1000000000000000) != 0)
  {
    unint64_t v11 = a8 & 0xEFFFFFFFFFFFFFFFLL;
    return sub_1004434DC(a1, a2, a3, a4, a5, a6, a7, v11, a9, a10);
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10044B074(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10044B0DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10044B13C()
{
  unint64_t result = qword_100715748;
  if (!qword_100715748)
  {
    sub_10000744C(&qword_100715740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715748);
  }
  return result;
}

uint64_t sub_10044B198(uint64_t a1, unint64_t a2, char a3)
{
  if (a3) {
    return sub_100008D24(a1, a2);
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10044B1AC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x10044B304);
      }
      uint64_t v8 = HIDWORD(a1) - (int)a1;
LABEL_6:
      sub_100008D24(a1, a2);
LABEL_7:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v11) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_21;
          }
          uint64_t v11 = (int)v11;
LABEL_12:
          if (v8 == v11)
          {
            if (v8 < 1)
            {
LABEL_17:
              char v15 = 1;
            }
            else
            {
              sub_100008D24(a3, a4);
              char v15 = sub_10044B7E4(a1, a2, a3, a4);
            }
          }
          else
          {
LABEL_16:
            char v15 = 0;
          }
          sub_1000094D4(a1, a2);
          return v15 & 1;
        case 2uLL:
          uint64_t v13 = *(void *)(a3 + 16);
          uint64_t v12 = *(void *)(a3 + 24);
          BOOL v14 = __OFSUB__(v12, v13);
          uint64_t v11 = v12 - v13;
          if (!v14) {
            goto LABEL_12;
          }
          goto LABEL_22;
        case 3uLL:
          if (v8) {
            goto LABEL_16;
          }
          goto LABEL_17;
        default:
          uint64_t v11 = BYTE6(a4);
          goto LABEL_12;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      uint64_t v8 = v9 - v10;
      if (!__OFSUB__(v9, v10)) {
        goto LABEL_6;
      }
      goto LABEL_20;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_7;
  }
}

uint64_t sub_10044B324(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v6 = v3[5];
  unint64_t v7 = v3[6];
  uint64_t v8 = (v7 >> 60) & 3;
  if (v8)
  {
    if (v8 == 1)
    {
      swift_errorRetain();
    }
    else
    {
      uint64_t v9 = v4;
      switch(v6)
      {
        case 1:
          switch(a2 >> 62)
          {
            case 1uLL:
              uint64_t v15 = (int)a1;
              uint64_t v16 = a1 >> 32;
              break;
            case 2uLL:
              uint64_t v15 = *(void *)(a1 + 16);
              uint64_t v16 = *(void *)(a1 + 24);
              break;
            case 3uLL:
              goto LABEL_15;
            default:
              if ((a2 & 0xFF000000000000) == 0) {
                goto LABEL_15;
              }
              goto LABEL_13;
          }
          if (v15 != v16) {
            goto LABEL_13;
          }
          goto LABEL_15;
        case 2:
LABEL_13:
          uint64_t v17 = v5[3];
          uint64_t v18 = v5[4];
          sub_100057374((uint64_t)v5, v17);
          (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v18 + 32))(a1, a2, a3, v17, v18);
          if (v4)
          {
            _OWORD v5[5] = v4;
            v5[6] = 0x1000000000000000;
            swift_errorRetain();
            return swift_willThrow();
          }
LABEL_15:
          uint64_t v19 = v5[3];
          uint64_t v20 = v5[4];
          sub_100057374((uint64_t)v5, v19);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
          if (v4) {
            goto LABEL_18;
          }
          if (v21 >> 60 != 15)
          {
            _OWORD v5[5] = result;
            v5[6] = v21;
            return result;
          }
          sub_10044CBFC();
          uint64_t v9 = swift_allocError();
          swift_willThrow();
LABEL_18:
          uint64_t v22 = v5[5];
          unint64_t v23 = v5[6];
          swift_errorRetain();
          sub_100444674(v22, v23);
          _OWORD v5[5] = v9;
          v5[6] = 0x1000000000000000;
          break;
        default:
          goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_100443A80();
    swift_allocError();
    *(void *)uint64_t v13 = v6;
    *(void *)(v13 + 8) = v7;
    *(unsigned char *)(v13 + 16) = 0;
    sub_10044461C(v6, v7);
  }
  return swift_willThrow();
}

uint64_t sub_10044B558(uint64_t a1, uint64_t a2)
{
  return sub_10044CA94(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_10044B570@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  unint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100008D24(a2, a3);
      uint64_t v10 = (char *)sub_1005E0550();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1005E0580();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1005E0570();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10044B7D4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1000094D4(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1005E0550();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1005E0580();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1005E0570();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_10044B7E4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_100008D24(a1, a2);
      char v5 = sub_10044BA14((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1000094D4(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_10044BA14(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1000094D4(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_10044B570((uint64_t)__s1, a3, a4, &v14);
      sub_1000094D4(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_10044BA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1005E0550();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1005E0570();
  sub_10044B570(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_10044BACC(void *a1, void *a2)
{
  uint64_t v4 = a1[5];
  unint64_t v5 = a1[6];
  uint64_t v7 = a2[5];
  unint64_t v6 = a2[6];
  uint64_t v8 = (v5 >> 60) & 3;
  if (v8)
  {
    if (v8 != 1)
    {
      switch(v4)
      {
        case 1:
          if ((v6 & 0x3000000000000000) != 0x2000000000000000) {
            goto LABEL_46;
          }
          if (v7 != 1 || v6 != 0x2000000000000000) {
            goto LABEL_46;
          }
          goto LABEL_33;
        case 2:
          if ((v6 & 0x3000000000000000) != 0x2000000000000000) {
            goto LABEL_46;
          }
          if (v7 != 2 || v6 != 0x2000000000000000) {
            goto LABEL_46;
          }
          goto LABEL_33;
        case 3:
          if ((v6 & 0x3000000000000000) != 0x2000000000000000) {
            goto LABEL_46;
          }
          if (v7 != 3 || v6 != 0x2000000000000000) {
            goto LABEL_46;
          }
          goto LABEL_33;
        default:
          if ((v6 & 0x3000000000000000) != 0x2000000000000000) {
            goto LABEL_46;
          }
          char v10 = 0;
          if (v7 || v6 != 0x2000000000000000) {
            return v10 & 1;
          }
          goto LABEL_33;
      }
    }
    if ((v6 & 0x3000000000000000) != 0x1000000000000000) {
      goto LABEL_46;
    }
  }
  else
  {
    if ((v6 & 0x3000000000000000) != 0) {
      goto LABEL_46;
    }
    sub_10044461C(a1[5], v5);
    sub_10044461C(v7, v6);
    char v9 = sub_10044B1AC(v4, v5, v7, v6);
    sub_100444674(v7, v6);
    sub_100444674(v4, v5);
    if ((v9 & 1) == 0) {
      goto LABEL_46;
    }
  }
LABEL_33:
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_10003BCDC(a1, v14);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8))(v129, v14, v15);
  unint64_t v84 = v129[1];
  uint64_t v86 = v129[0];
  unint64_t v81 = v129[3];
  uint64_t v82 = v129[2];
  uint64_t v79 = v129[4];
  unint64_t v16 = v129[5];
  uint64_t v17 = v129[6];
  uint64_t v18 = v129[7];
  uint64_t v19 = v129[8];
  unint64_t v20 = v129[9];
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[4];
  sub_10003BCDC(a2, v21);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v22 + 8))(v130, v21, v22);
  sub_10044AF60((uint64_t)v129, (uint64_t)v134);
  uint64_t v23 = v135;
  v135 &= ~0x1000000000000000uLL;
  if ((v23 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)v134, (uint64_t)v136);
    sub_10044AF60((uint64_t)v130, (uint64_t)v131);
    uint64_t v31 = v132;
    v132 &= ~0x1000000000000000uLL;
    if ((v31 & 0x1000000000000000) != 0)
    {
      sub_100443AD4((uint64_t)v131, (uint64_t)v133);
      sub_100443318(v86, v84, v82, v81, v79, v16, v17, v18 & 0xEFFFFFFFFFFFFFFFLL, v19, v20);
      char v32 = sub_100455D6C((uint64_t)v136, (uint64_t)v133);
      sub_10044AFBC((uint64_t)v129);
      sub_10044AFBC((uint64_t)v130);
      sub_10044AFBC((uint64_t)v129);
      if ((v32 & 1) == 0) {
        goto LABEL_46;
      }
      goto LABEL_49;
    }
LABEL_45:
    sub_10044AFBC((uint64_t)v130);
    sub_10044AFBC((uint64_t)v129);
    goto LABEL_46;
  }
  uint64_t v24 = v134[0];
  uint64_t v25 = v134[1];
  uint64_t v26 = v134[2];
  uint64_t v27 = v134[3];
  sub_10044AF60((uint64_t)v130, (uint64_t)v136);
  uint64_t v28 = v137;
  v137 &= ~0x1000000000000000uLL;
  if ((v28 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)v136, (uint64_t)&v117);
    goto LABEL_45;
  }
  uint64_t v29 = v136[2];
  uint64_t v30 = v136[3];
  if ((v24 != v136[0] || v25 != v136[1]) && (sub_1005E3290() & 1) == 0) {
    goto LABEL_45;
  }
  if (v26 == v29 && v27 == v30)
  {
    sub_10044AFBC((uint64_t)v130);
    sub_10044AFBC((uint64_t)v129);
  }
  else
  {
    char v34 = sub_1005E3290();
    sub_10044AFBC((uint64_t)v130);
    sub_10044AFBC((uint64_t)v129);
    char v10 = 0;
    if ((v34 & 1) == 0) {
      return v10 & 1;
    }
  }
LABEL_49:
  sub_100021C34((uint64_t)a1, (uint64_t)v127);
  sub_100021C34((uint64_t)a2, (uint64_t)v128);
  sub_10000566C(&qword_100715830);
  if (swift_dynamicCast())
  {
    long long v113 = v123;
    long long v114 = v124;
    long long v115 = v125;
    char v116 = v126;
    unsigned long long v109 = v119;
    unsigned long long v110 = v120;
    unsigned long long v111 = v121;
    long long v112 = v122;
    long long v107 = v117;
    long long v108 = v118;
    if (swift_dynamicCast())
    {
      long long v93 = v103;
      long long v94 = v104;
      long long v95 = v105;
      char v96 = v106;
      unsigned long long v89 = v99;
      unsigned long long v90 = v100;
      unsigned long long v91 = v101;
      long long v92 = v102;
      long long v87 = v97;
      long long v88 = v98;
      uint64_t v36 = *((void *)&v108 + 1);
      uint64_t v35 = v108;
      uint64_t v37 = *((void *)&v98 + 1);
      if ((*((void *)&v110 + 1) & 0x1000000000000000) != 0)
      {
        v142[0] = v107;
        v142[1] = v108;
        v142[2] = v109;
        uint64_t v143 = v110;
        unint64_t v144 = *((void *)&v110 + 1) & 0xEFFFFFFFFFFFFFFFLL;
        unsigned long long v145 = v111;
        if ((*((void *)&v90 + 1) & 0x1000000000000000) == 0)
        {
          char v10 = 0;
LABEL_82:
          sub_10044C868((uint64_t)&v87);
          sub_10044C868((uint64_t)&v107);
          goto LABEL_83;
        }
        v146[0] = v97;
        v146[1] = v98;
        v146[2] = v89;
        uint64_t v147 = v90;
        unint64_t v148 = *((void *)&v100 + 1) & 0xEFFFFFFFFFFFFFFFLL;
        unsigned long long v149 = v91;
        sub_10044CA28(v107, *((unint64_t *)&v107 + 1), v108, *((unint64_t *)&v108 + 1), v109, *((unint64_t *)&v109 + 1), v110, *((uint64_t *)&v110 + 1), v111, *((unint64_t *)&v111 + 1));
        sub_10044CA28(v97, *((unint64_t *)&v97 + 1), v98, *((unint64_t *)&v98 + 1), v89, *((unint64_t *)&v89 + 1), v90, *((uint64_t *)&v100 + 1), v91, *((unint64_t *)&v91 + 1));
        char v72 = sub_100455D6C((uint64_t)v142, (uint64_t)v146);
        sub_10044B008(v97, *((unint64_t *)&v97 + 1), v98, *((unint64_t *)&v98 + 1), v89, *((unint64_t *)&v89 + 1), v90, *((uint64_t *)&v100 + 1), v91, *((unint64_t *)&v91 + 1));
        sub_10044B008(v107, *((unint64_t *)&v107 + 1), v108, *((unint64_t *)&v108 + 1), v109, *((unint64_t *)&v109 + 1), v110, *((uint64_t *)&v110 + 1), v111, *((unint64_t *)&v111 + 1));
        if (v72)
        {
LABEL_80:
          v138[0] = v112;
          v138[1] = v113;
          v138[2] = v114;
          v138[3] = v115;
          char v139 = v116;
          v140[0] = v92;
          v140[1] = v93;
          v140[2] = v94;
          v140[3] = v95;
          char v141 = v96;
          char v10 = sub_1004E9C3C((uint64_t)v138, (uint64_t)v140);
          goto LABEL_82;
        }
      }
      else if ((*((void *)&v90 + 1) & 0x1000000000000000) == 0)
      {
        if (v107 != v87)
        {
          char v38 = sub_1005E3290();
          uint64_t v37 = *((void *)&v98 + 1);
          uint64_t v36 = *((void *)&v108 + 1);
          uint64_t v35 = v108;
          char v10 = 0;
          if ((v38 & 1) == 0) {
            goto LABEL_82;
          }
        }
        if (v35 != (void)v98 || v36 != v37)
        {
          char v10 = 0;
          if ((sub_1005E3290() & 1) == 0) {
            goto LABEL_82;
          }
        }
        goto LABEL_80;
      }
      char v10 = 0;
      goto LABEL_82;
    }
    sub_10044C868((uint64_t)&v107);
  }
  if (swift_dynamicCast())
  {
    long long v85 = v117;
    long long v39 = v118;
    unint64_t v40 = *((void *)&v119 + 1);
    uint64_t v41 = v119;
    uint64_t v43 = *((void *)&v120 + 1);
    uint64_t v42 = v120;
    unint64_t v44 = *((void *)&v121 + 1);
    uint64_t v83 = v121;
    unint64_t v80 = *((void *)&v122 + 1);
    uint64_t v45 = v122;
    if (swift_dynamicCast())
    {
      uint64_t v77 = v45;
      uint64_t v46 = v41;
      unint64_t v47 = *((void *)&v109 + 1);
      uint64_t v49 = *((void *)&v110 + 1);
      uint64_t v48 = v110;
      uint64_t v50 = v111;
      uint64_t v51 = v43;
      unint64_t v52 = *((void *)&v111 + 1);
      uint64_t v70 = v112;
      long long v71 = v39;
      unint64_t v78 = *((void *)&v112 + 1);
      long long v87 = v85;
      long long v88 = v39;
      uint64_t v73 = v46;
      unsigned long long v89 = __PAIR128__(v40, v46);
      unint64_t v74 = v40;
      uint64_t v75 = v42;
      unsigned long long v90 = __PAIR128__(v51, v42);
      uint64_t v76 = v51;
      unsigned long long v91 = __PAIR128__(v44, v83);
      uint64_t v53 = v107;
      long long v97 = v107;
      unint64_t v54 = *((void *)&v107 + 1);
      uint64_t v55 = v108;
      long long v98 = v108;
      unint64_t v56 = *((void *)&v108 + 1);
      uint64_t v69 = v109;
      unsigned long long v99 = v109;
      unsigned long long v100 = v110;
      unsigned long long v101 = v111;
      if (sub_100455D6C((uint64_t)&v87, (uint64_t)&v97))
      {
        unint64_t v67 = v44;
        if (v80 >> 60 == 15)
        {
          sub_1004434DC(v53, v54, v55, v56, v69, v47, v48, v49, v50, v52);
          sub_100057EFC(v70, v78);
          sub_1004434DC(v85, *((unint64_t *)&v85 + 1), v39, *((unint64_t *)&v39 + 1), v73, v74, v75, v76, v83, v44);
          sub_100057EFC(v77, v80);
          if (v78 >> 60 == 15) {
            goto LABEL_89;
          }
          goto LABEL_74;
        }
        if (v78 >> 60 != 15)
        {
          sub_100057EE8(v77, v80);
          sub_100057EE8(v70, v78);
          char v65 = sub_10044B1AC(v77, v80, v70, v78);
          sub_100057EFC(v70, v78);
          sub_100057EFC(v77, v80);
          sub_1004434DC(v53, v54, v55, v56, v69, v47, v48, v49, v50, v52);
          sub_100057EFC(v70, v78);
          sub_1004434DC(v85, *((unint64_t *)&v85 + 1), v39, *((unint64_t *)&v39 + 1), v73, v74, v75, v76, v83, v67);
          sub_100057EFC(v77, v80);
          if (v65)
          {
LABEL_89:
            char v10 = 1;
            goto LABEL_83;
          }
LABEL_74:
          char v10 = 0;
LABEL_83:
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v128);
          _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v127);
          return v10 & 1;
        }
      }
LABEL_73:
      sub_1004434DC(v53, v54, v55, v56, v69, v47, v48, v49, v50, v52);
      sub_100057EFC(v70, v78);
      sub_1004434DC(v85, *((unint64_t *)&v85 + 1), v71, *((unint64_t *)&v71 + 1), v73, v74, v75, v76, v83, v44);
      sub_100057EFC(v77, v80);
      goto LABEL_74;
    }
    sub_1004434DC(v85, *((unint64_t *)&v85 + 1), v39, *((unint64_t *)&v39 + 1), v41, v40, v42, v43, v83, v44);
    sub_100057EFC(v45, v80);
  }
  if (swift_dynamicCast())
  {
    long long v85 = v117;
    long long v57 = v118;
    unint64_t v58 = *((void *)&v119 + 1);
    uint64_t v59 = v119;
    uint64_t v61 = *((void *)&v120 + 1);
    uint64_t v60 = v120;
    unint64_t v44 = *((void *)&v121 + 1);
    uint64_t v83 = v121;
    unint64_t v80 = *((void *)&v122 + 1);
    uint64_t v62 = v122;
    if (swift_dynamicCast())
    {
      uint64_t v77 = v62;
      uint64_t v63 = v59;
      unint64_t v47 = *((void *)&v109 + 1);
      uint64_t v49 = *((void *)&v110 + 1);
      uint64_t v48 = v110;
      uint64_t v50 = v111;
      uint64_t v64 = v61;
      unint64_t v52 = *((void *)&v111 + 1);
      uint64_t v70 = v112;
      long long v71 = v57;
      unint64_t v78 = *((void *)&v112 + 1);
      long long v87 = v85;
      long long v88 = v57;
      uint64_t v73 = v63;
      unsigned long long v89 = __PAIR128__(v58, v63);
      unint64_t v74 = v58;
      uint64_t v75 = v60;
      unsigned long long v90 = __PAIR128__(v64, v60);
      uint64_t v76 = v64;
      unsigned long long v91 = __PAIR128__(v44, v83);
      uint64_t v53 = v107;
      long long v97 = v107;
      unint64_t v54 = *((void *)&v107 + 1);
      uint64_t v55 = v108;
      long long v98 = v108;
      unint64_t v56 = *((void *)&v108 + 1);
      uint64_t v69 = v109;
      unsigned long long v99 = v109;
      unsigned long long v100 = v110;
      unsigned long long v101 = v111;
      if ((sub_100455D6C((uint64_t)&v87, (uint64_t)&v97) & 1) == 0) {
        goto LABEL_73;
      }
      unint64_t v68 = v44;
      if (v80 >> 60 == 15)
      {
        sub_1004434DC(v53, v54, v55, v56, v69, v47, v48, v49, v50, v52);
        sub_100057EFC(v70, v78);
        sub_1004434DC(v85, *((unint64_t *)&v85 + 1), v57, *((unint64_t *)&v57 + 1), v73, v74, v75, v76, v83, v44);
        sub_100057EFC(v77, v80);
        if (v78 >> 60 == 15) {
          goto LABEL_91;
        }
      }
      else if (v78 >> 60 == 15)
      {
        sub_1004434DC(v53, v54, v55, v56, v69, v47, v48, v49, v50, v52);
        sub_100057EFC(v70, v78);
        sub_1004434DC(v85, *((unint64_t *)&v85 + 1), v57, *((unint64_t *)&v57 + 1), v73, v74, v75, v76, v83, v44);
        sub_100057EFC(v77, v80);
      }
      else
      {
        sub_100057EE8(v77, v80);
        sub_100057EE8(v70, v78);
        char v66 = sub_10044B1AC(v77, v80, v70, v78);
        sub_100057EFC(v70, v78);
        sub_100057EFC(v77, v80);
        sub_1004434DC(v53, v54, v55, v56, v69, v47, v48, v49, v50, v52);
        sub_100057EFC(v70, v78);
        sub_1004434DC(v85, *((unint64_t *)&v85 + 1), v57, *((unint64_t *)&v57 + 1), v73, v74, v75, v76, v83, v68);
        sub_100057EFC(v77, v80);
        if (v66)
        {
LABEL_91:
          char v10 = 1;
          goto LABEL_83;
        }
      }
      char v10 = 0;
      goto LABEL_83;
    }
    sub_1004434DC(v85, *((unint64_t *)&v85 + 1), v57, *((unint64_t *)&v57 + 1), v59, v58, v60, v61, v83, v44);
    sub_100057EFC(v62, v80);
  }
  sub_10044C808((uint64_t)v127);
LABEL_46:
  char v10 = 0;
  return v10 & 1;
}

uint64_t sub_10044C808(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100715838);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10044C868(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 128);
  uint64_t v9 = *(void *)(a1 + 136);
  char v10 = *(unsigned char *)(a1 + 144);
  sub_10044B008(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72));
  sub_10044C910(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_10044C910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2:
      swift_release();
      swift_release();
LABEL_5:
      uint64_t result = swift_release();
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10044CA28(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if ((a8 & 0x1000000000000000) != 0)
  {
    unint64_t v11 = a8 & 0xEFFFFFFFFFFFFFFFLL;
    return sub_100443318(a1, a2, a3, a4, a5, a6, a7, v11, a9, a10);
  }
  else
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10044CA94(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = (a2 >> 60) & 3;
  if (v7)
  {
    if (v7 == 1)
    {
      if ((a4 & 0x3000000000000000) == 0x1000000000000000) {
        return 1;
      }
    }
    else
    {
      switch(a1)
      {
        case 1:
          if ((a4 & 0x3000000000000000) != 0x2000000000000000 || a3 != 1) {
            return 0;
          }
          break;
        case 2:
          if ((a4 & 0x3000000000000000) != 0x2000000000000000 || a3 != 2) {
            return 0;
          }
          break;
        case 3:
          if ((a4 & 0x3000000000000000) != 0x2000000000000000 || a3 != 3) {
            return 0;
          }
          break;
        default:
          if ((a4 & 0x3000000000000000) != 0x2000000000000000 || a3) {
            return 0;
          }
          break;
      }
      if (a4 == 0x2000000000000000) {
        return 1;
      }
    }
  }
  else if ((a4 & 0x3000000000000000) == 0)
  {
    sub_10044461C(a1, a2);
    sub_10044461C(a3, a4);
    char v9 = sub_10044B1AC(a1, a2, a3, a4);
    sub_100444674(a3, a4);
    sub_100444674(a1, a2);
    if (v9) {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_10044CBFC()
{
  unint64_t result = qword_100715840;
  if (!qword_100715840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715840);
  }
  return result;
}

ValueMetadata *_s5StateV33ImplementationRequestsSecondQueryVMa()
{
  return &_s5StateV33ImplementationRequestsSecondQueryVN;
}

uint64_t *_s5StateV4StepOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10044461C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t _s5StateV4StepOwxx(uint64_t a1)
{
  return sub_100444674(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s5StateV4StepOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10044461C(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_100444674(v5, v6);
  return a1;
}

uint64_t *_s5StateV4StepOwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100444674(v3, v4);
  return a1;
}

ValueMetadata *_s5StateV4StepOMa()
{
  return &_s5StateV4StepON;
}

uint64_t _s5StateVwxx(uint64_t a1)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  return sub_100444674(v2, v3);
}

uint64_t _s5StateVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v6 = *(void *)(a2 + 40);
  unint64_t v5 = *(void *)(a2 + 48);
  sub_10044461C(v6, v5);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v5;
  return a1;
}

uint64_t *_s5StateVwca(uint64_t *a1, uint64_t *a2)
{
  sub_100022498(a1, a2);
  uint64_t v5 = a2[5];
  unint64_t v4 = a2[6];
  sub_10044461C(v5, v4);
  uint64_t v6 = a1[5];
  unint64_t v7 = a1[6];
  a1[5] = v5;
  a1[6] = v4;
  sub_100444674(v6, v7);
  return a1;
}

__n128 _s5StateVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s5StateVwta(uint64_t a1, uint64_t a2)
{
  _s13IMAP2Behavior4TaskOwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100444674(v5, v6);
  return a1;
}

uint64_t _s5StateVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

uint64_t sub_10044CF50(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    char v10 = (int *)type metadata accessor for AuthenticationTask();
    uint64_t v11 = *((void *)v10 - 1);
    char v12 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_10000566C(&qword_100715848);
      memcpy((void *)v8, (const void *)v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      long long v14 = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 24) = v14;
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))(v8, v9);
      uint64_t v15 = *(void *)(v9 + 40);
      unint64_t v16 = *(void *)(v9 + 48);
      sub_10044461C(v15, v16);
      *(void *)(v8 + 40) = v15;
      *(void *)(v8 + 48) = v16;
      uint64_t v17 = v10[5];
      uint64_t v18 = v8 + v17;
      uint64_t v19 = v9 + v17;
      uint64_t v20 = sub_1005E0ED0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      uint64_t v21 = _s14descr1006B94C1C6LoggerVMa();
      *(void *)(v18 + *(int *)(v21 + 20)) = *(void *)(v19 + *(int *)(v21 + 20));
      *(unsigned char *)(v8 + v10[6]) = *(unsigned char *)(v9 + v10[6]);
      *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
      *(unsigned char *)(v8 + v10[8]) = *(unsigned char *)(v9 + v10[8]);
      uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, int *))(v11 + 56);
      swift_bridgeObjectRetain();
      v22(v8, 0, 1, v10);
    }
  }
  return v5;
}

uint64_t sub_10044D19C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for AuthenticationTask();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    _s13IMAP2Behavior4TaskOwxx_0(v4);
    sub_100444674(*(void *)(v4 + 40), *(void *)(v4 + 48));
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_1005E0ED0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10044D2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = (int *)type metadata accessor for AuthenticationTask();
  uint64_t v9 = *((void *)v8 - 1);
  char v10 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_10000566C(&qword_100715848);
    memcpy((void *)v6, (const void *)v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = *(_OWORD *)(v7 + 24);
    *(_OWORD *)(v6 + 24) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v6, v7);
    uint64_t v13 = *(void *)(v7 + 40);
    unint64_t v14 = *(void *)(v7 + 48);
    sub_10044461C(v13, v14);
    *(void *)(v6 + 40) = v13;
    *(void *)(v6 + 48) = v14;
    uint64_t v15 = v8[5];
    uint64_t v16 = v6 + v15;
    uint64_t v17 = v7 + v15;
    uint64_t v18 = sub_1005E0ED0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = _s14descr1006B94C1C6LoggerVMa();
    *(void *)(v16 + *(int *)(v19 + 20)) = *(void *)(v17 + *(int *)(v19 + 20));
    *(unsigned char *)(v6 + v8[6]) = *(unsigned char *)(v7 + v8[6]);
    *(void *)(v6 + v8[7]) = *(void *)(v7 + v8[7]);
    *(unsigned char *)(v6 + v8[8]) = *(unsigned char *)(v7 + v8[8]);
    uint64_t v20 = *(void (**)(uint64_t, void, uint64_t, int *))(v9 + 56);
    swift_bridgeObjectRetain();
    v20(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_10044D4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (uint64_t *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for AuthenticationTask();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      sub_100022498(v7, v8);
      uint64_t v25 = v8[5];
      unint64_t v26 = v8[6];
      sub_10044461C(v25, v26);
      uint64_t v27 = v7[5];
      unint64_t v28 = v7[6];
      v7[5] = v25;
      v7[6] = v26;
      sub_100444674(v27, v28);
      uint64_t v29 = v9[5];
      uint64_t v30 = (char *)v7 + v29;
      uint64_t v31 = (char *)v8 + v29;
      uint64_t v32 = sub_1005E0ED0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
      uint64_t v33 = *(int *)(_s14descr1006B94C1C6LoggerVMa() + 20);
      char v34 = &v30[v33];
      uint64_t v35 = &v31[v33];
      *char v34 = *v35;
      *((_DWORD *)v34 + 1) = *((_DWORD *)v35 + 1);
      *((unsigned char *)v7 + v9[6]) = *((unsigned char *)v8 + v9[6]);
      *(uint64_t *)((char *)v7 + v9[7]) = *(uint64_t *)((char *)v8 + v9[7]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((unsigned char *)v7 + v9[8]) = *((unsigned char *)v8 + v9[8]);
      return a1;
    }
    sub_100451E54((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v23 = sub_10000566C(&qword_100715848);
    memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  uint64_t v14 = v8[3];
  _OWORD v7[3] = v14;
  _OWORD v7[4] = v8[4];
  (**(void (***)(uint64_t *, uint64_t *))(v14 - 8))(v7, v8);
  uint64_t v15 = v8[5];
  unint64_t v16 = v8[6];
  sub_10044461C(v15, v16);
  v7[5] = v15;
  v7[6] = v16;
  uint64_t v17 = v9[5];
  uint64_t v18 = (char *)v7 + v17;
  uint64_t v19 = (char *)v8 + v17;
  uint64_t v20 = sub_1005E0ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = _s14descr1006B94C1C6LoggerVMa();
  *(void *)&v18[*(int *)(v21 + 20)] = *(void *)&v19[*(int *)(v21 + 20)];
  *((unsigned char *)v7 + v9[6]) = *((unsigned char *)v8 + v9[6]);
  *(uint64_t *)((char *)v7 + v9[7]) = *(uint64_t *)((char *)v8 + v9[7]);
  *((unsigned char *)v7 + v9[8]) = *((unsigned char *)v8 + v9[8]);
  uint64_t v22 = *(void (**)(uint64_t *, void, uint64_t, int *))(v10 + 56);
  swift_bridgeObjectRetain();
  v22(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_10044D7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (_OWORD *)(a1 + v4);
  uint64_t v6 = (_OWORD *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for AuthenticationTask();
  uint64_t v8 = *((void *)v7 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10000566C(&qword_100715848);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    long long v10 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v10;
    uint64_t v5[2] = v6[2];
    *((void *)v5 + 6) = *((void *)v6 + 6);
    uint64_t v11 = v7[5];
    int v12 = (char *)v5 + v11;
    int v13 = (char *)v6 + v11;
    uint64_t v14 = sub_1005E0ED0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = _s14descr1006B94C1C6LoggerVMa();
    *(void *)&v12[*(int *)(v15 + 20)] = *(void *)&v13[*(int *)(v15 + 20)];
    *((unsigned char *)v5 + v7[6]) = *((unsigned char *)v6 + v7[6]);
    *(void *)((char *)v5 + v7[7]) = *(void *)((char *)v6 + v7[7]);
    *((unsigned char *)v5 + v7[8]) = *((unsigned char *)v6 + v7[8]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_10044D978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for AuthenticationTask();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      _s13IMAP2Behavior4TaskOwxx_0(v7);
      long long v22 = *(_OWORD *)(v8 + 16);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *(_OWORD *)(v7 + 16) = v22;
      *(void *)(v7 + 32) = *(void *)(v8 + 32);
      uint64_t v23 = *(void *)(v7 + 40);
      unint64_t v24 = *(void *)(v7 + 48);
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
      sub_100444674(v23, v24);
      uint64_t v25 = v9[5];
      uint64_t v26 = v7 + v25;
      uint64_t v27 = v8 + v25;
      uint64_t v28 = sub_1005E0ED0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
      uint64_t v29 = *(int *)(_s14descr1006B94C1C6LoggerVMa() + 20);
      uint64_t v30 = v26 + v29;
      uint64_t v31 = v27 + v29;
      *(unsigned char *)uint64_t v30 = *(unsigned char *)v31;
      *(_DWORD *)(v30 + 4) = *(_DWORD *)(v31 + 4);
      *(unsigned char *)(v7 + v9[6]) = *(unsigned char *)(v8 + v9[6]);
      *(void *)(v7 + v9[7]) = *(void *)(v8 + v9[7]);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v7 + v9[8]) = *(unsigned char *)(v8 + v9[8]);
      return a1;
    }
    sub_100451E54(v7, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v20 = sub_10000566C(&qword_100715848);
    memcpy((void *)v7, (const void *)v8, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  long long v14 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v14;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  uint64_t v15 = v9[5];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  uint64_t v18 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = _s14descr1006B94C1C6LoggerVMa();
  *(void *)(v16 + *(int *)(v19 + 20)) = *(void *)(v17 + *(int *)(v19 + 20));
  *(unsigned char *)(v7 + v9[6]) = *(unsigned char *)(v8 + v9[6]);
  *(void *)(v7 + v9[7]) = *(void *)(v8 + v9[7]);
  *(unsigned char *)(v7 + v9[8]) = *(unsigned char *)(v8 + v9[8]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_10044DC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10044DC5C);
}

uint64_t sub_10044DC5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000566C(&qword_100715848);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10044DD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044DD24);
}

void *sub_10044DD24(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000566C(&qword_100715848);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Authenticator()
{
  uint64_t result = qword_1007158A8;
  if (!qword_1007158A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10044DE1C()
{
  sub_10044DEC4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10044DEC4()
{
  if (!qword_1007158B8)
  {
    type metadata accessor for AuthenticationTask();
    unint64_t v0 = sub_1005E28C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007158B8);
    }
  }
}

void *sub_10044DF1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v6 = sub_10000566C(&qword_100715848);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Authenticator();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v12 - 8);
  long long v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044E2B4(a2);
  if (v3)
  {
    sub_100451E54(a2, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    return sub_100451EB4(a1);
  }
  else
  {
    uint64_t v29 = v9;
    uint64_t v30 = v14;
    uint64_t v31 = v8;
    uint64_t v32 = a2;
    uint64_t v16 = a1[1];
    uint64_t v36 = *a1;
    uint64_t v17 = _swiftEmptyArrayStorage;
    char v34 = _swiftEmptyArrayStorage;
    uint64_t v18 = *(void *)(v36 + 16);
    if (v18)
    {
      uint64_t v19 = v36 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1004526AC(v19, (uint64_t)v35);
        sub_100452AB8(v35, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100452708);
        uint64_t v20 = sub_100456DEC((uint64_t)v35);
        sub_100452AB8(v35, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100452844);
        sub_1004F1F48((uint64_t)v20);
        v19 += 80;
        --v18;
      }
      while (v18);
      sub_10001D550((uint64_t)&v36);
      uint64_t v17 = v34;
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_100451F3C((uint64_t)v17, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v34 = v21;
    swift_bridgeObjectRetain();
    sub_10044F4EC((uint64_t *)&v34);
    swift_bridgeObjectRelease();
    long long v22 = v34;
    swift_bridgeObjectRetain();
    uint64_t v23 = Capability.saslIR.unsafeMutableAddressor();
    LOBYTE(v21) = sub_1003689F8(*v23, v23[1], v23[2], *((unsigned char *)v23 + 24), v16);
    sub_100451EB4(a1);
    swift_bridgeObjectRelease();
    uint64_t v24 = v32;
    uint64_t v25 = (uint64_t)v30;
    sub_100452980(v32, (uint64_t)v30, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    *((void *)v11 + 2) = &_swiftEmptySetSingleton;
    *((void *)v11 + 3) = &_swiftEmptySetSingleton;
    uint64_t v26 = (uint64_t)&v11[*(int *)(v29 + 32)];
    uint64_t v27 = type metadata accessor for AuthenticationTask();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
    v11[8] = v21 & 1;
    *(void *)uint64_t v11 = v22;
    uint64_t v28 = (uint64_t)v31;
    sub_10044EC0C(v25, (uint64_t)v31);
    sub_100451E54(v25, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    sub_1004529E8(v28, v26);
    sub_100452A50((uint64_t)v11, v33, (uint64_t (*)(void))type metadata accessor for Authenticator);
    return (void *)sub_100451E54(v24, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  }
}

uint64_t sub_10044E2B4(uint64_t a1)
{
  uint64_t v52 = a1;
  uint64_t v51 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v2 = __chkstk_darwin(v51);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v51 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = sub_1005E0ED0();
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v51 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v51 - v17;
  long long v19 = v1[2];
  long long v56 = v1[1];
  v57[0] = v19;
  v57[1] = v1[3];
  sub_100452B0C((uint64_t)v57 + 8, (uint64_t)v59);
  sub_100452B68((uint64_t)&v56, (uint64_t)v58);
  sub_100452B0C((uint64_t)v59, (uint64_t)v60);
  uint64_t v20 = v62;
  if (v62 == 1)
  {
    uint64_t result = sub_100452B68((uint64_t)v58, (uint64_t)v63);
    if (v63[0] >> 62)
    {
      if (v63[0] >> 62 != 1)
      {
        uint64_t v33 = v52;
        uint64_t v34 = v53;
        uint64_t v35 = v54;
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v18, v52, v54);
        sub_100452980(v33, (uint64_t)v9, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v36 = sub_1005E0EB0();
        os_log_type_t v37 = sub_1005E25C0();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = swift_slowAlloc();
          uint64_t v52 = swift_slowAlloc();
          uint64_t v71 = v52;
          *(_DWORD *)uint64_t v38 = 68158210;
          LODWORD(v55) = 2;
          sub_1005E2960();
          *(_WORD *)(v38 + 8) = 256;
          long long v39 = &v9[*(int *)(v51 + 20)];
          LOBYTE(v55) = *v39;
          sub_1005E2960();
          *(_WORD *)(v38 + 11) = 2082;
          uint64_t v40 = ConnectionID.debugDescription.getter(*((unsigned int *)v39 + 1));
          uint64_t v55 = sub_100481E54(v40, v41, &v71);
          sub_1005E2960();
          swift_bridgeObjectRelease();
          sub_100451E54((uint64_t)v9, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "[%.*hhx-%{public}s] Sending credentials over insecure connection.", (uint8_t *)v38, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v54);
        }
        else
        {
          sub_100451E54((uint64_t)v9, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

          return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v35);
        }
      }
    }
    else
    {
      v63[0] &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v24 = v52;
      uint64_t v25 = v53;
      uint64_t v26 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v16, v52, v54);
      sub_100452980(v24, (uint64_t)v7, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v27 = sub_1005E0EB0();
      os_log_type_t v28 = sub_1005E25C0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v71 = v52;
        *(_DWORD *)uint64_t v29 = 68158210;
        LODWORD(v55) = 2;
        sub_1005E2960();
        *(_WORD *)(v29 + 8) = 256;
        uint64_t v30 = &v7[*(int *)(v51 + 20)];
        LOBYTE(v55) = *v30;
        sub_1005E2960();
        *(_WORD *)(v29 + 11) = 2082;
        uint64_t v31 = ConnectionID.debugDescription.getter(*((unsigned int *)v30 + 1));
        uint64_t v55 = sub_100481E54(v31, v32, &v71);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100451E54((uint64_t)v7, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "[%.*hhx-%{public}s] Sending credentials over insecure connection (opportunistic TLS).", (uint8_t *)v29, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v16, v54);
      }
      else
      {
        sub_100451E54((uint64_t)v7, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v16, v26);
      }
    }
    return result;
  }
  int v22 = v60[0];
  uint64_t v23 = v61;
  uint64_t result = sub_100452B68((uint64_t)v58, (uint64_t)&v64);
  if ((unint64_t)v64 >> 62 != 1) {
    goto LABEL_29;
  }
  *(void *)&long long v64 = v64 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v67 = v65;
  long long v66 = v64;
  if (!v20)
  {
    if (v22 == 1)
    {
      if ((unsigned __int16)v66 == 772) {
        return result;
      }
    }
    else if ((unsigned __int16)v66 - 771 < 2)
    {
      return result;
    }
    goto LABEL_29;
  }
  if (v22)
  {
    if (v22 == 1)
    {
      if ((unsigned __int16)v66 != 772) {
        goto LABEL_29;
      }
    }
    else if ((unsigned __int16)v66 - 771 > 1)
    {
LABEL_29:
      uint64_t v42 = v52;
      uint64_t v43 = v53;
      uint64_t v44 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v13, v52, v54);
      sub_100452980(v42, (uint64_t)v4, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v45 = sub_1005E0EB0();
      os_log_type_t v46 = sub_1005E25A0();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v71 = v52;
        *(_DWORD *)uint64_t v47 = 68158210;
        LODWORD(v55) = 2;
        sub_1005E2960();
        *(_WORD *)(v47 + 8) = 256;
        uint64_t v48 = &v4[*(int *)(v51 + 20)];
        LOBYTE(v55) = *v48;
        sub_1005E2960();
        *(_WORD *)(v47 + 11) = 2082;
        uint64_t v49 = ConnectionID.debugDescription.getter(*((unsigned int *)v48 + 1));
        uint64_t v55 = sub_100481E54(v49, v50, &v71);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100451E54((uint64_t)v4, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%.*hhx-%{public}s] Connection security does not fulfil requirements for sending credentials.", (uint8_t *)v47, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v54);
      }
      else
      {
        sub_100451E54((uint64_t)v4, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v44);
      }
      sub_100452BC4();
      swift_allocError();
      return swift_willThrow();
    }
  }
  else if ((unsigned __int16)v66 - 771 >= 2)
  {
    goto LABEL_29;
  }
  sub_100452C18((uint64_t)&v66 + 8, (uint64_t)v68);
  uint64_t result = sub_100452C18((uint64_t)v68, (uint64_t)&v69);
  if (!v70) {
    goto LABEL_29;
  }
  if (v23 != v69 || v20 != v70)
  {
    uint64_t result = sub_1005E3290();
    if ((result & 1) == 0) {
      goto LABEL_29;
    }
  }
  return result;
}

uint64_t sub_10044EC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = *(void *)(*v2 + 16);
  if (!v4)
  {
LABEL_38:
    uint64_t v55 = type metadata accessor for AuthenticationTask();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v3, 1, 1, v55);
  }
  uint64_t v5 = *v2 + 32;
  uint64_t v6 = v2[2];
  uint64_t v71 = v6 + 56;
  swift_bridgeObjectRetain_n();
  uint64_t v7 = 0;
  uint64_t v59 = v5;
  uint64_t v60 = v4;
  uint64_t v72 = v6;
LABEL_3:
  uint64_t v8 = (uint64_t *)(v5 + 80 * v7);
  sub_10044AF60((uint64_t)v8, (uint64_t)v73);
  if (*(void *)(v6 + 16))
  {
    uint64_t v64 = v7;
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    unint64_t v12 = v8[3];
    uint64_t v14 = v8[4];
    unint64_t v13 = v8[5];
    uint64_t v15 = v8[7];
    uint64_t v68 = v8[6];
    uint64_t v16 = v8[8];
    unint64_t v17 = v8[9];
    sub_1005E33F0();
    sub_10044AF60((uint64_t)v73, (uint64_t)&v82);
    uint64_t v18 = v83;
    v83 &= ~0x1000000000000000uLL;
    if ((v18 & 0x1000000000000000) != 0)
    {
      sub_100443AD4((uint64_t)&v82, (uint64_t)v84);
      sub_1005E3410(1uLL);
      sub_100443AD4((uint64_t)v84, (uint64_t)&v85);
      switch((v94 >> 59) & 6 | ((v92 & 0x2000000000000000) != 0))
      {
        case 1uLL:
          v92 &= ~0x2000000000000000uLL;
          unint64_t v24 = v92;
          v94 &= 0xCFFFFFFFFFFFFFFFLL;
          unint64_t v25 = v94;
          uint64_t v26 = v85;
          unint64_t v27 = v86;
          uint64_t v28 = v87;
          unint64_t v29 = v88;
          uint64_t v30 = v89;
          unint64_t v31 = v90;
          uint64_t v32 = v91;
          uint64_t v69 = v93;
          sub_1005E3410(1uLL);
          sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_100008D24(v26, v27);
          sub_100008D24(v28, v29);
          sub_100008D24(v30, v31);
          sub_100008D24(v32, v24);
          sub_100008D24(v69, v25);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v32, v24);
          sub_1000094D4(v30, v31);
          sub_1000094D4(v28, v29);
          sub_1000094D4(v26, v27);
          sub_1000094D4(v69, v25);
          break;
        case 2uLL:
          v92 &= ~0x2000000000000000uLL;
          v94 &= 0xCFFFFFFFFFFFFFFFLL;
          sub_1005E3410(2uLL);
          sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_100443318(v9, v10, v11, v12, v14, v13, v68, v15 & 0xEFFFFFFFFFFFFFFFLL, v16, v17);
          sub_1005E08B0();
          break;
        case 3uLL:
          v92 &= ~0x2000000000000000uLL;
          v94 &= 0xCFFFFFFFFFFFFFFFLL;
          Swift::UInt v33 = 3;
          goto LABEL_15;
        case 4uLL:
          v92 &= ~0x2000000000000000uLL;
          v94 &= 0xCFFFFFFFFFFFFFFFLL;
          uint64_t v19 = v85;
          unint64_t v20 = v86;
          uint64_t v21 = v87;
          unint64_t v22 = v88;
          Swift::UInt v23 = 4;
          goto LABEL_12;
        case 5uLL:
          v92 &= ~0x2000000000000000uLL;
          v94 &= 0xCFFFFFFFFFFFFFFFLL;
          Swift::UInt v33 = 5;
          goto LABEL_15;
        case 6uLL:
          v92 &= ~0x2000000000000000uLL;
          v94 &= 0xCFFFFFFFFFFFFFFFLL;
          Swift::UInt v33 = 6;
LABEL_15:
          sub_1005E3410(v33);
          sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_100443318(v9, v10, v11, v12, v14, v13, v68, v15 & 0xEFFFFFFFFFFFFFFFLL, v16, v17);
          sub_1005E1DB0();
          sub_1005E1DB0();
          break;
        default:
          v92 &= ~0x2000000000000000uLL;
          v94 &= 0xCFFFFFFFFFFFFFFFLL;
          uint64_t v19 = v85;
          unint64_t v20 = v86;
          uint64_t v21 = v87;
          unint64_t v22 = v88;
          Swift::UInt v23 = 0;
LABEL_12:
          sub_1005E3410(v23);
          sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_100008D24(v19, v20);
          sub_100008D24(v21, v22);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v19, v20);
          sub_1000094D4(v21, v22);
          break;
      }
      sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
    }
    else
    {
      sub_1005E3410(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      sub_1005E1DB0();
    }
    Swift::Int v34 = sub_1005E3470();
    uint64_t v35 = v72;
    uint64_t v36 = -1 << *(unsigned char *)(v72 + 32);
    unint64_t v37 = v34 & ~v36;
    if (((*(void *)(v71 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
      goto LABEL_40;
    }
    uint64_t v65 = v64 + 1;
    uint64_t v70 = ~v36;
    while (1)
    {
      uint64_t v38 = (uint64_t *)(*(void *)(v35 + 48) + 80 * v37);
      uint64_t v39 = *v38;
      unint64_t v40 = v38[1];
      uint64_t v41 = v38[2];
      unint64_t v42 = v38[3];
      uint64_t v43 = v38[7];
      if ((v43 & 0x1000000000000000) != 0)
      {
        uint64_t v49 = v38[4];
        unint64_t v50 = v38[5];
        uint64_t v51 = v38[6];
        uint64_t v52 = v38[8];
        unint64_t v53 = v38[9];
        v74[0] = *v38;
        v74[1] = v40;
        v74[2] = v41;
        v74[3] = v42;
        uint64_t v67 = v49;
        v74[4] = v49;
        v74[5] = v50;
        v74[6] = v51;
        v74[7] = v43 & 0xEFFFFFFFFFFFFFFFLL;
        v74[8] = v52;
        v74[9] = v53;
        sub_10044AF60((uint64_t)v73, (uint64_t)v76);
        uint64_t v54 = v77;
        v77 &= ~0x1000000000000000uLL;
        if ((v54 & 0x1000000000000000) != 0)
        {
          sub_100443AD4((uint64_t)v76, (uint64_t)v78);
          sub_100443AD4((uint64_t)v78, (uint64_t)v75);
          sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
          sub_10044CA28(v39, v40, v41, v42, v67, v50, v51, v43, v52, v53);
          char v66 = sub_100455D6C((uint64_t)v74, (uint64_t)v75);
          sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
          sub_10044B008(v39, v40, v41, v42, v67, v50, v51, v43, v52, v53);
          if (v66) {
            goto LABEL_36;
          }
        }
      }
      else
      {
        sub_10044AF60((uint64_t)v73, (uint64_t)v79);
        uint64_t v44 = v80;
        v80 &= ~0x1000000000000000uLL;
        if ((v44 & 0x1000000000000000) != 0)
        {
          sub_100443AD4((uint64_t)v79, (uint64_t)v81);
        }
        else
        {
          uint64_t v45 = v79[2];
          uint64_t v46 = v79[3];
          BOOL v47 = v39 == v79[0] && v40 == v79[1];
          if (v47 || (sub_1005E3290() & 1) != 0)
          {
            BOOL v48 = v41 == v45 && v42 == v46;
            if (v48 || (sub_1005E3290() & 1) != 0)
            {
LABEL_36:
              sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
              uint64_t v5 = v59;
              uint64_t v7 = v65;
              uint64_t v6 = v72;
              if (v65 == v60)
              {
                swift_bridgeObjectRelease_n();
                uint64_t v3 = a2;
                goto LABEL_38;
              }
              goto LABEL_3;
            }
          }
        }
      }
      unint64_t v37 = (v37 + 1) & v70;
      uint64_t v35 = v72;
      if (((*(void *)(v71 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
        goto LABEL_40;
      }
    }
  }
  sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
LABEL_40:
  swift_bridgeObjectRelease_n();
  char v57 = *(unsigned char *)(v61 + 8);
  unint64_t v58 = (int *)type metadata accessor for AuthenticationTask();
  sub_100452980(a1, a2 + v58[5], (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
  sub_100454794((uint64_t *)a2);
  sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
  sub_100452AB8(v73, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
  *(_OWORD *)(a2 + 40) = xmmword_100625740;
  *(void *)(a2 + v58[7]) = 0;
  *(unsigned char *)(a2 + v58[8]) = 2;
  *(unsigned char *)(a2 + v58[6]) = v57;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v58 - 1) + 56))(a2, 0, 1, v58);
}

Swift::Int sub_10044F4EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1004518B0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100450214(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10044F558(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715958);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10044F6B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715930);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10044F824(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715908);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10044F9A8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715960);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10044FAF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715920);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10044FC48(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715928);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_10000566C(&qword_100715918);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10044FDD4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715950);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10044FF34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715948);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_100450090(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715938);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1005E3000();
  __break(1u);
  return result;
}

Swift::Int sub_100450214(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1005E3210(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_183;
    }
    if (v3) {
      return sub_100450D00(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_191;
  }
  Swift::Int v120 = result;
  uint64_t v129 = v1;
  long long v117 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    unint64_t v127 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      size_t v11 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_149;
    }
    unsigned long long v119 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1005E2150();
    *(void *)(v7 + 16) = v6;
    unsigned long long v119 = (void *)v7;
    unint64_t v127 = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v118 = *a1 + 232;
  uint64_t v116 = *a1 - 80;
  size_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v121 = v3;
  uint64_t v128 = v10;
  do
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = v10 + 80 * v9;
      unint64_t v15 = *(void *)(v14 + 56);
      if ((v15 & 0x1000000000000000) != 0) {
        unint64_t v16 = qword_100625F38[(*(void *)(v14 + 72) >> 59) & 6 | (v15 >> 61) & 1];
      }
      else {
        unint64_t v16 = 8;
      }
      uint64_t v17 = v10 + 80 * v13;
      unint64_t v18 = *(void *)(v17 + 56);
      if ((v18 & 0x1000000000000000) != 0) {
        unint64_t v19 = qword_100625F38[(*(void *)(v17 + 72) >> 59) & 6 | (v18 >> 61) & 1];
      }
      else {
        unint64_t v19 = 8;
      }
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        unint64_t v20 = (void *)(v118 + 80 * v13);
        while (1)
        {
          unint64_t v22 = *(v20 - 2);
          if ((v22 & 0x1000000000000000) != 0)
          {
            int v23 = 1;
            unint64_t v28 = 5;
            int v25 = 0;
            int v24 = 1;
            int v26 = 0;
            int v27 = 0;
            switch((*v20 >> 59) & 6 | ((v22 & 0x2000000000000000) != 0))
            {
              case 1:
                int v23 = 1;
                int v25 = 1;
                int v26 = 1;
                int v27 = 1;
                unint64_t v28 = 2;
                break;
              case 2:
                int v23 = 1;
                int v25 = 1;
                int v26 = 1;
                int v27 = 1;
                unint64_t v28 = 1;
                break;
              case 3:
                int v26 = 0;
                int v23 = 1;
                int v25 = 1;
                int v27 = 1;
                unint64_t v28 = 3;
                break;
              case 4:
                int v25 = 0;
                int v26 = 0;
                int v23 = 1;
                int v27 = 1;
                unint64_t v28 = 4;
                break;
              case 5:
                int v24 = 0;
                int v25 = 0;
                int v26 = 0;
                int v27 = 0;
                int v23 = 1;
                unint64_t v28 = 6;
                break;
              case 6:
                int v23 = 0;
                int v24 = 0;
                int v25 = 0;
                int v26 = 0;
                int v27 = 0;
                unint64_t v28 = 7;
                break;
              default:
                break;
            }
          }
          else
          {
            int v23 = 0;
            int v24 = 0;
            int v25 = 0;
            int v26 = 0;
            int v27 = 0;
            unint64_t v28 = 8;
          }
          if ((v15 & 0x1000000000000000) != 0) {
            break;
          }
          unint64_t v21 = 8;
LABEL_26:
          if (v16 < v19 == v28 >= v21) {
            goto LABEL_51;
          }
LABEL_27:
          ++v9;
          v20 += 10;
          unint64_t v15 = v22;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            goto LABEL_51;
          }
        }
        uint64_t v29 = (*(v20 - 10) >> 59) & 6 | ((v15 & 0x2000000000000000) != 0);
        unint64_t v21 = 1;
        switch(v29)
        {
          case 1:
            unint64_t v21 = 2;
            goto LABEL_26;
          case 2:
            goto LABEL_26;
          case 3:
            if ((((v16 < v19) ^ v26) & 1) == 0) {
              goto LABEL_27;
            }
            break;
          case 4:
            if ((((v16 < v19) ^ v25) & 1) == 0) {
              goto LABEL_27;
            }
            break;
          case 5:
            if ((((v16 < v19) ^ v24) & 1) == 0) {
              goto LABEL_27;
            }
            break;
          case 6:
            if ((((v16 < v19) ^ v23) & 1) == 0) {
              goto LABEL_27;
            }
            break;
          default:
            if ((((v16 < v19) ^ v27) & 1) == 0) {
              goto LABEL_27;
            }
            break;
        }
      }
LABEL_51:
      if (v16 < v19)
      {
        if (v9 < v13) {
          goto LABEL_184;
        }
        if (v13 < v9)
        {
          uint64_t v30 = 80 * v9;
          uint64_t v31 = 80 * v13;
          Swift::Int v32 = v9;
          Swift::Int v33 = v13;
          do
          {
            if (v33 != --v32)
            {
              if (!v10) {
                goto LABEL_189;
              }
              uint64_t v34 = v10 + v30;
              long long v126 = *(_OWORD *)(v10 + v31);
              long long v124 = *(_OWORD *)(v10 + v31 + 32);
              long long v125 = *(_OWORD *)(v10 + v31 + 16);
              long long v122 = *(_OWORD *)(v10 + v31 + 64);
              long long v123 = *(_OWORD *)(v10 + v31 + 48);
              memmove((void *)(v10 + v31), (const void *)(v10 + v30 - 80), 0x50uLL);
              uint64_t v10 = v128;
              *(_OWORD *)(v34 - 80) = v126;
              *(_OWORD *)(v34 - 64) = v125;
              *(_OWORD *)(v34 - 48) = v124;
              *(_OWORD *)(v34 - 32) = v123;
              *(_OWORD *)(v34 - 16) = v122;
            }
            ++v33;
            v30 -= 80;
            v31 += 80;
          }
          while (v33 < v32);
          Swift::Int v3 = v121;
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_182;
      }
      if (v9 - v13 < v120)
      {
        Swift::Int v35 = v13 + v120;
        if (__OFADD__(v13, v120)) {
          goto LABEL_185;
        }
        if (v35 >= v3) {
          Swift::Int v35 = v3;
        }
        if (v35 >= v13)
        {
          if (v9 != v35)
          {
            uint64_t v36 = v116 + 80 * v9;
            do
            {
              uint64_t v37 = *(void *)(v10 + 80 * v9 + 56);
              Swift::Int v38 = v13;
              uint64_t v39 = v36;
              do
              {
                uint64_t v40 = *(void *)(v39 + 56);
                if ((v37 & 0x1000000000000000) != 0)
                {
                  char v41 = 1;
                  unint64_t v46 = 5;
                  char v43 = 0;
                  char v42 = 1;
                  char v44 = 0;
                  char v45 = 0;
                  switch((*(void *)(v39 + 152) >> 59) & 6 | ((v37 & 0x2000000000000000) != 0))
                  {
                    case 1:
                      char v41 = 1;
                      char v43 = 1;
                      char v44 = 1;
                      char v45 = 1;
                      unint64_t v46 = 2;
                      break;
                    case 2:
                      char v41 = 1;
                      char v43 = 1;
                      char v44 = 1;
                      char v45 = 1;
                      unint64_t v46 = 1;
                      break;
                    case 3:
                      char v44 = 0;
                      char v41 = 1;
                      char v43 = 1;
                      char v45 = 1;
                      unint64_t v46 = 3;
                      break;
                    case 4:
                      char v43 = 0;
                      char v44 = 0;
                      char v41 = 1;
                      char v45 = 1;
                      unint64_t v46 = 4;
                      break;
                    case 5:
                      char v42 = 0;
                      char v43 = 0;
                      char v44 = 0;
                      char v45 = 0;
                      char v41 = 1;
                      unint64_t v46 = 6;
                      break;
                    case 6:
                      char v41 = 0;
                      char v42 = 0;
                      char v43 = 0;
                      char v44 = 0;
                      char v45 = 0;
                      unint64_t v46 = 7;
                      break;
                    default:
                      break;
                  }
                }
                else
                {
                  char v41 = 0;
                  char v42 = 0;
                  char v43 = 0;
                  char v44 = 0;
                  char v45 = 0;
                  unint64_t v46 = 8;
                }
                if ((v40 & 0x1000000000000000) != 0)
                {
                  unint64_t v47 = 1;
                  switch((*(void *)(v39 + 72) >> 59) & 6 | ((v40 & 0x2000000000000000) != 0))
                  {
                    case 1:
                      unint64_t v47 = 2;
                      goto LABEL_75;
                    case 2:
                      goto LABEL_75;
                    case 3:
                      if ((v44 & 1) == 0) {
                        goto LABEL_69;
                      }
                      goto LABEL_76;
                    case 4:
                      if ((v43 & 1) == 0) {
                        goto LABEL_69;
                      }
                      goto LABEL_76;
                    case 5:
                      if ((v42 & 1) == 0) {
                        goto LABEL_69;
                      }
                      goto LABEL_76;
                    case 6:
                      if ((v41 & 1) == 0) {
                        goto LABEL_69;
                      }
                      goto LABEL_76;
                    default:
                      if ((v45 & 1) == 0) {
                        goto LABEL_69;
                      }
                      goto LABEL_76;
                  }
                }
                unint64_t v47 = 8;
LABEL_75:
                if (v46 >= v47) {
                  break;
                }
LABEL_76:
                if (!v10) {
                  goto LABEL_187;
                }
                BOOL v48 = (_OWORD *)(v39 + 80);
                uint64_t v49 = *(void *)(v39 + 128);
                long long v50 = *(_OWORD *)(v39 + 96);
                long long v51 = *(_OWORD *)(v39 + 112);
                long long v52 = *(_OWORD *)(v39 + 144);
                long long v53 = *(_OWORD *)(v39 + 48);
                long long v55 = *(_OWORD *)(v39 + 64);
                long long v54 = *(_OWORD *)(v39 + 80);
                *(_OWORD *)(v39 + 112) = *(_OWORD *)(v39 + 32);
                *(_OWORD *)(v39 + 128) = v53;
                *(_OWORD *)(v39 + 144) = v55;
                long long v57 = *(_OWORD *)v39;
                long long v56 = *(_OWORD *)(v39 + 16);
                *(_OWORD *)uint64_t v39 = v54;
                *(_OWORD *)(v39 + 16) = v50;
                *(_OWORD *)(v39 + 32) = v51;
                *(void *)(v39 + 48) = v49;
                *(void *)(v39 + 56) = v37;
                *(_OWORD *)(v39 + 64) = v52;
                v39 -= 80;
                ++v38;
                *BOOL v48 = v57;
                v48[1] = v56;
              }
              while (v9 != v38);
LABEL_69:
              ++v9;
              v36 += 80;
            }
            while (v9 != v35);
            Swift::Int v9 = v35;
          }
          goto LABEL_99;
        }
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        sub_1005E2F10();
        __break(1u);
        JUMPOUT(0x100450C90);
      }
    }
LABEL_99:
    if (v9 < v13) {
      goto LABEL_177;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      size_t v11 = sub_100451554(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v59 = *((void *)v11 + 2);
    unint64_t v58 = *((void *)v11 + 3);
    unint64_t v12 = v59 + 1;
    uint64_t v10 = v128;
    if (v59 >= v58 >> 1)
    {
      long long v107 = sub_100451554((char *)(v58 > 1), v59 + 1, 1, v11);
      uint64_t v10 = v128;
      size_t v11 = v107;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v60 = v11 + 32;
    uint64_t v61 = &v11[16 * v59 + 32];
    *(void *)uint64_t v61 = v13;
    *((void *)v61 + 1) = v9;
    if (v59)
    {
      while (1)
      {
        unint64_t v62 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v67 = &v60[16 * v12];
          uint64_t v68 = *((void *)v67 - 8);
          uint64_t v69 = *((void *)v67 - 7);
          BOOL v73 = __OFSUB__(v69, v68);
          uint64_t v70 = v69 - v68;
          if (v73) {
            goto LABEL_166;
          }
          uint64_t v72 = *((void *)v67 - 6);
          uint64_t v71 = *((void *)v67 - 5);
          BOOL v73 = __OFSUB__(v71, v72);
          uint64_t v65 = v71 - v72;
          char v66 = v73;
          if (v73) {
            goto LABEL_167;
          }
          unint64_t v74 = v12 - 2;
          uint64_t v75 = &v60[16 * v12 - 32];
          uint64_t v77 = *(void *)v75;
          uint64_t v76 = *((void *)v75 + 1);
          BOOL v73 = __OFSUB__(v76, v77);
          uint64_t v78 = v76 - v77;
          if (v73) {
            goto LABEL_169;
          }
          BOOL v73 = __OFADD__(v65, v78);
          uint64_t v79 = v65 + v78;
          if (v73) {
            goto LABEL_172;
          }
          if (v79 >= v70)
          {
            long long v97 = &v60[16 * v62];
            uint64_t v99 = *(void *)v97;
            uint64_t v98 = *((void *)v97 + 1);
            BOOL v73 = __OFSUB__(v98, v99);
            uint64_t v100 = v98 - v99;
            if (v73) {
              goto LABEL_176;
            }
            BOOL v90 = v65 < v100;
            goto LABEL_136;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v91 = *((void *)v11 + 4);
            uint64_t v92 = *((void *)v11 + 5);
            BOOL v73 = __OFSUB__(v92, v91);
            uint64_t v84 = v92 - v91;
            char v85 = v73;
            goto LABEL_130;
          }
          uint64_t v64 = *((void *)v11 + 4);
          uint64_t v63 = *((void *)v11 + 5);
          BOOL v73 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          char v66 = v73;
        }
        if (v66) {
          goto LABEL_168;
        }
        unint64_t v74 = v12 - 2;
        uint64_t v80 = &v60[16 * v12 - 32];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v83 = __OFSUB__(v81, v82);
        uint64_t v84 = v81 - v82;
        char v85 = v83;
        if (v83) {
          goto LABEL_171;
        }
        unint64_t v86 = &v60[16 * v62];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v73 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v73) {
          goto LABEL_174;
        }
        if (__OFADD__(v84, v89)) {
          goto LABEL_175;
        }
        if (v84 + v89 >= v65)
        {
          BOOL v90 = v65 < v89;
LABEL_136:
          if (v90) {
            unint64_t v62 = v74;
          }
          goto LABEL_138;
        }
LABEL_130:
        if (v85) {
          goto LABEL_170;
        }
        uint64_t v93 = &v60[16 * v62];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v73 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v73) {
          goto LABEL_173;
        }
        if (v96 < v84) {
          goto LABEL_15;
        }
LABEL_138:
        unint64_t v101 = v62 - 1;
        if (v62 - 1 >= v12)
        {
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
          goto LABEL_186;
        }
        if (!v10) {
          goto LABEL_188;
        }
        long long v102 = &v60[16 * v101];
        uint64_t v103 = *(void *)v102;
        long long v104 = &v60[16 * v62];
        uint64_t v105 = *((void *)v104 + 1);
        sub_100450F50((char *)(v10 + 80 * *(void *)v102), (char *)(v10 + 80 * *(void *)v104), v10 + 80 * v105, v127);
        if (v129) {
          goto LABEL_146;
        }
        if (v105 < v103) {
          goto LABEL_163;
        }
        if (v62 > *((void *)v11 + 2)) {
          goto LABEL_164;
        }
        *(void *)long long v102 = v103;
        *(void *)&v60[16 * v101 + 8] = v105;
        unint64_t v106 = *((void *)v11 + 2);
        if (v62 >= v106) {
          goto LABEL_165;
        }
        unint64_t v12 = v106 - 1;
        memmove(&v60[16 * v62], v104 + 16, 16 * (v106 - 1 - v62));
        *((void *)v11 + 2) = v106 - 1;
        uint64_t v10 = v128;
        if (v106 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v121;
  }
  while (v9 < v121);
  uint64_t v8 = v119;
LABEL_149:
  long long v108 = v11;
  unsigned long long v119 = v8;
  if (v12 >= 2)
  {
    uint64_t v109 = *v117;
    do
    {
      unint64_t v110 = v12 - 2;
      if (v12 < 2) {
        goto LABEL_178;
      }
      if (!v109) {
        goto LABEL_190;
      }
      unsigned long long v111 = v108;
      uint64_t v112 = *(void *)&v108[16 * v110 + 32];
      uint64_t v113 = *(void *)&v108[16 * v12 + 24];
      sub_100450F50((char *)(v109 + 80 * v112), (char *)(v109 + 80 * *(void *)&v108[16 * v12 + 16]), v109 + 80 * v113, v127);
      if (v129) {
        break;
      }
      if (v113 < v112) {
        goto LABEL_179;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned long long v111 = sub_10045189C((uint64_t)v111);
      }
      if (v110 >= *((void *)v111 + 2)) {
        goto LABEL_180;
      }
      long long v114 = &v111[16 * v110 + 32];
      *(void *)long long v114 = v112;
      *((void *)v114 + 1) = v113;
      unint64_t v115 = *((void *)v111 + 2);
      if (v12 > v115) {
        goto LABEL_181;
      }
      memmove(&v111[16 * v12 + 16], &v111[16 * v12 + 32], 16 * (v115 - v12));
      long long v108 = v111;
      *((void *)v111 + 2) = v115 - 1;
      unint64_t v12 = v115 - 1;
    }
    while (v115 > 2);
  }
LABEL_146:
  swift_bridgeObjectRelease();
  v119[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100450D00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 80 * a3 - 80;
    do
    {
      uint64_t v6 = *(void *)(v4 + 80 * a3 + 56);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      while (1)
      {
        uint64_t v9 = *(void *)(v8 + 56);
        if ((v6 & 0x1000000000000000) != 0)
        {
          char v10 = 1;
          unint64_t v15 = 5;
          char v12 = 0;
          char v11 = 1;
          char v13 = 0;
          char v14 = 0;
          switch((*(void *)(v8 + 152) >> 59) & 6 | ((v6 & 0x2000000000000000) != 0))
          {
            case 1:
              char v10 = 1;
              char v12 = 1;
              char v13 = 1;
              char v14 = 1;
              unint64_t v15 = 2;
              break;
            case 2:
              char v10 = 1;
              char v12 = 1;
              char v13 = 1;
              char v14 = 1;
              unint64_t v15 = 1;
              break;
            case 3:
              char v13 = 0;
              char v10 = 1;
              char v12 = 1;
              char v14 = 1;
              unint64_t v15 = 3;
              break;
            case 4:
              char v12 = 0;
              char v13 = 0;
              char v10 = 1;
              char v14 = 1;
              unint64_t v15 = 4;
              break;
            case 5:
              char v11 = 0;
              char v12 = 0;
              char v13 = 0;
              char v14 = 0;
              char v10 = 1;
              unint64_t v15 = 6;
              break;
            case 6:
              char v10 = 0;
              char v11 = 0;
              char v12 = 0;
              char v13 = 0;
              char v14 = 0;
              unint64_t v15 = 7;
              break;
            default:
              break;
          }
        }
        else
        {
          char v10 = 0;
          char v11 = 0;
          char v12 = 0;
          char v13 = 0;
          char v14 = 0;
          unint64_t v15 = 8;
        }
        if ((v9 & 0x1000000000000000) != 0) {
          break;
        }
        unint64_t v16 = 8;
LABEL_10:
        if (v15 >= v16) {
          goto LABEL_4;
        }
LABEL_11:
        if (!v4)
        {
          __break(1u);
          JUMPOUT(0x100450F18);
        }
        uint64_t v17 = (_OWORD *)(v8 + 80);
        uint64_t v18 = *(void *)(v8 + 128);
        long long v19 = *(_OWORD *)(v8 + 96);
        long long v20 = *(_OWORD *)(v8 + 112);
        long long v21 = *(_OWORD *)(v8 + 144);
        long long v22 = *(_OWORD *)(v8 + 48);
        long long v24 = *(_OWORD *)(v8 + 64);
        long long v23 = *(_OWORD *)(v8 + 80);
        *(_OWORD *)(v8 + 112) = *(_OWORD *)(v8 + 32);
        *(_OWORD *)(v8 + 128) = v22;
        *(_OWORD *)(v8 + 144) = v24;
        long long v26 = *(_OWORD *)v8;
        long long v25 = *(_OWORD *)(v8 + 16);
        *(_OWORD *)uint64_t v8 = v23;
        *(_OWORD *)(v8 + 16) = v19;
        *(_OWORD *)(v8 + 32) = v20;
        *(void *)(v8 + 48) = v18;
        *(void *)(v8 + 56) = v6;
        *(_OWORD *)(v8 + 64) = v21;
        v8 -= 80;
        ++v7;
        *uint64_t v17 = v26;
        v17[1] = v25;
        if (a3 == v7) {
          goto LABEL_4;
        }
      }
      unint64_t v16 = 1;
      switch((*(void *)(v8 + 72) >> 59) & 6 | ((v9 & 0x2000000000000000) != 0))
      {
        case 1:
          unint64_t v16 = 2;
          goto LABEL_10;
        case 2:
          goto LABEL_10;
        case 3:
          if (v13) {
            goto LABEL_11;
          }
          break;
        case 4:
          if (v12) {
            goto LABEL_11;
          }
          break;
        case 5:
          if (v11) {
            goto LABEL_11;
          }
          break;
        case 6:
          if (v10) {
            goto LABEL_11;
          }
          break;
        default:
          if (v14) {
            goto LABEL_11;
          }
          break;
      }
LABEL_4:
      ++a3;
      v5 += 80;
    }
    while (a3 != a2);
  }
  return result;
}

uint64_t sub_100450F50(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 80;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 80;
  char v43 = __dst;
  char v42 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -79)
    {
      if (a4 != __src || &__src[80 * v11] <= a4) {
        memmove(a4, __src, 80 * v11);
      }
      long long v26 = &v4[80 * v11];
      char v41 = v26;
      char v43 = v6;
      if (v7 < v6 && v10 >= 80)
      {
        int v27 = (char *)(a3 - 80);
        while (1)
        {
          uint64_t v28 = *((void *)v26 - 3);
          uint64_t v29 = *((void *)v6 - 3);
          if ((v28 & 0x1000000000000000) != 0)
          {
            uint64_t v39 = (*((void *)v26 - 1) >> 59) & 6 | ((v28 & 0x2000000000000000) != 0);
            char v30 = 1;
            unint64_t v35 = 5;
            char v32 = 0;
            char v31 = 1;
            char v33 = 0;
            char v34 = 0;
            switch(v39)
            {
              case 1:
                char v30 = 1;
                char v32 = 1;
                char v33 = 1;
                char v34 = 1;
                unint64_t v35 = 2;
                break;
              case 2:
                char v30 = 1;
                char v32 = 1;
                char v33 = 1;
                char v34 = 1;
                unint64_t v35 = 1;
                break;
              case 3:
                char v33 = 0;
                char v30 = 1;
                char v32 = 1;
                char v34 = 1;
                unint64_t v35 = 3;
                break;
              case 4:
                char v32 = 0;
                char v33 = 0;
                char v30 = 1;
                char v34 = 1;
                unint64_t v35 = 4;
                break;
              case 5:
                char v31 = 0;
                char v32 = 0;
                char v33 = 0;
                char v34 = 0;
                char v30 = 1;
                unint64_t v35 = 6;
                break;
              case 6:
                char v30 = 0;
                char v31 = 0;
                char v32 = 0;
                char v33 = 0;
                char v34 = 0;
                unint64_t v35 = 7;
                break;
              default:
                break;
            }
          }
          else
          {
            char v30 = 0;
            char v31 = 0;
            char v32 = 0;
            char v33 = 0;
            char v34 = 0;
            unint64_t v35 = 8;
          }
          uint64_t v36 = v27 + 80;
          if ((v29 & 0x1000000000000000) != 0)
          {
            unint64_t v37 = 1;
            switch((*((void *)v6 - 1) >> 59) & 6 | ((v29 & 0x2000000000000000) != 0))
            {
              case 1:
                unint64_t v37 = 2;
                goto LABEL_54;
              case 2:
                goto LABEL_54;
              case 3:
                if ((v33 & 1) == 0) {
                  goto LABEL_67;
                }
                goto LABEL_55;
              case 4:
                if ((v32 & 1) == 0) {
                  goto LABEL_67;
                }
                goto LABEL_55;
              case 5:
                if ((v31 & 1) == 0) {
                  goto LABEL_67;
                }
                goto LABEL_55;
              case 6:
                if ((v30 & 1) == 0) {
                  goto LABEL_67;
                }
                goto LABEL_55;
              default:
                if ((v34 & 1) == 0) {
                  goto LABEL_67;
                }
                goto LABEL_55;
            }
          }
          unint64_t v37 = 8;
LABEL_54:
          if (v35 >= v37)
          {
LABEL_67:
            char v41 = v26 - 80;
            if (v36 < v26 || v27 >= v26 || v36 != v26) {
              memmove(v27, v26 - 80, 0x50uLL);
            }
            Swift::Int v38 = v6;
            v26 -= 80;
            if (v6 <= v7) {
              goto LABEL_86;
            }
          }
          else
          {
LABEL_55:
            Swift::Int v38 = v6 - 80;
            if (v36 != v6 || v27 >= v6) {
              memmove(v27, v6 - 80, 0x50uLL);
            }
            char v43 = v6 - 80;
            if (v38 <= v7) {
              goto LABEL_86;
            }
          }
          v27 -= 80;
          uint64_t v6 = v38;
          if (v26 <= v4) {
            goto LABEL_86;
          }
        }
      }
      goto LABEL_86;
    }
LABEL_87:
    sub_1005E3000();
    __break(1u);
    JUMPOUT(0x1004514E4);
  }
  if (v8 < -79) {
    goto LABEL_87;
  }
  if (a4 != __dst || &__dst[80 * v9] <= a4) {
    memmove(a4, __dst, 80 * v9);
  }
  char v12 = &v4[80 * v9];
  char v41 = v12;
  if ((unint64_t)v6 < a3 && v8 >= 80)
  {
    char v13 = v4;
    while (1)
    {
      uint64_t v14 = *((void *)v6 + 7);
      uint64_t v15 = *((void *)v13 + 7);
      if ((v14 & 0x1000000000000000) != 0)
      {
        uint64_t v25 = (*((void *)v6 + 9) >> 59) & 6 | ((v14 & 0x2000000000000000) != 0);
        char v16 = 1;
        unint64_t v21 = 5;
        char v18 = 0;
        char v17 = 1;
        char v19 = 0;
        char v20 = 0;
        switch(v25)
        {
          case 1:
            char v16 = 1;
            char v18 = 1;
            char v19 = 1;
            char v20 = 1;
            unint64_t v21 = 2;
            break;
          case 2:
            char v16 = 1;
            char v18 = 1;
            char v19 = 1;
            char v20 = 1;
            unint64_t v21 = 1;
            break;
          case 3:
            char v19 = 0;
            char v16 = 1;
            char v18 = 1;
            char v20 = 1;
            unint64_t v21 = 3;
            break;
          case 4:
            char v18 = 0;
            char v19 = 0;
            char v16 = 1;
            char v20 = 1;
            unint64_t v21 = 4;
            break;
          case 5:
            char v17 = 0;
            char v18 = 0;
            char v19 = 0;
            char v20 = 0;
            char v16 = 1;
            unint64_t v21 = 6;
            break;
          case 6:
            char v16 = 0;
            char v17 = 0;
            char v18 = 0;
            char v19 = 0;
            char v20 = 0;
            unint64_t v21 = 7;
            break;
          default:
            break;
        }
      }
      else
      {
        char v16 = 0;
        char v17 = 0;
        char v18 = 0;
        char v19 = 0;
        char v20 = 0;
        unint64_t v21 = 8;
      }
      if ((v15 & 0x1000000000000000) != 0)
      {
        unint64_t v22 = 1;
        switch((*((void *)v13 + 9) >> 59) & 6 | ((v15 & 0x2000000000000000) != 0))
        {
          case 1:
            unint64_t v22 = 2;
            goto LABEL_13;
          case 2:
            goto LABEL_13;
          case 3:
            if ((v19 & 1) == 0) {
              goto LABEL_24;
            }
            goto LABEL_14;
          case 4:
            if ((v18 & 1) == 0) {
              goto LABEL_24;
            }
            goto LABEL_14;
          case 5:
            if ((v17 & 1) == 0) {
              goto LABEL_24;
            }
            goto LABEL_14;
          case 6:
            if ((v16 & 1) == 0) {
              goto LABEL_24;
            }
            goto LABEL_14;
          default:
            if ((v20 & 1) == 0) {
              goto LABEL_24;
            }
            goto LABEL_14;
        }
      }
      unint64_t v22 = 8;
LABEL_13:
      if (v21 >= v22)
      {
LABEL_24:
        uint64_t v4 = v13 + 80;
        long long v24 = v13;
        long long v23 = v6;
        if (v7 == v13)
        {
          v13 += 80;
          if (v7 < v4) {
            goto LABEL_29;
          }
        }
        else
        {
          v13 += 80;
        }
      }
      else
      {
LABEL_14:
        long long v23 = v6 + 80;
        long long v24 = v6;
        if (v7 == v6 && v7 < v23) {
          goto LABEL_29;
        }
      }
      memmove(v7, v24, 0x50uLL);
LABEL_29:
      v7 += 80;
      if (v13 < v12)
      {
        uint64_t v6 = v23;
        if ((unint64_t)v23 < a3) {
          continue;
        }
      }
      char v42 = v4;
      char v43 = v7;
      break;
    }
  }
LABEL_86:
  sub_100451650((void **)&v43, &v42, &v41);
  return 1;
}

char *sub_100451554(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000566C(&qword_100715900);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  char v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100451650(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -80)
  {
    Swift::Int result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    Swift::Int result = (char *)*a1;
    uint64_t v6 = v4 / 80;
    if (result != v3 || result >= &v3[80 * v6])
    {
      return (char *)memmove(result, v3, 80 * v6);
    }
  }
  return result;
}

char *sub_10045171C(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -32)
  {
    Swift::Int result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    Swift::Int result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1004517D4(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    Swift::Int result = (char *)sub_1005E3000();
    __break(1u);
  }
  else
  {
    Swift::Int result = (char *)*a1;
    size_t v6 = 40 * (v4 / 40);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_10045189C(uint64_t a1)
{
  return sub_100451554(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1004518B0(uint64_t a1)
{
  return sub_10044F824(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1004518C4(uint64_t a1)
{
  return sub_10044F6B8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1004518D8(void *a1)
{
  return sub_10044FC48(0, a1[2], 0, a1);
}

uint64_t sub_1004518EC(uint64_t a1)
{
  return sub_10044FF34(0, *(void *)(a1 + 16), 0, (char *)a1);
}

BOOL sub_100451900(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationTask();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v51 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - v8;
  __chkstk_darwin(v7);
  int64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = sub_10000566C(&qword_1007158F8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000566C(&qword_100715848);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  char v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  unint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  long long v23 = (char *)&v44 - v22;
  long long v24 = a1;
  uint64_t v25 = *a1;
  long long v26 = a2;
  if ((sub_1004B0400(v25, *a2) & 1) == 0) {
    return 0;
  }
  BOOL v48 = v21;
  uint64_t v49 = v23;
  char v45 = v9;
  unint64_t v46 = v11;
  unint64_t v47 = v18;
  uint64_t v27 = v53;
  long long v50 = v14;
  if (*((unsigned __int8 *)v24 + 8) != *((unsigned __int8 *)v26 + 8)
    || (sub_100486104(v24[2], v26[2]) & 1) == 0
    || (sub_100012F74(v24[3], v26[3]) & 1) == 0)
  {
    return 0;
  }
  uint64_t v28 = type metadata accessor for Authenticator();
  uint64_t v29 = (uint64_t)v49;
  sub_100451DEC((uint64_t)v24 + *(int *)(v28 + 32), (uint64_t)v49);
  uint64_t v30 = (uint64_t)v48;
  sub_100451DEC((uint64_t)v26 + *(int *)(v28 + 32), (uint64_t)v48);
  uint64_t v31 = (uint64_t)v50;
  uint64_t v32 = (uint64_t)&v50[*(int *)(v12 + 48)];
  sub_100451DEC(v29, (uint64_t)v50);
  sub_100451DEC(v30, v32);
  char v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  uint64_t v34 = v27;
  if (v33(v31, 1, v27) == 1)
  {
    sub_100007A48(v30, &qword_100715848);
    sub_100007A48(v29, &qword_100715848);
    if (v33(v32, 1, v27) == 1)
    {
      sub_100007A48(v31, &qword_100715848);
      return 1;
    }
    unint64_t v37 = &qword_1007158F8;
    goto LABEL_16;
  }
  uint64_t v36 = v47;
  sub_100451DEC(v31, (uint64_t)v47);
  if (v33(v32, 1, v34) == 1)
  {
    unint64_t v37 = &qword_1007158F8;
LABEL_15:
    sub_100007A48(v30, &qword_100715848);
    sub_100007A48(v29, &qword_100715848);
    sub_100451E54((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
LABEL_16:
    sub_100007A48(v31, v37);
    return 0;
  }
  Swift::Int v38 = v46;
  sub_100452A50(v32, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  char v39 = sub_10044BACC(v36, v38);
  uint64_t v40 = (uint64_t)v45;
  sub_100452980((uint64_t)v36, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  uint64_t v41 = v51;
  sub_100452980((uint64_t)v38, v51, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  if ((v39 & 1) == 0)
  {
    sub_100451E54(v41, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    sub_100451E54(v40, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    sub_100451E54((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
    unint64_t v37 = &qword_100715848;
    goto LABEL_15;
  }
  int v42 = *(unsigned __int8 *)(v40 + *(int *)(v34 + 24));
  sub_100451E54(v40, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  int v43 = *(unsigned __int8 *)(v41 + *(int *)(v34 + 24));
  sub_100451E54(v41, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  sub_100451E54((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  sub_100007A48(v30, &qword_100715848);
  sub_100007A48(v29, &qword_100715848);
  sub_100451E54((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for AuthenticationTask);
  sub_100007A48(v31, &qword_100715848);
  return v42 == v43;
}

uint64_t sub_100451DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100451E54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_100451EB4(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100451F2C(v2);
  sub_1000A9E8C(v3, v4, v5);
  return a1;
}

uint64_t sub_100451F2C(uint64_t result)
{
  if ((result & 0x8000000000000000) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100451F3C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v3 = 0;
  uint64_t v63 = a1 + 32;
  unint64_t v59 = (unsigned char *)(a2 + 56);
  uint64_t v4 = _swiftEmptyArrayStorage;
  unint64_t v62 = *(void *)(a1 + 16);
  do
  {
    uint64_t v60 = v4;
    if (v3 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v3;
    }
    uint64_t v6 = a2;
    unint64_t v61 = v5;
    while (1)
    {
      if (v3 == v5)
      {
        __break(1u);
        JUMPOUT(0x100452690);
      }
      uint64_t v7 = (uint64_t *)(v63 + 80 * v3);
      unint64_t v8 = v7[1];
      uint64_t v10 = v7[2];
      unint64_t v9 = v7[3];
      uint64_t v12 = v7[4];
      unint64_t v11 = v7[5];
      uint64_t v14 = v7[6];
      uint64_t v13 = v7[7];
      unint64_t v15 = v7[9];
      uint64_t v73 = *v7;
      uint64_t v74 = v7[8];
      unint64_t v67 = v11;
      uint64_t v68 = v13;
      unint64_t v65 = v3 + 1;
      unint64_t v71 = v9;
      uint64_t v72 = v12;
      unint64_t v69 = v8;
      uint64_t v70 = v10;
      unint64_t v66 = v15;
      if ((v13 & 0x1000000000000000) == 0) {
        break;
      }
      switch((v15 >> 59) & 6 | ((v13 & 0x2000000000000000) != 0))
      {
        case 1uLL:
          unint64_t v32 = v13 & 0xEFFFFFFFFFFFFFFFLL;
          sub_100443318(v73, v8, v10, v9, v12, v11, v14, v13 & 0xEFFFFFFFFFFFFFFFLL, v74, v15);
          unint64_t v33 = v11;
          uint64_t v16 = v14;
          sub_100443318(v73, v8, v10, v9, v12, v33, v14, v32, v74, v15);
          uint64_t v29 = &qword_1007621B0;
          if (qword_1007155F0 != -1)
          {
            swift_once();
            uint64_t v29 = &qword_1007621B0;
          }
          break;
        case 2uLL:
          unint64_t v34 = v13 & 0xEFFFFFFFFFFFFFFFLL;
          sub_100443318(v73, v8, v10, v9, v12, v11, v14, v13 & 0xEFFFFFFFFFFFFFFFLL, v74, v15);
          unint64_t v35 = v11;
          uint64_t v16 = v14;
          sub_100443318(v73, v8, v10, v9, v12, v35, v14, v34, v74, v15);
          uint64_t v29 = &qword_1007621C0;
          if (qword_1007155F8 != -1)
          {
            swift_once();
            uint64_t v29 = &qword_1007621C0;
          }
          break;
        case 3uLL:
          unint64_t v36 = v13 & 0xEFFFFFFFFFFFFFFFLL;
          sub_100443318(v73, v8, v10, v9, v12, v11, v14, v13 & 0xEFFFFFFFFFFFFFFFLL, v74, v15);
          unint64_t v37 = v11;
          uint64_t v16 = v14;
          sub_100443318(v73, v8, v10, v9, v12, v37, v14, v36, v74, v15);
          uint64_t v29 = &qword_1007621E0;
          if (qword_100715608 != -1)
          {
            swift_once();
            uint64_t v29 = &qword_1007621E0;
          }
          break;
        case 4uLL:
          unint64_t v38 = v13 & 0xEFFFFFFFFFFFFFFFLL;
          sub_100443318(v73, v8, v10, v9, v12, v11, v14, v13 & 0xEFFFFFFFFFFFFFFFLL, v74, v15);
          unint64_t v39 = v11;
          uint64_t v16 = v14;
          sub_100443318(v73, v8, v10, v9, v12, v39, v14, v38, v74, v15);
          uint64_t v29 = &qword_1007621F0;
          if (qword_100715610 != -1)
          {
            swift_once();
            uint64_t v29 = &qword_1007621F0;
          }
          break;
        case 5uLL:
        case 6uLL:
          unint64_t v58 = v13 & 0xEFFFFFFFFFFFFFFFLL;
          sub_100443318(v73, v8, v10, v9, v12, v11, v14, v13 & 0xEFFFFFFFFFFFFFFFLL, v74, v15);
          unint64_t v28 = v11;
          uint64_t v16 = v14;
          sub_100443318(v73, v8, v10, v9, v12, v28, v14, v58, v74, v15);
          uint64_t v29 = &qword_1007621D0;
          if (qword_100715600 != -1)
          {
            swift_once();
            uint64_t v29 = &qword_1007621D0;
          }
          break;
        default:
          unint64_t v30 = v13 & 0xEFFFFFFFFFFFFFFFLL;
          sub_100443318(v73, v8, v10, v9, v12, v11, v14, v13 & 0xEFFFFFFFFFFFFFFFLL, v74, v15);
          unint64_t v31 = v11;
          uint64_t v16 = v14;
          sub_100443318(v73, v8, v10, v9, v12, v31, v14, v30, v74, v15);
          uint64_t v29 = (uint64_t *)AuthenticationMechanism.plain.unsafeMutableAddressor();
          break;
      }
      uint64_t v40 = *v29;
      uint64_t v41 = (void *)v29[1];
      swift_bridgeObjectRetain();
      uint64_t v42 = static Capability.authenticate(_:)(v40, v41);
      uint64_t v44 = v43;
      unint64_t v46 = v45;
      char v48 = v47;
      swift_bridgeObjectRelease();
      uint64_t v49 = *(void *)(a2 + 16);
      if (v49)
      {
        long long v50 = v59;
        do
        {
          uint64_t v51 = *((void *)v50 - 1);
          char v52 = *v50;
          BOOL v53 = *((void *)v50 - 3) == v42 && *((void *)v50 - 2) == v44;
          if (v53 || (sub_1005E3290() & 1) != 0)
          {
            if (v52)
            {
              if (v48) {
                goto LABEL_52;
              }
            }
            else if ((v48 & 1) == 0 && (v51 ^ v46) < 0x4000)
            {
LABEL_52:
              sub_10044B008(v73, v69, v70, v71, v72, v67, v16, v68, v74, v66);
              swift_bridgeObjectRelease();
              goto LABEL_53;
            }
          }
          v50 += 32;
          --v49;
        }
        while (v49);
      }
      sub_10044B008(v73, v69, v70, v71, v72, v67, v16, v68, v74, v66);
      swift_bridgeObjectRelease();
LABEL_50:
      sub_10044B008(v73, v69, v70, v71, v72, v67, v16, v68, v74, v66);
      uint64_t v6 = a2;
      unint64_t v3 = v65;
      unint64_t v5 = v61;
      if (v65 == v62) {
        return v60;
      }
    }
    uint64_t v16 = v7[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = Capability.loginDisabled.unsafeMutableAddressor();
    uint64_t v18 = *(void *)(v6 + 16);
    if (v18)
    {
      uint64_t v19 = *v17;
      uint64_t v20 = v17[1];
      uint64_t v21 = v17[2];
      uint64_t v22 = v59;
      char v23 = *((unsigned char *)v17 + 24);
      do
      {
        uint64_t v24 = *((void *)v22 - 1);
        char v25 = *v22;
        BOOL v26 = *((void *)v22 - 3) == v19 && *((void *)v22 - 2) == v20;
        if (v26 || (sub_1005E3290() & 1) != 0)
        {
          if (v25)
          {
            if (v23) {
              goto LABEL_50;
            }
          }
          else
          {
            if (((v24 ^ v21) & 0xFFFFFFFFFFFFC000) != 0) {
              char v27 = 1;
            }
            else {
              char v27 = v23;
            }
            if ((v27 & 1) == 0) {
              goto LABEL_50;
            }
          }
        }
        v22 += 32;
        --v18;
      }
      while (v18);
    }
LABEL_53:
    uint64_t v4 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1004B887C(0, v60[2] + 1, 1);
      uint64_t v4 = v60;
    }
    unint64_t v2 = v62;
    unint64_t v3 = v65;
    unint64_t v55 = v4[2];
    unint64_t v54 = v4[3];
    if (v55 >= v54 >> 1)
    {
      sub_1004B887C(v54 > 1, v55 + 1, 1);
      uint64_t v4 = v60;
    }
    v4[2] = v55 + 1;
    long long v56 = &v4[10 * v55];
    v56[4] = v73;
    v56[5] = v69;
    v56[6] = v70;
    v56[7] = v71;
    v56[8] = v72;
    v56[9] = v67;
    v56[10] = v16;
    v56[11] = v68;
    v56[12] = v74;
    v56[13] = v66;
  }
  while (v65 != v62);
  return v4;
}

uint64_t sub_1004526AC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100452708(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_100008D24(result, a2);
      Swift::Int result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_100008D24(result, a2);
      sub_100008D24(a3, a4);
      sub_100008D24(a5, a6);
      sub_100008D24(a7, v15);
      Swift::Int result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      Swift::Int result = sub_100008D24(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRetain();
      Swift::Int result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100452844(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  switch((a10 >> 59) & 6 | ((a8 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      sub_1000094D4(result, a2);
      Swift::Int result = a3;
      a2 = a4;
      goto LABEL_4;
    case 1uLL:
      unint64_t v15 = a8 & 0xDFFFFFFFFFFFFFFFLL;
      sub_1000094D4(result, a2);
      sub_1000094D4(a3, a4);
      sub_1000094D4(a5, a6);
      sub_1000094D4(a7, v15);
      Swift::Int result = a9;
      a2 = a10 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_4;
    case 2uLL:
LABEL_4:
      Swift::Int result = sub_1000094D4(result, a2);
      break;
    case 3uLL:
      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100452980(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004529E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100452A50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_100452AB8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100452B0C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100452B68(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_100452BC4()
{
  unint64_t result = qword_100715910;
  if (!qword_100715910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715910);
  }
  return result;
}

uint64_t sub_100452C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for Authenticator.Configuration.TLSRequirementsNotMet()
{
  return &type metadata for Authenticator.Configuration.TLSRequirementsNotMet;
}

uint64_t _s7CRAMMD5Vwxx(uint64_t *a1)
{
  sub_1004434DC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  unint64_t v2 = a1[11];
  if (((v2 >> 60) | 4) != 0xF) {
    sub_1000094D4(a1[10], v2);
  }
  sub_1000094D4(a1[12], a1[13]);
  uint64_t v3 = a1[14];
  unint64_t v4 = a1[15];
  return sub_1000094D4(v3, v4);
}

uint64_t _s7CRAMMD5Vwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v20 = a2[8];
  unint64_t v21 = a2[9];
  sub_100443318(*a2, v5, v6, v7, v8, v9, v10, v11, v20, v21);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v21;
  uint64_t v12 = a2 + 10;
  unint64_t v13 = a2[11];
  if (((v13 >> 60) | 4) == 0xF)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_100008D24(*v12, a2[11]);
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v13;
  }
  uint64_t v15 = a2[12];
  unint64_t v16 = a2[13];
  sub_100008D24(v15, v16);
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v16;
  uint64_t v18 = a2[14];
  unint64_t v17 = a2[15];
  sub_100008D24(v18, v17);
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v17;
  return a1;
}

uint64_t *_s7CRAMMD5Vwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v38 = a2[8];
  unint64_t v39 = a2[9];
  sub_100443318(*a2, v5, v6, v7, v8, v9, v10, v11, v38, v39);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = a1[8];
  unint64_t v21 = a1[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v38;
  a1[9] = v39;
  sub_1004434DC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v22 = a2 + 10;
  if ((((unint64_t)a1[11] >> 60) | 4) != 0xF)
  {
    unint64_t v25 = a2[11];
    if (((v25 >> 60) | 4) != 0xF)
    {
      uint64_t v35 = *v22;
      sub_100008D24(*v22, a2[11]);
      uint64_t v36 = a1[10];
      unint64_t v37 = a1[11];
      a1[10] = v35;
      a1[11] = v25;
      sub_1000094D4(v36, v37);
      goto LABEL_7;
    }
    sub_100452FAC((uint64_t)(a1 + 10));
    goto LABEL_6;
  }
  unint64_t v23 = a2[11];
  if (((v23 >> 60) | 4) == 0xF)
  {
LABEL_6:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v22;
    goto LABEL_7;
  }
  uint64_t v24 = *v22;
  sub_100008D24(*v22, a2[11]);
  a1[10] = v24;
  a1[11] = v23;
LABEL_7:
  uint64_t v26 = a2[12];
  unint64_t v27 = a2[13];
  sub_100008D24(v26, v27);
  uint64_t v28 = a1[12];
  unint64_t v29 = a1[13];
  a1[12] = v26;
  a1[13] = v27;
  sub_1000094D4(v28, v29);
  uint64_t v31 = a2[14];
  unint64_t v30 = a2[15];
  sub_100008D24(v31, v30);
  uint64_t v32 = a1[14];
  unint64_t v33 = a1[15];
  a1[14] = v31;
  a1[15] = v30;
  sub_1000094D4(v32, v33);
  return a1;
}

uint64_t sub_100452FAC(uint64_t a1)
{
  return a1;
}

__n128 _s7CRAMMD5Vwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t *_s7CRAMMD5Vwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7];
  uint64_t v12 = a1[8];
  unint64_t v13 = a1[9];
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v15;
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_1004434DC(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v16 = (uint64_t *)(a2 + 80);
  unint64_t v17 = a1[11];
  if (((v17 >> 60) | 4) != 0xF)
  {
    unint64_t v18 = *(void *)(a2 + 88);
    if (((v18 >> 60) | 4) != 0xF)
    {
      uint64_t v24 = a1[10];
      a1[10] = *v16;
      a1[11] = v18;
      sub_1000094D4(v24, v17);
      goto LABEL_5;
    }
    sub_100452FAC((uint64_t)(a1 + 10));
  }
  *((_OWORD *)a1 + 5) = *(_OWORD *)v16;
LABEL_5:
  uint64_t v19 = a1[12];
  unint64_t v20 = a1[13];
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  sub_1000094D4(v19, v20);
  uint64_t v21 = a1[14];
  unint64_t v22 = a1[15];
  *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
  sub_1000094D4(v21, v22);
  return a1;
}

uint64_t _s7CRAMMD5Vwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3A && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 58);
  }
  unsigned int v3 = (*(void *)(a1 + 56) >> 58) & 0xC;
  unsigned int v4 = (((*(unsigned char *)(a1 + 79) & 0x30 | v3) >> 3) & 0xFFFFFFC7 | (8 * (v3 & 7 | (*(void *)(a1 + 40) >> 60) & 3))) ^ 0x3F;
  if (v4 >= 0x39) {
    unsigned int v4 = -1;
  }
  return v4 + 1;
}

uint64_t _s7CRAMMD5Vwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x39)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 58;
    if (a3 >= 0x3A) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3A) {
      *(unsigned char *)(result + 128) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      uint64_t v3 = (-a2 >> 3) & 7 | (8 * (-a2 & 0x3F));
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = (unint64_t)((-a2 >> 3) & 3) << 60;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = (v3 << 58) & 0x3000000000000000;
      *(void *)(result + 64) = 0;
      *(void *)(result + 72) = (v3 << 56) & 0x3000000000000000;
    }
  }
  return result;
}

ValueMetadata *_s7CRAMMD5VMa()
{
  return &_s7CRAMMD5VN;
}

void *sub_10045322C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      unint64_t v29 = _swiftEmptyArrayStorage;
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_1004B885C(0, v7, 0);
      uint64_t v3 = _swiftEmptyArrayStorage;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = sub_1005E0550();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = sub_1005E0580();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = sub_1005E0550();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = sub_1005E0580();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        sub_10000566C(&qword_100715988);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1005F6670;
        *(void *)(v16 + 56) = &type metadata for UInt8;
        *(void *)(v16 + 64) = &protocol witness table for UInt8;
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = sub_1005E1C40();
        uint64_t v18 = v17;
        unint64_t v29 = v3;
        unint64_t v20 = v3[2];
        unint64_t v19 = v3[3];
        if (v20 >= v19 >> 1)
        {
          sub_1004B885C(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        v3[2] = v20 + 1;
        uint64_t v21 = &v3[2 * v20];
        v21[4] = v2;
        v21[5] = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

BOOL sub_1004535D4(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = a2[1];
  if (v2 >> 60 == 11) {
    return v3 >> 60 == 11;
  }
  if (v2 >> 60 == 15) {
    return v3 >> 60 == 15;
  }
  if (((v3 >> 60) | 4) == 0xF) {
    return 0;
  }
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  sub_10003E058(*a1, v2);
  sub_10003E058(v6, v3);
  char v7 = sub_10044B1A8(v5, v2, v6, v3);
  sub_10003E070(v6, v3);
  sub_10003E070(v5, v2);
  return v7 & 1;
}

uint64_t sub_1004536AC(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[7];
  v13[6] = a1[6];
  v13[7] = v3;
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  v13[2] = a1[2];
  void v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  long long v8 = a2[3];
  v14[2] = a2[2];
  v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  long long v9 = a2[4];
  long long v10 = a2[5];
  long long v11 = a2[7];
  v14[6] = a2[6];
  v14[7] = v11;
  v14[4] = v9;
  v14[5] = v10;
  return sub_100453874((uint64_t)v13, (uint64_t)v14) & 1;
}

void *sub_100453720()
{
  unint64_t v1 = v0[11];
  if (v1 >> 60 == 11)
  {
    sub_100443A80();
    swift_allocError();
    *(_OWORD *)uint64_t v2 = xmmword_1005F6950;
    *(unsigned char *)(v2 + 16) = 1;
    swift_willThrow();
  }
  else if (v1 >> 60 == 15)
  {
    return 0;
  }
  else
  {
    long long v3 = (void *)v0[10];
    *((_OWORD *)v0 + 5) = xmmword_1005F6760;
    unint64_t v0 = sub_100453AE4(v0[12], v0[13], v0[14], v0[15], v3, v1);
    sub_10003E070((uint64_t)v3, v1);
  }
  return v0;
}

uint64_t sub_1004537F8(uint64_t a1, unint64_t a2)
{
  if (*(void *)(v2 + 88) >> 60 == 15)
  {
    *(void *)(v2 + 80) = a1;
    *(void *)(v2 + 88) = a2;
    return sub_100008D24(a1, a2);
  }
  else
  {
    sub_100443A80();
    swift_allocError();
    *(_OWORD *)uint64_t v4 = xmmword_1005F6950;
    *(unsigned char *)(v4 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_100453874(uint64_t a1, uint64_t a2)
{
  sub_100443AD4(a1, (uint64_t)v25);
  sub_100443AD4(a2, (uint64_t)v24);
  if ((sub_100455D6C((uint64_t)v25, (uint64_t)v24) & 1) == 0) {
    goto LABEL_25;
  }
  sub_1003CF06C((_OWORD *)(a1 + 80), &v23);
  sub_1003CF06C((_OWORD *)(a2 + 80), &v22);
  sub_1003CF06C(&v23, &v26);
  uint64_t v4 = *((void *)&v26 + 1);
  if (*((void *)&v26 + 1) >> 60 == 11)
  {
    sub_1003CF06C(&v22, &v27);
    if (*((void *)&v27 + 1) >> 60 != 11)
    {
LABEL_25:
      char v20 = 0;
      return v20 & 1;
    }
  }
  else if (*((void *)&v26 + 1) >> 60 == 15)
  {
    sub_1003CF06C(&v22, &v27);
    if (*((void *)&v27 + 1) >> 60 != 15) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v5 = v26;
    sub_1003CF06C(&v22, &v27);
    uint64_t v6 = *((void *)&v27 + 1);
    if (((*((void *)&v27 + 1) >> 60) | 4) == 0xF) {
      goto LABEL_25;
    }
    uint64_t v7 = v27;
    sub_100453F50((uint64_t)&v23);
    sub_100453F50((uint64_t)&v22);
    char v8 = sub_10044B1A8(v5, v4, v7, v6);
    sub_100453F80((uint64_t)&v22);
    sub_100453F80((uint64_t)&v23);
    if ((v8 & 1) == 0) {
      goto LABEL_25;
    }
  }
  uint64_t v9 = *(void *)(a1 + 96);
  unint64_t v10 = *(void *)(a1 + 104);
  uint64_t v11 = 0;
  switch(v10 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(v9) - v9;
      if (__OFSUB__(HIDWORD(v9), v9))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        JUMPOUT(0x100453AC4);
      }
      uint64_t v11 = (int)v11;
LABEL_15:
      uint64_t v15 = *(void *)(a2 + 96);
      unint64_t v16 = *(void *)(a2 + 104);
      switch(v16 >> 62)
      {
        case 1uLL:
          LODWORD(v17) = HIDWORD(v15) - v15;
          if (__OFSUB__(HIDWORD(v15), v15)) {
            goto LABEL_29;
          }
          uint64_t v17 = (int)v17;
LABEL_20:
          if (v11 != v17) {
            goto LABEL_25;
          }
          if (v11 >= 1)
          {
            sub_100008D24(*(void *)(a2 + 96), *(void *)(a2 + 104));
            if ((sub_10044B7E4(v9, v10, v15, v16) & 1) == 0) {
              goto LABEL_25;
            }
          }
LABEL_23:
          char v20 = sub_100455C10(*(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a2 + 112), *(void *)(a2 + 120));
          break;
        case 2uLL:
          uint64_t v19 = *(void *)(v15 + 16);
          uint64_t v18 = *(void *)(v15 + 24);
          BOOL v14 = __OFSUB__(v18, v19);
          uint64_t v17 = v18 - v19;
          if (!v14) {
            goto LABEL_20;
          }
          goto LABEL_30;
        case 3uLL:
          if (v11) {
            goto LABEL_25;
          }
          goto LABEL_23;
        default:
          uint64_t v17 = BYTE6(v16);
          goto LABEL_20;
      }
      break;
    case 2uLL:
      uint64_t v13 = *(void *)(v9 + 16);
      uint64_t v12 = *(void *)(v9 + 24);
      BOOL v14 = __OFSUB__(v12, v13);
      uint64_t v11 = v12 - v13;
      if (!v14) {
        goto LABEL_15;
      }
      goto LABEL_28;
    case 3uLL:
      goto LABEL_15;
    default:
      uint64_t v11 = BYTE6(v10);
      goto LABEL_15;
  }
  return v20 & 1;
}

void *sub_100453AE4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t a6)
{
  uint64_t v35 = a1;
  unint64_t v36 = a2;
  uint64_t v10 = sub_1005E18D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000566C(&qword_100715968);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v37 = a5;
  unint64_t v38 = a6;
  uint64_t v41 = a3;
  unint64_t v42 = a4;
  sub_100008D24((uint64_t)a5, a6);
  sub_100008D24(a3, a4);
  sub_1005E18C0();
  sub_1005E1930();
  sub_100453EA4();
  sub_100453EFC();
  sub_1005E18E0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1000094D4((uint64_t)v37, v38);
  uint64_t v39 = v14;
  uint64_t v40 = sub_100007494(&qword_100715980, &qword_100715968);
  uint64_t v18 = sub_100021E04((uint64_t *)&v37);
  uint64_t v19 = v15;
  (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(v18, v17, v14);
  sub_10003BCDC(&v37, v39);
  sub_1005E0640();
  uint64_t v20 = v41;
  unint64_t v21 = v42;
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)&v37);
  unint64_t v37 = sub_10045322C(v20, v21);
  sub_10000566C(&qword_100715740);
  sub_100007494((unint64_t *)&qword_100715748, &qword_100715740);
  unint64_t v22 = sub_1005E1A80();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  sub_1000094D4(v20, v21);
  uint64_t v25 = sub_1004B94C4(0x20uLL, 0xE100000000000000);
  unint64_t v27 = v26;
  uint64_t v41 = v35;
  unint64_t v42 = v36;
  sub_100008D24(v35, v36);
  sub_1004C2D64(v25, v27);
  sub_1000094D4(v25, v27);
  __int16 v28 = (void *)v41;
  unint64_t v29 = v42;
  uint64_t v30 = sub_1004B94C4(v22, v24);
  unint64_t v32 = v31;
  unint64_t v37 = v28;
  unint64_t v38 = v29;
  sub_100008D24((uint64_t)v28, v29);
  sub_1004C2D64(v30, v32);
  sub_1000094D4(v30, v32);
  sub_1000094D4((uint64_t)v28, v29);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v14);
  return v37;
}

unint64_t sub_100453EA4()
{
  unint64_t result = qword_100715970;
  if (!qword_100715970)
  {
    sub_1005E1930();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715970);
  }
  return result;
}

unint64_t sub_100453EFC()
{
  unint64_t result = qword_100715978;
  if (!qword_100715978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715978);
  }
  return result;
}

uint64_t sub_100453F50(uint64_t a1)
{
  return a1;
}

uint64_t sub_100453F80(uint64_t a1)
{
  return a1;
}

ValueMetadata *_s7CRAMMD5V5StateOMa()
{
  return &_s7CRAMMD5V5StateON;
}

uint64_t sub_100453FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 1:
      swift_retain();
      goto LABEL_8;
    case 2:
      swift_retain();
      swift_retain();
      return swift_retain();
    case 3:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_8:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s5LoginVwxx(uint64_t a1)
{
  return sub_10044C910(*(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(unsigned char *)(a1 + 144));
}

uint64_t _s5LoginVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v21 = a2[8];
  unint64_t v22 = a2[9];
  sub_10044CA28(*a2, v5, v6, v7, v8, v9, v10, v11, v21, v22);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v21;
  *(void *)(a1 + 72) = v22;
  uint64_t v12 = v2[10];
  uint64_t v13 = v2[11];
  uint64_t v14 = v2[12];
  uint64_t v15 = v2[13];
  uint64_t v16 = v2[14];
  uint64_t v17 = v2[15];
  uint64_t v18 = v2[16];
  uint64_t v19 = v2[17];
  LOBYTE(v2) = *((unsigned char *)v2 + 144);
  sub_100453FC0(v12, v13, v14, v15, v16, v17, v18, v19, (char)v2);
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  *(void *)(a1 + 104) = v15;
  *(void *)(a1 + 112) = v16;
  *(void *)(a1 + 120) = v17;
  *(void *)(a1 + 128) = v18;
  *(void *)(a1 + 136) = v19;
  *(unsigned char *)(a1 + 144) = (_BYTE)v2;
  return a1;
}

uint64_t _s5LoginVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v40 = a2[8];
  unint64_t v41 = a2[9];
  sub_10044CA28(*a2, v5, v6, v7, v8, v9, v10, v11, v40, v41);
  uint64_t v12 = *(void *)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  unint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  unint64_t v21 = *(void *)(a1 + 72);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v40;
  *(void *)(a1 + 72) = v41;
  sub_10044B008(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v22 = v2[10];
  uint64_t v23 = v2[11];
  uint64_t v24 = v2[12];
  uint64_t v25 = v2[13];
  uint64_t v26 = v2[14];
  uint64_t v27 = v2[15];
  uint64_t v28 = v2[16];
  uint64_t v29 = v2[17];
  LOBYTE(v2) = *((unsigned char *)v2 + 144);
  sub_100453FC0(v22, v23, v24, v25, v26, v27, v28, v29, (char)v2);
  uint64_t v30 = *(void *)(a1 + 80);
  uint64_t v31 = *(void *)(a1 + 88);
  uint64_t v32 = *(void *)(a1 + 96);
  uint64_t v33 = *(void *)(a1 + 104);
  uint64_t v34 = *(void *)(a1 + 112);
  uint64_t v35 = *(void *)(a1 + 120);
  uint64_t v36 = *(void *)(a1 + 128);
  uint64_t v37 = *(void *)(a1 + 136);
  char v38 = *(unsigned char *)(a1 + 144);
  *(void *)(a1 + 80) = v22;
  *(void *)(a1 + 88) = v23;
  *(void *)(a1 + 96) = v24;
  *(void *)(a1 + 104) = v25;
  *(void *)(a1 + 112) = v26;
  *(void *)(a1 + 120) = v27;
  *(void *)(a1 + 128) = v28;
  *(void *)(a1 + 136) = v29;
  *(unsigned char *)(a1 + 144) = (_BYTE)v2;
  sub_10044C910(v30, v31, v32, v33, v34, v35, v36, v37, v38);
  return a1;
}

__n128 _s5LoginVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s5LoginVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  unint64_t v13 = *(void *)(a1 + 72);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_10044B008(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  char v16 = *(unsigned char *)(a2 + 144);
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v18 = *(void *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 104);
  uint64_t v21 = *(void *)(a1 + 112);
  uint64_t v22 = *(void *)(a1 + 120);
  uint64_t v23 = *(void *)(a1 + 128);
  uint64_t v24 = *(void *)(a1 + 136);
  char v25 = *(unsigned char *)(a1 + 144);
  long long v26 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v26;
  long long v27 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v27;
  *(unsigned char *)(a1 + 144) = v16;
  sub_10044C910(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t _s5LoginVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 145)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 144);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s5LoginVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 145) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 144) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *_s5LoginVMa()
{
  return &_s5LoginVN;
}

uint64_t sub_1004544FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100454684(v1, a1);
}

uint64_t sub_100454508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 112);
  uint64_t v8 = *(void *)(v1 + 120);
  uint64_t v10 = *(void *)(v1 + 128);
  uint64_t v9 = *(void *)(v1 + 136);
  uint64_t v13 = v9;
  char v11 = *(unsigned char *)(v1 + 144);
  uint64_t result = sub_100453FC0(v3, v4, v5, v6, v7, v8, v10, v9, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 64) = v11;
  return result;
}

uint64_t sub_1004545A4()
{
  sub_100443A80();
  swift_allocError();
  *(_OWORD *)uint64_t v0 = xmmword_1005F6770;
  *(unsigned char *)(v0 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1004545FC(uint64_t a1, uint64_t a2)
{
  sub_10044AF60(a1, (uint64_t)v8);
  sub_1004546E0(a1 + 80, (uint64_t)v6);
  sub_10044AF60(a2, (uint64_t)v9);
  sub_1004546E0(a2 + 80, (uint64_t)v7);
  if (sub_10045688C(v8, v9)) {
    char v4 = sub_1004E9C3C((uint64_t)v6, (uint64_t)v7);
  }
  else {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_100454684(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004546E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_100454740()
{
  unint64_t result = qword_100715990;
  if (!qword_100715990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715990);
  }
  return result;
}

void *sub_100454794@<X0>(uint64_t *a1@<X8>)
{
  sub_100443AD4(v1, (uint64_t)v69);
  uint64_t v3 = v69[0];
  unint64_t v4 = v69[3];
  unint64_t v66 = v69[1];
  uint64_t v67 = v69[2];
  uint64_t v6 = v69[4];
  unint64_t v5 = v69[5];
  uint64_t v7 = v69[6];
  uint64_t v8 = v69[7];
  uint64_t v9 = v69[8];
  unint64_t v10 = v69[9];
  sub_100443AD4(v1, (uint64_t)&v70);
  uint64_t v11 = v77;
  if ((v77 & 0x1000000000000000) != 0)
  {
    uint64_t v55 = v3;
    unint64_t v56 = v5;
    uint64_t v57 = v7;
    v77 &= ~0x1000000000000000uLL;
    uint64_t v15 = v70;
    unint64_t v14 = v71;
    unint64_t v16 = v73;
    unint64_t v58 = v72;
    uint64_t v59 = v74;
    unint64_t v17 = v79;
    unint64_t v63 = v75;
    uint64_t v65 = v78;
    uint64_t v61 = v76;
    switch((v79 >> 59) & 6 | ((v11 & 0x2000000000000000) != 0))
    {
      case 1uLL:
        unint64_t v26 = v11 & 0xCFFFFFFFFFFFFFFFLL;
        uint64_t v27 = v70;
        unint64_t v28 = v79 & 0xCFFFFFFFFFFFFFFFLL;
        sub_100008D24(v70, v71);
        sub_100008D24(v58, v16);
        sub_100008D24(v59, v63);
        sub_100008D24(v61, v26);
        sub_100008D24(v65, v28);
        sub_100008D24(v27, v14);
        sub_100008D24(v58, v16);
        sub_100008D24(v59, v63);
        sub_100008D24(v61, v26);
        sub_100008D24(v65, v28);
        sub_10044313C(v27, v14, v58, v16, v59, v63, v61, v26, (uint64_t *)v68, v65, v28);
        a1[3] = (uint64_t)&_s10AppleTokenVN;
        a1[4] = (uint64_t)&off_1006F2E40;
        uint64_t v29 = (_OWORD *)swift_allocObject();
        *a1 = (uint64_t)v29;
        sub_1000094D4(v65, v28);
        sub_1000094D4(v61, v26);
        sub_1000094D4(v59, v63);
        sub_1000094D4(v58, v16);
        unint64_t result = (void *)sub_1000094D4(v27, v14);
        long long v30 = v68[3];
        v29[3] = v68[2];
        v29[4] = v30;
        long long v31 = v68[5];
        v29[5] = v68[4];
        v29[6] = v31;
        long long v32 = v68[1];
        v29[1] = v68[0];
        v29[2] = v32;
        return result;
      case 2uLL:
        unint64_t v33 = v10;
        a1[3] = (uint64_t)&_s11AppleToken2VN;
        a1[4] = (uint64_t)&off_1006F2F90;
        unint64_t v34 = v17;
        unint64_t v54 = v11 & 0xEFFFFFFFFFFFFFFFLL;
        uint64_t v35 = (void *)swift_allocObject();
        *a1 = (uint64_t)v35;
        v35[2] = v15;
        v35[3] = v14;
        v35[4] = v58;
        v35[5] = v16;
        v35[6] = v59;
        v35[7] = v63;
        v35[8] = v61;
        v35[9] = v54;
        void v35[10] = v65;
        v35[11] = v34;
        v35[12] = v15;
        v35[13] = v14;
        sub_100443318(v55, v66, v67, v4, v6, v56, v57, v8 & 0xEFFFFFFFFFFFFFFFLL, v9, v33);
        return (void *)sub_100443318(v55, v66, v67, v4, v6, v56, v57, v8 & 0xEFFFFFFFFFFFFFFFLL, v9, v33);
      case 3uLL:
        unint64_t v36 = v79;
        unint64_t v37 = v11 & 0xEFFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v38 = v14;
        uint64_t v39 = sub_1004636A8(v15, v14, v58, v16);
        uint64_t v40 = v15;
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1[3] = (uint64_t)&_s10OAuthTokenVN;
        a1[4] = (uint64_t)&off_1006F4060;
        unint64_t result = (void *)swift_allocObject();
        *a1 = (uint64_t)result;
        result[2] = v40;
        result[3] = v38;
        result[4] = v58;
        result[5] = v16;
        result[6] = v59;
        result[7] = v63;
        result[8] = v61;
        result[9] = v37;
        result[10] = v65;
        result[11] = v36;
        result[12] = v39;
        result[13] = v42;
        return result;
      case 4uLL:
        a1[3] = (uint64_t)&_s7CRAMMD5VN;
        a1[4] = (uint64_t)&off_1006F3430;
        unint64_t v43 = v14;
        unint64_t v44 = v17;
        uint64_t v45 = v15;
        unint64_t v46 = v11 & 0xEFFFFFFFFFFFFFFFLL;
        uint64_t v47 = swift_allocObject();
        *a1 = v47;
        *(void *)(v47 + 16) = v45;
        *(void *)(v47 + 24) = v43;
        *(void *)(v47 + 32) = v58;
        *(void *)(v47 + 40) = v16;
        *(void *)(v47 + 48) = v59;
        *(void *)(v47 + 56) = v63;
        *(void *)(v47 + 64) = v61;
        *(void *)(v47 + 72) = v46;
        *(void *)(v47 + 80) = v65;
        *(void *)(v47 + 88) = v44;
        *(_OWORD *)(v47 + 96) = xmmword_1005F66D0;
        *(void *)(v47 + 112) = v45;
        *(void *)(v47 + 120) = v43;
        *(void *)(v47 + 128) = v58;
        *(void *)(v47 + 136) = v16;
        sub_100008D24(v45, v43);
        sub_100008D24(v58, v16);
        sub_100008D24(v45, v43);
        return (void *)sub_100008D24(v58, v16);
      case 5uLL:
        a1[3] = (uint64_t)&_s4NTLMVN;
        a1[4] = (uint64_t)&off_1006F3EF0;
        unint64_t v48 = v14;
        unint64_t v49 = v17;
        uint64_t v50 = v15;
        unint64_t v51 = v11 & 0xEFFFFFFFFFFFFFFFLL;
        uint64_t v52 = swift_allocObject();
        *a1 = v52;
        *(unsigned char *)(v52 + 16) = 0;
        goto LABEL_11;
      case 6uLL:
        a1[3] = (uint64_t)&_s4NTLMVN;
        a1[4] = (uint64_t)&off_1006F3EF0;
        unint64_t v48 = v14;
        unint64_t v49 = v17;
        uint64_t v50 = v15;
        unint64_t v51 = v11 & 0xEFFFFFFFFFFFFFFFLL;
        uint64_t v52 = swift_allocObject();
        *a1 = v52;
        *(unsigned char *)(v52 + 16) = 1;
LABEL_11:
        *(void *)(v52 + 24) = v50;
        *(void *)(v52 + 32) = v48;
        *(void *)(v52 + 40) = v58;
        *(void *)(v52 + 48) = v16;
        *(void *)(v52 + 56) = v50;
        *(void *)(v52 + 64) = v48;
        *(void *)(v52 + 72) = v58;
        *(void *)(v52 + 80) = v16;
        *(void *)(v52 + 88) = v59;
        *(void *)(v52 + 96) = v63;
        *(void *)(v52 + 104) = v61;
        *(void *)(v52 + 112) = v51;
        *(void *)(v52 + 120) = v65;
        *(void *)(v52 + 128) = v49;
        *(_OWORD *)(v52 + 136) = 0u;
        *(_OWORD *)(v52 + 152) = 0u;
        *(_OWORD *)(v52 + 168) = 0u;
        *(_DWORD *)(v52 + 184) = 0;
        goto LABEL_12;
      default:
        unint64_t v18 = v79;
        unint64_t v53 = v11 & 0xEFFFFFFFFFFFFFFFLL;
        sub_10000566C(&qword_100715650);
        unint64_t v19 = v14;
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005F66F0;
        *(_OWORD *)(inited + 32) = xmmword_100622570;
        *(void *)(inited + 48) = v15;
        *(void *)(inited + 56) = v19;
        *(void *)(inited + 64) = v58;
        *(void *)(inited + 72) = v16;
        sub_100008D24(v15, v19);
        sub_100008D24(v58, v16);
        sub_100008D24(v15, v19);
        sub_100008D24(v58, v16);
        sub_100008D24(v15, v19);
        sub_100008D24(v58, v16);
        uint64_t v21 = sub_100443C18(inited);
        uint64_t v23 = v22;
        swift_setDeallocating();
        swift_arrayDestroy();
        a1[3] = (uint64_t)&_s5PlainVN;
        a1[4] = (uint64_t)&off_1006F42C8;
        uint64_t v24 = (void *)swift_allocObject();
        *a1 = (uint64_t)v24;
        sub_1000094D4(v58, v16);
        unint64_t result = (void *)sub_1000094D4(v15, v19);
        v24[2] = v15;
        v24[3] = v19;
        v24[4] = v58;
        v24[5] = v16;
        v24[6] = v59;
        v24[7] = v63;
        v24[8] = v61;
        v24[9] = v53;
        v24[10] = v65;
        v24[11] = v18;
        v24[12] = v21;
        v24[13] = v23;
        return result;
    }
  }
  unint64_t v12 = v71;
  unint64_t v62 = v72;
  uint64_t v64 = v70;
  unint64_t v60 = v73;
  a1[3] = (uint64_t)&_s5LoginVN;
  a1[4] = (uint64_t)&off_1006F3568;
  uint64_t v13 = swift_allocObject();
  *a1 = v13;
  *(void *)(v13 + 16) = v3;
  *(void *)(v13 + 24) = v66;
  *(void *)(v13 + 32) = v67;
  *(void *)(v13 + 40) = v4;
  *(void *)(v13 + 48) = v6;
  *(void *)(v13 + 56) = v5;
  *(void *)(v13 + 64) = v7;
  *(void *)(v13 + 72) = v8;
  *(void *)(v13 + 80) = v9;
  *(void *)(v13 + 88) = v10;
  *(void *)(v13 + 96) = v64;
  *(void *)(v13 + 104) = v12;
  *(void *)(v13 + 112) = v62;
  *(void *)(v13 + 120) = v60;
  *(_OWORD *)(v13 + 128) = 0u;
  *(_OWORD *)(v13 + 144) = 0u;
  *(unsigned char *)(v13 + 160) = 0;
LABEL_12:
  swift_bridgeObjectRetain_n();
  return (void *)swift_bridgeObjectRetain_n();
}

void *sub_100454ED0()
{
  sub_100443AD4((uint64_t)v0, (uint64_t)v21);
  uint64_t v1 = v21[0];
  unint64_t v2 = v21[1];
  sub_100443AD4((uint64_t)v0, (uint64_t)&v22);
  switch((v31 >> 59) & 6 | ((v29 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      v29 &= ~0x2000000000000000uLL;
      unint64_t v8 = v29;
      v31 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v20 = v31;
      uint64_t v10 = v22;
      unint64_t v9 = v23;
      uint64_t v11 = v24;
      unint64_t v12 = v25;
      uint64_t v14 = v26;
      unint64_t v13 = v27;
      uint64_t v15 = v28;
      uint64_t v18 = v24;
      uint64_t v19 = v30;
      sub_1005E3410(1uLL);
      sub_100008D24(v10, v9);
      sub_100008D24(v11, v12);
      sub_100008D24(v14, v13);
      sub_100008D24(v15, v8);
      sub_100008D24(v19, v20);
      sub_1005E08B0();
      sub_1005E08B0();
      sub_1005E08B0();
      sub_1005E08B0();
      sub_1005E08B0();
      sub_1000094D4(v15, v8);
      sub_1000094D4(v14, v13);
      sub_1000094D4(v18, v12);
      sub_1000094D4(v10, v9);
      return (void *)sub_1000094D4(v19, v20);
    case 2uLL:
      v29 &= ~0x2000000000000000uLL;
      v31 &= 0xCFFFFFFFFFFFFFFFLL;
      sub_1005E3410(2uLL);
      sub_100008D24(v1, v2);
      sub_1005E08B0();
      return sub_100456A30(v0, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1004434DC);
    case 3uLL:
      v29 &= ~0x2000000000000000uLL;
      v31 &= 0xCFFFFFFFFFFFFFFFLL;
      Swift::UInt v17 = 3;
      goto LABEL_10;
    case 4uLL:
      v29 &= ~0x2000000000000000uLL;
      v31 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v3 = v22;
      unint64_t v4 = v23;
      uint64_t v5 = v24;
      unint64_t v6 = v25;
      Swift::UInt v7 = 4;
      goto LABEL_7;
    case 5uLL:
      v29 &= ~0x2000000000000000uLL;
      v31 &= 0xCFFFFFFFFFFFFFFFLL;
      Swift::UInt v17 = 5;
      goto LABEL_10;
    case 6uLL:
      v29 &= ~0x2000000000000000uLL;
      v31 &= 0xCFFFFFFFFFFFFFFFLL;
      Swift::UInt v17 = 6;
LABEL_10:
      sub_1005E3410(v17);
      sub_1005E1DB0();
      unint64_t result = (void *)sub_1005E1DB0();
      break;
    default:
      v29 &= ~0x2000000000000000uLL;
      v31 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v3 = v22;
      unint64_t v4 = v23;
      uint64_t v5 = v24;
      unint64_t v6 = v25;
      Swift::UInt v7 = 0;
LABEL_7:
      sub_1005E3410(v7);
      sub_100008D24(v3, v4);
      sub_100008D24(v5, v6);
      sub_1005E08B0();
      sub_1005E08B0();
      sub_1000094D4(v3, v4);
      unint64_t result = (void *)sub_1000094D4(v5, v6);
      break;
  }
  return result;
}

Swift::Int sub_100455210()
{
  sub_100443AD4(v0, (uint64_t)v2);
  sub_1005E33F0();
  sub_100454ED0();
  return sub_1005E3470();
}

void *sub_100455260()
{
  sub_100443AD4(v0, (uint64_t)&v2);
  return sub_100454ED0();
}

Swift::Int sub_1004552A0()
{
  sub_100443AD4(v0, (uint64_t)v2);
  sub_1005E33F0();
  sub_100454ED0();
  return sub_1005E3470();
}

uint64_t sub_1004552F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004559A0(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_100443AD4, (uint64_t (*)(unsigned char *, unsigned char *))sub_100455D6C);
}

Swift::Int sub_100455320()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v11 = v0[3];
  uint64_t v4 = v0[4];
  unint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  unint64_t v9 = v0[9];
  sub_1005E33F0();
  if ((v7 & 0x1000000000000000) != 0)
  {
    sub_1005E3410(1uLL);
    sub_100443318(v2, v1, v3, v11, v4, v5, v6, v7 & 0xEFFFFFFFFFFFFFFFLL, v8, v9);
    sub_100454ED0();
    sub_10044B008(v2, v1, v3, v11, v4, v5, v6, v7, v8, v9);
  }
  else
  {
    sub_1005E3410(0);
    sub_1005E1DB0();
    sub_1005E1DB0();
  }
  return sub_1005E3470();
}

uint64_t sub_100455458()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[7];
  if ((v4 & 0x1000000000000000) != 0)
  {
    unint64_t v6 = v0[9];
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[4];
    unint64_t v11 = v0[5];
    unint64_t v10 = v0[3];
    uint64_t v9 = v0[8];
    sub_1005E3410(1uLL);
    sub_100443318(v2, v1, v3, v10, v8, v11, v7, v4 & 0xEFFFFFFFFFFFFFFFLL, v9, v6);
    sub_100454ED0();
    return sub_10044B008(v2, v1, v3, v10, v8, v11, v7, v4, v9, v6);
  }
  else
  {
    sub_1005E3410(0);
    sub_1005E1DB0();
    return sub_1005E1DB0();
  }
}

Swift::Int sub_1004555A0()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v11 = v0[3];
  uint64_t v4 = v0[4];
  unint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  unint64_t v9 = v0[9];
  sub_1005E33F0();
  if ((v7 & 0x1000000000000000) != 0)
  {
    sub_1005E3410(1uLL);
    sub_100443318(v2, v1, v3, v11, v4, v5, v6, v7 & 0xEFFFFFFFFFFFFFFFLL, v8, v9);
    sub_100454ED0();
    sub_10044B008(v2, v1, v3, v11, v4, v5, v6, v7, v8, v9);
  }
  else
  {
    sub_1005E3410(0);
    sub_1005E1DB0();
    sub_1005E1DB0();
  }
  return sub_1005E3470();
}

uint64_t sub_1004556D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004559A0(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_10044AF60, (uint64_t (*)(unsigned char *, unsigned char *))sub_10045688C);
}

uint64_t sub_100455700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004559A0(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_10044AF60, (uint64_t (*)(unsigned char *, unsigned char *))sub_100456A84);
}

uint64_t sub_10045572C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004559A0(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_10044AF60, (uint64_t (*)(unsigned char *, unsigned char *))sub_100455758);
}

BOOL sub_100455758(uint64_t a1, uint64_t a2)
{
  sub_100443AD4(a2, (uint64_t)v13);
  uint64_t v3 = v14;
  v14 &= ~0x1000000000000000uLL;
  if ((v3 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)v13, (uint64_t)v15);
    sub_100443AD4((uint64_t)v15, (uint64_t)v16);
    unint64_t v4 = qword_100626160[(v18 >> 59) & 6 | (v17 >> 61) & 1];
    v17 &= ~0x2000000000000000uLL;
    v18 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v4 = 8;
  }
  sub_100443AD4(a1, (uint64_t)v7);
  if ((v8 & 0x1000000000000000) != 0)
  {
    v8 &= ~0x1000000000000000uLL;
    sub_100443AD4((uint64_t)v7, (uint64_t)v9);
    sub_100443AD4((uint64_t)v9, (uint64_t)v10);
    unint64_t v5 = qword_100626160[(v12 >> 59) & 6 | (v11 >> 61) & 1];
  }
  else
  {
    unint64_t v5 = 8;
  }
  return v4 >= v5;
}

uint64_t sub_100455854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004559A0(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_10044AF60, (uint64_t (*)(unsigned char *, unsigned char *))sub_100455880);
}

BOOL sub_100455880(uint64_t a1, uint64_t a2)
{
  sub_100443AD4(a1, (uint64_t)v13);
  uint64_t v3 = v14;
  v14 &= ~0x1000000000000000uLL;
  if ((v3 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)v13, (uint64_t)v15);
    sub_100443AD4((uint64_t)v15, (uint64_t)v16);
    unint64_t v4 = qword_100626160[(v18 >> 59) & 6 | (v17 >> 61) & 1];
    v17 &= ~0x2000000000000000uLL;
    v18 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v4 = 8;
  }
  sub_100443AD4(a2, (uint64_t)v7);
  if ((v8 & 0x1000000000000000) != 0)
  {
    v8 &= ~0x1000000000000000uLL;
    sub_100443AD4((uint64_t)v7, (uint64_t)v9);
    sub_100443AD4((uint64_t)v9, (uint64_t)v10);
    unint64_t v5 = qword_100626160[(v12 >> 59) & 6 | (v11 >> 61) & 1];
  }
  else
  {
    unint64_t v5 = 8;
  }
  return v4 >= v5;
}

uint64_t sub_100455974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004559A0(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_10044AF60, (uint64_t (*)(unsigned char *, unsigned char *))sub_100455A08);
}

uint64_t sub_1004559A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unsigned char *), uint64_t (*a6)(unsigned char *, unsigned char *))
{
  a5(a1, v10);
  a5(a2, v11);
  return a6(v10, v11) & 1;
}

BOOL sub_100455A08(uint64_t a1, uint64_t a2)
{
  sub_100443AD4(a2, (uint64_t)v13);
  uint64_t v3 = v14;
  v14 &= ~0x1000000000000000uLL;
  if ((v3 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)v13, (uint64_t)v15);
    sub_100443AD4((uint64_t)v15, (uint64_t)v16);
    unint64_t v4 = qword_100626160[(v18 >> 59) & 6 | (v17 >> 61) & 1];
    v17 &= ~0x2000000000000000uLL;
    v18 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v4 = 8;
  }
  sub_100443AD4(a1, (uint64_t)v7);
  if ((v8 & 0x1000000000000000) != 0)
  {
    v8 &= ~0x1000000000000000uLL;
    sub_100443AD4((uint64_t)v7, (uint64_t)v9);
    sub_100443AD4((uint64_t)v9, (uint64_t)v10);
    unint64_t v5 = qword_100626160[(v12 >> 59) & 6 | (v11 >> 61) & 1];
  }
  else
  {
    unint64_t v5 = 8;
  }
  return v4 < v5;
}

uint64_t sub_100455B04()
{
  uint64_t result = sub_1005E1CD0();
  qword_1007621B0 = result;
  *(void *)algn_1007621B8 = v1;
  return result;
}

uint64_t sub_100455B38()
{
  uint64_t result = sub_1005E1CD0();
  qword_1007621C0 = result;
  *(void *)algn_1007621C8 = v1;
  return result;
}

uint64_t sub_100455B70()
{
  uint64_t result = sub_1005E1CD0();
  qword_1007621D0 = result;
  *(void *)algn_1007621D8 = v1;
  return result;
}

uint64_t sub_100455BA0()
{
  uint64_t result = sub_1005E1CD0();
  qword_1007621E0 = result;
  *(void *)algn_1007621E8 = v1;
  return result;
}

uint64_t sub_100455BD8()
{
  uint64_t result = sub_1005E1CD0();
  qword_1007621F0 = result;
  *(void *)algn_1007621F8 = v1;
  return result;
}

uint64_t sub_100455C10(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x100455D4CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_100008D24(a3, a4);
              char v15 = sub_10044B7E4(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100455D6C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  sub_100443AD4(a1, (uint64_t)v74);
  uint64_t v4 = v74[0];
  unint64_t v5 = v74[1];
  sub_100443AD4(v3, (uint64_t)&v85);
  switch((v94 >> 59) & 6 | ((v92 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      unint64_t v14 = v92 & 0xDFFFFFFFFFFFFFFFLL;
      unint64_t v15 = v94 & 0xCFFFFFFFFFFFFFFFLL;
      v92 &= ~0x2000000000000000uLL;
      v94 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v16 = v85;
      unint64_t v73 = v86;
      uint64_t v18 = v87;
      unint64_t v17 = v88;
      uint64_t v20 = v89;
      unint64_t v19 = v90;
      uint64_t v21 = v91;
      uint64_t v22 = v93;
      sub_100443AD4(a2, (uint64_t)&v75);
      if (((v84 >> 59) & 6 | ((v82 & 0x2000000000000000) != 0)) != 1) {
        goto LABEL_80;
      }
      unint64_t v67 = v14;
      v82 &= ~0x2000000000000000uLL;
      unint64_t v68 = v82;
      v84 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v23 = v84;
      uint64_t v24 = v21;
      uint64_t v25 = v75;
      uint64_t v65 = v75;
      unint64_t v66 = v19;
      unint64_t v69 = v15;
      unint64_t v26 = v76;
      uint64_t v70 = v77;
      uint64_t v71 = v22;
      unint64_t v72 = v78;
      uint64_t v27 = v81;
      unint64_t v63 = v80;
      uint64_t v64 = v79;
      uint64_t v28 = v83;
      uint64_t v29 = v24;
      sub_100008D24(v16, v73);
      sub_100008D24(v25, v26);
      sub_100008D24(v18, v17);
      sub_100008D24(v20, v66);
      sub_100008D24(v29, v67);
      sub_100008D24(v71, v69);
      sub_100008D24(v70, v72);
      sub_100008D24(v64, v63);
      sub_100008D24(v27, v68);
      sub_100008D24(v28, v23);
      uint64_t v62 = v16;
      if (sub_100455C10(v16, v73, v65, v26))
      {
        if (sub_100455C10(v18, v17, v70, v72))
        {
          if (sub_100455C10(v20, v66, v64, v63) & 1) != 0 && (sub_100455C10(v29, v67, v27, v68))
          {
            char v30 = sub_100455C10(v71, v69, v28, v23);
            sub_1000094D4(v28, v23);
            sub_1000094D4(v27, v68);
            sub_1000094D4(v64, v63);
            sub_1000094D4(v70, v72);
            sub_1000094D4(v71, v69);
            sub_1000094D4(v29, v67);
            sub_1000094D4(v20, v66);
            sub_1000094D4(v18, v17);
            sub_1000094D4(v65, v26);
            sub_1000094D4(v62, v73);
            return v30 & 1;
          }
          sub_1000094D4(v28, v23);
          sub_1000094D4(v27, v68);
          sub_1000094D4(v64, v63);
          sub_1000094D4(v70, v72);
          sub_1000094D4(v71, v69);
          sub_1000094D4(v29, v67);
          sub_1000094D4(v20, v66);
          unint64_t v42 = v17;
          uint64_t v41 = v18;
        }
        else
        {
          sub_1000094D4(v28, v23);
          sub_1000094D4(v27, v68);
          sub_1000094D4(v64, v63);
          sub_1000094D4(v70, v72);
          sub_1000094D4(v71, v69);
          sub_1000094D4(v29, v67);
          sub_1000094D4(v20, v66);
          uint64_t v41 = v18;
          unint64_t v42 = v17;
        }
        sub_1000094D4(v41, v42);
        uint64_t v39 = v65;
        unint64_t v40 = v26;
      }
      else
      {
        sub_1000094D4(v28, v23);
        sub_1000094D4(v27, v68);
        sub_1000094D4(v64, v63);
        sub_1000094D4(v70, v72);
        sub_1000094D4(v71, v69);
        sub_1000094D4(v29, v67);
        sub_1000094D4(v20, v66);
        sub_1000094D4(v18, v17);
        uint64_t v39 = v65;
        unint64_t v40 = v26;
      }
      sub_1000094D4(v39, v40);
      uint64_t v59 = v16;
      unint64_t v60 = v73;
      goto LABEL_79;
    case 2uLL:
      v92 &= ~0x2000000000000000uLL;
      v94 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v6 = v85;
      int64_t v13 = v86;
      sub_100443AD4(a2, (uint64_t)&v75);
      if (((v84 >> 59) & 6 | ((v82 & 0x2000000000000000) != 0)) == 2)
      {
        v82 &= ~0x2000000000000000uLL;
        v84 &= 0xCFFFFFFFFFFFFFFFLL;
        unint64_t v7 = v75;
        unint64_t v8 = v76;
        uint64_t v9 = 0;
        switch((unint64_t)v13 >> 62)
        {
          case 1uLL:
            if (!__OFSUB__(HIDWORD(v6), v6))
            {
              uint64_t v9 = HIDWORD(v6) - (int)v6;
LABEL_34:
              sub_100008D24(v4, v5);
LABEL_35:
              switch(v8 >> 62)
              {
                case 1uLL:
                  goto LABEL_45;
                case 2uLL:
                  uint64_t v50 = *(void *)(v7 + 16);
                  uint64_t v49 = *(void *)(v7 + 24);
                  BOOL v51 = __OFSUB__(v49, v50);
                  uint64_t v45 = v49 - v50;
                  if (!v51) {
                    goto LABEL_48;
                  }
                  goto LABEL_87;
                case 3uLL:
                  if (v9) {
                    goto LABEL_53;
                  }
                  goto LABEL_57;
                default:
                  uint64_t v45 = BYTE6(v8);
                  goto LABEL_48;
              }
            }
            __break(1u);
LABEL_83:
            __break(1u);
            break;
          case 2uLL:
            uint64_t v44 = *(void *)(v6 + 16);
            uint64_t v43 = *(void *)(v6 + 24);
            uint64_t v9 = v43 - v44;
            if (!__OFSUB__(v43, v44)) {
              goto LABEL_34;
            }
            goto LABEL_83;
          case 3uLL:
            goto LABEL_35;
          default:
            uint64_t v9 = BYTE6(v13);
            goto LABEL_35;
        }
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        JUMPOUT(0x100456810);
      }
      goto LABEL_80;
    case 3uLL:
      v92 &= ~0x2000000000000000uLL;
      v94 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v31 = v85;
      unint64_t v32 = v86;
      unint64_t v33 = v87;
      unint64_t v34 = v88;
      sub_100443AD4(a2, (uint64_t)&v75);
      unint64_t v35 = v82;
      unint64_t v36 = v84;
      if (((v84 >> 59) & 6 | ((v82 & 0x2000000000000000) != 0)) != 3) {
        goto LABEL_80;
      }
      goto LABEL_22;
    case 4uLL:
      v92 &= ~0x2000000000000000uLL;
      v94 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v6 = v85;
      unint64_t v3 = v86;
      unint64_t v8 = v87;
      unint64_t v7 = v88;
      sub_100443AD4(a2, (uint64_t)&v75);
      if (((v84 >> 59) & 6 | ((v82 & 0x2000000000000000) != 0)) != 4) {
        goto LABEL_80;
      }
      v82 &= ~0x2000000000000000uLL;
      v84 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v9 = v75;
      unint64_t v10 = v76;
      uint64_t v12 = v77;
      unint64_t v11 = v78;
      int64_t v13 = 0;
      switch(v3 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6)) {
            goto LABEL_84;
          }
          int64_t v13 = HIDWORD(v6) - (int)v6;
LABEL_40:
          sub_100008D24(v6, v3);
LABEL_41:
          switch(v10 >> 62)
          {
            case 1uLL:
              LODWORD(v48) = HIDWORD(v9) - v9;
              if (!__OFSUB__(HIDWORD(v9), v9)) {
                goto LABEL_67;
              }
              __break(1u);
LABEL_45:
              LODWORD(v45) = HIDWORD(v7) - v7;
              if (__OFSUB__(HIDWORD(v7), v7)) {
                goto LABEL_86;
              }
              uint64_t v45 = (int)v45;
LABEL_48:
              if (v9 != v45)
              {
LABEL_53:
                sub_100456A30((void *)v3, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1004434DC);
                goto LABEL_80;
              }
              if (v9 < 1)
              {
LABEL_57:
                sub_100456A30((void *)v3, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1004434DC);
                char v30 = 1;
                return v30 & 1;
              }
              sub_100008D24(v7, v8);
              char v52 = sub_10044B7E4(v6, v13, v7, v8);
              sub_100456A30((void *)v3, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_1004434DC);
              if ((v52 & 1) == 0) {
                goto LABEL_80;
              }
              break;
            case 2uLL:
              uint64_t v54 = *(void *)(v9 + 16);
              uint64_t v53 = *(void *)(v9 + 24);
              BOOL v51 = __OFSUB__(v53, v54);
              uint64_t v48 = v53 - v54;
              if (!v51) {
                goto LABEL_69;
              }
              __break(1u);
              goto LABEL_57;
            case 3uLL:
              goto LABEL_64;
            default:
              goto LABEL_63;
          }
          break;
        case 2uLL:
          uint64_t v47 = *(void *)(v6 + 16);
          uint64_t v46 = *(void *)(v6 + 24);
          int64_t v13 = v46 - v47;
          if (!__OFSUB__(v46, v47)) {
            goto LABEL_40;
          }
          goto LABEL_85;
        case 3uLL:
          goto LABEL_41;
        default:
          int64_t v13 = BYTE6(v3);
          goto LABEL_41;
      }
      goto LABEL_27;
    case 5uLL:
      v92 &= ~0x2000000000000000uLL;
      v94 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v31 = v85;
      unint64_t v32 = v86;
      unint64_t v33 = v87;
      unint64_t v34 = v88;
      sub_100443AD4(a2, (uint64_t)&v75);
      unint64_t v35 = v82;
      unint64_t v36 = v84;
      if (((v84 >> 59) & 6 | ((v82 & 0x2000000000000000) != 0)) != 5) {
        goto LABEL_80;
      }
      goto LABEL_22;
    case 6uLL:
      v92 &= ~0x2000000000000000uLL;
      v94 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v31 = v85;
      unint64_t v32 = v86;
      unint64_t v33 = v87;
      unint64_t v34 = v88;
      sub_100443AD4(a2, (uint64_t)&v75);
      unint64_t v35 = v82;
      unint64_t v36 = v84;
      if (((v84 >> 59) & 6 | ((v82 & 0x2000000000000000) != 0)) != 6) {
        goto LABEL_80;
      }
LABEL_22:
      unint64_t v82 = v35 & 0xDFFFFFFFFFFFFFFFLL;
      unint64_t v84 = v36 & 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v37 = v77;
      unint64_t v38 = v78;
      if (v31 == v75 && v32 == v76 || (char v30 = 0, (sub_1005E3290() & 1) != 0))
      {
        if (v33 == v37 && v34 == v38) {
LABEL_27:
        }
          char v30 = 1;
        else {
          char v30 = sub_1005E3290();
        }
      }
      return v30 & 1;
    default:
      v92 &= ~0x2000000000000000uLL;
      v94 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v6 = v85;
      unint64_t v3 = v86;
      unint64_t v8 = v87;
      unint64_t v7 = v88;
      sub_100443AD4(a2, (uint64_t)&v75);
      if ((v84 >> 59) & 6 | ((v82 & 0x2000000000000000) != 0)) {
        goto LABEL_80;
      }
      v82 &= ~0x2000000000000000uLL;
      v84 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v9 = v75;
      unint64_t v10 = v76;
      uint64_t v12 = v77;
      unint64_t v11 = v78;
      int64_t v13 = 0;
      switch(v3 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6)) {
            goto LABEL_88;
          }
          int64_t v13 = HIDWORD(v6) - (int)v6;
LABEL_61:
          sub_100008D24(v6, v3);
          break;
        case 2uLL:
          uint64_t v56 = *(void *)(v6 + 16);
          uint64_t v55 = *(void *)(v6 + 24);
          int64_t v13 = v55 - v56;
          if (!__OFSUB__(v55, v56)) {
            goto LABEL_61;
          }
          goto LABEL_89;
        case 3uLL:
          goto LABEL_62;
        default:
          int64_t v13 = BYTE6(v3);
          goto LABEL_62;
      }
      break;
  }
LABEL_62:
  switch(v10 >> 62)
  {
    case 1uLL:
      LODWORD(v48) = HIDWORD(v9) - v9;
      if (__OFSUB__(HIDWORD(v9), v9)) {
        goto LABEL_90;
      }
LABEL_67:
      uint64_t v48 = (int)v48;
LABEL_69:
      if (v13 != v48) {
        goto LABEL_73;
      }
      if (v13 < 1)
      {
LABEL_74:
        sub_100008D24(v9, v10);
        sub_100008D24(v8, v7);
        sub_100008D24(v12, v11);
        goto LABEL_75;
      }
      sub_100008D24(v9, v10);
      sub_100008D24(v9, v10);
      sub_100008D24(v8, v7);
      sub_100008D24(v12, v11);
      if (sub_10044B7E4(v6, v3, v9, v10))
      {
LABEL_75:
        char v30 = sub_100455C10(v8, v7, v12, v11);
        sub_1000094D4(v12, v11);
        sub_1000094D4(v8, v7);
        sub_1000094D4(v9, v10);
        sub_1000094D4(v6, v3);
        return v30 & 1;
      }
      sub_1000094D4(v12, v11);
      sub_1000094D4(v8, v7);
      sub_1000094D4(v9, v10);
LABEL_73:
      uint64_t v59 = v6;
      unint64_t v60 = v3;
LABEL_79:
      sub_1000094D4(v59, v60);
LABEL_80:
      char v30 = 0;
      return v30 & 1;
    case 2uLL:
      uint64_t v58 = *(void *)(v9 + 16);
      uint64_t v57 = *(void *)(v9 + 24);
      BOOL v51 = __OFSUB__(v57, v58);
      uint64_t v48 = v57 - v58;
      if (!v51) {
        goto LABEL_69;
      }
      goto LABEL_91;
    case 3uLL:
LABEL_64:
      if (!v13) {
        goto LABEL_74;
      }
      goto LABEL_73;
    default:
LABEL_63:
      uint64_t v48 = BYTE6(v10);
      goto LABEL_69;
  }
}

uint64_t sub_10045688C(void *a1, void *a2)
{
  sub_100443AD4((uint64_t)a1, (uint64_t)v18);
  uint64_t v4 = v19;
  v19 &= ~0x1000000000000000uLL;
  if ((v4 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)v18, (uint64_t)v20);
    sub_100443AD4((uint64_t)a2, (uint64_t)v14);
    if ((v15 & 0x1000000000000000) != 0)
    {
      v15 &= ~0x1000000000000000uLL;
      sub_100443AD4((uint64_t)v14, (uint64_t)v16);
      sub_100456A30(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
      sub_100456A30(a2, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044CA28);
      char v12 = sub_100455D6C((uint64_t)v20, (uint64_t)v16);
      sub_100456A30(a2, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
      sub_100456A30(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10044B008);
    }
    else
    {
      char v12 = 0;
    }
  }
  else
  {
    uint64_t v5 = v18[0];
    uint64_t v6 = v18[1];
    uint64_t v7 = v18[2];
    uint64_t v8 = v18[3];
    sub_100443AD4((uint64_t)a2, (uint64_t)v16);
    uint64_t v9 = v17;
    v17 &= ~0x1000000000000000uLL;
    if ((v9 & 0x1000000000000000) != 0)
    {
      sub_100443AD4((uint64_t)v16, (uint64_t)v20);
      char v12 = 0;
    }
    else
    {
      uint64_t v10 = v16[2];
      uint64_t v11 = v16[3];
      if (v5 == v16[0] && v6 == v16[1] || (char v12 = 0, (sub_1005E3290() & 1) != 0))
      {
        if (v7 == v10 && v8 == v11) {
          char v12 = 1;
        }
        else {
          char v12 = sub_1005E3290();
        }
      }
    }
  }
  return v12 & 1;
}

void *sub_100456A30(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

BOOL sub_100456A84(uint64_t a1, uint64_t a2)
{
  sub_100443AD4(a1, (uint64_t)v13);
  uint64_t v3 = v14;
  v14 &= ~0x1000000000000000uLL;
  if ((v3 & 0x1000000000000000) != 0)
  {
    sub_100443AD4((uint64_t)v13, (uint64_t)v15);
    sub_100443AD4((uint64_t)v15, (uint64_t)v16);
    unint64_t v4 = qword_100626160[(v18 >> 59) & 6 | (v17 >> 61) & 1];
    v17 &= ~0x2000000000000000uLL;
    v18 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v4 = 8;
  }
  sub_100443AD4(a2, (uint64_t)v7);
  if ((v8 & 0x1000000000000000) != 0)
  {
    v8 &= ~0x1000000000000000uLL;
    sub_100443AD4((uint64_t)v7, (uint64_t)v9);
    sub_100443AD4((uint64_t)v9, (uint64_t)v10);
    unint64_t v5 = qword_100626160[(v12 >> 59) & 6 | (v11 >> 61) & 1];
  }
  else
  {
    unint64_t v5 = 8;
  }
  return v4 < v5;
}

uint64_t sub_100456B78()
{
  sub_1004434DC(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
  unint64_t v1 = v0[13];
  if (((v1 >> 60) | 4) != 0xF) {
    sub_1000094D4(v0[12], v1);
  }
  sub_1000094D4(v0[14], v0[15]);
  sub_1000094D4(v0[16], v0[17]);
  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100456BF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1004434DC(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128));
  if (*(void *)(v0 + 160) >= 3uLL)
  {
    int v1 = *(unsigned __int8 *)(v0 + 152);
    if (v1 != 255) {
      sub_1002173AC(*(void *)(v0 + 136), *(void *)(v0 + 144), v1);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_deallocObject(v0, 188, 7);
}

uint64_t sub_100456C94()
{
  sub_1004434DC(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
  unint64_t v1 = v0[13];
  if (((v1 >> 60) | 4) != 0xF) {
    sub_1000094D4(v0[12], v1);
  }
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100456D10()
{
  sub_1004434DC(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
  unint64_t v1 = v0[13];
  if (v1 >> 60 != 15) {
    sub_1000094D4(v0[12], v1);
  }
  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100456D7C()
{
  sub_10044B008(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
  sub_10044C910(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(unsigned char *)(v0 + 160));
  return _swift_deallocObject(v0, 161, 7);
}

void *sub_100456DEC(uint64_t a1)
{
  sub_1004526AC(a1, (uint64_t)v62);
  uint64_t v2 = v62[0];
  unint64_t v3 = v62[1];
  uint64_t v4 = sub_1005E1C90();
  __chkstk_darwin(v4 - 8);
  sub_1004526AC(a1, (uint64_t)&v63);
  uint64_t v5 = v70;
  uint64_t v6 = _swiftEmptyArrayStorage;
  switch((v72 >> 59) & 6 | ((v70 & 0x2000000000000000) != 0))
  {
    case 1uLL:
      v70 &= ~0x2000000000000000uLL;
      v72 &= 0xCFFFFFFFFFFFFFFFLL;
      unint64_t v21 = v72;
      uint64_t v22 = v63;
      unint64_t v23 = v64;
      uint64_t v24 = v65;
      unint64_t v25 = v66;
      uint64_t v26 = v67;
      unint64_t v27 = v68;
      uint64_t v28 = v69;
      uint64_t v59 = v71;
      sub_10000566C(&qword_100715908);
      uint64_t v6 = (void *)swift_allocObject();
      *((_OWORD *)v6 + 1) = xmmword_1005F6670;
      v6[4] = v22;
      v6[5] = v23;
      v6[6] = v24;
      v6[7] = v25;
      v6[8] = v26;
      unsigned char v6[9] = v27;
      v6[10] = v28;
      v6[11] = v5 | 0x3000000000000000;
      v6[12] = v59;
      v6[13] = v21;
      sub_100008D24(v22, v23);
      sub_100008D24(v24, v25);
      sub_100008D24(v26, v27);
      sub_100008D24(v28, v5 & 0xDFFFFFFFFFFFFFFFLL);
      sub_100008D24(v59, v21);
      return v6;
    case 2uLL:
      v70 &= ~0x2000000000000000uLL;
      v72 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v29 = v63;
      unint64_t v30 = v64;
      sub_10000566C(&qword_100715908);
      uint64_t v6 = (void *)swift_allocObject();
      *((_OWORD *)v6 + 1) = xmmword_1005F6670;
      v6[4] = v29;
      v6[5] = v30;
      *((_OWORD *)v6 + 3) = 0u;
      *((_OWORD *)v6 + 4) = 0u;
      v6[10] = 0;
      *(_OWORD *)(v6 + 11) = xmmword_100625760;
      v6[13] = 0x1000000000000000;
      sub_100008D24(v2, v3);
      return v6;
    case 3uLL:
      v70 &= ~0x2000000000000000uLL;
      v72 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v32 = v63;
      unint64_t v31 = v64;
      uint64_t v34 = v65;
      unint64_t v33 = v66;
      sub_10000566C(&qword_100715908);
      uint64_t v6 = (void *)swift_allocObject();
      *((_OWORD *)v6 + 1) = xmmword_1005F6670;
      v6[4] = v32;
      v6[5] = v31;
      v6[6] = v34;
      v6[7] = v33;
      unsigned char v6[9] = 0;
      v6[10] = 0;
      v6[8] = 0;
      *(_OWORD *)(v6 + 11) = xmmword_100625750;
      v6[13] = 0x1000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v6;
    case 4uLL:
      return v6;
    default:
      v70 &= ~0x2000000000000000uLL;
      v72 &= 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v8 = v63;
      unint64_t v7 = v64;
      uint64_t v10 = v65;
      unint64_t v9 = v66;
      sub_100008D24(v63, v64);
      sub_100008D24(v10, v9);
      sub_1005E1C60();
      uint64_t v11 = sub_1005E1C20();
      if (v12)
      {
        uint64_t v13 = v11;
        uint64_t v14 = v12;
        sub_1005E1C60();
        uint64_t v15 = sub_1005E1C20();
        if (v16)
        {
          uint64_t v17 = v16;
          uint64_t v58 = v15;
          uint64_t v61 = v13;
          uint64_t v6 = sub_1004D0AA4(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v19 = v6[2];
          unint64_t v18 = v6[3];
          if (v19 >= v18 >> 1) {
            uint64_t v6 = sub_1004D0AA4((void *)(v18 > 1), v19 + 1, 1, v6);
          }
          _OWORD v6[2] = v19 + 1;
          uint64_t v20 = &v6[10 * v19];
          v20[4] = v61;
          v20[5] = v14;
          v20[6] = v58;
          v20[7] = v17;
          *((_OWORD *)v20 + 4) = 0u;
          *((_OWORD *)v20 + 5) = 0u;
          *((_OWORD *)v20 + 6) = 0u;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v6 = _swiftEmptyArrayStorage;
        }
      }
      sub_100008D24(v8, v7);
      sub_100008D24(v10, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1004D0AA4(0, v6[2] + 1, 1, v6);
      }
      unint64_t v36 = v6[2];
      unint64_t v35 = v6[3];
      if (v36 >= v35 >> 1) {
        uint64_t v6 = sub_1004D0AA4((void *)(v35 > 1), v36 + 1, 1, v6);
      }
      _OWORD v6[2] = v36 + 1;
      uint64_t v37 = &v6[10 * v36];
      v37[4] = v8;
      v37[5] = v7;
      v37[6] = v10;
      v37[7] = v9;
      v37[9] = 0;
      v37[10] = 0;
      v37[8] = 0;
      *(_OWORD *)(v37 + 11) = xmmword_100625760;
      v37[13] = 0x2000000000000000;
      sub_100008D24(v8, v7);
      sub_100008D24(v10, v9);
      unint64_t v39 = v6[2];
      unint64_t v38 = v6[3];
      if (v39 >= v38 >> 1) {
        uint64_t v6 = sub_1004D0AA4((void *)(v38 > 1), v39 + 1, 1, v6);
      }
      _OWORD v6[2] = v39 + 1;
      unint64_t v40 = &v6[10 * v39];
      v40[4] = v8;
      v40[5] = v7;
      v40[6] = v10;
      v40[7] = v9;
      v40[8] = 0;
      v40[9] = 0;
      v40[10] = 0;
      v40[11] = 0x1000000000000000;
      v40[12] = 0;
      v40[13] = 0;
      sub_1005E1C70();
      uint64_t v41 = sub_1005E1C20();
      if (!v42) {
        goto LABEL_24;
      }
      uint64_t v43 = v42;
      uint64_t v60 = v41;
      sub_1005E1C70();
      uint64_t v44 = sub_1005E1C20();
      if (v45)
      {
        uint64_t v46 = v45;
        uint64_t v57 = v44;
        unint64_t v47 = v6[2];
        unint64_t v56 = v6[3];
        unint64_t v48 = v56 >> 1;
        unint64_t v49 = v47 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v56 >> 1 <= v47)
        {
          uint64_t v6 = sub_1004D0AA4((void *)(v56 > 1), v47 + 1, 1, v6);
          unint64_t v56 = v6[3];
          unint64_t v48 = v56 >> 1;
        }
        uint64_t v50 = v60;
        uint64_t v51 = v57;
        _OWORD v6[2] = v49;
        char v52 = &v6[10 * v47];
        v52[4] = v60;
        v52[5] = v43;
        v52[6] = v57;
        v52[7] = v46;
        v52[9] = 0;
        v52[10] = 0;
        v52[8] = 0;
        *(_OWORD *)(v52 + 11) = xmmword_100625750;
        v52[13] = 0x2000000000000000;
        int64_t v53 = v47 + 2;
        if (v48 <= v49)
        {
          uint64_t v6 = sub_1004D0AA4((void *)(v56 > 1), v53, 1, v6);
          uint64_t v51 = v57;
          uint64_t v50 = v60;
        }
        _OWORD v6[2] = v53;
        uint64_t v54 = &v6[10 * v49];
        v54[4] = v50;
        v54[5] = v43;
        v54[6] = v51;
        v54[7] = v46;
        v54[9] = 0;
        v54[10] = 0;
        v54[8] = 0;
        *(_OWORD *)(v54 + 11) = xmmword_100625760;
        v54[13] = 0x3000000000000000;
LABEL_24:
        sub_1000094D4(v8, v7);
        sub_1000094D4(v10, v9);
      }
      else
      {
        sub_1000094D4(v8, v7);
        sub_1000094D4(v10, v9);
        swift_bridgeObjectRelease();
      }
      return v6;
  }
}

uint64_t destroy for MechanismKind.SASLKind(void *a1, uint64_t a2)
{
  return sub_10045765C(a1, a2, sub_1004434DC);
}

void *initializeWithCopy for MechanismKind.SASLKind(void *a1, void *a2, uint64_t a3)
{
  return sub_1004576B8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100443318);
}

uint64_t *assignWithCopy for MechanismKind.SASLKind(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_100457790(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100443318, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1004434DC);
}

__n128 initializeWithTake for MechanismKind(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *assignWithTake for MechanismKind.SASLKind(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_100457878(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1004434DC);
}

uint64_t getEnumTagSinglePayload for MechanismKind.SASLKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3A && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 58);
  }
  unsigned int v3 = (*(void *)(a1 + 56) >> 58) & 0xC;
  unsigned int v4 = (((*(unsigned char *)(a1 + 79) & 0x30 | v3) >> 3) & 0xFFFFFFC7 | (8 * (v3 & 7 | (*(void *)(a1 + 40) >> 60) & 3))) ^ 0x3F;
  if (v4 >= 0x39) {
    unsigned int v4 = -1;
  }
  return v4 + 1;
}

uint64_t storeEnumTagSinglePayload for MechanismKind.SASLKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x39)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 58;
    if (a3 >= 0x3A) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3A) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      uint64_t v3 = (-a2 >> 3) & 7 | (8 * (-a2 & 0x3F));
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = (unint64_t)((-a2 >> 3) & 3) << 60;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = (v3 << 58) & 0x3000000000000000;
      *(void *)(result + 64) = 0;
      *(void *)(result + 72) = (v3 << 56) & 0x3000000000000000;
    }
  }
  return result;
}

uint64_t sub_1004575E4(uint64_t a1)
{
  return (*(void *)(a1 + 72) >> 59) & 6 | ((*(void *)(a1 + 56) & 0x2000000000000000) != 0);
}

void *sub_100457600(void *result, char a2)
{
  uint64_t v2 = result[9];
  unint64_t v3 = result[7] & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 61);
  result[5] &= 0xCFFFFFFFFFFFFFFFLL;
  result[7] = v3;
  result[9] = v2 & 0xCFFFFFFFFFFFFFFFLL | ((((unint64_t)(a2 & 7) >> 1) & 3) << 60);
  return result;
}

ValueMetadata *type metadata accessor for MechanismKind.SASLKind()
{
  return &type metadata for MechanismKind.SASLKind;
}

uint64_t destroy for MechanismKind(void *a1, uint64_t a2)
{
  return sub_10045765C(a1, a2, sub_10044B008);
}

uint64_t sub_10045765C(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void, void, void, void, void))
{
  return a3(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
}

void *initializeWithCopy for MechanismKind(void *a1, void *a2, uint64_t a3)
{
  return sub_1004576B8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10044CA28);
}

void *sub_1004576B8(void *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v12 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v15 = a2[9];
  a4(*a2, v6, v7, v8, v9, v10, v11, v12, v13, v15);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  a1[8] = v13;
  a1[9] = v15;
  return a1;
}

uint64_t *assignWithCopy for MechanismKind(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_100457790(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10044CA28, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10044B008);
}

uint64_t *sub_100457790(uint64_t *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v26 = a2[9];
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14, v26);
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = a1[5];
  uint64_t v21 = a1[6];
  uint64_t v22 = a1[7];
  uint64_t v23 = a1[8];
  uint64_t v24 = a1[9];
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v9;
  a1[4] = v10;
  a1[5] = v11;
  a1[6] = v12;
  a1[7] = v13;
  a1[8] = v14;
  a1[9] = v26;
  a5(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  return a1;
}

void *assignWithTake for MechanismKind(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_100457878(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10044B008);
}

void *sub_100457878(void *a1, _OWORD *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v12 = a1[6];
  uint64_t v13 = a1[7];
  uint64_t v14 = a1[8];
  uint64_t v15 = a1[9];
  long long v16 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v16;
  long long v17 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v17;
  *((_OWORD *)a1 + 4) = a2[4];
  a4(v6, v8, v7, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for MechanismKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 7 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 7);
  }
  unsigned int v3 = (((*(void *)(a1 + 56) & 0x1000000000000000) != 0) | (*(void *)(a1 + 40) >> 59) & 6) ^ 7;
  if (v3 >= 6) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MechanismKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 6)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 7;
    if (a3 >= 7) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 7) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = (unint64_t)((-a2 >> 1) & 3) << 60;
      *(void *)(result + 48) = 0;
      *(void *)(result + 56) = ((unint64_t)((-a2 >> 1) & 3 | (4 * (-a2 & 7))) << 58) & 0x1000000000000000;
      *(void *)(result + 64) = 0;
      *(void *)(result + 72) = 0;
    }
  }
  return result;
}

uint64_t sub_1004579C0(uint64_t a1)
{
  return (*(void *)(a1 + 56) >> 60) & 1;
}

uint64_t sub_1004579CC(uint64_t result)
{
  *(void *)(result + 56) &= ~0x1000000000000000uLL;
  return result;
}

uint64_t sub_1004579DC(uint64_t result, char a2)
{
  unint64_t v2 = *(void *)(result + 56) & 0xEFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 60);
  *(void *)(result + 40) &= 0xCFFFFFFFFFFFFFFFLL;
  *(void *)(result + 56) = v2;
  return result;
}

ValueMetadata *type metadata accessor for MechanismKind()
{
  return &type metadata for MechanismKind;
}

unint64_t sub_100457A10()
{
  unint64_t result = qword_100715998;
  if (!qword_100715998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715998);
  }
  return result;
}

uint64_t sub_100457A64()
{
  uint64_t v1 = sub_1005E2150();
  *(void *)(v1 + 16) = 32;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  sub_10045A1D4((void *)(v1 + 32));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = (uint64_t)sub_1004D323C((void *)v1);
  }
  if (*(void *)(v1 + 16) <= 0xBuLL) {
    goto LABEL_20;
  }
  *(_DWORD *)(v1 + 40) = 1;
  unint64_t v2 = *(void *)(v0 + 8);
  if ((v2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(v2) & 0xF;
  }
  else {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 16);
  unint64_t v6 = *(void *)(v0 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = (uint64_t)sub_1004D323C((void *)v1);
  }
  if (*(void *)(v1 + 16) <= 0xFuLL)
  {
LABEL_20:
    uint64_t result = sub_1005E2F20();
    __break(1u);
  }
  else
  {
    if (v4) {
      int v7 = 524807;
    }
    else {
      int v7 = 519;
    }
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    if ((v6 & 0x2000000000000000) != 0) {
      uint64_t v8 = HIBYTE(v6) & 0xF;
    }
    if (v3) {
      v7 |= 0x1000u;
    }
    if (v8) {
      v7 |= 0x2000u;
    }
    *(_DWORD *)(v1 + 44) = v7;
    uint64_t v9 = sub_100459D14(*(void *)v0, *(void *)(v0 + 8));
    sub_100458DC0(v9, 16);
    swift_release();
    uint64_t v10 = sub_100459D14(v5, v6);
    sub_100458DC0(v10, 24);
    swift_release();
    sub_1004F1698((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v11 = sub_1004C31D8(v1);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_100457C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457CA4(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_10045C848);
}

uint64_t sub_100457C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100457CA4(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_10045C66C);
}

uint64_t sub_100457CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

BOOL sub_100457CC8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v5[2] = *(_OWORD *)(a1 + 32);
  int v6 = *(_DWORD *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  int v8 = *(_DWORD *)(a2 + 48);
  return sub_10045C8D0((uint64_t *)v5, (uint64_t *)v7);
}

uint64_t sub_100457D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1004580A8();
  if (!v3)
  {
    if (a1) {
      unint64_t v10 = a2 - a1;
    }
    else {
      unint64_t v10 = 0;
    }
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_27;
    }
    if (sub_10045849C(8, 0, v10, a1, a2) == 2)
    {
      int v4 = sub_10045849C(20, 0, v10, a1, a2);
      uint64_t v5 = sub_10045A31C((char *)0x18, 8, a1, a2);
      if ((v4 & 0x800000) != 0)
      {
        unsigned __int16 v12 = sub_10045831C(40, 0, v10, a1, a2);
        unsigned __int16 v14 = v12;
        if (v12)
        {
          unsigned __int16 v15 = sub_10045831C(44, 0, v10, a1, a2);
          unint64_t v10 = 0;
          if (v14 <= 0x7CFu && v15 < 0x7D0u)
          {
            unint64_t v10 = 0;
            if (a1)
            {
              uint64_t v16 = v15 + (unint64_t)v14;
              if (a2 - a1 >= v16) {
                unint64_t v10 = sub_10045BDF0(v15, v16, a1, a2, (uint64_t)sub_10045EF88, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10045EFA0);
              }
            }
          }
        }
        else
        {
          unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
        }
      }
      else
      {
        unint64_t v10 = 0;
      }
      if ((v4 & 0x2000000) != 0)
      {
        uint64_t v13 = sub_10045A31C((char *)0x30, 8, a1, a2);
        long long v17 = v13;
        if (*((void *)v13 + 2) == 8)
        {
          uint64_t v24 = (uint64_t)(v13 + 40);
          unsigned __int8 v23 = sub_10045861C(0, 0, 8uLL, (uint64_t)(v13 + 32), (uint64_t)(v13 + 40));
          unsigned __int8 v22 = sub_10045861C(1, 0, 8uLL, (uint64_t)(v17 + 32), v24);
          LODWORD(result) = sub_10045831C(2, 0, 8uLL, (uint64_t)(v17 + 32), v24);
LABEL_27:
          int v21 = result;
          swift_bridgeObjectRelease();
          char v19 = 0;
          int v18 = v23 | (v22 << 8) | (v21 << 16);
          goto LABEL_24;
        }
        sub_10045EF34();
        swift_allocError();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_errorRelease();
      }
      int v18 = 0;
      char v19 = 1;
LABEL_24:
      uint64_t result = sub_100458184(12, v4 & 1, a1, a2);
      *(_DWORD *)a3 = v4;
      *(void *)(a3 + 8) = v5;
      *(void *)(a3 + 16) = result;
      *(void *)(a3 + 24) = v20;
      *(void *)(a3 + 32) = v10;
      *(_DWORD *)(a3 + 40) = v18;
      *(unsigned char *)(a3 + 44) = v19;
      return result;
    }
    sub_10045ED58();
    swift_allocError();
    *(void *)uint64_t v11 = 2;
    *(unsigned char *)(v11 + 8) = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1004580A8()
{
  while (1)
  {
    int v0 = sub_10045C110();
    if ((v0 & 0x10000) != 0) {
      break;
    }
    if ((v0 & 0x80) != 0 || v0 != BYTE1(v0))
    {
      swift_bridgeObjectRelease();
      sub_10045ED58();
      swift_allocError();
      *(void *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 8) = 2;
      return swift_willThrow();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100458184(uint64_t result, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 - a3;
  if (a3) {
    unint64_t v6 = a4 - a3;
  }
  else {
    unint64_t v6 = 0;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = result;
  uint64_t result = sub_10045831C(result, 0, v6, a3, a4);
  if (v4) {
    return result;
  }
  unsigned __int16 v11 = result;
  if (!(_WORD)result) {
    return 0;
  }
  uint64_t result = v10 + 4;
  if (__OFADD__(v10, 4)) {
    goto LABEL_22;
  }
  uint64_t result = sub_10045831C(result, 0, v6, a3, a4);
  if (v11 > 0x7CFu
    || (unsigned __int16)result > 0x7CFu
    || !a3
    || v5 < (uint64_t)((unsigned __int16)result + (unint64_t)v11))
  {
    sub_10045ED58();
    swift_allocError();
    *(void *)uint64_t v12 = 3;
    char v13 = 2;
LABEL_18:
    *(unsigned char *)(v12 + 8) = v13;
    return swift_willThrow();
  }
  if ((a2 & 1) == 0) {
    return sub_10045DC84((unsigned __int8 *)(a3 + (unsigned __int16)result), v11);
  }
  if (v5 >= (unsigned __int16)result)
  {
    if ((v11 & 1) == 0) {
      return sub_10045DD78(a3 + (unsigned __int16)result, (unint64_t)v11 >> 1);
    }
    sub_10045ED58();
    swift_allocError();
    *(void *)uint64_t v12 = v11;
    char v13 = 1;
    goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_10045831C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a1 + 2;
  if (__OFADD__(a1, 2))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (a4) {
    uint64_t v6 = a5 - a4;
  }
  else {
    uint64_t v6 = 0;
  }
  if ((a2 & 0x8000000000000000) != 0 || v6 < (uint64_t)a2) {
    goto LABEL_22;
  }
  if ((a3 & 0x8000000000000000) != 0 || v6 < (uint64_t)a3) {
    goto LABEL_23;
  }
  if ((uint64_t)(a3 - a2) < v5)
  {
    sub_10045ED58();
    swift_allocError();
    *(void *)uint64_t v7 = 1;
    *(unsigned char *)(v7 + 8) = 2;
    return swift_willThrow();
  }
  unint64_t v9 = a2 + a1;
  if (__OFADD__(a2, a1)) {
    goto LABEL_24;
  }
  if ((v9 & 0x8000000000000000) != 0 || v6 < (uint64_t)v9) {
    goto LABEL_25;
  }
  BOOL v10 = __OFADD__(a2, v5);
  unint64_t v11 = a2 + v5;
  if (v10)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v11 & 0x8000000000000000) != 0 || v6 < (uint64_t)v11) {
    goto LABEL_27;
  }
  if (v11 < v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v9 < a2)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (v11 > a3) {
    goto LABEL_30;
  }
  sub_10000566C(&qword_1007159E8);
  sub_10045EE6C();
  sub_1005E04F0();
  return 0;
}

uint64_t sub_10045849C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a1 + 4;
  if (__OFADD__(a1, 4))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (a4) {
    uint64_t v6 = a5 - a4;
  }
  else {
    uint64_t v6 = 0;
  }
  if ((a2 & 0x8000000000000000) != 0 || v6 < (uint64_t)a2) {
    goto LABEL_22;
  }
  if ((a3 & 0x8000000000000000) != 0 || v6 < (uint64_t)a3) {
    goto LABEL_23;
  }
  if ((uint64_t)(a3 - a2) < v5)
  {
    sub_10045ED58();
    swift_allocError();
    *(void *)uint64_t v7 = 1;
    *(unsigned char *)(v7 + 8) = 2;
    return swift_willThrow();
  }
  unint64_t v9 = a2 + a1;
  if (__OFADD__(a2, a1)) {
    goto LABEL_24;
  }
  if ((v9 & 0x8000000000000000) != 0 || v6 < (uint64_t)v9) {
    goto LABEL_25;
  }
  BOOL v10 = __OFADD__(a2, v5);
  unint64_t v11 = a2 + v5;
  if (v10)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v11 & 0x8000000000000000) != 0 || v6 < (uint64_t)v11) {
    goto LABEL_27;
  }
  if (v11 < v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v9 < a2)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (v11 > a3) {
    goto LABEL_30;
  }
  sub_10000566C(&qword_1007159E8);
  sub_10045EE6C();
  sub_1005E04F0();
  return 0;
}

uint64_t sub_10045861C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (a4) {
    uint64_t v6 = a5 - a4;
  }
  else {
    uint64_t v6 = 0;
  }
  if ((a2 & 0x8000000000000000) != 0 || v6 < (uint64_t)a2) {
    goto LABEL_22;
  }
  if ((a3 & 0x8000000000000000) != 0 || v6 < (uint64_t)a3) {
    goto LABEL_23;
  }
  if ((uint64_t)(a3 - a2) < v5)
  {
    sub_10045ED58();
    swift_allocError();
    *(void *)uint64_t v7 = 1;
    *(unsigned char *)(v7 + 8) = 2;
    return swift_willThrow();
  }
  unint64_t v9 = a2 + a1;
  if (__OFADD__(a2, a1)) {
    goto LABEL_24;
  }
  if ((v9 & 0x8000000000000000) != 0 || v6 < (uint64_t)v9) {
    goto LABEL_25;
  }
  BOOL v10 = __OFADD__(a2, v5);
  unint64_t v11 = a2 + v5;
  if (v10)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v11 & 0x8000000000000000) != 0 || v6 < (uint64_t)v11) {
    goto LABEL_27;
  }
  if (v11 < v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v9 < a2)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (v11 > a3) {
    goto LABEL_30;
  }
  sub_10000566C(&qword_1007159E8);
  sub_10045EE6C();
  sub_1005E04F0();
  return 0;
}

uint64_t sub_10045879C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    if (a2) {
      uint64_t v3 = a3 - a2;
    }
    else {
      uint64_t v3 = 0;
    }
    uint64_t result = sub_10045BC0C(0, result, v3, a2, a3);
    if (v4) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = result;
    }
    if ((v5 & 0x8000000000000000) == 0) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100458810()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E2150();
  *(void *)(v2 + 16) = 64;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  sub_10045A1D4((void *)(v2 + 32));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_1004D323C((void *)v2);
  }
  if (*(void *)(v2 + 16) > 0xBuLL)
  {
    *(_DWORD *)(v2 + 40) = 3;
    uint64_t v12 = (void *)v2;
    uint64_t v3 = sub_100459D14(v1[2], v1[3]);
    sub_100458DC0(v3, 28);
    swift_release();
    uint64_t v4 = sub_100459D14(v1[4], v1[5]);
    sub_100458DC0(v4, 36);
    swift_release();
    uint64_t v5 = sub_100459D14(v1[6], v1[7]);
    sub_100458DC0(v5, 44);
    swift_release();
    uint64_t v14 = *v1;
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_100458AB4(v6, 12);
    sub_10001D550((uint64_t)&v14);
    uint64_t v13 = v1[1];
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_100458AB4(v7, 20);
    sub_10001D550((uint64_t)&v13);
    sub_10001FDF0((uint64_t)(v1 + 8), (uint64_t)v18, &qword_100715A10);
    sub_10001FDF0((uint64_t)v18, (uint64_t)&v19, &qword_100715A10);
    if (v19) {
      sub_100458C3C((char *)(v19 + 32), *(char **)(v19 + 16), 52);
    }
    else {
      sub_100458AB4((uint64_t)_swiftEmptyArrayStorage, 52);
    }
    sub_10001FDF0((uint64_t)(v1 + 9), (uint64_t)v15, &qword_100715A18);
    sub_10001FDF0((uint64_t)v15, (uint64_t)&v16, &qword_100715A18);
    int v8 = (void *)v2;
    if (v17) {
      goto LABEL_12;
    }
    int v9 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v8 = sub_1004D323C(v12);
    }
    if (v8[2] > 0x3FuLL)
    {
      *((_DWORD *)v8 + 23) = v9;
LABEL_12:
      sub_1004F1698((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v10 = sub_1004C31D8((uint64_t)v8);
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  uint64_t result = sub_1005E2F20();
  __break(1u);
  return result;
}

uint64_t sub_100458AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(void *)(v2 + 8);
  unint64_t v5 = v2 + 8;
  uint64_t v7 = *(void *)(v6 + 16);
  int v8 = *(void **)v4;
  uint64_t v9 = *(void *)(*(void *)v4 + 16);
  unint64_t v10 = v7 + v9;
  if (__OFADD__(v7, v9))
  {
    __break(1u);
  }
  else
  {
    if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10)) {
      goto LABEL_15;
    }
    uint64_t v3 = a2;
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_1004F1698(v11);
    unint64_t v5 = *(void *)(*(void *)v5 + 16) - v7;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v5 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      goto LABEL_6;
    }
  }
  int v8 = sub_1004D323C(v8);
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
LABEL_6:
  if (v5 < 0x10000)
  {
    uint64_t v12 = (uint64_t)v8 + v8[2] + 32;
    sub_100459FF0(v5, v3, (uint64_t)(v8 + 4), v12);
    if (__OFADD__(v3, 2))
    {
      __break(1u);
    }
    else
    {
      sub_100459FF0(v5, v3 + 2, (uint64_t)(v8 + 4), v12);
      if (!__OFADD__(v3, 4))
      {
        uint64_t result = sub_100459F2C(v10, v3 + 4, (uint64_t)(v8 + 4), v12);
        *(void *)uint64_t v4 = v8;
        return result;
      }
    }
    __break(1u);
  }
LABEL_15:
  uint64_t result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_100458C3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = *(void *)(v3 + 8);
  unint64_t v6 = v3 + 8;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = *(void **)v5;
  uint64_t v10 = *(void *)(*(void *)v5 + 16);
  unint64_t v11 = v8 + v10;
  if (__OFADD__(v8, v10))
  {
    __break(1u);
  }
  else
  {
    if ((v11 & 0x8000000000000000) != 0 || HIDWORD(v11)) {
      goto LABEL_15;
    }
    uint64_t v4 = a3;
    sub_1004F1D30(a1, a2);
    unint64_t v6 = *(void *)(*(void *)v6 + 16) - v8;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v6 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      goto LABEL_6;
    }
  }
  uint64_t v9 = sub_1004D323C(v9);
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
LABEL_6:
  if (v6 < 0x10000)
  {
    uint64_t v12 = (uint64_t)v9 + v9[2] + 32;
    sub_100459FF0(v6, v4, (uint64_t)(v9 + 4), v12);
    if (__OFADD__(v4, 2))
    {
      __break(1u);
    }
    else
    {
      sub_100459FF0(v6, v4 + 2, (uint64_t)(v9 + 4), v12);
      if (!__OFADD__(v4, 4))
      {
        uint64_t result = sub_100459F2C(v11, v4 + 4, (uint64_t)(v9 + 4), v12);
        *(void *)uint64_t v5 = v9;
        return result;
      }
    }
    __break(1u);
  }
LABEL_15:
  uint64_t result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_100458DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(void *)(v2 + 8);
  unint64_t v5 = v2 + 8;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = *(void **)v4;
  uint64_t v9 = *(void *)(*(void *)v4 + 16);
  unint64_t v10 = v7 + v9;
  if (__OFADD__(v7, v9))
  {
    __break(1u);
  }
  else
  {
    if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10)) {
      goto LABEL_15;
    }
    uint64_t v3 = a2;
    swift_retain();
    sub_1004FB750();
    swift_release();
    unint64_t v5 = *(void *)(*(void *)v5 + 16) - v7;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v5 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      goto LABEL_6;
    }
  }
  uint64_t v8 = sub_1004D323C(v8);
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
LABEL_6:
  if (v5 < 0x10000)
  {
    uint64_t v11 = (uint64_t)v8 + v8[2] + 32;
    sub_100459FF0(v5, v3, (uint64_t)(v8 + 4), v11);
    if (__OFADD__(v3, 2))
    {
      __break(1u);
    }
    else
    {
      sub_100459FF0(v5, v3 + 2, (uint64_t)(v8 + 4), v11);
      if (!__OFADD__(v3, 4))
      {
        uint64_t result = sub_100459F2C(v10, v3 + 4, (uint64_t)(v8 + 4), v11);
        *(void *)uint64_t v4 = v8;
        return result;
      }
    }
    __break(1u);
  }
LABEL_15:
  uint64_t result = sub_1005E2F10();
  __break(1u);
  return result;
}

uint64_t sub_100458F54(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = swift_retain();
  uint64_t v4 = (void *)a2(v3);
  swift_release();
  unint64_t v5 = v4[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_16;
  }
LABEL_2:
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  unint64_t v8 = v7 + 1;
  if (v7 >= v6 >> 1) {
    uint64_t v4 = sub_1004D09A8((void *)(v6 > 1), v7 + 1, 1, v4);
  }
  v4[2] = v8;
  *((unsigned char *)v4 + v7 + 32) = 0x80;
  uint64_t v24 = v4;
  if (v7 > 0xFFFFFFFFFFFFFFELL)
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v8 & 0x100000000000003FLL) == 0x38) {
    goto LABEL_12;
  }
  unint64_t v9 = v7 + 33;
  do
  {
    unint64_t v10 = v4[3];
    unint64_t v11 = v9 - 31;
    if (v9 - 32 >= v10 >> 1) {
      uint64_t v4 = sub_1004D09A8((void *)(v10 > 1), v9 - 31, 1, v4);
    }
    v4[2] = v11;
    *((unsigned char *)v4 + v9) = 0;
    if (v9 - 32 > 0xFFFFFFFFFFFFFFELL)
    {
      __break(1u);
LABEL_16:
      uint64_t v4 = sub_1004D09A8(0, v5 + 1, 1, v4);
      goto LABEL_2;
    }
    ++v9;
  }
  while ((v11 & 0x100000000000003FLL) != 0x38);
  uint64_t v24 = v4;
LABEL_12:
  if (v5 >> 60) {
LABEL_18:
  }
    __break(1u);
  unint64_t v12 = 8 * v5;
  if (((8 * v5) & 0x8000000000000000) != 0)
  {
    sub_1005E2F10();
    __break(1u);
    uint64_t result = swift_willThrow();
    __break(1u);
  }
  else
  {
    unint64_t v13 = HIDWORD(v12);
    LODWORD(v25[0]) = v12;
    sub_1004F17E0((char *)v25, (char *)v25 + 4);
    LODWORD(v25[0]) = v13;
    sub_1004F17E0((char *)v25, (char *)v25 + 4);
    int v23 = 1732584193;
    int v22 = -271733879;
    int v21 = -1732584194;
    int v20 = 271733878;
    uint64_t v14 = v24[2] >> 2;
    v25[0] = 0;
    v25[1] = v14;
    v25[2] = (uint64_t)(v24 + 4);
    v25[3] = v14;
    swift_bridgeObjectRetain();
    __chkstk_darwin();
    sub_100461A70(&v19, 16, v25, &v23, &v22, &v21, &v20);
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1005E2150();
    *(void *)(v15 + 16) = 16;
    int v16 = v22;
    *(_DWORD *)(v15 + 32) = v23;
    *(_DWORD *)(v15 + 36) = v16;
    int v17 = v20;
    *(_DWORD *)(v15 + 40) = v21;
    *(_DWORD *)(v15 + 44) = v17;
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_10045924C(void *a1)
{
  if (a1[2] != 16) {
    goto LABEL_41;
  }
  uint64_t v2 = v3;
  unint64_t v5 = a1;
  sub_10000566C(&qword_100715A28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005F66F0;
  sub_1005E3300();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  unint64_t v8 = (void *)swift_dynamicCastClass();
  if (!v8)
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = _swiftEmptyArrayStorage;
  }
  uint64_t v4 = (void *)(inited + 32);
  uint64_t v6 = (uint64_t)(v5 + 4);
  uint64_t v9 = v8[2];
  swift_release();
  if (v9 != 7) {
    goto LABEL_42;
  }
  unint64_t v10 = (void *)swift_dynamicCastClass();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  while (1)
  {
    swift_bridgeObjectRelease();
    void *v4 = v10;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    unint64_t v11 = (void *)swift_dynamicCastClass();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage;
    }
    uint64_t v12 = v11[2];
    swift_release();
    if (v12 == 7)
    {
      unint64_t v13 = (void *)swift_dynamicCastClass();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        unint64_t v13 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v13 = sub_10045BC94((uint64_t)v5, v6, 7, 0x1DuLL);
    }
    swift_bridgeObjectRelease();
    *(void *)(inited + 40) = v13;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v14 = (void *)swift_dynamicCastClass();
    if (!v14)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    uint64_t v15 = v14[2];
    swift_release();
    if (v15 == 2)
    {
      int v16 = (void *)swift_dynamicCastClass();
      if (!v16)
      {
        swift_bridgeObjectRelease();
        int v16 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      int v16 = sub_10045BC94((uint64_t)v5, v6, 14, 0x21uLL);
    }
    swift_bridgeObjectRelease();
    unint64_t v5 = (void *)v16[2];
    int64_t v18 = (int64_t)v5 + 5;
    if (__OFADD__(v5, 5))
    {
      __break(1u);
LABEL_46:
      unint64_t v5 = sub_1004D09A8((void *)(v17 > 1), v18, 1, v5);
      unint64_t v17 = v5[3];
      int64_t v20 = v17 >> 1;
      goto LABEL_26;
    }
    swift_retain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && (unint64_t v17 = v16[3], v20 = v17 >> 1, (uint64_t)(v17 >> 1) >= v18))
    {
      unint64_t v5 = v16;
    }
    else
    {
      if ((uint64_t)v5 <= v18) {
        int64_t v21 = (int64_t)v5 + 5;
      }
      else {
        int64_t v21 = (int64_t)v5;
      }
      unint64_t v5 = sub_1004D09A8(isUniquelyReferenced_nonNull_native, v21, 1, v16);
      unint64_t v17 = v5[3];
      int64_t v20 = v17 >> 1;
    }
    unint64_t v7 = v5[2];
    int64_t v18 = v7 + 1;
    if (v20 <= v7) {
      goto LABEL_46;
    }
LABEL_26:
    uint64_t v5[2] = v18;
    *((unsigned char *)v5 + v7 + 32) = 0;
    unint64_t v22 = v7 + 2;
    if (v20 < (uint64_t)(v7 + 2))
    {
      unint64_t v5 = sub_1004D09A8((void *)(v17 > 1), v7 + 2, 1, v5);
      unint64_t v17 = v5[3];
      int64_t v20 = v17 >> 1;
    }
    uint64_t v5[2] = v22;
    *((unsigned char *)v5 + v18 + 32) = 0;
    unint64_t v23 = v7 + 3;
    if (v20 < (uint64_t)(v7 + 3))
    {
      unint64_t v5 = sub_1004D09A8((void *)(v17 > 1), v7 + 3, 1, v5);
      unint64_t v17 = v5[3];
      int64_t v20 = v17 >> 1;
    }
    uint64_t v5[2] = v23;
    *((unsigned char *)v5 + v22 + 32) = 0;
    unint64_t v24 = v7 + 4;
    if (v20 < (uint64_t)(v7 + 4))
    {
      unint64_t v5 = sub_1004D09A8((void *)(v17 > 1), v7 + 4, 1, v5);
      unint64_t v17 = v5[3];
      int64_t v20 = v17 >> 1;
    }
    uint64_t v5[2] = v24;
    *((unsigned char *)v5 + v23 + 32) = 0;
    uint64_t v6 = v7 + 5;
    if (v20 < (uint64_t)(v7 + 5)) {
      unint64_t v5 = sub_1004D09A8((void *)(v17 > 1), v7 + 5, 1, v5);
    }
    uint64_t v5[2] = v6;
    *((unsigned char *)v5 + v24 + 32) = 0;
    swift_release();
    *(void *)(inited + 48) = v5;
    unint64_t v33 = _swiftEmptyArrayStorage;
    uint64_t v25 = *(void *)(inited + 32);
    uint64_t v26 = *(void *)(v25 + 16);
    swift_bridgeObjectRetain();
    if (v26 != 7) {
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    __chkstk_darwin();
    sub_100459844(v31, v25, &v32);
    unint64_t v5 = v2;
    if (v2) {
      break;
    }
    uint64_t v6 = v32;
    swift_bridgeObjectRelease();
    uint64_t v2 = &v33;
    sub_1004F1698(v6);
    uint64_t v27 = *(void *)(inited + 40);
    if (*(void *)(v27 + 16) == 7)
    {
      swift_bridgeObjectRetain();
      __chkstk_darwin();
      sub_100459844(v31, v27, &v32);
      uint64_t v6 = v32;
      swift_bridgeObjectRelease();
      sub_1004F1698(v6);
      uint64_t v28 = *(void *)(inited + 48);
      if (*(void *)(v28 + 16) == 7)
      {
        swift_bridgeObjectRetain();
        __chkstk_darwin();
        sub_100459844(v31, v28, &v32);
        uint64_t v29 = v32;
        swift_bridgeObjectRelease();
        sub_1004F1698(v29);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        sub_10000566C(&qword_100715758);
        swift_arrayDestroy();
        return (uint64_t)v33;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRelease();
    unint64_t v10 = sub_10045BC94((uint64_t)v5, v6, 0, 0xFuLL);
  }
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_10000566C(&qword_100715758);
  return swift_arrayDestroy();
}

uint64_t sub_100459844@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  unint64_t v5 = *(void *)(a2 + 16);
  if (!v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  int v6 = *(unsigned __int8 *)(a2 + 32);
  *a1 = v6;
  if (v5 == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  int v7 = *(unsigned __int8 *)(a2 + 33);
  HIDWORD(v8) = v6;
  LODWORD(v8) = v7 << 24;
  a1[1] = v8 >> 25;
  if (v5 < 3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  int v9 = *(unsigned __int8 *)(a2 + 34);
  HIDWORD(v10) = v7;
  LODWORD(v10) = v9 << 24;
  a1[2] = v10 >> 26;
  if (v5 == 3)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  int v11 = *(unsigned __int8 *)(a2 + 35);
  HIDWORD(v12) = v9;
  LODWORD(v12) = v11 << 24;
  a1[3] = v12 >> 27;
  if (v5 < 5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  int v13 = *(unsigned __int8 *)(a2 + 36);
  HIDWORD(v14) = v11;
  LODWORD(v14) = v13 << 24;
  a1[4] = v14 >> 28;
  if (v5 == 5)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  int v15 = *(unsigned __int8 *)(a2 + 37);
  HIDWORD(v16) = v13;
  LODWORD(v16) = v15 << 24;
  a1[5] = v16 >> 29;
  if (v5 < 7) {
    goto LABEL_18;
  }
  int v17 = *(unsigned __int8 *)(a2 + 38);
  HIDWORD(v18) = v15;
  LODWORD(v18) = v17 << 24;
  a1[6] = v18 >> 30;
  a1[7] = 2 * v17;
  __chkstk_darwin();
  uint64_t result = sub_1004599C4(&v24, v22, v21, v19, (uint64_t)&v25, v20, &v26);
  if (v3) {
    return swift_willThrow();
  }
  *a3 = v26;
  return result;
}

uint64_t sub_1004599C4@<X0>(void *dataOut@<X0>, void *key@<X2>, size_t keyLength@<X3>, void *dataIn@<X4>, uint64_t a5@<X1>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v20 = 0;
  if (dataIn) {
    size_t v10 = a6 - (void)dataIn;
  }
  else {
    size_t v10 = 0;
  }
  size_t dataOutAvailable = a5 - (void)dataOut;
  if (!dataOut) {
    size_t dataOutAvailable = 0;
  }
  CCCryptorStatus v12 = CCCrypt(0, 1u, 2u, key, keyLength, 0, dataIn, v10, dataOut, dataOutAvailable, (size_t *)&v20);
  if (v12)
  {
    CCCryptorStatus v13 = v12;
    sub_10045F0B8();
    swift_allocError();
    CCCryptorStatus *v14 = v13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v16 = sub_10045879C(v20, (uint64_t)dataOut, a5);
    uint64_t result = sub_10045BDF0(v16, v17, v18, v19, (uint64_t)sub_10045EF88, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10045F960);
    *a7 = result;
  }
  return result;
}

uint64_t sub_100459AF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = sub_1005E18D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  CCCryptorStatus v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100459D14(a3, a4);
  uint64_t v15 = sub_100458F54(v14, (uint64_t (*)(uint64_t))sub_100487424);
  swift_release();
  uint64_t v21 = sub_1005E1CD0();
  unint64_t v22 = v16;
  swift_bridgeObjectRetain();
  v23._uint64_t countAndFlagsBits = a5;
  v23._object = a6;
  sub_1005E1E30(v23);
  swift_bridgeObjectRelease();
  sub_100459D14(v21, v22);
  swift_bridgeObjectRelease();
  __int16 v17 = swift_retain();
  uint64_t v21 = sub_1004B9288(v17);
  unint64_t v22 = v18;
  v20[1] = v15;
  sub_10000566C(&qword_100715758);
  sub_100007494((unint64_t *)&qword_100715760, &qword_100715758);
  sub_1005E18C0();
  sub_1005E1930();
  sub_100453EA4();
  sub_100453EFC();
  sub_1005E18E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return sub_1000094D4(v21, v22);
}

uint64_t sub_100459D14(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(_WORD *)(v4 + 16) = 256;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = v5;
  *(_WORD *)(v6 + 48) = 0;
  *(unsigned char *)(v6 + 50) = 1;
  sub_10000566C(&qword_1007159D8);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10045F008;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v7;
  sub_10000566C(&qword_100715A08);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10045F050;
  *(void *)(v9 + 24) = v8;
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t sub_100459E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005E2150();
  *(void *)(v6 + 16) = 28;
  *(void *)(v6 + 34) = 0;
  *(void *)(v6 + 42) = 0;
  *(void *)(v6 + 50) = 0;
  *(_WORD *)(v6 + 58) = 0;
  *(_WORD *)(v6 + 32) = 257;
  *(void *)(v6 + 40) = a1;
  if (*(void *)(a2 + 16) >= 8uLL) {
    size_t v7 = 8;
  }
  else {
    size_t v7 = *(void *)(a2 + 16);
  }
  memmove((void *)(v6 + 48), (const void *)(a2 + 32), v7);
  if (a3)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1004F1698(v8);
  }
  uint64_t v9 = sub_1005E2150();
  *(void *)(v9 + 16) = 4;
  *(_DWORD *)(v9 + 32) = 0;
  sub_1004F1698(v9);
  return v6;
}

uint64_t sub_100459F2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 + 4;
  if (__OFADD__(a2, 4))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (a3)
  {
    if (a4 - a3 >= v4)
    {
      if (v4 >= a2)
      {
        *(_DWORD *)(a3 + a2) = result;
        return result;
      }
LABEL_10:
      __break(1u);
    }
    goto LABEL_11;
  }
  if (v4 > 0)
  {
LABEL_11:
    uint64_t result = sub_1005E2F20();
    __break(1u);
    return result;
  }
  if (v4 < a2) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100459FF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 + 2;
  if (__OFADD__(a2, 2))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (a3)
  {
    if (a4 - a3 >= v4)
    {
      if (v4 >= a2)
      {
        *(_WORD *)(a3 + a2) = result;
        return result;
      }
LABEL_10:
      __break(1u);
    }
    goto LABEL_11;
  }
  if (v4 > 0)
  {
LABEL_11:
    uint64_t result = sub_1005E2F20();
    __break(1u);
    return result;
  }
  if (v4 < a2) {
    goto LABEL_10;
  }
  return result;
}

BOOL sub_10045A0B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && *((unsigned __int16 *)a1 + 1) == *((unsigned __int16 *)a2 + 1);
}

uint64_t sub_10045A0EC()
{
  uint64_t v1 = sub_1005E3230();
  v2._uint64_t countAndFlagsBits = 46;
  v2._object = (void *)0xE100000000000000;
  sub_1005E1E30(v2);
  v3._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 46;
  v4._object = (void *)0xE100000000000000;
  sub_1005E1E30(v4);
  v5._uint64_t countAndFlagsBits = sub_1005E3230();
  sub_1005E1E30(v5);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10045A1CC()
{
  return sub_10045A0EC();
}

uint64_t sub_10045A1D4(void *a1)
{
  uint64_t v2 = sub_1005E1CE0();
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t result = sub_1004B889C(0, v3, 0);
    uint64_t v5 = *(void *)(v2 + 16);
    uint64_t v6 = "NTLMSSP";
    do
    {
      if (!v5)
      {
        __break(1u);
        return result;
      }
      char v7 = *v6;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        uint64_t result = sub_1004B889C(v8 > 1, v9 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v9 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v9) = v7;
      --v5;
      ++v6;
      --v3;
    }
    while (v3);
    swift_release();
    if (!a1) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    if (!a1) {
      return swift_bridgeObjectRelease();
    }
  }
  memmove(a1, &_swiftEmptyArrayStorage[4], _swiftEmptyArrayStorage[2]);
  return swift_bridgeObjectRelease();
}

char *sub_10045A31C(char *result, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t)result;
  if (a3)
  {
    uint64_t v7 = a4 - a3;
    if (a4 - a3 >= (uint64_t)result)
    {
      uint64_t v8 = (uint64_t)&result[a2];
      if (__OFADD__(result, a2))
      {
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v7 >= v8)
      {
        int64_t v10 = a2;
        BOOL v9 = v8 == (void)result;
        if (v8 >= (uint64_t)result) {
          goto LABEL_6;
        }
        goto LABEL_17;
      }
    }
    goto LABEL_12;
  }
  if ((uint64_t)result > 0) {
    goto LABEL_12;
  }
  uint64_t v8 = (uint64_t)&result[a2];
  if (!__OFADD__(result, a2))
  {
    if (v8 <= 0)
    {
      uint64_t v7 = 0;
      int64_t v10 = a2;
      BOOL v9 = v8 == (void)result;
      if (v8 >= (uint64_t)result)
      {
LABEL_6:
        if (v9) {
          return (char *)_swiftEmptyArrayStorage;
        }
        if (v10 >= 1)
        {
          sub_10000566C(&qword_100715960);
          Swift::String v4 = (char *)swift_allocObject();
          size_t v12 = j__malloc_size(v4);
          *((void *)v4 + 2) = v10;
          *((void *)v4 + 3) = 2 * v12 - 64;
          goto LABEL_19;
        }
LABEL_18:
        Swift::String v4 = (char *)_swiftEmptyArrayStorage;
LABEL_19:
        uint64_t result = (char *)sub_10045C2CC(v13, v4 + 32, v10, v6, v8, a3, v7);
        if (result != (char *)v10)
        {
          __break(1u);
          goto LABEL_21;
        }
        return v4;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_12:
    sub_10045ED58();
    swift_allocError();
    *(void *)uint64_t v11 = 1;
    *(unsigned char *)(v11 + 8) = 2;
    swift_willThrow();
    return v4;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_10045A478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Swift::String v4 = (void *)(a1 + 16);
  char v5 = 1;
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(_WORD **)(a1 + 16);
  if (v7)
  {
    if (v7 == *(_WORD **)(a1 + 24))
    {
      LOWORD(v7) = 0;
      char v5 = 1;
    }
    else
    {
      char v5 = 0;
      void *v4 = v7 + 1;
      LOWORD(v7) = *v7;
    }
  }
  *(_WORD *)a2 = (_WORD)v7;
  *(unsigned char *)(a2 + 2) = v5;
  return result;
}

Swift::UInt32 (__swiftcall *sub_10045A500())(IMAP2Persistence::CredentialsRequestID)
{
  LODWORD(v1) = *v0;
  unsigned int v2 = *((unsigned __int8 *)v0 + 4);
  int v17 = *v0;
  char v18 = v2;
  if (!v2)
  {
    sub_1005E3020();
    if (v16)
    {
LABEL_3:
      char v3 = 0;
      unsigned int v4 = 0;
      unsigned __int8 v5 = 1;
LABEL_26:
      int *v0 = v1;
      *((unsigned char *)v0 + 4) = v3;
      LOBYTE(v15) = v5;
      return (Swift::UInt32 (__swiftcall *)(IMAP2Persistence::CredentialsRequestID))(v4 | ((unint64_t)v5 << 32));
    }
    unsigned int v4 = v15;
    if ((v15 & 0xF800) != 0xD800)
    {
      char v3 = 0;
      unsigned __int8 v5 = 0;
      goto LABEL_26;
    }
    LODWORD(v1) = v1 & 0xFFFF0000 | v15;
    unsigned int v2 = 16;
LABEL_6:
    sub_1005E3020();
    if (v16)
    {
      char v6 = v2;
      goto LABEL_8;
    }
    LODWORD(v1) = ((-65535 << v2) - 1) & v1 | (v15 << v2);
    char v6 = v2 + 16;
    if ((v2 + 16) <= 0x1Fu)
    {
      sub_1005E3020();
      if (v16)
      {
LABEL_8:
        if (!v6) {
          goto LABEL_3;
        }
        goto LABEL_16;
      }
      LODWORD(v1) = ((-65535 << v6) - 1) & v1 | (v15 << v6);
      char v6 = v2 + 32;
      if (v2 >= 0xE0)
      {
        sub_1005E3020();
        if ((v16 & 1) == 0)
        {
          unsigned int v7 = ((-65535 << v2) - 1) & v1 | (v15 << v2);
          char v6 = v2 + 48;
LABEL_17:
          unsigned int v8 = v7 & 0xFC00FC00;
          if ((v7 & 0xFC00FC00) == 0xDC00D800) {
            char v9 = 32;
          }
          else {
            char v9 = 16;
          }
          char v3 = v6 - v9;
          BOOL v10 = v8 == -603924480;
          if (v8 == -603924480) {
            char v11 = 32;
          }
          else {
            char v11 = 16;
          }
          unint64_t v1 = (unint64_t)v7 >> v11;
          if (v10)
          {
            unsigned __int8 v5 = 0;
            unsigned int v4 = (HIWORD(v7) & 0x3FF | ((v7 & 0x3FF) << 10)) + 0x10000;
          }
          else
          {
            unsigned int v4 = 1;
            unsigned __int8 v5 = 1;
          }
          goto LABEL_26;
        }
        goto LABEL_8;
      }
    }
LABEL_16:
    unsigned int v7 = v1;
    goto LABEL_17;
  }
  if ((v1 & 0xF800) == 0xD800) {
    goto LABEL_6;
  }
  sub_10045EE18();
  uint64_t result = UnsafeExtractedAttachment.part.modify();
  char v14 = *(unsigned char *)(v13 + 4);
  if (v14)
  {
    *(_DWORD *)uint64_t v13 = *(unsigned __int16 *)(v13 + 2);
    *(unsigned char *)(v13 + 4) = v14 - 16;
    ((void (*)(unsigned __int16 *, void))result)(&v15, 0);
    unsigned __int8 v5 = 0;
    unsigned int v4 = (unsigned __int16)v1;
    LODWORD(v1) = v17;
    char v3 = v18;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_10045A740@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 17) == 1)
  {
    uint64_t result = sub_1005E3020();
    if (v9)
    {
      char v5 = 0;
      char v6 = 1;
    }
    else
    {
      char v5 = v7;
      uint64_t result = swift_beginAccess();
      char v6 = 0;
      *(_WORD *)(a1 + 16) = v8;
    }
  }
  else
  {
    char v5 = *(unsigned char *)(a1 + 16);
    uint64_t result = swift_beginAccess();
    char v6 = 0;
    *(_WORD *)(a1 + 16) = 256;
  }
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t sub_10045A818@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  int v2 = sub_1005E1EE0();
  uint64_t result = swift_endAccess();
  *(_WORD *)a1 = v2;
  *(unsigned char *)(a1 + 2) = BYTE2(v2) & 1;
  return result;
}

void sub_10045A874(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_10045A87C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_10045A890@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_10045A8A4@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10045A8B8(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_10045A8E8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_10045A914@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_10045A938(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_10045A94C(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_10045A960(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_10045A974@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10045A988(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10045A99C(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10045A9B0(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_10045A9C4()
{
  return *v0 == 0;
}

_DWORD *sub_10045A9D4(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_10045A9E8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_10045F158(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10045AA28(int a1)
{
  if (a1)
  {
    int v2 = sub_1004D0CEC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      int v2 = sub_1004D0CEC((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    v2[2] = v4 + 1;
    int v5 = &v2[2 * v4];
    v5[4] = 0xD000000000000010;
    _OWORD v5[5] = 0x80000001005EA8F0;
  }
  else
  {
    int v2 = _swiftEmptyArrayStorage;
  }
  if ((a1 & 2) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      int v2 = sub_1004D0CEC((void *)(v6 > 1), v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    unsigned __int8 v8 = (char *)&v2[2 * v7];
    strcpy(v8 + 32, "negotiateOEM");
    v8[45] = 0;
    *((_WORD *)v8 + 23) = -5120;
    if ((a1 & 4) == 0)
    {
LABEL_8:
      if ((a1 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_38;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_8;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v10 = v2[2];
  unint64_t v9 = v2[3];
  if (v10 >= v9 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v9 > 1), v10 + 1, 1, v2);
  }
  v2[2] = v10 + 1;
  char v11 = (char *)&v2[2 * v10];
  strcpy(v11 + 32, "requestTarget");
  *((_WORD *)v11 + 23) = -4864;
  if ((a1 & 0x10) == 0)
  {
LABEL_9:
    if ((a1 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_38:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v13 = v2[2];
  unint64_t v12 = v2[3];
  if (v13 >= v12 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v12 > 1), v13 + 1, 1, v2);
  }
  v2[2] = v13 + 1;
  char v14 = (char *)&v2[2 * v13];
  strcpy(v14 + 32, "negotiateSign");
  *((_WORD *)v14 + 23) = -4864;
  if ((a1 & 0x20) == 0)
  {
LABEL_10:
    if ((a1 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_48;
  }
LABEL_43:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v16 = v2[2];
  unint64_t v15 = v2[3];
  if (v16 >= v15 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v15 > 1), v16 + 1, 1, v2);
  }
  v2[2] = v16 + 1;
  int v17 = (char *)&v2[2 * v16];
  strcpy(v17 + 32, "negotiateSeal");
  *((_WORD *)v17 + 23) = -4864;
  if ((a1 & 0x40) == 0)
  {
LABEL_11:
    if ((a1 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_53;
  }
LABEL_48:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v19 = v2[2];
  unint64_t v18 = v2[3];
  if (v19 >= v18 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v18 > 1), v19 + 1, 1, v2);
  }
  v2[2] = v19 + 1;
  uint64_t v20 = &v2[2 * v19];
  v20[4] = 0xD000000000000016;
  v20[5] = 0x80000001005EA8D0;
  if ((a1 & 0x80) == 0)
  {
LABEL_12:
    if ((a1 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }
LABEL_53:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v22 = v2[2];
  unint64_t v21 = v2[3];
  if (v22 >= v21 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v21 > 1), v22 + 1, 1, v2);
  }
  v2[2] = v22 + 1;
  Swift::String v23 = &v2[2 * v22];
  v23[4] = 0xD000000000000016;
  v23[5] = 0x80000001005EA8B0;
  if ((a1 & 0x200) == 0)
  {
LABEL_13:
    if ((a1 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_63;
  }
LABEL_58:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v25 = v2[2];
  unint64_t v24 = v2[3];
  if (v25 >= v24 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v24 > 1), v25 + 1, 1, v2);
  }
  v2[2] = v25 + 1;
  uint64_t v26 = (char *)&v2[2 * v25];
  strcpy(v26 + 32, "negotiateNTLM");
  *((_WORD *)v26 + 23) = -4864;
  if ((a1 & 0x800) == 0)
  {
LABEL_14:
    if ((a1 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_68;
  }
LABEL_63:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v28 = v2[2];
  unint64_t v27 = v2[3];
  if (v28 >= v27 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v27 > 1), v28 + 1, 1, v2);
  }
  v2[2] = v28 + 1;
  uint64_t v29 = &v2[2 * v28];
  v29[4] = 0xD000000000000012;
  v29[5] = 0x80000001005EA890;
  if ((a1 & 0x1000) == 0)
  {
LABEL_15:
    if ((a1 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_73;
  }
LABEL_68:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v31 = v2[2];
  unint64_t v30 = v2[3];
  if (v31 >= v30 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v30 > 1), v31 + 1, 1, v2);
  }
  v2[2] = v31 + 1;
  uint64_t v32 = &v2[2 * v31];
  v32[4] = 0xD000000000000017;
  v32[5] = 0x80000001005EA870;
  if ((a1 & 0x2000) == 0)
  {
LABEL_16:
    if ((a1 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_78;
  }
LABEL_73:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v34 = v2[2];
  unint64_t v33 = v2[3];
  if (v34 >= v33 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v33 > 1), v34 + 1, 1, v2);
  }
  v2[2] = v34 + 1;
  unint64_t v35 = &v2[2 * v34];
  v35[4] = 0xD00000000000001CLL;
  v35[5] = 0x80000001005EA850;
  if ((a1 & 0x8000) == 0)
  {
LABEL_17:
    if ((a1 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_83;
  }
LABEL_78:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v37 = v2[2];
  unint64_t v36 = v2[3];
  if (v37 >= v36 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v36 > 1), v37 + 1, 1, v2);
  }
  v2[2] = v37 + 1;
  unint64_t v38 = &v2[2 * v37];
  v38[4] = 0xD000000000000013;
  v38[5] = 0x80000001005EA830;
  if ((a1 & 0x10000) == 0)
  {
LABEL_18:
    if ((a1 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_88;
  }
LABEL_83:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v40 = v2[2];
  unint64_t v39 = v2[3];
  if (v40 >= v39 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v39 > 1), v40 + 1, 1, v2);
  }
  v2[2] = v40 + 1;
  uint64_t v41 = &v2[2 * v40];
  v41[4] = 0xD000000000000010;
  v41[5] = 0x80000001005EA810;
  if ((a1 & 0x20000) == 0)
  {
LABEL_19:
    if ((a1 & 0x80000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_93;
  }
LABEL_88:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v43 = v2[2];
  unint64_t v42 = v2[3];
  if (v43 >= v42 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v42 > 1), v43 + 1, 1, v2);
  }
  v2[2] = v43 + 1;
  uint64_t v44 = &v2[2 * v43];
  v44[4] = 0xD000000000000010;
  v44[5] = 0x80000001005EA7F0;
  if ((a1 & 0x80000) == 0)
  {
LABEL_20:
    if ((a1 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_98;
  }
LABEL_93:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v46 = v2[2];
  unint64_t v45 = v2[3];
  if (v46 >= v45 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v45 > 1), v46 + 1, 1, v2);
  }
  v2[2] = v46 + 1;
  unint64_t v47 = &v2[2 * v46];
  v47[4] = 0xD000000000000011;
  v47[5] = 0x80000001005EA7D0;
  if ((a1 & 0x100000) == 0)
  {
LABEL_21:
    if ((a1 & 0x400000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_103;
  }
LABEL_98:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v49 = v2[2];
  unint64_t v48 = v2[3];
  if (v49 >= v48 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v48 > 1), v49 + 1, 1, v2);
  }
  v2[2] = v49 + 1;
  uint64_t v50 = &v2[2 * v49];
  v50[4] = 0xD000000000000011;
  v50[5] = 0x80000001005EA7B0;
  if ((a1 & 0x400000) == 0)
  {
LABEL_22:
    if ((a1 & 0x800000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_108;
  }
LABEL_103:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v52 = v2[2];
  unint64_t v51 = v2[3];
  if (v52 >= v51 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v51 > 1), v52 + 1, 1, v2);
  }
  v2[2] = v52 + 1;
  int64_t v53 = &v2[2 * v52];
  v53[4] = 0xD000000000000016;
  v53[5] = 0x80000001005EA790;
  if ((a1 & 0x800000) == 0)
  {
LABEL_23:
    if ((a1 & 0x2000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_113;
  }
LABEL_108:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v55 = v2[2];
  unint64_t v54 = v2[3];
  if (v55 >= v54 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v54 > 1), v55 + 1, 1, v2);
  }
  v2[2] = v55 + 1;
  unint64_t v56 = &v2[2 * v55];
  v56[4] = 0xD000000000000013;
  v56[5] = 0x80000001005EA770;
  if ((a1 & 0x2000000) == 0)
  {
LABEL_24:
    if ((a1 & 0x20000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_118;
  }
LABEL_113:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v58 = v2[2];
  unint64_t v57 = v2[3];
  if (v58 >= v57 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v57 > 1), v58 + 1, 1, v2);
  }
  v2[2] = v58 + 1;
  uint64_t v59 = &v2[2 * v58];
  v59[4] = 0xD000000000000010;
  v59[5] = 0x80000001005EA750;
  if ((a1 & 0x20000000) == 0)
  {
LABEL_25:
    if ((a1 & 0x40000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_123;
  }
LABEL_118:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v61 = v2[2];
  unint64_t v60 = v2[3];
  if (v61 >= v60 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v60 > 1), v61 + 1, 1, v2);
  }
  v2[2] = v61 + 1;
  uint64_t v62 = (char *)&v2[2 * v61];
  strcpy(v62 + 32, "negotiate128");
  v62[45] = 0;
  *((_WORD *)v62 + 23) = -5120;
  if ((a1 & 0x40000000) == 0)
  {
LABEL_26:
    if ((a1 & 0x80000000) == 0) {
      goto LABEL_133;
    }
    goto LABEL_128;
  }
LABEL_123:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
  }
  unint64_t v64 = v2[2];
  unint64_t v63 = v2[3];
  if (v64 >= v63 >> 1) {
    int v2 = sub_1004D0CEC((void *)(v63 > 1), v64 + 1, 1, v2);
  }
  v2[2] = v64 + 1;
  uint64_t v65 = &v2[2 * v64];
  v65[4] = 0xD000000000000014;
  v65[5] = 0x80000001005EA730;
  if (a1 < 0)
  {
LABEL_128:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v2 = sub_1004D0CEC(0, v2[2] + 1, 1, v2);
    }
    unint64_t v67 = v2[2];
    unint64_t v66 = v2[3];
    if (v67 >= v66 >> 1) {
      int v2 = sub_1004D0CEC((void *)(v66 > 1), v67 + 1, 1, v2);
    }
    v2[2] = v67 + 1;
    unint64_t v68 = &v2[2 * v67];
    v68[4] = 0x746169746F67656ELL;
    v68[5] = 0xEB00000000363565;
  }
LABEL_133:
  sub_10000566C(&qword_100715740);
  sub_100007494((unint64_t *)&qword_100715748, &qword_100715740);
  uint64_t v69 = sub_1005E1A80();
  swift_bridgeObjectRelease();
  return v69;
}

uint64_t sub_10045B60C()
{
  return sub_10045AA28(*v0);
}

uint64_t _s16ChallengeMessageVwxx(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 != 255) {
    sub_1002173AC(*(void *)a1, *(void *)(a1 + 8), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s16ChallengeMessageVwcp(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    sub_100217C58(*a2, v6, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v4;
  }
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = a2[5];
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16ChallengeMessageVwca(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v4 == 255)
    {
      long long v13 = *a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)a1 = v13;
    }
    else
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      sub_100217C58(*(void *)a2, v11, v4);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(unsigned char *)(a1 + 16) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_10045B82C(a1);
    char v12 = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(unsigned char *)(a1 + 16) = v12;
  }
  else
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *((void *)a2 + 1);
    sub_100217C58(*(void *)a2, v6, v4);
    uint64_t v7 = *(void *)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v4;
    sub_1002173AC(v7, v8, v9);
  }
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  return a1;
}

uint64_t sub_10045B82C(uint64_t a1)
{
  return a1;
}

__n128 _s16ChallengeMessageVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s16ChallengeMessageVwta(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 255) {
    goto LABEL_5;
  }
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 255)
  {
    sub_10045B82C(a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1002173AC(v6, v7, v4);
LABEL_6:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

uint64_t _s16ChallengeMessageVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 52)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s16ChallengeMessageVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 52) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 52) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s16ChallengeMessageVMa()
{
  return &_s16ChallengeMessageVN;
}

uint64_t _s16ChallengeMessageV6TargetOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045F6D0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_100217C58);
}

uint64_t *_s16ChallengeMessageV6TargetOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045F74C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_100217C58, (void (*)(uint64_t, uint64_t, uint64_t))sub_1002173AC);
}

uint64_t *_s16ChallengeMessageV6TargetOwta(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10045F7D0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1002173AC);
}

uint64_t getEnumTagSinglePayload for UnauthenticatedState.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

ValueMetadata *_s16ChallengeMessageV6TargetOMa()
{
  return &_s16ChallengeMessageV6TargetON;
}

_DWORD *_s9OSVersionVwCP(_DWORD *result, _DWORD *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *_s9OSVersionVMa()
{
  return &_s9OSVersionVN;
}

ValueMetadata *_s5FlagsVMa()
{
  return &_s5FlagsVN;
}

unint64_t sub_10045BAB0()
{
  unint64_t result = qword_1007159A0;
  if (!qword_1007159A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159A0);
  }
  return result;
}

unint64_t sub_10045BB08()
{
  unint64_t result = qword_1007159A8;
  if (!qword_1007159A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159A8);
  }
  return result;
}

unint64_t sub_10045BB60()
{
  unint64_t result = qword_1007159B0;
  if (!qword_1007159B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159B0);
  }
  return result;
}

unint64_t sub_10045BBB8()
{
  unint64_t result = qword_1007159B8;
  if (!qword_1007159B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159B8);
  }
  return result;
}

uint64_t sub_10045BC0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5 - a4;
  if (!a4) {
    uint64_t v5 = 0;
  }
  if (result < 0 || v5 < result)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a3 < 0 || v5 < a3) {
    goto LABEL_19;
  }
  uint64_t v6 = a3 - result;
  if (a2 > 0)
  {
    if (v6 < 0 || v6 >= (unint64_t)a2) {
      goto LABEL_14;
    }
    return 0;
  }
  if (v6 <= 0 && v6 > a2) {
    return 0;
  }
LABEL_14:
  BOOL v7 = __OFADD__(result, a2);
  result += a2;
  if (v7)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (result < 0 || v5 < result) {
    goto LABEL_21;
  }
  return result;
}

void *sub_10045BC94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  int64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        uint64_t v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5) {
          goto LABEL_17;
        }
        memcpy(v10, (const void *)(a2 + a3), v5);
        return v8;
      }
    }
    else
    {
      sub_10000566C(&qword_100715960);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      _OWORD v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  unint64_t result = (void *)sub_1005E3000();
  __break(1u);
  return result;
}

uint64_t sub_10045BDF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *(*a6)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v6 = a4 - a3;
  if (!a3) {
    uint64_t v6 = 0;
  }
  if (result < 0 || (uint64_t v7 = result, v6 < result))
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (a2 < 0 || v6 < a2) {
    goto LABEL_20;
  }
  uint64_t v8 = a2 - result;
  if (a2 == result) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  if (v8 <= 0)
  {
    size_t v9 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10000566C(&qword_100715960);
    size_t v9 = (void *)swift_allocObject();
    size_t v13 = j__malloc_size(v9);
    void v9[2] = v8;
    v9[3] = 2 * v13 - 64;
  }
  __chkstk_darwin();
  __chkstk_darwin();
  unint64_t result = (uint64_t)sub_10045C540(a3, a4, a6);
  uint64_t v15 = v7 + v14;
  if (__OFADD__(v7, v14)) {
    goto LABEL_21;
  }
  uint64_t v16 = a4 - a3;
  if (!a3) {
    uint64_t v16 = 0;
  }
  if (v15 < 0 || v16 < v15) {
    goto LABEL_22;
  }
  if (v14 == v8) {
    return (uint64_t)v9;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_10045BF84(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1005E0550();
  if (!result || (uint64_t result = sub_1005E0580(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1005E0570();
      sub_1005E1930();
      sub_100453EA4();
      return sub_1005E1870();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10045C034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1005E0550();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_1005E0580();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_1005E0570();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return sub_100457D24(v7, v13, a3);
}

Swift::UInt32 (__swiftcall *sub_10045C0C8(Swift::UInt32 (__swiftcall *result)(IMAP2Persistence::CredentialsRequestID), unint64_t a2, uint64_t a3))(IMAP2Persistence::CredentialsRequestID)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    *(unsigned char *)uint64_t result = *(unsigned char *)(a3 + a2 + 32);
    return UInt32.init(_:);
  }
  __break(1u);
  return result;
}

uint64_t sub_10045C110()
{
  if (*(unsigned char *)(v0 + 64))
  {
    unsigned int v1 = 0;
    int v2 = 1;
    return v1 | (v2 << 16);
  }
  uint64_t v3 = *(void *)(v0 + 32);
  if (v3 == *(void *)(v0 + 8)) {
    goto LABEL_7;
  }
  int v4 = *(unsigned __int8 *)(*(void *)(v0 + 16) + v3);
  *(void *)(v0 + 32) = v3 + 1;
  unint64_t v6 = *(void *)(v0 + 48);
  unint64_t v5 = *(void *)(v0 + 56);
  unint64_t v7 = *(void *)(v0 + 40);
  unint64_t v8 = v7 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0) {
    unint64_t v8 = HIBYTE(v6) & 0xF;
  }
  if (v5 >> 14 == 4 * v8)
  {
LABEL_7:
    unsigned int v1 = 0;
    int v2 = 1;
    *(unsigned char *)(v0 + 64) = 1;
    return v1 | (v2 << 16);
  }
  uint64_t v9 = (v7 >> 59) & 1;
  if ((v6 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  if ((*(void *)(v0 + 56) & 0xCLL) == 4 << v9)
  {
    unint64_t v22 = *(void *)(v0 + 48);
    unint64_t v24 = *(void *)(v0 + 40);
    unint64_t v20 = v8;
    unint64_t v5 = sub_1000C6E1C(v5, v7, v6);
    unint64_t v8 = v20;
    unint64_t v6 = v22;
    unint64_t v7 = v24;
  }
  unint64_t v10 = v5 >> 16;
  if (v5 >> 16 >= v8)
  {
    __break(1u);
    goto LABEL_27;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
LABEL_27:
    uint64_t result = sub_1005E1EC0();
    goto LABEL_19;
  }
  if ((v6 & 0x2000000000000000) != 0)
  {
    v28[0] = v7;
    v28[1] = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t result = *((unsigned __int8 *)v28 + v10);
  }
  else
  {
    if ((v7 & 0x1000000000000000) != 0)
    {
      uint64_t v11 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else
    {
      unint64_t v27 = v5 >> 16;
      uint64_t v11 = sub_1005E2D30();
      unint64_t v10 = v27;
    }
    uint64_t result = *(unsigned __int8 *)(v11 + v10);
  }
LABEL_19:
  unint64_t v13 = *(void *)(v0 + 40);
  unint64_t v14 = *(void *)(v0 + 48);
  unint64_t v15 = *(void *)(v0 + 56);
  uint64_t v16 = (v13 >> 59) & 1;
  if ((v14 & 0x1000000000000000) == 0) {
    LOBYTE(v16) = 1;
  }
  if ((*(void *)(v0 + 56) & 0xCLL) == 4 << v16)
  {
    unsigned int v25 = result;
    unint64_t v21 = *(void *)(v0 + 48);
    unint64_t v23 = *(void *)(v0 + 40);
    uint64_t v18 = sub_1000C6E1C(v15, v13, v14);
    unint64_t v14 = v21;
    unint64_t v13 = v23;
    unint64_t v15 = v18;
    uint64_t result = v25;
    if ((v21 & 0x1000000000000000) == 0) {
      goto LABEL_23;
    }
  }
  else if ((v14 & 0x1000000000000000) == 0)
  {
LABEL_23:
    uint64_t v17 = (v15 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_24:
    int v2 = 0;
    *(void *)(v0 + 56) = v17;
    unsigned int v1 = v4 & 0xFFFF00FF | (result << 8);
    return v1 | (v2 << 16);
  }
  char v26 = result;
  unint64_t v19 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    unint64_t v19 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v19 > v15 >> 16)
  {
    uint64_t v17 = sub_1005E1E90();
    LOBYTE(result) = v26;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

size_t sub_10045C2CC(void *a1, char *__dst, int64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (__OFADD__(a4, a5 - a4))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (a5 < a4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v12 = 0;
  unint64_t v13 = (char *)(a6 + a4);
  if (!a6) {
    unint64_t v13 = 0;
  }
  if (a5 == a4 || !a3) {
    goto LABEL_14;
  }
  if (a5 - a4 >= a3) {
    size_t v12 = a3;
  }
  else {
    size_t v12 = a5 - a4;
  }
  if ((v12 & 0x8000000000000000) == 0 && (&__dst[v12] <= v13 || &v13[v12] <= __dst))
  {
    memcpy(__dst, v13, v12);
LABEL_14:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v12 + a4;
    return v12;
  }
LABEL_17:
  size_t result = sub_1005E3000();
  __break(1u);
  return result;
}

char *sub_10045C418(char *__src, int64_t a2, char *__dst, int64_t a4)
{
  int v4 = __src;
  if (!a2 || !a4) {
    return v4;
  }
  if (a2 >= a4) {
    size_t v5 = a4;
  }
  else {
    size_t v5 = a2;
  }
  if ((v5 & 0x8000000000000000) == 0 && (&__dst[v5] <= __src || &__src[v5] <= __dst))
  {
    memcpy(__dst, __src, v5);
    v4 += v5;
    return v4;
  }
  size_t result = (char *)sub_1005E3000();
  __break(1u);
  return result;
}

void *sub_10045C540(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  size_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

void *sub_10045C598@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, void *(*a3)(long long *__return_ptr, uint64_t, void *)@<X3>, _OWORD *a4@<X8>)
{
  unint64_t v19 = a4;
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = sub_1001F94DC(0, *a2, v10, v9);
  size_t result = (void *)sub_1001F94DC(v7, v8, v10, v9);
  if (__OFADD__(v11, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v13 = result;
  if ((uint64_t)result + v11 < v11)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (a1) {
    uint64_t v14 = a1 + v11;
  }
  else {
    uint64_t v14 = 0;
  }
  size_t result = a3(&v17, v14, v13);
  if (!v4)
  {
    uint64_t v15 = v18;
    uint64_t v16 = v19;
    *unint64_t v19 = v17;
    *((void *)v16 + 2) = v15;
  }
  return result;
}

uint64_t sub_10045C66C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_43;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a6 != 2) {
        goto LABEL_43;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a6 != 3) {
        goto LABEL_43;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a6 != 4) {
        goto LABEL_43;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a6 != 5) {
        goto LABEL_43;
      }
      if (a1 != a4 || a2 != a5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 6:
      switch(a1)
      {
        case 1:
          if (a6 != 6 || a4 != 1 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        case 2:
          if (a6 != 6 || a4 != 2 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        case 3:
          if (a6 != 6 || a4 != 3 || a5) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
        default:
          if (a6 != 6 || a5 | a4) {
            goto LABEL_43;
          }
          uint64_t result = 1;
          break;
      }
      break;
    default:
      if (a6)
      {
LABEL_43:
        uint64_t result = 0;
      }
      else if (a1 == a4 && a2 == a5)
      {
        uint64_t result = 1;
      }
      else
      {
LABEL_26:
        uint64_t result = sub_1005E3290();
      }
      break;
  }
  return result;
}

uint64_t sub_10045C848(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      return sub_1005E3290();
    }
    return 0;
  }
  if (a3 != 1) {
    return a6 == 2 && !(a5 | a4);
  }
  if (a6 != 1) {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  return sub_1005E3290();
}

BOOL sub_10045C8D0(uint64_t *a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a1 + 16);
  int v5 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    if (v5 != 255) {
      return 0;
    }
    goto LABEL_3;
  }
  if (v5 == 255) {
    return 0;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (v4)
  {
    if (v4 != 1)
    {
      BOOL result = 0;
      if (v5 != 2 || v11 | v10) {
        return result;
      }
LABEL_3:
      if (sub_1004AFEC8(a1[3], a2[3]))
      {
        uint64_t v6 = a1[4];
        uint64_t v7 = a2[4];
        if (v6)
        {
          if (!v7 || !_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(v6, v7)) {
            return 0;
          }
LABEL_24:
          if (_s13IMAP2Protocol13EncodedStringV2eeoiySbAC_ACtFZ_0(a1[5], a2[5])) {
            return *((_DWORD *)a1 + 12) == *((_DWORD *)a2 + 12);
          }
          return 0;
        }
        if (!v7) {
          goto LABEL_24;
        }
      }
      return 0;
    }
    if (v5 != 1) {
      return 0;
    }
  }
  else if (*((unsigned char *)a2 + 16))
  {
    return 0;
  }
  if (v9 == v10 && a1[1] == v11) {
    goto LABEL_3;
  }
  char v12 = sub_1005E3290();
  BOOL result = 0;
  if (v12) {
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_10045C9D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = sub_1005E1930();
  uint64_t v39 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005E1940();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  __chkstk_darwin();
  unint64_t v36 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10000566C(&qword_100715A20);
  __chkstk_darwin();
  uint64_t v18 = (uint64_t *)((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_100459D14(a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v20 = (void *)sub_100458F54(v19, (uint64_t (*)(uint64_t))sub_100487424);
  swift_release();
  swift_bridgeObjectRetain();
  unint64_t v21 = (void *)sub_1005E2150();
  v21[2] = 16;
  v21[4] = 0;
  v21[5] = 0;
  v41[0] = a8;
  sub_1004F1698((uint64_t)v21);
  uint64_t v33 = v41[0];
  v41[0] = a7;
  sub_1004F1698(a8);
  uint64_t v22 = sub_1004C31D8(v41[0]);
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  sub_100453EA4();
  sub_1005E1890();
  unint64_t v34 = v20;
  switch(v24 >> 62)
  {
    case 1uLL:
      if (v22 >> 32 < (int)v22) {
        __break(1u);
      }
      sub_100008D24(v22, v24);
      uint64_t v29 = v40;
      sub_10045BF84((int)v22, v22 >> 32);
      uint64_t v28 = v29;
      goto LABEL_9;
    case 2uLL:
      uint64_t v25 = *(void *)(v22 + 16);
      uint64_t v26 = *(void *)(v22 + 24);
      sub_100008D24(v22, v24);
      swift_retain();
      swift_retain();
      uint64_t v27 = v40;
      sub_10045BF84(v25, v26);
      if (v27)
      {
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x10045CED0);
      }
      uint64_t v28 = 0;
      swift_release();
      swift_release();
LABEL_9:
      sub_1000094D4(v22, v24);
      goto LABEL_10;
    case 3uLL:
      memset(v41, 0, 14);
      goto LABEL_6;
    default:
      v41[0] = v22;
      LOWORD(v41[1]) = v24;
      BYTE2(v41[1]) = BYTE2(v24);
      BYTE3(v41[1]) = BYTE3(v24);
      BYTE4(v41[1]) = BYTE4(v24);
      BYTE5(v41[1]) = BYTE5(v24);
LABEL_6:
      sub_1005E1870();
      sub_1000094D4(v22, v24);
      uint64_t v28 = v40;
LABEL_10:
      unint64_t v30 = v36;
      sub_1005E1880();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v12);
      sub_1000094D4(v22, v24);
      (*(void (**)(void *, char *, uint64_t))(v37 + 32))(v18, v30, v38);
      *(void *)((char *)v18 + *(int *)(v35 + 36)) = 8;
      sub_1004871B4(v18);
      sub_10045F058((uint64_t)v18);
      sub_10045924C(v34);
      if (v28)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        return v33;
      }
  }
}

uint64_t sub_10045CEE0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v15 = result;
  unint64_t v17 = *(void *)(a5 + 16);
  if (!v17) {
    goto LABEL_7;
  }
  unint64_t v18 = 0;
  uint64_t v19 = (unsigned char *)(a5 + 48);
  while (*v19 != 1)
  {
    ++v18;
    v19 += 24;
    if (v17 == v18) {
      goto LABEL_7;
    }
  }
  if (v17 == v18)
  {
LABEL_7:
    uint64_t v20 = 0;
    uint64_t v21 = 0xE000000000000000;
    goto LABEL_8;
  }
  if (v18 >= v17)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*v19 != 1)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v20 = *((void *)v19 - 2);
  uint64_t v21 = *((void *)v19 - 1);
  swift_bridgeObjectRetain();
LABEL_8:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_10045C9D0(v15, a2, a3, a4, v20, v21, a6, a8);
  if (v9) {
    return swift_bridgeObjectRelease();
  }
  *(void *)a9 = v15;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = v20;
  *(void *)(a9 + 24) = v21;
  *(void *)(a9 + 32) = v22;
  *(void *)(a9 + 40) = v23;
  *(_DWORD *)(a9 + 48) = a7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10045D028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v13 = sub_100459D14(a3, a4);
  uint64_t v14 = (void *)sub_100458F54(v13, (uint64_t (*)(uint64_t))sub_100487424);
  swift_release();
  uint64_t v15 = sub_10045924C(v14);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v7)
  {
    unint64_t v17 = *(void *)(a5 + 16);
    if (!v17) {
      goto LABEL_8;
    }
    unint64_t v18 = 0;
    uint64_t v19 = (unsigned char *)(a5 + 48);
    while (*v19 != 1)
    {
      ++v18;
      v19 += 24;
      if (v17 == v18) {
        goto LABEL_8;
      }
    }
    if (v17 == v18)
    {
LABEL_8:
      uint64_t v20 = 0;
      uint64_t v21 = 0xE000000000000000;
LABEL_9:
      swift_bridgeObjectRetain();
      *(void *)a7 = a1;
      *(void *)(a7 + 8) = a2;
      *(void *)(a7 + 16) = v20;
      *(void *)(a7 + 24) = v21;
      *(void *)(a7 + 32) = v15;
      *(void *)(a7 + 40) = v15;
      *(_DWORD *)(a7 + 48) = a6;
      return swift_bridgeObjectRetain();
    }
    if (v18 >= v17)
    {
      __break(1u);
    }
    else if (*v19 == 1)
    {
      uint64_t v20 = *((void *)v19 - 2);
      uint64_t v21 = *((void *)v19 - 1);
      sub_10045F140(v20, v21, 1u);
      goto LABEL_9;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10045D170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void *a7, void *a8, uint64_t a9, void (*a10)(void *, char *, uint64_t))
{
  unint64_t v84 = a8;
  uint64_t v85 = a1;
  uint64_t v78 = a9;
  uint64_t v79 = a10;
  uint64_t v83 = sub_1005E18D0();
  uint64_t v86 = *(void *)(v83 - 8);
  __chkstk_darwin();
  uint64_t v81 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005E0970();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000566C(&qword_100715968);
  uint64_t v77 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v74 = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v80 = (char *)v63 - v23;
  __chkstk_darwin();
  unint64_t v75 = (char *)v63 - v24;
  __chkstk_darwin();
  unint64_t v76 = (char *)v63 - v25;
  __chkstk_darwin();
  unint64_t v82 = (char *)v63 - v26;
  uint64_t v68 = a2;
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  unint64_t v71 = a5;
  uint64_t v27 = a4;
  uint64_t v72 = a6;
  unint64_t v73 = a7;
  uint64_t v28 = a6;
  uint64_t v30 = v78;
  uint64_t v29 = (uint64_t)v79;
  sub_100459AF8(a2, a3, v27, a5, v28, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v85, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1005E0930();
  double v33 = round((v32 + 1.16444736e10) * 10000000.0);
  if ((~*(void *)&v33 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v33 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v33 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v34 = (unint64_t)v33;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v35 = sub_100459E2C(v34, v30, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v87 = v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1004F1698(v35);
  unint64_t v36 = (void *)sub_1004C31D8((uint64_t)v87);
  unint64_t v38 = v37;
  swift_bridgeObjectRelease();
  unint64_t v87 = v36;
  unint64_t v88 = v38;
  uint64_t v39 = v77;
  uint64_t v40 = v75;
  uint64_t v41 = *(void (**)(void *, char *, uint64_t))(v77 + 16);
  uint64_t v85 = v77 + 16;
  uint64_t v79 = v41;
  v41(v75, v82, v21);
  uint64_t v42 = sub_100007494(&qword_100715980, &qword_100715968);
  unint64_t v43 = v81;
  sub_1005E18C0();
  uint64_t v44 = sub_1005E1930();
  unint64_t v45 = sub_100453EA4();
  unint64_t v46 = sub_100453EFC();
  unint64_t v47 = v76;
  uint64_t v67 = v44;
  unint64_t v66 = v45;
  unint64_t v65 = v46;
  sub_1005E18E0();
  unint64_t v48 = v43;
  uint64_t v49 = v86 + 8;
  unint64_t v64 = *(void (**)(char *, uint64_t))(v86 + 8);
  v64(v48, v83);
  sub_1000094D4((uint64_t)v87, v88);
  uint64_t v50 = *(void *)(v35 + 16);
  unint64_t v63[3] = sub_100007494(&qword_100715A38, &qword_100715968);
  uint64_t result = sub_1005E1F80();
  if (__OFADD__(v50, result))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v87 = sub_1004D09A8(0, (v50 + result) & ~((v50 + result) >> 63), 0, _swiftEmptyArrayStorage);
  v63[2] = v42;
  uint64_t v86 = v49;
  unint64_t v51 = v79;
  v79(v40, v47, v21);
  sub_1004F19E8(v40);
  uint64_t v52 = swift_bridgeObjectRetain();
  sub_1004F1698(v52);
  v63[1] = v87;
  int64_t v53 = v80;
  unint64_t v54 = v47;
  unint64_t v55 = *(void (**)(char *, uint64_t))(v39 + 8);
  v55(v54, v21);
  v55(v82, v21);
  swift_bridgeObjectRelease();
  sub_100459AF8(v68, v69, v70, v71, v72, v73);
  unint64_t v87 = v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1004F1698(v30);
  unint64_t v56 = (void *)sub_1004C31D8((uint64_t)v87);
  unint64_t v58 = v57;
  swift_bridgeObjectRelease();
  unint64_t v87 = v56;
  unint64_t v88 = v58;
  v51(v40, v53, v21);
  uint64_t v59 = v81;
  sub_1005E18C0();
  unint64_t v60 = v74;
  sub_1005E18E0();
  v64(v59, v83);
  sub_1000094D4((uint64_t)v87, v88);
  uint64_t v61 = *(void *)(v30 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1005E1F80();
  if (!__OFADD__(v61, result))
  {
    unint64_t v87 = sub_1004D09A8(0, (v61 + result) & ~((v61 + result) >> 63), 0, _swiftEmptyArrayStorage);
    v79(v40, v60, v21);
    sub_1004F19E8(v40);
    sub_1004F1698(v30);
    uint64_t v62 = v87;
    v55(v60, v21);
    v55(v80, v21);
    return (uint64_t)v62;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10045D8A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void *, char *, uint64_t)@<X5>, void *a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11 = a7;
  uint64_t v16 = result;
  unint64_t v18 = *(void *)(a5 + 16);
  if (!v18) {
    goto LABEL_7;
  }
  unint64_t v19 = 0;
  uint64_t v20 = (unsigned char *)(a5 + 48);
  while (*v20 != 1)
  {
    ++v19;
    v20 += 24;
    if (v18 == v19) {
      goto LABEL_7;
    }
  }
  if (v18 == v19)
  {
LABEL_7:
    int v21 = a8;
    uint64_t v22 = 0;
    uint64_t v23 = (void *)0xE000000000000000;
LABEL_8:
    uint64_t v24 = sub_10045D170(a10, v16, a2, a3, a4, v22, v23, v11, a11, a6);
    *(void *)a9 = v16;
    *(void *)(a9 + 8) = a2;
    *(void *)(a9 + 16) = v22;
    *(void *)(a9 + 24) = v23;
    *(void *)(a9 + 32) = v24;
    *(void *)(a9 + 40) = v25;
    *(_DWORD *)(a9 + 48) = v21;
    return swift_bridgeObjectRetain();
  }
  if (v19 >= v18)
  {
    __break(1u);
  }
  else if (*v20 == 1)
  {
    int v21 = a8;
    uint64_t v22 = *((void *)v20 - 2);
    uint64_t v23 = (void *)*((void *)v20 - 1);
    swift_bridgeObjectRetain();
    uint64_t v11 = a7;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

__n128 sub_10045D9C8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void *, char *, uint64_t)@<X5>, void *a7@<X6>, uint64_t a8@<X8>, char a9)
{
  sub_1005E0970();
  uint64_t v17 = __chkstk_darwin();
  int v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v18 & 0x80000) != 0)
  {
    int v37 = v18;
    uint64_t v25 = sub_1005E2150();
    *(void *)(v25 + 16) = 8;
    *(void *)(v25 + 32) = 0;
    CCRandomGenerateBytes((void *)(v25 + 32), 8uLL);
    uint64_t v22 = v38;
    uint64_t v26 = v41;
    sub_10045CEE0(a1, a2, a3, a4, a5, (uint64_t)a7, v37, v25, (uint64_t)v38);
    swift_bridgeObjectRelease();
    if (v26) {
      return result;
    }
  }
  else
  {
    unint64_t v36 = a6;
    if (a9)
    {
      uint64_t v27 = v17;
      uint64_t v35 = v19;
      uint64_t v34 = a8;
      int v37 = v18;
      sub_1005E0960();
      uint64_t v28 = sub_1005E2150();
      *(void *)(v28 + 16) = 8;
      *(void *)(v28 + 32) = 0;
      CCRandomGenerateBytes((void *)(v28 + 32), 8uLL);
      uint64_t v29 = v41;
      sub_10045D8A4(a1, a2, a3, a4, a5, v36, a7, v37, (uint64_t)v40, (uint64_t)v21, v28);
      if (v29)
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v27);
        swift_bridgeObjectRelease();
        return result;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v27);
      swift_bridgeObjectRelease();
      uint64_t v22 = v40;
      a8 = v34;
    }
    else
    {
      uint64_t v22 = v39;
      uint64_t v23 = v41;
      sub_10045D028(a1, a2, a3, a4, a5, v18, (uint64_t)v39);
      if (v23) {
        return result;
      }
    }
  }
  int v30 = *((_DWORD *)v22 + 12);
  uint64_t v31 = *((void *)v22 + 5);
  uint64_t v32 = *((void *)v22 + 2);
  __n128 result = *(__n128 *)v22;
  long long v33 = *(_OWORD *)(v22 + 24);
  *(_OWORD *)a8 = *(_OWORD *)v22;
  *(void *)(a8 + 16) = v32;
  *(_OWORD *)(a8 + 24) = v33;
  *(void *)(a8 + 40) = v31;
  *(_DWORD *)(a8 + 48) = v30;
  return result;
}

uint64_t sub_10045DC84(unsigned __int8 *a1, Swift::Int a2)
{
  uint64_t v13 = 0;
  sub_1005E1D10(a2);
  if (a1)
  {
    unint64_t v4 = 0xE000000000000000;
    if (a2)
    {
      if (*a1 - 127 < 0xFFFFFFA1)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        sub_10045ED58();
        swift_allocError();
        *(void *)uint64_t v9 = 5;
        *(unsigned char *)(v9 + 8) = 2;
        return swift_willThrow();
      }
      uint64_t v5 = 0;
      Swift::Int v6 = a2 - 1;
      uint64_t v7 = a1 + 1;
      while (1)
      {
        uint64_t v11 = v5;
        unint64_t v12 = v4;
        sub_1005E1D60();
        uint64_t v5 = v11;
        unint64_t v4 = v12;
        if (!v6) {
          return v11;
        }
        int v8 = *v7++;
        --v6;
        if ((v8 - 127) < 0xFFFFFFA1) {
          goto LABEL_7;
        }
      }
    }
  }
  return v13;
}

uint64_t sub_10045DD78(uint64_t a1, Swift::Int a2)
{
  sub_1005E1D10(a2);
  if (a1) {
    Swift::Int v4 = a1 + 2 * a2;
  }
  else {
    Swift::Int v4 = 0;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v4;
  sub_10000566C(&qword_1007159D8);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_10045EE10;
  *(void *)(v6 + 24) = v5;
  swift_retain();
  for (uint64_t i = sub_10045A500(); ((unint64_t)i & 0x100000000) == 0; uint64_t i = sub_10045A500())
    sub_1005E1D60();
  if (i)
  {
    swift_bridgeObjectRelease();
    sub_10045ED58();
    swift_allocError();
    *(void *)uint64_t v8 = 4;
    *(unsigned char *)(v8 + 8) = 2;
    swift_willThrow();
  }
  swift_release();
  swift_release();
  return 0;
}

uint64_t sub_10045DEE8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = a2 >> 62;
  uint64_t v7 = a1;
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      if (v9 < 32)
      {
        if (!v5)
        {
          uint64_t v8 = BYTE6(a2);
          goto LABEL_17;
        }
        if (v5 != 1)
        {
          uint64_t v14 = *(void *)(a1 + 16);
          uint64_t v13 = *(void *)(a1 + 24);
          uint64_t v8 = v13 - v14;
          if (!__OFSUB__(v13, v14)) {
            goto LABEL_17;
          }
LABEL_28:
          __break(1u);
        }
        if (!__OFSUB__(HIDWORD(a1), a1))
        {
          uint64_t v8 = HIDWORD(a1) - (int)a1;
LABEL_17:
          sub_10045ED58();
          swift_allocError();
          *(void *)uint64_t v15 = v8;
          *(unsigned char *)(v15 + 8) = 0;
          swift_willThrow();
          sub_1000094D4(v7, a2);
          return swift_bridgeObjectRelease();
        }
        goto LABEL_26;
      }
      if (!v5)
      {
        uint64_t v25 = a1;
        __int16 v26 = a2;
        char v27 = BYTE2(a2);
        char v28 = BYTE3(a2);
        char v29 = BYTE4(a2);
        char v30 = BYTE5(a2);
        sub_100457D24((uint64_t)&v25, (uint64_t)&v25 + BYTE6(a2), (uint64_t)&v31);
LABEL_19:
        uint64_t v16 = v3;
        goto LABEL_21;
      }
      if (v5 == 1)
      {
        a1 = (int)a1;
        if (v7 >> 32 < (int)v7)
        {
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        sub_10045C034(a1, v7 >> 32, (uint64_t)&v31);
        goto LABEL_19;
      }
      uint64_t v17 = *(void *)(a1 + 16);
      uint64_t v18 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_10045C034(v17, v18, (uint64_t)&v31);
      uint64_t v16 = v3;
      swift_release();
      swift_release();
LABEL_21:
      uint64_t result = sub_1000094D4(v7, a2);
      if (v16) {
        return swift_bridgeObjectRelease();
      }
      long long v20 = v32;
      uint64_t v21 = v33;
      uint64_t v22 = v34;
      int v23 = v35;
      char v24 = v36;
      *(_DWORD *)a3 = v31;
      *(_OWORD *)(a3 + 8) = v20;
      *(void *)(a3 + 24) = v21;
      *(void *)(a3 + 32) = v22;
      *(_DWORD *)(a3 + 40) = v23;
      *(unsigned char *)(a3 + 44) = v24;
      return result;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_25;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

void *sub_10045E184(int64_t *a1)
{
  int64_t v3 = *a1;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v101 = v5 - v4;
  if (v4) {
    int64_t v6 = v5 - v4;
  }
  else {
    int64_t v6 = 0;
  }
  if (v3 < 0 || v6 < v3)
  {
LABEL_208:
    __break(1u);
    goto LABEL_209;
  }
  int64_t v8 = a1[1];
  if (v8 < 0 || v6 < v8)
  {
LABEL_209:
    __break(1u);
LABEL_210:
    __break(1u);
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    __break(1u);
LABEL_223:
    __break(1u);
LABEL_224:
    __break(1u);
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
    JUMPOUT(0x10045ECDCLL);
  }
  if (v8 - v3 < 4)
  {
LABEL_9:
    sub_10045ED04();
LABEL_10:
    swift_allocError();
    swift_willThrow();
    return v2;
  }
  uint64_t v9 = v1;
  int v2 = _swiftEmptyArrayStorage;
  uint64_t v100 = a1[3];
  while (2)
  {
    unsigned __int16 v10 = sub_10045831C(0, v3, v8, v4, v5);
    if (v9) {
      goto LABEL_189;
    }
    unsigned __int16 v11 = v10;
    unsigned __int16 v12 = sub_10045831C(2, v3, v8, v4, v5);
    uint64_t v9 = 0;
    if (!(v11 | v12)) {
      return v2;
    }
    if (v3 < 0 || v6 < v3) {
      goto LABEL_192;
    }
    uint64_t v13 = v8;
    if ((unint64_t)(v8 - v3) >= 4)
    {
      uint64_t v13 = v3 + 4;
      if (__OFADD__(v3, 4)) {
        goto LABEL_206;
      }
      if (v13 < 0 || v6 < v13) {
        goto LABEL_207;
      }
      if (v8 < v13) {
        goto LABEL_193;
      }
    }
    if (v13 < v3) {
      goto LABEL_194;
    }
    *a1 = v13;
    a1[1] = v8;
    a1[2] = v4;
    a1[3] = v5;
    if (v6 < v13) {
      goto LABEL_195;
    }
    uint64_t v14 = v8 - v13;
    if (v8 - v13 < v12)
    {
      swift_bridgeObjectRelease();
      sub_10045EDAC();
      goto LABEL_10;
    }
    if (v4)
    {
      int64_t v15 = v101;
      if (v101 < v13) {
        goto LABEL_204;
      }
      if (v101 < v8) {
        goto LABEL_196;
      }
    }
    else
    {
      int64_t v15 = v101;
      if (v13 > 0) {
        goto LABEL_210;
      }
      if (v8 > 0) {
        goto LABEL_196;
      }
    }
    uint64_t v16 = v13 + v12;
    if (__OFADD__(v13, v12)) {
      goto LABEL_197;
    }
    if (v16 < 0 || v6 < v16) {
      goto LABEL_198;
    }
    uint64_t v17 = v12;
    if (v16 < v13) {
      goto LABEL_199;
    }
    if (v8 < v16) {
      goto LABEL_200;
    }
    if (v4)
    {
      if (v15 < v8 || v15 < v13) {
        goto LABEL_205;
      }
      if (v12 || v14 > 0) {
        goto LABEL_39;
      }
    }
    else
    {
      if (v8 || v13 > 0) {
        goto LABEL_211;
      }
      if (v12) {
        goto LABEL_203;
      }
      int64_t v15 = 0;
      if (v14 > 0)
      {
LABEL_39:
        int64_t v18 = v13 + v12;
        if (v15 < v16) {
          goto LABEL_203;
        }
LABEL_50:
        int64_t v3 = v18;
        if (v8 >= v18) {
          goto LABEL_51;
        }
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
LABEL_207:
        __break(1u);
        goto LABEL_208;
      }
    }
    int64_t v3 = v8;
    int64_t v18 = v13 + v12;
    if (v14 <= v12)
    {
      if (v15 < v16) {
        goto LABEL_203;
      }
      goto LABEL_50;
    }
LABEL_51:
    if (v3 < v13) {
      goto LABEL_201;
    }
    *a1 = v3;
    a1[2] = v4;
    switch(v11)
    {
      case 0u:
        goto LABEL_96;
      case 1u:
        if (v4)
        {
          if (v101 < v13) {
            goto LABEL_218;
          }
          if (v101 < v16) {
            goto LABEL_212;
          }
        }
        else
        {
          if (v13 > 0) {
            goto LABEL_224;
          }
          if (v16 > 0) {
            goto LABEL_212;
          }
        }
        if (v12) {
          goto LABEL_188;
        }
        uint64_t v30 = v4 + v13;
        uint64_t v31 = (uint64_t)v12 >> 1;
        if (v4) {
          uint64_t v32 = v30;
        }
        else {
          uint64_t v32 = 0;
        }
        if (v4) {
          Swift::Int v33 = v31;
        }
        else {
          Swift::Int v33 = 0;
        }
        uint64_t v34 = sub_10045DD78(v32, v33);
        uint64_t v94 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v37 = v2[2];
        unint64_t v36 = v2[3];
        unint64_t v38 = v37 + 1;
        if (v37 >= v36 >> 1)
        {
          uint64_t v86 = sub_1004D0BC8((void *)(v36 > 1), v37 + 1, 1, v2);
          unint64_t v38 = v37 + 1;
          int v2 = v86;
        }
        v2[2] = v38;
        uint64_t v39 = &v2[3 * v37];
        v39[4] = v34;
        v39[5] = v94;
        *((unsigned char *)v39 + 48) = 0;
        goto LABEL_96;
      case 2u:
        if (v4)
        {
          if (v101 < v13) {
            goto LABEL_219;
          }
          if (v101 < v16) {
            goto LABEL_213;
          }
        }
        else
        {
          if (v13 > 0) {
            goto LABEL_225;
          }
          if (v16 > 0) {
            goto LABEL_213;
          }
        }
        if (v12) {
          goto LABEL_188;
        }
        uint64_t v40 = v4 + v13;
        uint64_t v41 = (uint64_t)v12 >> 1;
        if (v4) {
          uint64_t v42 = v40;
        }
        else {
          uint64_t v42 = 0;
        }
        if (v4) {
          Swift::Int v43 = v41;
        }
        else {
          Swift::Int v43 = 0;
        }
        uint64_t v44 = sub_10045DD78(v42, v43);
        uint64_t v95 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v47 = v2[2];
        unint64_t v46 = v2[3];
        unint64_t v48 = v47 + 1;
        if (v47 >= v46 >> 1)
        {
          unint64_t v87 = sub_1004D0BC8((void *)(v46 > 1), v47 + 1, 1, v2);
          unint64_t v48 = v47 + 1;
          int v2 = v87;
        }
        v2[2] = v48;
        uint64_t v21 = &v2[3 * v47];
        v21[4] = v44;
        v21[5] = v95;
        char v29 = 1;
        goto LABEL_95;
      case 3u:
        if (v4)
        {
          if (v101 < v13) {
            goto LABEL_220;
          }
          if (v101 < v16) {
            goto LABEL_214;
          }
        }
        else
        {
          if (v13 > 0) {
            goto LABEL_226;
          }
          if (v16 > 0) {
            goto LABEL_214;
          }
        }
        if (v12) {
          goto LABEL_188;
        }
        uint64_t v49 = v4 + v13;
        uint64_t v50 = (uint64_t)v12 >> 1;
        if (v4) {
          uint64_t v51 = v49;
        }
        else {
          uint64_t v51 = 0;
        }
        if (v4) {
          Swift::Int v52 = v50;
        }
        else {
          Swift::Int v52 = 0;
        }
        uint64_t v53 = sub_10045DD78(v51, v52);
        uint64_t v96 = v54;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v56 = v2[2];
        unint64_t v55 = v2[3];
        unint64_t v57 = v56 + 1;
        if (v56 >= v55 >> 1)
        {
          unint64_t v88 = sub_1004D0BC8((void *)(v55 > 1), v56 + 1, 1, v2);
          unint64_t v57 = v56 + 1;
          int v2 = v88;
        }
        v2[2] = v57;
        unint64_t v58 = &v2[3 * v56];
        v58[4] = v53;
        v58[5] = v96;
        *((unsigned char *)v58 + 48) = 2;
        goto LABEL_96;
      case 4u:
        if (v4)
        {
          if (v101 < v13) {
            goto LABEL_221;
          }
          if (v101 < v16) {
            goto LABEL_215;
          }
        }
        else
        {
          if (v13 > 0) {
            goto LABEL_227;
          }
          if (v16 > 0) {
            goto LABEL_215;
          }
        }
        if (v12) {
          goto LABEL_188;
        }
        uint64_t v59 = v4 + v13;
        uint64_t v60 = (uint64_t)v12 >> 1;
        if (v4) {
          uint64_t v61 = v59;
        }
        else {
          uint64_t v61 = 0;
        }
        if (v4) {
          Swift::Int v62 = v60;
        }
        else {
          Swift::Int v62 = 0;
        }
        uint64_t v63 = sub_10045DD78(v61, v62);
        uint64_t v97 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v66 = v2[2];
        unint64_t v65 = v2[3];
        unint64_t v67 = v66 + 1;
        if (v66 >= v65 >> 1)
        {
          uint64_t v89 = sub_1004D0BC8((void *)(v65 > 1), v66 + 1, 1, v2);
          unint64_t v67 = v66 + 1;
          int v2 = v89;
        }
        v2[2] = v67;
        uint64_t v21 = &v2[3 * v66];
        v21[4] = v63;
        v21[5] = v97;
        char v29 = 3;
        goto LABEL_95;
      case 5u:
        if (v4)
        {
          if (v101 < v13) {
            goto LABEL_222;
          }
          if (v101 < v16) {
            goto LABEL_216;
          }
        }
        else
        {
          if (v13 > 0) {
            goto LABEL_228;
          }
          if (v16 > 0) {
            goto LABEL_216;
          }
        }
        if (v12) {
          goto LABEL_188;
        }
        uint64_t v68 = v4 + v13;
        uint64_t v69 = (uint64_t)v12 >> 1;
        if (v4) {
          uint64_t v70 = v68;
        }
        else {
          uint64_t v70 = 0;
        }
        if (v4) {
          Swift::Int v71 = v69;
        }
        else {
          Swift::Int v71 = 0;
        }
        uint64_t v72 = sub_10045DD78(v70, v71);
        uint64_t v98 = v73;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v75 = v2[2];
        unint64_t v74 = v2[3];
        unint64_t v76 = v75 + 1;
        if (v75 >= v74 >> 1)
        {
          unint64_t v90 = sub_1004D0BC8((void *)(v74 > 1), v75 + 1, 1, v2);
          unint64_t v76 = v75 + 1;
          int v2 = v90;
        }
        v2[2] = v76;
        uint64_t v21 = &v2[3 * v75];
        v21[4] = v72;
        v21[5] = v98;
        char v29 = 4;
        goto LABEL_95;
      case 6u:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v24 = v2[2];
        unint64_t v23 = v2[3];
        if (v24 >= v23 >> 1) {
          int v2 = sub_1004D0BC8((void *)(v23 > 1), v24 + 1, 1, v2);
        }
        v2[2] = v24 + 1;
        uint64_t v21 = &v2[3 * v24];
        v21[4] = 0;
        v21[5] = 0;
        goto LABEL_94;
      case 7u:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v26 = v2[2];
        unint64_t v25 = v2[3];
        if (v26 >= v25 >> 1) {
          int v2 = sub_1004D0BC8((void *)(v25 > 1), v26 + 1, 1, v2);
        }
        v2[2] = v26 + 1;
        uint64_t v21 = &v2[3 * v26];
        long long v22 = xmmword_1005F6950;
        goto LABEL_93;
      case 8u:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v28 = v2[2];
        unint64_t v27 = v2[3];
        if (v28 >= v27 >> 1) {
          int v2 = sub_1004D0BC8((void *)(v27 > 1), v28 + 1, 1, v2);
        }
        v2[2] = v28 + 1;
        uint64_t v21 = &v2[3 * v28];
        long long v22 = xmmword_100625780;
        goto LABEL_93;
      case 9u:
        if (v4)
        {
          if (v101 < v13) {
            goto LABEL_223;
          }
          if (v101 < v16) {
            goto LABEL_217;
          }
        }
        else
        {
          if (v13 > 0) {
            goto LABEL_229;
          }
          if (v16 > 0) {
            goto LABEL_217;
          }
        }
        if ((v12 & 1) == 0)
        {
          uint64_t v77 = v4 + v13;
          uint64_t v78 = (uint64_t)v12 >> 1;
          if (v4) {
            uint64_t v79 = v77;
          }
          else {
            uint64_t v79 = 0;
          }
          if (v4) {
            Swift::Int v80 = v78;
          }
          else {
            Swift::Int v80 = 0;
          }
          uint64_t v81 = sub_10045DD78(v79, v80);
          uint64_t v99 = v82;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
          }
          unint64_t v84 = v2[2];
          unint64_t v83 = v2[3];
          unint64_t v85 = v84 + 1;
          if (v84 >= v83 >> 1)
          {
            uint64_t v91 = sub_1004D0BC8((void *)(v83 > 1), v84 + 1, 1, v2);
            unint64_t v85 = v84 + 1;
            int v2 = v91;
          }
          v2[2] = v85;
          uint64_t v21 = &v2[3 * v84];
          v21[4] = v81;
          v21[5] = v99;
          char v29 = 5;
LABEL_95:
          *((unsigned char *)v21 + 48) = v29;
LABEL_96:
          if (v6 < v3) {
            goto LABEL_202;
          }
          uint64_t v5 = v100;
          if (v8 - v3 <= 3)
          {
            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
          continue;
        }
LABEL_188:
        sub_10045ED58();
        swift_allocError();
        *(void *)uint64_t v92 = v17;
        *(unsigned char *)(v92 + 8) = 1;
        swift_willThrow();
LABEL_189:
        swift_bridgeObjectRelease();
        return v2;
      default:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1004D0BC8(0, v2[2] + 1, 1, v2);
        }
        unint64_t v20 = v2[2];
        unint64_t v19 = v2[3];
        if (v20 >= v19 >> 1) {
          int v2 = sub_1004D0BC8((void *)(v19 > 1), v20 + 1, 1, v2);
        }
        v2[2] = v20 + 1;
        uint64_t v21 = &v2[3 * v20];
        long long v22 = xmmword_100625790;
LABEL_93:
        *((_OWORD *)v21 + 2) = v22;
LABEL_94:
        char v29 = 6;
        goto LABEL_95;
    }
  }
}

unint64_t sub_10045ED04()
{
  unint64_t result = qword_1007159C0;
  if (!qword_1007159C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159C0);
  }
  return result;
}

unint64_t sub_10045ED58()
{
  unint64_t result = qword_1007159C8;
  if (!qword_1007159C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159C8);
  }
  return result;
}

unint64_t sub_10045EDAC()
{
  unint64_t result = qword_1007159D0;
  if (!qword_1007159D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159D0);
  }
  return result;
}

uint64_t sub_10045EE00()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10045EE10@<X0>(uint64_t a1@<X8>)
{
  return sub_10045A478(v1, a1);
}

unint64_t sub_10045EE18()
{
  unint64_t result = qword_1007159E0;
  if (!qword_1007159E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159E0);
  }
  return result;
}

unint64_t sub_10045EE6C()
{
  unint64_t result = qword_1007159F0;
  if (!qword_1007159F0)
  {
    sub_10000744C(&qword_1007159E8);
    sub_10045EEE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159F0);
  }
  return result;
}

unint64_t sub_10045EEE0()
{
  unint64_t result = qword_1007159F8;
  if (!qword_1007159F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007159F8);
  }
  return result;
}

unint64_t sub_10045EF34()
{
  unint64_t result = qword_100715A00;
  if (!qword_100715A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A00);
  }
  return result;
}

char *sub_10045EF88@<X0>(char *a1@<X0>, int64_t a2@<X1>, char **a3@<X8>)
{
  return sub_10045F10C(a1, a2, a3);
}

void *sub_10045EFA0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_10045C598(a1, *(uint64_t **)(v2 + 16), *(void *(**)(long long *__return_ptr, uint64_t, void *))(v2 + 24), a2);
}

uint64_t sub_10045EFC0()
{
  return _swift_deallocObject(v0, 18, 7);
}

uint64_t sub_10045EFD0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 51, 7);
}

uint64_t sub_10045F008@<X0>(uint64_t a1@<X8>)
{
  return sub_10045A818(a1);
}

uint64_t sub_10045F010()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10045F050@<X0>(unsigned char *a1@<X8>)
{
  return sub_10045A740(*(void *)(v1 + 16), a1);
}

uint64_t sub_10045F058(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100715A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10045F0B8()
{
  unint64_t result = qword_100715A30;
  if (!qword_100715A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A30);
  }
  return result;
}

char *sub_10045F10C@<X0>(char *a1@<X0>, int64_t a2@<X1>, char **a3@<X8>)
{
  unint64_t result = sub_10045C418(a1, a2, *(char **)(v3 + 16), *(void *)(v3 + 24));
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
  }
  return result;
}

uint64_t sub_10045F140(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10045F158(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  uint64_t v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    uint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

ValueMetadata *_s17CommonCryptoErrorVMa()
{
  return &_s17CommonCryptoErrorVN;
}

uint64_t _s18RawResponseMessageVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s18RawResponseMessageVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  int v7 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18RawResponseMessageVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v4;
  return a1;
}

__n128 _s18RawResponseMessageVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 61) = *(_OWORD *)(a2 + 61);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s18RawResponseMessageVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  return a1;
}

uint64_t _s18RawResponseMessageVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 77)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s18RawResponseMessageVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 76) = 0;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 77) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 77) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s18RawResponseMessageVMa()
{
  return &_s18RawResponseMessageVN;
}

ValueMetadata *_s18RawResponseMessageV10SessionKeyVMa()
{
  return &_s18RawResponseMessageV10SessionKeyVN;
}

ValueMetadata *_s9OSVersionV16InvalidOSVersionVMa()
{
  return &_s9OSVersionV16InvalidOSVersionVN;
}

ValueMetadata *_s16ChallengeMessageV20RawTargetInformationV52NTLMChallengeMessageTargetInformationByteCountTooBigVMa()
{
  return &_s16ChallengeMessageV20RawTargetInformationV52NTLMChallengeMessageTargetInformationByteCountTooBigVN;
}

uint64_t initializeBufferWithCopyOfBuffer for MailboxSelectionUsage(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

ValueMetadata *_s16ChallengeMessageV20RawTargetInformationV51NTLMChallengeMessageTargetInformationBufferTooShortVMa()
{
  return &_s16ChallengeMessageV20RawTargetInformationV51NTLMChallengeMessageTargetInformationBufferTooShortVN;
}

__n128 _s10CredentialVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *_s10CredentialVMa()
{
  return &_s10CredentialVN;
}

unsigned char *_s10ConstraintOwCP(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

unsigned char *_s4ModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10045F638);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4ModeOMa()
{
  return &_s4ModeON;
}

ValueMetadata *_s15ServerChallengeVMa()
{
  return &_s15ServerChallengeVN;
}

ValueMetadata *_s16ChallengeMessageV20RawTargetInformationVMa()
{
  return &_s16ChallengeMessageV20RawTargetInformationVN;
}

uint64_t _s16ChallengeMessageV17TargetInformationOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045F6D0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10045F140);
}

uint64_t _s16ChallengeMessageV17TargetInformationOwxx(uint64_t a1)
{
  return sub_10045F6B8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_10045F6B8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 5u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10045F6D0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *_s16ChallengeMessageV17TargetInformationOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10045F74C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10045F140, (void (*)(uint64_t, uint64_t, uint64_t))sub_10045F6B8);
}

uint64_t *sub_10045F74C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *_s16ChallengeMessageV17TargetInformationOwta(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10045F7D0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_10045F6B8);
}

uint64_t *sub_10045F7D0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t _s16ChallengeMessageV17TargetInformationOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s16ChallengeMessageV17TargetInformationOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10045F8A8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_10045F8C0(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)uint64_t result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s16ChallengeMessageV17TargetInformationOMa()
{
  return &_s16ChallengeMessageV17TargetInformationON;
}

unint64_t sub_10045F8EC()
{
  unint64_t result = qword_100715A40;
  if (!qword_100715A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A40);
  }
  return result;
}

ValueMetadata *_s18RawResponseMessageV12NTLMResponseVMa()
{
  return &_s18RawResponseMessageV12NTLMResponseVN;
}

ValueMetadata *_s18RawResponseMessageV10LMResponseVMa()
{
  return &_s18RawResponseMessageV10LMResponseVN;
}

void *sub_10045F960@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_10045EFA0(a1, a2);
}

uint64_t _s4NTLMVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1004434DC(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112));
  if (*(void *)(a1 + 144) >= 3uLL)
  {
    int v3 = *(unsigned __int8 *)(a1 + 136);
    if (v3 != 255) {
      sub_1002173AC(*(void *)(a1 + 120), *(void *)(a1 + 128), v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s4NTLMVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  unint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  unint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  unint64_t v10 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 104);
  uint64_t v24 = *(void *)(a2 + 96);
  uint64_t v25 = *(void *)(a2 + 40);
  unint64_t v12 = *(void *)(a2 + 112);
  uint64_t v23 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100443318(v25, v6, v7, v8, v9, v10, v23, v24, v11, v12);
  *(void *)(a1 + 40) = v25;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v23;
  *(void *)(a1 + 96) = v24;
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = v12;
  uint64_t v13 = (_OWORD *)(a1 + 120);
  uint64_t v14 = (_OWORD *)(a2 + 120);
  unint64_t v15 = *(void *)(a2 + 144);
  if (v15 >= 3)
  {
    int v17 = *(unsigned __int8 *)(a2 + 136);
    if (v17 == 255)
    {
      *uint64_t v13 = *v14;
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    }
    else
    {
      uint64_t v18 = *(void *)(a2 + 120);
      uint64_t v19 = *(void *)(a2 + 128);
      sub_100217C58(v18, v19, *(unsigned char *)(a2 + 136));
      *(void *)(a1 + 120) = v18;
      *(void *)(a1 + 128) = v19;
      *(unsigned char *)(a1 + 136) = v17;
    }
    uint64_t v20 = *(void *)(a2 + 152);
    uint64_t v21 = *(void *)(a2 + 160);
    *(void *)(a1 + 144) = v15;
    *(void *)(a1 + 152) = v20;
    *(void *)(a1 + 160) = v21;
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 136);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 136) = v16;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  }
  return a1;
}

uint64_t _s4NTLMVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  unint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  unint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  unint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 96);
  uint64_t v46 = *(void *)(a2 + 104);
  unint64_t v47 = *(void *)(a2 + 112);
  sub_100443318(v4, v5, v6, v7, v8, v9, v10, v11, v46, v47);
  uint64_t v12 = *(void *)(a1 + 40);
  unint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  unint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  unint64_t v17 = *(void *)(a1 + 80);
  uint64_t v18 = *(void *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 104);
  unint64_t v21 = *(void *)(a1 + 112);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v46;
  *(void *)(a1 + 112) = v47;
  sub_1004434DC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  long long v22 = (long long *)(a1 + 120);
  uint64_t v23 = (long long *)(a2 + 120);
  unint64_t v24 = *(void *)(a2 + 144);
  if (*(void *)(a1 + 144) >= 3uLL)
  {
    if (v24 >= 3)
    {
      int v34 = *(unsigned __int8 *)(a2 + 136);
      if (*(unsigned __int8 *)(a1 + 136) == 255)
      {
        if (v34 == 255)
        {
          long long v44 = *v23;
          *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
          *long long v22 = v44;
        }
        else
        {
          uint64_t v41 = *(void *)(a2 + 120);
          uint64_t v42 = *(void *)(a2 + 128);
          sub_100217C58(v41, v42, *(unsigned char *)(a2 + 136));
          *(void *)(a1 + 120) = v41;
          *(void *)(a1 + 128) = v42;
          *(unsigned char *)(a1 + 136) = v34;
        }
      }
      else if (v34 == 255)
      {
        sub_10045B82C(a1 + 120);
        char v43 = *(unsigned char *)(a2 + 136);
        *long long v22 = *v23;
        *(unsigned char *)(a1 + 136) = v43;
      }
      else
      {
        uint64_t v35 = *(void *)(a2 + 120);
        uint64_t v36 = *(void *)(a2 + 128);
        sub_100217C58(v35, v36, *(unsigned char *)(a2 + 136));
        uint64_t v37 = *(void *)(a1 + 120);
        uint64_t v38 = *(void *)(a1 + 128);
        *(void *)(a1 + 120) = v35;
        *(void *)(a1 + 128) = v36;
        unsigned __int8 v39 = *(unsigned char *)(a1 + 136);
        *(unsigned char *)(a1 + 136) = v34;
        sub_1002173AC(v37, v38, v39);
      }
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    }
    else
    {
      sub_10045FE78(a1 + 120);
      long long v29 = *(_OWORD *)(a2 + 136);
      long long v28 = *(_OWORD *)(a2 + 152);
      long long v30 = *v23;
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 136) = v29;
      *(_OWORD *)(a1 + 152) = v28;
      *long long v22 = v30;
    }
  }
  else if (v24 >= 3)
  {
    int v31 = *(unsigned __int8 *)(a2 + 136);
    if (v31 == 255)
    {
      long long v40 = *v23;
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *long long v22 = v40;
    }
    else
    {
      uint64_t v32 = *(void *)(a2 + 120);
      uint64_t v33 = *(void *)(a2 + 128);
      sub_100217C58(v32, v33, *(unsigned char *)(a2 + 136));
      *(void *)(a1 + 120) = v32;
      *(void *)(a1 + 128) = v33;
      *(unsigned char *)(a1 + 136) = v31;
    }
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *v23;
    long long v26 = *(_OWORD *)(a2 + 136);
    long long v27 = *(_OWORD *)(a2 + 152);
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 136) = v26;
    *(_OWORD *)(a1 + 152) = v27;
    *long long v22 = v25;
  }
  return a1;
}

uint64_t sub_10045FE78(uint64_t a1)
{
  return a1;
}

__n128 _s4NTLMVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 156) = *(long long *)((char *)a2 + 156);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s4NTLMVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  unint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  unint64_t v11 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v14 = *(void *)(a1 + 104);
  unint64_t v15 = *(void *)(a1 + 112);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  sub_1004434DC(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v16 = (_OWORD *)(a1 + 120);
  unint64_t v17 = (_OWORD *)(a2 + 120);
  if (*(void *)(a1 + 144) < 3uLL) {
    goto LABEL_4;
  }
  unint64_t v18 = *(void *)(a2 + 144);
  if (v18 >= 3)
  {
    int v20 = *(unsigned __int8 *)(a1 + 136);
    if (v20 != 255)
    {
      int v21 = *(unsigned __int8 *)(a2 + 136);
      if (v21 != 255)
      {
        uint64_t v22 = *(void *)(a1 + 120);
        uint64_t v23 = *(void *)(a1 + 128);
        *(_OWORD *)(a1 + 120) = *v17;
        *(unsigned char *)(a1 + 136) = v21;
        sub_1002173AC(v22, v23, v20);
LABEL_10:
        *(void *)(a1 + 144) = v18;
        swift_bridgeObjectRelease();
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        swift_bridgeObjectRelease();
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        swift_bridgeObjectRelease();
        *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
        return a1;
      }
      sub_10045B82C(a1 + 120);
    }
    *uint64_t v16 = *v17;
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    goto LABEL_10;
  }
  sub_10045FE78(a1 + 120);
LABEL_4:
  long long v19 = *(_OWORD *)(a2 + 136);
  *uint64_t v16 = *v17;
  *(_OWORD *)(a1 + 136) = v19;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  return a1;
}

uint64_t _s4NTLMVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 172)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4NTLMVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 168) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 172) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 172) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s4NTLMVMa()
{
  return &_s4NTLMVN;
}

uint64_t sub_100460138()
{
  uint64_t v2 = *(void *)(v0 + 144);
  if ((unint64_t)(v2 - 1) < 2) {
    return 0;
  }
  long long v3 = (void *)(v0 + 120);
  uint64_t v4 = (void *)(v0 + 152);
  if (v2)
  {
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v8 = *(void (**)(void *, char *, uint64_t))(v0 + 152);
    unint64_t v9 = *(void **)(v0 + 160);
    void *v3 = 0;
    *(void *)(v0 + 128) = 0;
    unsigned __int8 v10 = *(unsigned char *)(v0 + 136);
    *(void *)(v0 + 136) = 0;
    *(void *)(v0 + 144) = 2;
    void *v4 = 0;
    *(void *)(v0 + 160) = 0;
    *(_DWORD *)(v0 + 168) = 0;
    sub_10045D9C8(*(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v2, v8, v9, (uint64_t)v12, *(unsigned char *)v0);
    sub_100448844(v7, v6, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      uint64_t v19 = v12[4];
      uint64_t v20 = v12[5];
      uint64_t v21 = v12[2];
      uint64_t v22 = v12[3];
      uint64_t v23 = v12[0];
      uint64_t v24 = v12[1];
      uint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      uint64_t v27 = 0;
      int v28 = v13 & 0x80201;
      char v29 = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v0 = sub_100458810();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100448858((uint64_t)v12);
    }
  }
  else
  {
    void *v3 = 0;
    *(void *)(v0 + 128) = 0;
    *(void *)(v0 + 136) = 0;
    *(void *)(v0 + 144) = 1;
    void *v4 = 0;
    *(void *)(v0 + 160) = 0;
    *(_DWORD *)(v0 + 168) = 0;
    char v5 = *(unsigned char *)v0;
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    BOOL v18 = (v5 & 1) == 0;
    return sub_100457A64();
  }
  return v0;
}

uint64_t sub_100460320(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v88 = a3;
  uint64_t v85 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v86 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v84 = (uint64_t)&v74 - v9;
  __chkstk_darwin();
  unint64_t v11 = (char *)&v74 - v10;
  __chkstk_darwin();
  int v13 = (char *)&v74 - v12;
  uint64_t v14 = sub_1005E0ED0();
  uint64_t v87 = *(void *)(v14 - 8);
  __chkstk_darwin();
  __chkstk_darwin();
  __chkstk_darwin();
  uint64_t v16 = (char *)&v74 - v15;
  __chkstk_darwin();
  uint64_t v20 = (char *)&v74 - v19;
  if (*(void *)(v5 + 144) == 1)
  {
    uint64_t v82 = v18;
    unint64_t v83 = v17;
    sub_100008D24(a1, a2);
    uint64_t result = sub_10045DEE8(a1, a2, (uint64_t)&v91);
    if (!v4)
    {
      uint64_t v22 = v87;
      uint64_t v23 = v88;
      Swift::Int v80 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
      uint64_t v81 = v87 + 16;
      v80(v20, v88, v14);
      sub_100447F0C(v23, (uint64_t)v13);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      sub_100461368((uint64_t)&v91);
      sub_100461368((uint64_t)&v91);
      sub_100461368((uint64_t)&v91);
      sub_100461368((uint64_t)&v91);
      uint64_t v24 = sub_1005E0EB0();
      os_log_type_t v25 = sub_1005E2580();
      LODWORD(v78) = v25;
      BOOL v26 = os_log_type_enabled(v24, v25);
      uint64_t v77 = v5;
      uint64_t v79 = v14;
      if (v26)
      {
        uint64_t v27 = swift_slowAlloc();
        os_log_t v75 = v24;
        uint64_t v28 = v27;
        uint64_t v76 = swift_slowAlloc();
        v90[0] = v76;
        *(_DWORD *)uint64_t v28 = 68158722;
        LODWORD(v89) = 2;
        sub_1005E2960();
        *(_WORD *)(v28 + 8) = 256;
        char v29 = &v13[*(int *)(v85 + 20)];
        LOBYTE(v89) = *v29;
        sub_1005E2960();
        *(_WORD *)(v28 + 11) = 2082;
        uint64_t v30 = ConnectionID.debugDescription.getter(*((unsigned int *)v29 + 1));
        uint64_t v89 = sub_100481E54(v30, v31, v90);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118((uint64_t)v13);
        *(_WORD *)(v28 + 21) = 2080;
        uint64_t v32 = v93;
        unint64_t v33 = v94;
        swift_bridgeObjectRetain();
        uint64_t v89 = sub_100481E54(v32, v33, v90);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_1004613B0((uint64_t)&v91);
        sub_1004613B0((uint64_t)&v91);
        *(_WORD *)(v28 + 31) = 2082;
        LODWORD(v89) = v91;
        uint64_t v34 = sub_1005E1CC0();
        uint64_t v89 = sub_100481E54(v34, v35, v90);
        uint64_t v22 = v87;
        sub_1005E2960();
        uint64_t v14 = v79;
        swift_bridgeObjectRelease();
        sub_1004613B0((uint64_t)&v91);
        sub_1004613B0((uint64_t)&v91);
        os_log_t v36 = v75;
        _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v78, "[%.*hhx-%{public}s] NTLM: Received challenge with target: '%s', flags: {%{public}s}", (uint8_t *)v28, 0x29u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100448118((uint64_t)v13);
        sub_1004613B0((uint64_t)&v91);
        sub_1004613B0((uint64_t)&v91);
        sub_1004613B0((uint64_t)&v91);
        sub_1004613B0((uint64_t)&v91);
      }
      uint64_t v37 = *(void (**)(char *, uint64_t))(v22 + 8);
      v37(v20, v14);
      sub_1004613FC((uint64_t)&v96, (uint64_t)v97);
      sub_1004613FC((uint64_t)v97, (uint64_t)v98);
      uint64_t v38 = (uint64_t)v86;
      if (v100)
      {
        uint64_t v78 = v37;
      }
      else
      {
        LODWORD(v75) = v98[0];
        LODWORD(v76) = v98[1];
        LODWORD(v78) = v99;
        uint64_t v39 = v88;
        v80(v16, v88, v14);
        sub_100447F0C(v39, (uint64_t)v11);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        long long v40 = sub_1005E0EB0();
        os_log_type_t v41 = sub_1005E2580();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          v90[0] = v74;
          *(_DWORD *)uint64_t v42 = 68158978;
          LODWORD(v89) = 2;
          sub_1005E2960();
          *(_WORD *)(v42 + 8) = 256;
          char v43 = &v11[*(int *)(v85 + 20)];
          LOBYTE(v89) = *v43;
          sub_1005E2960();
          *(_WORD *)(v42 + 11) = 2082;
          uint64_t v44 = ConnectionID.debugDescription.getter(*((unsigned int *)v43 + 1));
          uint64_t v89 = sub_100481E54(v44, v45, v90);
          uint64_t v38 = (uint64_t)v86;
          sub_1005E2960();
          uint64_t v14 = v79;
          swift_bridgeObjectRelease();
          sub_100448118((uint64_t)v11);
          *(_WORD *)(v42 + 21) = 256;
          LOBYTE(v89) = (_BYTE)v75;
          sub_1005E2960();
          *(_WORD *)(v42 + 24) = 256;
          LOBYTE(v89) = v76;
          uint64_t v46 = v87;
          sub_1005E2960();
          *(_WORD *)(v42 + 27) = 512;
          LOWORD(v89) = (_WORD)v78;
          sub_1005E2960();
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "[%.*hhx-%{public}s] NTLM: Received challenge with OS version %hhu.%hhu.%hu", (uint8_t *)v42, 0x1Fu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v78 = *(void (**)(char *, uint64_t))(v46 + 8);
          v78(v16, v14);
        }
        else
        {
          sub_100448118((uint64_t)v11);

          uint64_t v78 = v37;
          v37(v16, v14);
        }
      }
      unint64_t v48 = v82;
      unint64_t v47 = v83;
      int v49 = v91;
      if ((v91 & 0x200) != 0)
      {
        LODWORD(v82) = v91;
        uint64_t v52 = v88;
        v80(v48, v88, v14);
        uint64_t v53 = v84;
        sub_100447F0C(v52, v84);
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        variable initialization expression of Engine.isProcessingUpdates();
        uint64_t v54 = sub_1005E0EB0();
        os_log_type_t v55 = sub_1005E2580();
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = swift_slowAlloc();
          v90[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v56 = 68158210;
          LODWORD(v89) = 2;
          sub_1005E2960();
          *(_WORD *)(v56 + 8) = 256;
          uint64_t v57 = v53 + *(int *)(v85 + 20);
          LOBYTE(v89) = *(unsigned char *)v57;
          sub_1005E2960();
          *(_WORD *)(v56 + 11) = 2082;
          uint64_t v58 = ConnectionID.debugDescription.getter(*(unsigned int *)(v57 + 4));
          uint64_t v89 = sub_100481E54(v58, v59, v90);
          uint64_t v38 = (uint64_t)v86;
          sub_1005E2960();
          uint64_t v14 = v79;
          swift_bridgeObjectRelease();
          sub_100448118(v53);
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "[%.*hhx-%{public}s] NTLM: NTLM Authentication flag set", (uint8_t *)v56, 0x15u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100448118(v53);
        }

        v78(v48, v14);
        unint64_t v47 = v83;
        int v49 = (int)v82;
        if ((v82 & 0x80000) == 0)
        {
LABEL_15:
          uint64_t v50 = v95;
          if (v95)
          {
LABEL_16:
            uint64_t v51 = *(void *)(v50 + 16);
            v90[0] = 0;
            v90[1] = v51;
            v90[2] = v50 + 32;
            v90[3] = v50 + 32 + v51;
            swift_bridgeObjectRetain();
            uint64_t v60 = sub_10045E184(v90);
            swift_bridgeObjectRelease();
LABEL_26:
            uint64_t v71 = v77;
            uint64_t v72 = (void *)(v77 + 120);
            uint64_t v73 = v92;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1004613B0((uint64_t)&v91);
            uint64_t result = sub_100461464(*(void *)(v71 + 120), *(void *)(v71 + 128), *(void *)(v71 + 136), *(void *)(v71 + 144));
            *uint64_t v72 = 0;
            *(void *)(v71 + 128) = 0;
            *(void *)(v71 + 136) = 255;
            *(void *)(v71 + 144) = v60;
            *(void *)(v71 + 152) = v50;
            *(void *)(v71 + 160) = v73;
            *(_DWORD *)(v71 + 168) = v49;
            return result;
          }
LABEL_25:
          uint64_t v60 = _swiftEmptyArrayStorage;
          goto LABEL_26;
        }
      }
      else if ((v91 & 0x80000) == 0)
      {
        goto LABEL_15;
      }
      uint64_t v61 = v88;
      v80(v47, v88, v14);
      sub_100447F0C(v61, v38);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      Swift::Int v62 = sub_1005E0EB0();
      os_log_type_t v63 = sub_1005E25C0();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        LODWORD(v82) = v49;
        v90[0] = v65;
        *(_DWORD *)uint64_t v64 = 68158210;
        LODWORD(v89) = 2;
        sub_1005E2960();
        *(_WORD *)(v64 + 8) = 256;
        uint64_t v66 = v38 + *(int *)(v85 + 20);
        LOBYTE(v89) = *(unsigned char *)v66;
        sub_1005E2960();
        *(_WORD *)(v64 + 11) = 2082;
        uint64_t v67 = ConnectionID.debugDescription.getter(*(unsigned int *)(v66 + 4));
        uint64_t v89 = sub_100481E54(v67, v68, v90);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118(v38);
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "[%.*hhx-%{public}s] NTLM: NTLM2 Session Response flag set", (uint8_t *)v64, 0x15u);
        swift_arrayDestroy();
        int v49 = (int)v82;
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v69 = v47;
        uint64_t v70 = v79;
      }
      else
      {
        sub_100448118(v38);

        uint64_t v69 = v47;
        uint64_t v70 = v14;
      }
      v78(v69, v70);
      uint64_t v50 = v95;
      if (v95) {
        goto LABEL_16;
      }
      goto LABEL_25;
    }
  }
  else
  {
    sub_100461140();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

BOOL sub_100460FB4(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 3);
  unint64_t v3 = *((void *)a2 + 3);
  if (v2)
  {
    if (v2 == 1)
    {
      if (v3 != 1) {
        return 0;
      }
    }
    else
    {
      if (v2 != 2)
      {
        long long v5 = *a2;
        uint64_t v6 = *((void *)a2 + 2);
        uint64_t v7 = *((void *)a2 + 4);
        uint64_t v8 = *((void *)a2 + 5);
        int v9 = *((_DWORD *)a2 + 12);
        int v10 = *((_DWORD *)a1 + 12);
        uint64_t v12 = *((void *)a1 + 4);
        uint64_t v11 = *((void *)a1 + 5);
        uint64_t v13 = *((void *)a1 + 2);
        long long v15 = *a1;
        char v16 = v13;
        uint64_t v17 = v2;
        uint64_t v18 = v12;
        uint64_t v19 = v11;
        int v20 = v10;
        if (v3 >= 3)
        {
          long long v21 = v5;
          char v22 = v6;
          unint64_t v23 = v3;
          uint64_t v24 = v7;
          uint64_t v25 = v8;
          int v26 = v9;
          return sub_10045C8D0((uint64_t *)&v15, (uint64_t *)&v21);
        }
        return 0;
      }
      if (v3 != 2) {
        return 0;
      }
    }
  }
  else if (v3)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_100461078(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[9];
  _OWORD v13[8] = a1[8];
  v14[0] = v2;
  *(_OWORD *)((char *)v14 + 12) = *(_OWORD *)((char *)a1 + 156);
  long long v3 = a1[5];
  v13[4] = a1[4];
  uint64_t v13[5] = v3;
  long long v4 = a1[7];
  v13[6] = a1[6];
  v13[7] = v4;
  long long v5 = a1[1];
  v13[0] = *a1;
  v13[1] = v5;
  long long v6 = a1[3];
  v13[2] = a1[2];
  void v13[3] = v6;
  long long v7 = a2[9];
  unsigned char v15[8] = a2[8];
  v16[0] = v7;
  *(_OWORD *)((char *)v16 + 12) = *(_OWORD *)((char *)a2 + 156);
  long long v8 = a2[5];
  v15[4] = a2[4];
  v15[5] = v8;
  long long v9 = a2[7];
  v15[6] = a2[6];
  v15[7] = v9;
  long long v10 = a2[1];
  v15[0] = *a2;
  v15[1] = v10;
  long long v11 = a2[3];
  _OWORD v15[2] = a2[2];
  v15[3] = v11;
  return sub_100461194((unsigned __int8 *)v13, (unsigned __int8 *)v15) & 1;
}

uint64_t sub_100461110()
{
  return sub_100460138();
}

uint64_t sub_100461128(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_100460320(a1, a2, a3);
}

unint64_t sub_100461140()
{
  unint64_t result = qword_100715A48;
  if (!qword_100715A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A48);
  }
  return result;
}

uint64_t sub_100461194(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = *((void *)a1 + 3);
  uint64_t v5 = *((void *)a1 + 4);
  uint64_t v6 = *((void *)a2 + 3);
  uint64_t v7 = *((void *)a2 + 4);
  BOOL v8 = *((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2);
  if (v8 || (char v9 = sub_1005E3290(), result = 0, (v9 & 1) != 0))
  {
    BOOL v11 = v4 == v6 && v5 == v7;
    if (v11 || (char v12 = sub_1005E3290(), result = 0, (v12 & 1) != 0))
    {
      sub_100443AD4((uint64_t)(a1 + 40), (uint64_t)v16);
      sub_100443AD4((uint64_t)(a2 + 40), (uint64_t)v15);
      if ((sub_100455D6C((uint64_t)v16, (uint64_t)v15) & 1) == 0) {
        return 0;
      }
      sub_1004614C8((long long *)(a1 + 120), (uint64_t)v14);
      sub_1004614C8((long long *)(a2 + 120), (uint64_t)v13);
      sub_1004614C8(v14, (uint64_t)&v21);
      if (*((void *)&v22 + 1) == 2)
      {
        sub_1004614C8(v13, (uint64_t)&v25);
        if (*((void *)&v26 + 1) != 2) {
          return 0;
        }
      }
      else
      {
        if (*((void *)&v22 + 1) != 1)
        {
          if (*((void *)&v22 + 1))
          {
            v17[0] = v21;
            v17[1] = v22;
            void v17[2] = v23;
            int v18 = v24;
            sub_1004614C8(v13, (uint64_t)&v25);
            if (*((void *)&v26 + 1) >= 3uLL)
            {
              v19[0] = v25;
              v19[1] = v26;
              v19[2] = v27;
              int v20 = v28;
              if (sub_10045C8D0((uint64_t *)v17, (uint64_t *)v19)) {
                return 1;
              }
            }
          }
          else
          {
            sub_1004614C8(v13, (uint64_t)&v25);
            if (!*((void *)&v26 + 1)) {
              return 1;
            }
          }
          return 0;
        }
        sub_1004614C8(v13, (uint64_t)&v25);
        if (*((void *)&v26 + 1) != 1) {
          return 0;
        }
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_100461368(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004613B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004613FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100461464(uint64_t result, uint64_t a2, unsigned __int8 a3, unint64_t a4)
{
  if (a4 >= 3)
  {
    sub_100448844(result, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004614C8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_DWORD *)(a2 + 48) = *((_DWORD *)a1 + 12);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

ValueMetadata *_s4NTLMV24InvalidStateForChallengeVMa()
{
  return &_s4NTLMV24InvalidStateForChallengeVN;
}

uint64_t _s4NTLMV5StateOwxx(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    int v1 = *(unsigned __int8 *)(result + 16);
    if (v1 != 255) {
      sub_1002173AC(*(void *)result, *(void *)(result + 8), v1);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s4NTLMV5StateOwcp(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[3];
  if (v4 < 0xFFFFFFFF)
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  }
  else
  {
    int v5 = *((unsigned __int8 *)a2 + 16);
    if (v5 == 255)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    }
    else
    {
      uint64_t v6 = *a2;
      uint64_t v7 = a2[1];
      sub_100217C58(*a2, v7, *((unsigned char *)a2 + 16));
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 16) = v5;
    }
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s4NTLMV5StateOwca(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL)
  {
    int v5 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
    {
      int v6 = *((unsigned __int8 *)a2 + 16);
      if (v5 == 255)
      {
        if (v6 == 255)
        {
          long long v22 = *a2;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
          *(_OWORD *)a1 = v22;
        }
        else
        {
          uint64_t v18 = *(void *)a2;
          uint64_t v19 = *((void *)a2 + 1);
          sub_100217C58(*(void *)a2, v19, *((unsigned char *)a2 + 16));
          *(void *)a1 = v18;
          *(void *)(a1 + 8) = v19;
          *(unsigned char *)(a1 + 16) = v6;
        }
      }
      else if (v6 == 255)
      {
        sub_10045B82C(a1);
        char v21 = *((unsigned char *)a2 + 16);
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 16) = v21;
      }
      else
      {
        uint64_t v7 = *(void *)a2;
        uint64_t v8 = *((void *)a2 + 1);
        sub_100217C58(*(void *)a2, v8, *((unsigned char *)a2 + 16));
        uint64_t v9 = *(void *)a1;
        uint64_t v10 = *(void *)(a1 + 8);
        *(void *)a1 = v7;
        *(void *)(a1 + 8) = v8;
        unsigned __int8 v11 = *(unsigned char *)(a1 + 16);
        *(unsigned char *)(a1 + 16) = v6;
        sub_1002173AC(v9, v10, v11);
      }
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
      return a1;
    }
    if (v5 != 255) {
      sub_1002173AC(*(void *)a1, *(void *)(a1 + 8), v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    long long v15 = *a2;
    long long v16 = a2[1];
    long long v17 = a2[2];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_OWORD *)(a1 + 16) = v16;
    *(_OWORD *)(a1 + 32) = v17;
    *(_OWORD *)a1 = v15;
    return a1;
  }
  if (v4 < 0xFFFFFFFF) {
    goto LABEL_12;
  }
  int v12 = *((unsigned __int8 *)a2 + 16);
  if (v12 == 255)
  {
    long long v20 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v20;
  }
  else
  {
    uint64_t v13 = *(void *)a2;
    uint64_t v14 = *((void *)a2 + 1);
    sub_100217C58(*(void *)a2, v14, *((unsigned char *)a2 + 16));
    *(void *)a1 = v13;
    *(void *)(a1 + 8) = v14;
    *(unsigned char *)(a1 + 16) = v12;
  }
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4NTLMV5StateOwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_13;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  int v5 = *(unsigned __int8 *)(a1 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 != 255) {
      sub_1002173AC(*(void *)a1, *(void *)(a1 + 8), v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v5 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  }
  else
  {
    int v6 = *(unsigned __int8 *)(a2 + 16);
    if (v6 == 255)
    {
      sub_10045B82C(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    }
    else
    {
      uint64_t v7 = *(void *)a1;
      uint64_t v8 = *(void *)(a1 + 8);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = v6;
      sub_1002173AC(v7, v8, v5);
    }
  }
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_13:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

uint64_t _s4NTLMV5StateOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 52)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s4NTLMV5StateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_DWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 52) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 52) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_100461A14(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_100461A2C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *_s4NTLMV5StateOMa()
{
  return &_s4NTLMV5StateON;
}

int *sub_100461A70(int *result, uint64_t a2, uint64_t *a3, int *a4, int *a5, int *a6, int *a7)
{
  uint64_t v7 = *a3;
  if (*a3 != a3[1])
  {
    uint64_t v13 = result;
    while (1)
    {
      uint64_t v14 = a3[2];
      long long v15 = (int *)(v14 + 4 * v7);
      if (!v14) {
        long long v15 = 0;
      }
      *uint64_t v13 = *v15;
      v13[1] = v15[1];
      v13[2] = v15[2];
      long long v13[3] = v15[3];
      v13[4] = v15[4];
      uint64_t v13[5] = v15[5];
      v13[6] = v15[6];
      v13[7] = v15[7];
      _OWORD v13[8] = v15[8];
      _OWORD v13[9] = v15[9];
      v13[10] = v15[10];
      _OWORD v13[11] = v15[11];
      unsigned char v13[12] = v15[12];
      v13[13] = v15[13];
      v13[14] = v15[14];
      v13[15] = v15[15];
      double result = sub_100461BA4(a4, a5, a6, a7, v13);
      uint64_t v16 = a3[1];
      uint64_t v7 = *a3 + 16;
      if ((unint64_t)(v16 - *a3) < 0x10) {
        uint64_t v7 = a3[1];
      }
      if (v16 < v7) {
        break;
      }
      *a3 = v7;
      if (v7 == v16) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

int *sub_100461BA4(int *result, int *a2, int *a3, int *a4, int *a5)
{
  int v5 = *a2;
  int v6 = *a3;
  int v8 = *a5;
  int v72 = *a4;
  int v7 = *a4;
  int v73 = *result;
  HIDWORD(v10) = *a5 + *result + (*a3 & *a2 | *a4 & ~*a2);
  LODWORD(v10) = HIDWORD(v10);
  int v9 = v10 >> 29;
  *double result = v9;
  int v11 = a5[1];
  HIDWORD(v10) = v11 + v7 + (v5 & v9 | v6 & ~v9);
  LODWORD(v10) = HIDWORD(v10);
  int v12 = v10 >> 25;
  *a4 = v12;
  int v13 = a5[2];
  HIDWORD(v10) = v13 + v6 + (v9 & v12 | v5 & ~v12);
  LODWORD(v10) = HIDWORD(v10);
  int v14 = v10 >> 21;
  *a3 = v14;
  int v15 = a5[3];
  HIDWORD(v10) = v15 + v5 + (v12 & v14 | v9 & ~v14);
  LODWORD(v10) = HIDWORD(v10);
  int v16 = v10 >> 13;
  *a2 = v16;
  int v17 = a5[4];
  HIDWORD(v10) = v17 + v9 + (v14 & v16 | v12 & ~v16);
  LODWORD(v10) = HIDWORD(v10);
  int v18 = v10 >> 29;
  *double result = v18;
  int v19 = a5[5];
  HIDWORD(v10) = v12 + v19 + (v16 & v18 | v14 & ~v18);
  LODWORD(v10) = HIDWORD(v10);
  int v20 = v10 >> 25;
  *a4 = v20;
  int v21 = a5[6];
  HIDWORD(v10) = v14 + v21 + (v18 & v20 | v16 & ~v20);
  LODWORD(v10) = HIDWORD(v10);
  int v22 = v10 >> 21;
  *a3 = v22;
  int v23 = a5[7];
  HIDWORD(v10) = v16 + v23 + (v20 & v22 | v18 & ~v22);
  LODWORD(v10) = HIDWORD(v10);
  int v24 = v10 >> 13;
  *a2 = v24;
  int v25 = a5[8];
  HIDWORD(v10) = v18 + v25 + (v22 & v24 | v20 & ~v24);
  LODWORD(v10) = HIDWORD(v10);
  int v26 = v10 >> 29;
  *double result = v26;
  int v27 = a5[9];
  HIDWORD(v10) = v20 + v27 + (v24 & v26 | v22 & ~v26);
  LODWORD(v10) = HIDWORD(v10);
  int v28 = v10 >> 25;
  *a4 = v28;
  int v29 = a5[10];
  HIDWORD(v10) = v22 + v29 + (v26 & v28 | v24 & ~v28);
  LODWORD(v10) = HIDWORD(v10);
  int v30 = v10 >> 21;
  *a3 = v30;
  int v31 = a5[11];
  HIDWORD(v10) = v24 + v31 + (v28 & v30 | v26 & ~v30);
  LODWORD(v10) = HIDWORD(v10);
  int v32 = v10 >> 13;
  *a2 = v32;
  int v33 = a5[12];
  HIDWORD(v10) = v26 + v33 + (v30 & v32 | v28 & ~v32);
  LODWORD(v10) = HIDWORD(v10);
  int v34 = v10 >> 29;
  *double result = v34;
  int v35 = a5[13];
  HIDWORD(v10) = v28 + v35 + (v32 & v34 | v30 & ~v34);
  LODWORD(v10) = HIDWORD(v10);
  int v36 = v10 >> 25;
  *a4 = v36;
  int v37 = a5[14];
  HIDWORD(v10) = v30 + v37 + (v34 & v36 | v32 & ~v36);
  LODWORD(v10) = HIDWORD(v10);
  int v38 = v10 >> 21;
  *a3 = v38;
  int v39 = a5[15];
  HIDWORD(v10) = v32 + v39 + (v38 & v36 | v34 & ~v38);
  LODWORD(v10) = HIDWORD(v10);
  int v40 = v10 >> 13;
  HIDWORD(v10) = v8 + v34 + 1518500249 + (v40 & (v38 | v36) | v38 & v36);
  LODWORD(v10) = HIDWORD(v10);
  int v41 = v10 >> 29;
  HIDWORD(v10) = v17 + v36 + 1518500249 + (v41 & (v40 | v38) | v40 & v38);
  LODWORD(v10) = HIDWORD(v10);
  int v42 = v10 >> 27;
  HIDWORD(v10) = v25 + v38 + 1518500249 + (v42 & (v41 | v40) | v41 & v40);
  LODWORD(v10) = HIDWORD(v10);
  int v43 = v10 >> 23;
  HIDWORD(v10) = v33 + v40 + 1518500249 + (v43 & (v42 | v41) | v42 & v41);
  LODWORD(v10) = HIDWORD(v10);
  int v44 = v10 >> 19;
  HIDWORD(v10) = v11 + v41 + 1518500249 + (v44 & (v43 | v42) | v43 & v42);
  LODWORD(v10) = HIDWORD(v10);
  int v45 = v10 >> 29;
  HIDWORD(v10) = v19 + v42 + 1518500249 + (v45 & (v44 | v43) | v44 & v43);
  LODWORD(v10) = HIDWORD(v10);
  int v46 = v10 >> 27;
  HIDWORD(v10) = v27 + v43 + 1518500249 + (v46 & (v45 | v44) | v45 & v44);
  LODWORD(v10) = HIDWORD(v10);
  int v47 = v10 >> 23;
  HIDWORD(v10) = v35 + v44 + 1518500249 + (v47 & (v46 | v45) | v46 & v45);
  LODWORD(v10) = HIDWORD(v10);
  int v48 = v10 >> 19;
  HIDWORD(v10) = v13 + v45 + 1518500249 + (v48 & (v47 | v46) | v47 & v46);
  LODWORD(v10) = HIDWORD(v10);
  int v49 = v10 >> 29;
  HIDWORD(v10) = v21 + v46 + 1518500249 + (v49 & (v48 | v47) | v48 & v47);
  LODWORD(v10) = HIDWORD(v10);
  int v50 = v10 >> 27;
  HIDWORD(v10) = v29 + v47 + 1518500249 + (v50 & (v49 | v48) | v49 & v48);
  LODWORD(v10) = HIDWORD(v10);
  int v51 = v10 >> 23;
  HIDWORD(v10) = v37 + v48 + 1518500249 + (v51 & (v50 | v49) | v50 & v49);
  LODWORD(v10) = HIDWORD(v10);
  int v52 = v10 >> 19;
  HIDWORD(v10) = v15 + v49 + 1518500249 + (v52 & (v51 | v50) | v51 & v50);
  LODWORD(v10) = HIDWORD(v10);
  int v53 = v10 >> 29;
  HIDWORD(v10) = v23 + v50 + 1518500249 + (v53 & (v52 | v51) | v52 & v51);
  LODWORD(v10) = HIDWORD(v10);
  int v54 = v10 >> 27;
  HIDWORD(v10) = v31 + v51 + 1518500249 + (v54 & (v53 | v52) | v53 & v52);
  LODWORD(v10) = HIDWORD(v10);
  int v55 = v10 >> 23;
  HIDWORD(v10) = v39 + v52 + 1518500249 + (v55 & (v54 | v53) | v54 & v53);
  LODWORD(v10) = HIDWORD(v10);
  int v56 = v10 >> 19;
  HIDWORD(v10) = v8 + v53 + 1859775393 + (v56 ^ v55 ^ v54);
  LODWORD(v10) = HIDWORD(v10);
  int v57 = v10 >> 29;
  HIDWORD(v10) = v25 + v54 + 1859775393 + (v56 ^ v55 ^ v57);
  LODWORD(v10) = HIDWORD(v10);
  int v58 = v10 >> 23;
  HIDWORD(v10) = v17 + v55 + 1859775393 + (v57 ^ v56 ^ v58);
  LODWORD(v10) = HIDWORD(v10);
  int v59 = v10 >> 21;
  HIDWORD(v10) = v33 + v56 + 1859775393 + (v58 ^ v57 ^ v59);
  LODWORD(v10) = HIDWORD(v10);
  int v60 = v10 >> 17;
  HIDWORD(v10) = v13 + v57 + 1859775393 + (v59 ^ v58 ^ v60);
  LODWORD(v10) = HIDWORD(v10);
  int v61 = v10 >> 29;
  HIDWORD(v10) = v29 + v58 + 1859775393 + (v60 ^ v59 ^ v61);
  LODWORD(v10) = HIDWORD(v10);
  int v62 = v10 >> 23;
  HIDWORD(v10) = v21 + v59 + 1859775393 + (v61 ^ v60 ^ v62);
  LODWORD(v10) = HIDWORD(v10);
  int v63 = v10 >> 21;
  HIDWORD(v10) = v37 + v60 + 1859775393 + (v62 ^ v61 ^ v63);
  LODWORD(v10) = HIDWORD(v10);
  int v64 = v10 >> 17;
  HIDWORD(v10) = v11 + v61 + 1859775393 + (v63 ^ v62 ^ v64);
  LODWORD(v10) = HIDWORD(v10);
  int v65 = v10 >> 29;
  HIDWORD(v10) = v27 + v62 + 1859775393 + (v64 ^ v63 ^ v65);
  LODWORD(v10) = HIDWORD(v10);
  int v66 = v10 >> 23;
  HIDWORD(v10) = v19 + v63 + 1859775393 + (v65 ^ v64 ^ v66);
  LODWORD(v10) = HIDWORD(v10);
  int v67 = v10 >> 21;
  HIDWORD(v10) = v35 + v64 + 1859775393 + (v66 ^ v65 ^ v67);
  LODWORD(v10) = HIDWORD(v10);
  int v68 = v10 >> 17;
  HIDWORD(v10) = v15 + v65 + 1859775393 + (v67 ^ v66 ^ v68);
  LODWORD(v10) = HIDWORD(v10);
  int v69 = v10 >> 29;
  HIDWORD(v10) = v31 + v66 + 1859775393 + (v68 ^ v67 ^ v69);
  LODWORD(v10) = HIDWORD(v10);
  int v70 = v10 >> 23;
  HIDWORD(v10) = v23 + v67 + 1859775393 + (v69 ^ v68 ^ v70);
  LODWORD(v10) = HIDWORD(v10);
  int v71 = v10 >> 21;
  HIDWORD(v10) = v39 + v68 + 1859775393 + (v70 ^ v69 ^ v71);
  LODWORD(v10) = HIDWORD(v10);
  *double result = v69 + v73;
  *a2 = (v10 >> 17) + v5;
  *a3 = v71 + v6;
  *a4 = v70 + v72;
  return result;
}

uint64_t sub_1004621A4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v61 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  __chkstk_darwin();
  int v63 = (char *)&v57 - v6;
  __chkstk_darwin();
  int v8 = (char *)&v57 - v7;
  uint64_t v65 = sub_1005E0ED0();
  uint64_t v9 = *(void *)(v65 - 8);
  __chkstk_darwin();
  __chkstk_darwin();
  int v11 = (char *)&v57 - v10;
  __chkstk_darwin();
  int v13 = (char *)&v57 - v12;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v14) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      uint64_t v14 = (int)v14;
LABEL_5:
      if (v14 > 499)
      {
        int v8 = v63;
        switch(a2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_53;
            }
            if (HIDWORD(a1) - (int)a1 > 4999) {
              goto LABEL_37;
            }
            unint64_t v42 = a2;
            __chkstk_darwin();
            *(&v57 - 2) = a3;
            goto LABEL_43;
          case 2uLL:
            uint64_t v44 = *(void *)(a1 + 16);
            uint64_t v43 = *(void *)(a1 + 24);
            BOOL v17 = __OFSUB__(v43, v44);
            uint64_t v45 = v43 - v44;
            if (v17) {
              goto LABEL_54;
            }
            if (v45 >= 5000)
            {
LABEL_37:
              (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v65);
              sub_100447F0C(a3, (uint64_t)v8);
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              variable initialization expression of Engine.isProcessingUpdates();
              sub_100008D24(a1, a2);
              sub_100008D24(a1, a2);
              int v25 = sub_1005E0EB0();
              os_log_type_t v49 = sub_1005E25A0();
              if (!os_log_type_enabled(v25, v49))
              {
                sub_1000094D4(a1, a2);
                sub_100448118((uint64_t)v8);
                sub_1000094D4(a1, a2);

                return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v65);
              }
              int v60 = v11;
              unint64_t v64 = a2;
              uint64_t v58 = v9;
              uint64_t v50 = swift_slowAlloc();
              int v13 = (char *)swift_slowAlloc();
              *(void *)&long long v67 = v13;
              *(_DWORD *)uint64_t v50 = 68158466;
              LODWORD(v66) = 2;
              sub_1005E2960();
              *(_WORD *)(v50 + 8) = 256;
              int v51 = &v8[*(int *)(v61 + 20)];
              LOBYTE(v66) = *v51;
              sub_1005E2960();
              *(_WORD *)(v50 + 11) = 2082;
              uint64_t v52 = ConnectionID.debugDescription.getter(*((unsigned int *)v51 + 1));
              uint64_t v66 = sub_100481E54(v52, v53, (uint64_t *)&v67);
              sub_1005E2960();
              swift_bridgeObjectRelease();
              sub_100448118((uint64_t)v8);
              *(_WORD *)(v50 + 21) = 2048;
              if (a2 >> 62 == 2)
              {
                uint64_t v9 = *(void *)(a1 + 16);
                uint64_t v54 = *(void *)(a1 + 24);
                sub_1000094D4(a1, v64);
                uint64_t v55 = v54 - v9;
                if (__OFSUB__(v54, v9))
                {
                  __break(1u);
                  goto LABEL_42;
                }
              }
              else
              {
                sub_1000094D4(a1, v64);
                LODWORD(v55) = HIDWORD(a1) - a1;
                if (__OFSUB__(HIDWORD(a1), a1)) {
                  goto LABEL_56;
                }
                uint64_t v55 = (int)v55;
              }
              uint64_t v56 = v58;
              uint64_t v66 = v55;
              sub_1005E2960();
              sub_1000094D4(a1, v64);
              _os_log_impl((void *)&_mh_execute_header, v25, v49, "[%.*hhx-%{public}s] XOAUTH2 error (%{iec-bytes}ld)", (uint8_t *)v50, 0x1Fu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v60, v65);
            }
            unint64_t v42 = a2;
            __chkstk_darwin();
            *(&v57 - 2) = a3;
            if (v46 == 2)
            {
              uint64_t v47 = *(void *)(a1 + 16);
              uint64_t v48 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              sub_1001D5950(v47, v48, sub_100463CCC);
              swift_release();
              return swift_release();
            }
LABEL_43:
            if (a1 >> 32 >= (int)a1)
            {
              swift_retain();
              sub_1001D5950((int)a1, a1 >> 32, sub_100463CCC);
              return sub_1000094D4(a1, v42);
            }
            break;
          case 3uLL:
            *(void *)((char *)&v67 + 6) = 0;
            *(void *)&long long v67 = 0;
            int v41 = (char *)&v67;
            return sub_10046319C((uint64_t)&v67, (uint64_t)v41, a3);
          default:
            *(void *)&long long v67 = a1;
            WORD4(v67) = a2;
            BYTE10(v67) = BYTE2(a2);
            BYTE11(v67) = BYTE3(a2);
            BYTE12(v67) = BYTE4(a2);
            BYTE13(v67) = BYTE5(a2);
            int v41 = (char *)&v67 + BYTE6(a2);
            return sub_10046319C((uint64_t)&v67, (uint64_t)v41, a3);
        }
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
      }
LABEL_6:
      unint64_t v59 = a2 >> 62;
      int v60 = v11;
      unint64_t v64 = a3;
      sub_1005E03E0();
      swift_allocObject();
      uint64_t v18 = sub_1005E03D0();
      sub_100463CE8();
      uint64_t v62 = v18;
      sub_1005E03C0();
      unint64_t v19 = *((void *)&v67 + 1);
      int v63 = (char *)v67;
      unint64_t v21 = v68;
      unint64_t v20 = v69;
      int v23 = v70;
      unint64_t v22 = v71;
      uint64_t v24 = v64;
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v13, v64, v65);
      sub_100447F0C(v24, (uint64_t)v8);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      int v25 = sub_1005E0EB0();
      os_log_type_t v26 = sub_1005E25A0();
      int v27 = v26;
      if (!os_log_type_enabled(v25, v26))
      {
LABEL_42:
        sub_100448118((uint64_t)v8);

        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v65);
      }
      uint64_t v28 = swift_slowAlloc();
      uint64_t v58 = v9;
      uint64_t v29 = v28;
      unint64_t v64 = swift_slowAlloc();
      *(void *)&long long v67 = v64;
      *(_DWORD *)uint64_t v29 = 68158979;
      LODWORD(v66) = 2;
      unint64_t v59 = v21;
      sub_1005E2960();
      *(_WORD *)(v29 + 8) = 256;
      uint64_t v30 = *(int *)(v61 + 20);
      LODWORD(v61) = v27;
      int v31 = &v8[v30];
      LOBYTE(v66) = v8[v30];
      sub_1005E2960();
      *(_WORD *)(v29 + 11) = 2082;
      int v60 = v23;
      uint64_t v32 = ConnectionID.debugDescription.getter(*((unsigned int *)v31 + 1));
      uint64_t v66 = sub_100481E54(v32, v33, (uint64_t *)&v67);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100448118((uint64_t)v8);
      *(_WORD *)(v29 + 21) = 2082;
      if (v19) {
        uint64_t v34 = (uint64_t)v63;
      }
      else {
        uint64_t v34 = 0;
      }
      if (v19) {
        unint64_t v35 = v19;
      }
      else {
        unint64_t v35 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_100481E54(v34, v35, (uint64_t *)&v67);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 31) = 2082;
      if (v20) {
        uint64_t v36 = v59;
      }
      else {
        uint64_t v36 = 0;
      }
      if (v20) {
        unint64_t v37 = v20;
      }
      else {
        unint64_t v37 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_100481E54(v36, v37, (uint64_t *)&v67);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 41) = 2081;
      if (v22) {
        uint64_t v38 = (uint64_t)v60;
      }
      else {
        uint64_t v38 = 0;
      }
      if (v22) {
        unint64_t v39 = v22;
      }
      else {
        unint64_t v39 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_100481E54(v38, v39, (uint64_t *)&v67);
      sub_1005E2960();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v61, "[%.*hhx-%{public}s] XOAUTH2 error: status '%{public}s',  schemes '%{public}s',  scope '%{private}s'", (uint8_t *)v29, 0x33u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v13, v65);
    case 2uLL:
      uint64_t v16 = *(void *)(a1 + 16);
      uint64_t v15 = *(void *)(a1 + 24);
      BOOL v17 = __OFSUB__(v15, v16);
      uint64_t v14 = v15 - v16;
      if (!v17) {
        goto LABEL_5;
      }
      goto LABEL_52;
    default:
      goto LABEL_6;
  }
}

BOOL sub_100462EA8(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = a2[1];
  if (v2 >> 60 == 11) {
    return v3 >> 60 == 11;
  }
  if (v2 >> 60 == 15) {
    return v3 >> 60 == 15;
  }
  if (((v3 >> 60) | 4) == 0xF) {
    return 0;
  }
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  sub_10003E058(*a1, v2);
  sub_10003E058(v6, v3);
  char v7 = sub_10044B1A8(v5, v2, v6, v3);
  sub_10003E070(v6, v3);
  sub_10003E070(v5, v2);
  return v7 & 1;
}

uint64_t sub_100462F7C(uint64_t a1, uint64_t a2)
{
  sub_100443AD4(a1, (uint64_t)v10);
  uint64_t v4 = *(void *)(a1 + 80);
  unint64_t v5 = *(void *)(a1 + 88);
  sub_100443AD4(a2, (uint64_t)v11);
  uint64_t v7 = *(void *)(a2 + 80);
  unint64_t v6 = *(void *)(a2 + 88);
  if ((sub_100455D6C((uint64_t)v10, (uint64_t)v11) & 1) == 0) {
    return 0;
  }
  if (v5 >> 60 == 11) {
    return v6 >> 60 == 11;
  }
  if (v5 >> 60 != 15)
  {
    if (((v6 >> 60) | 4) != 0xF)
    {
      sub_10003E058(v4, v5);
      sub_10003E058(v7, v6);
      char v9 = sub_10044B1A8(v4, v5, v7, v6);
      sub_10003E070(v7, v6);
      sub_10003E070(v4, v5);
      if (v9) {
        return 1;
      }
    }
    return 0;
  }
  return v6 >> 60 == 15;
}

uint64_t sub_100463080()
{
  uint64_t v1 = *(void *)(v0 + 88) >> 60;
  if (v1 == 11) {
    return 0;
  }
  if (v1 == 15)
  {
    sub_100443A80();
    swift_allocError();
    *(_OWORD *)uint64_t v2 = xmmword_1005F6950;
    *(unsigned char *)(v2 + 16) = 1;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = *(void *)(v0 + 80);
    *(_OWORD *)(v0 + 80) = xmmword_1005F66D0;
  }
  return result;
}

uint64_t sub_100463118(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (*(void *)(v3 + 88) >> 60 == 15)
  {
    uint64_t result = sub_1004621A4(a1, a2, a3);
    *(_OWORD *)(v3 + 80) = xmmword_1005F6760;
  }
  else
  {
    sub_100443A80();
    swift_allocError();
    *(_OWORD *)uint64_t v5 = xmmword_1005F6950;
    *(unsigned char *)(v5 + 16) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10046319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v5 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005E0ED0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  int v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  sub_100447F0C(a3, (uint64_t)v7);
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  variable initialization expression of Engine.isProcessingUpdates();
  uint64_t v12 = sub_1005E0EB0();
  os_log_type_t v13 = sub_1005E25A0();
  if (!os_log_type_enabled(v12, v13))
  {
    sub_100448118((uint64_t)v7);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v22 = v8;
  uint64_t v23 = v3;
  uint64_t v14 = swift_slowAlloc();
  uint64_t v21 = swift_slowAlloc();
  uint64_t v27 = v21;
  *(_DWORD *)uint64_t v14 = 68158722;
  LODWORD(v26) = 2;
  sub_1005E2960();
  *(_WORD *)(v14 + 8) = 256;
  uint64_t v15 = &v7[*(int *)(v5 + 20)];
  LOBYTE(v26) = *v15;
  sub_1005E2960();
  *(_WORD *)(v14 + 11) = 2082;
  uint64_t v16 = ConnectionID.debugDescription.getter(*((unsigned int *)v15 + 1));
  uint64_t v26 = sub_100481E54(v16, v17, &v27);
  sub_1005E2960();
  swift_bridgeObjectRelease();
  sub_100448118((uint64_t)v7);
  *(_WORD *)(v14 + 21) = 1040;
  uint64_t v18 = v25;
  uint64_t v19 = v24 - v25;
  if (!v25) {
    uint64_t v19 = 0;
  }
  if (v19 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_10:
    __break(1u);
  }
  if (v19 > 0x7FFFFFFF) {
    goto LABEL_10;
  }
  LODWORD(v26) = v19;
  sub_1005E2960();
  *(_WORD *)(v14 + 27) = 2098;
  if (v18)
  {
    uint64_t v26 = v18;
    sub_1005E2960();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[%.*hhx-%{public}s] XOAUTH2 error: %{public}.*P", (uint8_t *)v14, 0x25u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  }
  else
  {
    uint64_t result = sub_1005E2F10();
    __break(1u);
  }
  return result;
}

uint64_t sub_100463570()
{
  uint64_t v1 = 0x73656D65686373;
  if (*v0 != 1) {
    uint64_t v1 = 0x65706F6373;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x737574617473;
  }
}

uint64_t sub_1004635C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100463E2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004635EC(uint64_t a1)
{
  unint64_t v2 = sub_1004641B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100463628(uint64_t a1)
{
  unint64_t v2 = sub_1004641B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100463664@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100463F74(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1004636A8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  long long v27 = xmmword_100622570;
  uint64_t v8 = sub_1004B94C4(0x3D72657375uLL, 0xE500000000000000);
  unint64_t v10 = v9;
  sub_1005E08C0();
  sub_1000094D4(v8, v10);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1004B94C4(a1, a2);
  unint64_t v13 = v12;
  sub_1005E08C0();
  sub_1000094D4(v11, v13);
  uint64_t v25 = sub_10000566C(&qword_100715A58);
  unint64_t v26 = sub_1004638CC();
  LOBYTE(v24[0]) = 1;
  sub_10003BCDC(v24, v25);
  sub_1005E0850();
  _s13IMAP2Behavior4TaskOwxx_0((uint64_t)v24);
  uint64_t v14 = sub_1004B94C4(0x6165423D68747561uLL, 0xEC00000020726572);
  unint64_t v16 = v15;
  sub_1005E08C0();
  sub_1000094D4(v14, v16);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1004B94C4(a3, a4);
  unint64_t v19 = v18;
  sub_1005E08C0();
  sub_1000094D4(v17, v19);
  uint64_t v20 = sub_1004C31D8((uint64_t)&off_1006F2780);
  unint64_t v22 = v21;
  sub_1005E08C0();
  sub_1000094D4(v20, v22);
  return v27;
}

unint64_t sub_1004638CC()
{
  unint64_t result = qword_100715A60;
  if (!qword_100715A60)
  {
    sub_10000744C(&qword_100715A58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A60);
  }
  return result;
}

uint64_t _s10OAuthTokenVwxx(uint64_t *a1)
{
  uint64_t result = sub_1004434DC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  unint64_t v3 = a1[11];
  if (((v3 >> 60) | 4) != 0xF)
  {
    uint64_t v4 = a1[10];
    return sub_1000094D4(v4, v3);
  }
  return result;
}

uint64_t _s10OAuthTokenVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v16 = a2[8];
  unint64_t v17 = a2[9];
  sub_100443318(*a2, v5, v6, v7, v8, v9, v10, v11, v16, v17);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v17;
  unint64_t v12 = a2 + 10;
  unint64_t v13 = a2[11];
  if (((v13 >> 60) | 4) == 0xF)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_100008D24(*v12, v13);
    *(void *)(a1 + 80) = v14;
    *(void *)(a1 + 88) = v13;
  }
  return a1;
}

uint64_t *_s10OAuthTokenVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v30 = a2[8];
  unint64_t v31 = a2[9];
  sub_100443318(*a2, v5, v6, v7, v8, v9, v10, v11, v30, v31);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  uint64_t v20 = a1[8];
  unint64_t v21 = a1[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v30;
  a1[9] = v31;
  sub_1004434DC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  unint64_t v22 = a2 + 10;
  if ((((unint64_t)a1[11] >> 60) | 4) != 0xF)
  {
    unint64_t v25 = a2[11];
    if (((v25 >> 60) | 4) != 0xF)
    {
      uint64_t v27 = *v22;
      sub_100008D24(*v22, v25);
      uint64_t v28 = a1[10];
      unint64_t v29 = a1[11];
      a1[10] = v27;
      a1[11] = v25;
      sub_1000094D4(v28, v29);
      return a1;
    }
    sub_10044384C((uint64_t)(a1 + 10));
    goto LABEL_6;
  }
  unint64_t v23 = a2[11];
  if (((v23 >> 60) | 4) == 0xF)
  {
LABEL_6:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v22;
    return a1;
  }
  uint64_t v24 = *v22;
  sub_100008D24(*v22, v23);
  a1[10] = v24;
  a1[11] = v23;
  return a1;
}

uint64_t *_s10OAuthTokenVwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7];
  uint64_t v12 = a1[8];
  unint64_t v13 = a1[9];
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v15;
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_1004434DC(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v16 = (uint64_t *)(a2 + 80);
  unint64_t v17 = a1[11];
  if (((v17 >> 60) | 4) != 0xF)
  {
    unint64_t v18 = *(void *)(a2 + 88);
    if (((v18 >> 60) | 4) != 0xF)
    {
      uint64_t v20 = a1[10];
      a1[10] = *v16;
      a1[11] = v18;
      sub_1000094D4(v20, v17);
      return a1;
    }
    sub_10044384C((uint64_t)(a1 + 10));
  }
  *((_OWORD *)a1 + 5) = *(_OWORD *)v16;
  return a1;
}

ValueMetadata *_s10OAuthTokenVMa()
{
  return &_s10OAuthTokenVN;
}

uint64_t sub_100463CCC(uint64_t a1, uint64_t a2)
{
  return sub_10046319C(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_100463CE8()
{
  unint64_t result = qword_100715A68;
  if (!qword_100715A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A68);
  }
  return result;
}

__n128 initializeWithTake for TransportLayerSecurity(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for S(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for S(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for S()
{
  return &type metadata for S;
}

ValueMetadata *_s10OAuthTokenV5StateOMa()
{
  return &_s10OAuthTokenV5StateON;
}

uint64_t sub_100463E2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656D65686373 && a2 == 0xE700000000000000 || (sub_1005E3290() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65706F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1005E3290();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100463F74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000566C(&qword_100715A70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003BCDC(a1, a1[3]);
  sub_1004641B4();
  sub_1005E34E0();
  if (v2)
  {
    _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = 0;
    uint64_t v9 = sub_1005E3080();
    uint64_t v11 = v10;
    uint64_t v21 = v9;
    char v23 = 1;
    uint64_t v12 = sub_1005E3080();
    uint64_t v14 = v13;
    uint64_t v20 = v12;
    char v22 = 2;
    uint64_t v15 = sub_1005E3080();
    uint64_t v16 = v8;
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    uint64_t result = _s13IMAP2Behavior4TaskOwxx_0((uint64_t)a1);
    *a2 = v21;
    a2[1] = v11;
    a2[2] = v20;
    a2[3] = v14;
    a2[4] = v15;
    a2[5] = v18;
  }
  return result;
}

unint64_t sub_1004641B4()
{
  unint64_t result = qword_100715A78;
  if (!qword_100715A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A78);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for S.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004642D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for S.CodingKeys()
{
  return &type metadata for S.CodingKeys;
}

unint64_t sub_100464310()
{
  unint64_t result = qword_100715A80;
  if (!qword_100715A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A80);
  }
  return result;
}

unint64_t sub_100464368()
{
  unint64_t result = qword_100715A88;
  if (!qword_100715A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A88);
  }
  return result;
}

unint64_t sub_1004643C0()
{
  unint64_t result = qword_100715A90;
  if (!qword_100715A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A90);
  }
  return result;
}

ValueMetadata *_s5PlainVMa()
{
  return &_s5PlainVN;
}

BOOL sub_100464424(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = a2[1];
  BOOL v4 = v3 >> 60 == 15 && v2 >> 60 == 15;
  if (v2 >> 60 == 15 || v3 >> 60 == 15) {
    return v4;
  }
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  sub_100057EE8(*a1, v2);
  sub_100057EE8(v6, v3);
  char v8 = sub_10044B1A8(v7, v2, v6, v3);
  sub_1004488AC(v6, v3);
  sub_1004488AC(v7, v2);
  return v8 & 1;
}

BOOL sub_1004644D8(uint64_t a1, uint64_t a2)
{
  sub_100443AD4(a1, (uint64_t)v10);
  uint64_t v4 = *(void *)(a1 + 80);
  unint64_t v5 = *(void *)(a1 + 88);
  sub_100443AD4(a2, (uint64_t)v11);
  uint64_t v7 = *(void *)(a2 + 80);
  unint64_t v6 = *(void *)(a2 + 88);
  if ((sub_100455D6C((uint64_t)v10, (uint64_t)v11) & 1) == 0) {
    return 0;
  }
  if (v5 >> 60 != 15)
  {
    if (v6 >> 60 == 15) {
      return 0;
    }
    sub_100057EE8(v4, v5);
    sub_100057EE8(v7, v6);
    char v8 = sub_10044B1A8(v4, v5, v7, v6);
    sub_1004488AC(v7, v6);
    sub_1004488AC(v4, v5);
    return (v8 & 1) != 0;
  }
  return v6 >> 60 == 15;
}

ValueMetadata *_s5PlainV5StateOMa()
{
  return &_s5PlainV5StateON;
}

uint64_t AuthenticationFailure.debugDescription.getter(char a1)
{
  uint64_t result = 0x6F7571207265766FLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6465726320646162;
      break;
    case 2:
      uint64_t result = 0x6B63757473;
      break;
    case 3:
      uint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100464670()
{
  unint64_t result = qword_100715A98;
  if (!qword_100715A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715A98);
  }
  return result;
}

uint64_t sub_1004646C4()
{
  uint64_t result = 0x6F7571207265766FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465726320646162;
      break;
    case 2:
      uint64_t result = 0x6B63757473;
      break;
    case 3:
      uint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AuthenticationFailure(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100464828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationFailure()
{
  return &type metadata for AuthenticationFailure;
}

uint64_t sub_100464860@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Authenticator();
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (uint64_t *)((char *)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for UnauthenticatedState();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v116 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v116 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v116 - v17;
  sub_1004654EC(v2, (uint64_t)&v116 - v17);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 9)
    {
      sub_1004654EC((uint64_t)v18, (uint64_t)v13);
      if (!v13[16])
      {
        LOBYTE(v143) = *(void *)v13;
        goto LABEL_53;
      }
      if (v13[16] == 1)
      {
        sub_10046564C(*(void *)v13, *((void *)v13 + 1), 1);
        LOBYTE(v143) = 0;
        goto LABEL_53;
      }
      char v109 = 3;
      goto LABEL_52;
    }
    if (EnumCaseMultiPayload == 8)
    {
      sub_1004654EC((uint64_t)v18, (uint64_t)v16);
      uint64_t v20 = *(void *)v16;
      long long v151 = *(_OWORD *)(v16 + 120);
      long long v152 = *(_OWORD *)(v16 + 136);
      long long v153 = *(_OWORD *)(v16 + 152);
      long long v154 = *(_OWORD *)(v16 + 168);
      long long v147 = *(_OWORD *)(v16 + 56);
      long long v148 = *(_OWORD *)(v16 + 72);
      long long v149 = *(_OWORD *)(v16 + 88);
      long long v150 = *(_OWORD *)(v16 + 104);
      long long v21 = *(_OWORD *)(v16 + 24);
      long long v144 = *(_OWORD *)(v16 + 8);
      long long v145 = v21;
      long long v146 = *(_OWORD *)(v16 + 40);
      uint64_t v143 = v20;
      sub_100465664((uint64_t)&v143);
      goto LABEL_54;
    }
    goto LABEL_57;
  }
  sub_1004654EC((uint64_t)v18, (uint64_t)v10);
  sub_10046557C((uint64_t)v10, (uint64_t)v6);
  uint64_t v22 = *v6;
  uint64_t v23 = *(void *)(*v6 + 16);
  if (!v23) {
    goto LABEL_42;
  }
  uint64_t v24 = v22 + 32;
  uint64_t v25 = v6[2];
  uint64_t v141 = v25 + 56;
  uint64_t v118 = v22;
  swift_bridgeObjectRetain_n();
  uint64_t v26 = 0;
  Swift::Int v120 = v18;
  uint64_t v121 = a1;
  unsigned long long v119 = v6;
  uint64_t v116 = v24;
  uint64_t v117 = v23;
  uint64_t v134 = v25;
  do
  {
    uint64_t v27 = (uint64_t *)(v24 + 80 * v26);
    uint64_t v142 = *v27;
    unint64_t v28 = v27[1];
    uint64_t v139 = v27[2];
    unint64_t v140 = v28;
    unint64_t v29 = v27[3];
    uint64_t v131 = v27[4];
    unint64_t v132 = v27[5];
    uint64_t v30 = v27[7];
    uint64_t v133 = v27[6];
    uint64_t v32 = v27[8];
    unint64_t v31 = v27[9];
    uint64_t v135 = v32;
    unint64_t v136 = v31;
    uint64_t v33 = *(void *)(v25 + 16);
    uint64_t v137 = v30;
    unint64_t v138 = v29;
    if (!v33)
    {
      sub_10044CA28(v142, v140, v139, v138, v131, v132, v133, v30, v135, v136);
      uint64_t v84 = v137;
LABEL_56:
      uint64_t v110 = v84;
      swift_bridgeObjectRelease_n();
      sub_10044B008(v142, v140, v139, v138, v131, v132, v133, v110, v135, v136);
      sub_1004655E0((uint64_t)v119, (uint64_t (*)(void))type metadata accessor for Authenticator);
      uint64_t v18 = v120;
      a1 = v121;
LABEL_57:
      sub_100465550((uint64_t)v155);
      goto LABEL_58;
    }
    uint64_t v122 = v26;
    sub_1005E33F0();
    if ((v137 & 0x1000000000000000) != 0)
    {
      unint64_t v34 = v137 & 0xEFFFFFFFFFFFFFFFLL;
      uint64_t v35 = v137;
      sub_1005E3410(1uLL);
      switch((v136 >> 59) & 6 | ((v35 & 0x2000000000000000) != 0))
      {
        case 1uLL:
          unint64_t v37 = v136;
          uint64_t v38 = v137;
          unint64_t v129 = v137 & 0xCFFFFFFFFFFFFFFFLL;
          unint64_t v130 = v136 & 0xCFFFFFFFFFFFFFFFLL;
          sub_1005E3410(1uLL);
          uint64_t v39 = v142;
          uint64_t v41 = v139;
          unint64_t v40 = v140;
          unint64_t v42 = v138;
          uint64_t v44 = v131;
          unint64_t v43 = v132;
          uint64_t v45 = v133;
          sub_10044CA28(v142, v140, v139, v138, v131, v132, v133, v38, v135, v37);
          unint64_t v113 = v37;
          uint64_t v46 = v135;
          sub_10044CA28(v39, v40, v41, v42, v44, v43, v45, v38, v135, v113);
          sub_100008D24(v39, v40);
          sub_100008D24(v41, v42);
          sub_100008D24(v44, v43);
          uint64_t v47 = v45;
          unint64_t v48 = v129;
          sub_100008D24(v47, v129);
          sub_100008D24(v46, v130);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1005E08B0();
          uint64_t v49 = v133;
          unint64_t v50 = v48;
          sub_1005E08B0();
          uint64_t v51 = v135;
          sub_1005E08B0();
          sub_1000094D4(v49, v50);
          unint64_t v52 = v132;
          sub_1000094D4(v44, v132);
          sub_1000094D4(v41, v42);
          sub_1000094D4(v39, v40);
          sub_1000094D4(v51, v130);
          uint64_t v112 = v51;
          unint64_t v114 = v136;
          uint64_t v53 = v39;
          unint64_t v54 = v40;
          uint64_t v55 = v41;
          unint64_t v56 = v42;
          uint64_t v57 = v44;
          unint64_t v58 = v52;
          uint64_t v59 = v49;
          goto LABEL_21;
        case 2uLL:
          sub_1005E3410(2uLL);
          unint64_t v60 = v136;
          uint64_t v61 = v135;
          uint64_t v62 = v142;
          unint64_t v63 = v140;
          unint64_t v130 = v34;
          unint64_t v65 = v138;
          uint64_t v64 = v139;
          uint64_t v67 = v131;
          unint64_t v66 = v132;
          uint64_t v68 = v133;
          sub_10044CA28(v142, v140, v139, v138, v131, v132, v133, v137, v135, v136);
          sub_100443318(v62, v63, v64, v65, v67, v66, v68, v130, v61, v60);
          sub_1005E08B0();
          goto LABEL_20;
        case 3uLL:
          Swift::UInt v69 = 3;
          goto LABEL_19;
        case 4uLL:
          Swift::UInt v36 = 4;
          goto LABEL_16;
        case 5uLL:
          Swift::UInt v69 = 5;
          goto LABEL_19;
        case 6uLL:
          Swift::UInt v69 = 6;
LABEL_19:
          sub_1005E3410(v69);
          unint64_t v60 = v136;
          uint64_t v61 = v135;
          uint64_t v62 = v142;
          unint64_t v63 = v140;
          unint64_t v130 = v34;
          unint64_t v65 = v138;
          uint64_t v64 = v139;
          uint64_t v67 = v131;
          unint64_t v66 = v132;
          uint64_t v68 = v133;
          sub_10044CA28(v142, v140, v139, v138, v131, v132, v133, v137, v135, v136);
          sub_100443318(v62, v63, v64, v65, v67, v66, v68, v130, v61, v60);
          sub_1005E1DB0();
          sub_1005E1DB0();
LABEL_20:
          uint64_t v112 = v61;
          unint64_t v114 = v60;
          uint64_t v53 = v62;
          unint64_t v54 = v63;
          uint64_t v55 = v64;
          unint64_t v56 = v65;
          uint64_t v57 = v67;
          unint64_t v58 = v66;
          uint64_t v59 = v68;
LABEL_21:
          sub_10044B008(v53, v54, v55, v56, v57, v58, v59, v137, v112, v114);
          break;
        default:
          Swift::UInt v36 = 0;
LABEL_16:
          sub_1005E3410(v36);
          unint64_t v70 = v136;
          uint64_t v71 = v142;
          uint64_t v73 = v139;
          unint64_t v72 = v140;
          uint64_t v74 = v137;
          unint64_t v75 = v138;
          uint64_t v77 = v131;
          unint64_t v76 = v132;
          uint64_t v78 = v133;
          sub_10044CA28(v142, v140, v139, v138, v131, v132, v133, v137, v135, v136);
          unint64_t v115 = v70;
          uint64_t v79 = v135;
          sub_10044CA28(v71, v72, v73, v75, v77, v76, v78, v74, v135, v115);
          sub_100008D24(v71, v72);
          sub_100008D24(v73, v75);
          sub_1005E08B0();
          sub_1005E08B0();
          sub_1000094D4(v71, v72);
          sub_1000094D4(v73, v75);
          sub_10044B008(v71, v72, v73, v75, v77, v76, v78, v74, v79, v136);
          break;
      }
    }
    else
    {
      sub_1005E3410(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005E1DB0();
      sub_1005E1DB0();
    }
    Swift::Int v80 = sub_1005E3470();
    uint64_t v81 = v134;
    uint64_t v82 = -1 << *(unsigned char *)(v134 + 32);
    unint64_t v83 = v80 & ~v82;
    uint64_t v84 = v137;
    if (((*(void *)(v141 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v83) & 1) == 0) {
      goto LABEL_56;
    }
    uint64_t v85 = ~v82;
    ++v122;
    unint64_t v123 = v137 & 0xEFFFFFFFFFFFFFFFLL;
    uint64_t v124 = ~v82;
    while (1)
    {
      uint64_t v86 = (uint64_t *)(*(void *)(v81 + 48) + 80 * v83);
      uint64_t v87 = *v86;
      unint64_t v88 = v86[1];
      uint64_t v90 = v86[2];
      unint64_t v89 = v86[3];
      uint64_t v91 = v86[7];
      if ((v91 & 0x1000000000000000) == 0) {
        break;
      }
      unint64_t v96 = v86[4];
      unint64_t v97 = v86[5];
      uint64_t v98 = v86[6];
      unint64_t v99 = v86[8];
      unint64_t v100 = v86[9];
      v156[0] = *v86;
      v156[1] = v88;
      v156[2] = v90;
      v156[3] = v89;
      v156[4] = v96;
      v156[5] = v97;
      v156[6] = v98;
      v156[7] = v91 & 0xEFFFFFFFFFFFFFFFLL;
      v156[8] = v99;
      v156[9] = v100;
      if ((v84 & 0x1000000000000000) != 0)
      {
        v157[0] = v142;
        v157[1] = v140;
        v157[2] = v139;
        v157[3] = v138;
        v157[4] = v131;
        v157[5] = v132;
        v157[6] = v133;
        v157[7] = v123;
        v157[8] = v135;
        v157[9] = v136;
        unint64_t v125 = v89;
        unint64_t v126 = v97;
        unint64_t v101 = v96;
        unint64_t v129 = v99;
        unint64_t v130 = v96;
        uint64_t v102 = v99;
        uint64_t v128 = v90;
        unint64_t v103 = v100;
        sub_10044CA28(v142, v140, v139, v138, v131, v132, v133, v84, v135, v136);
        uint64_t v104 = v90;
        unint64_t v105 = v125;
        uint64_t v106 = v101;
        unint64_t v107 = v126;
        sub_10044CA28(v87, v88, v104, v125, v106, v126, v98, v91, v102, v103);
        int v127 = sub_100455D6C((uint64_t)v156, (uint64_t)v157);
        uint64_t v85 = v124;
        sub_10044B008(v142, v140, v139, v138, v131, v132, v133, v137, v135, v136);
        sub_10044B008(v87, v88, v128, v105, v130, v107, v98, v91, v129, v103);
        uint64_t v84 = v137;
        uint64_t v81 = v134;
        if (v127) {
          goto LABEL_40;
        }
      }
LABEL_24:
      unint64_t v83 = (v83 + 1) & v85;
      if (((*(void *)(v141 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v83) & 1) == 0) {
        goto LABEL_56;
      }
    }
    if ((v84 & 0x1000000000000000) != 0) {
      goto LABEL_24;
    }
    if (v87 != v142 || v88 != v140)
    {
      char v93 = sub_1005E3290();
      uint64_t v84 = v137;
      uint64_t v81 = v134;
      if ((v93 & 1) == 0) {
        goto LABEL_24;
      }
    }
    if (v90 != v139 || v89 != v138)
    {
      char v95 = sub_1005E3290();
      uint64_t v84 = v137;
      uint64_t v81 = v134;
      if ((v95 & 1) == 0) {
        goto LABEL_24;
      }
    }
LABEL_40:
    uint64_t v25 = v81;
    sub_10044B008(v142, v140, v139, v138, v131, v132, v133, v84, v135, v136);
    uint64_t v24 = v116;
    a1 = v121;
    uint64_t v26 = v122;
    unsigned int v6 = v119;
    uint64_t v18 = v120;
  }
  while (v122 != v117);
  swift_bridgeObjectRelease_n();
LABEL_42:
  uint64_t v108 = v6[3];
  if (sub_100010180(0, v108))
  {
    sub_1004655E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Authenticator);
    LOBYTE(v143) = 0;
    goto LABEL_53;
  }
  if (sub_100010180(3u, v108))
  {
    sub_1004655E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Authenticator);
    LOBYTE(v143) = 3;
    goto LABEL_53;
  }
  sub_1004655E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Authenticator);
  char v109 = 1;
LABEL_52:
  LOBYTE(v143) = v109;
LABEL_53:
  sub_100465640((uint64_t)&v143);
LABEL_54:
  sub_10001FDF0((uint64_t)&v143, (uint64_t)v155, &qword_100715AA8);
  UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v155);
LABEL_58:
  sub_10001FDF0((uint64_t)v155, (uint64_t)v158, &qword_100715AA0);
  sub_1004655E0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for UnauthenticatedState);
  return sub_10001FDF0((uint64_t)v158, a1, &qword_100715AA0);
}

uint64_t sub_1004654EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnauthenticatedState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_100465550(uint64_t a1)
{
  *(void *)(a1 + 176) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 184) = -1;
  return result;
}

uint64_t sub_10046557C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Authenticator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004655E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100465640(uint64_t result)
{
  *(unsigned char *)(result + 184) = 1;
  return result;
}

uint64_t sub_10046564C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100465664(uint64_t result)
{
  *(unsigned char *)(result + 184) = 0;
  return result;
}

uint64_t destroy for AuthenticationSuccess()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AuthenticationSuccess(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AuthenticationSuccess(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AuthenticationSuccess(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

void *assignWithTake for AuthenticationSuccess(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[10];
  a1[9] = a2[9];
  a1[10] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[12];
  a1[11] = a2[11];
  a1[12] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[14];
  a1[13] = a2[13];
  a1[14] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[16];
  a1[15] = a2[15];
  a1[16] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[18];
  a1[17] = a2[17];
  a1[18] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[20];
  a1[19] = a2[19];
  a1[20] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[22];
  a1[21] = a2[21];
  a1[22] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationSuccess(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationSuccess(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationSuccess()
{
  return &type metadata for AuthenticationSuccess;
}

uint64_t sub_100465B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  long long v3 = *(_OWORD *)(a1 + 120);
  long long v4 = *(_OWORD *)(a1 + 152);
  unsigned char v16[8] = *(_OWORD *)(a1 + 136);
  v16[9] = v4;
  v16[10] = *(_OWORD *)(a1 + 168);
  long long v5 = *(_OWORD *)(a1 + 56);
  long long v6 = *(_OWORD *)(a1 + 88);
  v16[4] = *(_OWORD *)(a1 + 72);
  v16[5] = v6;
  v16[6] = *(_OWORD *)(a1 + 104);
  void v16[7] = v3;
  long long v7 = *(_OWORD *)(a1 + 24);
  v16[0] = *(_OWORD *)(a1 + 8);
  v16[1] = v7;
  _OWORD v16[2] = *(_OWORD *)(a1 + 40);
  v16[3] = v5;
  uint64_t v8 = *(void *)a2;
  long long v9 = *(_OWORD *)(a2 + 120);
  long long v10 = *(_OWORD *)(a2 + 152);
  v17[8] = *(_OWORD *)(a2 + 136);
  void v17[9] = v10;
  v17[10] = *(_OWORD *)(a2 + 168);
  long long v11 = *(_OWORD *)(a2 + 56);
  long long v12 = *(_OWORD *)(a2 + 88);
  v17[4] = *(_OWORD *)(a2 + 72);
  v17[5] = v12;
  v17[6] = *(_OWORD *)(a2 + 104);
  v17[7] = v9;
  long long v13 = *(_OWORD *)(a2 + 24);
  v17[0] = *(_OWORD *)(a2 + 8);
  v17[1] = v13;
  void v17[2] = *(_OWORD *)(a2 + 40);
  _OWORD v17[3] = v11;
  if (sub_10035D1D4(v2, v8)) {
    char v14 = static ServerID.__derived_struct_equals(_:_:)(v16, v17);
  }
  else {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_100465C70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000566C(&qword_100715AB0);
  __chkstk_darwin(v2);
  long long v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ClientCommand(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100465DFC(v1, v7);
  if (swift_getEnumCaseMultiPayload() == 14)
  {
    uint64_t v8 = *(void *)(v7 + *(int *)(sub_10000566C(&qword_100715AB8) + 48));
    sub_100465E60(v7, (uint64_t)v4);
    MessageIdentifierSet.count.getter();
    uint64_t v10 = v9;
    uint64_t v7 = sub_100465EC8(v8);
    swift_bridgeObjectRelease();
    uint64_t result = sub_100465F84((uint64_t)v4);
    uint64_t v12 = v10 * v7;
    if ((unsigned __int128)(v10 * (__int128)v7) >> 64 == (v10 * v7) >> 63) {
      goto LABEL_5;
    }
    __break(1u);
  }
  uint64_t result = sub_1000F898C(v7);
  uint64_t v12 = 0;
LABEL_5:
  BOOL v13 = __OFADD__(v12, 5);
  uint64_t v14 = v12 + 5;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = (unsigned __int128)((v14 - 1) * (__int128)0x6666666666666667) >> 64;
    return (v15 >> 1) + ((unint64_t)v15 >> 63);
  }
  return result;
}

uint64_t sub_100465DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCommand(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100465E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100465EC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t result = 0;
    for (uint64_t i = (unsigned int *)(a1 + 64); ; i += 10)
    {
      uint64_t v6 = *((void *)i - 2);
      uint64_t v7 = *((void *)i - 1);
      int v8 = *((unsigned __int8 *)i + 4) >> 5;
      if (v8 == 1)
      {
        unint64_t v14 = v6 - 1;
        if ((v7 & 0xFE) == 0 || v14 < 2)
        {
          BOOL v5 = __OFADD__(result++, 1);
          if (v5)
          {
            __break(1u);
            return 0;
          }
          goto LABEL_4;
        }
      }
      else if (v8 != 3)
      {
        if (v8 != 6) {
          goto LABEL_4;
        }
        unint64_t v9 = *i | ((unint64_t)*((unsigned __int8 *)i + 4) << 32);
        uint64_t v10 = *((void *)i - 4);
        uint64_t v11 = v6 | *((void *)i - 3) | v7;
        BOOL v12 = v9 == 0xC000000000 && v10 == 3;
        BOOL v13 = v12 && v11 == 0;
        if (!v13 && (v9 != 0xC000000000 || v10 != 6 || v11)) {
          goto LABEL_4;
        }
      }
      BOOL v5 = __OFADD__(result, 5);
      result += 5;
      if (v5)
      {
        __break(1u);
        return result;
      }
LABEL_4:
      if (!--v1) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_100465F84(uint64_t a1)
{
  uint64_t v2 = sub_10000566C(&qword_100715AB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for GetCapabilities(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004660B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetCapabilities()
{
  return &type metadata for GetCapabilities;
}

double sub_1004660E8@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 64) = 4;
  return result;
}

uint64_t sub_100466100@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  if (a1)
  {
    long long v4 = xmmword_1005F6950;
    char v5 = 2;
    sub_100466184((uint64_t)&v4);
    sub_10044AF04((uint64_t)&v4, (uint64_t)v6);
    UInt32.init(_:)((IMAP2Persistence::CredentialsRequestID)v6);
  }
  else
  {
    sub_10013E020((uint64_t)v6);
  }
  sub_100466190((uint64_t)v6, (uint64_t)v7);
  return sub_100466190((uint64_t)v7, a2);
}

uint64_t sub_100466184(uint64_t result)
{
  *(unsigned char *)(result + 176) = 6;
  return result;
}

uint64_t sub_100466190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000566C(&qword_100715828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004661F8()
{
  uint64_t result = sub_1005E10E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s14descr1006B94C1C6LoggerVMa();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_100466310()
{
  uint64_t v0 = sub_1005E2600();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005E25F0();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1005E16C0();
  __chkstk_darwin(v5 - 8);
  sub_100467998();
  sub_1005E16A0();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1004679D8();
  sub_10000566C(&qword_100715C20);
  sub_100467A30();
  sub_1005E2AD0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = sub_1005E2620();
  qword_100715AC0 = result;
  return result;
}

uint64_t *sub_100466510()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + qword_100762200;
  uint64_t v3 = sub_1005E10E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  sub_100448118((uint64_t)v0 + qword_100762210);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  return v0;
}

uint64_t sub_1004665F8()
{
  sub_100466510();
  return swift_deallocClassInstance();
}

uint64_t _s8VerifierCMa()
{
  return sub_1000DAF2C();
}

void sub_100466668()
{
  type metadata accessor for CertUITrustManager();
  swift_allocObject();
  CertUITrustManager.init()();
  qword_100715AC8 = v0;
}

uint64_t sub_1004666A8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v58 = a6;
  uint64_t v59 = a5;
  uint64_t v57 = a3;
  uint64_t v8 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  BOOL v12 = (char *)&v56 - v11;
  __chkstk_darwin();
  unint64_t v14 = (char *)&v56 - v13;
  uint64_t v15 = *(void *)(sub_1005E0ED0() - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v56 - v18;
  __chkstk_darwin();
  uint64_t v22 = (char *)&v56 - v20;
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v23 = v21;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, a2, v21);
      sub_100447F0C(a2, (uint64_t)v12);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v24 = sub_1005E0EB0();
      os_log_type_t v25 = sub_1005E25A0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 68158210;
        LODWORD(v60) = 2;
        sub_1005E2960();
        *(_WORD *)(v26 + 8) = 256;
        uint64_t v27 = &v12[*(int *)(v8 + 20)];
        LOBYTE(v60) = *v27;
        sub_1005E2960();
        *(_WORD *)(v26 + 11) = 2082;
        uint64_t v28 = ConnectionID.debugDescription.getter(*((unsigned int *)v27 + 1));
        uint64_t v60 = sub_100481E54(v28, v29, &v61);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118((uint64_t)v12);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%.*hhx-%{public}s] [Prompt] User allowed untrusted certificate(s) for session.", (uint8_t *)v26, 0x15u);
        uint64_t v30 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v23);
      }
      else
      {
        sub_100448118((uint64_t)v12);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v23);
        uint64_t v30 = 1;
      }
    }
    else
    {
      uint64_t v38 = v21;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, v21);
      sub_100447F0C(a2, (uint64_t)v10);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v39 = sub_1005E0EB0();
      os_log_type_t v40 = sub_1005E25A0();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 68158210;
        LODWORD(v60) = 2;
        sub_1005E2960();
        *(_WORD *)(v41 + 8) = 256;
        unint64_t v42 = &v10[*(int *)(v8 + 20)];
        LOBYTE(v60) = *v42;
        sub_1005E2960();
        *(_WORD *)(v41 + 11) = 2082;
        uint64_t v43 = ConnectionID.debugDescription.getter(*((unsigned int *)v42 + 1));
        uint64_t v60 = sub_100481E54(v43, v44, &v61);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118((uint64_t)v10);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%.*hhx-%{public}s] [Prompt] User allowed untrusted certificate(s) permanently.", (uint8_t *)v41, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100448118((uint64_t)v10);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v38);
      unint64_t v50 = *(void **)(v57 + 16);
      id v51 = objc_allocWithZone((Class)NSNumber);
      id v52 = v50;
      uint64_t v30 = 1;
      id v53 = [v51 initWithBool:1];
      NSString v54 = sub_1005E1BD0();
      [v52 setAccountProperty:v53 forKey:v54];
    }
  }
  else
  {
    uint64_t v31 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v56 - v20, a2, v21);
    sub_100447F0C(a2, (uint64_t)v14);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v32 = sub_1005E0EB0();
    os_log_type_t v33 = sub_1005E25A0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 68158210;
      LODWORD(v60) = 2;
      sub_1005E2960();
      *(_WORD *)(v34 + 8) = 256;
      uint64_t v35 = &v14[*(int *)(v8 + 20)];
      LOBYTE(v60) = *v35;
      sub_1005E2960();
      *(_WORD *)(v34 + 11) = 2082;
      uint64_t v36 = ConnectionID.debugDescription.getter(*((unsigned int *)v35 + 1));
      uint64_t v60 = sub_100481E54(v36, v37, &v61);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100448118((uint64_t)v14);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%.*hhx-%{public}s] [Prompt] User denied untrusted certificate(s).", (uint8_t *)v34, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100448118((uint64_t)v14);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v31);
    uint64_t v45 = *(void **)(v57 + 16);
    id v46 = objc_allocWithZone((Class)NSNumber);
    id v47 = v45;
    id v48 = [v46 initWithBool:0];
    NSString v49 = sub_1005E1BD0();
    [v47 setAccountProperty:v48 forKey:v49];

    uint64_t v30 = 0;
  }
  return v59(v30);
}

uint64_t sub_100466E9C(int a1, uint64_t (*a2)(uint64_t), uint64_t a3, unsigned __int8 a4, unsigned __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a6;
  uint64_t v25 = a3;
  uint64_t v26 = a2;
  _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  unint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005E1850();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (uint64_t *)((char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100715618 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_100715AC0;
  *uint64_t v18 = qword_100715AC0;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = (id)v19;
  LOBYTE(v19) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    sub_100447F0C(a8, (uint64_t)v14);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100467E7C(a4, a1, a5, v24, a7, (uint64_t)v14);
    return v26(v22);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100467088()
{
  uint64_t v1 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  __chkstk_darwin();
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([*(id *)(v0 + 16) isDirty])
  {
    uint64_t v4 = *(void **)(v0 + 16);
    uint64_t v5 = *(void **)(v0 + 24);
    sub_100447F0C(v0+ OBJC_IVAR____TtCVE15IMAP2ConnectionO16IMAP2Persistence16CertificateTrust29DefaultVerifierImplementationP33_F342119D05A6F1A070C6FAB1999158A515AccountAndStore_logger, (uint64_t)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v6 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v7 = swift_allocObject();
    sub_100468CE0((uint64_t)v3, v7 + v6);
    aBlock[4] = sub_100468E1C;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1004677D8;
    aBlock[3] = &unk_1006F4650;
    uint64_t v8 = _Block_copy(aBlock);
    id v9 = v5;
    id v10 = v4;
    swift_release();
    [v9 saveVerifiedAccount:v10 withCompletionHandler:v8];
    _Block_release(v8);
  }
  sub_100448118(v0+ OBJC_IVAR____TtCVE15IMAP2ConnectionO16IMAP2Persistence16CertificateTrust29DefaultVerifierImplementationP33_F342119D05A6F1A070C6FAB1999158A515AccountAndStore_logger);
  return v0;
}

uint64_t sub_100467258(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_1005E0ED0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin();
  uint64_t v17 = (char *)&v31 - v16;
  if ((a1 & 1) == 0)
  {
    if (a2)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
      sub_100447F0C(a3, (uint64_t)v8);
      swift_errorRetain();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v18 = sub_1005E0EB0();
      os_log_type_t v19 = sub_1005E25A0();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v32 = (void *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        uint64_t v36 = v33;
        *(_DWORD *)uint64_t v20 = 68158466;
        LODWORD(v35) = 2;
        uint64_t v34 = v12;
        sub_1005E2960();
        *(_WORD *)(v20 + 8) = 256;
        uint64_t v21 = &v8[*(int *)(v6 + 20)];
        LOBYTE(v35) = *v21;
        sub_1005E2960();
        *(_WORD *)(v20 + 11) = 2082;
        uint64_t v22 = ConnectionID.debugDescription.getter(*((unsigned int *)v21 + 1));
        uint64_t v35 = sub_100481E54(v22, v23, &v36);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118((uint64_t)v8);
        *(_WORD *)(v20 + 21) = 2112;
        uint64_t v24 = sub_1005E06E0();
        uint64_t v35 = v24;
        sub_1005E2960();
        *uint64_t v32 = v24;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "[%.*hhx-%{public}s] Failed to save account: %@", (uint8_t *)v20, 0x1Fu);
        sub_10000566C(&qword_100717A10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v14, v11);
      }
      else
      {
        swift_errorRelease();
        sub_100448118((uint64_t)v8);
        swift_errorRelease();
        swift_errorRelease();

        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v31 - v16, a3, v11);
      sub_100447F0C(a3, (uint64_t)v10);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v25 = sub_1005E0EB0();
      os_log_type_t v26 = sub_1005E25A0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 68158210;
        LODWORD(v35) = 2;
        sub_1005E2960();
        *(_WORD *)(v27 + 8) = 256;
        uint64_t v28 = &v10[*(int *)(v6 + 20)];
        LOBYTE(v35) = *v28;
        sub_1005E2960();
        *(_WORD *)(v27 + 11) = 2082;
        uint64_t v29 = ConnectionID.debugDescription.getter(*((unsigned int *)v28 + 1));
        uint64_t v35 = sub_100481E54(v29, v30, &v36);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118((uint64_t)v10);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "[%.*hhx-%{public}s] Failed to save account.", (uint8_t *)v27, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100448118((uint64_t)v10);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  return result;
}

void sub_1004677D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_100467850()
{
  sub_100467088();
  return swift_deallocClassInstance();
}

uint64_t sub_1004678A4()
{
  return _s29DefaultVerifierImplementationV15AccountAndStoreCMa();
}

uint64_t _s29DefaultVerifierImplementationV15AccountAndStoreCMa()
{
  uint64_t result = qword_100715B80;
  if (!qword_100715B80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004678F8()
{
  uint64_t result = _s14descr1006B94C1C6LoggerVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_100467998()
{
  unint64_t result = qword_100715C18;
  if (!qword_100715C18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100715C18);
  }
  return result;
}

unint64_t sub_1004679D8()
{
  unint64_t result = qword_100717920;
  if (!qword_100717920)
  {
    sub_1005E25F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717920);
  }
  return result;
}

unint64_t sub_100467A30()
{
  unint64_t result = qword_100717930;
  if (!qword_100717930)
  {
    sub_10000744C(&qword_100715C20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717930);
  }
  return result;
}

uint64_t sub_100467A8C(int a1, uint64_t (*a2)(uint64_t))
{
  if (a1 == 1) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = 2 * (a1 == 2);
  }
  return a2(v2);
}

uint64_t sub_100467AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005E0ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v26 - v12;
  if (!a2) {
    return 0;
  }
  id v14 = [objc_allocWithZone((Class)ACAccountStore) init];
  NSString v15 = sub_1005E1BD0();
  id v16 = [v14 accountWithIdentifier:v15];

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    sub_100447F0C(a3, (uint64_t)v11);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v18 = sub_1005E0EB0();
    uint64_t v19 = sub_1005E25A0();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 68158210;
      LODWORD(v28) = 2;
      sub_1005E2960();
      *(_WORD *)(v20 + 8) = 256;
      uint64_t v21 = *(int *)(v9 + 20);
      uint64_t v27 = v6;
      uint64_t v22 = &v11[v21];
      LOBYTE(v28) = v11[v21];
      sub_1005E2960();
      *(_WORD *)(v20 + 11) = 2082;
      uint64_t v23 = ConnectionID.debugDescription.getter(*((unsigned int *)v22 + 1));
      uint64_t v28 = sub_100481E54(v23, v24, &v29);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100448118((uint64_t)v11);
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v19, "[%.*hhx-%{public}s] Unable to get account.", (uint8_t *)v20, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v5);
    }
    else
    {
      sub_100448118((uint64_t)v11);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return 0;
  }
  sub_100447F0C(a3, (uint64_t)v13);
  _s29DefaultVerifierImplementationV15AccountAndStoreCMa();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v14;
  sub_100468CE0((uint64_t)v13, v17+ OBJC_IVAR____TtCVE15IMAP2ConnectionO16IMAP2Persistence16CertificateTrust29DefaultVerifierImplementationP33_F342119D05A6F1A070C6FAB1999158A515AccountAndStore_logger);
  return v17;
}

uint64_t sub_100467E7C(unsigned __int8 a1, int a2, unsigned __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v87 = a6;
  LODWORD(v86) = a2;
  int v7 = a3;
  uint64_t v85 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v79 = (uint64_t)&v78 - v10;
  __chkstk_darwin();
  uint64_t v78 = (uint64_t)&v78 - v11;
  __chkstk_darwin();
  uint64_t v82 = (uint64_t)&v78 - v12;
  __chkstk_darwin();
  uint64_t v84 = (char *)&v78 - v13;
  __chkstk_darwin();
  unint64_t v83 = (char *)&v78 - v14;
  uint64_t v15 = sub_1005E0ED0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v81 = (char *)&v78 - v19;
  __chkstk_darwin();
  Swift::Int v80 = (char *)&v78 - v20;
  __chkstk_darwin();
  uint64_t v22 = (char *)&v78 - v21;
  __chkstk_darwin();
  unint64_t v24 = (char *)&v78 - v23;
  __chkstk_darwin();
  uint64_t v26 = (char *)&v78 - v25;
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (a1 == 1)
    {
      if (v7 == 772) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t v38 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v87, v15);
      sub_100447F0C(v38, (uint64_t)v9);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v39 = sub_1005E0EB0();
      os_log_type_t v40 = sub_1005E25A0();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 68158210;
        LODWORD(v88) = 2;
        sub_1005E2960();
        *(_WORD *)(v41 + 8) = 256;
        uint64_t v42 = *(int *)(v85 + 20);
        uint64_t v86 = v15;
        uint64_t v43 = &v9[v42];
        LOBYTE(v88) = v9[v42];
        sub_1005E2960();
        *(_WORD *)(v41 + 11) = 2082;
        uint64_t v44 = ConnectionID.debugDescription.getter(*((unsigned int *)v43 + 1));
        uint64_t v88 = sub_100481E54(v44, v45, &v89);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118((uint64_t)v9);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%.*hhx-%{public}s] TLS policy not met.", (uint8_t *)v41, 0x15u);
        uint64_t v37 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100448118(v87);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v86);
        return v37;
      }

      sub_100448118((uint64_t)v9);
      sub_100448118(v38);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      return 1;
    }
    if ((v7 - 771) > 1) {
      goto LABEL_10;
    }
  }
  else if ((v7 - 771) >= 2)
  {
    goto LABEL_10;
  }
LABEL_4:
  sub_10000566C(&qword_100715C28);
  if (!(_BYTE)v86)
  {
    sub_100448118(v87);
    return 0;
  }
  if (v86 == 4)
  {
    uint64_t v46 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v24, v87, v15);
    uint64_t v47 = (uint64_t)v84;
    sub_100447F0C(v46, (uint64_t)v84);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    id v48 = sub_1005E0EB0();
    os_log_type_t v49 = sub_1005E25A0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 68158210;
      LODWORD(v88) = 2;
      uint64_t v51 = v16;
      unint64_t v83 = v24;
      sub_1005E2960();
      *(_WORD *)(v50 + 8) = 256;
      uint64_t v52 = v47 + *(int *)(v85 + 20);
      LOBYTE(v88) = *(unsigned char *)v52;
      sub_1005E2960();
      *(_WORD *)(v50 + 11) = 2082;
      uint64_t v86 = v15;
      uint64_t v53 = ConnectionID.debugDescription.getter(*(unsigned int *)(v52 + 4));
      uint64_t v88 = sub_100481E54(v53, v54, &v89);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100448118(v47);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "[%.*hhx-%{public}s] Fatal trust failure.", (uint8_t *)v50, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100448118(v46);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v83, v86);
      return 1;
    }

    sub_100448118(v47);
    sub_100448118(v46);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
    return 1;
  }
  if (v86 == 1)
  {
    uint64_t v27 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v26, v87, v15);
    uint64_t v28 = (uint64_t)v83;
    sub_100447F0C(v27, (uint64_t)v83);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v29 = sub_1005E0EB0();
    os_log_type_t v30 = sub_1005E25A0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v84 = v26;
      uint64_t v32 = v31;
      uint64_t v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 68158210;
      LODWORD(v88) = 2;
      uint64_t v33 = v16;
      sub_1005E2960();
      *(_WORD *)(v32 + 8) = 256;
      uint64_t v34 = v28 + *(int *)(v85 + 20);
      LOBYTE(v88) = *(unsigned char *)v34;
      sub_1005E2960();
      *(_WORD *)(v32 + 11) = 2082;
      uint64_t v86 = v15;
      uint64_t v35 = ConnectionID.debugDescription.getter(*(unsigned int *)(v34 + 4));
      uint64_t v88 = sub_100481E54(v35, v36, &v89);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100448118(v28);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[%.*hhx-%{public}s] Trust denied.", (uint8_t *)v32, 0x15u);
      uint64_t v37 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100448118(v27);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v84, v86);
      return v37;
    }

    sub_100448118(v28);
    sub_100448118(v27);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v26, v15);
    return 1;
  }
  if (a1 <= 1u)
  {
    uint64_t v55 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v22, v87, v15);
    uint64_t v56 = v82;
    sub_100447F0C(v55, v82);
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v57 = sub_1005E0EB0();
    os_log_type_t v58 = sub_1005E25A0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v84 = v22;
      uint64_t v89 = v60;
      *(_DWORD *)uint64_t v59 = 68158210;
      LODWORD(v88) = 2;
      uint64_t v86 = v15;
      sub_1005E2960();
      *(_WORD *)(v59 + 8) = 256;
      uint64_t v61 = v56 + *(int *)(v85 + 20);
      LOBYTE(v88) = *(unsigned char *)v61;
      sub_1005E2960();
      *(_WORD *)(v59 + 11) = 2082;
      uint64_t v62 = ConnectionID.debugDescription.getter(*(unsigned int *)(v61 + 4));
      uint64_t v88 = sub_100481E54(v62, v63, &v89);
      sub_1005E2960();
      swift_bridgeObjectRelease();
      sub_100448118(v56);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "[%.*hhx-%{public}s] Trust evaluation failed.", (uint8_t *)v59, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100448118(v55);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v84, v86);
      return 1;
    }
    goto LABEL_28;
  }
  uint64_t v55 = v87;
  switch(v86)
  {
    case 2u:
      unint64_t v70 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v80, v87, v15);
      uint64_t v71 = v78;
      sub_100447F0C(v55, v78);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      unint64_t v72 = sub_1005E0EB0();
      os_log_type_t v73 = sub_1005E25C0();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        *(_DWORD *)uint64_t v74 = 68158210;
        LODWORD(v88) = 2;
        uint64_t v86 = v15;
        sub_1005E2960();
        *(_WORD *)(v74 + 8) = 256;
        uint64_t v75 = v71 + *(int *)(v85 + 20);
        LOBYTE(v88) = *(unsigned char *)v75;
        sub_1005E2960();
        *(_WORD *)(v74 + 11) = 2082;
        uint64_t v76 = ConnectionID.debugDescription.getter(*(unsigned int *)(v75 + 4));
        uint64_t v88 = sub_100481E54(v76, v77, &v89);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118(v71);
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "[%.*hhx-%{public}s] Unspecified trust result.", (uint8_t *)v74, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100448118(v55);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v80, v86);
      }
      else
      {

        sub_100448118(v71);
        sub_100448118(v55);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v70, v15);
      }
      return 0;
    case 5u:
      uint64_t v22 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v81, v87, v15);
      uint64_t v56 = v79;
      sub_100447F0C(v55, v79);
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v57 = sub_1005E0EB0();
      os_log_type_t v64 = sub_1005E25A0();
      if (os_log_type_enabled(v57, v64))
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        *(_DWORD *)uint64_t v65 = 68158210;
        LODWORD(v88) = 2;
        uint64_t v86 = v15;
        sub_1005E2960();
        *(_WORD *)(v65 + 8) = 256;
        uint64_t v66 = v56 + *(int *)(v85 + 20);
        LOBYTE(v88) = *(unsigned char *)v66;
        sub_1005E2960();
        *(_WORD *)(v65 + 11) = 2082;
        uint64_t v67 = ConnectionID.debugDescription.getter(*(unsigned int *)(v66 + 4));
        uint64_t v88 = sub_100481E54(v67, v68, &v89);
        sub_1005E2960();
        swift_bridgeObjectRelease();
        sub_100448118(v56);
        _os_log_impl((void *)&_mh_execute_header, v57, v64, "[%.*hhx-%{public}s] Trust evaluation failed with other error.", (uint8_t *)v65, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100448118(v55);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v81, v86);
        return 1;
      }
LABEL_28:

      sub_100448118(v56);
      sub_100448118(v55);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      return 1;
    case 3u:
      sub_100448118(v87);
      return 2;
  }
  uint64_t result = sub_1005E3280();
  __break(1u);
  return result;
}

uint64_t sub_100468CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr1006B94C1C6LoggerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100468D44()
{
  uint64_t v1 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1005E0ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100468E1C(char a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(_s14descr1006B94C1C6LoggerVMa() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_100467258(a1, a2, v6);
}

uint64_t sub_100468E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100468EAC()
{
  return swift_release();
}

unsigned char *_s11TrustResultOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100468F80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11TrustResultOMa()
{
  return &_s11TrustResultON;
}

ValueMetadata *_s29DefaultVerifierImplementationVMa()
{
  return &_s29DefaultVerifierImplementationVN;
}

unint64_t sub_100468FCC()
{
  unint64_t result = qword_100715C68;
  if (!qword_100715C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715C68);
  }
  return result;
}

uint64_t CommandConnection.id.getter()
{
  return *(unsigned int *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id);
}

uint64_t CommandConnection.engineID.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_engineID);
}

uint64_t sub_100469044(uint64_t a1, void *a2)
{
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v7 = &v10[-v6];
  sub_100484EFC(a1, (uint64_t)&v10[-v6], (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_100482D54((uint64_t)v7, v8);
  swift_endAccess();
  sub_100469198((uint64_t)v5);
  sub_100484F64((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  return sub_100484F64((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
}

uint64_t sub_100469198(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionState();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = &v18[-v8 - 8];
  __chkstk_darwin(v7);
  uint64_t v11 = &v18[-v10 - 8];
  uint64_t v12 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v12, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  char v13 = _s15IMAP2Connection0B5StateO21__derived_enum_equalsySbAC_ACtFZ_0(a1, (uint64_t)v11);
  uint64_t result = sub_100484F64((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if ((v13 & 1) == 0)
  {
    sub_100484EFC(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      memcpy(v21, v9, 0x15AuLL);
      sub_100484EFC(v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        memcpy(v19, v6, 0x15AuLL);
        sub_100482DD4((uint64_t)&v21[184], (uint64_t)v20);
        if (sub_100482E30((uint64_t)v20) == 1)
        {
          sub_100483328((uint64_t)v20);
          sub_100482E3C((uint64_t)v21);
          sub_100482DD4((uint64_t)&v19[184], (uint64_t)v18);
          if (sub_100482E30((uint64_t)v18) == 1)
          {
            sub_100483328((uint64_t)v18);
            return sub_100482E3C((uint64_t)v19);
          }
          uint64_t v15 = v19;
        }
        else
        {
          sub_100482E3C((uint64_t)v19);
          uint64_t v15 = v21;
        }
        sub_100482E3C((uint64_t)v15);
      }
      else
      {
        sub_100482E3C((uint64_t)v21);
        sub_100484F64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      }
    }
    else
    {
      sub_100484F64((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    }
    uint64_t v16 = (void *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents);
    swift_beginAccess();
    if (*v16)
    {
      return sub_10046C65C(a1);
    }
    else
    {
      *uint64_t v16 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      sub_10046C65C(a1);
      return sub_10047E624();
    }
  }
  return result;
}

uint64_t CommandConnection.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  return sub_100484EFC(v3, a1, (uint64_t (*)(void))type metadata accessor for ConnectionState);
}

uint64_t sub_1004694E8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v6, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_100482D54(a1, v6);
  swift_endAccess();
  sub_100469198((uint64_t)v5);
  sub_100484F64(a1, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  return sub_100484F64((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConnectionState);
}

uint64_t CommandConnection.recentErrors.getter()
{
  return sub_1004696D4();
}

uint64_t (*sub_100469604())()
{
  return j__swift_endAccess_0;
}

uint64_t sub_100469660(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t CommandConnection.pathAttributes.getter()
{
  return sub_1004696D4();
}

uint64_t sub_1004696D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandConnection.constraint.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  sub_1005E33F0();
  sub_1005E3410(0);
  unint64_t v3 = sub_1005E3470() & ~(-1 << *(unsigned char *)(v2 + 32));
  return (*(void *)(v2 + ((v3 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v3) & 1;
}

uint64_t CommandConnection.underlyingID.getter()
{
  return *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_underlyingID);
}

uint64_t CommandConnection.createdAt.getter()
{
  return *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_createdAt);
}

uint64_t CommandConnection.__allocating_init(id:engineID:configuration:makeCredentials:getPushInformation:finishPushRegistration:queue:delegate:reportDataTransfer:test_overrideIdleRefreshInterval:)(Swift::UInt32 a1, Swift::UInt8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,double a23,char a24)
{
  uint64_t v23 = swift_allocObject();
  CommandConnection.init(id:engineID:configuration:makeCredentials:getPushInformation:finishPushRegistration:queue:delegate:reportDataTransfer:test_overrideIdleRefreshInterval:)(a1, a2, a3, a4, a5, a6, a7, a8, *(double *)&a17, *(double *)&a21, v24, v25, v26, v27, v28, v29, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24 & 1);
  return v23;
}

uint64_t CommandConnection.init(id:engineID:configuration:makeCredentials:getPushInformation:finishPushRegistration:queue:delegate:reportDataTransfer:test_overrideIdleRefreshInterval:)(Swift::UInt32 a1, Swift::UInt8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,double a23,unsigned __int8 a24)
{
  uint64_t v17 = v16;
  uint64_t v66 = a8;
  uint64_t v77 = a7;
  uint64_t v65 = a6;
  uint64_t v64 = a4;
  uint64_t v76 = a3;
  LODWORD(v71) = a24;
  uint64_t v69 = a21;
  uint64_t v78 = a22;
  uint64_t v70 = a19;
  uint64_t v63 = a20;
  uint64_t v75 = sub_1005E1670();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v22 = __chkstk_darwin(v75);
  os_log_type_t v73 = (uint64_t *)((char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  unint64_t v72 = (uint64_t *)((char *)&v63 - v24);
  uint64_t v25 = type metadata accessor for ConnectionConfiguration(0);
  __chkstk_darwin(v25 - 8);
  double v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate;
  *(void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter) = 0;
  uint64_t v29 = v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands;
  *(void *)uint64_t v29 = _swiftEmptyArrayStorage;
  *(void *)(v29 + 8) = 0;
  *(unsigned char *)(v29 + 16) = 1;
  *(void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors) = _swiftEmptyArrayStorage;
  *(void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_enqueuedEvents) = 0;
  *(void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_pathAttributes) = &_swiftEmptySetSingleton;
  *(void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_dataTransferReportCollector) = 0;
  os_log_type_t v30 = (_OWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idle);
  *os_log_type_t v30 = 0u;
  v30[1] = 0u;
  v30[2] = 0u;
  *(_OWORD *)((char *)v30 + 44) = 0u;
  *(void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_stuckConnectionCheckTimer) = 0;
  *(_DWORD *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) = a1;
  *(unsigned char *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_engineID) = a2;
  *(void *)(v17 + 24) = a18;
  sub_100484EFC(a3, (uint64_t)v27, type metadata accessor for ConnectionConfiguration);
  type metadata accessor for Connection(0);
  swift_allocObject();
  id v31 = a18;
  v32.id.rawValue = a2;
  v33.rawValue = a1;
  uint64_t v34 = sub_10048EDB4((uint64_t)v27, v31, v32, v33);
  sub_100484EFC(v34 + OBJC_IVAR____TtC15IMAP2Connection10Connection_logger, v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  *(void *)(v28 + 8) = v63;
  swift_unknownObjectWeakAssign();
  uint64_t v35 = (void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_makeCredentials);
  *uint64_t v35 = v64;
  v35[1] = a5;
  uint64_t v68 = a5;
  unint64_t v36 = (void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_getPushInformation);
  uint64_t v37 = v77;
  *unint64_t v36 = v65;
  v36[1] = v37;
  uint64_t v38 = (void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_finishPushRegistration);
  *uint64_t v38 = v66;
  v38[1] = a17;
  uint64_t v67 = a17;
  uint64_t v39 = v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  uint64_t v40 = enum case for NWConnection.State.setup(_:);
  uint64_t v41 = sub_1005E12C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  type metadata accessor for ConnectionState();
  swift_storeEnumTagMultiPayload();
  *(void *)(v17 + 16) = v34;
  *(void *)(v34 + OBJC_IVAR____TtC15IMAP2Connection10Connection_delegate + 8) = &off_1006F47A8;
  swift_unknownObjectWeakAssign();
  uint64_t v42 = *(void *)(v34 + OBJC_IVAR____TtC15IMAP2Connection10Connection_connection);
  _s14descr1006B9401C27DataTransferReportCollectorCMa();
  swift_allocObject();
  id v43 = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v44 = v78;
  swift_retain();
  *(void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_dataTransferReportCollector) = sub_1004B0C58(v42, a1, (uint64_t)v43, v69, v44);
  swift_release();
  if (v71) {
    a23 = 285.0;
  }
  id v46 = v43;
  swift_retain();
  sub_100482A10(v46, (uint64_t)&v80, a23);
  long long v71 = v80;
  uint64_t v47 = v81;
  uint64_t v48 = v82;
  uint64_t v49 = v83;
  uint64_t v50 = v84;
  uint64_t v51 = v85;
  int v52 = v86;

  swift_release();
  uint64_t v53 = v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idle;
  swift_beginAccess();
  *(_OWORD *)uint64_t v53 = v71;
  *(void *)(v53 + 16) = v47;
  *(void *)(v53 + 24) = v48;
  *(void *)(v53 + 32) = v49;
  *(void *)(v53 + 40) = v50;
  *(void *)(v53 + 48) = v51;
  *(_DWORD *)(v53 + 56) = v52;
  swift_release();
  uint64_t v54 = (uint64_t)v72;
  *unint64_t v72 = 9;
  uint64_t v55 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 104);
  uint64_t v57 = v75;
  v56(v54, enum case for DispatchTimeInterval.seconds(_:), v75);
  uint64_t v58 = (uint64_t)v73;
  *os_log_type_t v73 = 1;
  v56(v58, v55, v57);
  uint64_t v59 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100482CD4;
  aBlock[5] = v59;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100469020;
  aBlock[3] = &unk_1006F4758;
  uint64_t v60 = _Block_copy(aBlock);
  type metadata accessor for RestartableTimer();
  swift_allocObject();
  swift_retain();
  uint64_t v61 = RestartableTimer.init(queue:repeating:leeway:closure:)(v46, v54, v58, v60);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_100484F64(v76, type metadata accessor for ConnectionConfiguration);
  swift_release();
  swift_release();
  *(void *)(v17 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_stuckConnectionCheckTimer) = v61;
  swift_release();
  return v17;
}

uint64_t sub_100469FEC()
{
  uint64_t v0 = type metadata accessor for ConnectionState();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1005E1850();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = *(void **)(result + 24);
    *uint64_t v6 = v9;
    (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
    id v10 = v9;
    LOBYTE(v9) = sub_1005E1860();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
    if (v9)
    {
      uint64_t v11 = v8 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
      swift_beginAccess();
      sub_100484EFC(v11, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      LOBYTE(v11) = ConnectionState.isClosedOrCancelled.getter();
      sub_100484F64((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      if ((v11 & 1) == 0)
      {
        sub_10047F768();
        sub_10047FEFC();
      }
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10046A1E4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

Swift::Void __swiftcall CommandConnection.start()()
{
  uint64_t v1 = sub_1005E1680();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E16C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = sub_100482CF4;
  uint64_t v12 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100469020;
  aBlock[3] = &unk_1006F4780;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1005E16A0();
  v10[1] = _swiftEmptyArrayStorage;
  sub_100484968((unint64_t *)&unk_100717760, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000566C(&qword_100715C98);
  sub_100482CF8();
  sub_1005E2AD0();
  sub_1005E2610();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

uint64_t sub_10046A4A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005E1850();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 24);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_dataTransferReportCollector))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  swift_retain();
  sub_1004B0840();
  swift_release();
  uint64_t result = sub_10048C8DC();
  if (*(void *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_stuckConnectionCheckTimer))
  {
    swift_retain();
    RestartableTimer.start()();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall CommandConnection.cancel()()
{
  uint64_t v1 = v0;
  uint64_t v40 = type metadata accessor for ConnectionState();
  uint64_t v2 = __chkstk_darwin(v40);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v37 = (char *)&v36 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v38 = (uint64_t)&v36 - v8;
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)&v36 - v9;
  uint64_t v41 = sub_1005E0ED0();
  uint64_t v10 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005E1850();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char **)((char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void **)(v1 + 24);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  LOBYTE(v20) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    uint64_t v22 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v15, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v41);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v23 = sub_1005E0EB0();
    os_log_type_t v24 = sub_1005E25C0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 68158210;
      LODWORD(v42) = 2;
      unint64_t v36 = v4;
      sub_1005E2960();
      *(_WORD *)(v25 + 8) = 256;
      uint64_t v26 = v22 + *(int *)(v13 + 20);
      LOBYTE(v42) = *(unsigned char *)v26;
      sub_1005E2960();
      *(_WORD *)(v25 + 11) = 2082;
      uint64_t v27 = ConnectionID.debugDescription.getter(*(unsigned int *)(v26 + 4));
      uint64_t v42 = sub_100481E54(v27, v28, v43);
      uint64_t v4 = v36;
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[%.*hhx-%{public}s] Cancel.", (uint8_t *)v25, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v41);
    uint64_t v29 = (uint64_t)v39;
    sub_1005E12F0();
    uint64_t v30 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_100484EFC(v30, v29, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v31 = v38;
    sub_100484EFC(v29, v38, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload >= 3)
    {
      if (EnumCaseMultiPayload - 3 < 2)
      {
        sub_100484F64(v29, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        return;
      }
    }
    else
    {
      sub_100484F64(v31, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    }
    sub_100484F64(v29, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v33 = (uint64_t)v37;
    swift_storeEnumTagMultiPayload();
    sub_100484EFC(v30, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    swift_beginAccess();
    sub_100482D54(v33, v30);
    swift_endAccess();
    sub_100469198(v4);
    sub_100484F64(v33, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    sub_100484F64((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v34 = OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_stuckConnectionCheckTimer;
    if (*(void *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_stuckConnectionCheckTimer))
    {
      swift_retain();
      RestartableTimer.stop()();
      swift_release();
    }
    *(void *)(v1 + v34) = 0;
    swift_release();
    uint64_t v35 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idle;
    swift_beginAccess();
    if (*(void *)(v35 + 40))
    {
      swift_retain();
      RestartableTimer.stop()();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t CommandConnection.isCancelledOrFailed.getter()
{
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v3, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 3:
      return result;
    case 4:
    case 5:
      uint64_t result = 1;
      break;
    default:
      sub_100484F64((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t CommandConnection.canRunCommand(_:)()
{
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v2 = &v18[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v4 = &v18[-v3];
  uint64_t v5 = sub_1005E1850();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void **)(v0 + 24);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v12 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    sub_100484EFC(v12, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    sub_100484EFC((uint64_t)v4, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload - 3 >= 3)
    {
      if (EnumCaseMultiPayload >= 2)
      {
        sub_100484F64((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        sub_100484F64((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
        uint64_t v14 = (uint64_t *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_runningCommands);
        swift_beginAccess();
        uint64_t v15 = *v14;
        swift_bridgeObjectRetain();
        Swift::Int v16 = sub_1004D4724();
        sub_1004D4D9C();
        uint64_t v17 = sub_100465C70();
        sub_1004E2874(v16, v17, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      sub_100484F64((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    }
    sub_100484F64((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CommandConnection.send(_:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for OutboundContent(0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005E1850();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = *(void **)(v1 + 24);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    __chkstk_darwin(result);
    *(void *)&v14[-16] = v1;
    *(void *)&v14[-8] = a1;
    uint64_t v13 = sub_10046B690((void (*)(unint64_t))sub_100482DB8);
    sub_100484EFC(a1, (uint64_t)v5, type metadata accessor for ClientCommand);
    swift_storeEnumTagMultiPayload();
    sub_10048D264(v13, v5);
    sub_100484F64((uint64_t)v5, type metadata accessor for OutboundContent);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10046B2D8(uint64_t a1)
{
  return swift_endAccess();
}

IMAP2Connection::CommandID __swiftcall CommandConnection.makeNextCommandID()()
{
  uint64_t v1 = sub_1005E1850();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 24);
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = sub_1005E1860();
  IMAP2Connection::CommandID v7 = (IMAP2Connection::CommandID)(*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    uint64_t v8 = (_DWORD *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter);
    swift_beginAccess();
    uint64_t v9 = (*v8 + 1) & 0xFFFFFF;
    *uint64_t v8 = v9;
    return (IMAP2Connection::CommandID)(*(unsigned int *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) | (unint64_t)(v9 << 32));
  }
  else
  {
    __break(1u);
  }
  return v7;
}

Swift::Void __swiftcall CommandConnection.flush()()
{
  uint64_t v1 = sub_1005E0D40();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005E1850();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v0 + 24);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v11 = *(void *)(v0 + 16);
    uint64_t v12 = OBJC_IVAR____TtC15IMAP2Connection10Connection_logger;
    uint64_t v13 = (unsigned __int8 *)(v11 + *(int *)(_s14descr1006B94C1C6LoggerVMa() + 20) + v12);
    OSSignpostID.init(engine:kind:connectionID:)(*v13, 1, *((_DWORD *)v13 + 1));
    sub_1004BA438((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10046B690(void (*a1)(unint64_t))
{
  uint64_t v4 = sub_1005E1850();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v1 + 24);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = sub_1005E1860();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v11 = (int *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_commandCounter);
    swift_beginAccess();
    int v12 = *v11;
    uint64_t v13 = (*v11 + 1) & 0xFFFFFF;
    *uint64_t v11 = v13;
    unint64_t v14 = *(unsigned int *)(v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_id) | (unint64_t)(v13 << 32);
    a1(v14);
    if (v2)
    {
      *uint64_t v11 = v12;
      swift_willThrow();
    }
    swift_endAccess();
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CommandConnection.selectedMailbox.getter()
{
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v2 = &v10[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v3 = v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v3, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100484F64((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    return 0;
  }
  memcpy(v11, v2, 0x15AuLL);
  sub_100482DD4((uint64_t)&v11[184], (uint64_t)v12);
  int v4 = sub_100482E30((uint64_t)v12);
  if (!v4)
  {
    sub_100483328((uint64_t)v12);
    sub_100482E3C((uint64_t)v11);
    return 0;
  }
  if (v4 == 1)
  {
    uint64_t v5 = (uint64_t *)sub_100483328((uint64_t)v12);
    sub_100482DD4((uint64_t)&v11[184], (uint64_t)v10);
    uint64_t v6 = sub_100483328((uint64_t)v10);
    sub_100483338(v6);
    sub_100482E3C((uint64_t)v11);
    uint64_t v7 = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)sub_100483328((uint64_t)v12);
    sub_100482DD4((uint64_t)&v11[184], (uint64_t)v10);
    sub_100483328((uint64_t)v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100482E3C((uint64_t)v11);
  }
  swift_bridgeObjectRetain();
  sub_1004850D0((uint64_t)&v11[184], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100482FC8);
  return v7;
}

Swift::Bool __swiftcall CommandConnection.selectMailbox(name:)(NIOIMAPCore2::MailboxName name)
{
  uint64_t v2 = v1;
  Swift::UInt32 value = name._hashValue._value;
  rawValue = name.bytes._rawValue;
  type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v8 = &v12[-v7];
  uint64_t v9 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  sub_100484EFC(v9, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  v13.bytes._rawValue = rawValue;
  v13._hashValue._Swift::UInt32 value = value;
  LOBYTE(rawValue) = ConnectionState.selectMailbox(name:)(v13);
  sub_100484EFC(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_100482D54((uint64_t)v8, v9);
  swift_endAccess();
  sub_100469198((uint64_t)v6);
  sub_100484F64((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484F64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  uint64_t v10 = v2 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
  sub_100484EFC(v9, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  swift_retain();
  sub_1004AF370(v10, v8, v2);
  swift_release();
  sub_100484EFC(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  swift_beginAccess();
  sub_100482D54((uint64_t)v8, v9);
  swift_endAccess();
  sub_100469198((uint64_t)v6);
  sub_100484F64((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484F64((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  return rawValue & 1;
}

void CommandConnection.replaceDelegate(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v61 = a2;
  uint64_t v62 = a1;
  uint64_t v64 = type metadata accessor for ConnectionState();
  __chkstk_darwin();
  uint64_t v59 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v51 - v5;
  uint64_t v6 = sub_1005E0ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v65 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v60 = _s14descr1006B94C1C6LoggerVMa();
  __chkstk_darwin();
  uint64_t v58 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  NIOIMAPCore2::MailboxName v13 = (char *)&v51 - v12;
  uint64_t v14 = sub_1005E1850();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v17 = (uint64_t *)((char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v3 + 24);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = sub_1005E1860();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    uint64_t v20 = v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v54 = v7 + 32;
    v53(v10, v13, v6);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    id v21 = sub_1005E0EB0();
    os_log_type_t v22 = sub_1005E2590();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = v6;
    uint64_t v55 = v20;
    uint64_t v56 = v7;
    if (v23)
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v57 = v6;
      v66[0] = v26;
      *(_DWORD *)uint64_t v25 = 68158210;
      LODWORD(v68) = 2;
      uint64_t v52 = v3;
      sub_1005E2960();
      *(_WORD *)(v25 + 8) = 256;
      uint64_t v27 = v20 + *(int *)(v60 + 20);
      LOBYTE(v68) = *(unsigned char *)v27;
      sub_1005E2960();
      *(_WORD *)(v25 + 11) = 2082;
      uint64_t v28 = ConnectionID.debugDescription.getter(*(unsigned int *)(v27 + 4));
      uint64_t v68 = sub_100481E54(v28, v29, v66);
      uint64_t v3 = v52;
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[%.*hhx-%{public}s] Setting new delegate (better path available).", (uint8_t *)v25, 0x15u);
      swift_arrayDestroy();
      uint64_t v24 = v57;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    v30(v10, v24);
    uint64_t v31 = v65;
    *(void *)(v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate + 8) = v61;
    swift_unknownObjectWeakAssign();
    uint64_t v32 = v3 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
    swift_beginAccess();
    uint64_t v33 = v32;
    uint64_t v34 = v63;
    sub_100484EFC(v33, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      memcpy(v66, v34, 0x15AuLL);
      sub_100482E3C((uint64_t)v66);
      uint64_t v35 = *(void *)(v3 + 16) + OBJC_IVAR____TtC15IMAP2Connection10Connection_configuration;
      char v36 = *(unsigned char *)(v35 + *(int *)(type metadata accessor for ConnectionConfiguration(0) + 36));
      __uint64_t v37 = static MonotonicTime.now()();
      uint64_t v38 = type metadata accessor for UnauthenticatedStateWithTasks();
      uint64_t v39 = (uint64_t)v59;
      *(void *)&v59[*(int *)(v38 + 28)] = _swiftEmptyArrayStorage;
      *(unsigned char *)uint64_t v39 = v36;
      *(void *)(v39 + 8) = v37;
      type metadata accessor for UnauthenticatedState();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_100469198(v39);
      sub_100484F64(v39, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    }
    else
    {
      sub_100484F64((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      uint64_t v40 = v55;
      uint64_t v41 = v58;
      sub_100484EFC(v55, v58, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
      v53(v31, (char *)v41, v24);
      swift_retain_n();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      variable initialization expression of Engine.isProcessingUpdates();
      uint64_t v42 = sub_1005E0EB0();
      os_log_type_t v43 = sub_1005E25A0();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v57 = v24;
        v66[0] = v45;
        *(_DWORD *)uint64_t v44 = 68158210;
        LODWORD(v67) = 2;
        sub_1005E2960();
        *(_WORD *)(v44 + 8) = 256;
        uint64_t v46 = v40 + *(int *)(v60 + 20);
        LOBYTE(v67) = *(unsigned char *)v46;
        sub_1005E2960();
        *(_WORD *)(v44 + 11) = 2082;
        uint64_t v47 = ConnectionID.debugDescription.getter(*(unsigned int *)(v46 + 4));
        uint64_t v67 = sub_100481E54(v47, v48, v66);
        sub_1005E2960();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "[%.*hhx-%{public}s] Trying to replace delegate on unauthenticated connection. Closing.", (uint8_t *)v44, 0x15u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v49 = v57;
        uint64_t v50 = v65;
      }
      else
      {

        swift_release_n();
        uint64_t v50 = v31;
        uint64_t v49 = v24;
      }
      v30(v50, v49);
      CommandConnection.cancel()();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t CommandConnection.deinit()
{
  swift_release();

  sub_100484F64(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
  sub_1004836A4(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_delegate);
  swift_bridgeObjectRelease();
  sub_100484F64(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t CommandConnection.__deallocating_deinit()
{
  CommandConnection.deinit();
  return swift_deallocClassInstance();
}

uint64_t Response.logIdentifier.getter()
{
  return 0;
}

Swift::Void __swiftcall CommandConnection.collectDataTransferReport()()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_dataTransferReportCollector))
  {
    swift_retain();
    sub_1004B0A9C();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10046C65C(uint64_t a1)
{
  uint64_t v3 = sub_10000566C(&qword_100715F70);
  __chkstk_darwin(v3 - 8);
  uint64_t v91 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = type metadata accessor for ConnectionEvent(0);
  __chkstk_darwin(v90);
  uint64_t v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1005E0ED0();
  uint64_t v96 = *(void *)(v98 - 8);
  uint64_t v7 = __chkstk_darwin(v98);
  unint64_t v97 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v89 = (char *)&v86 - v9;
  uint64_t v92 = _s14descr1006B94C1C6LoggerVMa();
  uint64_t v10 = __chkstk_darwin(v92);
  uint64_t v93 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  NIOIMAPCore2::MailboxName v13 = (char *)&v86 - v12;
  uint64_t v14 = type metadata accessor for ConnectionState();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v95 = (uint64_t)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  id v19 = (char *)&v86 - v18;
  __chkstk_darwin(v17);
  id v21 = (char *)&v86 - v20;
  uint64_t v22 = sub_10000566C(&qword_100715F78);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10046D3B4();
  uint64_t v94 = v1;
  uint64_t v26 = v1 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_state;
  swift_beginAccess();
  uint64_t v27 = *(int *)(v23 + 56);
  uint64_t v28 = a1;
  uint64_t v29 = v26;
  unint64_t v99 = v25;
  uint64_t v30 = (uint64_t)v25;
  uint64_t v31 = (uint64_t)&v25[v27];
  sub_100484EFC(v28, v30, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  sub_100484EFC(v26, v31, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v44 = v91;
    sub_100484EFC(v31, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char v45 = *v19;
      __uint64_t v46 = static MonotonicTime.now()();
      uint64_t v47 = (uint64_t)v6;
      *uint64_t v6 = v45;
      type metadata accessor for ConnectionEvent.FailureReason(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v33 = v94;
      unint64_t v48 = (void *)(v94 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_recentErrors);
      swift_beginAccess();
      sub_100484EFC(v47, (uint64_t)v44, type metadata accessor for ConnectionEvent);
      sub_10047A934(v46, v44);
      sub_100007A48((uint64_t)v44, &qword_100715F70);
      sub_100484F64(v47, type metadata accessor for ConnectionEvent);
      swift_endAccess();
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = *v48;
      swift_bridgeObjectRetain();
      *(_DWORD *)(v49 + 24) = *(_DWORD *)ConnectionID.invalid.unsafeMutableAddressor();
      *(void *)(v49 + 32) = &_swiftEmptySetSingleton;
      *(void *)(v49 + 40) = &_swiftEmptySetSingleton;
      sub_10046DE48(v49 | 0x1000000000000000);
      swift_release();
      sub_1005E12F0();
      sub_100484F64((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      sub_100484F64(v31, (uint64_t (*)(void))type metadata accessor for ConnectionState);
LABEL_10:
      uint64_t v50 = v97;
      uint64_t v37 = v98;
      uint64_t v51 = v96;
      goto LABEL_26;
    }
LABEL_8:
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      int v52 = swift_getEnumCaseMultiPayload();
      uint64_t v33 = v94;
      uint64_t v50 = v97;
      if (v52 == 4)
      {
        sub_1005E12F0();
        sub_100484F64((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for ConnectionState);
      }
      else
      {
        sub_100007A48((uint64_t)v99, &qword_100715F78);
      }
      uint64_t v37 = v98;
      uint64_t v51 = v96;
      goto LABEL_26;
    }
    sub_100484F64(v31, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v33 = v94;
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload != 2) {
    goto LABEL_8;
  }
  uint64_t v91 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31;
  sub_100484EFC(v31, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  memcpy(v102, v21, 0x15AuLL);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v88 = v26;
    uint64_t v90 = v28;
    uint64_t v33 = v94;
    uint64_t v34 = v94 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    sub_100484EFC(v94 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, (uint64_t)v13, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    uint64_t v35 = v96;
    char v36 = v89;
    uint64_t v37 = v98;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v89, v13, v98);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    uint64_t v38 = sub_1005E0EB0();
    os_log_type_t v39 = sub_1005E2590();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      v101[0] = v87;
      *(_DWORD *)uint64_t v40 = 68158210;
      LODWORD(v100[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v40 + 8) = 256;
      uint64_t v41 = v34 + *(int *)(v92 + 20);
      LOBYTE(v100[0]) = *(unsigned char *)v41;
      sub_1005E2960();
      *(_WORD *)(v40 + 11) = 2082;
      uint64_t v42 = ConnectionID.debugDescription.getter(*(unsigned int *)(v41 + 4));
      v100[0] = sub_100481E54(v42, v43, v101);
      uint64_t v37 = v98;
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[%.*hhx-%{public}s] Connection did authenticate.", (uint8_t *)v40, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v35 + 8))(v89, v37);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    }
    uint64_t v51 = v35;
    uint64_t v29 = v88;
    uint64_t v64 = v102[0];
    swift_bridgeObjectRetain();
    uint64_t v65 = Capability.idle.unsafeMutableAddressor();
    uint64_t v66 = *v65;
    uint64_t v67 = v65[1];
    unint64_t v68 = v65[2];
    char v69 = *((unsigned char *)v65 + 24);
    swift_bridgeObjectRetain();
    char v70 = sub_100010B9C(v66, v67, v68, v69, v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = v33 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_idle;
    uint64_t result = swift_beginAccess();
    if (!*(void *)(v71 + 40))
    {
      __break(1u);
      return result;
    }
    if (v70) {
      __uint64_t v73 = 2;
    }
    else {
      __uint64_t v73 = 1;
    }
    sub_1004CBC54(v73);
    swift_endAccess();
    unint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v64;
    *(_OWORD *)(v74 + 136) = *(_OWORD *)&v102[15];
    *(_OWORD *)(v74 + 152) = *(_OWORD *)&v102[17];
    *(_OWORD *)(v74 + 168) = *(_OWORD *)&v102[19];
    *(_OWORD *)(v74 + 184) = *(_OWORD *)&v102[21];
    *(_OWORD *)(v74 + 72) = *(_OWORD *)&v102[7];
    *(_OWORD *)(v74 + 88) = *(_OWORD *)&v102[9];
    *(_OWORD *)(v74 + 104) = *(_OWORD *)&v102[11];
    *(_OWORD *)(v74 + 120) = *(_OWORD *)&v102[13];
    *(_OWORD *)(v74 + 24) = *(_OWORD *)&v102[1];
    *(_OWORD *)(v74 + 40) = *(_OWORD *)&v102[3];
    *(_OWORD *)(v74 + 56) = *(_OWORD *)&v102[5];
    swift_bridgeObjectRetain();
    sub_100086B44((uint64_t)&v102[1]);
    sub_10046D764(v74);
    swift_release();
    sub_100482E3C((uint64_t)v102);
    sub_100484F64((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    sub_100484F64((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v50 = v97;
    uint64_t v28 = v90;
  }
  else
  {
    sub_100482DD4((uint64_t)&v102[23], (uint64_t)v101);
    int v53 = sub_100482E30((uint64_t)v101);
    uint64_t v33 = v94;
    uint64_t v37 = v98;
    uint64_t v51 = v96;
    if (!v53)
    {
      uint64_t v54 = (uint64_t *)sub_100483328((uint64_t)v101);
      uint64_t v55 = *v54;
      if (*v54)
      {
        uint64_t v57 = v54[3];
        uint64_t v56 = v54[4];
        uint64_t v90 = v28;
        uint64_t v59 = v54[1];
        unint64_t v58 = v54[2];
        uint64_t v60 = swift_allocObject();
        *(void *)(v60 + 16) = v55;
        *(_DWORD *)(v60 + 24) = v59;
        *(void *)(v60 + 32) = v58;
        *(void *)(v60 + 40) = v57;
        uint64_t v61 = v60 | 0x5000000000000000;
        *(void *)(v60 + 48) = v56;
        sub_1004850D0((uint64_t)&v102[23], (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_100485144);
        swift_bridgeObjectRetain();
        sub_100485030(v58, v57, v56);
        unint64_t v62 = v61;
        uint64_t v29 = v26;
        uint64_t v37 = v98;
        sub_10046D764(v62);
        swift_bridgeObjectRelease();
        uint64_t v51 = v96;
        swift_release();
        unint64_t v63 = v58;
        uint64_t v28 = v90;
        sub_10048316C(v63, v57, v56);
      }
      else
      {
        sub_100482DD4((uint64_t)&v102[23], (uint64_t)v100);
        uint64_t v75 = sub_100483328((uint64_t)v100);
        sub_100484FD8(*(void *)v75, *(void *)(v75 + 8), *(void *)(v75 + 16), *(void *)(v75 + 24), *(void *)(v75 + 32));
      }
    }
    sub_100482E3C((uint64_t)v102);
    sub_100484F64((uint64_t)v91, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    sub_100484F64((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for ConnectionState);
    uint64_t v50 = v97;
  }
LABEL_26:
  uint64_t v76 = v95;
  sub_100484EFC(v29, v95, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  unint64_t v77 = ConnectionState.mailboxSelectionPayload(old:)(v28);
  sub_100484F64(v76, (uint64_t (*)(void))type metadata accessor for ConnectionState);
  if ((~v77 & 0xF000000000000007) != 0)
  {
    uint64_t v78 = v33 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger;
    uint64_t v79 = v93;
    sub_100484EFC(v33 + OBJC_IVAR____TtC15IMAP2Connection17CommandConnection_logger, v93, (uint64_t (*)(void))_s14descr1006B94C1C6LoggerVMa);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v50, v79, v37);
    swift_retain_n();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    variable initialization expression of Engine.isProcessingUpdates();
    long long v80 = sub_1005E0EB0();
    os_log_type_t v81 = sub_1005E2590();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = swift_slowAlloc();
      v102[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 68158210;
      LODWORD(v101[0]) = 2;
      sub_1005E2960();
      *(_WORD *)(v82 + 8) = 256;
      uint64_t v83 = v78 + *(int *)(v92 + 20);
      LOBYTE(v101[0]) = *(unsigned char *)v83;
      sub_1005E2960();
      *(_WORD *)(v82 + 11) = 2082;
      uint64_t v84 = ConnectionID.debugDescription.getter(*(unsigned int *)(v83 + 4));
      v101[0] = sub_100481E54(v84, v85, v102);
      sub_1005E2960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "[%.*hhx-%{public}s] Mailbox selection changed.", (uint8_t *)v82, 0x15u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v51 + 8))(v97, v98);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v37);
    }
    sub_10046D764(v77);
    sub_100484FC4(v77);
  }
  sub_10046FD8C();
  return sub_10046D764(0x8000000000000010);
}